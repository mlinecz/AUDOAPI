<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.2.1 (Build 801_3U)" ts="2021-02-08 10:37:58">
<Class name="ALVA.AUDO.API.Ciselniky">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65598,50087.474108</TimeChanged>
<TimeCreated>65597,52661.851063</TimeCreated>

<Method name="NaplnPodleDat">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s isok=##class(ALVA.AUDO.API.Ciselniky).NaplnPodleDat(.sys,.in,.out)
	// VSTUP
    // in("id")=id ciselniku
    // in("hrl")=horlog, ke kteremu brat data
	// VYSTUP:
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
        s id=$g(in("id"))
        s hrl=$g(in("hrl"))
        //osetreni vstupnich prom.
        i (id=18)&('hrl) s err="chybi parametr: hrl" zt
        i (id=36)&('hrl) s err="chybi parametr: hrl" zt
        //pracovni global
        s mywglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mywglb
        //poznamky z turnusu 
        i id=18 {    
	        // vyhledani turnusu
	        k arri
			s arri("glb")=mywglb
			s arri("turpl",2)=hrl
			s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt "merr"
			s zp="" f {
				s zp=$o(@mywglb@(zp)) i zp="" q
				s tu="" f {
					s tu=$o(@mywglb@(zp,tu)) i tu="" q
					s hrltu="" f {
						s hrltu=$o(@mywglb@(zp,tu,hrltu)) i hrltu="" q
						k arrtu
						s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrltu,"",.arrtu) i +err zt "merr"
						s tm="" f {
							s tm=$o(arrtu("arr","tur",tm)) i tm="" q
							s idcin=$g(arrtu("arr","tur",tm,"dta",2))
							i (idcin=8) {
								s txt=$g(arrtu("arr","tur",tm,"dta",12))
								i txt'="" {
									s err=$$sCisItm^OBapiED(idfa,nmsp,18,txt,"","","") i +err zt "merr"
								}
							}
						}
					}
				}
			}
        }
        //prejezdy
        i id=36 {
	        // vyhledani turnusu
			k arri
			s arri("glb")=mywglb
			s arri("turpl",2)=hrl
			s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt "merr"
			s zp="" f {
				s zp=$o(@mywglb@(zp)) i zp="" q
				s tu="" f {
					s tu=$o(@mywglb@(zp,tu)) i tu="" q
					s hrltu="" f {
						s hrltu=$o(@mywglb@(zp,tu,hrltu)) i hrltu="" q
						k arrtu
						s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrltu,"",.arrtu) i +err zt "merr"
						s tm="" f {
							s tm=$o(arrtu("arr","tur",tm)) i tm="" q
							s idcin=$g(arrtu("arr","tur",tm,"dta",2))
							i (idcin=4)!(idcin=5)!(idcin=6) {
								s idzstod=$g(arrtu("arr","tur",tm,"dta",9))
								s idzstdo=$g(arrtu("arr","tur",tm,"dta",10))
								s mm=$g(arrtu("arr","tur",tm,"dta",4))
								s km=$g(arrtu("arr","tur",tm,"dta",3))
								s err=$$sCisItm^OBapiED(idfa,nmsp,36,(idzstod_"~"_idzstdo),(km_"~"_mm),"","") i +err zt "merr"
							}
						}
					}
				}
			}
        }   
 		k @mywglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="PrecislujLokalniZast">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//k in,out s in("id1")=1 s in("id2")=989898 w ##class(ALVA.AUDO.API.Ciselniky).PrecislujLokalniZast(.sys,.in,.out)
	// VSTUP
    // in("id1")=puvodni id lokakni zastavky
    // in("id2")=nove id lokakni zastavky
	// VYSTUP:
	// out("msg",cnt)=...
	//
	s ret=$$$OK
	s err=""
	s transakce=""
	$$$FROMSERVER
	try {
        //vstupni parametry
 		s id1=$g(in("id1")) i id1="" s err="id1=" zt
 		s id2=$g(in("id2")) i id2="" s err="id2=" zt
 		// 
 		tstart  s transakce=1
 	  	k myarr s err=$$isCisItm^OBapiED(idfa,nmsp,3,id2,"",.myarr) i +err zt
 	  	//pod novym cislem zastavky zastavka neexistuje, prepisu tam puvodni
 	  	i $g(myarr)=0 {
	 	  	k myarr
	 	  	s err=$$gCisItm^OBapiED(idfa,nmsp,3,id1,"",.myarr) i err zt
	 	  	s myval=$g(myarr("arr",id1))
	 	  	s err=$$sCisItm^OBapiED(idfa,nmsp,3,id2,myval,"","") i err zt
 	  	}
		//precislovani spoju
 	  	s err=$$chngSpLocZst^OBapiED(idfa,nmsp,id1,id2,"","") i err zt
		//precislovani turnusu
 	  	s err=$$chngTurLocZst^OBapiED(idfa,nmsp,id1,id2,"","") i err zt
 		//precislovani nastaveni pro ztizene prostredi 
 		s err=$$chngZtzPracSetLocZst^OBapiED(idfa,nmsp,id1,id2,"","") i err zt
 		//smazu puvodni zastavku
 	  	k myarr
 	  	s err=$$dCisItm^OBapiED(idfa,nmsp,3,id1,"",.myarr) i err zt
	 	i ($g(myarr("stt"))=1) {
		 	s out("msg",$i(out("msg")))="zastávka byla přečíslována"
		 	tcommit
		 	s transakce=""
	 	}
	 	else {
 	  		s out("msg",$i(out("msg")))="zastávka nebyla přečíslována"_" "_$g(myarr("msg",1)) 	
 	  		trollback 1
 	  		s transakce=""
		}
	}
	catch (ex) {
		i +$g(transakce) trollback 1
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.IO.Prytanis">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65782,78308.354819</TimeChanged>
<TimeCreated>65771,71584.964876</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.IO.Prytanis).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    w ##class(ALVA.AUDO.API.IO.Prytanis).ExportDoklady(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="ExportDoklady">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("dir")=adresar, kam udelat vystupni soubor
	// VYSTUP:
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//global pro data
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//zprava pro udalosti 
		k myarrmsg
		//nastaveni obdobi + jedno dopredi + jedno dozadu
		k myarrobd s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarrobd) i +err zt
		s rrrrmm=$g(myarrobd("act"))
		s myarrmsg(1)=rrrrmm
		i rrrrmm'="" {
			k myarri,wrk
			s myarri("rrmm",(rrrrmm#10000))=""
			//jedno dopredu
			s rrrr=rrrrmm\100 s mm=rrrrmm#100
			s mm=mm+1 i mm>12 {
				s mm=1
				s rrrr=rrrr+1
			}
			s myarri("rrmm",((rrrr*100+mm)#10000))=""
			s myarrmsg(2)=(rrrr*100+mm)
			//jedno dozadu
			s rrrr=rrrrmm\100 s mm=rrrrmm#100
			s mm=mm-1 i mm<1 {
				s mm=12
				s rrrr=rrrr-1
			}
			s myarri("rrmm",((rrrr*100+mm)#10000))=""
			s myarrmsg(3)=(rrrr*100+mm)
			s err=$$lDz^OBapiED(idfa,nmsp,.myarri,.wrk) i +err zt
			s zp="" f {
				s zp=$o(^CacheTempJB(wrk,zp)) i zp="" q
				s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
				s rrmm="" f {
					s rrmm=$o(^CacheTempJB(wrk,zp,rrmm)) i rrmm="" q
					s rrrrmm=$$rrrrmm^OBapiED(rrmm)
					s doc="" f {
						s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) i doc="" q
						k myarr s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.myarr) i +err zt
						//ne zaskolovani a pruvodci
						i ($g(myarr("dta",7))["Z")!($g(myarr("dta",7))["P") continue					
						s hrlbeg=$g(myarr("dta",4))
						s rz=$g(myarr("dta",6)) i rz="-" continue
						s ns=$g(myarr("dta",16))
						s os=$o(myarr("osc",""))
						s km=$g(myarr("arr","tuv",22))
						s minpr=$g(myarr("arr","tuv",17))
						s minji=$g(myarr("arr","tuv",1))
						s minbeg=$j($o(myarr("arr","tur","")),0,0)
						s minend=$o(myarr("arr","tur",""),-1)
						i minend'="" {
							 s minend=$g(myarr("arr","tur",minend,"dta",1))
						}
						s hrlend=(hrlbeg+(minend\1440)) s minend=minend#1440
						//externi id vozidla
						s extrzId=##class(ALVA.VOZIDLA.MLAPI).VehicleGetExtId(sysnmsp,rz)
						//
						s val=""
						s $li(val,1)="d-"_idprv_"-"_rrmm_"-"_doc
						s $li(val,2)=(rrrrmm#100)_"."_(rrrrmm\100)
						s dat=$$nd^OBapiED(hrlbeg,0) s dd=$p(dat,".",1) s mm=$p(dat,".",2) s rrrr=$p(dat,".",3)
						s hhmin=$j($$mh^OBapiED(minbeg),0,2) s hh=$p(hhmin,".",1) s min=$p(hhmin,".",2)
						s $li(val,3)=((((((((rrrr*100)+mm)*100)+dd)*100)+hh)*100)+min)
						s dat=$$nd^OBapiED(hrlend,0) s dd=$p(dat,".",1) s mm=$p(dat,".",2) s rrrr=$p(dat,".",3)
						s hhmin=$j($$mh^OBapiED(minend),0,2) s hh=$p(hhmin,".",1) s min=$p(hhmin,".",2)
						s $li(val,4)=((((((((rrrr*100)+mm)*100)+dd)*100)+hh)*100)+min)
						s $li(val,5)=ns
						s $li(val,6)=extrzId
						s $li(val,7)=os
						s $li(val,8)=km
						s $li(val,9)=minpr
						s $li(val,10)=minji
						s $li(val,11)=rz
						s @myglb@($i(@myglb))=$lts(val,";")
					}
				}
			}
			k ^CacheTempJB(wrk) k wrk
			s qsj=$$qsj^OBapiED()
			s err=$$lSj^OBapiED(idfa,nmsp,.myarri,.wrk) i +err zt
			s zp="" f {
				s zp=$o(^CacheTempJB(wrk,zp)) i zp="" q
				s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
				s rrmm="" f {
					s rrmm=$o(^CacheTempJB(wrk,zp,rrmm)) i rrmm="" q
					s rrrrmm=$$rrrrmm^OBapiED(rrmm)
					s doc="" f {
						s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) i doc="" q
						k myarr s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.myarr) i +err zt
						s hrlbeg=$g(myarr("dta",6))
						s hrlend=$g(myarr("dta",7)) i hrlend<hrlbeg s hrlend=hrlbeg
						s rz=$g(myarr("dta",8)) i rz="-" continue
						s ns=$g(myarr("dta",43))
						s os=$o(myarr("osc",""))
						s km=$g(myarr("dta",16))+$g(myarr("dta",17))+$g(myarr("dta",18))
						s minbeg=$g(myarr("dta",57))
						s minend=$g(myarr("dta",58)) i minend<minbeg s minend=minbeg
						s minji=$g(myarr("dta",12))
						s minpr=$g(myarr("dta",14))
						//externi id vozidla
						s extrzId=##class(ALVA.VOZIDLA.MLAPI).VehicleGetExtId(sysnmsp,rz)
						//
						s val=""
						s $li(val,1)="s-"_idprv_"-"_rrmm_"-"_(doc-qsj)
						s $li(val,2)=(rrrrmm#100)_"."_(rrrrmm\100)
						s dat=$$nd^OBapiED(hrlbeg,0) s dd=$p(dat,".",1) s mm=$p(dat,".",2) s rrrr=$p(dat,".",3)
						s hhmin=$j($$mh^OBapiED(minbeg),0,2) s hh=$p(hhmin,".",1) s min=$p(hhmin,".",2)
						s $li(val,3)=((((((((rrrr*100)+mm)*100)+dd)*100)+hh)*100)+min)
						s dat=$$nd^OBapiED(hrlend,0) s dd=$p(dat,".",1) s mm=$p(dat,".",2) s rrrr=$p(dat,".",3)
						s hhmin=$j($$mh^OBapiED(minend),0,2) s hh=$p(hhmin,".",1) s min=$p(hhmin,".",2)
						s $li(val,4)=((((((((rrrr*100)+mm)*100)+dd)*100)+hh)*100)+min)
						s $li(val,5)=ns
						s $li(val,6)=extrzId
						s $li(val,7)=os
						s $li(val,8)=km
						s $li(val,9)=minpr
						s $li(val,10)=minji
						s $li(val,11)=rz
						s @myglb@($i(@myglb))=$lts(val,";")
					}
				}
			}
			k ^CacheTempJB(wrk) k wrk
		}
		//zapis do adresare
		s dir=$g(in("dir")) s filename=$tr($h,",","_")_".csv"
		i dir'="" {
			i $e(dir,$l(dir))'="\" s dir=dir_"\"
			s file=##class(%Stream.FileCharacter).%New()
            s file.Filename=dir_"\"_filename
            s file.TranslateTable="CP1250"
			s mycnt="" f {
				s myval="" s mycnt=$o(@myglb@(mycnt),1,myval) i mycnt="" q
				d file.WriteLine(myval)
			}
			s sc=file.%Save()
			i $$$ISERR(sc) s err=$system.Status.GetErrorText(sc) ztrap
		}
		//
		k myarrev
		s myarrev("id")="AUDO|1015"
		s myarrev("dsc")="Export dokladů pro Prytanis"
		s myarrev("key","OBD")=$g(myarrmsg(1))
		s myarrev("msgmail",$i(arri("msgmail")))="export dokladů za období "_$g(myarrmsg(3))_", "_$g(myarrmsg(1))_", "_$g(myarrmsg(2))_", "
		s err=##class(ALVA.AUDO.Udalosti).CreateEvent(.sys,.myarrev,"") i err zt		
		k myarrev
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.Import">
<IncludeCode>ALVALIBRARY,ALVAEDFORMS,ALVAEDREPORTS</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,37282.688357</TimeChanged>
<TimeCreated>65531,45987.225504</TimeCreated>

<Method name="GetImportTemplateTypes">
<Description>
Nacte seznam importnich sablon</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&err:%String,IdFa:%String,inList:%String]]></FormalSpec>
<Implementation><![CDATA[
	#; <Parametry>
	#; IdFa			Id firmy
	#; inList		Vstupni parametry $LB
	#;					1	Vystupni global ve formatu
	#;						@gOut(indexSablony)=$lb(id,nazev)
	#;
	try {
		s gOut=$lg(inList,1)
		i gOut'="" {
			s @gOut@($i(@gOut))=$lb(11001,"Spoje, import přirážky PHM")
		}
	} catch ex {
		s err=$$$GetStack
	}
]]></Implementation>
</Method>

<Method name="GetImportTemplateParams">
<Description>
Nacte seznam polozek dane importni sablony</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&err:%String,IdFa:%String,inList:%String]]></FormalSpec>
<Implementation><![CDATA[
	#; <Parametry>
	#; IdFa			Id firmy
	#; inList		Vstupni parametry $LB
	#;					1	Id sablony
	#;					2	Vystupni global ve formatu
	#;						@gOut(indexPolozky)=$lb(id,nazev,typ[1=cislo],2=text,jeVyzadovana[0/1])
	#;
	try {
		s template=$lg(inList,1)
		s gOut=$lg(inList,2)
		i gOut'="" {
			//spoje, import prirazky PHM
			i template=11001 {
         		s @gOut@($i(@gOut))=$lb(1,"Číslo linky",$$$ItemTypeText,$$$ItemAttrOptional,$$$CodebookTypeNone)
         		s @gOut@($i(@gOut))=$lb(2,"Číslo spoje",$$$ItemTypeText,$$$ItemAttrOptional,$$$CodebookTypeNone)
         		s @gOut@($i(@gOut))=$lb(3,"Přirážka PHM",$$$ItemTypeText,$$$ItemAttrOptional,$$$CodebookTypeNone)
			}
		}
		
	} catch ex {
		s err=$$$GetStack
	}
]]></Implementation>
</Method>

<Method name="HandleData">
<Description>
Zpracuje naimportovana data</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&in:%String,&out:%String]]></FormalSpec>
<Implementation><![CDATA[
	#; <Parametry>
	#; in				Vstupni parametry
	#;						in("IdFa")				Id firmy
	#;						in("Template")			Sablona $LB
	#;							1	IdSablony
	#;							2	IdAgendy
	#;						in("Import")			Import $LB
	#;							1	DataIndex
	#;						in("User")				Uzivatel $LB
	#;							1	Id
	#;							2	LoginName
	#;							3	FullName
	#; out			Vystupni parametry
	#;						out("Status")			Stav $LB
	#;							1	Id stavu				[1=ok,2=varovani,3=chyba,4=informace]
	#;							2	Zprava				[textovy popis]
	#;							3	Zobrazit				[0=ne,1=ano]
	#;							4	TimeStamp			[casove razitko dd.MM.yyyy HH:mm:ss]
	#; <Vraci>
	#; sc				%Status
	#;
	$$$InitializeMethodEx("ALVAAUDO")
	s sc=$$$OK
	try {
		s IdFa=$g(in("IdFa"))
		s template=$lg(in("Template"),1)
		s agenda=$lg(in("Template"),2)
		s dataIndex=$lg(in("Import"),1)
		s user=$g(in("User"))
		//
		s nmsp="" k myarr d ##class(ALVA.EDISON.Main).GetApplicationInfo(-1,.myarr,IdFa) s nmsp=$g(myarr(0)) k myarr
		
		#; Nactu definici importni sablony...
		s gIn="",gOut="^||tempALVAEDIMPORT("""_workID_""",""template"")"
		d ##class(ALVA.EDREPORTS.MLAPI).LoadImportTemplate(.err,IdFa,agenda,template,"",gIn,gOut)
		if err'="" ztrap
		s TypSablonyID=$lg($g(^||tempALVAEDIMPORT(workID,"template","data")),2)
		
		#; Naimportovana data prevedeu na normalizovany tvar...
		s gIn="",gOut="^||tempALVAAUDO("""_workID_""",""import"")"
		d ##class(ALVA.EDREPORTS.MLAPI).NormalizeImportTemplateData(.err,IdFa,$lb(dataIndex),gIn,gOut)
		if err'="" ztrap
		
		#; Nactu ciselniky...
		
		#; Proverim data...
		/*
		s row=""
		for {
			s row=$o(^||tempALVAAUDO(workID,"import","data",row),1,list) q:row=""
			s option=$lg(list,1)
			s state=$$$BigStateTypeOk s stateMessage="OK"
			//kontrola spravnosti polozek - Zpracování čerpání PHM
			i TypSablonyID=11001 {
				s datum="" s cas="" s rz=""
				s col="" for {
					s col=$o(^||tempALVAAUDO(workID,"import","data",row,"col",col),1,list) q:col=""
					s value=$lg(list,1)
					//datum
					i col=1 {
						s datum=value
						i '(datum?1.2N1"."1.2N1"."1.4N) {
							s state=$$$BigStateTypeError s stateMessage="datum není ve tvaru dd.mm.rrrr"
						}
					}
					//cas
					i col=2 {
						s cas=value
						s cas=$p(cas,":",1,3)
						i '((cas?1.2N1":"1.2N)!(cas?1.2N1":"1.2N1":"1.2N)) {
							s state=$$$BigStateTypeError s stateMessage="čas není ve tvaru hh:mm:ss nebo hh:mm"
						}
					}
					//rz
					i col=3 {
						s rz=value
						s rz=$tr(rz," -","")
						i rz="" s state=$$$BigStateTypeError s stateMessage="není RZ"
					}
				}
				//stale ok, kontrola na id zaznamu
				i ((datum'="")&(cas'="")&(rz'=""))&(state=$$$BigStateTypeOk) {
					s hrl=$$$DN(datum)
					s sec=$$$HHMMSSTOSS(cas)
					i $o(^[nmsp]ALVA.MHD.CPHM(IdFa,1,"IDX",1,1,2,rz,hrl,sec,""))'="" {
						s state=$$$BigStateTypeInformation s stateMessage="záznam je v db. evidován, nebude znovu načten"
					}
				}		
			}	
			s ^||tempALVAAUDO(workID,"import","data",row,"state")=$lb(state,stateMessage)
		}
		*/
		#; Ulozim data do importni sablony...
		s gIn="^||tempALVAAUDO("""_workID_""",""import"")",gOut="" s horTimeStamp=$h
		d ##class(ALVA.EDREPORTS.MLAPI).SaveImportTemplateData(.err,IdFa,$lb(agenda,template,1,horTimeStamp,user),gIn,gOut)
		if err'="" ztrap
		
		s timeStamp=$tr($zdt(horTimeStamp,4),"/",".")
		s out("Status")=$lb($$$BigStateTypeOk,"",0,timeStamp)
	} catch ex {
		s err=$$$GetStack
		s sc=$$$ERROR($$$GeneralError,err)
	}
	k ^||tempALVAAUDO(workID)
	quit sc
]]></Implementation>
</Method>

<Method name="WriteData">
<Description>
Zapise naimportovana data</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&in:%String,&out:%String]]></FormalSpec>
<Implementation><![CDATA[
	#; <Parametry>
	#; in				Vstupni parametry
	#;						in("IdFa")				Id firmy
	#;						in("Template")			Sablona $LB
	#;							1	IdSablony
	#;							2	IdAgendy
	#;						in("Import")			Import $LB
	#;							1	DataIndex
	#;						in("User")				Uzivatel $LB
	#;							1	Id
	#;							2	LoginName
	#;							3	FullName
	#; out			Vystupni parametry
	#;						out("Status")			Stav $LB
	#;							1	Id stavu				[1=ok,2=varovani,3=chyba,4=informace]
	#;							2	Zprava				[textovy popis]
	#;							3	Zobrazit				[0=ne,1=ano]
	#;							4	TimeStamp			[casove razitko dd.MM.yyyy HH:mm:ss]
	#; <Vraci>
	#; sc				%Status
	#;
	$$$InitializeMethodEx("ALVAAUDO")
	s sc=$$$OK
	try {
		s IdFa=$g(in("IdFa"))
		s template=$lg(in("Template"),1)
		s agenda=$lg(in("Template"),2)
		s dataIndex=$lg(in("Import"),1)
		s user=$g(in("User"))
		#; Nastavim sys
		k sys
	   	s sys("U","delimiter")=$c(0)
      	s sys("U","IdFa")=IdFa
      	s sys("U","SystemDB")=##class(ALVA.EDISON.Main).GetSystemDB()
      	s nmsp="" k myarr d ##class(ALVA.EDISON.Main).GetApplicationInfo(-1,.myarr,IdFa) s nmsp=$g(myarr(0)) k myarr
      	s sys("U","DATA")=nmsp
      	s sys("U","MLP")=$lg(user,1)
      	s sys("U","loginName")=$lg(user,2)
      	s sys("U","fullName")=$lg(user,3)
		#; Nactu definici importni sablony...
		s gIn="",gOut="^||tempALVAEDIMPORT("""_workID_""",""template"")"
		d ##class(ALVA.EDREPORTS.MLAPI).LoadImportTemplate(.err,IdFa,agenda,template,"",gIn,gOut)
		if err'="" ztrap
		s TypSablonyID=$lg($g(^||tempALVAEDIMPORT(workID,"template","data")),2)
		#; Nactu naimportovana data...
		s gIn="",gOut="^||tempALVAAUDO("""_workID_""")"
		d ##class(ALVA.EDREPORTS.MLAPI).LoadImportTemplateData(.err,IdFa,$lb(agenda,template),gIn,gOut)
		if err'="" ztrap
		#;Nactu ciselniky...
		#;Zapisu data...
		/*
		s row=""
			for {
				s row=$o(^||tempALVAAUDO(workID,"data",row),1,list) q:row=""
				s option=$lg(list,1)
				s state=$$$BigStateTypeOk,stateMessage="OK"
				//Zpracování čerpání PHM
				i TypSablonyID=11001 {
					s col=""
					k ^||ML("ARR"),^||ML("IN"),^||ML("OUT"),^||ML("OBJ")
					k myarr
					for {
						s col=$o(^||tempALVAAUDO(workID,"data",row,"col",col),1,list) q:col=""
						s value=$lg(list,1)
						s myarr(col)=value
					}
					s datum=$g(myarr(1))
					s cas=$g(myarr(2))
					s rz=$g(myarr(3))
					s mnozstvi=$g(myarr(4))
					s os=$g(myarr(5))
					s jm=$g(myarr(6))
					//konverze dat
					s datum=$$$NEDD($$$DN(datum)) s hrl=$$$EDDN(datum)
					s rz=$tr(rz," -","")
					s cas=$p(cas,":",1,3) s sec=$$$HHMMSSTOSS(cas)
					//zaznam je v databazi jiz evidovan 
					i $o(^[nmsp]ALVA.MHD.CPHM(IdFa,1,"IDX",1,1,2,rz,hrl,sec,""))'="" continue
					//=================================
					s myval=""
					s $li(myval,1)=""
					s $li(myval,2)=0
					s $li(myval,3)=datum
					s $li(myval,4)=cas
					s $li(myval,5)=rz
					s $li(myval,6)=mnozstvi
					s $li(myval,7)=os
					s $li(myval,8)=jm
					s ^||ML("IN")=myval
					s isok=##class(ALVA.MHD.CerpaniPHM).SaveItem(.sys)
					i 'isok s state=$$$BigStateTypeError,stateMessage=isok
				}
				s ^||tempALVAAUDO(workID,"data",row,"state")=$lb(state,stateMessage)
			}
			*/
		#; Ulozim data sablony...
		s gIn="^||tempALVAAUDO("""_workID_""",""write"")",gOut="" s horTimeStamp=$h
		d ##class(ALVA.EDREPORTS.MLAPI).SaveImportTemplateData(.err,IdFa,$lb(agenda,template,2,horTimeStamp,user),gIn,gOut)
		if err'="" ztrap
		
		s timeStamp=$tr($zdt(horTimeStamp,4),"/",".")
		s out("Status")=$lb($$$BigStateTypeOk,"",0,timeStamp)
	} catch ex {
		s err=$$$GetStack
		s sc=$$$ERROR($$$GeneralError,err)
	}
	k ^||tempALVAAUDO(workID)
	quit sc
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.LinkySpoje">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65714,77150.115611</TimeChanged>
<TimeCreated>65498,51704.073596</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.LinkySpoje).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    s in("datum")="10.12.2020"
    w ##class(ALVA.AUDO.API.LinkySpoje).CanBeEdited(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="ListLinka">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	
	// VYSTUP:
	// out("dta",linka)=""
	
	s ret=$$$OK
	s err="" k out
	$$$FROMSERVER
	try {
		s err=$$lLi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
		m out("dta")=myarr
		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP
    // in("provoz",provoz)="" = pokud je nadefinovano, berou se spoje jen z uvedene provozovny
    // in("linka")=spoje jen z linky (cast cisla linky, vratim linky, jejichz nazev zacina na ...)
    // in("linka",linka)=spoje jen z linek (cele cislo linky)
    // in("spoj",spoj)=konkretni spoje z linek (cele cislo spoje)
 	// in("platikDatu")=$h = je-li def, pak vratim cas.var.spoju platnou k datu (jeden)
 	// in("platikDatuADal")=$h = je-li def, pak vratim cas.var.spoju platne k datu a dalsi (muze jich byt vice)
 	// in("uzamceno")=0/1  = spoje nezamcene/zamcene proti prevodu z jr, neni-li def, pak vse
 	// in("nepouzite)=0/1 = spoje vse / pouze nepouzite
 	// in("posilove")=0/1 = spoje vse / pouze posilove
 	// in("glb")=glb pro prenos dat
	// VYSTUP:
	// @glb@("dta",idx,"dta"...)=... - data spoje
	// @glb@("dta",idx,"id")=id 		- id spoje
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
        s myglb=$g(in("glb")) k @myglb
        // vyhledani spoju
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        k arri,arro
		s arri("glb")=mylglb
		m arri("prv")=in("provoz")
		i $g(in("provoz"))'="" s arri("prv",$g(in("provoz")))=""
		m arri("li")=in("linka")
		m arri("sp")=in("spoj")
	    i $g(in("platikDatu")) s arri("sppl",1)=$g(in("platikDatu"))
	    i $g(in("platikDatuADal")) s arri("sppl",2)=$g(in("platikDatuADal"))
	    m arri("par",1)=in("uzamceno")
	    m arri("par",2)=in("nepouzite")
	    m arri("par",3)=in("posilove")
 		s err=$$lSp^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
	 	s li="" f {
			s li=$o(@mylglb@(li)) i li="" q
 			s sp="" f {
	 			s sp=$o(@mylglb@(li,sp)) i sp="" q
 				s hrl="" f {
	 				s hrl=$o(@mylglb@(li,sp,hrl)) i hrl="" q
 					k myarr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.myarr) i +err zt
 					k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
 					s myinx=$i(@myglb@("dta"))
 					m @myglb@("dta",myinx,"dta")=myarr
 					s @myglb@("dta",myinx,"id")=li_"|"_sp_"|"_hrl
 				}
 			}
 		}
 		k @mylglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id spoje (li|sp|hrl)
	// VYSTUP:
	// out("dta",... - data spoje
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s li=$p($g(in("id")),"|",1) s sp=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		k myarr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.myarr) i +err zt
		k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		m out("dta")=myarr
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id spoje (li|sp|hrl)
	// in("dta",... - data spoje
	// VYSTUP:
	// out("id")=id
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s li=$p($g(in("id")),"|",1) s sp=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		k myarr m myarr=in("dta")
		//datova konverze 
		k arri s arri("par",1)=1 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		// aktualizace data
 		s myarr("dta",11)=+$h
 		s err=$$sSp^OBapiED(idfa,nmsp,li,sp,hrl,.myarr,"") i +err zt
 		s out("id")=$g(in("id"))
 		/*
 		//sherlock
 		k arri,arro
		s arri("par",1)="AD"
		s arri("par",2)=104 	//editace
		s arri("par",5)=$h
		s arri("par",6)=mlp_"~"_fullname
		s arri("par",10)=li
		s arri("par",11)=sp
		s arri("par",17)=hrl
		s arri("par",18)=""	//skupina
		s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
		*/
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="DataConversion">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par",1)=0 get / 1 set
	// arr ... data spoje
	
	// VYSTUP:
	// arr ... data spoje
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s typ=$g(in("par",1))
		//get
		i typ=0 {
			// platnost pro stare spoje, pokud nema tpl a dpl, pokusim se je odhadnout podle hexa znaku
 			i $g(arr("dta",16))="" s arr("dta",16)=$p($$cnvPlHTplDpl^OBapiED($g(arr("dta",8))),"~",1)
 			i $g(arr("dta",17))="" s arr("dta",17)=$p($$cnvPlHTplDpl^OBapiED($g(arr("dta",8))),"~",2)
 			//konverze prepravniho systemu do pole
 			i $g(arr("dta",12))'="" {
	 			//pro stare spoje, kde nejsou tarifni km
	 			s mykm=$g(arr("dta",15)) i 'mykm s mykm=$g(arr("dta",5))
	 			s arr("arr","prs",$g(arr("dta",12)))=mykm
	 			s arr("dta",12)=""
 			}
		}
		//set
		i typ=1 {
			// aktualizace platnosti pro stare spoje
 			s arr("dta",8)=$$pldHex^OBapiED($g(arr("dta",17)))_$p($$pltHex^OBapiED($g(arr("dta",16))),"~",1)
 			//km spoje
 			s arr("dta",5)=$g(arr("dta",15))
 			//vymazani prazdnych platnosti
 			s idomz="" f {
	 			s idomz=$o(arr("arr","omz",idomz)) i idomz="" q
	 			s val=$g(arr("arr","omz",idomz))
	 			i val="" k arr("arr","omz",idomz)
 			}
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataConversionToJRWin">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//s isok=##class(ALVA.AUDO.API.LinkySpoje).DataConversionToJRWin("",in,.arr)
	// konverze platnosti spoje do okna na editaci (klient), okno je soucasti projektu JR 
	// VSTUP:
	// in:
 	//  in pole spoje
 	// VYSTUP:
 	// arr:
 	//  arr("arr",cnt)=data
 	//
 	
	s ret=$$$OK
	s err=""
	k arr
	$$$FROMSERVER
	try {
		// tydenni
		s val="000000000"
		i $g(in("dta",16))["1" s $e(val,1)=1
		i $g(in("dta",16))["2" s $e(val,2)=1
		i $g(in("dta",16))["3" s $e(val,3)=1
		i $g(in("dta",16))["4" s $e(val,4)=1
		i $g(in("dta",16))["5" s $e(val,5)=1
		i $g(in("dta",16))["6" s $e(val,6)=1
		i $g(in("dta",16))["7" s $e(val,7)=1
		i $g(in("dta",16))["X" s $e(val,8)=1
		i $g(in("dta",16))["+" s $e(val,9)=1
		s arr("arr",$i(arr("arr")))="PLATNOSTI_TYDENNI"_"~"_val
		//dlouhodoba
		s val=0
		i $g(in("dta",17))=4 s val=1
		i $g(in("dta",17))=5 s val=2
		s arr("arr",$i(arr("arr")))="PLATNOSTI_DLOUHODOBA"_"~"_val
		//datumove
		f idomz=11,12,13,14,15,22 {
			i idomz=11 s txidomz="PLATNOSTI_JEDE_JEN"
		 	i idomz=12 s txidomz="PLATNOSTI_JEDE_TAKE"
		 	i idomz=13 s txidomz="PLATNOSTI_JEDE" 
		 	i idomz=14 s txidomz="PLATNOSTI_JEDE_SUDE"
		 	i idomz=15 s txidomz="PLATNOSTI_JEDE_LICHE" 
		 	i idomz=22 s txidomz="PLATNOSTI_NEJEDE"
		 	s valomz=$g(in("arr","omz",idomz))
		 	s valomz=$p(valomz,"@",2)
		 	f cnt=1:1 {
			 	s val=$p(valomz,"#",cnt) i val="" q
		 		i (idomz=11)!(idomz=12) s val=$p(val,":",1)
		 		i (idomz=13)!(idomz=14)!(idomz=15)!(idomz=22) {
			 		s val=$p(val,":",1,2)
		 			i $p(val,":",2)="" {
			 			 s $p(val,":",2)=$p(val,":",1)
		 			}
		 		}
		 		s val=$tr(val,":","-")
		 		s arr("arr",$i(arr("arr")))=txidomz_"~"_val
		 	}
		} 
		// poznamka ke spoji
		s val=$p($g(in("arr","omz",41)),"@",2)
		i val'="" s arr("arr",$i(arr("arr")))="PLATNOSTI_POZNAMKY"_"~/"_val
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataConversionFromJRWin">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//s isok=##class(ALVA.AUDO.API.LinkySpoje).DataConversionToJRWin("",in,.arr)
	// konverze platnosti spoje z okna na editaci (klient), okno je soucasti projektu JR 
	// VSTUP:
	// in:
	// in("arr",cnt)=data
 	// 
 	// VYSTUP:
 	// arr:
 	//  arr ... data spoje
 	//
 	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s tpl="" s dpl=1 k arr11 k arr12 k arr13 k arr14 k arr15 k arr22 k arr41
		s cnt="" f {
			s cnt=$o(in("arr",cnt)) i cnt="" q
			s val=$g(in("arr",cnt))
			i $p(val,"~",1)="PLATNOSTI_TYDENNI" {
				s val=$p(val,"~",2) d
 				s tpl=""
 				i $e(val,1)=1 s tpl=tpl_1
 				i $e(val,2)=1 s tpl=tpl_2
 				i $e(val,3)=1 s tpl=tpl_3
 				i $e(val,4)=1 s tpl=tpl_4
 				i $e(val,5)=1 s tpl=tpl_5
 				i $e(val,6)=1 s tpl=tpl_6
 				i $e(val,7)=1 s tpl=tpl_7 
 				i $e(val,8)=1 s tpl=tpl_"X"
  				i $e(val,9)=1 s tpl=tpl_"+"
			}
 			i $p(val,"~",1)="PLATNOSTI_DLOUHODOBA" {
	 			s val=$p(val,"~",2)
 				s dpl=1
 				i val=1 s dpl=4
 				i val=2 s dpl=5
 			}
 			i $p(val,"~",1)="PLATNOSTI_JEDE_JEN" s arr11($i(arr11))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_JEDE_TAKE" s arr12($i(arr12))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_JEDE" s arr13($i(arr13))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_JEDE_SUDE" s arr14($i(arr14))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_JEDE_LICHE" s arr15($i(arr15))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_NEJEDE" s arr22($i(arr22))=$tr($p(val,"~",2),"-","~")
 			i $p(val,"~",1)="PLATNOSTI_POZNAMKY" s arr41($i(arr41))=$p(val,"~",2,$l(val,"~"))
		}
		//zabaleni poli
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,0,.arr11) i +err zt
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,0,.arr12) i +err zt
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,1,.arr13) i +err zt
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,1,.arr14) i +err zt
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,1,.arr15) i +err zt
 		s err=$$mkDTRecord^JRapi(idfa,nmsp,1,.arr22) i +err zt
 		// zapis do vystupni promene
		// vymazani v poli arr (mazu pouze datumova a poznamku, je potreba ponechat navaznosti)
 		f cnt=11,12,13,14,15,22,41 k arr("arr","omz",cnt)
		//
		s arr("dta",16)=tpl
		s arr("dta",17)=dpl
 		//
 		i $g(arr11)'="" s arr("arr","omz",11)=$$gZnkInd^JRapi(idfa,nmsp,11)_"@"_arr11
 		i $g(arr12)'="" s arr("arr","omz",12)=$$gZnkInd^JRapi(idfa,nmsp,12)_"@"_arr12
 		i $g(arr13)'="" s arr("arr","omz",13)=$$gZnkInd^JRapi(idfa,nmsp,13)_"@"_arr13
 		i $g(arr14)'="" s arr("arr","omz",14)=$$gZnkInd^JRapi(idfa,nmsp,14)_"@"_arr14
 		i $g(arr15)'="" s arr("arr","omz",15)=$$gZnkInd^JRapi(idfa,nmsp,15)_"@"_arr15
 		i $g(arr22)'="" s arr("arr","omz",22)=$$gZnkInd^JRapi(idfa,nmsp,22)_"@"_arr22
 		//
 		s cnt="" f {
	 		s cnt=$o(arr41(cnt)) i cnt="" q
 			i $e($g(arr41(cnt)),1)="/" s arr41(cnt)=$e(arr41(cnt),2,$l(arr41(cnt)))
	 		s arr("arr","omz",41)="p@"_arr41(cnt)
 		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...)
	// VYSTUP:
	// out("id")=$lb(id,...) = id odstranenych spoju
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s li=$p(id,"|",1) s sp=$p(id,"|",2) s hrl=$p(id,"|",3)
			k arri,arr
			//odstraneni spoje z databaze
			s arri("par",1)=1
			s arri("fullname")=fullname
 		 	s err=$$dSp^OBapiED(idfa,nmsp,li,sp,hrl,.arri,.arro) i err ztrap
			i $g(arro("stt"))=1 {
				s $li(out("id"),($ll($g(out("id")))+1))=id
				/*
				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=105 	//zruseni
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",10)=li
				s arri("par",11)=sp
				s arri("par",17)=hrl
				s arri("par",18)=""	//skupina
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)						
				*/
	 		}
		}		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="ImportFromJR">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// import spoju z EDISON JR
	// VSTUP
	// in("typ")=0 import spoju / 1 aktualizace prs
	// in("skupinajr")=... cislo skupiny JR
	// in("linkaid")=$lb(linkaid,linkaid,...) ... id vybranych linek
	// in("linkaid",linkaid)="" ... id vybranych linek
	// in("firmajr")=... id nastaveneho dopravce z JR
	// in("provozjr")=... id provozovny z JR 
    // in("limitpauzaspojdolimitukm")= ... pauzy uvnitr spoju do limitu km budou povazovany za cekani pokud budou alespon ... 
    // in("limitpauzaspojpolimitukm")= ... pauzy uvnitr spoju nad limitem km budou povazovany za cekani pokud budou alespon ...
    // in("spojlimitkm")= ... limit km pro vyhodnoceni pauz
    // in("limitpauzamhdspoj")= ... pauzy uvnitr spoju mhd budou povazovany za cekani pokud budou alespon ... 
    // in("presnekm")=0/1 ... priznak pro import presnych km 
    // in("platnostdo")=0/1 ... priznak pro import platnosti do
	// VYSTUP:
	// out("msg",cnt)=... zprava
	//
	s ret=$$$OK
	s err="" k out
	$$$FROMSERVER
	try {
		f cnt=1:1:$ll($g(in("linkaid"))) {
			s linkaid=$lg($g(in("linkaid")),cnt)
			i linkaid="" continue
			s in("linkaid",linkaid)=""
		}
		s typ=$g(in("typ"))
		s sku=$g(in("skupinajr"))
 		s dop=$g(in("firmajr"))
 		s prv=$g(in("provozjr"))
 		s lmmcek1=$g(in("limitpauzaspojdolimitukm"))
 		s lmmcek2=$g(in("limitpauzaspojpolimitukm"))
 		s lmmcekkm=$g(in("spojlimitkm"))
 		s lmmmhdcek=$g(in("limitpauzamhdspoj"))
 		s pkm=$g(in("presnekm"))
 		s pldo=$g(in("platnostdo"))
 		//kontrola, pak prohlidnout BIG a po osetreni vyhodit
 		i sku="" s err="skupinajr=" zt
 		i dop="" s err="firmajr=" zt
 		i lmmcek1="" s err="limitpauzaspojdolimitukm=" zt
 		i lmmcek2="" s err="limitpauzaspojpolimitukm=" zt
 		i lmmcekkm="" s err="spojlimitkm=" zt
 		i lmmmhdcek="" s err="limitpauzamhdspoj=" zt
 		//zapis parametru do db
 		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
 		s arrset("arr",1,1)=sku
 		s $p(arrset("arr",1,2),"~",1)=lmmcek1
 		s $p(arrset("arr",1,2),"~",2)=lmmcek2
 		s $p(arrset("arr",1,2),"~",3)=lmmcekkm
 		s $p(arrset("arr",1,3),"~",1)=lmmmhdcek
 		s arrset("arr",1,4)=dop
 		s arrset("arr",1,6)=prv
 		s err=$$sMainSet^OBapiED(idfa,nmsp,.arrset,"") i +err zt
 	    // import spoju
 	    i 'typ {
	 	    k arri s linkaid="" f {
		 	    s linkaid=$o(in("linkaid",linkaid)) i linkaid="" q
		 	    s arri("id",linkaid)=""
 			}
	 	    s arri("par",1)=lmmcek1_"~"_lmmcek2_"~"_lmmcekkm
 			s arri("par",2)=lmmmhdcek
 			s arri("par",3)=dop
 			i prv'="" s arri("par",4)=prv
 			s arri("par",5)=pkm
 			s arri("par",6)=pldo
 			s arri("mlp",1)=mlp
 			s arri("mlp",2)=fullname
 			k arro s err=$$impSp^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
 			//vystup msg
 			m out("msg")=arro("msg")
 			//doplnit sherlock ponovu
 	    }
 	    // import prs pro spoje
 	    i +typ {
	 	    k arri s linkaid="" f {
		 	    s linkaid=$o(in("linkaid",linkaid)) i linkaid="" q
	 			s arri("id",linkaid)=""
 			}    
 			s arri("par",1)=dop
 			i prv'="" s arri("par",2)=prv
 			s arri("mlp",1)=mlp
 			s arri("mlp",2)=fullname
 			k arro s err=$$impSpPrs^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
 			//vystup msg
 			m out("msg")=arro("msg")
 			//doplnit sherlock ponovu
 	    }
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="ListNoExistInJR">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//s i("skupinajr")=10 s i("glb")="^||w" s isok=##class(ALVA.AUDO.API.LinkySpoje).ListNoExistInJR("",.i,.o)
	//vypis spoju, ktere nejsou ve skupine v JR 
	// VSTUP
 	// in("skupinajr")=skupina jr, proti ktere se bude kontrolovat databaze spoju
 	// in("provoz")=provoz ... provoz pro kontrolu, pokud je nadefinovano, berou se spoje jen z uvedene provozovny
    // in("provoz",provoz)="" ... provoz pro kontrolu, pokud je nadefinovano, berou se spoje jen z uvedene provozovny
 	// in("glb")=glb pro prenos dat
	// VYSTUP:
	// @glb@("dta",idx,"dta"...)=... - data spoje
	// @glb@("dta",idx,"id")=id		 - id spoje (li_"|"_sp_"|"_hrl)
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //vstupni promenne
	    s skujr=$g(in("skupinajr"))
	    i $g(in("provoz"))'="" s in("provoz",$g(in("provoz")))=""
        s myglb=$g(in("glb")) k @myglb
        //pracovni global
        s mywrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(mywrk)
 		// nacteni spoju z JR
 		k arrlli s err=$$fndContentSku^JRapi(idfa,nmsp,skujr,"l","",.arrlli) i +err zt
 	    s idlin="" f {
	 	    s idlin=$o(arrlli("dta",idlin)) i idlin="" q
		    s li=+$p(idlin,"|",3)
		    k myarr s err=$$gPrpLin^JRapi(idfa,nmsp,skujr,li,"",.myarr) i +err zt
			s tmvarjrod=$p($g(myarr("dta",2)),"~",1)
			i tmvarjrod'="" s tmvarjrod=$$dn^OBapiED(tmvarjrod)
			i tmvarjrod {
				s ^||wrk.ALVA.AD(mywrk,"arr",1,li)=tmvarjrod
				k arri,arrlsp
				s arri("par")=1
				s err=$$lSpLin^JRapi(idfa,nmsp,skujr,li,.arri,.arrlsp) i +err zt
		    	s sp="" f {
			    	s sp=$o(arrlsp("arr",sp)) i sp="" q
					s ^||wrk.ALVA.AD(mywrk,"arr",1,li,sp)=""
		 		}
		 		k arrlsp
 	 		}
 	 		k myarr
 		}
 		k arrlli
 		// nacteni spoju z AD a porovnani
 		k arri
 		s arri("sta")=0
 		s arri("sppl",1)=+$h
 		s arri("glb")="^||wrk.ALVA.AD("_mywrk_",""tmp"")" k @(arri("glb"))
 		m arri("prv")=in("provoz")
 		s err=$$lSp^OBapiED(idfa,nmsp,.arri,"") i +err zt
 		s li="" f {
	 		s li=$o(^||wrk.ALVA.AD(mywrk,"tmp",li)) i li="" q
	 		s sp="" f {
	 			s sp=$o(^||wrk.ALVA.AD(mywrk,"tmp",li,sp)) i sp="" q
	 			//je ve skupine v JR
				i $d(^||wrk.ALVA.AD(mywrk,"arr",1,li,sp)) continue
				s hrl="" f {
					s hrl=$o(^||wrk.ALVA.AD(mywrk,"tmp",li,sp,hrl)) i hrl="" q
					k myarr	s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.myarr) i +err zt
 					k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
 					s myinx=$i(@myglb@("dta"))
 					m @myglb@("dta",myinx,"dta")=myarr
 					s @myglb@("dta",myinx,"id")=li_"|"_sp_"|"_hrl
 					k myarr
		 		}
	 		}	
 		}
 		k ^||wrk.ALVA.AD(mywrk)
	}
 catch (ex) {
	 s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
 }
 q ret
]]></Implementation>
</Method>

<Method name="CanBeEdited">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// vrati, zda lze casovou variantu spoje ulozit do databaze (editovat)
	// (v nastaveni je "umoznit opravu casove varinty z uzavreneho obdobi")
	// VSTUP:
	// in("id")=id				...id spoje, ze ktereho se pouzije datum casove platnosti
	// in("datum")=dd.mm.rrrr	...datum, ke kteremu to otestovat, pokud neni id spoje
 	// VYSTUP:
	// out("stt")=0/1 			...mozno opravit 0 ne / 1 ano 
	s ret=$$$OK s err=""
	$$$FROMSERVER
	try {
		k out
		s id=$g(in("id")) s myhrl=""
		i id'="" {
			s li=$p(id,"|",1) s sp=$p(id,"|",2) s myhrl=$p(id,"|",3)
		}
		i $g(in("datum"))'="" {
			s myhrl=$$dn^OBapiED($g(in("datum")))
		}
		s moznoopravit=0
		i myhrl {
			//aktualni obdobi v AD
			k myarr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
			s actrrrrmm=$g(myarr("act"))
			//v AD neni obdobi
			i 'actrrrrmm {
				s moznoopravit=1
			}
			else {
				//nastaveni na aktualizaci turnusu
				k myarr s myerr=$$gMainSet^OBapiED(idfa,nmsp,"",.myarr) i +err zt
				//neni povoleno opravovat tur v minulem obdobi
				s neopravaminobd=+$g(myarr("arr",4,3))
				s moznoopravit=1
				i neopravaminobd {
					s mydat=$$nd^OBapiED(myhrl,0)
					s myrrrrmm=($p(mydat,".",3)*100)+$p(mydat,".",2)
					i myrrrrmm<actrrrrmm s moznoopravit=0
				}
			}
		}
		s out("stt")=+moznoopravit
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.Nastaveni">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54233.969524</TimeChanged>
<TimeCreated>65480,32909.263912</TimeCreated>

<Method name="PolePRSDleParametru">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s isok=##class(ALVA.AUDO.API.Nastaveni).GetArrPRSByPar(.sys,.in,.out)
	// ========================================================
	// vrati pole prepravnich systemu podle vstupnich parametru
	// ========================================================
	//
	// vstup:
	//
	// in("provoz",idprv)=""  //id provozovny (kratke)
	// in("typdoc",idtdoc)="" //id typu dokladu (1 dzva / 2 sj)
	// in("dza",iddza)=""     //druh zajezdu
	//
	// vystup
	//
	// out("arr",idprs)=popis~vychozi0/1
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//nactu nastaveni pro prepravni systemy
		k arrset s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
		//======
		k arrprs
		//======
		//pole povolenych prepravnich systemu pro provozy in("provoz",idprv)=""
		i $o(in("provoz",""))'="" {
			s idprv="" f {
				s idprv=$o(in("provoz",idprv)) i idprv="" q	
				i $g(arrset("arr",1,6,"prv",idprv))'="" {
					f cnt=1:1:$l($g(arrset("arr",1,6,"prv",idprv)),"~") {
						i $p($g(arrset("arr",1,6,"prv",idprv)),"~",cnt)'="" {
							s arrprs(1,$p($g(arrset("arr",1,6,"prv",idprv)),"~",cnt))=""
						}
					} 
				}
			}
		}
		//pole prepravnich systemu pro druhy zajezdu in("dza",iddza)=""
		i $o(in("dza",""))'="" {
			s iddza="" f {
				s iddza=$o(in("dza",iddza)) i iddza="" q
					i $g(arrset("arr",3,2,iddza,2))'="" {
					f cnt=1:1:$l($g(arrset("arr",3,2,iddza,2)),"~") {
						i $p($g(arrset("arr",3,2,iddza,2)),"~",cnt)'="" {
							s arrprs(2,$p($g(arrset("arr",3,2,iddza,2)),"~",cnt))=""
						}
					}
				}
			}
		}
		//pole povolenych prepravnich systemu podle parametru 
		i $g(arrset("arr",1,1)) {
			//je zaple sledovani prs
			//nactu ciselnik prepravnich systemu
			k arr5cis s err=$$gCis^OBapiED(idfa,nmsp,5,"",.arr5cis) i +err zt	
			s idprs="" f  {
				s idprs=$o(arr5cis("arr",idprs))  i idprs="" q
				s val=$g(arr5cis("arr",idprs))
				i $p(val,"~",5)=2 continue 								  //zruseny prs
				// typ dokladu
				s pass=1
				i $o(in("typdoc",""))'="" {
					i $p(val,"~",4)'=1 {
						i $p(val,"~",4)=2 i '$d(in("typdoc",1)) s pass=0  //dzva
						i $p(val,"~",4)=3 i '$d(in("typdoc",2,2)) s pass=0  //sj
					}
				}
				i 'pass continue
				//jsou povolene pro provoz a neni tam
				i $d(arrprs(1)) i '$d(arrprs(1,idprs)) continue
				//jsou povolene pro druh zajezdu a neni tam
				i $d(arrprs(2)) i '$d(arrprs(2,idprs)) continue
				s out("arr",idprs)=$p(val,"~",1)_"~"_0
			}
		}
		//vychozi prepravni system k nalezenym
		k idvprs s idvprs=""
		//podle druhu zajezdu
		i $o(in("dza",""))'="" {
			s iddza="" f {
				s iddza=$o(in("dza",iddza)) i iddza="" q
				i $g(arrset("arr",3,2,iddza,1))'="" {
					i $d(out("arr",$g(arrset("arr",3,2,iddza,1)))) {
						s idvprs=$g(arrset("arr",3,2,iddza,1))
					}
				}
			}
		}
		//vychozi prepravni system podle druhu dokladu a provozovny
		i idvprs="" {
			//jen jeden druh dokladu - dzva
			i ($d(in("typdoc",1)))&('$d(in("typdoc",2))) {
				s idprv="" f {
					s idprv=$o(in("provoz",idprv)) i idprv="" q
					i $g(arrset("arr",2,1,"prv",idprv))'="" {
						i $d(out("arr",$g(arrset("arr",2,1,"prv",idprv)))) {
							s idvprs=$g(arrset("arr",2,1,"prv",idprv))
						}
					}		
				}
				i idvprs="" {
					i $g(arrset("arr",2,1))'="" {
						i $d(out("arr",$g(arrset("arr",2,1)))) {
							s idvprs=$g(arrset("arr",2,1))
						}
					}
				}
			}
			//jen jeden druh dokladu - sj
			i ('$d(in("typdoc",1)))&($d(in("typdoc",2))) {
				s idprv="" f {
					s idprv=$o(in("provoz",idprv)) i idprv="" q
					i $g(arrset("arr",3,1,"prv",idprv))'="" {
						i $d(out("arr",$g(arrset("arr",3,1,"prv",idprv)))) {
							s idvprs=$g(arrset("arr",3,1,"prv",idprv))
						}
					}		
				}
				i idvprs="" {
					i $g(arrset("arr",3,1))'="" {
						i $d(out("arr",$g(arrset("arr",3,1)))) {
							s idvprs=$g(arrset("arr",3,1))
						}
					}
				}
			}
		}
		i idvprs'="" s $p(out("arr",idvprs),"~",2)=1
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.ObecneFceKalendar">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65778,39835.389279</TimeChanged>
<TimeCreated>65778,39168.42378</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.ObecneFceKalendar).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    //
    s in("datumOd")="1.1.2021"
	s in("datumDo")="31.1.2021"
	s in("provoz")=40
    w ##class(ALVA.AUDO.API.ObecneFceKalendar).DnyPopis(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="DnyPopis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// in:
	// in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// in("provoz")=provozid (kazdy provoz muze mit jiny kalendar), pokud neprijde, jede se na hlavni kalendar (pro svatky)
	// out:
	// out(1,hrl)=$lb(cislodne,svatek,moznoedit)
    s ret=$$$OK k out s err=""
	try  {
		$$$FROMSERVER
		//hlavni kalendar
		s typkalendare=0
		//kalendar podle provozu
		i $g(in("provoz")) s typkalendare=$$gMainDCal^OBapiED(idfa,nmsp,"",$g(in("provoz")))	
	    //aktualni obdobi a prvniho pro uzamceni editace
	    k myarr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
	    s actrrrrmm=$g(myarr("act"))
	    s actminhrl=0 i actrrrrmm s actminhrl=$$gminhrlrrmm^OBapiED(actrrrrmm)
		s hrlod=$$dn^OBapiED($g(in("datumOd")))
		s hrldo=$$dn^OBapiED($g(in("datumDo")))
		f hrl=hrlod:1:hrldo {
			k arri,arro
			s arri("par",1)=0
			s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.arri,.arro) i +err zt
			s cislodne=$g(arro("dta",1))
			//pokud neni kalendar vytvoren nastavim cislo dne
			i cislodne="" s cislodne=(hrl+3#7+1)
			s svatek=$g(arro("dta",2))
			s moznoedit=(hrl>(actminhrl-1))
			s out(1,hrl)=$lb(cislodne,svatek,moznoedit)
		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.ObecneFceOs">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65780,48969.708798</TimeChanged>
<TimeCreated>65686,50409.731892</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.ObecneFceOs).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    //s in("provozovna")=40
    //s in("pracoviste")="VSETIN"
    //s in("datumZapujcky")="10.10.2018"
    //w ##class(ALVA.AUDO.API.ObecneFceOs).DefListWinOS(.sys,.in,.out) w ! zw out
    //s in("os")=34411
    //s in("datum")="1.1.2021"
    //w ##class(ALVA.AUDO.API.ObecneFceOs).Get(.sys,.in,.out) w ! zw out
    s in("glb")="^||w"
	s in("typ",1)=""
	s in("provoz",40)=""
	s in("pracoviste","VALASSKE MEZIRICI")=""
	s in("data",4)=""	
	s in("data",5)=""	
	s in("data",21)=""	
    w ##class(ALVA.AUDO.API.ObecneFceOs).List(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// kompletni data ridice
	// in:
	// in("os")=os	 								... vybrany os
	// in("datum")=dd.mm.rrrr						... datum, ke kteremu vybirat ridice
	// out:
	// out("dta",cnt)=val
	// =====================
	// cnt = val
	// =====================
	//  1 = prijmeni jmeno
	//  2 = datum narozeni (hrl)
    //  3 = datum vzniku (hrl)
 	//  4 = nakladove stredisko
 	//  5 = kategorie
 	//  6 = plat
 	//  7 = denni uvazek
 	//  8 = dovolena nova  (od 202101 je udaj v hodinach, konverze na min)
 	//  9 = dovolena stara (od 202101 je udaj v hodinach, konverze na min)
 	// 10 = hodinovy prumer
 	// 11 = trvale bydliste mesto
 	// 12 = trvale bydliste ulice
 	// 13 = trvale bydliste psc
 	// 14 = trvale bydliste telefon
 	// 15 = mobil
 	// 16 = skupina RP
 	// 17 = cislo RP
 	// 18 = cislo OP
 	// 19 = cislo PAS
 	// 20 = cislo OPZ
 	// 21 = kmenova RZ
 	// 22 = stav 0 neaktivni / 1 aktivni
 	// 23 = fiktivní 0 / 1
 	// 24 = dovolena narok (od 202101 je v hodinach, konverze na min)
 	// 25 = druh pracovniho pomeru -1=nevim/0=HPP/1=HDPČ/2=VDPČ/3=HDPP/4=VDPP
 	// 26 = email
 	// 27 = pin
 	// 28 = datum ukonceni pp (hrl)
 	// 29 = idfa ridice
 	// 30 = subdodavka (0/1)
 	// 31 = IC zakaznika pro subdodavku 
    s ret=$$$OK k out s err=""
	try  {
		$$$FROMSERVER
		//pracovni global
	    s mywrkglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mywrkglb
	    //parametry pro mzdy
	    k arri,arro
		s arri("IdFa")=idfa
		s arri("OS")=$g(in("os"))
		k myarr s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,0,.myarr) i +err zt
	    m arri("KA")=myarr("KA") k myarr
		s arri("GlbOut")=mywrkglb
    	s arri("DataNamespace")=nmsp
    	s arri("Obdobi")=($p(in("datum"),".",3)*100)+$p(in("datum"),".",2)
    	i $g(in("os"))'="-" {
	    	s actnmsp=$znspace s err=##class(ALVA.MZDY.Ridici).LoadZam(.arri,.arro) zn actnmsp i +err zt
    	}
    	else {
	        s @mywrkglb@("Jmeno")="-"
	    	s @mywrkglb@("DU")=8
    	}
	    s out("dta",1)=$g(@mywrkglb@("Jmeno"))	    
	    s hrl=$g(@mywrkglb@("DNar")) i hrl s hrl=$$dn^OBapiED(hrl)
 		s out("dta",2)=hrl
 		s hrl=$g(@mywrkglb@("DVznikuPP")) i hrl s hrl=$$dn^OBapiED(hrl)
 		s out("dta",3)=hrl
 		s out("dta",4)=$g(@mywrkglb@("NS"))
 		s out("dta",5)=$g(@mywrkglb@("KA"))
 		s out("dta",6)=$g(@mywrkglb@("Plat"))
 		s out("dta",7)=$g(@mywrkglb@("DU"))
 		s out("dta",8)=(($g(@mywrkglb@("DovN"))*60)\1)
 	    s out("dta",9)=(($g(@mywrkglb@("DovS"))*60)\1)
 		s out("dta",10)=$g(@mywrkglb@("PrumH"))
 		s out("dta",11)=$g(@mywrkglb@("TvrBydlMesto"))
 		s out("dta",12)=$g(@mywrkglb@("TvrBydlUlice"))
 		s out("dta",13)=$g(@mywrkglb@("TvrBydlPSC"))
 		s out("dta",14)=$g(@mywrkglb@("TvrBydlTelefon"))
 		s out("dta",15)=$g(@mywrkglb@("Mobil"))
 		s out("dta",16)=$g(@mywrkglb@("RPSkupina"))
 		s out("dta",17)=$g(@mywrkglb@("RPEvCsilo"))
 		s out("dta",18)=$g(@mywrkglb@("OPCsilo"))
 		s out("dta",19)=$g(@mywrkglb@("PasCislo"))
 		s out("dta",20)=$g(@mywrkglb@("OPZCislo"))
 		s out("dta",21)=$g(@mywrkglb@("KmenRZ"))
 		s out("dta",22)=$g(@mywrkglb@("Stav"))
 		s out("dta",23)=$g(@mywrkglb@("FiktivniRidic"))
 		s out("dta",24)=(($g(@mywrkglb@("DovR"))*60)\1)
 		s out("dta",25)=$g(@mywrkglb@("Status"))
 		s out("dta",26)=$g(@mywrkglb@("Email"))
 		s out("dta",27)=$g(@mywrkglb@("PIN"))
 		s hrl=$g(@mywrkglb@("DUkonceniPP")) i hrl s hrl=$$dn^OBapiED(hrl)
 		s out("dta",28)=hrl
 		s out("dta",29)=$g(@mywrkglb@("IdFa"))
 		s out("dta",30)=$g(@mywrkglb@("FrSub"))
 		s out("dta",31)=$g(@mywrkglb@("FrSubIC"))
 		//
 		k @mywrkglb
	}
	catch (ex) {
		i +$g(os) {
			k out
			f cnt=1:1:31 s out("dta",cnt)=""
			s out("dta",1)="?<"_os_">"
			s ret=$$$OK
		}
		else {
			s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
		}
	}
	q ret
]]></Implementation>
</Method>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //seznam ridicu 
   s ret=$$$OK k out s err=""
   try {
	  $$$FROMSERVER
	   // in:
	   // in("glb")=glb									... global pro navrat dat
	   // in("typ",id)=""								... typ lidi id = 1 ridici / 2 pruvodci, neni-li vse
	   // in("provoz",idprovoz)=""						... provozovny pro vyber ridicu
	   // in("pracoviste",idpracoviste)=""				... planovaci pracoviste pro vyber ridicu
	   // in("pracoviste",idpracoviste,"zapujcka")=0/1 	... zohlednit zapujcky 0/1
	   // in("ns",idns)=""								... ns pro vyber ridicu
	   // in("datum")=dd.mm.rrrr						... datum, ke kteremu vybirat ridice nebo obdobi
	   // in("obdobi")=rrrrmm							... obdobi, ke kteremu vybirat ridice nebo datum
	   // in("data",id)=""								... id dat ridice pro navrat
	   //	 	id=2 - DNar - datum narozeni
 	   //	 	id=3 - DVznikuPP - datum nastupu
 	   //	 	id=4 - NS -  nakladove stredisko
 	   //	 	id=5 - KA - kategorie
 	   //	 	id=6 - Plat -plat
 	   //	 	id=7 - DU - denni uvzek
 	   //	 	id=8 - DovN - dovolena nova (od 202101 je udaj v hodinach, konverze na min)
 	   //	 	id=9 - DovS -dovolena stara (od 202101 je udaj v hodinach, konverze na min)
 	   //	 	id=10 - PrumH - prumer hodinovy
 	   //       id=21 - KmenRZ - kmenova RZ
 	   //       id=23 - Fiktivni ridic
 	   //       id=24 - DovR - dovolena narok (od 202101 je v hodinach, konverze na min)
 	   //       id=25 - Status - stav pracovniho pomeru
 	   //       id=26 - Email
 	   //       id=27 - PIN
 	   //       id=28 - DUkonceniPP - datum ukonceni 
 	   //       id=29 - idfa ridice 
 	   //       id=30 - subdodavka
 	   //       id=31 - ic zakaznika pro subdodavku  
	   // out:
	   // @in("glb")@(1,os,"dta",id)=hodnota
	   // @in("glb")@(2,sortidx)=os ... abecedne serazeni ridici
	   //pracovni global
	   s myglb=$g(in("glb"))
	   s mywrkglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mywrkglb
	   //
	   i +$g(in("datum")) {
		   s datum=in("datum")
		   s hrl=$$dn^OBapiED(in("datum"))
		   s rrrrmm=($p(datum,".",3)*100)+$p(datum,".",2)
	   }
	   else {
		   s hrl=+$h
		   s datum=$$nd^OBapiED(hrl,0)
		   s rrrrmm=($p(datum,".",3)*100)+$p(datum,".",2)
	   }
	   i $g(in("obdobi")) {
		   s rrrrmm=$g(in("obdobi"))
		   s hrl=$$gminhrlrrmm^OBapiED(rrrrmm)
		   s datum=$$nd^OBapiED(hrl,0)
	   }
	   // souhrn vstupu do pole myarrsin
	   k myarrsin
	   m myarrsin("provoz")=in("provoz")
	   m myarrsin("ns")=in("ns")
	   // ridici z planovacich pracovist
 	   s idpracoviste="" f {
	 	   s idpracoviste=$o(in("pracoviste",idpracoviste)) i idpracoviste="" q
	 	   k myarr s err=$$gPlnPrac^OBapiED(idfa,nmsp,idpracoviste,"",.myarr) i +err zt
	 	   // pracoviste ma pristup k lidem vlastni provozovny
	       i '$g(myarr("dta",16)) {
		       s myarrsin("provoz",+$g(myarr("dta",1)))=""
	       }
	       // pracoviste ma vlastni seznam lidi
	       i +$g(myarr("dta",16))=1 {
		       // nactu seznam lidi
		       k myarros s err=$$gPlnPracLstOs^OBapiED(idfa,nmsp,idpracoviste,"",.myarros) i +err zt
		       s os="" f {
			       s os=$o(myarros("arr",1,os)) i os="" q
			       s myarrsin("os",os)="" 
		       }
		   }
		   // pracoviste ma seznam stredisek
	       i +$g(myarr("dta",16))=2 {
		       // nactu seznam stredisek
		       k myarrns s err=$$gPlnPracLstOsNs^OBapiED(idfa,nmsp,idpracoviste,"",.myarrns) i +err zt
		       s idns="" f {
			       s idns=$o(myarrns("arr",1,idns)) i idns="" q 
			       s myarrsin("ns",idns)=""
		       }
		   }
		   // pracoviste - zapujceni ridici
		   i +$g(in("pracoviste",idpracoviste,"zapujcka")) {
			   k myarros s err=$$lPlnZapOS^OBapiED(idfa,nmsp,idpracoviste,hrl,"",.myarros) i +err zt
			   s os="" f {
				   s os=$o(myarros("arr",1,os)) i os="" q
				   s myarrsin("os",os)=""
			   }
		   }
 	   }
 	   // konverze provozoven na ns
       s idprovoz="" f  {
	       s idprovoz=$o(myarrsin("provoz",idprovoz)) i idprovoz="" q
	       k myarr s err=$$gPrv^MlJFapi(idfa,sysnmsp,idprovoz,"",.myarr) i +err zt
	       s idns="" f {
		       s idns=$o(myarr("arr","ns",idns)) i idns="" q
		       s myarrsin("ns",idns)=""
	       } 
       }
       // vstupni promenne
       k arri,arro
       s arri("IdFa")=idfa
       s arri("GlbOut")=mywrkglb
       s arri("DataNamespace")=nmsp
       // kategorie ridici, pruvodci
       s par=0
       i (+$d(in("typ",1)))&('$d(in("typ",2))) s par=1	//ridici
       i ('$d(in("typ",1)))&(+$d(in("typ",2))) s par=2  //pruvodci
       k myarr s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,par,.myarr) i +err zt
       m arri("KA")=myarr("KA")
       m arri("NS")=myarrsin("ns")
       //vystupni data
       s idpol="" f  {
	       s idpol=$o(in("data",idpol)) i idpol="" q
	       i idpol=2 s arri("DATA","DNar")=1
	       i idpol=3 s arri("DATA","DVznikuPP")=1
	       i idpol=4 s arri("DATA","NS")=1
	       i idpol=5 s arri("DATA","KA")=1
	       i idpol=6 s arri("DATA","Plat")=1
	       i idpol=7 s arri("DATA","DU")=1
	       i idpol=8 s arri("DATA","DovN")=1
	       i idpol=9 s arri("DATA","DovS")=1
	       i idpol=10 s arri("DATA","PrumH")=1
	       i idpol=21 s arri("DATA","KmenRZ")=1
	       i idpol=23 s arri("DATA","FiktivniRidic")=1
	       i idpol=24 s arri("DATA","DovR")=1
	       i idpol=25 s arri("DATA","Status")=1
	       i idpol=26 s arri("DATA","Email")=1
	       i idpol=27 s arri("DATA","PIN")=1
	       i idpol=28 s arri("DATA","DUkonceniPP")=1
	       i idpol=29 s arri("DATA","IdFa")=1
	       i idpol=30 s arri("DATA","FrSub")=1
	       i idpol=31 s arri("DATA","FrSubIC")=1
       }
       s arri("Obdobi")=rrrrmm
       s arri("VOLANO_Z")="AGENDA"
 	   //
 	   s actnmsp=$znspace s err=##class(ALVA.MZDY.Ridici).LoadZamList(.arri,.arro) zn actnmsp i err ztrap
 	   //
 	   s os="" f  {
	 	   s os=$o(@mywrkglb@("OS",os)) i os="" q
	 	   s jm=@mywrkglb@("OS",os)
	 	   s sortinx=$$cnvDiaInd^OBapiED(jm_os)
	 	   s @myglb@(1,os,"dta",1)=jm
	 	   s idpol="" f  {
		 	   s idpol=$o(in("data",idpol)) i idpol="" q
	    	   i idpol=2 {
		    	   s mytmp=$g(@mywrkglb@("OS",os,"DNar")) i mytmp s mytmp=$$dn^OBapiED(mytmp)
		    	   s @myglb@(1,os,"dta",2)=mytmp
	    	   }
	    	   i idpol=3 {
		    	   s mytmp=$g(@mywrkglb@("OS",os,"DVznikuPP")) i mytmp s mytmp=$$dn^OBapiED(mytmp)
		    	   s @myglb@(1,os,"dta",3)=mytmp
	    	   }
	    	   i idpol=4 s @myglb@(1,os,"dta",4)=$g(@mywrkglb@("OS",os,"NS"))
	    	   i idpol=5 s @myglb@(1,os,"dta",5)=$g(@mywrkglb@("OS",os,"KA"))
	    	   i idpol=6 s @myglb@(1,os,"dta",6)=$g(@mywrkglb@("OS",os,"Plat"))
	    	   i idpol=7 s @myglb@(1,os,"dta",7)=$g(@mywrkglb@("OS",os,"DU"))
	    	   i idpol=8 s @myglb@(1,os,"dta",8)=(($g(@mywrkglb@("OS",os,"DovN"))*60)\1)
	    	   i idpol=9 s @myglb@(1,os,"dta",9)=(($g(@mywrkglb@("OS",os,"DovS"))*60)\1)
	    	   i idpol=10 s @myglb@(1,os,"dta",10)=$g(@mywrkglb@("OS",os,"PrumH"))
	    	   i idpol=21 s @myglb@(1,os,"dta",21)=$g(@mywrkglb@("OS",os,"KmenRZ"))
	    	   i idpol=23 s @myglb@(1,os,"dta",21)=$g(@mywrkglb@("OS",os,"FiktivniRidic"))
	    	   i idpol=24 s @myglb@(1,os,"dta",24)=(($g(@mywrkglb@("OS",os,"DovR"))*60)\1)
	    	   i idpol=25 s @myglb@(1,os,"dta",25)=$g(@mywrkglb@("OS",os,"Status"))
	    	   i idpol=26 s @myglb@(1,os,"dta",26)=$g(@mywrkglb@("OS",os,"Email"))
	    	   i idpol=27 s @myglb@(1,os,"dta",27)=$g(@mywrkglb@("OS",os,"PIN"))
	    	   i idpol=28 {
		    	   s mytmp=$g(@mywrkglb@("OS",os,"DUkonceniPP")) i mytmp s mytmp=$$dn^OBapiED(mytmp)
		    	   s @myglb@(1,os,"dta",28)=mytmp
	    	   }
	    	   i idpol=29 s @myglb@(1,os,"dta",29)=$g(@mywrkglb@("OS",os,"IdFa"))
	    	   i idpol=30 s @myglb@(1,os,"dta",30)=$g(@mywrkglb@("OS",os,"FrSub"))
	       	   i idpol=31 s @myglb@(1,os,"dta",31)=$g(@mywrkglb@("OS",os,"FrSubIC"))
	    	   
    		}
    		s @myglb@(2,sortinx)=os
 		}
	 	// os navic (zapujcka, seznam na pracovisti)
 		s os="" f {
	 		s os=$o(myarrsin("os",os)) i os="" q
	 		i $d(@myglb@(1,os)) continue
	 		k arri,arro s arri("os")=os s arri("datum")=in("datum")
	 		s err=##class(ALVA.AUDO.API.ObecneFceOs).Get(.sys,.arri,.arro) 
	 		s jm=$g(arro("dta",1))
	 		s sortinx=$$cnvDiaInd^OBapiED(jm_os)
	 		s @myglb@(1,os,"dta",1)=jm
	 		s idpol="" f  {
		 		s idpol=$o(in("data",idpol)) i idpol="" q
		 		s @myglb@(1,os,"dta",idpol)=$g(arro("dta",idpol))
			}
			s @myglb@(2,sortinx)=os
 		}
	    k @mywrkglb
   }
   catch (ex) {
	  s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
   }
   q ret
]]></Implementation>
</Method>

<Method name="CinnostOSHrl">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vypis cinnosti pro os k datu pro okno na vyber ridicu
   s ret=$$$OK k out
   s err=""
   try {
	  $$$FROMSERVER
	  //in("dta",1)=hrl
	  //in("dta",2)=glb global s daty @glb@(os)=""
	  //fce doplni:
	  // @glb@(os,(hrl-1))=$lb(txcinnost)
	  // @glb@(os,hrl)=$lb(txcinnost)
	  // @glb@(os,(hrl+1))=$lb(txcinnost)
	  //kontrola
	  i $g(in("dta",2))="" s err="glb=" zt
	  s err=$$lTxCinOs^OBapiED(idfa,nmsp,.in,.out) i +err zt
   }
   catch (ex) {
      s ret=err_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="DefListWinOS">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vrati parametry pro vyberove okno ridicu (NS,OS)
   s ret=$$$OK k out
   s err=""
   try {
	  $$$FROMSERVER
	  //VSTUP
	  //in("provozovna")=idprv
	  //in("pracoviste")=idprac
	  //in("datumZapujcky")=dd.mm.rrrr ... pokud prijde, zohlednuji se zapujcky pro dany den 
	  //VYSTUP
	  //out("ns",ns)="" ... nakladova strediska pro okno
	  //out("os",os)="" ... os pro okno
	  i $g(in("pracoviste"))'="" {
		  //definice pracoviste
		  k myarr s err=$$gPlnPrac^OBapiED(idfa,nmsp,in("pracoviste"),"",.myarr) i +err zt
		  //pracoviste ma lidi z cele provozovny
		  i +$g(myarr("dta",16))=0 {
			  s idprv=$g(myarr("dta",1))
			  //konverze idprv na ns
			  k mytmparr
	    	  s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi,idprv,"",.mytmparr) i +err zt
	    	  s idns="" f {
		    	  s idns=$o(mytmparr("arr","ns",idns)) i idns="" q
		    	  s out("ns",idns)=""
	    	  }
	    	  k mytmparr
	      }
	      // pracoviste ma vlastni seznam lidi
	      i +$g(myarr("dta",16))=1 {
		      // nactu seznam os
		      k mytmparr
		      s err=$$gPlnPracLstOs^OBapiED(idfa,nmsp,in("pracoviste"),"",.mytmparr) i +err zt
		      s os="" f {
			      s os=$o(mytmparr("arr",1,os)) i os="" q
			      s out("os",os)=""
			  }
			  k mytmparr
	      }
	      // pracoviste ma pristup k lidem z nastavenych NS
	      i +$g(myarr("dta",16))=2 {
		      // nactu seznam NS
		      k mytmparr
		      s err=$$gPlnPracLstOsNs^OBapiED(idfa,nmsp,in("pracoviste"),"",.mytmparr) i +err zt
		      s idns="" f {
			      s idns=$o(mytmparr("arr",1,idns)) i idns="" q
			      s out("ns",idns)=""
			  }
			  k mytmparr
	      }
		  // je li def in("datumZapujcky"), pridam do vyberu zapujcene ridice
		  i $g(in("datumZapujcky"))'="" {
			  s myhrl=$$dn^OBapiED(in("datumZapujcky"))
			  // nactu seznam zapujcenych aut
			  k mytmparr
			  s err=$$lPlnZapOS^OBapiED(idfa,nmsp,in("pracoviste"),myhrl,"",.mytmparr) i +err zt
			  s os="" f {
				  s os=$o(mytmparr("arr",1,os)) i os="" q
				  s out("os",os)=""
			  }
			  k mytmparr
	      }
	  }	  
	  else {
		  i $g(in("provozovna"))'="" {
			  //konverze provozovny na ns
			  k mytmparr
	    	  s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi,in("provozovna"),"",.mytmparr) i +err zt
	    	  s idns="" f {
		    	  s idns=$o(mytmparr("arr","ns",idns)) i idns="" q
		    	  s out("ns",idns)=""
	    	  }
	    	  k mytmparr
		  }
	  }
    }
   catch (ex) {
      s ret=err_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.ObecneFceRZ">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65689,71927.433861</TimeChanged>
<TimeCreated>65689,70659.05399</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.ObecneFceRZ).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    s in("typ")=0
    //s in("provozovna")=40
    s in("pracoviste")="VSETIN"
    s in("datumZapujcky")="10.10.2018"
    w ##class(ALVA.AUDO.API.ObecneFceRZ).DefListWinRZ(.sys,.in,.out) w ! zw in zw out
]]></Implementation>
</Method>

<Method name="DefListWinRZ">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vrati parametry pro vyberove okno vozidel (NS,RZ)
   s ret=$$$OK k out
   s err=""
   try {
	  $$$FROMSERVER
	  //VSTUP
	  //in("provozovna")=idprv
	  //in("pracoviste")=idprac
	  //in("typ")=0/1 ... druh vozidla 0 autobusy / 1 privesy / 2 osobni / 3 ostatni      
	  //in("datumZapujcky")=dd.mm.rrrr ... pokud prijde, zohlednuji se zapujcky pro dany den 
	  //VYSTUP
	  //out("dtyp",dtyp)="" ... druhy typu pro typ
	  //out("ns",ns)=""		... nakladova strediska pro okno
	  //out("rz",rz)=""		... rz pro okno
	  //pole na konverzi dtypu 
	  k arrdtyp s err=$$gDtypRZ^OBapiED(idfa,nmsp,"",.arrdtyp)
	  //druh typu
	  i $g(in("typ"))'="" m out("dtyp")=arrdtyp("arr",+$g(in("typ")))	
	  //
	  i $g(in("pracoviste"))'="" {
		  //definice pracoviste
		  k myarr s err=$$gPlnPrac^OBapiED(idfa,nmsp,in("pracoviste"),"",.myarr) i +err zt
		  //pracoviste ma auta z cele provozovny
		  i +$g(myarr("dta",18))=0 {
			  s idprv=$g(myarr("dta",1))
			  //konverze idprv na ns
			  k mytmparr
	    	  s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi,idprv,"",.mytmparr) i +err zt
	    	  s idns="" f {
		    	  s idns=$o(mytmparr("arr","ns",idns)) i idns="" q
		    	  s out("ns",idns)=""
	    	  }
	    	  k mytmparr
	      }
	      // pracoviste ma vlastni seznam vozidel
	      i +$g(myarr("dta",18))=1 {
		      // nactu seznam rz
		      k mytmparr
		      s err=$$gPlnPracLstRz^OBapiED(idfa,nmsp,in("pracoviste"),"",.mytmparr) i +err zt
		      s rz="" f {
			      s rz=$o(mytmparr("arr",1,rz)) i rz="" q
			      s out("rz",rz)=""
			  }
			  k mytmparr
	      }
	      // pracoviste ma pristup k lidem z nastavenych NS
	      i +$g(myarr("dta",18))=2 {
		      // nactu seznam NS
		      k mytmparr
		      s err=$$gPlnPracLstRzNs^OBapiED(idfa,nmsp,in("pracoviste"),"",.mytmparr) i +err zt
		      s idns="" f {
			      s idns=$o(mytmparr("arr",1,idns)) i idns="" q
			      s out("ns",idns)=""
			  }
			  k mytmparr
	      }
		  // je li def in("datumZapujcky"), pridam do vyberu zapujcene ridice
		  i $g(in("datumZapujcky"))'="" {
			  s myhrl=$$dn^OBapiED(in("datumZapujcky"))
			  // nactu seznam zapujcenych aut
			  k mytmparr
			  s err=$$lPlnZapRZ^OBapiED(idfa,nmsp,in("pracoviste"),myhrl,"",.mytmparr) i +err zt
			  s rz="" f {
				  s rz=$o(mytmparr("arr",1,rz)) i rz="" q
				  s out("rz",rz)=""
			  }
			  k mytmparr
	      }
	  }	  
	  else {
		  i $g(in("provozovna"))'="" {
			  //konverze provozovny na ns
			  k mytmparr
	    	  s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi,in("provozovna"),"",.mytmparr) i +err zt
	    	  s idns="" f {
		    	  s idns=$o(mytmparr("arr","ns",idns)) i idns="" q
		    	  s out("ns",idns)=""
	    	  }
	    	  k mytmparr
		  }
	  }
    }
   catch (ex) {
      s ret=err_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.Objednavky">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,53786.209635</TimeChanged>
<TimeCreated>65315,39648.581419</TimeCreated>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("provoz")=provoz nebo in("provoz",provoz)=""
	// in("pracoviste")=pracoviste
	// in("typDopravy")=typ dopravy (0=vse/1=vlastni/2=cizi)
	// in("zobrazeni")=zobrazeni (0=vse/1=aktualni/2=vyfakturovano/3=zruseno)
	// in("datumOd")=datum od (hor)
	// in("datumDo")=datum do (hor)
	// in("ico")=ico
	// in("glb")=glb pro prenos dat
	// in("idObjOd")=cislo objednavky od
 	// in("idObjDo")=cislo objednavky do
 	// in("druhZajezdu",iddza)="" - druh zajezdu
 	// in("prepravce")=textove zadany nazev prepravce
	// VYSTUP:
	// out("dta",idx,"dta",... - data objednavky
	// out("dta",idx,"id")=id  - id objednavky (provoz|idobj)
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    // vyhledani objednavek
	    s hrlod=$g(in("datumOd"))
	    s hrldo=$g(in("datumDo"))
        s myglb=$g(in("glb")) k @myglb
 		// seznam objednavek  
 		k arri,arro
		s arri("glb")=1
		m arri("prv")=in("provoz")
		i $g(in("provoz"))'="" s arri("prv",$g(in("provoz")))=""
	    i $g(in("ico"))'="" s arri("ico")=$g(in("ico"))
 		s arri("hrlod")=(hrlod-30)
 		s arri("hrldo")=hrldo
 		i $g(in("typDopravy"))=1 s arri("tdp",0)=""		//vlastni
 		i $g(in("typDopravy"))=2 s arri("tdp",1)=""		//cizi
 		i $g(in("zobrazeni"))=1 s arri("sta",0)="" s arri("sta",2)="" s arri("sta",3)="" s arri("sta",4)="" 	//aktualni
 		i $g(in("zobrazeni"))=2 s arri("sta",4)="" 																//vyfakturovano 
 		i $g(in("zobrazeni"))=3 s arri("sta",1)=""				 												//zruseno
 		i $g(in("pracoviste"))'="" s arri("prac",$g(in("pracoviste")))="" 
 		i $g(in("idObjOd"))'="" s arri("cis","od")=$g(in("idObjOd"))
 		i $g(in("idObjDo"))'="" s arri("cis","do")=$g(in("idObjDo"))
 		i $g(in("prepravce"))'="" s arri("pre")=$g(in("prepravce"))
 		m arri("dzj")=in("druhZajezdu")
 		s err=$$lObj^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
		s mywrk=$g(arro)
 		i mywrk'="" {
	 		s zp="" f {
		 		s zp=$o(^CacheTempJB(mywrk,"arr",zp)) i zp="" q
		 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
 				s rr="" f {
	 				s rr=$o(^CacheTempJB(mywrk,"arr",zp,rr)) i rr="" q
 					s cobj="" f {
	 					s cobj=$o(^CacheTempJB(mywrk,"arr",zp,rr,cobj)) i cobj="" q
	 					s idobj=$$wrapIdObj^OBapiED(rr,cobj)
 						k myarr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.myarr) i +err zt
 						s objhrlod=+$g(myarr("dta",2))
 						s objhrldo=+$g(myarr("dta",33)) i 'objhrldo s objhrldo=objhrlod
 						i objhrldo<objhrlod s objhrldo=objhrlod
 						i objhrldo<hrlod continue
 						i objhrlod>hrldo continue
 						k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
 						s myinx=$i(@myglb@("dta"))
 						m @myglb@("dta",myinx,"dta")=myarr
 						s @myglb@("dta",myinx,"id")=idprv_"|"_idobj
 					}
 				}
	 		}
	 		k ^CacheTempJB(mywrk)
 		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id (provoz|idobj)
	
	// VYSTUP:
	// out("dta",... - data objednavky
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprv=$p($g(in("id")),"|",1)
		s idobj=$p($g(in("id")),"|",2)
		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k myarr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.myarr) i +err zt
		k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		m out("dta")=myarr
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id (id objednavky a nebo prazdno) (provoz|idobj)
	// in("provoz")=provoz
	// in("dta",... - data objednavky
	// VYSTUP:
	// out("id")=id
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprv=$g(in("provoz"))
		//nova objednavka, vytvorim cislo
		s isnew=0
		i $g(in("id"))="" {
			s zp="" s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			s hrl=$g(in("dta","dta",2))
 			k myval s err=$$gCObj^OBapiED(idfa,nmsp,zp,hrl,"",.myval) i +err zt
			s $p(in("id"),"|",1)=idprv
			s $p(in("id"),"|",2)=myval
			s isnew=1
		}
		s idprv=$p($g(in("id")),"|",1)
		s idobj=$p($g(in("id")),"|",2)
		k arrobj m arrobj=in("dta")
		s zp="" s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k arri s arri("par",1)=1 s isok=..DataConversion(.sys,.arri,.arrobj) i 'isok s err=isok zt
		//pro editaci obnovim needitovatelne polozky
		i 'isnew {
			k myarr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.myarr) i +err zt
 			m arrobj("dta",67)=myarr("dta",67) // datum fakturace
 			m arrobj("arr",6)=myarr("arr",6)   // odkaz na fakturu
 			m arrobj("fak")=myarr("fak")       // fakturacni data  (je-li vyfakturovano, uz se nepocitaji)
 			m arrobj("arr",10)=myarr("arr",10) // odkaz na naplanovane doklady
 			m arrobj("arr",11)=myarr("arr",11) // odkaz na uznane
 			//+ zalohy ???
 			k myarr
		}
 		//vypocet fakturacni vety
 		s err=$$mkFakDtaObj^OBapiED(idfa,nmsp,.arrobj) i +err zt
 		//zapis objednavky
 		s arrobj("arr",7,"dta",1)=$h
 		s arrobj("arr",7,"dta",2)=fullname
 		s err=$$sObj^OBapiED(idfa,nmsp,zp,idobj,.arrobj,"") i +err zt
 		s out("id")=idprv_"|"_idobj
 		/*
 		//sherlock
 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
 		k arri,arro
		s arri("par",1)="AD"
		s arri("par",2)=203 i isnew s arri("par",2)=201
		s arri("par",5)=$h
		s arri("par",6)=mlp_"~"_fullname
		s arri("par",21)=idprv
		s arri("par",20)=idobj		
		s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
		*/
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="DataConversion">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par",1)=0 get / 1 set
	// arr ... data objednavky
	
	// VYSTUP:
	// arr ... data objednavky
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s typ=$g(in("par",1))
		//get
		i typ=0 {
			//konverze oddelovacu
			s arr("frw","dta",5)=$tr($g(arr("frw","dta",5)),":","~")
		}
		//set
		i typ=1 {
			//konverze oddelovacu 
			s arr("frw","dta",5)=$tr($g(arr("frw","dta",5)),"~",":")
			//datove upravy (jeste projit s jirkou, zda bude potreba) 
			//uprava data do, pokud neni, da datum od
			i '$g(arr("dta",33)) s arr("dta",33)=$g(arr("dta",29))
 			//aktualizace dane
 			k myarr s err=$$gDanSzbValDza^OBapiED(idfa,sysnmsp,nmsp,$g(arr("dta",35)),$g(arr("dta",33)),"",.myarr) i +err zt
 			s arr("dta",66)=$g(myarr("dta",1))
 			// uprava dat objednavky - zpusob fakturace
 			i ($g(arr("dta",65))=3)!($g(arr("dta",65))=4) {
	 			//smluvni cena
 				s arr("dta",49)=""
 				s arr("dta",50)=""
 				s arr("dta",51)=""
 				s arr("dta",52)=""
 			}
 			i ($g(arr("dta",65))=1)!($g(arr("dta",65))=2)!($g(arr("dta",65))=4) {
	 			//cena dle sazeb (vymazu smluvni cenu)
 				s arr("dta",18)=""
 				s arr("dta",68)=""
 			}
 			//zmena stavu - typ dopravy cizi prepravce, odjeta doprava - ano a stav je < 3 - posun na 3
 			i (+$g(arr("dta",64))=1)&(+$g(arr("frw","dta",1))=1)&(+$g(arr("dta",1))<3) {
	 			//neni zruseno
	 			i +$g(arr("dta",1))'=1 {
		 			s arr("dta",1)=3
	 			}
 			}
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...) (provoz|idobj)
	
	// VYSTUP:
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1)
			s idobj=$p(id,"|",2)
			s zp="" s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			k arri s arri("fullname")=fullname
 			s err=$$dObj^OBapiED(idfa,nmsp,zp,idobj,.arri,"") i +err zt
 			/*
 			//sherlock
 		    s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
 			k arri,arro
			s arri("par",1)="AD"
			s arri("par",2)=204
			s arri("par",5)=$h
			s arri("par",6)=mlp_"~"_fullname
			s arri("par",21)=idprv
			s arri("par",20)=idobj		
			s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
			*/
		}		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="CelkovaTrzba">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("dta",... - data objednavky // bud ti muzu poslat celou objednavku nebo jen data potrebna pro vypocet celkove trzby, pak potrebuji vedet jaka data
	// VYSTUP:
	// out("celkovaTrzba")=text celkove trzby // nebo // out("celkovaTrzba",i)=celkova trzba (radek i) - je mi to jedno
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out("celkovaTrzba") k myoutcnt
		k arr m arr=in("dta")
		//uprava dat
		//smluvni cena s dani, bez dane
		//vymazani sazeb podle fakturace
		//
		//ciselniky
		k arrcis1 s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arrcis1) i +err zt
 		k arrcis11 s err=$$gCis^OBapiED(idfa,nmsp,11,"",.arrcis11) i +err zt
 		k arrcis28 s err=$$gCis^OBapiED(idfa,nmsp,28,"",.arrcis28) i +err zt
		// aktualizace stavu = 3 aby se to vypocitalo
 		s arr("dta",1)=3
 		// danova sazba podle druhu zajezdu
 		s iddanszb="" i $g(arr("dta",35))'="" s iddanszb=$p($g(arrcis1("arr",$g(arr("dta",35)))),"~",8)
 		// danove sazby
 		k arrszb s err=$$gDanSzb^MlJFapi(idfa,sysnmsp,arr("dta",33),"",.arrszb) i +err zt
 		// ============
 		k arrdan s err=$$gDanSzbValDza^OBapiED(idfa,sysnmsp,nmsp,$g(arr("dta",35)),$g(arr("dta",33)),"",.arrdan) i +err zt
 		s arr("dta",66)=$g(arrdan("dta",1))
 		// doplnime stav preprodano a odjeto a stav , aby se vypocitaly fakturacni udaje
 		s arr("dta",1)=3	//odjeto
 		s arr("dta",64)=1  // musi byt preprodano
 		// =============================================================================
 		// vypocet fakturacni vety
 		s arr("par",1)=1	//informace vcetne zahranicniho DPH
 		s err=$$mkFakDtaObj^OBapiED(idfa,nmsp,.arr) i +err zt
 		// zobrazeni udaju
 		k arrsuma
 		s igl=1
 		s ^CacheTempMLSrv($j,"OUT",$i(igl))="MSG~"_$$format^OBapiED("Nákladové středisko","l",35,".")_$j($g(arr("frw","dta",7)),10)
 		s ^CacheTempMLSrv($j,"OUT",$i(igl))="MSG~"_$$format^OBapiED("Datum plnění","l",35,".")_$$nd^OBapiED(arr("dta",33),0)
 		s ^CacheTempMLSrv($j,"OUT",$i(igl))="MSG~"_$$format^OBapiED("","l",75,"=")
 		//s ^CacheTempMLSrv($j,"OUT",$i(igl))="MSG~Položka                            Počet Sazba Základ DPH% DPH Celkem Měna"
 		s id="" f {
	 		 s id=$o(arr("fak","itm",id)) i id="" q
	 		 s dsc=$$format^OBapiED($p($g(arrcis28("arr",id)),"~",1),"l",35,".")
 			 s dsc=dsc_"("_$p("bez DPH~sníž.DPH~zákl.DPH~2.sníž.DPH","~",iddanszb)_")"
 			 s arrsuma=$g(arrsuma)+$g(arr("fak","itm",id,"dta",1))
 			 s arrsuma(+iddanszb)=$g(arrsuma(+iddanszb))+$g(arr("fak","itm",id,"dta",1))
 			 s val=dsc_" "_$j($g(arr("fak","itm",id,"dta",3)),7,1)_" x "_$j($g(arr("fak","itm",id,"dta",2)),6,2)_" = "_$j($g(arr("fak","itm",id,"dta",1)),9,2)
 			 s out("celkovaTrzba",$i(myoutcnt))=val
 		}
 		// poplatky
 		s idppl="" f {
	 		s idppl=$o(arr("frw","arr",1,idppl)) i idppl="" q
 			s idppldanszb="" f {
	 			s idppldanszb=$o(arr("frw","arr",1,idppl,idppldanszb)) i idppldanszb="" q
 				s widppldanszb=idppldanszb
 				//je-li poplatek soucasti prepravy, je danova sazba jako zajezd
 				i (+$p($g(arrcis11("arr",idppl)),"~",4)) s widppldanszb=iddanszb
 				s valppl=$g(arr("frw","arr",1,idppl,idppldanszb,"dta",1)) i 'valppl continue
 				s dsc=$p($g(arrcis11("arr",idppl)),"~",1)
 				//univerzalni, vlastni popis
 				i ($p($g(arrcis11("arr",idppl)),"~",2)=1) i $g(arr("frw","arr",1,idppl,idppldanszb,"dta",5))'="" s dsc=$g(arr("frw","arr",1,idppl,idppldanszb,"dta",5))
 				s dsc=$$format^OBapiED(dsc,"l",35,".")
 				s dsc=dsc_"("_$p("bez DPH~sníž.DPH~zákl.DPH~2.sníž.DPH","~",widppldanszb)_")"
 				s val=dsc_$$format^OBapiED("","r",18," ")_" = "_$j(valppl,9,2)
 				//je soucast ceny
 				i +$g(arr("frw","arr",1,idppl,idppldanszb,"dta",6)) s val=val_" (součást ceny)"
 				//neni soucast ceny
 				i '$g(arr("frw","arr",1,idppl,idppldanszb,"dta",6)) s arrsuma=$g(arrsuma)+valppl
 				i '$g(arr("frw","arr",1,idppl,idppldanszb,"dta",6)) s arrsuma(+widppldanszb)=$g(arrsuma(+widppldanszb))+valppl
 				s out("celkovaTrzba",$i(myoutcnt))=val
 			 }
 		}
 		// zaklad celkem
 		s out("celkovaTrzba",$i(myoutcnt))=$$format^OBapiED("","l",75,"=")
 		s dsc=$$format^OBapiED("Základ celkem","l",62,".")
 		s val=dsc_" = "_$j($g(arrsuma),9,2)
 		s out("celkovaTrzba",$i(myoutcnt))=val
 		// sleva
 		i $g(arr("fak","dta",1)) {
	 		s dsc=$$format^OBapiED("Sleva "_$j($g(arr("dta",27)),2)_"% celkem","l",62,".")
 			s val=dsc_" = "_$j($g(arr("fak","dta",1)),9,2)
 			s out("celkovaTrzba",$i(myoutcnt))=val
 			s arrsuma=$g(arrsuma)+$g(arr("fak","dta",1))
 			s arrsuma(iddanszb)=$g(arrsuma(iddanszb))+$g(arr("fak","dta",1))
 		}
 		// dane, rekapitulace
 		s iddanszb="" f {
	 		s iddanszb=$o(arrsuma(iddanszb)) i iddanszb="" q
 		 	i iddanszb=1 continue
 			s valdanzsb=0
 			i iddanszb=2 s valdanzsb=$g(arrszb("dta",2))
 			i iddanszb=3 s valdanzsb=$g(arrszb("dta",1))
 			i iddanszb=4 s valdanzsb=$g(arrszb("dta",3))
 			s dsc=$$format^OBapiED("Daň "_$j(valdanzsb,2)_"% celkem","l",62,".")
 			s val=$j(($g(arrsuma(iddanszb))/100*valdanzsb),0,2)
 			s arrsuma=$g(arrsuma)+val
 			s val=dsc_" = "_$j($g(val),9,2)
 			s out("celkovaTrzba",$i(myoutcnt))=val
 		}
 		s out("celkovaTrzba",$i(myoutcnt))=$$format^OBapiED("","l",75,"=")
 		s dsc=$$format^OBapiED("Celkem","l",62,".")
 		s val=dsc_" = "_$j($g(arrsuma),9,2)
 		s out("celkovaTrzba",$i(myoutcnt))=val
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="CopyMove">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...) (provoz|idobj)
	// in("den")=$lb($lb(hrl,minodjezd),$lb(hrl,minodjezd),...)
	// in("provoz")=provoz
	// in("presun")=0/1
	
	// VYSTUP:
	// out("id")=$lb(id,...) (provoz|idobj)
	// out("msg",cnt)=textova zprava pro zobrazeni - doplnit !!!
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprvto=$g(in("provoz"))
		k out
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1)
			s idobj=$p(id,"|",2)
			s zp="" s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			//provoz kam presunout 
			s zpto=zp i idprvto s err=$$mkZP^OBapiED(idfa,idprvto,"","",.zpto) i +err zt
			//nactu objednavku
			k arrobj s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj) i +err zt
			//rozkopirovani objednavky
			f cntdat=1:1:$ll(in("den")) {
				s den=$lg(in("den"),cntdat)
				s hrl=$lg(den,1)
				s min=$lg(den,2)
			    // uprava dat objednavky
			    // stav=objednano
				s arrobj("dta",1)=0
				// nove cislo
				k myval s err=$$gCObj^OBapiED(idfa,nmsp,zpto,hrl,"",.myval) i +err zt
				s myidobj=myval
				// kill fakturaci, kill historie zmen, kill odkazu na plan a sj doklady
				k arrobj("frw")
				k arrobj("fak")
				k arrobj("arr",6)		//historie fakturace
				k arrobj("arr",7)		//historie zmen
				k arrobj("arr",10)		//odkaz na naplanovane doklady
				k arrobj("arr",11)		//odkaz na uznane doklady
				// novy odjezd, prijezd datum
				s hrlp=$g(arrobj("dta",29))
				s hrlo=$g(arrobj("dta",33))
				i 'hrlo s hrlo=hrlp
				s pday=hrlo-hrlp
				s arrobj("dta",2)=hrl
				s arrobj("dta",29)=hrl
				s arrobj("dta",33)=(hrl+pday)
				// novy odjezd a prijezd cas
				s mino=$g(arrobj("dta",30))
				s minp=$g(arrobj("dta",34))
				i min'="" {
					s arrobj("dta",30)=min
					//prijezd menim jen pokud je zadan
					i minp s arrobj("dta",34)=(min+(minp-mino))
				}
				// cizi dopravce NE 
				s arrobj("dta",64)=0
				// 66 - DAN - vyse dane %
				k myarr s err=$$gDanSzbValDza^OBapiED(idfa,sysnmsp,nmsp,$g(arrobj("dta",35)),hrl,"",.myarr) i +err zt
				s arrobj("dta",66)=$g(myarr("dta",1))
				// 67 - DAT_FAKT - datum prevedeni do fakturace (horlog)
				s arrobj("dta",67)=""
				// vypocet fakturacni vety
				s err=$$mkFakDtaObj^OBapiED(idfa,nmsp,.arrobj) i +err zt
				// zapis objednavky
				s arrobj("arr",7,"dta",1)=$h
				s arrobj("arr",7,"dta",2)=fullname
				s err=$$sObj^OBapiED(idfa,nmsp,zpto,myidobj,.arrobj,"") i +err zt
				//provoz
 				s err=$$mkPRV^OBapiED(idfa,zpto,"",.idprvto) i +err zt
				s $li(out("id"),$ll($g(out("id")))+1)=(idprvto_"|"_myidobj)
 				//zprava
				s out("msg",$i(out("msg")))="vytvořena objednávka "_idprvto_"/"_myidobj
				/*
 				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=201
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",21)=idprvto
				s arri("par",20)=myidobj
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
				*/
				}
			i $g(in("presun")) {
				s err=$$dObj^OBapiED(idfa,nmsp,zp,idobj,"","") i +err zt
				//provoz
				s err=$$mkPRV^OBapiED(idfa,zp,"",.myidprv) i +err zt
				//zprava
				s out("msg",$i(out("msg")))="zrušena objednávka "_myidprv_"/"_idobj
				/*
				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=204
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",21)=myidprv
				s arri("par",20)=idobj		
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
				*/
			}
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.ObjednavkyStale">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65681,54092.190776</TimeChanged>
<TimeCreated>65315,39648.581419</TimeCreated>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("provoz")=provoz
	// in("prepravce")=prepravce
	// in("ico")=ico
	// in("glb")=glb pro prenos dat
	// VYSTUP:
	// out("dta",idx,"dta",... - data stale objednavky
	// out("dta",idx,"id")=id  - id stale objednavky (provoz|idobj)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s myglb=$g(in("glb")) k @myglb
		k zp s err=$$mkZP^OBapiED(idfa,$g(in("provoz")),"","",.zp) i +err zt
 		k arri,arro
 		s arri("zp",zp)=""
 		i $g(in("ico"))'="" s arri("ico")=$g(in("ico"))
 		i $g(in("prepravce"))'="" s arri("pre")=$g(in("prepravce"))
 		s err=$$lStlObj^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
 		s zp="" f {
	 		s zp=$o(arro("arr",zp)) i zp="" q
	 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
 			s idsobj="" f {
	 			s idsobj=$o(arro("arr",zp,idsobj)) i idsobj="" q
 				k arrsobj s err=$$gStlObj^OBapiED(idfa,nmsp,zp,idsobj,"",.arrsobj) i +err zt
 				k arri s arri("par",1)=0 s isok=##class(ALVA.AUDO.API.Objednavky).DataConversion(.sys,.arri,.arrsobj) i 'isok s err=isok zt
 				s myinx=$i(@myglb@("dta"))
 				m @myglb@("dta",myinx,"dta")=arrsobj
 				s @myglb@("dta",myinx,"id")=idprv_"|"_idsobj
 			}
 		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// in("id")=id (provoz|idobj)
	
	// VYSTUP:
	// out("dta",... - data stale objednavky
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprv=$p($g(in("id")),"|",1)
		s idsobj=$p($g(in("id")),"|",2)
		k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k myarr s err=$$gStlObj^OBapiED(idfa,nmsp,zp,idsobj,"",.arrsobj) i +err zt
		k arri s arri("par",1)=0 s isok=##class(ALVA.AUDO.API.Objednavky).DataConversion(.sys,.arri,.arrsobj) i 'isok s err=isok zt
		m out("dta")=arrsobj
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id (id stale objednavky a nebo prazdno pro novou) (provoz|idobj)
	// in("nazev")=nazev stale objednavky (nova)
	// in("provoz")=provoz (nova)
	// in("dta",... - data stale objednavky
	// VYSTUP:
	// out("id")=id (provoz|idobj)
	
	// VYSTUP:
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		i $g(in("id"))="" {
			s in("id")=$g(in("provoz"))_"|"_$g(in("nazev"))
		}
		k arrsobj m arrsobj=in("dta")
		k arri s arri("par",1)=1 s isok=##class(ALVA.AUDO.API.Objednavky).DataConversion(.sys,.arri,.arrsobj) i 'isok s err=isok zt
		s idprv=$p($g(in("id")),"|",1)
		s idsobj=$p($g(in("id")),"|",2)
		k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k myarr s err=$$sStlObj^OBapiED(idfa,nmsp,zp,idsobj,.arrsobj,"") i +err zt
		s out("id")=idprv_"|"_idsobj
		//sherlock
		k arri,arro
		s arri("id")="AUDO|1003"
		s arri("dsc")=idprv_"/"_idsobj
		s arri("key","PR")=idprv
		s err=##class(ALVA.AUDO.Sherlock).CreateEvent(.sys,.arri,.arro)
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,id,...) (provoz|idobj)
	
	// VYSTUP:
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1)
			s idsobj=$p(id,"|",2)
			k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			k arri s arri("fullname")=fullname
			k myarr s err=$$dStlObj^OBapiED(idfa,nmsp,zp,idsobj,.arri,"") i +err zt
			//sherlock
			k arri,arro
			s arri("id")="AUDO|1004"
			s arri("dsc")=idprv_"/"_idsobj
			s arri("key","PR")=idprv
			s err=##class(ALVA.AUDO.Sherlock).CreateEvent(.sys,.arri,.arro)
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.PlanDopravy">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65776,44811.736447</TimeChanged>
<TimeCreated>65724,39379.101241</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// TODO:

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// - pred spustenim planu se volala fce na automaticke odmazani starych planu, domluvit se jak na to, pripravil jsem fci $$dDocPlnPrac^OBapiED, bude potreba ji spustit na pozadi !

]]></Content>
</UDLText>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.PlanDopravy).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    //
    /*
    k in,out
  	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    s in("par","pracoviste")="VSETIN"
	s in("par","datumOd")="22.11.2019"
	s in("par","datumDo")="22.11.2019"
	s in("par","typ")=0 //typ planu 0 podle ridicu / 1 podle vozidel
	//s in("par","pracovniPomer",pracovnipomer)="" vypisovat jen nektere pracovni pomery, pracovnipomer=0 vsichni ridici / 1 HPP / 2 HDPC / 3  VDPC
	s in("par","radit")=2	//radit podle 0 jmena / 1 TS / 2 TS a poradi
	s in("par","zobrazitVykony")=0 //zobrazit vykony ridicu/vozidel 0 ne / 1 ano
	s in("par","glb")="^||w"
	//s in("par","os",os)="" data jen pro os
    //s in("par","rz",rz)="" data jen pro rz
    k ^||w
    w ##class(ALVA.AUDO.API.PlanDopravy).GetData(.sys,.in,.out)
    zw ^||w(3,35107)
    */
    /*
    // in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    s in("par","pracoviste")="VSETIN"
	s in("par","datum")="22.11.2019"
	s in("par","typ")=0
	s in("par","glb")="^||w"
	w ##class(ALVA.AUDO.API.PlanDopravy).GetResources(.sys,.in,.out)
	zw ^||w
	*/
	// VSTUP
	s in("par","typ")=1
	s in("par","cchglb")="^||wc"
	s in("par","glb")="^||wd"
    s in("par","pracoviste")="VSETIN"
	s in("par","datumOd")="15.11.2019"
	s in("par","datumDo")="15.11.2019"
	s in("par","datum")="15.11.2019"
	w ##class(ALVA.AUDO.API.PlanDopravy).GetResources(.sys,.in,.out)
]]></Implementation>
</Method>

<Method name="GetData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datumOd")=dd.mm.rrrr
	// in("par","datumDo")=dd.mm.rrrr
	// in("par","typ")=typ planu 0 podle ridicu / 1 podle vozidel
	// in("par","pracovniPomer",pracovnipomer)="" vypisovat jen nektere pracovni pomery, pracovnipomer=0 vsichni ridici / 1 HPP / 2 HDPC / 3  VDPC / 4 HDPP / 5 VDPP
	// in("par","radit")=radit podle 0 jmena / 1 TS / 2 TS a poradi
	// in("par","zobrazitVykony")=zobrazit vykony ridicu/vozidel 0 ne / 1 ano
	// in("par","glb")=global, do ktereho vracet data
	// in("par","os",os)="" data jen pro os
    // in("par","rz",rz)="" data jen pro rz	
	// VYSTUP:
	// typ=in("par","typ")
	//									   1    2  3     4  5    6    7  8        9       10
	// @glb@(-1000,typ,os)=data ridice $lb(idfa,os,jmeno,ns,PPod,PPdo,du,PPstatus,tsnazev,tsporadi)
	// PPstatus=-1=nevim/0=HPP/1=HDPČ/2=VDPČ/3=HDPP/4=VDPP
	// @glb@(-1000,typ,os,"dta",1)=bitmap, jak lze v datumOd-datumDo pouzit 
	//
	// @glb@(-1000,typ,rz)=data vozidla $lb(idfa,evc,rz,ns,typ)
	// @glb@(-1000,typ,rz,"dta",1)=bitmap, jak lze v datumOd-datumDo pouzit
	//
	// radky
	// @glb@(1,os/rz)=$lb(minvyk,kmvyk,minprescas/podvykon)
	// kde os/rz je id radku, podle typ	
	//
	// sloupce
	// @glb@(2,hrl)=$lb(dn,sv,isdnbck,mytxt)
	// kde hrl je id sloupce
	// dn=1,2,3,4,5,6,7 ... den 1 Po / 2 Ut ...
	// sv=0/1 ... priznak svatku
	// isdnbck=0/1 ... priznak zalohy planu
	// mytxt ... textova poznamka ke dni   
	//
	// bunky
	// @glb@(3,os/rz,hrl,cnt)=$lb(iddoc,typ,typdoc,moznoedit,hrlod,hrldo,idikony,popis1,popis2,popis3,tooltip,barvatextu,barvapozadi,hledatrz,hledatjm,hledatcin)
	// kde os/rz je id radku, podle typ
	// kde hrl je id sloupce
	// iddoc ... id dokladu
	// typ ... 0 plan / 1 doklad / 2 grafikon
	// typdoc ... 0 dzva / 1 sj / 2 grafikon
	// moznoedit ... 0/1
	// hrlod ... doklad od
	// hrldo ... doklad do
	// idikony ... 0 nic / 1 objizdkovy / 2 posilovy
	// popis1 ... cinnost
	// popis2 ... ridic/vozidlo podle typ
	// popis3 ... upozorneni, ze je doklad z jineho pracoviste 
	// tooltip ... zatim poznamka z dokladu 
	// barvatextu ... 1 cervena / 2 svetlezelena / 3 tmavezelena / 4 modra / 5 oranžova
	// barvapozadi ... 1 bila / 2 svetle oranzova
	// hledatrz ... texty pro hledani podle rz = $lb(text,text,...)
	// hledatjm ... texty pro hledani podlejm = $lb(text,text,...)
	// hledatcin ... texty pro hledani podle cinnosti = $lb(text,text,...)
	//
	// predpis pro razeni radek
	// @glb@(100,index)=os/rz
	// os/rz je id radku, podle typ
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s cchglb=$g(in("par","cchglb"))
        s glb=$g(in("par","glb"))
        s idprac=$g(in("par","pracoviste"))
        s hrlfrom=$$dn^OBapiED(in("par","datumOd")) s fhrlfrom=hrlfrom
        s hrlto=$$dn^OBapiED(in("par","datumDo")) s fhrlto=hrlto
        //nastaveni programu
        s qsj=$$qsj^OBapiED()
		//co vypisovat u rz
		s descrz=$$gMainSetOne^OBapiED(idfa,nmsp,7,5)
		//mod pro vypis fondu 
		s fondmode=$$gMzdSetOne2i^OBapiED(idfa,nmsp,0,9)
		//data planovaciho pracoviste
		k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) i +err zt
		// provozovna, zp
		s idprv=$g(arrprac("dta",1)) s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//nastaveny kalendar pro provoz
		s mydcal=$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
		//nastaveni fiktivniho obdobi a pocet dnu pro fond pri zobrazeni hodin (vykonu)
		s ddfond=""
		i +$g(in("par","zobrazitVykony")) {
			s rrrrmm=$$grrrrmmfromhrl^OBapiED(hrlfrom)
			s fhrlfrom=$$gminhrlrrmm^OBapiED(rrrrmm)
			s fhrlto=$$gmaxhrlrrmm^OBapiED(rrrrmm)
			// fond se pocita podle kalendarnich dni
			i fondmode {
				s ddfond=(fhrlto-fhrlfrom+1)
			}
			// fond se pocita podle pracovnich dni
			else {
				s ddfond=##class(ALVA.MZDY.MLAPI).PocetPracDni(rrrrmm)
			}
			i fhrlto<hrlto {
				s fhrlto=hrlto
			}
		}
	    //obdobi pro zobrazeni vykonu
		s vykrrmm=($$grrrrmmfromhrl^OBapiED(fhrlfrom)#10000)
		//plan podle ridicu, vyrobim seznam
		i '$g(in("par","typ")) s isok=##class(ALVA.AUDO.API.PlanDopravyFce).seznamRidicu(.sys,.in,"") i 'isok s err=isok zt
		//plan podle aut, vyrobim seznam	
		i +$g(in("par","typ")) s isok=##class(ALVA.AUDO.API.PlanDopravyFce).seznamVozidel(.sys,.in,"") i 'isok s err=isok zt
		//plan podle ridicu a jen 
		i ('$g(in("par","typ")))&(+$o(in("par","pracovniPomer",""))) {
			s id="" f {
				s myval="" s id=$o(@glb@(-1000,+$g(in("par","typ")),id),1,myval) i id="" q
				s PPstatus=+$lg(myval,8)
				i '$d(in("par","pracovniPomer",(PPstatus+1))) {
					k @glb@(-1000,+$g(in("par","typ")),id)
				}
			}
		}
		// filtr ridicu na status PP
    	i (+$g(in("par","typ"))=0)&(+$o(in("par","pracovniPomer",""))) {
	    	s id="" f {
			    s id=$o(@glb@(1,id)) i id="" q
			    s myval=$g(@glb@(-1000,+$g(in("par","typ")),id))
			    s PPstatus=+$lg(myval,8)
			    i '$d(in("par","pracovniPomer",(PPstatus+1))) {
				    k @glb@(1,id)
				    k @glb@(3,id)
			    }			    
	    	}
    	}	
		//data planu
		k myarri,myarr
		s myarri("par",1)=1
		//podle ridicu
		i '$g(in("par","typ")) {
			s myarri("par",2)=1
			s id="" f {
				s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
				s os=$lg(myval,2)
				s myarri("os",os)=""
			}
		}
		//podle rz
		i +$g(in("par","typ")) {
			s myarri("par",3)=1
			s id="" f {
				s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
				s rz=$lg(myval,3)
				s myarri("rz",rz)=""
			}	
		}
		i hrlfrom=hrlto s myarri("par",4,hrlfrom)=""
		s err=$$mkPlnData^OBapiEDPlan(idfa,nmsp,fhrlfrom,fhrlto,.myarri,.myarr) i +err zt
		s mywrkglbpln=$g(myarr("dta",1))
		k myarr
		//data planu  in("par","typ")=0 podle ridicu / 1 podle vozidel
		//data podle ridicu, k vozidlum na dokladech si doplnim evc
		i '$g(in("par","typ")) {
			s id="" f {
				s id=$o(@mywrkglbpln@(-1,id)) i id="" q
				i id="-" s @mywrkglbpln@(-1,id)=$lb("") continue
				s @mywrkglbpln@(-1,id)=$lb(##class(ALVA.VOZIDLA.MLAPI).VehicleGetEvc(sysnmsp,id))
			}
		}
		//data podle vozidel, k ridicum na dokladech si doplnim jmena 
		i +$g(in("par","typ")) {
			k myarri s myarri("IdFa")=idfa s myarri("DataNamespace")=nmsp s myarri("GlbOut")=mylglb s arri("VOLANO_Z")="AGENDA"
			k @mylglb
			s id="" f {
				s id=$o(@mywrkglbpln@(-2,id)) i id="" q
				i id="-" s @mywrkglbpln@(-2,id)=$lb("-") q
				s @mylglb@("OS",id)=""
			}
			s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.myarri,"")
			s id="" f {
				s id=$o(@mylglb@("OS",id)) i id="" q
				s jm=$g(@mylglb@("OS",id)) s jm=$p(jm," ",1)_" "_$e($p(jm," ",2),1)_"."
				s @mywrkglbpln@(-2,id)=$lb(jm)
			}
			k @mylglb	
		}
		//index pro nacitani data z planu
		s myidxdtapln=1 i '$g(in("par","typ")) s myidxdtapln=2
		//id je pro in("par","typ")=0 podle ridicu os
		//id je pro in("par","typ")=1 podle ridicu rz
		s id="" f {
			s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
			s os="" s jm="" s rz="" s evc=""
			//radky
			s @glb@(1,id)=$lb(0,0,0)	
			i '$g(in("par","typ")) s os=id s jm=$lg(myval,3)
			i +$g(in("par","typ")) s rz=id s evc=$lg(myval,2)
			s minvyk=0 s kmvyk=0
			s hrl="" f {
				s hrl=$o(@mywrkglbpln@(myidxdtapln,id,hrl)) i hrl="" q
				s dat=$$nd^OBapiED(hrl,0)
				s actrrmm=(($p(dat,".",3)*100)+($p(dat,".",2)))#10000
				//data plan
				s iddoc="" f {
					s myval="" s iddoc=$o(@mywrkglbpln@(myidxdtapln,id,hrl,1,iddoc),1,myval) i iddoc="" q
					s idpracdoc=$p(iddoc,"|",1)
					//rz z dokladu (u ridicu neni)
					s rz=$p(iddoc,"|",3)
					//pokud neni id (os/rz), pak doklady jen z aktualniho pracoviste
					i (id="-")&(idprac'=idpracdoc) continue
					//vykony za id
					i actrrmm=vykrrmm {
						s minvyk=minvyk+$lg(myval,2)
						s kmvyk=kmvyk+$lg(myval,3)
					}
					s typ=0															//0 plan / 1 doklad / 2 grafikon
					s typdoc=+$lg(myval,5)											//0 dzva / 1 sj / 2 grafikon
					s moznoedit=1 i (idprac'=idpracdoc) s moznoedit=1
				 	s hrlod=hrl
				 	s hrldo=$lg(myval,1)
				 	s idikony=0		 												//0 nic / 1 objizdkovy / 2 posilovy //doplnit ikonu pro objizdkovy turnus, posilovy turnus 
				 	i $lg($lg(myval,19),1) s idikony=2
				 	i $lg($lg(myval,19),2) s idikony=1
				 	s popis1=""														//cinnost
				 	s omez=0
				 	//pravidelna
				 	i '$lg(myval,5) {
					 	s arrtu=$lg(myval,11)
					 	f myidx=1:1:$ll(arrtu) {
						 	s tmpval=$lg(arrtu,myidx)
						 	i popis1'="" s popis1=popis1_";"
						 	s popis1=popis1_$lg(tmpval,1)
						 	//kurs
						 	i $lg(tmpval,4)'="" s popis1=popis1_",K:"_$lg(tmpval,4) //kurs
						 	i $lg(tmpval,2)'="" s omez=1
						 	i $lg(tmpval,3)'="" s omez=1
					 	}
					 	//zaskolovani
					 	i $lg(myval,18) s popis1=$g(popis1)_",ZSK"
					 	//spoje+-
					 	i $ll($lg(myval,12)) s omez=1
					 	i $ll($lg(myval,13)) s omez=1
				 	}
				 	//nepravidelna													//cinnost
				 	i +$lg(myval,5) {
					 	s popis1="O"_$lg(myval,14)
				 	}
				 	s popis2=""
				 	//popis podle ridicu - vozidlo, doplnit evc
				 	i '$g(in("par","typ")) {
					 	s popis2=rz
					 	i descrz {
						 	s evc=""
						 	i rz'="" s evc=$lg($g(@mywrkglbpln@(-1,rz)),1)
						 	i ($g(descrz)=1)&(evc'="") s popis2=evc
						 	i ($g(descrz)=2)&(evc'="") s popis2=rz_"/"_evc
					 	} 	
				 	}
				 	//popis podle vozidel - ridic(i)
				 	i +$g(in("par","typ")) {
					 	s arros=$lg(myval,9)
					 	f myidx=1:1:$ll(arros) {
						 	s tmpval=$lg(arros,myidx)
						 	s myos=$lg(tmpval,1) s myjm=""
						 	i myos s myjm=$lg($g(@mywrkglbpln@(-2,myos)),1)
						 	i popis2'="" s popis2=popis2_";"
						 	s popis2=popis2_myjm
					 	}
				 	}
				 	s popis3="" i (idprac'=idpracdoc) s popis3=idpracdoc_"!"		//idpracoviste pro doklad z jineho pracoviste
				 	s tooltip=$lts($lg(myval,10),"; ")								//zatim poznamka
				 	s barvatextu=1													//1 cervena / 2 svetlezelena / 3 tmavezelena / 4 modra / 5 oranžova
				 	i '$lg(myval,4) s barvatextu=2									//plan
				 	i +$lg(myval,4)=2 s barvatextu=3								//plan s dokladem
				 	s barvapozadi=1													//1 bila / 2 svetle oranzova
				 	i omez s barvapozadi=1
				 	s hledatrz=$lb(rz)												//texty pro hledani podle rz
				 	s hledatjm=$lb(jm)												//texty pro hledani podle jmena
				 	i +$g(in("par","typ")) s hledatjm=$lfs(popis2,";")
				 	s hledatcin=$lfs(popis1,";")								    //texty pro hledani podle cinnosti
					s mycellval=$lb(iddoc,typ,typdoc,moznoedit,hrlod,hrldo,idikony,popis1,popis2,popis3,tooltip,barvatextu,barvapozadi,hledatrz,hledatjm,hledatcin)
					s @glb@(3,os,hrl,$i(@glb@(3,os,hrl)))=mycellval
				}
				//data doklady
				s iddoc="" f {
					s myval="" s iddoc=$o(@mywrkglbpln@(myidxdtapln,id,hrl,2,iddoc),1,myval) i iddoc="" q
					s docrrmm=$p(iddoc,"|",2)
					s doccis=$p(iddoc,"|",3)
					s rz=$lg(myval,4)
					//vykony za id
					i docrrmm=vykrrmm {
						s minvyk=minvyk+$lg(myval,2)
						s kmvyk=kmvyk+$lg(myval,3)
					}
					//
					s typ=1															//0 plan / 1 doklad / 2 grafikon
					s typdoc=0 i doccis>qsj s typdoc=1								//0 dzva / 1 sj / 2 grafikon
					s moznoedit=0 													//? jak s editaci dokladu ?
				 	s hrlod=hrl
				 	s hrldo=$lg(myval,1)
				 	s idikony=0		 												//0 nic / 1 objizdkovy / 2 posilovy //doplnit ikonu pro objizdkovy turnus, posilovy turnus 
				 	s popis1=""														//cinnost
				 	//pravidelna
				 	i doccis'>qsj {
					 	s popis1="DZ"_doccis
					 	s arrtu=$lg(myval,5)
					 	f myidx=1:1:$ll(arrtu) {
						 	s tmpval=$lg(arrtu,myidx)
						 	i popis1'="" s popis1=popis1_";"
						 	s popis1=popis1_tmpval
					 	}
				 	}
				 	//nepravidelna
				 	else {
					 	s popis1="SJ"_(doccis-qsj)
				 	}
				 	//popis podle ridicu - vozidlo, doplnit evc
				 	i '$g(in("par","typ")) {
					 	s popis2=rz
					 	i descrz {
						 	s evc=""
						 	i rz'="" s evc=$lg($g(@mywrkglbpln@(-1,rz)),1)
						 	i ($g(descrz)=1)&(evc'="") s popis2=evc
						 	i ($g(descrz)=2)&(evc'="") s popis2=rz_"/"_evc
					 	} 	
				 	}
				 	//popis podle vozidel - ridic(i)
				 	i +$g(in("par","typ")) {
					 	s arros=$lg(myval,4)
					 	f myidx=1:1:$ll(arros) {
						 	s myos=$lg(arros,myidx) s myjm=""
						 	i myos s myjm=$lg($g(@mywrkglbpln@(-2,myos)),1)
						 	i popis2'="" s popis2=popis2_";"
						 	s popis2=popis2_myjm
					 	}
				 	}
				 	s popis3="" 													//jina provozovna nez je pracovist ... doplnit
				 	s tooltip=""													//zatim poznamka
				 	s barvatextu=4													//1 cervena / 2 svetlezelena / 3 tmavezelena / 4 modra / 5 oranžova
				 	s barvapozadi=1													//1 bila / 2 svetle oranzova
				 	s hledatrz=rz													//texty pro hledani podle rz
				 	s hledatjm=jm													//texty pro hledani podle jmena
				 	i +$g(in("par","typ")) s hledatjm=$lfs(popis2,";")
				 	s hledatcin=$lfs(popis1,";")								    //texty pro hledani podle cinnosti
					s mycellval=$lb(iddoc,typ,typdoc,moznoedit,hrlod,hrldo,idikony,popis1,popis2,popis3,tooltip,barvatextu,barvapozadi,hledatrz,hledatjm,hledatcin)
					s @glb@(3,os,hrl,$i(@glb@(3,os,hrl)))=mycellval	
				}
				//data grafikon
				s iddoc="" f {
					s myval="" s iddoc=$o(@mywrkglbpln@(myidxdtapln,id,hrl,3,iddoc),1,myval) i iddoc="" q
					s idgrf=$p(iddoc,"|",4)
					//vykony za id
					i actrrmm=vykrrmm {
						s minvyk=minvyk+$lg(myval,2)
						s kmvyk=kmvyk+$lg(myval,3)
					}
					//
					s typ=2															//0 plan / 1 doklad / 2 grafikon
					s typdoc=2														//0 dzva / 1 sj / 2 grafikon
					s moznoedit=0 													//0/1 mozno podle toho, zda je povolena na plan pracovisti 
					i '$g(in("par","typ")) s moznoedit=($d(arrprac("arr",2,idgrf))>0)
					i +$g(in("par","typ")) s moznoedit=($d(arrprac("arr",3,idgrf))>0)
				 	s hrlod=hrl
				 	s hrldo=$lg(myval,1)
				 	s idikony=0		 												//0 nic / 1 objizdkovy / 2 posilovy //doplnit ikonu pro objizdkovy turnus, posilovy turnus 
				 	s popis1=idgrf													//cinnost
				 	s popis2=$tr($j($$mh^OBapiED($lg(myval,2)),0,2),".",":")		//celkove hodiny
				 	s popis3="" 													//jina provozovna nez je pracovist ... doplnit
				 	s tooltip=""													//zatim poznamka
				 	s barvatextu=5													//1 cervena / 2 svetlezelena / 3 tmavezelena / 4 modra / 5 oranžova
				 	s barvapozadi=1													//1 bila / 2 svetle oranzova
				 	s hledatrz=""													//texty pro hledani podle rz
				 	s hledatjm=jm													//texty pro hledani podle jmena
				 	s hledatcin=$lb(idgfr)										    //texty pro hledani podle cinnosti
					s mycellval=$lb(iddoc,typ,typdoc,moznoedit,hrlod,hrldo,idikony,popis1,popis2,popis3,tooltip,barvatextu,barvapozadi,hledatrz,hledatjm,hledatcin)
					s @glb@(3,id,hrl,$i(@glb@(3,os,hrl)))=mycellval	
				}			
			}
			//suma za id 
        	s @glb@(1,id)=$lb(minvyk,kmvyk,0)
		}
		//definice sloupcu
		k isrrrrcal,myarrdcal
		f hrl=hrlfrom:1:hrlto {
			s rrrr=$p($$nd^OBapiED(hrl,0),".",3)
			i '$d(isrrrrcal(rrrr)) {
				k myarrdcal
				s err=$$gDCal^OBapiED(idfa,nmsp,rrrr,"",.myarrdcal) i err zt
				//kalendar neni vytvoren, udelam ho
				i ($g(myarrdcal("arr",(4+(mydcal*100)),1,"dta",1))="")!($g(myarrdcal("arr",(4+(mydcal*100)),1,"dta",3))="") {
					s err=$$mkDCal^OBapiED(idfa,nmsp,rrrr,.myarrdcal) i err zt
				}
				s isrrrrcal(rrrr)=""
				s mybeghrldcal=$$gminhrlrrmm^OBapiED((rrrr*100)+1)
			}
			s dn=$e($g(myarrdcal("arr",(4+(mydcal*100)),1,"dta",1)),hrl-mybeghrldcal+1)
			s sv=$e($g(myarrdcal("arr",(4+(mydcal*100)),1,"dta",3)),hrl-mybeghrldcal+1)
			// poznamky pro den
			k myarr s err=$$gPlnNote^OBapiED(idfa,nmsp,idprac,hrl,"",.myarr) i +err zt
			s mytxt=""
			s myidx="" f {
				s myidx=$o(myarr("arr",1,myidx)) i myidx="" q
				i $tr($g(myarr("arr",1,myidx))," ","")'="" {
					i mytxt'="" s mytxt=mytxt_$c(13,10)
					s mytxt=mytxt_$g(myarr("arr",1,myidx))
				}
			}
			// je zaloha planu
			k myarr s err=$$isDayBckUpPln^OBapiED(idfa,nmsp,idprac,hrl,"",.myarr) i +err zt
			s isdnbck=($g(myarr)>0)
			//
			s @glb@(2,hrl)=$lb(dn,sv,isdnbck,mytxt)
		}
	    // doplneni prescasu pro ridice
	    i (+$g(in("par","typ"))=0)&(+$g(in("par","zobrazitVykony"))) {
		    s id="" f {
			    s myval="" s id=$o(@glb@(1,id),1,myval) i id="" q
			    s du=$lg($g(@glb@(-1000,+$g(in("par","typ")),id)),7)
			    s $li(myval,3)=$lg(myval,1)-((du*60\1)*ddfond)
			    s @glb@(1,id)=myval
		    }  
	    }
	    //doplneni predpisu pro razeni ridicu
	    i '$g(in("par","typ")) {
		    //podle jmena
		    i +$g(in("par","radit"))=0 {
			    s id="" f {
				    s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
					s jm=$lg(myval,3)
					s @glb@(100,$$cnvDiaInd^OBapiED(jm_id))=id
		    	}
		    }
		    //podle TS nebo TS a poradi
		    i (+$g(in("par","radit"))=1)!(+$g(in("par","radit"))=2) {
			    //sestaveni prehledu myarridts(id,1)=$lb(ts,poradi) kmenova ts
			    //                   myarridts(id,2)=$lb(ts,poradi) nekmenova ts
			    k @mylglb k myarri k myarridts
				s myarri("glb")=mylglb
				s myarri("idprac",idprac)=""
				s myarri("tspl",1)=hrlfrom
				s err=$$lScTS^OBapiED(idfa,nmsp,.myarri,"") i +err zt
				s idts="" f {
					s idts=$o(@mylglb@(idprac,idts)) i idts="" q
					s hrlts="" f {
						s hrlts=$o(@mylglb@(idprac,idts,hrlts)) i hrlts="" q
						k myarr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrlts,"",.myarr) i +err zt
						s ts=$g(myarr("dta",1)) i ts="" continue
						s mycnt="" f {
							s mycnt=$o(myarr("arr",1,mycnt)) i mycnt="" q
							s id=$g(myarr("arr",1,mycnt,"dta",1))
							i id="" continue
							i +$g(myarr("arr",1,mycnt,"dta",2)) s myarridts(id,1)=$lb(ts,mycnt)
							i '$g(myarr("arr",1,mycnt,"dta",2)) s myarridts(id,2)=$lb(ts,mycnt)
						}
					}
				}
				k @mylglb
				s id="" f {
				    s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
					s jm=$lg(myval,3)
					s myts=$lg($g(myarridts(id,1)),1) s mycnt=$lg($g(myarridts(id,1)),2)
					i myts="" s myts=$lg($g(myarridts(id,2)),1) s mycnt=$lg($g(myarridts(id,2)),2)
					s $li(myval,9)=myts s $li(myval,10)=mycnt
					s @glb@(-1000,(+$g(in("par","typ"))),id)=myval
					//podle TS
					i (+$g(in("par","radit"))=1) s @glb@(100,$$cnvDiaInd^OBapiED(myts_jm_id))=id
					//podle TS a poradi
					i (+$g(in("par","radit"))=2) s @glb@(100,$$cnvDiaInd^OBapiED(myts_mycnt_jm_id))=id
				}
		    }
	    }
	    //doplneni predpisu pro razeni vozidel
	    i +$g(in("par","typ")) {
		    //podle rz
		    i '$g(descrz) {
			    s id="" f {
				    s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
					s @glb@(100,$lb("",id))=id
		    	}
		    }
		    //podle evc
		    i +$g(descrz) {
			    s id="" f {
				    s myval="" s id=$o(@glb@(-1000,(+$g(in("par","typ"))),id),1,myval) i id="" q
				    s evc=$g(myval,2)
					s @glb@(100,$lb(evc,id))=id
		    	}
		    }
	    }
	 	k @mylglb
 	}
 catch (ex) {
	s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
 }
 q ret
]]></Implementation>
</Method>

<Method name="GetResources">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datum")=dd.mm.rrrr
	// in("par","typ")=typ planu 0 podle ridicu / 1 podle vozidel
	// in("par","glb")=global, do ktereho vracet data
	// CACHE
	// @cchglb@(1,1,hrl,os)=$lb(idfa,os,jmeno,ns)
	// @cchglb@(1,2,hrl,rz)=$lb(idfa,rz,evc,ns)
	// @cchglb@(1,3,hrl,tu)=$lb(idtur)
	// VYSTUP:
	// typ=in("par","typ")
	// ridici
	// id=1 @glb@(1,indx)=$lb(osc,jmeno,stav,cinnost_popis,cinnost_info,$lb(iddoc,iddoc,..))
	// 		stav=0 volny / 1 pouzity / 2 nevyhovujici
	// vozidla
	// id=2 @glb@(2,indx)=$lb(rz,evc,stav,cinnost_popis,cinnost_info,$lb(iddoc,iddoc,..))
	//      stav=0 volny / 1 pouzity / 2 nevyhovujici
	// turnusy
	// id=3 @glb@(3,indx)=$lb(idturnusu,tu,stav,cinnost_popis,cinnost_info,kdo_jede,$lb(iddoc,iddoc,..))
	//      stav=0 volny / 1 pouzity
	//      posilovy 0/1
	//      objizdkovy 0/1
	//      neobsazovat 0/1
	// objednavky
	// id=4 @glb@(4,indx)=$lb(idobjednavky,cobj,stav,cinnost_popis,cinnost_info,kdo_jede,$lb(iddoc,iddoc,..))
	//      stav= 0 volny / 1 pouzity
	//      cinnost_popis=  od-do
	//      cinnost_info= kam/pristaveni/prepravce/osob
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s cchglb=$g(in("par","cchglb"))
        s glb=$g(in("par","glb"))
        s idprac=$g(in("par","pracoviste"))
        s hrl=$$dn^OBapiED(in("par","datum"))
        k myarrprgset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrprgset) i +err zt
		//co vypisovat u rz
		s descrz=$$gMainSetOne^OBapiED(idfa,nmsp,7,5)
		//dz
		s dz=$$gFaDz^OBapiED(idfa)
		//data planovaciho pracoviste
		k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) i +err zt
		// provozovna, zp
		s idprv=$g(arrprac("dta",1)) s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//pokud ridici nejsou v cache globalu doplnim
		//plan podle vozidel, vyrobim seznam ridicu
		//i (+$g(in("par","typ"))=1)&('$d(@cchglb@(1,1,hrl))) {
		i ('$d(@cchglb@(1,1,hrl))) {
			s in("par","datumOd")=in("par","datum")
			s in("par","datumDo")=in("par","datum")
			k @glb@(-1000)
			s isok=##class(ALVA.AUDO.API.PlanDopravyFce).seznamRidicu(.sys,.in,"") i 'isok s err=isok zt
			//prepis do globalu
			s os="" f {
				s myval="" s os=$o(@glb@(-1000,+$g(in("par","typ")),os),1,myval) i os="" q
				s jmeno=$lg(myval,3) s ns=$lg(myval,4) s kmenovarz=$lg(myval,9)
				s @cchglb@(1,1,hrl,os)=$lb(idfa,os,jmeno,ns)
				// zapis do planu - zpetna kompatibilita
				// s ^[nmsp]OBPL(idprac,hrl,"L",os)=jmeno_":"_ns_":"_idprv_":"_kmenrz
			}
			k @glb@(-1000)
		}
		//pokud vozidla nejsou v cache globalu doplnim
		//plan podle ridicu, vyrobim seznam vozidel	
		i (+$g(in("par","typ"))=0)&('$d(@cchglb@(1,2,hrl))) {
			 s in("par","datumOd")=in("par","datum")
			 s in("par","datumDo")=in("par","datum")
			 k @glb@(-1000)
			 s isok=##class(ALVA.AUDO.API.PlanDopravyFce).seznamVozidel(.sys,.in,"") i 'isok s err=isok zt
			 //prepis do globalu
			 s rz="" f {
				 s myval="" s rz=$o(@glb@(-1000,+$g(in("par","typ")),rz),1,myval) i rz="" q
				 s evc=$lg(myval,2) s ns=$lg(myval,4) s typ=$lg(myval,5)
				 s @cchglb@(1,2,hrl,rz)=$lb(idfa,rz,evc,ns)
			 	 //s ^[nmsp]OBPL(idprac,hrl,"A",rz)=typ_":"_ns_":"_idprv
			 }
			 //projit grafikon a doplnit polozky
			 k @glb@(-1000)
		}
		//pokud se planuje pravidelna, a turnusy nejsou v cache globalu doplnim
	    i ($g(arrprac("dta",5)))&('$d(@cchglb@(1,3,hrl))) {
		     s in("par","datumOd")=in("par","datum")
			 s in("par","datumDo")=in("par","datum")
			 s isok=##class(ALVA.AUDO.API.PlanDopravyFce).cchglbTurnusy(.sys,.in,"") i 'isok zt
	    }
	    //pokud se planuje nepravidelna, seznam objednavek
	    i ($g(arrprac("dta",6)))&('$d(@cchglb@(1,4,hrl))) {
		     s in("par","datumOd")=in("par","datum")
			 s in("par","datumDo")=in("par","datum")
			 s isok=##class(ALVA.AUDO.API.PlanDopravyFce).cchglbObjednavky(.sys,.in,"") i 'isok zt
	    }
 		// projdu data v planu a oznacim pouzite
 		k myarri,myarro
 		f cnt=1:1:4 {
	 		s indx="" f {
		 		s myval="" s indx=$o(@cchglb@(1,cnt,hrl,indx),1,myval) i indx="" q
		 		s myarri(cnt,indx)="" 
	 		}
 		}
 		s err=$$mkPlnResr^OBapiEDPlan(idfa,nmsp,idprac,hrl,.myarri,.myarro) i +err zt
 		s wrkres=$g(myarro("dta",2))
 		// plan podle vozidel, seznam  lidi
 		i +$g(in("par","typ"))=1 {
	 		k @glb@(1)
	 		//@glb@(1,indx)=$lb(osc,jmeno,stav,cinnost_popis,cinnost_info,$lb(iddoc,iddoc,..))
	 		s indx="" f {
		 		s myval="" s indx=$o(@cchglb@(1,1,hrl,indx),1,myval) i indx="" q
		 		s os=$lg(myval,2) s jmeno=$lg(myval,3)
		 		s sindx=$$cnvDiaInd^OBapiED(jmeno_os)
		 		s stav=0
		 		s cinnostpopis=""
		 		s cinnostinfo=""
		 		s iddocs=""
		 		//plan dopravy
		 		s iddoc="" f {
			 		s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,1,os,iddoc),1,myval) i iddoc="" q
			 		s stav=1
			 		s dsc1=$lg(myval,1) s dsc2=$lg(myval,2)
			 		i cinnostpopis'="" s cinnostpopis=cinnostpopis_","
			 		s cinnostpopis=cinnostpopis_dsc1
			 		i cinnostinfo'="" s cinnostinfo=cinnostinfo_","
			 		s cinnostinfo=cinnostinfo_dsc2
			 		//doklad jen z vlastniho pracoviste
			 		i $p(iddoc,"|",1)=idprac {
				 		i iddocs'="" s iddocs=iddocs_"~"
				 		s iddocs=iddocs_iddoc
			 		} 
		 		}
		 		s @glb@(1,sindx)=$lb(os,jmeno,stav,cinnostpopis,cinnostinfo,$lfs(iddocs,"~"))
		 		k ^||wrk.ALVA.AD(wrkres,1,os)
	 		}
	 		//projdu os co zustala a zavedu je do globalu
	 		s os="" f {
		 		s os=$o(^||wrk.ALVA.AD(wrkres,1,os)) i os="" q
		 		k arros d ##class(ALVA.MZDY.Ridici).LoadZamPrimo(idfa,nmsp,os,.arros)
		 		s jmeno=$g(arros("jmeno")) i jmeno="" s jmeno="<?>"
		 		s sindx=$$cnvDiaInd^OBapiED(jmeno_os)
		 		s stav=0
		 		s cinnostpopis=""
		 		s cinnostinfo=""
		 		s iddocs=""
		 		//plan dopravy
		 		s iddoc="" f {
			 		s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,1,os,iddoc),1,myval) i iddoc="" q
			 		s stav=1
			 		s dsc1=$lg(myval,1) s dsc2=$lg(myval,2)
			 		i cinnostpopis'="" s cinnostpopis=cinnostpopis_","
			 		s cinnostpopis=cinnostpopis_dsc1
			 		i cinnostinfo'="" s cinnostinfo=cinnostinfo_","
			 		s cinnostinfo=cinnostinfo_dsc2
			 		//doklad jen z vlastniho pracoviste
			 		i $p(iddoc,"|",1)=idprac {
				 		i iddocs'="" s iddocs=iddocs_"~"
				 		s iddocs=iddocs_iddoc
			 		} 
		 		}
		 		s @glb@(1,sindx)=$lb(os,jmeno,stav,cinnostpopis,cinnostinfo,$lfs(iddocs,"~"))
		 		k ^||wrk.ALVA.AD(wrkres,1,os)
	 		}
 		}
 		//plan podle lidi, seznam vozidel
 		i +$g(in("par","typ"))=0 {
	 		//@cchglb@(1,2,hrl,rz)=$lb(idfa,rz,evc,ns)
	 		//@glb@(2,indx)=$lb(evc,rz,stav,cinnost_popis,cinnost_info,$lb(iddoc,iddoc,..))
	 		//^||wrk.ALVA.AD(wrk,2,rz,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
	 		s indx="" f {
		 		s myval="" s ind=$o(@cchglb@(1,2,hrl,indx),1,myval) i indx="" q
		 		s rz=$lg(myval,2) s evc=$lg(myval,3)
		 		s stav=0
		 		s cinnostpopis=""
		 		s cinnostinfo=""
		 		s iddocs=""
		 		s iddoc="" f  {
				 	s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,2,rz,iddoc),1,myval) i iddoc="" q
			 		s stav=1
			 		s dsc1=$lg(myval,1) s dsc2=$lg(myval,2)
			 		i cinnostpopis'="" s cinnostpopis=cinnostpopis_","
			 		s cinnostpopis=cinnostpopis_dsc1
			 		i cinnostinfo'="" s cinnostinfo=cinnostinfo_","
			 		s cinnostinfo=cinnostinfo_dsc2
			 		//doklad jen z vlastniho pracoviste
			 		i $p(iddoc,"|",1)=idprac {
						i iddocs'="" s iddocs=iddocs_"~"
						s iddocs=iddocs_iddoc
			 		} 
		 		}
		 		s @glb@(2,rz)=$lb(rz,evc,stav,cinnostpopis,cinnostinfo,$lfs(iddocs,"~"))
		    	k ^||wrk.ALVA.AD(wrkres,2,rz)
	 		}
	 		//doplnim rz navic
	 		s rz="" f {
			 	s rz=$o(^||wrk.ALVA.AD(wrkres,2,rz)) i rz="" q
		 		s evc=##class(ALVA.VOZIDLA.MLAPI).VehicleGetEvc(sysnmsp,rz)
		 		s stav=0
		 		s cinnostpopis=""
		 		s cinnostinfo=""
		 		s iddocs=""
		 		s iddoc="" f  {
				 	s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,2,rz,iddoc),1,myval) i iddoc="" q
			 		s stav=1
			 		s dsc1=$lg(myval,1) s dsc2=$lg(myval,2)
			 		i cinnostpopis'="" s cinnostpopis=cinnostpopis_","
			 		s cinnostpopis=cinnostpopis_dsc1
			 		i cinnostinfo'="" s cinnostinfo=cinnostinfo_","
			 		s cinnostinfo=cinnostinfo_dsc2
			 		//doklad jen z vlastniho pracoviste
			 		i $p(iddoc,"|",1)=idprac {
						i iddocs'="" s iddocs=iddocs_"~"
						s iddocs=iddocs_iddoc
			 		} 
		 		}
		 		s @glb@(2,rz)=$lb(rz,evc,stav,cinnostpopis,cinnostinfo,$lfs(iddocs,"~"))
		    	k ^||wrk.ALVA.AD(wrkres,2,rz)	
	 		}
 		}
 	// seznam turnusu
 	i ($g(arrprac("dta",5))) {
	 	//@glb@(3,indx)=$lb(idturnusu,tu,stav,cinnost_popis,cinnost_info,kdo_jede,$lb(iddoc,iddoc,..))
	 	s tu="" f {
		 	s myval="" s tu=$o(@cchglb@(1,3,hrl,tu),1,myval) i tu="" q
		 	s idtur=$lg(myval,1)
		 	s stav=0
		 	s cinnostpopis=""
		 	s cinnostinfo=""
		 	s kdojede=""
		 	s iddocs=""
		 	i $d(^||wrk.ALVA.AD(wrkres,3,tu)) {
			 	//^||wrk.ALVA.AD(wrk,3,tu)=$lb(cntos,cntrz,dsc1,dsc2,idtur)
			 	s stav=1
			 	s myval=$g(^||wrk.ALVA.AD(wrkres,3,tu))
		 		s cntos=$lg(myval,1) s cntosobs=""
		 		s cntrz=$lg(myval,2) s cntrzobs=""
		 		s cinnostpopis=$lg(myval,3)
		 		s cinnostinfo=$lg(myval,4)
		 		//doklady turnusu
		 		s iddoc="" f {
			 		s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,3,tu,iddoc),1,myval) i iddoc="" q
			 		//^||wrk.ALVA.AD(wrk,3,tu,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbos,zask)
			 		//neni-li na dokladu ridic pak jeden
			 		s doccntos=$lg(myval,1) i 'doccntos s doccntos=1
			 		s dscos=$lg(myval,2)
			 		s zask=$lg(myval,3)
				 	//turnus je obsazenej, pokud neni zaskolovani
				 	i 'zask {
					 	s cntosobs=cntosobs+doccntos
					 	s cntrzobs=cntrzobs+1
				 	}
				 	//kdo jede
				 	s myrz=$p(iddoc,"|",3)
				 	//pokud se vypisujou evc, zjistit a doplnit !!!
				 	i kdojede'="" s kdojede=kdojede_" "
				 	s kdojede=kdojede_myrz //evc !!!
				 	f cnt=1:1:$ll(dscos) {
					 	s os=$lg(dscos,cnt)
					 	s jm="?" i os s jm=$lg($g(@cchglb@(1,1,hrl,os)),3)
					 	i os s kdojede=kdojede_"/"_os_" "_jm
				 	}
				 	//iddoc pouze pro vlastni pracoviste
				 	i $p(iddoc,"|",1)=idprac {
						i iddocs'="" s iddocs=iddocs_"~"
						s iddocs=iddocs_iddoc
			 		}
		 		}
		 		i cntos'<cntosobs s stav=1	
		 	}
		 	s @glb@(3,tu)=$lb(idtur,tu,stav,cinnostpopis,cinnostinfo,kdojede,$lfs(iddocs,"~"))
		 	k ^||wrk.ALVA.AD(wrkres,3,tu)
	 	}
	 	//doplnim turnusy navic
	 	s tu="" f {
		 	s tu=$o(^||wrk.ALVA.AD(wrkres,3,tu)) i tu="" q
		 	s stav=0
		 	s cinnostpopis=""
		 	s cinnostinfo=""
		 	s kdojede=""
		 	s iddocs=""
		 	i $d(^||wrk.ALVA.AD(wrkres,3,tu)) {
			 	//^||wrk.ALVA.AD(wrk,3,tu)=$lb(cntos,cntrz,dsc1,dsc2,idtur)
			 	s stav=1
			 	s myval=$g(^||wrk.ALVA.AD(wrkres,3,tu))
		 		s cntos=$lg(myval,1) s cntosobs=""
		 		s cntrz=$lg(myval,2) s cntrzobs=""
		 		s cinnostpopis=$lg(myval,3)
		 		s cinnostinfo=$lg(myval,4)
		 		s idtur=$lg(myval,5)
		 		//doklady turnusu
		 		s iddoc="" f {
			 		s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,3,tu,iddoc),1,myval) i iddoc="" q
			 		//^||wrk.ALVA.AD(wrk,3,tu,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbos,zask)
			 		//neni-li na dokladu ridic pak jeden
			 		s doccntos=$lg(myval,1) i 'doccntos s doccntos=1
			 		s lbos=$lg(myval,2)
			 		s zask=$lg(myval,3)
				 	//turnus je obsazenej, pokud neni zaskolovani
				 	i 'zask {
					 	s cntosobs=cntosobs+doccntos
					 	s cntrzobs=cntrzobs+1
				 	}
				 	//kdo jede
				 	s myrz=$p(iddoc,"|",3)
				 	//pokud se vypisujou evc, zjistit a doplnit !!!
				 	i kdojede'="" s kdojede=kdojede_" "
				 	s kdojede=kdojede_myrz //evc !!!
				 	f cnt=1:1:$ll(lbos) {
					 	s os=$lg(lbos,cnt)
					 	s jm="?" i os s jm=$lg($g(@cchglb@(1,1,hrl,os)),3)
					 	i os s kdojede=kdojede_"/"_os_" "_jm
				 	}
				 	//iddoc pouze pro vlastni pracoviste
				 	i $p(iddoc,"|",1)=idprac {
						i iddocs'="" s iddocs=iddocs_"~"
						s iddocs=iddocs_iddoc
			 		}
		 		}
		 		i cntos'<cntosobs s stav=1	
		 	}
		 	s @glb@(3,tu)=$lb(idtur,tu,stav,cinnostpopis,cinnostinfo,kdojede,$lfs(iddocs,"~"))
		 	k ^||wrk.ALVA.AD(wrkres,3,tu)
	 	}
 	}
 	// seznam objednavek
 	i ($g(arrprac("dta",6))) {
	 	//@glb@(4,indx)=$lb(idobjednavky,cobj,stav,cinnost_popis,cinnost_info,kdo_jede,$lb(iddoc,iddoc,..))
	 	k @glb@(4)
	 	//^||wrk.ALVA.AD(wrk,4,idobj)=$lb(cntos,cntrz,dsc1,dsc2,idobj,nuzal,typbus,hrlpr)
	 	s cobj="" f {
		 	s myval="" s cobj=$o(^||wrk.ALVA.AD(wrkres,4,cobj),1,myval) i cobj="" q
		 	s stav=0
		 	s idobj=$lg(myval,1)
		 	s cntos=$lg(myval,1) s cntosobs=""
		 	s cntrz=$lg(myval,2) s cntrzobs=""
		 	s cinnostpopis=$lg(myval,3) i $lg(myval,7)'="" s cinnostpopis=cinnostpopis_"/"_$lg(myval,7)
		 	s cinnostinfo=$lg(myval,4)
		 	s kdojede=""
		 	s idobj=$lg(myval,5)
		 	s iddocs=""
 			s iddoc="" f {
	 			s myval="" s iddoc=$o(^||wrk.ALVA.AD(wrkres,4,cobj,iddoc),1,myval) i iddoc="" q
 				//^||wrk.ALVA.AD(wrk,4,idobj,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc)
 				s doccntos=$lg(myval,1) i 'doccntos s doccntos=1
			 	s lbos=$lg(myval,2)
			 	s cntosobs=cntosobs+doccntos
				s cntrzobs=cntrzobs+1
				//kdo jede
				s myrz=$p(iddoc,"|",3)
				//pokud se vypisujou evc, zjistit a doplnit !!!
				i kdojede'="" s kdojede=kdojede_" "
				s kdojede=kdojede_myrz //evc !!!
				f cnt=1:1:$ll(lbos) {
					s os=$lg(lbos,cnt)
					s jm="?" i os s jm=$lg($g(@cchglb@(1,1,hrl,os)),3)
					i os s kdojede=kdojede_"/"_os_" "_jm
				}
				//iddoc pouze pro vlastni pracoviste
				i $p(iddoc,"|",1)=idprac {
					i iddocs'="" s iddocs=iddocs_"~"
					s iddocs=iddocs_iddoc
			 	}
 			}
 			i cntrz'<cntrzobs s stav=1
 			s @glb@(4,cobj)=$lb(idobj,cobj,stav,cinnostpopis,cinnostinfo,kdojede,$lfs(iddocs,"~"))
	 	}
 	}
 	k ^||wrk.ALVA.AD(wrkres)
 	k @myglb
	k @mylglb
 	// kontrola aut na udrzbu, oznaceni nevyhovujicich aut, kontrola k dnesku
 	}
 catch (ex) {
	s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
 }
 q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id planovaciho dokladu (idprac|hrl|rz|pc)
	// VYSTUP:
	// out("dta",... - data dokladu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprac=$p($g(in("id")),"|",1) s hrl=$p($g(in("id")),"|",2) s rz=$p($g(in("id")),"|",3) s pc=$p($g(in("id")),"|",4)
		k myarr s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.myarr) i +err zt
		k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		m out("dta")=myarr
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id planovaciho dokladu (idprac|hrl|rz|pc)
	// in("dta",... - data dokladu
	// VYSTUP:
	// out("id")=id
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprac=$p($g(in("id")),"|",1) s hrl=$p($g(in("id")),"|",2) s rz=$p($g(in("id")),"|",3) s pc=$p($g(in("id")),"|",4)
		i rz="" s rz="-"
		k myarr m myarr=in("dta")
		//datova konverze 
		k arri s arri("par",1)=1 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		k arro s err=$$sPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,.myarr,.arro) i +err zt
 		s out("id")=idprac_"|"_hrl_"|"_rz_"|"_$g(arro("pc"))
 		/*
 		//sherlock
 		
 		//d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,IdFa,Mlp,userNAme,IdUdálosti ze sherlocka,popis,.klice, .data,neodesílatmail,.msgMAil) 
		//d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,"CB_GWLOG",157,"Stanislav Kaska","AD|2","dokald 1234",.klice, .data) 
		//		klice
		// klice("OS")="Osobní číslo"
		// klice("ST")="Středisko"
		// klice("KA")="Kategorie"
		// klice("PR")="Provozovna"
		// klice("LI")="Linka"
		// klice("SP")="Spoj"
		// klice("TU")="Turnus"
		// klice("RZ")="Registrační značka"
		// klice("SK")="Skupina"
		// klice("ZA")="Zastávka"
		// klice("RO")="Rok"
		// klice("FR")="Fakturační řada"
		// klice("CI")="Číslo"
		// klice("OBD")="Období"
		// klice("JM")="Jméno"
		// klice("IDC")="ID auta"
		//
		//		data
		// data(klic)=$lb(new val, old val,Popis klíče- události)      
 		
 		k arri,arro
		s arri("par",1)="AD"
		s arri("par",2)=104 	//editace
		s arri("par",5)=$h
		s arri("par",6)=mlp_"~"_fullname
		s arri("par",10)=li
		s arri("par",11)=sp
		s arri("par",17)=hrl
		s arri("par",18)=""	//skupina
		s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
		*/
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="DataConversion">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par",1)=0 get / 1 set
	// arr ... data dokladu
	
	// VYSTUP:
	// arr ... data dokladu
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s typ=$g(in("par",1))
		//get
		i typ=0 {
		}
		//set
		i typ=1 {
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...)
	// VYSTUP:
	// out("id")=$lb(id,...) = id odstranenych turnusu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprac=$p($g(in("id")),"|",1) s hrl=$p($g(in("id")),"|",2) s rz=$p($g(in("id")),"|",3) s pc=$p($g(in("id")),"|",4)
			k arri,arro
			//odstraneni dokladu z databaze
			s arri("fullname")=fullname
			s err=$$dPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,.arri,.arro) i +err zt
			i $g(arro("stt"))=1 {
				s $li(out("id"),($ll($g(out("id")))+1))=idprac_"|"_hrl_"|"_rz_"|"_pc
				/*
				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=105 	//zruseni
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",10)=li
				s arri("par",11)=sp
				s arri("par",17)=hrl
				s arri("par",18)=""	//skupina
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)						
				*/
	 		}
		}		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.PlanDopravyFce">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65768,69266.619832</TimeChanged>
<TimeCreated>65724,39412.175093</TimeCreated>

<Method name="seznamRidicu">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//vyrobi seznam ridicu i se zapujcenyma ridicema  
	// VSTUP:
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datumOd")=dd.mm.rrrr
	// in("par","datumDo")=dd.mm.rrrr
	// in("par","glb")=global, do ktereho vracet data
	// in("par","os",os)="" data jen pro os
	// in("par","typ")=typ planu 0 podle ridicu / 1 podle vozidel
	// VYSTUP:
	// @glb@(-1000,typ,os)=data ridice $lb(idfa,os,jmeno,ns,PPod,PPdo,du,PPstatus,kmenRZ)
	// @glb@(-1000,typ,os,"dta",1)=bitmap, jak lze v datumOd-datumDo pouzit 
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s glb=$g(in("par","glb"))
        s idprac=$g(in("par","pracoviste"))
        s hrlfrom=$$dn^OBapiED($g(in("par","datumOd")))
        s hrlto=$$dn^OBapiED($g(in("par","datumDo")))
        s typ=+$g(in("par","typ"))
        k @glb@(-1000,typ)
        //bitova mapa kdy je mozno pouzit
        s bitmap="" f hrl=hrlfrom:1:hrlto s $li(bitmap,(hrl-hrlfrom+1))=1
		//ridici nejsou na vstupu
		i $o(in("os",""))="" {
			k myarri,myarr
			s myarri("par",1)=0			//podle os
			s myarri("arr",1,1)=""		//ridici
			s myarri("arr",3,idprac)=""	//pracoviste
			s myarri("arr",4,3)=""		//vracet DVznikuPP
			s myarri("arr",4,4)=""		//NS
			s myarri("arr",4,7)=""		//vracet DU
			s myarri("arr",4,25)=""		//vracet status PP
			s myarri("arr",4,21)=""		//vracet kmenRZ
			s myarri("arr",4,28)=""		//vracet DUkonceniPP
			s myarri("arr",4,29)=""		//vracet idfa
			s err=##class(ALVA.ADMAIN.ApiOS).list(idfa,nmsp,hrlfrom,.myarri,.myarr) i +err zt
			s idx="" f {
				s idx=$o(myarr("arr",idx)) i idx="" q
				s os=$g(myarr("arr",idx))
				s osidfa=$g(myarr("arr",idx,"dta",29))
				s jmeno=$g(myarr("arr",idx,"dta",1)) i jmeno'="-" s jmeno=$p(jmeno," ",1)_" "_$e($p(jmeno," ",2),1)_"."
				s ppod=$g(myarr("arr",idx,"dta",3))
				s ns=$g(myarr("arr",idx,"dta",4))
				s ppdo=$g(myarr("arr",idx,"dta",28))
				s du=$g(myarr("arr",idx,"dta",7))
				s ppst=$g(myarr("arr",idx,"dta",25))
				s kmenrz=$g(myarr("arr",idx,"dta",21))
				s val=$lb(osidfa,os,jmeno,ns,ppod,ppdo,du,ppst,kmenrz)
				s @glb@(-1000,typ,os)=val
				s @glb@(-1000,typ,os,"dta",1)=bitmap
			}
			// pridam zapujcene ridice
			k myarrzos
			f hrl=hrlfrom:1:hrlto {
				k myarr s err=$$lPlnZapOS^OBapiED(idfa,nmsp,idprac,hrl,"",.myarr) i +err zt
				s os="" f {
					s os=$o(myarr("arr",1,os)) i os="" q
					s myarrzos(os,hrl)=""
				}
				k myarr
			}
			s os="" f {
				s os=$o(myarrzos(os)) i os="" q
				//pokud je ridic jiz v seznamu pro pracoviste pak konec, nesmi se dostat zapujcka v pripade, ze je na pracoviste jiz pridelen 
				i $d(@glb@(-1000,typ,os)) q
				k myarr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrlfrom,os,"",.myarr) i +err zt
				s osidfa=$g(myarr("dta",29))
				s jmeno=$g(myarr("dta",1)) i jmeno'="-" s jmeno=$p(jmeno," ",1)_" "_$e($p(jmeno," ",2),1)_"."
				s ppod=$g(myarr("dta",3))
				s ns=$g(myarr("dta",4))
				s ppdo=$g(myarr("dta",28))
				s du=$g(myarr("dta",7))
				s ppst=$g(myarr("dta",25))
				s kmenrz=$g(myarr("dta",21))
				s val=$lb(osidfa,os,jmeno,ns,ppod,ppdo,du,ppst,kmenrz)
				//
				s osbitmap="" f hrl=hrlfrom:1:hrlto i $d(myarrzos(os,hrl)) s $li(osbitmap,(hrl-hrlfrom+1))=1
				s @glb@(-1000,typ,os)=val
				s @glb@(-1000,typ,os,"dta",1)=osbitmap
			}
			k myarrzos
		}
		//ridici jsou na vstupu
		i $o(in("os",""))'="" {
			s os="" f {
				s os=$o(in("os",os)) i os="" q
				k myarr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrlfrom,os,"",.myarr) i +err zt
				s os=$g(myarr("arr",idx))
				s osidfa=$g(myarr("dta",29))
				s jmeno=$g(myarr("dta",1)) i jmeno'="-" s jmeno=$p(jmeno," ",1)_" "_$e($p(jmeno," ",2),1)_"."
				s ppod=$g(myarr("dta",3))
				s ns=$g(myarr("dta",4))
				s ppdo=$g(myarr("dta",28))
				s du=$g(myarr("dta",7))
				s ppst=$g(myarr("dta",25))
				s kmenrz=$g(myarr("dta",21))
				s val=$lb(osidfa,os,jmeno,ns,ppod,ppdo,du,ppst,kmenrz)
				s osbitmap=""
        		f hrl=hrlfrom:1:hrlto i $d(myarrzos(os,hrl)) s $li(osbitmap,(hrl-hrlfrom+1))=1
				s @glb@(-1000,typ,os)=val
				s @glb@(-1000,typ,os,"dta",1)=osbitmap
			}
		}
		//pridam - pro doklady bez os
		s val=$lb(idfa,"-","-","","","",8,-1,"")
		s @glb@(-1000,typ,"-")=val
		s @glb@(-1000,typ,"-","dta",1)=bitmap
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="seznamVozidel">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//vyrobi seznam vozidel i se zapujcenymi  
	// VSTUP:
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datumOd")=dd.mm.rrrr
	// in("par","datumDo")=dd.mm.rrrr
	// in("par","glb")=global, do ktereho vracet data
	// in("par","rz",rz)="" data jen pro rz
	// in("par","typ")=typ planu 0 podle ridicu / 1 podle vozidel
	// VYSTUP:
	// @glb@(-1000,typ,rz)=data vozidla $lb(idfa,evc,rz,ns,typ)
	// @glb@(-1000,typ,rz,"dta",1)=bitmap, jak lze v datumOd-datumDo pouzit 
	// 
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s glb=$g(in("par","glb"))
        s idprac=$g(in("par","pracoviste"))
        s hrlfrom=$$dn^OBapiED(in("par","datumOd"))
        s hrlto=$$dn^OBapiED(in("par","datumDo"))
		s typ=+$g(in("par","typ"))
		k @glb@(-1000,typ)
		//bitova mapa kdy je mozno pouzit
        s bitmap="" f hrl=hrlfrom:1:hrlto s $li(bitmap,(hrl-hrlfrom+1))=1
		//vozidla nejsou na vstupu 
		i $o(in("par","rz",""))="" {
			k myarri,myarr
			s myarri("arr",1,0)=""
			s arri("arr",3,idprac)=""
			s err=##class(ALVA.ADMAIN.ApiRZ).list(idfa,nmsp,hrlfrom,.myarri,.myarr) i +err zt
			s rz="" f {
				s rz=$o(myarr("arr",rz)) i rz="" q
				s evc=$g(myarr("arr",rz,"dta",5))
				s ns=$g(myarr("arr",rz,"dta",3))
				s typa=$g(myarr("arr",rz,"dta",1))
				s val=$lb(idfa,evc,rz,ns,typa)
				s @glb@(-1000,typ,rz)=val
				s @glb@(-1000,typ,rz,"dta",1)=bitmap
			}
			//pridam zapujcena auta
			k myarrzrz
			f hrl=hrlfrom:1:hrlto {
				k myarr s err=$$lPlnZapRZ^OBapiED(idfa,nmsp,idprac,hrl,"",.myarr) i +err zt
				s rz="" f {
					 s rz=$o(myarr("arr",1,rz)) i rz="" q
					 s myarrzrz(rz,hrl)=""
				}
				k myarr
			}
			s rz="" f {
				s rz=$o(myarrzrz(rz)) i rz="" q
				//pokud je vozidlo jiz v seznamu pro pracoviste pak konec, nesmi se dostat zapujcka v pripade, ze je na pracoviste jiz prideleno
				i $d(@glb@(-1000,typ,rz)) q
				k myarr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrlto,rz,"",.myarr) i +err zt 
				s evc=$g(myarr("dta",41))
				s typa=$g(myarr("dta",5))
				s ns=$g(myarr("dta",4))
				s val=$lb(idfa,evc,rz,ns,typa)
				s rzbitmap="" f hrl=hrlfrom:1:hrlto i $d(myarrzrz(rz,hrl)) s $li(rzbitmap,(hrl-hrlfrom+1))=1
				s @glb@(-1000,typ,rz)=val
				s @glb@(-1000,typ,rz,"dta",1)=rzbitmap
			}
		}
		//vozidla jsou na vstupu
		i $o(in("par","rz",""))'="" {
			s rz="" f {
				s rz=$o(in("par","rz",rz)) i rz="" q
				k myarr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrlto,rz,"",.myarr) i +err zt 
				s evc=$g(myarr("dta",41))
				s typ=$g(myarr("dta",5))
				s ns=$g(myarr("dta",4))
				s val=$lb(idfa,evc,rz,ns,typ)
				s @glb@(-1000,typ,rz)=val
				s @glb@(-1000,typ,rz,"dta",1)=bitmap
			}
		}
		//pridam - pro doklady bez aut
		s val=$lb(idfa,"","-","")
		s @glb@(-1000,typ,"-")=val
		s @glb@(-1000,typ,"-","dta",1)=bitmap
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="cchglbTurnusy">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// doplneni turnusu do cache globalu za obdobi
	// VSTUP
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datumOd")=dd.mm.rrrr
	// in("par","datumDo")=dd.mm.rrrr
	// VYSTUP:
	// rozpis turnusu na obdobi od-do
	// @cchglb@(1,3,hrl,tu)=$lb(idtur)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s cchglb=$g(in("par","cchglb"))
        s idprac=$g(in("par","pracoviste"))
        s hrlod=$$dn^OBapiED(in("par","datumOd"))
        s hrldo=$$dn^OBapiED(in("par","datumDo"))
        //kill
        k @cchglb@(1,3)
        //nastaveni programu
        k myarrprgset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrprgset) i +err zt
		//data planovaciho pracoviste
		k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) i +err zt
		// provozovna, zp
		s idprv=$g(arrprac("dta",1)) s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//pokud se planuje pravidelna, seznam turnusu
	    i ($g(arrprac("dta",5))) {
		    k myarri k @mylglb s myarri("zp",zp)="" s myarri("turpl",2)=hrlod s myarri("glb")=mylglb
			s err=$$lTur^OBapiED(idfa,nmsp,.myarri,"") i +err zt
		    // je-li skupina turnusu, vyberu jen ty
			i +$g(arrprac("dta",20)) {
				k myarrltu s err=$$gPlnPracLstTu^OBapiED(idfa,nmsp,idprac,"",.myarrltu) i +err zt
				s tu="" f {
					 s tu=$o(@mylglb@(zp,tu)) i tu="" q
					 i '$d(myarrltu("arr",1,tu)) k @mylglb@(zp,tu)
				}
				k arrltu
			}
			//statistika turnusu
			k myarri,@myglb
 		    s myarri("glb")=myglb
 			s @myglb@("dta",1)=hrlod
 			s @myglb@("dta",2)=hrldo
 			//turnusy
 			s tu="" f {
	 			s tu=$o(@mylglb@(zp,tu)) i tu="" q
	 			s @myglb@("arr",1,tu)="" 
 			}
 			//okres pro prazdniny
 			s blo="" i idprv'="" s blo=$g(myarrprgset("arr",5,1,"prv",idprv))
 			i blo="" s blo=$g(myarrprgset("arr",5,1))
 			s @myglb@("dta",3)=blo
 			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.myarri,.myarro) i err zt
			//prepis do globalu
			s tu="" f {
				s tu=$o(@myglb@("arr",1,tu)) i tu="" q
				s hrltu="" f {
					s hrltu=$o(@myglb@("arr",1,tu,hrltu)) i hrltu="" q
					s idtur=zp_"|"_tu_"|"_hrltu
					s hrl="" f {
						s hrl=$o(@myglb@("arr",1,tu,hrltu,"arr",2,hrl)) i hrl="" q
						s @cchglb@(1,3,hrl,tu)=$lb(idtur)
					}
				}
			}		
	    }
		k @myglb
	 	k @mylglb
 	}
 catch (ex) {
	s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
 }
 q ret
]]></Implementation>
</Method>

<Method name="cchglbObjednavky">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// doplneni objednavek do cache globalu za obdobi
	// VSTUP
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
    // in("par","pracoviste")=id pracoviste
	// in("par","datumOd")=dd.mm.rrrr
	// in("par","datumDo")=dd.mm.rrrr
	// VYSTUP:
	// rozpis objednavek obdobi od-do
	// @cchglb@(1,4,hrl,cobj)=$lb(idobj)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        //vstupni promenne
        s cchglb=$g(in("par","cchglb"))
        s idprac=$g(in("par","pracoviste"))
        s hrlod=$$dn^OBapiED(in("par","datumOd"))
        s hrldo=$$dn^OBapiED(in("par","datumDo"))
        //kill
        k @cchglb@(1,4)
        //nastaveni programu
        k myarrprgset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrprgset) i +err zt
		//data planovaciho pracoviste
		k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) i +err zt
		// provozovna, zp
		s idprv=$g(arrprac("dta",1)) s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//pokud se planuje nepravidelna, seznam objednavek
		i ($g(arrprac("dta",6))) {
			k myarri,myarro
			s myarri("zp",zp)=""
		    s myarri("hrlod")=hrlod
		    s myarri("hrldo")=hrldo
 			s err=$$lObj^OBapiED(idfa,nmsp,.myarri,.myarro) i +err zt
 			s rr="" f {
	 			 s rr=$o(myarro("arr",zp,rr)) i rr="" q
 				 s pcobj="" f {
	 				 s pcobj=$o(myarro("arr",zp,rr,pcobj)) i pcobj="" q
 					 s cobj=$g(myarro("arr",zp,rr,cobj))
 					 i cobj="" continue
 					 s idobj=zp_"|"_cobj
 					 //data objednavky
 					 k myarr s err=$$gObj^OBapiED(idfa,nmsp,zp,cobj,"",.myarr)
 					 //kontrola na pracoviste
 					 i ($g(myarr("dta",76))'="")&($g(myarr("dta",76))'=idprac) k myarr continue
 					 s @cchglb@(1,4,hrl,cobj)=$lb(idobj)
 				 }
 			}
		}
		k @myglb
	 	k @mylglb
 	}
 catch (ex) {
	s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
 }
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.RozvrhPracDobyRidici">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65779,53242.730822</TimeChanged>
<TimeCreated>65776,48234.196004</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.RozvrhPracDobyRidici).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    //
    k in,out
    s in("glb")="^||w"
    s in("datumOd")="1.11.2019"
	s in("datumDo")="30.11.2019"
	s ^||w(13938)=""
	s ^||w(20100)=""
	s ^||w(2803)=""
    w ##class(ALVA.AUDO.API.RozvrhPracDobyRidici).GetPlan(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// nacteni dat z databaze
	// VSTUP
	// in("glb")=global do ktereho se vraci data
    // in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// @in("glb")@(os)=""			    	... vybrani ridici
	// VYSTUP:
	// @in("glb")@(os,hrl)=$lb(min)			... planovane hodiny (min)
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
	    s hrlOd=$$dn^OBapiED($g(in("datumOd")))
	    s hrlDo=$$dn^OBapiED($g(in("datumDo")))
        s myglb=$g(in("glb"))
        s os="" f {
	        s os=$o(@myglb@(os)) i os="" q
	        f hrl=hrlOd:1:hrlDo {
		        i '$d(^[nmsp]OBRPDOS(idfa,os,hrl)) continue
		        s val=$g(^[nmsp]OBRPDOS(idfa,os,hrl))
		        s @myglb@(os,hrl)=val
	        }
        }
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//zapis hodin do databaze
	// VSTUP
	// in("glb")=global s daty
    // in("datumOd")=dd.mm.rrrr			... je li def. datumOd a datumDo, vymazou se data 
	// in("datumDo")=dd.mm.rrrr
	// @in("glb")@(os,hrl)=$lb(min)     ... hodiny ridice
	// VYSTUP:
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
	    s isok=##class(ALVA.AUDO.API.RozvrhPracDobyRidici).Delete(.sys,.in,.out)
        s myglb=$g(in("glb"))
        s os="" f {
	        s os=$o(@myglb@(os)) i os="" q
	        s hrl="" f {
		        s hrl=$o(@myglb@(os,hrl)) i hrl="" q
		        s val=$g(@myglb@(os,hrl))
		        s ^[nmsp]OBRPDOS(idfa,os,hrl)=val
	        }
        }
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//vymazani naplanovanych hodin v obdobi in("datumOd") - in("datumDo") pro @in("glb")@(os)
	// VSTUP
	// in("glb")=global pro prenos dat
    // in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// @in("glb")@(os)=""			    ... vybrani ridici
	// VYSTUP:
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
	    i (+$g(in("datumOd")))&(+$g(in("datumDo"))) {
		    s hrlOd=$$dn^OBapiED($g(in("datumOd")))
	    	s hrlDo=$$dn^OBapiED($g(in("datumDo")))
        	s myglb=$g(in("glb"))
        	s os="" f {
	        	s os=$o(@myglb@(os)) i os="" q
	        	f hrl=hrlOd:1:hrlDo {
		        	k ^[nmsp]OBRPDOS(idfa,os,hrl)
	        	}
        	}
	    }
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="GetPlan">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// nacteni dat z planu dopravy
	// VSTUP
	// in("glb")=global do ktereho se vraci data
    // in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// @in("glb")@(os)=""			    	... vybrani ridici
	// VYSTUP:
	// @in("glb")@(os,hrl)=$lb(min)			... planovane hodiny (min)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
	    //
	    i (+$g(in("datumOd")))&(+$g(in("datumDo"))) {
		    s hrlOd=$$dn^OBapiED($g(in("datumOd")))
	    	s hrlDo=$$dn^OBapiED($g(in("datumDo")))
        	s myglb=$g(in("glb"))
        	k ^wwwj m ^wwwj(1)=in m ^wwwj(2)=@myglb
        	//naplanovana data
        	k arri
        	s arri("glb")=mylglb
        	s arri("jiz","od")=hrlOd
 			s arri("jiz","do")=hrlDo
        	s os="" f {
	        	s os=$o(@myglb@(os)) i os="" q
	        	s arri("osc",os)=""
        	}
        	s err=$$lPln^OBapiED(idfa,nmsp,.arri,"") i +err zt
        	//
        	s idprac="" f {
	        	s idprac=$o(@mylglb@("p",idprac)) i idprac="" q
	        	s hrl="" f {
		        	s hrl=$o(@mylglb@("p",idprac,hrl)) i hrl="" q
		        	s rz="" f {
			        	s rz=$o(@mylglb@("p",idprac,hrl,rz)) i rz="" q
			        	s pc="" f {
				        	s pc=$o(@mylglb@("p",idprac,hrl,rz,pc)) i pc="" q
				        	//zatim takto, volaji se tam fce z dokladu, az bude predelano, prejit na AUDO
				        	k myarr s err=##class(ALVA.ADPLANDOPRAVY.PlanData1).gPlnVykDta(idfa,nmsp,idprac,hrl,rz,pc,"",.myarr)
							i ('err)&($d(myarr("arr",1))) {
								s os="" f {
									s os=$o(myarr("arr",1,"osc",os)) i os="" q
									i '$d(@myglb@(os)) continue
									s min=$lg($g(@myglb@(os,hrl)),1)
									s min=min+$g(myarr("arr",1,"osc",os,"tuv",11))	//hodiny celkem z pravidelne
									s $li(@myglb@(os,hrl),1)=min
								}
							}
							i ('err)&($d(myarr("arr",2))) {
								s os="" f {
									s os=$o(myarr("arr",1,"osc",os)) i os="" q
									i '$d(@myglb@(os)) continue
									s min=$lg($g(@myglb@(os,hrl)),1)
									s min=min+$g(myarr("arr",2,"osc",os,"dta",21))	//hodiny celkem z nepravidelne
									s $li(@myglb@(os,hrl),1)=min
								}
							}
							k myarr
			        	}
		        	}
	        	}
        	}
	    }
	    k @mylglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusoveSkupiny">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65688,36485.790428</TimeChanged>
<TimeCreated>65665,57209.128565</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.TurnusoveSkupiny).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    s in("glb")=myglb
    s in("pracoviste")="VSETIN"
    s in("nazevTS")="17"
    s in("datumOd")="10.12.2017"
    w ##class(ALVA.AUDO.API.TurnusoveSkupiny).Is(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP
	// in("pracoviste")=idprac	 			... pokud je nadefinovano, berou se ts jen z uvedeneho pracoviste
    // in("pracoviste",idprac)=""	 		... pokud je nadefinovano, berou se ts jen z uvedeneho pracoviste
    // in("turnusovaskupina")=nazts 		...(cast nazvu ts, vratim ts, jejichz nazev zacina na ...)
 	// in("platikDatu")=$h 					... je-li def, pak vratim cas.var.spoju platnou k datu (jeden)
 	// in("platikDatuADal")=$h 				... je-li def, pak vratim cas.var.spoju platne k datu a dalsi (muze jich byt vice)
 	// in("glb")=glb pro prenos dat
	// VYSTUP:
	// @glb@("dta",idx,"dta"...)=...    - data turnusove skupiny
	// @glb@("dta",idx,"id")=id 		- id turnusove skupiny (idprac|idts|hrl)
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
        s myglb=$g(in("glb")) k @myglb
        // vyhledani turnusovych skupin
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        k arri
		s arri("glb")=mylglb
		m arri("idprac")=in("pracoviste")
		i $g(in("pracoviste"))'="" s arri("idprac",$g(in("pracoviste")))=""
	    i $g(in("platikDatu")) s arri("tspl",1)=$g(in("platikDatu"))
	    i $g(in("platikDatuADal")) s arri("tspl",2)=$g(in("platikDatuADal"))
	    i $tr($g(in("turnusovaskupina")),"*","")'="" s arri("par",1)=$g(in("turnusovaskupina"))
	    s err=$$lScTS^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
	    s idprac="" f {
		    s idprac=$o(@mylglb@(idprac)) i idprac="" q
		    s idts="" f {
			    s idts=$o(@mylglb@(idprac,idts)) i idts="" q
			    s hrl="" f {
				    s hrl=$o(@mylglb@(idprac,idts,hrl)) i hrl="" q
				    k myarr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrl,"",.myarr) i +err zt
				    k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
				    s myinx=$i(@myglb@("dta"))
 					m @myglb@("dta",myinx,"dta")=myarr
 					s @myglb@("dta",myinx,"id")=idprac_"|"_idts_"|"_hrl
			    }
		    }
	    }
 		k @mylglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Is">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("pracoviste")=idprac
	// in("nazevTS")=zadany nazev ts
	// in("datumOd")=dd.mm.rrrr casove varianty od
	// VYSTUP:
	// out("stt")=0 neexistuje / 1 exsituje
	// out("id")=id ts (idprac|idts|hrl) v pripade ze out("stt")=1
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out s out("stt")=0 s out("id")=""
		s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
		i $g(in("pracoviste"))'="" {
			s myhrl=$$dn^OBapiED($g(in("datumOd")))
			k arri,arro
			s arri("glb")=mylglb
			s arri("idprac",in("pracoviste"))=""
			s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
			//
			s idts="" f {
				s idts=$o(@mylglb@(in("pracoviste"),idts)) i idts="" q
				s hrl="" f {
					s hrl=$o(@mylglb@(in("pracoviste"),idts,hrl)) i hrl="" q
					//stejny nazev a datum od
					i ($g(@mylglb@(in("pracoviste"),idts,hrl,"dta",1))=$g(in("nazevTS")))&(myhrl=hrl) {
						s out("stt")=1
						s out("id")=in("pracoviste")_"|"_idts_"|"_hrl
					}
				}
			}
		}
		k @mylglb
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id ts (idprac|idts|hrl)
	// VYSTUP:
	// out("dta",... - data ts
	// out("arr",1,os,"dta",1)=jmeno
	// out("arr",2,rz,"dta",1)=evc
	// out("arr",2,rz,"dta",2)=typid
	// out("arr",2,rz,"dta",3)=typtx
	// out("arr",3,tu,"dta",1)=horlog casove varianty turnusu
	// out("arr",3,tu,"dta",2)=zacatek(min od pulnoci)
	// out("arr",3,tu,"dta",3)=konec(min od pulnoci, dalsi den >1440) 
	// out("arr",3,tu,"dta",4)=platnost turnusu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
		//
		s idprac=$p($g(in("id")),"|",1) s idts=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		k myarr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrl,"",.myarr) i +err zt
		k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		m out("dta")=myarr
		//
		s myhrl=$g(out("dta","dta",2)) i 'myhrl s myhrl=+$h
		//data ridicu
		k @myglb
		s cnt="" f {
			s cnt=$o(out("dta","arr",1,cnt)) i cnt="" q
			s os=$g(out("dta","arr",1,cnt,"dta",1))
			i os'="" {
				k myarr d ##class(ALVA.MZDY.Ridici).LoadZamPrimo(idfa,nmsp,os,.myarr)
				s out("arr",1,os,"dta",1)=$g(myarr("jmeno"))
			}
		} 
		//data vozidel 
		//ciselnik typu
		s err=$$VehicleTypeList^ALVAVOZIDLAapiC(idfa,sysnmsp,"",myglb)
		s cnt="" f {
			s cnt=$o(out("dta","arr",2,cnt)) i cnt="" q
			s rz=$g(out("dta","arr",2,cnt,"dta",1))
			i rz'="" {
				k myarr
				s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,myhrl,rz,"",.myarr)
				s out("arr",2,rz,"dta",1)=$$VehicleGetEvc^ALVAVOZIDLAapiC(sysnmsp,rz)
				s out("arr",2,rz,"dta",2)=+$$VehicleGetTyp^ALVAVOZIDLAapiC(sysnmsp,rz,myhrl)
				//je typ, doplnim popis
				i out("arr",2,rz,"dta",2)>0 {
					s out("arr",2,rz,"dta",3)=$g(@myglb@("typ",out("arr",2,rz,"dta",2),"dta",1))
				}
				//neni typ
				else {
					s out("arr",2,rz,"dta",2)=""
					s out("arr",2,rz,"dta",3)=""
				}
			}
		}
		//data turnusu
		s idpd="" f {
			s idpd=$o(out("dta","arr",3,idpd)) i idpd="" q
			s tu="" f {
				s tu=$o(out("dta","arr",3,idpd,"arr",1,tu)) i tu="" q
				s out("arr",3,tu)=""
			}
		}
		//odvozeni zp
		k myarr s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.myarr) i +err zt
		k zp s err=$$mkZP^OBapiED(idfa,+$g(myarr("dta",1)),"","",.zp)
		s tu="" f {
			s tu=$o(out("arr",3,tu)) i tu="" q
			k myarr
			s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,myhrl,"",.myarr)
			s out("arr",3,tu,"dta",1)=$g(myarr("dta",11))
			s out("arr",3,tu,"dta",2)=$$hm^OBapiED($g(myarr("dta",5)))
			s out("arr",3,tu,"dta",3)=$$hm^OBapiED($g(myarr("dta",6))+(($g(myarr("dta",4))-1)*1440))
			s out("arr",3,tu,"dta",4)=$g(myarr("dta",8))
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id ts (idprac|idts|hrl), pro novou je idts=""
	// in("dta",... - data ts
	// VYSTUP:
	// out("id")=id ts (idprac|idts|hrl)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//nastaveni programu
	    k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
	    //
		s idprac=$p($g(in("id")),"|",1) s idts=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		k myarr m myarr=in("dta")
		//datova konverze
		k arri s arri("par",1)=1 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		//zapis ts
		k arro s err=$$sScTS^OBapiED(idfa,nmsp,idprac,idts,hrl,.myarr,.arro) i +err zt
 		s out("id")=idprac_"|"_arro("ts")_"|"_hrl
 		/*
 		//sherlock
 		k arri,arro
		s arri("par",1)="AD"
		s arri("par",2)=104 	//editace
		s arri("par",5)=$h
		s arri("par",6)=mlp_"~"_fullname
		s arri("par",10)=li
		s arri("par",11)=sp
		s arri("par",17)=hrl
		s arri("par",18)=""	//skupina
		s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
		*/
		//podle nastaveni aktualizace kmenovych RZ podle TS
		i +$g(arrset("arr",7,6)) {
			j ClassMethod^%apiOBJ("ALVA.AUDO.API.TurnusoveSkupiny","jobActKmnRZ",idfa,nmsp,idprac)::0
		}
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="DataConversion">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par",1)=0 get / 1 set
	// arr ... data ts
	
	// VYSTUP:
	// arr ... data ts
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s typ=$g(in("par",1))
		//get
		i typ=0 {
			
		}
		//set
		i typ=1 {
			
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...)
	// VYSTUP:
	// out("id")=$lb(id,...) = id odstranenych ts
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprac=$p(id,"|",1) s idts=$p(id,"|",2) s hrl=$p(id,"|",3)
			k arri,arro s err=$$dScTS^OBapiED(idfa,nmsp,idprac,idts,hrl,.arri,.arro) i +err zt
			i $g(arro("stt","del"))=1 {
				s $li(out("id"),($ll($g(out("id")))+1))=id
				/*
				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=105 	//zruseni
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",10)=li
				s arri("par",11)=sp
				s arri("par",17)=hrl
				s arri("par",18)=""	//skupina
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)						
				*/
	 		}
		}		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Check">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("pracoviste")=idprac	 			... kontrola pro pracoviste
    // in("platikDatu")=$h			 		... datum platnosti pro kontrolu, pokud neni, bere se aktualni
	// VYSTUP:
	// out("msg",cnt)=txt					... protokol
	// 
	s ret=$$$OK
	s err=""
	k out
	$$$FROMSERVER
	try {
		s idprac=$g(in("pracoviste"))
		s hrl=$g(in("platikDatu")) i 'hrl s hrl=+$h
		//kontrola
		i idprac="" s err="idprac=" zt
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
		// nactu udaje pro planovaci pracoviste
		k arrPrac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrPrac) i +err zt
		// z idprac odvodim idprv a zp
		s idprv=$g(arrPrac("dta",1))
		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		// seznam lidi pro idprac k hrl
		k arri,arro
		s arri("par",1)=0				//podle os
		s arri("arr",1,1)=""			//ridici
		s arri("arr",3,idprac)="" 		//pro idprac
		s arri("arr",4,25)=""			//status
		s err=##class(ALVA.ADMAIN.ApiOS).list(idfa,nmsp,hrl,.arri,.arro) i +err zt
		m @myglb@("arr",0)=arro("arr") //...("arr",1,os)=os, ...("arr",1,os,"dta",1)=jm ...("arr",1,os,"dta",25)=status
		m @myglb@("arr",1)=arro("arr") //...("arr",1,os)=os, ...("arr",1,os,"dta",1)=jm ...("arr",1,os,"dta",25)=status	
		// seznam vozidel pro idprac k hrl
		k arri,arro
		s arri("dta",1)=0				//ziva auta
		s arri("arr",1,0)=""			//autobusy
		s arri("arr",3,idprac)="" 		//pro idprac
		s err=##class(ALVA.ADMAIN.ApiRZ).list(idfa,nmsp,hrl,.arri,.arro) i +err zt
		m @myglb@("arr",2)=arro("arr") //...("arr",2,rz)=id, ...("arr",2,rz,"dta",...)=...
		// seznam turnusu pro idprac k hrl
		//turnusy pro provozovnu
		k arri
		s arri("zp",zp)=""
		s arri("turpl",1)=hrl
		s arri("glb")=myglb1 k @myglb1
		s err=$$lTur^OBapiED(idfa,nmsp,.arri,.wrk) i +err zt
		m @myglb@("arr",3)=@myglb1@(zp) k @myglb1
		// okruh turnusu pro pracoviste je seznam turnusu
		i $g(arrPrac("dta",20)) {
			k arro s err=$$gPlnPracLstTu^OBapiED(idfa,nmsp,idprac,"",.arro) i +err zt
			s tu="" f {
				s tu=$o(@myglb@("arr",3,tu)) i tu="" q
			 	i '$d(arr("arr",1,tu)) {
				 	k @myglb@("arr",3,tu)
			 	}
			}
			k arro
		}
		// seznam TS k hrl a podklady pro kontrolu
		k arri
		s arri("idprac",idprac)=""
		s arri("tspl",1)=hrl
		s arri("glb")=myglb1 k @myglb1
		s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
		s ts="" f {
			s ts=$o(@myglb1@(idprac,ts)) i ts="" q
			s ihrl="" f {
				s ihrl=$o(@myglb1@(idprac,ts,ihrl)) i ihrl="" q
				s dscts=$g(@myglb1@(idprac,ts,ihrl,"dta",1))
				k arro s err=$$gScTS^OBapiED(idfa,nmsp,idprac,ts,ihrl,"",.arro) i +err zt
				// kontrola ridicu
				s cnt="" f {
					s cnt=$o(arro("arr",1,cnt)) i cnt="" q
					s os=$g(arro("arr",1,cnt,"dta",1))
					i os'="" {
						k @myglb@("arr",1,os)
						s @myglb@("arr",11,os,ts)=dscts
					}
				}
				// kontrola vozidel
				s cnt="" f {
					s cnt=$o(arro("arr",2,cnt)) i cnt="" q
					s rz=$g(arro("arr",2,cnt,"dta",1))
					i rz="-" s rz=""
					i rz'="" {
						k @myglb@("arr",2,rz)
						s @myglb@("arr",22,rz,ts)=dscts
					}
				}
				//kontrola turnusu
				s idpd="" f {
					s idpd=$o(arro("arr",3,idpd)) i idpd="" q
					s tu="" f {
						s tu=$o(arro("arr",3,idpd,"arr",1,tu)) i tu="" q
						k @myglb@("arr",3,tu)
						s @myglb@("arr",33,tu,ts)=dscts
						//neexistujici turnus
						k istu s err=$$gTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.istu) i +err zt
						i '$g(istu) s @myglb@("arr",33.1,tu,ts)=dscts s @myglb@("arr",33.1,tu,ts,idpd)=""
					}
				}
			}
		}
		//vyhledeni duplicit
		// @myglb@("arr",11,os,ts)=dscts
    	// @myglb@("arr",22,rz,ts)=dscts
		// @myglb@("arr",33,tu,ts)=dscts
		f ind=11,22,33 {
			s id="" f {
				s id=$o(@myglb@("arr",ind,id)) i id="" q
				s cnt=0
				s ts="" f {
					s ts=$o(@myglb@("arr",ind,id,ts)) i ts="" q
					s cnt=cnt+1
				}
				s @myglb@("arr",ind,id)=cnt
				i cnt<2 k @myglb@("arr",ind,id)
			}
		}
		//vystup do VB
		s igl=0
		//os nezarazena
		i $o(@myglb@("arr",1,""))'="" {
			s out("msg",$i(out("msg")))="řidiči nezařazení v TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s os="" f {
				s os=$o(@myglb@("arr",1,os)) i os="" q
				s jm=$g(@myglb@("arr",1,os,"dta",1))
				s sttos=$g(@myglb@("arr",1,os,"dta",25))
				s sttos=$p("~HPP~HDPČ~VDPČ~HDPP~VDPP","~",(sttos+2))
				s out("msg",$i(out("msg")))="  "_os_" - "_jm_" / "_sttos
			}
		}
		//rz nezarazene
		i $o(@myglb@("arr",2,""))'="" {
			s out("msg",$i(out("msg")))="vozidla nezařazená v TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s rz="" f {
				s rz=$o(@myglb@("arr",2,rz)) i rz="" q
				s out("msg",$i(out("msg")))="  "_rz
			}
		}
		//tu nezarazeny
		i $o(@myglb@("arr",3,""))'="" {
			s out("msg",$i(out("msg")))="turnusy nezařazené v TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s tu="" f {
				s tu=$o(@myglb@("arr",3,tu)) i tu="" q
				s out("msg",$i(out("msg")))="  "_tu
			}
		}
		//os duplicitne
		i $o(@myglb@("arr",11,""))'="" {
			s out("msg",$i(out("msg")))="řidiči zařazení ve více TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s os="" f {
				s os=$o(@myglb@("arr",11,os)) i os="" q
				s jm=$g(@myglb@("arr",0,os,"dta",1))
				s sttos=$g(@myglb@("arr",0,os,"dta",25))
				s sttos=$p("~HPP~HDPČ~VDPČ~HDPP~VDPP","~",(sttos+2))
				s dsc=""
				s idts="" f {
					s idts=$o(@myglb@("arr",11,os,idts)) i idts="" q
					i dsc'="" s dsc=dsc_";"
					s dsc=dsc_$g(@myglb@("arr",11,os,idts)) 
				}
				i sttos'="" s dsc=sttos_", TS="_dsc
				s out("msg",$i(out("msg")))="  "_os_" - "_jm_" / "_dsc
			}
		}
		//rz duplicitne
		i $o(@myglb@("arr",22,""))'="" {
			s out("msg",$i(out("msg")))="vozidla zařazená ve více TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s rz="" f {
				s rz=$o(@myglb@("arr",22,rz)) i rz="" q
				s dsc=""
				s idts="" f {
					s idts=$o(@myglb@("arr",22,rz,idts)) i idts="" q
					i dsc'="" s dsc=dsc_";"
					s dsc=dsc_$g(@myglb@("arr",22,rz,idts))
				}
				s out("msg",$i(out("msg")))="  "_rz_" / "_dsc
			}
		}
		//tu duplicitne
		i $o(@myglb@("arr",33,""))'="" {
			s out("msg",$i(out("msg")))="turnusy zařazené ve více TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s tu="" f {
				s tu=$o(@myglb@("arr",33,tu)) i tu="" q
				s dsc=""
				s idts="" f {
					s idts=$o(@myglb@("arr",33,tu,idts)) i idts="" q
					i dsc'="" s dsc=dsc_";"
					s dsc=dsc_$g(@myglb@("arr",33,tu,idts)) 
				}
				s out("msg",$i(out("msg")))="  "_tu_" / "_dsc
			}
		}
		//turnusy neplatne
		i $o(@myglb@("arr",33.1,""))'="" {
			s out("msg",$i(out("msg")))="neplatné turnusy zařazené v TS platných k "_$$nd^OBapiED(hrl,0)_" :"
			s tu="" f {
				s tu=$o(@myglb@("arr",33.1,tu)) i tu="" q
				s dsc=""
				s idts="" f {
					s idts=$o(@myglb@("arr",33.1,tu,idts)) i idts="" q
					i dsc'="" s dsc=dsc_";"
					s dsc=dsc_$g(@myglb@("arr",33.1,tu,idts)) 
				}
				s out("msg",$i(out("msg")))="  "_tu_" / "_dsc
			}
		}
		k @myglb
		k @myglb1		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="jobActKmnRZ">
<ClassMethod>1</ClassMethod>
<FormalSpec>idfa:%String,nmsp:%String,idprac:%String</FormalSpec>
<Implementation><![CDATA[
	s err=""
	//d ##class(ALVA.AUDO.API.TurnusoveSkupiny).jobActKmnRZ("VS_CSAD","user","VSETIN")
	try {
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
		//seznam lidi pro idprac k dnesku
		k arri,arro
		s arri("par",1)=0			//radit dle os
		s arri("arr",1,1)=""		//ridici
		s arri("arr",3,idprac)=""	//pracoviste
		s err=##class(ALVA.ADMAIN.ApiOS).list(idfa,nmsp,+$h,.arri,.arro) i +err zt
		s idx="" f {
			s idx=$o(arro("arr",idx)) i idx="" q
			s os=$g(arro("arr",idx))
			i os'="" s @myglb@(os)="~"
		} 
		//ts k dnesku
		k arri,arro
		s arri("idprac",idprac)=""
		s arri("tspl",1)=+$h
		s arri("glb")=myglb1
 		s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
 		s idts="" f {
			s idts=$o(@myglb1@(idprac,idts)) i idts="" q
 			s hrl="" f {
				s hrl=$o(@myglb1@(idprac,idts,hrl)) i hrl="" q
				k myarr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrl,"",.myarr) i +err zt
 				// os
 				s cnt="" f {
					s cnt=$o(myarr("arr",1,cnt)) i cnt="" q
 					s os=$g(myarr("arr",1,cnt,"dta",1)) i os="" continue
 					//uz je rz z kmenove TS
 					i +$g(@myglb@(os)) continue
 					s iskments=(+$g(myarr("arr",1,cnt,"dta",2))>0)
 					s rz=$g(myarr("arr",2,cnt,"dta",1)) i rz="-" s rz=""
 					i rz="" s rz=$g(myarr("arr",2,"A","dta",1)) i rz="-" s rz=""
 					i (rz="") continue
 					s $p(@myglb@(os),"~",1)=iskments
 					s $p(@myglb@(os),"~",2)=rz
 				}
			} 
 		}
 		k @myglb1
 		s os="" f {
			s os=$o(@myglb@(os)) i os="" q
			s rz=$p($g(@myglb@(os)),"~",2)
			//ve fci setKmenRZ jsou osetreny fiktivni ridici, udaj se k nim nezapise !
			s err=##class(ALVA.MZDY.MLAPI).setKmenRZ(nmsp,idfa,os,rz)
 		}
 		k @myglb k @myglb1
	}			
 catch (ex) {
	}
 q
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.Turnusy">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65716,57390.25523</TimeChanged>
<TimeCreated>65532,32854.556278</TimeCreated>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//d ##class(ALVA.AUDO.API.Turnusy).test()
	s sys("U","delimiter")=$c(0)
    s sys("U","IdFa")="VS_CSAD"
    s sys("U","SystemDB")="mline"
    s sys("U","DATA")="user"
    s sys("U","MLP")=1
    s sys("U","loginName")="login"
    s sys("U","fullName")="name"
    s myglb="^||w"
    //
    k in,out
    s in("datum")="10.12.2020"
    w ##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.in,.out) w ! zw out
]]></Implementation>
</Method>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP
	// in("provoz")=provoz ... pokud je nadefinovano, berou se spoje jen z uvedene provozovny
    // in("provoz",provoz)="" ... pokud je nadefinovano, berou se spoje jen z uvedene provozovny
    // in("turnus")=jen turnusy ...(cast nazvu turnusu, vratim turnusy, jejichz nazev zacina na ...)
    // in("linkaspoj",linka,spoj) ... turnusy, ktere obsahuji linku a spoj
 	// in("platikDatu")=$h ... je-li def, pak vratim cas.var.spoju platnou k datu (jeden)
 	// in("platikDatuADal")=$h ... je-li def, pak vratim cas.var.spoju platne k datu a dalsi (muze jich byt vice)
 	// in("dny")=PoUtStCtPaSoNe ... maska platnosti podle jednotlivych dnu v tydnu (pr. 1110000 - PoUtSt)
 	// in("spoje50")=0/1/2 - vyber turnusu 0 vse / 1 se spoji do 50 km / 2 se spoji nad 50km
 	// in("glb")=glb pro prenos dat
	// VYSTUP:
	// @glb@("dta",idx,"dta"...)=... - data turnusu
	// @glb@("dta",idx,"id")=id 		- id turnusu (provoz|tu|hrl)
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
        s myglb=$g(in("glb")) k @myglb
        // vyhledani turnusu
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        k arri,arro
		s arri("glb")=mylglb
		m arri("prv")=in("provoz")
		i $g(in("provoz"))'="" s arri("prv",$g(in("provoz")))=""
		m arri("ls")=in("linkaspoj")
	    i $g(in("platikDatu")) s arri("turpl",1)=$g(in("platikDatu"))
	    i $g(in("platikDatuADal")) s arri("turpl",2)=$g(in("platikDatuADal"))
	    i $tr($g(in("turnus")),"*","")'="" s arri("par",1)=$g(in("turnus"))
	    i $g(in("dny"))'="" s arri("par",2)=$g(in("dny"))
	    s arri("par",3)=$g(in("spoje50"))
 		s err=$$lTur^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
	 	s zp="" f {
			s zp=$o(@mylglb@(zp)) i zp="" q
			s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
 			s tu="" f {
	 			s tu=$o(@mylglb@(zp,tu)) i tu="" q
 				s hrl="" f {
	 				s hrl=$o(@mylglb@(zp,tu,hrl)) i hrl="" q
 					k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
 					k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
 					s myinx=$i(@myglb@("dta"))
 					m @myglb@("dta",myinx,"dta")=myarr
 					s @myglb@("dta",myinx,"id")=idprv_"|"_tu_"|"_hrl
 				}
 			}
 		}
 		k @mylglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id turnusu (provoz|tu|hrl)
	// VYSTUP:
	// out("dta",... - data turnusu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprv=$p($g(in("id")),"|",1) s tu=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
		k arri s arri("par",1)=0 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		m out("dta")=myarr
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Set">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id turnusu (provoz|tu|hrl)
	// in("dta",... - data turnusu
	// VYSTUP:
	// out("id")=id
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s idprv=$p($g(in("id")),"|",1) s tu=$p($g(in("id")),"|",2) s hrl=$p($g(in("id")),"|",3)
		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		k myarr m myarr=in("dta")
		//datova konverze 
		k arri s arri("par",1)=1 s isok=..DataConversion(.sys,.arri,.myarr) i 'isok s err=isok zt
		//prepocet turnusu
		s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarr,"","") i +err zt
		//zapis turnusu do databaze
 		s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarr,"") i +err zt
 		s out("id")=$g(in("id"))
 		/*
 		//sherlock
 		
 		//d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,IdFa,Mlp,userNAme,IdUdálosti ze sherlocka,popis,.klice, .data,neodesílatmail,.msgMAil) 
		//d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,"CB_GWLOG",157,"Stanislav Kaska","AD|2","dokald 1234",.klice, .data) 
		//		klice
		// klice("OS")="Osobní číslo"
		// klice("ST")="Středisko"
		// klice("KA")="Kategorie"
		// klice("PR")="Provozovna"
		// klice("LI")="Linka"
		// klice("SP")="Spoj"
		// klice("TU")="Turnus"
		// klice("RZ")="Registrační značka"
		// klice("SK")="Skupina"
		// klice("ZA")="Zastávka"
		// klice("RO")="Rok"
		// klice("FR")="Fakturační řada"
		// klice("CI")="Číslo"
		// klice("OBD")="Období"
		// klice("JM")="Jméno"
		// klice("IDC")="ID auta"
		//
		//		data
		// data(klic)=$lb(new val, old val,Popis klíče- události)      
 		
 		
 		
 		k arri,arro
		s arri("par",1)="AD"
		s arri("par",2)=104 	//editace
		s arri("par",5)=$h
		s arri("par",6)=mlp_"~"_fullname
		s arri("par",10)=li
		s arri("par",11)=sp
		s arri("par",17)=hrl
		s arri("par",18)=""	//skupina
		s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)
		*/
	}			
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>

<Method name="DataConversion">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par",1)=0 get / 1 set
	// arr ... data spoje
	
	// VYSTUP:
	// arr ... data spoje
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s typ=$g(in("par",1))
		//get
		i typ=0 {
			s arr("dta",5)=$tr($j($g(arr("dta",5)),0,2),".",":")					//zacatek (hh.mm->hh:mm)
			s arr("dta",6)=$tr($j($g(arr("dta",6)),0,2),".",":")					//konec (hh.mm->hh:mm)
			s arr("dta",15)=$$hm^OBapiED($g(arr("dta",15)))							//DODK (hh.mm->min)
		
		}
		//set
		i typ=1 {
			s arr("dta",5)=+$tr($g(arr("dta",5)),":",".")							//zacatek (hh:mm->hh.mm)
			s arr("dta",6)=+$tr($g(arr("dta",6)),":",".")							//konec (hh:mm->hh.mm)
			s arr("dta",15)=$$mh^OBapiED($g(arr("dta",15)))							//DODK (min->hh.mm)
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...)
	// VYSTUP:
	// out("id")=$lb(id,...) = id odstranenych turnusu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			k arri,arr
			//odstraneni turnusu z databaze
			s arri("fullname")=fullname
 		 	s err=$$dTur^OBapiED(idfa,nmsp,zp,tu,hrl,.arri,.arro) i +err zt
			i $g(arro("stt","del"))=1 {
				s $li(out("id"),($ll($g(out("id")))+1))=id
				/*
				//sherlock
 				k arri,arro
				s arri("par",1)="AD"
				s arri("par",2)=105 	//zruseni
				s arri("par",5)=$h
				s arri("par",6)=mlp_"~"_fullname
				s arri("par",10)=li
				s arri("par",11)=sp
				s arri("par",17)=hrl
				s arri("par",18)=""	//skupina
				s err=##class(ALVA.SHERLOCK.Api).setChange(idfa,.arri,.arro)						
				*/
	 		}
		}		
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="CopyMove">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,...)
	// in("provoz")=provoz ... provoz, kam prekopirovat / presunout
	// in("presun")=0/1 ... 0 kopie / 1 presun (puvodni vymazu)
	// in("prepis")=0/1 ... prepsat existujici turnusy 0 ne / 1 ano
	// in("prefix")=prefix k oznaceni turnusu 
	
	// VYSTUP:
	// out("id")=$lb(id,...)
	// out("msg",cnt)=textova zprava pro zobrazeni
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		//idprvto,zpto kam se bude kopirovat, presouvat
		s idprvto=$g(in("provoz")) s err=$$mkZP^OBapiED(idfa,idprvto,"","",.zpto) i +err zt
		//aktualni obdobi, kontrola a hrl 1.
		k arro s err=$$gObdobi^OBapiED(idfa,nmsp,"",.arro) i +err zt
		s aktualniobdobi=$g(arro("act"))
		i 'aktualniobdobi s out("msg",$i(out("msg")))="v modulu AD není nadefinované aktuální období"
 	  	//nastaveni, oprava casové varianty turnusu 4,1)=pravidlena - turnusy - oprava cas.variantu turnusu z uzavrenych obdobi (0 ano / 1 ne)
 	  	k myarrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrset) i +err zt
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
			//kontrola, zda je mozne turnus ulozit  
			k myarri,myarro
			s myarri("id")=id
			s myarri("obdobi")=aktualniobdobi
			m myarri("arr",1)=myarrset
			s isok=##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.myarri,.myarro) i 'isok zt
			i '$g(myarro("stt")) {
					s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" zasahuje do uzavřeného období, není povoleno měnit turnusy v uzavřeném období !"
					continue
			}
			k myarri,myarro
			//zp
			k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			//nove oznaceni turnusu 
			s tuto=$g(in("prefix"))_tu
			//kontrola na existenci turnusu
			k myarr s err=$$isTur^OBapiED(idfa,nmsp,zpto,tuto,hrl,"",.myarr) i err ztrap 
			i (+$g(myarr))&('$g(in("prepis"))) {
				s out("msg",$i(out("msg")))="turnus "_idprvto_"/"_tuto_"/"_$$nd^OBapiED(hrl,0)_" již existuje, není možný jeho přepis !"
				continue
			}
			//kopie turnusu
			k myarr s err=$$copyTur^OBapiED(idfa,nmsp,zp,tu,hrl,zpto,tuto,hrl,"",.myarr) i err ztrap
			i $g(myarr("stt","copy")) {
				s out("msg",$i(out("msg")))="překopírován turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" -> "_idprvto_"/"_tuto_"/"_$$nd^OBapiED(hrl,0)
				s $li(out("id"),$ll($g(out("id")))+1)=idprvto_"|"_tuto_"|"_hrl
			}	
		}
		i $g(in("presun")) {
			k arri,arro
			s arri("fullname")=fullname
 		 	s err=$$dTur^OBapiED(idfa,nmsp,zp,tu,hrl,.arri,.arro) i +err zt
 		 	//zprava
			s out("msg",$i(out("msg")))="zrušen turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Rename">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=id
	// in("ntu")=novy nazev turnusu
	// in("prepis")=0/1 ... prepsat existujici turnusy 0 ne / 1 ano
	
	// VYSTUP:
	// out("id")=id
	// out("msg",cnt)=textova zprava pro zobrazeni
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
 	  	s id=$g(in("id")) s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
 	  	k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//nove oznaceni turnusu 
		s ntu=$g(in("ntu")) i ntu="" s err="ntu=" zt
 	  	//kontrola, zda muzu zapsat 
		k myarri,myarro s myarri("id")=id
		s isok=..CanBeEdited(.sys,.myarri,.myarro)
		s moznoopravit=+$g(myarro("stt"))
		i 'moznoopravit s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" zasahuje do uzavřeného období, není povoleno měnit turnusy v uzavřeném období !" q 
	    //kontrola na existenci turnusu
		k myarr s err=$$isTur^OBapiED(idfa,nmsp,zp,ntu,hrl,"",.myarr) i err ztrap 
		i (+$g(myarr))&('$g(in("prepis"))) s out("msg",$i(out("msg")))="turnus "_idprvto_"/"_tuto_"/"_$$nd^OBapiED(hrl,0)_" již existuje, není možný jeho přepis !" q
		//prejmenovani turnusu
		k arro s err=$$renameTur^OBapiED(idfa,nmsp,zp,tu,ntu,hrl,"",.arro) i err ztrap
		//turnus byl prejmenovan
		i arro("stt","rename")=1 {
			// vymazat v novem turnusu cislo pro strojky
			k myarr
			s err=$$gTur^OBapiED(idfa,nmsp,zp,ntu,hrl,"",.myarr) i +err zt
 			s myarr("dta",31)=""
 			s err=$$sTur^OBapiED(idfa,nmsp,zp,ntu,hrl,.myarr,"") i +err zt
 			s out("id")=idprv_"|"_ntu_"|"_hrl
 			s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" byl prejmenován na "_idprv_"/"_ntu_"/"_$$nd^OBapiED(hrl,0)
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="ListTydenniPlatnost">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	//
	// VYSTUP:
	// out("dta",idx)=id~platnostbitove~popis - data turnusu
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		s out("dta",$i(out("dta")))="1~10000000~jezdí v pondělí"
 		s out("dta",$i(out("dta")))="2~01000000~jezdí v úterý"
 		s out("dta",$i(out("dta")))="3~00100000~jezdí ve středu"
 		s out("dta",$i(out("dta")))="4~00010000~jezdí ve čtvrtek"
 		s out("dta",$i(out("dta")))="5~00001000~jezdí v pátek"
 		s out("dta",$i(out("dta")))="6~00000100~jezdí v sobotu"
 		s out("dta",$i(out("dta")))="7~00000010~jezdí v neděli"
		s out("dta",$i(out("dta")))="X~11111000~jezdí v pracovních dnech"
		s out("dta",$i(out("dta")))="+~00000011~jezdí v neděli a ve státem uznaný svátek"
		s out("dta",$i(out("dta")))=".~11111111~jezdí vždy"
 		s out("dta",$i(out("dta")))="g~11111011~jezdí denně kromě 'S'"
 		s out("dta",$i(out("dta")))="b~11111100~jezdí v 'X' a 'S'"
 		s out("dta",$i(out("dta")))="d~11110000~jezdí v 'X' po 'N'"
 		s out("dta",$i(out("dta")))="y~01111000~jezdí v 'X' kromě 'P'"
 		s out("dta",$i(out("dta")))="a~00000111~jezdí v 'S' a '+'"
 		s out("dta",$i(out("dta")))="P~10000000~jezdí v 'X' po 'N'"
 		s out("dta",$i(out("dta")))="U~01000000~jezdí v úterý, pokud není státem uznaný svátek"
 		s out("dta",$i(out("dta")))="T~00100000~jezdí ve středu, pokud není státem uznaný svátek"
 		s out("dta",$i(out("dta")))="A~00010000~jezdí ve čtvrtek, pokud není státem uznaný svátek"
 		s out("dta",$i(out("dta")))="V~00001000~jezdí v 'X' před 'S' nebo před '+'"
 		s out("dta",$i(out("dta")))="S~00000100~jezdí v sobotu, pokud není státem uznaný svátek"
 		s out("dta",$i(out("dta")))="M~00000010~jezdí v '+', po němž nenásleduje 'X'"
 		s out("dta",$i(out("dta")))="N~00000001~jezdí v '+' před 'X'"
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="ObnovNeobjizkovouVariantu">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//obnoveni predchozi neobjizdkove varinaty turnusu 
	// VSTUP:
	// in("id")=$lb(id,...)
	// in("datum")=hrl ... hrl, ke kteremu vytvorit casovou variantu 
	// in("prepis")=0/1 ... prepsat existujici turnusy 0 ne / 1 ano
	// VYSTUP:
	// out("id")=$lb(id,...)
	// out("msg",cnt)=textova zprava pro zobrazeni
	s ret=$$$OK s err=""
	$$$FROMSERVER
	try {
		k out
		//datum pro novou variantu turnusu
		s myhrl=$g(in("datum"))
		//kontrola, zda muzu obnovit 
		k myarri,myarro s myarri("datum")=$$nd^OBapiED(myhrl,0)
		s isok=..CanBeEdited(.sys,.myarri,.myarro)
		s moznoopravit=+$g(myarro("stt"))
		//obnoveni turnusu 
		i moznoopravit {
			f cnt=1:1:$ll($g(in("id"))) {
				s id=$lg($g(in("id")),cnt)
				s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
				k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
				k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
				//je objizdkovy
				i +$g(myarr("dta",36)) {
					//dohledani predchozi neobjizdkove varianty
					k larr s err=$$gAllTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,"",.larr) i +err zt "merr"
					s predchozihrl=""
					s tmphrl=hrl f {
						s tmphrl=$o(larr("arr",1,tmphrl),-1) i (tmphrl="")!(predchozihrl) q
						k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,tmphrl,"",.myarr) i +err zt
						//je objizdkovy
						i $g(myarr("dta",36)) continue
						s predchozihrl=tmphrl
					}
					//je predchozi neobjizdkova varianta  
					i predchozihrl {
						//kontrola na prepis stavajici varinty
						k myarr s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,myhrl,"",.myarr) i +err zt 
						//neni nebo je a je mozny prepis
						i (('$g(myarr))!((+$g(myarr))&(+$g(in("prepis"))))) {
							k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,predchozihrl,"",.myarr) i +err zt 
		 				    //nova varianta turnusu
		 					//vymazu datum do pokud je mensi nez od
		 					i (+$g(myarr("dta",33)))&(+$g(myarr("dta",33))<myhrl) s myarr("dta",33)=""
		 					//prepocet
		 					s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,myhrl,.myarr,"","") i +err zt
		 					//zapis
		 					s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,myhrl,.myarr,"") i +err zt
		 					//id pro navrat
		 					s $li(out("id"),$ll($g(out("id")))+1)=idprv_"|"_tu_"|"_myhrl
		 					s txt="nova varianta turnusu "_idprv_"/"_tu_"/"_$$nd^OBapiED(myhrl,0)
		 					//projdu spoje a vytvorim nove casove varianty
		 					s min="" f  {
			 					s min=$o(myarr("arr","tur",min)) i min="" q
			 					i $g(myarr("arr","tur",min,"dta",2))'=3 continue
			 					s li=$g(myarr("arr","tur",min,"dta",5))
			 					s sp=$g(myarr("arr","tur",min,"dta",6))
			 					//je jiz vytvorena casova varianta spoje k myhrl neaktualizuji ho
			 					k arrsp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,myhrl,"",.arrsp) i +err zt
			 					i $g(arrsp) continue
			 					//zjistim, jakou casovou variantu spoje pouzival predchozi turnus
			 					k hrlpsp s err=$$gTimeVariantSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.hrlpsp) i +err zt
			 					//zjistim, jakou casovou variantu spoje pouziva nova varianta turnusu
			 					k hrlasp s err=$$gTimeVariantSp^OBapiED(idfa,nmsp,li,sp,myhrl,"",.hrlasp) i +err zt
			 					//pokud se cas. varianty neshoduji, udelam novou
			 					i hrlpsp'=hrlasp {
				 					k arrsp
				 					s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrlpsp,"",.arrsp) i +err zt
				 					s err=$$sSp^OBapiED(idfa,nmsp,li,sp,myhrl,.arrsp,"") i +err zt
				 					k arrsp
				 					s txt=txt_",+"_li_"/"_sp
				 				}
		 				    }
		 				    s out("msg",$i(out("msg")))=txt
						}
						//turnus exisuje a neni mozny prepis
						else {
							s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(myhrl,0)_" již existuje, není možný jeho přepis !"
						}
					}		
					//neni predchozi neobjizdkova varianta  
					else {
						s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" nemá předchozí neobjížďkovou variantu !"
					}
				}
				//neni objizdkovy
				else {
					s out("msg",$i(out("msg")))="turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" není objížďkový !"
				}
			}
		}
		else {
			s out("msg",$i(out("msg")))="datum pro časovou varinatu"_$$nd^OBapiED(myhrl,0)_" zasahuje do uzavřeného období, není povoleno měnit turnusy v uzavřeném období !"
		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="CanBeEdited">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// vrati, zda lze casovou variantu turnusu ulozit do databaze (editovat)
	// (v nastaveni je "umoznit opravu casove varinty z uzavreneho obdobi")
	// VSTUP:
	// in("id")=id				...id turnusu, ze ktereho se pouzije datum casove platnosti
	// in("datum")=dd.mm.rrrr	...datum, ke kteremu to otestovat, pokud neni id turnusu
	// in("obdobi")=rrrrmm   	...aktualni obdobi v AD, pokud neni, program si ho nacte
	// in("arr",1)=arrset	 	...pole se nastavenim programu ($$gMainSet^OBapiED), pokud neni, program si ho nacte
 	// VYSTUP:
	// out("stt")=0/1 			...mozno opravit 0 ne / 1 ano 
	s ret=$$$OK s err=""
	$$$FROMSERVER
	try {
		k out
		s id=$g(in("id")) s myhrl=""
		i id'="" {
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s myhrl=$p(id,"|",3)
		}
		i $g(in("datum"))'="" {
			s myhrl=$$dn^OBapiED($g(in("datum")))
		}
		s moznoopravit=0
		i myhrl {
			//aktualni obdobi v AD
			s actrrrrmm=$g(in("obdobi"))
			//neprislo, nactu si ho
			i 'actrrrrmm {
				k myarr
				s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
				s actrrrrmm=$g(myarr("act"))
				k myarr
			}
			//v AD neni obdobi
			i 'actrrrrmm {
				s moznoopravit=1
			}
			else {
				//nastaveni na aktualizaci turnusu
				k myarr m myarr=in("arr",1)
				//neni nastaveni, nactu si ho
				i '$d(myarr("arr",4,1)) {
					k myarr s myerr=$$gMainSet^OBapiED(idfa,nmsp,"",.myarr) i +err zt	
				}
				//neni povoleno opravovat tur v minulem obdobi
				s neopravaminobd=+$g(myarr("arr",4,1))
				s moznoopravit=1
				i neopravaminobd {
					s mydat=$$nd^OBapiED(myhrl,0)
					s myrrrrmm=($p(mydat,".",3)*100)+$p(mydat,".",2)
					i myrrrrmm<actrrrrmm s moznoopravit=0
				}
			}
		}
		s out("stt")=+moznoopravit
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyEdit">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65713,55404.164063</TimeChanged>
<TimeCreated>65538,43805.679816</TimeCreated>

<Method name="TurnusJedeHorlog">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("provoz")=provoz 
	// in("dta",11)=horlog plati od
	// in("dta",33)=horlog plati do
	// in("dta",7)=tydenni~dlouhodoba
	// in("arr","omz",11)=jede jen	(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// in("arr","omz",12)=jede take	(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// in("arr","omz",13)=jede		(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// in("arr","omz",22)=nejede	(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// VYSTUP:
	// out("dta",horlog)=""			(horlog, kdy turnus jede)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		//nastaveni programu
		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
		s provoz=$g(in("provoz")) k zp s err=$$mkZP^OBapiED(idfa,provoz,"","",.zp) i +err zt
		s hrlod=$g(in("dta",11))
		s hrldo=$g(in("dta",33))
		s tpl=$p($g(in("dta",7)),"~",1)
		s dpl=$p($g(in("dta",7)),"~",2)
		// okres pro prazdniny
		s blo=$g(arrset("arr",5,1,"prv",provoz)) i blo="" s blo=$g(arrset("arr",5,1))
 	    // vypocet statistiky
 		k arri,arro
 		s arri("dta",1)=blo											// okres pro prazdniny
 		s arri("dta",2)=tpl    										// tydenni platnost
 		s arri("dta",3)=dpl    										// dlouhodoba platnost
 		s arri("dta",4)=$$cnvPlTxt^OBapiED(tpl,dpl)  				// platnost textove (pro vypocet pres pismena)
 		s arri("dta",5)=zp											// provoz pro kalendar
 		m arri("arr",1,11)=in("arr","omz",11) 						// jede jen
 		m arri("arr",1,12)=in("arr","omz",12) 						// jede take
 		m arri("arr",1,13)=in("arr","omz",13) 						// jede
 		m arri("arr",1,22)=in("arr","omz",22) 						// nejede
 		s err=$$mkJedePltTur^OBapiED(idfa,nmsp,hrlod,hrlod,hrldo,.arri,.arro) i +err zt
 		//
 		m out("dta")=arro("arr",1)
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="TurnusHorlogNaPlatnost">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("provoz")=provoz
    // in("horlogod")=horlog
    // in("horlogdo")=horlog
	// in("dta",horlog)=horlog kdy jede
	// VYSTUP:
	// out("dta",11)=horlog plati od
	// out("dta",33)=horlog plati do
	// out("dta",7)=tydenni~dlouhodoba
	// out("arr","omz",11)=jede jen     (@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// out("arr","omz",12)=jede take	(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// out("arr","omz",13)=jede			(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	// out("arr","omz",22)=nejede		(@dd.mm:dd.mm#dd.mm:dd.mm#...)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		s hrlod=$g(in("horlogod")) s datod=$$nd^OBapiED(hrlod,0)
		s hrldo=$g(in("horlogdo")) s datdo=$$nd^OBapiED(hrldo,0)
		//bitova mapa
		s bitmap="" s cntday=0
		f hrl=hrlod:1:hrldo {
			s cntday=cntday+1
			s $e(bitmap,cntday)=0
			i $d(in("dta",hrl)) s $e(bitmap,cntday)=1 
		}
	 	//zjistim roky pro kalendar
	 	s rrrrod=$p(datod,".",3)
	 	s rrrrdo=$p(datdo,".",3)
 		k arr f rrrr=rrrrod:1:rrrrdo s arr(rrrr)=""
		//vytvorim dopravni kalendar
 		s err=$$mkSttKal^JRapi(idfa,nmsp,.arr,"",.wrk) i err zt
 		k arri,arro
 		s arri("dta",1)=hrlod
	    s arri("dta",2)=hrldo
   	    s arri("dta",3)=bitmap
		s cntday=0
		f hrl=hrlod:1:hrldo {
			s cntday=cntday+1
			s rrrr=$p($$nd^OBapiED(hrl,0),".",3)
			s val=$g(^CacheTempJB(wrk,"cal",rrrr,hrl))
			//1,2,3,4,5,6,7,X,+,su
	   	    s $e(arri("arr",1,"1"),cntday)=0 i $p(val,":",1)["1" s $e(arri("arr",1,"1"),cntday)=1
   	   	    s $e(arri("arr",1,"2"),cntday)=0 i $p(val,":",1)["2" s $e(arri("arr",1,"2"),cntday)=1
	   	    s $e(arri("arr",1,"3"),cntday)=0 i $p(val,":",1)["3" s $e(arri("arr",1,"3"),cntday)=1
	   	    s $e(arri("arr",1,"4"),cntday)=0 i $p(val,":",1)["4" s $e(arri("arr",1,"4"),cntday)=1
	   	    s $e(arri("arr",1,"5"),cntday)=0 i $p(val,":",1)["5" s $e(arri("arr",1,"5"),cntday)=1
	   	    s $e(arri("arr",1,"6"),cntday)=0 i $p(val,":",1)["6" s $e(arri("arr",1,"6"),cntday)=1
	   	    s $e(arri("arr",1,"7"),cntday)=0 i $p(val,":",1)["7" s $e(arri("arr",1,"7"),cntday)=1
	   	    s $e(arri("arr",1,"X"),cntday)=0 i $p(val,":",3)["X" s $e(arri("arr",1,"X"),cntday)=1
	   	    s $e(arri("arr",1,"+"),cntday)=0 i $p(val,":",3)["+" s $e(arri("arr",1,"+"),cntday)=1
	   	    s $e(arri("arr",1,"su"),cntday)=+$p(val,":",2)
		 }
		 k ^CacheTempJB(wrk)	
		 //
   	     s err=$$mkOmzFromBitmap^JRapi(idfa,nmsp,.arri,.arro) i err zt
   	     //
   	     s out("dta",11)=hrlod
		 s out("dta",33)=hrldo
		 s tpl=$g(arro("dta",1))
		 s dpl=2
		 i 
		 s out("dta",7)=tpl_"~"_dpl	 	 
    	 f cnt=1,2,3,4 {
	    	 k valom s valom=""
	   	  	 s hrl="" f {
		   	  	s hrl=$o(arro("arr",1,cnt,hrl)) i hrl="" q
		   	  	s hrlomod=hrl
		   	  	s hrlomdo=$g(arro("arr",1,cnt,hrl))
		   	  	s datomod="" i hrlomod s datomod=$p($$nd^OBapiED(hrlomod,0),".",1,2)
		   	  	s datomdo="" i hrlomdo s datomdo=$p($$nd^OBapiED(hrlomdo,0),".",1,2)
		   	  	i valom'="" s valom=valom_"#"
		   	  	s valom=valom_datomod_":"_datomdo
	   	 	}
	   	 	i valom'="" {
		   	 	if cnt=1 s out("arr","omz",13)="@"_valom		//jede
		   	 	if cnt=2 s out("arr","omz",12)="@"_valom		//jede take
		   	 	if cnt=3 s out("arr","omz",11)="@"_valom		//jede jen
		   	 	if cnt=4 s out("arr","omz",22)="@"_valom		//nejede
	   	 	}
   	  	}   
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="ValidaceDatumovehoOmezeni">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("omezeni")=11,12,13,22 (typ omezeni)
    // in("dta",cnt)=zadane radky s datumy
	// VYSTUP:
	// out("dta",cnt)=validovane radky s datumy
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		s cnt="" f {
			s cnt=$o(in("dta",cnt)) i cnt="" q
			s val=$g(in("dta",cnt))
			s val=$tr(val,", ",".")
			k dat
			f cntdat=1:1:2 {
				s dat(cntdat)=$p(val,"-",cntdat)
				s dd=$p(dat(cntdat),".",1)
				s mm=$p(dat(cntdat),".",2)
				i 'dd k dat(cntdat) continue
				i 'mm k dat(cntdat) continue
				i (mm<1)!(mm>12) k dat(cntdat) continue
				i (dd<1)!(dd>$p("31,29,31,30,31,30,31,31,30,31,30,31",",",mm)) k dat(cntdat) continue
				i dd<10 s dd="0"_(+dd)
				i mm<10 s mm="0"_(+mm)
				s dat(cntdat)=dd_"."_mm
			}
			i $g(dat(1))'="" {
				i $g(dat(2))="" s dat(2)=dat(1)
				//jede jen - jen jeden datum jako v JR
				i $g(in("omezeni"))=11 s dat(2)=dat(1)
				s out("dta",$i(out("dta")))=dat(1)_"-"_dat(2)	
			}
		}   
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="TurnusDoTabulky">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par","provoz")=provoz
	// in("par","hrlcav")=horlog casove varianty turnusu
	// in("dta",...)= kompletni data turnusu
    // in("arr",...)= data turnusu
	// VYSTUP:
	// out("dta",irow)=data
	// out("msg",idx)=zprava
	// out("tuv",idx)=$lb(popis,hodnota,jednotka) ... vykony
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		//platnost z vety, pokud nebude, bude se muset posilat zvlast
		s provoz=$g(in("par","provoz")) k zp s err=$$mkZP^OBapiED(idfa,provoz,"","",.zp) i +err zt
		s hrl=$g(in("par","hrlcav"))
		//konverze do tabulky 
		k arrtab k arrtur m arrtur=in k arrtur("par")
		k arri,arro s arri("par","typkonverze")=0
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).cnvTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		//aktualizace udaju v tabulce 
		k arri,arro
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		//prepocet vykonu turnusu
		k arri,arrtuv s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTuv(.sys,zp,hrl,.arrtur,.arri,.arrtuv) i 'isok zt
		m out("dta")=arrtab
		m out("msg")=arro("msg")
		m out("tuv")=arrtuv("tuv")
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="TabulkaMoznoKopirovat">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("dta",1,irow)= data turnusu (tabulka), do ktereho se budou kopirovat data 
	// in("dta",2,irow)= data turnusu (tabulka), ze ktereho se budou kopirovat data 
	// VYSTUP:
	// out("dta",irow)= data turnusu (tabulka), ze ktereho se budou kopirovat data, doplnene o priznak, zda je mozne cinnost kopirovat  
	s ret=$$$OK
	s err="" k out
	$$$FROMSERVER
	try {
		k arrtab1,arrtab2
		m arrtab1=in("dta",1)
		m arrtab2=in("dta",2)
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTabCopy(.sys,.arrtab1,.arrtab2,"","") i 'isok zt
		m out("dta")=arrtab2
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="TabulkaDoTurnusu">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par","provoz")=provoz
	// in("par","hrlcav")=horlog casove varianty turnusu
	// in("dta",irow)=data tabulky
	// VYSTUP:
	// out("arr","tur",tm,"dta",x)=data
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		s provoz=$g(in("par","provoz")) k zp s err=$$mkZP^OBapiED(idfa,provoz,"","",.zp) i +err zt
		s hrl=$g(in("par","hrlcav"))
		k arrtur k arrtab m arrtab=in("dta")
		k arri,arro s arri("par","typkonverze")=1
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).cnvTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		m out=arrtur
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="TabulkaEdit">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("par","provoz")=provoz
	// in("par","hrlcav")=horlog casove varianty turnusu
	// in("par","cchglb")=cache global pro sledovani, nutno vytvorit se startem okna, po uzavreni vymazat
	// in("par","udalost",idx)=$lb(idUdalost,tmmin,data)
	//    kde: 
	//        idUdalost="add","edit","del","actSp","actBp","addSp","addDodk","addPrej","checkPl","shift","back"
	//        tmmin je cas, id v ramci tur (v tabulce na 3 pozici, je nutne pro edit, del, shift) 
	//        data=$lb(...)
    //          01 = casOd(min)      (pozor, uz v ramci dne, muze >1440) 
    //		    02 = casDo(min)      (pozor, uz v ramci dne, muze >1440)
    //			03 = idCinnost 		 (ciselnik 16)
    //			04 = km
    //			05 = doba(min)		 (pozor u spoju muzou byt vnitrni pauzy !!!, domluvit se, jak aktualizovat) 
    //			06 = li				 (linka)
    //			07 = sp              (spoj)
    //			08 = manipulacePred  (* nebo *mm nebo mm)
    //			09 = manipulacePo    (* nebo *mm nebo mm)
    //			10 = idZastavkaOd    (id nebo id/L)
    //			11 = idZastavkaDo    (id nebo id/L)
    //			12 = idUpresneni  	 (pro idCinnosti=10, ciselnik 17)
    //			13 = informace 	   	 (textovy udaj)
    //			14 = kurs
    //			15 = hrazenyPrejezd	 (0/1)
    //          16 = navaznySpoj     (udaje oddelene /) priznak_navazneho_spoje/scitat_parametry/preferovany SZ pro navazny spoj/preferovany SZ pro spoj, ze ktereho se prestupuje
    //          17 = prejezdDoCis    (priznak pro zapis prejezdu do ciselniku, pro idCinnosti=4,5,6,7 0/1=ulozit do číselníku 36)
    //
    //         pro idUdalost="addSp" jsou data=$lb(li,sp)
    //		   pro idUdalost="addDodk" jsou data=$lb(minZactek,minKonec)
    //		   pro idUdalost="checkPl" jsou data=$lb(hrlOd,hrlDo,tpl,dpl,omez11,omez12,omez13,omez22)
    //		   pro idUdalost="shift" jsou data=$lb(min) posunu (v ramci jedne davky je stejny casovy posun, posouvane cinnosti musi byt v udalosti zapsany v opacnem poradi proti posunu ... posun>0 odzadu, posun<0 odpredu)
    //		   pro idUdalost="back" jsou data=$lb(idRollBack) pro rollback, je-li idRollBack=-1, vratim se o jednu zpet... odkaz do @cchglb@(1,idRollBack) 
    //
	// in("dta",irow)=data tabulky
	// VYSTUP:
	// out("dta",idrow)=data tabulky
	// out("msg",idx)=zprava (stav~hh:mm~popis)
	// out("arr",1,idUdalost,idtm)="" ... co se do turnusu vlozilo (zatim pro idUdalost="add") (pro presun z turnusu)
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		s provoz=$g(in("par","provoz")) k zp s err=$$mkZP^OBapiED(idfa,provoz,"","",.zp) i +err zt
		s hrl=$g(in("par","hrlcav"))
		s cchglb=$g(in("par","cchglb"))
		//turnus z tabulky do arrtur
		k arrtur k arrtab m arrtab=in("dta")
		k arri,arro s arri("par","typkonverze")=1
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).cnvTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		//vychozi pole pro logovani historie
		k arrturcch m arrturcch=arrtur
		//projdu a nastavim udalosti
		s idx="" f {
			s myval="" s idx=$o(in("par","udalost",idx),1,myval) i idx="" q
			s idUdalost=$lg(myval,1)
			s tmmin=$lg(myval,2)
			s data=$lg(myval,3)
			//
			i (idUdalost="addSp") {
				//pro "addSp" vytvorim prom. data a prehodim udalost na "add", musi byt pred "add"
				s li=$lg(data,1)
				s sp=$lg(data,2)
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).getSpData(.sys,zp,hrl,li,sp,.data) i 'isok zt
				i data'="" {
					s idUdalost="add"
					s tmmin=$lg(data,1)
				}
			}
			i idUdalost="add" {
				//aktualizace dat
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actInsData(.sys,zp,hrl,.data) i 'isok zt
				//kontrola na misto v turnuse
				k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).isSpaceInTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
				s cnt="" f {
					s cnt=$o(arro("msg",cnt)) i cnt="" q
					s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
				}
				i (+$g(arro("dta",1))=1) {
					//zapis do prubehu
					k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addToTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
					s memtmmin=tmmin
					//zapis pro zpet + msg co se zapsalo + prejezd do ciselniku
					s tmmin="" f {
						s tmmin=$o(arro("arr",1,tmmin)) i tmmin="" q
						//zapis pro zpet, pod puvodnim idtm, podle toho se presouva
						i memtmmin="" s memtmmin=tmmin
						s out("arr",1,idUdalost,memtmmin)=""
						//=========================================================
						s isok=##class(ALVA.AUDO.API.TurnusyEditFce).getTxtLog(.sys,tmmin,.arrtur,.txt) i 'isok zt
						s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"přidáno: "_txt,.arrturcch) i 'isok zt 
						s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED($j(tmmin,0,0)#1440),0,2),".",":")_"~"_"přidáno: "_txt
						//zapis prejezdu do ciselniku
					    s prejezdDoCis=$lg(data,17)	//zapis prejezdu do cieslniku
					    i prejezdDoCis {
						    s myidCinnost=$g(arrtur("arr","tur",tmmin,"dta",2))
							i ((myidCinnost=4)!(myidCinnost=5)!(myidCinnost=6)!(myidCinnost=7)) {
								s km=$g(arrtur("arr","tur",tmmin,"dta",3))			//km
								s min=$g(arrtur("arr","tur",tmmin,"dta",4))			//doba
								s idzstod=$g(arrtur("arr","tur",tmmin,"dta",9))		//zastavka od
 								s idzstdo=$g(arrtur("arr","tur",tmmin,"dta",10))	//zastavka do
 								s err=$$sCisItm^OBapiED(idfa,nmsp,36,(idzstod_"~"_idzstdo),(km_"~"_min),"","")
							}
						}
					}
					//aktualizace zacatku a konce
					k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
					s cnt="" f {
						s cnt=$o(arro("msg",cnt)) i cnt="" q
						s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
					}
				}
			}
			//
			i idUdalost="edit" {
				//aktualizace dat
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actInsData(.sys,zp,hrl,.data) i 'isok zt
				//kontrola na misto v turnuse
				//zazalohoju pole a vymazu editovatelnou polozku z pole
				k memarrtur m memarrtur=arrtur k arrtur("arr","tur",tmmin)
				//kontrola na misto v turnuse
				k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).isSpaceInTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
				s cnt="" f {
					s cnt=$o(arro("msg",cnt)) i cnt="" q
					s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
				}
				//lze vlozit
				i (+$g(arro("dta",1))=1) {
					//zapis do prubehu
					k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addToTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
					//zapis pro zpet + msg, co se vlozilo + prejezd do ciselniku
					s tmmin="" f {
						s tmmin=$o(arro("arr",1,tmmin)) i tmmin="" q
						s isok=##class(ALVA.AUDO.API.TurnusyEditFce).getTxtLog(.sys,tmmin,.arrtur,.txt) i 'isok zt
						s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"aktualizováno: "_txt,.arrturcch) i 'isok zt
						s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED($j(tmmin,0,0)#1440),0,2),".",":")_"~"_"aktualizováno: "_txt	
						//zapis prejezdu do ciselniku
					    s prejezdDoCis=$lg(data,17)	//zapis prejezdu do cieslniku
					    i prejezdDoCis {
						    s myidCinnost=$g(arrtur("arr","tur",tmmin,"dta",2))
							i ((myidCinnost=4)!(myidCinnost=5)!(myidCinnost=6)!(myidCinnost=7)) {
								s km=$g(arrtur("arr","tur",tmmin,"dta",3))			//km
								s min=$g(arrtur("arr","tur",tmmin,"dta",4))			//doba
								s idzstod=$g(arrtur("arr","tur",tmmin,"dta",9))		//zastavka od
 								s idzstdo=$g(arrtur("arr","tur",tmmin,"dta",10))	//zastavka do
 								s err=$$sCisItm^OBapiED(idfa,nmsp,36,(idzstod_"~"_idzstdo),(km_"~"_min),"","")
							}
						}
					}
					//aktualizace zacatku a konce
					k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
					s cnt="" f {
						s cnt=$o(arro("msg",cnt)) i cnt="" q
						s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
					}
				}
				else {
					k arrtur m arrtur=memarrtur
				}
			}
			//
			i idUdalost="del" {
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).getTxtLog(.sys,tmmin,.arrtur,.txt) i 'isok zt
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"zrušeno: "_txt,.arrturcch) i 'isok zt
				k arrtur("arr","tur",tmmin)
				s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED($j(tmmin,0,0)#1440),0,2),".",":")_"~"_"zrušeno: "_txt
			}
			//
			i idUdalost="actSp" {
				k arrls
 				s err=$$fndDiffTurLS^OBapiED(idfa,nmsp,hrl,.arrtur,.arrls) i +err zt
 				i +$d(arrls("arr",1)) {
	 				k arro s err=$$actDiffTurLS^OBapiED(idfa,nmsp,hrl,.arrls,.arrtur,.arro) i +err zt
	 				k arrtur m arrtur=arro
				 	s tmmin="" f {
					 	s tmmin=$o(arrls("arr",2,tmmin)) i tmmin="" q
				 		i +$g(arrls("arr",2,tmmin,"dta",3)) {
					 		s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED(+$g(arrls("arr",2,tmmin,"dta",3))),0,2),".",":")_"~proběhla aktualizace spoje "_+$g(arrls("arr",2,tmmin,"dta",1))_"/"_+$g(arrls("arr",2,tmmin,"dta",2))
				 		}
				 	}
				 	s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"automatická aktualizace spojů",.arrturcch) i 'isok zt
 				}
 				else {
	 				s out("msg",$i(out("msg")))="0~~všechny spoje jsou aktuální, není potřeba je aktualizovat !"
 				}				
			}
			//
			i idUdalost="actBp" {
				k arro
				s err=$$actBPTur^OBapiED(idfa,nmsp,hrl,.arrtur,"",.arro) i +err zt
				i +$d(arro("arr",1)) {
					s tmmin="" f {
						 s tmmin=$o(arro("arr",3,tmmin)) i tmmin="" q
			 			 s out("msg",$i(out("msg")))="1~"_$tr($j($$mh^OBapiED(tmmin),0,2),".",":")_"~nelze přiřadit bezpečnostní přestávku !"
					}
			 		s tmmin="" f {
				 		s tmmin=$o(arro("arr",2,tmmin)) i tmmin="" q
				 		s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED(tmmin),0,2),".",":")_"~vložena bezpečnostní přestávka !"
			 		}  
			 		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"automatická aktualizace BP",.arrturcch) i 'isok zt
				}
				else {
					s out("msg",$i(out("msg")))="0~~v turnuse není potřeba bezpečnostních přestávek !"
				}					
			}
			//
			i idUdalost="addDodk" {
				k arro
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addDodkTur(.sys,zp,hrl,data,.arrtur,.arro) i 'isok zt
				s cnt="" f {
					s cnt=$o(arro("msg",cnt)) i cnt="" q
					s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
				}
				s tmmin="" f {
					s tmmin=$o(arro("arr",1,tmmin)) i tmmin="" q
					s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED(tmmin),0,2),".",":")_"~vloženo DODK"
				}
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"automatické vložení DODK",.arrturcch) i 'isok zt
			}
			//
			i idUdalost="addPrej" {
				k arro
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addPrejTur(.sys,zp,hrl,data,.arrtur,.arro) i 'isok zt
				s tmmin="" f {
					s tmmin=$o(arro("arr",1,tmmin)) i tmmin="" q
					s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED(tmmin),0,2),".",":")_"~vložen přejezd"
				}
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,"automatické doplnění přejezdů",.arrturcch) i 'isok zt
			}
			//
			i idUdalost="checkPl" {
				k arro
				s isok=##class(ALVA.AUDO.API.TurnusyEditFce).checkPlTur(.sys,zp,hrl,data,.arrtur,.arro) i 'isok zt
				s cnt="" f {
					 s cnt=$o(arro("msg",cnt)) i cnt="" q
					 s out("msg",$i(out("msg")))=$g(arro("msg",cnt))	 
				}
			}
			//
			i idUdalost="shift" {
				//posun oznacenych cinnosti, posun o min
			 	s shiftmin=$lg(data,1)
			 	//je posun
			 	i shiftmin {
				 	//popis pro log tady
			 		s dsclog="posun činností v "_$tr($j($$mh^OBapiED($j(tmmin#1440,0,0)),0,2),".",":")_" o "_+shiftmin_" min."
			 		//prijde li spoj, neposouvam, kontrola
			 	    i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
				 	    s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED($j(tmmin#1440,0,0)),0,2),".",":")_"~spoj nelze posunout !"
			 	    }
			 	    else {
			 			//fiktivni data
			 			s data=""
			 			s $li(data,1)=$j((tmmin+shiftmin),0,0)							//tmfr
			 			s $li(data,2)=($g(arrtur("arr","tur",tmmin,"dta",1))+shiftmin) 	//tmto
			 			s $li(data,3)=$g(arrtur("arr","tur",tmmin,"dta",2))				//id
			 			s $li(data,4)=$g(arrtur("arr","tur",tmmin,"dta",3))				//km
			 			s $li(data,5)=$g(arrtur("arr","tur",tmmin,"dta",4))				//tm
			 			s $li(data,6)=""												//li
			 			s $li(data,7)=""												//sp
			 			s $li(data,8)=""												//mapr
			 			s $li(data,9)=""												//mapo
			 			s $li(data,10)=$g(arrtur("arr","tur",tmmin,"dta",9))			//zstod
			 			s $li(data,11)=$g(arrtur("arr","tur",tmmin,"dta",10))			//zstdo
			 			s $li(data,12)=$g(arrtur("arr","tur",tmmin,"dta",11))			//idupr
			 			s $li(data,13)=$g(arrtur("arr","tur",tmmin,"dta",12))			//inf
			 			s $li(data,14)=""								      			//kurs
			 			s $li(data,15)=$g(arrtur("arr","tur",tmmin,"dta",21))			//hrazeny prejezd
			 			s $li(data,16)=""												//navazny spoj
			 			s $li(data,17)=""
			 			//uprava pole
			 			k memarrtur m memarrtur=arrtur k arrtur("arr","tur",tmmin)												//zapis prejezdu do ciselniku
			 			//kontrola na misto v turnuse
						k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).isSpaceInTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
						//posun je mozny
						i (+$g(arro("dta",1))=1) {
							//zapis do prubehu
							k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addToTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
							s mytmmin="" f {
								s mytmmin=$o(arro("arr",1,mytmmin)) i mytmmin="" q
								s out("msg",$i(out("msg")))="0~"_$tr($j($$mh^OBapiED($j(mytmmin#1440,0,0)),0,2),".",":")_"~posunuta činnost"
								
							}
							//aktualizace zacatku a konce
							k arro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,.data,.arrtur,.arro) i 'isok zt
							s cnt="" f {
								s cnt=$o(arro("msg",cnt)) i cnt="" q
								s out("msg",$i(out("msg")))=$g(arro("msg",cnt))
							}
							//zapis pro zpet 
							s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addCchGlb(cchglb,1,dsclog,.arrturcch) i 'isok zt
						}
						//posun neni mozny
						else {
							k arrtur m arrtur=memarrtur
							s out("msg",$i(out("msg")))="0~~"_"posunutá činnost časově koliduje s jinou činností, není možné ji posunout !"
						}
						k memarrtur
			 	    }
			 	}	
			}
			//
			i idUdalost="back" {
				s idRollBack=$lg(data,1)
				i idRollBack=-1 s idRollBack=$o(@cchglb@(1,""),-1)
				i idRollBack'="" {
					i $d(@cchglb@(1,idRollBack,1)) {
						k arrtur
						m arrtur=@cchglb@(1,idRollBack,1)
						//po navratu vymazu nasledujici body
						s idRollBack=(idRollBack-.01) f  {
							s idRollBack=$o(@cchglb@(1,idRollBack)) i idRollBack="" q
							k @cchglb@(1,idRollBack)
						}
					}
				}
			}	
		}
		// kontrola, zda ma turnus zadan zacatek, pokud ne upozorneni
        s tmmin=$o(arrtur("arr","tur",""))
        i tmmin'="" {
	        i $g(arrtur("arr","tur",tmmin,"dta",2))'=1 {
		        s out("msg",$i(out("msg")))="0~~turnus nemá zadán začátek, bude automaticky doplněn při přepočtu nebo zápisu do databáze !"
	        }
        }
 		// kontrola, zda ma turnus zadan konec, pokud ne upozorneni
 		s tmmin=$o(arrtur("arr","tur",""),-1)
 		i tmmin'="" {
	 		i $g(arrtur("arr","tur",tmmin,"dta",2))'=2 {
		 		s out("msg",$i(out("msg")))="0~~turnus nemá zadán konec, bude automaticky doplněn při přepočtu nebo zápisu do databáze !"
	 		}
 		}
		//turnus z arrtur do tabulky
		k arrtab
		k arri,arro s arri("par","typkonverze")=0
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).cnvTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		k arri,arro
		s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
		k arri,arrtuv s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTuv(.sys,zp,hrl,.arrtur,.arri,.arrtuv) i 'isok zt
		m out("dta")=arrtab
		s mycnt="" f {
			s mycnt=$o(arro("msg",mycnt)) i mycnt="" q
			s out("msg",$i(out("msg")))=$g(arro("msg",mycnt))
		}
		k arrturcch
		m out("tuv")=arrtuv("tuv")
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyEditFce">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65710,52499.104087</TimeChanged>
<TimeCreated>65545,38302.166236</TimeCreated>

<Method name="cnvTurTab">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&arrtur:%String,&arrtab:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	// konverze arrtur - arrtab 
	// VSTUP:
	// zp	- zp, kde je turnus vytvoren
	// hrl  - hrl casove varianty
    // arrtur - pole s daty prubehu turnusu
    // arrtab - pole s tabulkovymi daty
    // in("par","typkonverze") = 0 konverze arrtur - arrtab / 1 konverze arrtab - arrtur 
	// VYSTUP:
	// 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		i $g(in("par","typkonverze"))=0 {
			k arrtab
			s tm="" f {
				s tm=$o(arrtur("arr","tur",tm)) i tm="" q
				s myval=""
				s $li(myval,1)=0												//ikona obrazku (0 nic / 1 err / 2 varovani / 3 copy)
				s $li(myval,2)=""												//barva
				s $li(myval,3)=tm												//cas, id v ramci tur
				s $li(myval,4)=(tm\1440+1)										//den
				s $li(myval,5)=$j(tm,0,0)										//cas zacatek (min)
				s $li(myval,6)=$j($g(arrtur("arr","tur",tm,"dta",1)),0,0)		//cas konec (min)
				s $li(myval,7)=""												//cas zacatek (hh:mm)
				s $li(myval,8)=""												//cas konec (hh:mm)
				s $li(myval,9)=""												//pauza (hh:mm)
				s $li(myval,10)=$g(arrtur("arr","tur",tm,"dta",2))				//id cinnosti
				s $li(myval,11)=""												//cinnost(popis)
				s $li(myval,12)=$g(arrtur("arr","tur",tm,"dta",4))				//doba (min)
				s $li(myval,13)=""												//doba (hh:mm)
				s $li(myval,14)=$g(arrtur("arr","tur",tm,"dta",5))				//linka
				s $li(myval,15)=$g(arrtur("arr","tur",tm,"dta",6))				//spoj
				s $li(myval,16)=$g(arrtur("arr","tur",tm,"dta",7))				//manipulace od
				s $li(myval,17)=$g(arrtur("arr","tur",tm,"dta",8))				//manipulace do
				s $li(myval,18)=$g(arrtur("arr","tur",tm,"dta",9))				//id zastavky od
				s $li(myval,19)=""												//nazev zastavky od
				s $li(myval,20)=$g(arrtur("arr","tur",tm,"dta",10))				//id zastavky do
				s $li(myval,21)=""												//nazev zastavky do
				s $li(myval,22)=$g(arrtur("arr","tur",tm,"dta",3))				//km
				s $li(myval,23)=$g(arrtur("arr","tur",tm,"dta",11))				//id upredneni
				s $li(myval,24)=$g(arrtur("arr","tur",tm,"dta",12))				//informace
				s $li(myval,25)=""												//info o prepravnim systemu
				s $li(myval,26)=""												//info o rychlosti
				s $li(myval,27)=$g(arrtur("arr","tur",tm,"dta",20))				//kurz
		    	s $li(myval,28)=$g(arrtur("arr","tur",tm,"dta",21))				//hrazeny prejezd
		    	s val="" i $g(arrtur("arr","tur",tm,"dta",2))=3 {
			    	s $p(val,"/",1)=+$g(arrtur("arr","tur",tm,"dta",22))
			    	s $p(val,"/",2)=+$g(arrtur("arr","tur",tm,"dta",23))
			    	s $p(val,"/",3)=+$g(arrtur("arr","tur",tm,"dta",24))
			    	s $p(val,"/",4)=+$g(arrtur("arr","tur",tm,"dta",25))
		    	}
		    	s $li(myval,29)=val												//data navazneho spoje 
		    	s arrtab($i(arrtab))=myval
			}
		}
		i $g(in("par","typkonverze"))=1 {
			k arrtur("arr","tur")
			s cnt="" f {
				s cnt=$o(arrtab(cnt)) i cnt="" q
				s myval=$g(arrtab(cnt))
				s tm=$lg(myval,3)
				s arrtur("arr","tur",tm,"dta",1)=$lg(myval,6)
				s arrtur("arr","tur",tm,"dta",2)=$lg(myval,10)
				s arrtur("arr","tur",tm,"dta",3)=$lg(myval,22)
				s arrtur("arr","tur",tm,"dta",4)=$lg(myval,12)
				s arrtur("arr","tur",tm,"dta",5)=$lg(myval,14)
				s arrtur("arr","tur",tm,"dta",6)=$lg(myval,15)
				s arrtur("arr","tur",tm,"dta",7)=$lg(myval,16)
				s arrtur("arr","tur",tm,"dta",8)=$lg(myval,17)
				s arrtur("arr","tur",tm,"dta",9)=$lg(myval,18)
				s arrtur("arr","tur",tm,"dta",10)=$lg(myval,20)
				s arrtur("arr","tur",tm,"dta",11)=$lg(myval,23)
				s arrtur("arr","tur",tm,"dta",12)=$lg(myval,24)
				s arrtur("arr","tur",tm,"dta",20)=$lg(myval,27)
				s arrtur("arr","tur",tm,"dta",21)=$lg(myval,28)
				s arrtur("arr","tur",tm,"dta",22)=$p($lg(myval,29),"/",1)
				s arrtur("arr","tur",tm,"dta",23)=$p($lg(myval,29),"/",2)
				s arrtur("arr","tur",tm,"dta",24)=$p($lg(myval,29),"/",3)
				s arrtur("arr","tur",tm,"dta",25)=$p($lg(myval,29),"/",4)
			}	
		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="actTurTab">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&arrtur:%String,&arrtab:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	// aktualizace arrtab (doplneni udaju do tabulky) 
	// VSTUP:
	// zp	- zp, kde je turnus vytvoren
	// hrl  - hrl casove varianty
	// arrtur - pole s daty prubehu turnusu
    // arrtab - pole s tabulkovymi daty
	// VYSTUP:
	// out("msg",idx)=msg 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//ciselnik druhu spoje
		k arrc4 s err=$$gCis^OBapiED(idfa,nmsp,4,"",.arrc4) i +err zt
		//ciselnik cinnosti
		k arrc16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrc16) i +err zt
		//ciselnik upresneni
 		k arrc17 s err=$$gCis^OBapiED(idfa,nmsp,17,"",.arrc17) i +err zt
		//barevne schema
		k arrcolor s err=$$gTuRowColorSet^OBapiED(idfa,nmsp,"",.arrcolor) i +err zt
		//kontrola aktualnosti spoju
		k arrals s err=$$fndDiffTurLS^OBapiED(idfa,nmsp,hrl,.arrtur,.arrals) i +err zt
		//vypocet pauz
		k arrpau s isok=##class(ALVA.AUDO.API.TurnusyEditFce).getPauzaTur(.sys,zp,hrl,.arrtur,.arrpau) i 'isok s err=isok zt
		// aktualizace tabulky
		s cnt="" f {
			s myval="" s cnt=$o(arrtab(cnt),1,myval) i cnt="" q
			s tmmin=$lg(myval,3)
			s idcin=$lg(myval,10)
			//barva radku
			s $li(myval,2)=$g(arrcolor("arr",1,idcin))
			//cas zacatek (pro spoj manipulace)
			s min=$lg(myval,5) i idcin=3 s min=min+$lg(myval,16)
			s $li(myval,7)=$tr($j($$mh^OBapiED(min#1440),0,2),".",":")
			//cas konec (pro spoj manipulace)
			s min=$lg(myval,6) i idcin=3 s min=min-$lg(myval,17)
			s $li(myval,8)=$tr($j($$mh^OBapiED(min#1440),0,2),".",":")
			//pauza
			s $li(myval,9)=""
			i +$g(arrpau("arr",1,tmmin)) s $li(myval,9)=$tr($j($$mh^OBapiED($g(arrpau("arr",1,tmmin))),0,2),".",":")
			//cinnost
			s $li(myval,11)=$p($g(arrc16("arr",idcin)),"~",1)
			//doba
			s min=$lg(myval,12)
			s $li(myval,13)=$tr($j($$mh^OBapiED(min),0,2),".",":")
			//spoj
			i idcin=3 {
				s li=$lg(myval,14)
				s sp=$lg(myval,15)
				//obrazek err, neaktualni spoj
				i $d(arrals("arr",1,li,sp)) s $li(myval,1)=1
				//data spoje
				k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				//zastavky
				s $li(myval,18)=$g(arrsp("dta",6))
				s $li(myval,20)=$g(arrsp("dta",7))
				//radiobus - barva
				i +$g(arrsp("dta",19)) s $li(myval,2)=$g(arrcolor("arr",1,3.01))
				//objizdkovy - barva
				i +$g(arrsp("dta",23)) s $li(myval,2)=$g(arrcolor("arr",1,3.02))
				//informace
				s txt=""
				s txt="v."_$$nd^OBapiED($g(arrsp("hrl")),1)
				s txt=txt_"-"_$p($g(arrc4("arr",(+$g(arrsp("dta",4))))),"~",1)
				s txt=txt_"-"_$g(arrsp("dta",16))_" "_$$cnvPlDplTxt^OBapiED($g(arrsp("dta",17)))
				//vnitrni pauzy spoje
				i $o(arrsp("arr","pau",""))'="" {
 					s minpau="" f {
	 					 s minpau=$o(arrsp("arr","pau",minpau)) i minpau="" q
 						 s minpaubeg=$g(arrsp("dta",1))+minpau
 						 s minpauend=minpaubeg+$g(arrsp("arr","pau",minpau))
 						 i txt'="" s txt=txt_";"
 						 s txt=txt_"pauza:"_$tr($j($$mh^OBapiED(minpaubeg),0,2),".",":")
 						 s txt=txt_"-"
 						 s txt=txt_$tr($j($$mh^OBapiED(minpauend),0,2),".",":")
 					}
				}
				s $li(myval,24)=txt
				//prepravni system
				s txt=$g(arrsp("dta",12))
				i $d(arrsp("arr","prs")) {
					s txt=""
					s idprs="" f {
						s idprs=$o(arrsp("arr","prs",idprs)) i idprs="" q
						i txt'="" s txt=txt_";"
						s txt=txt_idprs_"="_$g(arrsp("arr","prs",idprs)) 
					}
				}
				s $li(myval,25)=txt
				//msg
 				//kontrola na budouci ukonceni spoje
 				i +$g(arrsp("dta",21)) {
	 				i $g(arrsp("dta",21))'<hrl {
		 				s out("msg",$i(out("msg")))="0~"_$lg(myval,7)_"~"_" spoj "_li_"/"_sp_" bude ukončen k "_$$nd^OBapiED($g(arrsp("dta",21)),0)
	 				}
 				}
 				//neaktualni spoje
 				i $d(arrals("arr",1,li,sp)) {
	 				s txt="1~"_$lg(myval,7)_"~neaktuální spoj "_li_"/"_sp_" ("
    				s idroz="" f {
	    				s idroz=$o(arrals("arr",1,li,sp,"dta",idroz)) i idroz="" q
    					s val=$g(arrals("arr",1,li,sp,"dta",idroz))
    					s txt=txt_$p("čas odjezdu~doba jízdy~délka~čas příjezdu~ukončen k","~",idroz)
    					i (idroz=1)!(idroz=2)!(idroz=4) s txt=txt_"["_$tr($j($$mh^OBapiED($p(val,"~",1)),0,2),".",":")_"/"_$tr($j($$mh^OBapiED($p(val,"~",2)),0,2),".",":")_"]"
    					i (idroz=3) s txt=txt_"["_$p(val,"~",1)_"/"_$p(val,"~",2)_"]"
    					i (idroz=5) s txt=txt_" "_$$nd^OBapiED($p(val,"~",2),0)
    					s txt=txt_";"
    				}
    				i $e(txt,$l(txt))=";" s txt=$e(txt,1,$l(txt)-1)
    				s txt=txt_")"
    				s out("msg",$i(out("msg")))=txt
 				}
			}
			//zastavka od textove
			i $lg(myval,18)'="" {
				k arrzst s err=$$gZst^OBapiED(idfa,nmsp,$lg(myval,18),"",.arrzst) i +err zt
				s $li(myval,19)=$g(arrzst("dta",1))
			}
			//zastavka do textove
			i $lg(myval,20)'="" {
				k arrzst s err=$$gZst^OBapiED(idfa,nmsp,$lg(myval,20),"",.arrzst) i +err zt
				s $li(myval,21)=$g(arrzst("dta",1))
			}
			//ostatni prace - upresneni
			i idcin=10 {
				s $li(myval,24)=$p($g(arrc17("arr",+$lg(myval,23))),"~",1)
			}
			//vypocet rychlosti
			i (idcin>2)&(idcin<8) {
				i $lg(myval,12) {
					s $li(myval,26)=$j($lg(myval,22)/(($lg(myval,12))/60),0,1)
				}
			}
			//msg
			//nulove km u prejezdu
			i ((idcin>3)&(idcin<8)) {
				i '$lg(myval,22) {
					s $li(myval,1)=1
					s out("msg",$i(out("msg")))="0~"_$lg(myval,7)_"~"_"pozor, nulové km u přejezdu !"	
				}
			}
			s arrtab(cnt)=myval		
		}
		//nenavaznost (je-li jizda a zastavka do)
		s cnt="" f {
			s myval="" s cnt=$o(arrtab(cnt),1,myval) i cnt="" q
			s idcin=$lg(myval,10)
			i ((idcin>2)&(idcin<8)) {
				//dohledam dalsi cinnost s jizdou
				s nxtcnt="" s nxtmyval="" s tmpcnt=cnt f {
					s tmpcnt=$o(arrtab(tmpcnt)) i (tmpcnt="")!(nxtcnt) q
					s nxtmyval=$g(arrtab(tmpcnt))
					s nxtidcin=$lg(nxtmyval,10)
					i ((nxtidcin>2)&(nxtidcin<8)) s nxtcnt=tmpcnt
				}
				i nxtcnt'="" {
					i ($lg(myval,20))'=($lg(nxtmyval,18)) {
						i '$lg(myval,1) {
							s $li(myval,1)=2 
							s arrtab(cnt)=myval
						}
						s out("msg",$i(out("msg")))="0~"_$lg(nxtmyval,7)_"~"_"nenavazuje "_$lg(myval,21)_"-"_$lg(nxtmyval,19)
					}
				}
			}
		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
 q ret
]]></Implementation>
</Method>

<Method name="actTurTabCopy">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&arrtab1:%String,&arrtab2:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// aktualizace arrtab2(doplneni parametru, zda lze danou cinnost kopirovat do arrtab1) 
	// VSTUP:
	// arrtab1 - pole s daty editovaneho turnusu
    // arrtab2 - pole s turnusu, ze ktereho se bude kopirovat
	// VYSTUP:
	// out("msg",idx)=msg 
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
		//z pole arrtab1 si pripravim minutove pole cinnosti
		s mycnt="" f {
			s myval="" s mycnt=$o(arrtab1(mycnt),1,myval) i mycnt="" q
			s minfrom=$lg(myval,5) s minto=$lg(myval,6) i minto="" s minto=minfrom
			s idcin=$lg(myval,10)
			i idcin<3 continue
			f min=minfrom:1:minto {
				s @myglb@(min)=""
			}
		}
		//oznaceni, co lze z arrtab2 do arrtab1 prekopirovat 
		s mycnt="" f {
			s myval="" s mycnt=$o(arrtab2(mycnt),1,myval) i mycnt="" q
			s minfrom=$lg(myval,5) s minto=$lg(myval,6) i minto="" s minto=minfrom
			s idcin=$lg(myval,10)
			i idcin<3 continue
			s copy=1 f min=minfrom:1:minto i $d(@myglb@(min)) s copy=0
			i copy {
				s $li(myval,1)=3
				s arrtab2(mycnt)=myval
			}
		}
		k @myglb			
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
 q ret
]]></Implementation>
</Method>

<Method name="actTurTuv">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&arrtur:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	// aktualizace arrtab (doplneni udaju do tabulky) 
	// VSTUP:
	// zp	- zp, kde je turnus vytvoren
	// hrl  - hrl casove varianty
	// arrtur - pole s daty prubehu turnusu
	// VYSTUP:
	// out("tuv",idx)=$lb(popis,hodnota,jednotka) ... vykony 
	s ret=$$$OK
	s err=""
	k out
	$$$FROMSERVER
	try {
		//popis vykonu turnusu
		k arrtudsc d gTurDsc^OBapiED(.arrtudsc)
		//prepocet turnusu
		s err=$$calTur^OBapiED(idfa,nmsp,zp," ",hrl,.arrtur,"","") i +err zt
		f myidtuv=$lb(11,22),$lb(17,23),$lb(1,24),$lb(2,25),$lb(3,26),$lb(14,27),$lb(5,28),$lb(6,29),$lb(7,""),$lb(8,""),$lb(9,""),$lb(12,""),$lb(15,"") {
			s myidx=$i(out("tuv"))
			f mycnt=1:1:$ll(myidtuv) {
				s idtuv=$lg(myidtuv,mycnt)
				s mydsc="" s myjdn="" s myval=""
				i idtuv'="" {
					s mydsc=$p($g(arrtudsc("dsc","tuv",idtuv)),"~",1)
					s myjdn=$p($g(arrtudsc("dsc","tuv",idtuv)),"~",2)
					s myval=$g(arrtur("arr","tuv",idtuv))
					i myjdn=1 s myval=$tr($j($$mh^OBapiED(myval),0,2),".",":")
					i myjdn=3 s myval=$j(myval,0,2)
					i myjdn=4 s myval=$j(myval,0,3)
					s myval=$tr(myval,".",",")
					s myjdn=$p("hh:mm~ks~Kč~Km","~",myjdn)
				}
				s $li(out("tuv",myidx),(1+((mycnt-1)*3)))=mydsc
				s $li(out("tuv",myidx),(2+((mycnt-1)*3)))=myval
				s $li(out("tuv",myidx),(3+((mycnt-1)*3)))=myjdn
			}
		}	
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
 q ret
]]></Implementation>
</Method>

<Method name="getSpData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,li:%String,sp:%String,&data:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//vytvoreni dat pro li/sp
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
	    s data="" s day=0
		//test na existenci spoje
 		k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,"","",.issp) i +err zt
 		i 'issp q
 		k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
 		//cas od
 		s $li(data,1)=($g(arrsp("dta",1))+(day*1440))
 		//cas do
 		s $li(data,2)=($g(arrsp("dta",2))+(day*1440)+(($g(arrsp("dta",20))-1)*1440))
 		//spoj
 		s $li(data,3)=3
 		//km
 		s $li(data,4)=$g(arrsp("dta",5))
 		//doba jizdy
 		s $li(data,5)=$g(arrsp("dta",3))
 		//li
 		s $li(data,6)=li
 		//sp
 	    s $li(data,7)=sp
 	    //mapr
 	    s $li(data,8)="*"
 	    //mapo
 	    s $li(data,9)="*"
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="actInsData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//aktualizace dat
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
	    s idCinnost=$lg(data,3)
	    i idCinnost=3 {
		    s day=$lg(data,1)\1440 s li=$lg(data,6) s sp=$lg(data,7)
		    //test na existenci spoje
 		    k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,"","",.issp) i +err zt
 		    i 'issp q
 			k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
 			// posun dne
 			//cas od
 			s $li(data,1)=($g(arrsp("dta",1))+(day*1440))
 			//cas do
 			s $li(data,2)=($g(arrsp("dta",2))+(day*1440)+(($g(arrsp("dta",20))-1)*1440))
 			//km
 			s $li(data,4)=$g(arrsp("dta",5))
 			//doba jizdy
 			s $li(data,5)=$g(arrsp("dta",3))
	    }
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="isSpaceInTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//kontrola na volne misto v turnusu
	//pokud neni, vyzkousi cinnosti odsunout tak, aby se veslo
	// out("dta",1)=0/1 nejde/jde vlozit
	// out("msg",idx)=zprava
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
		//ciselnik
 		k arrc16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrc16) i +err zt
 		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb=$$gWrkALVAADGlb^OBapiED(mywrk) k @mywrkglb 
		//
		s minod=$lg(data,1)		 	//cas od
 		s mindo=$lg(data,2)			//cas do
 		s idCinnost=$lg(data,3)		//id polozky
 		s li=$lg(data,6)			//linka
 		s sp=$lg(data,7)			//spoj
 		s mapr=$lg(data,8)			//manipulace pred
 		s mapo=$lg(data,9)			//manipulace po
 		// ==================
 		s out("dta",1)=0
 		// zacatek
 		i idCinnost=1 {
	 		i $o(arrtur("arr","tur",""))="" {
		 		s out("dta",1)=1
	 		}
	 		else {
		 		i $o(arrtur("arr","tur",""))<minod {
			 		s out("msg",$i(out("msg")))="1~~začátek lze vložit jen jako první položku !"
		 		}
		 		else {
			 		s out("dta",1)=1
		 		}
	 		}
	 		q
 		}
 		//konec
 		i idCinnost=2 {
	 		s min=+$o(arrtur("arr","tur",""),-1)
	 		s min=$g(arrtur("arr","tur",min,"dta",1))
 			i min>minod {
	 			s out("msg",$i(out("msg")))="1~~konec lze vložit jen jako poslední položku !"
 			}
 			else {
	 			s out("dta",1)=1
 			}
 			q
 		}
 		// poznamka
 		i idCinnost=8 s out("dta",1)=1 q
 		// spoj, uprava casu o pevne manipulace
 		i idCinnost=3 {
	 		s minod=minod-mapr s mindo=mindo+mapo
 		} 
		// test, zda se vkladana cinnost vejde
 		k @mywrkglb
 		// rozbaleni arrtur do pole dle mm
 		s err=$$cnvArrurToArrmin^OBapiED(idfa,nmsp,hrl,.arrtur,mywrkglb,"") i +err zt
 		//kontrola na prekryti
 		k arri,arro
 		//pro spoj doplnim vnitrni pauzy
 		i idCinnost=3 {
	 		k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.issp) i +err zt
	 		i issp {
		 		s den=minod\1440
		 		k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt	
		 		s relminpod="" f  {
			 		s relminpod=$o(arrsp("arr","pau",relminpod)) i relminpod="" q
			 	 	s minp=+$g(arrsp("arr","pau",relminpod))
			 	 	// aktualni zacatek a konec pauzy
			 	 	s minpod=minod+mapr+relminpod
			 	 	s minpdo=minpod+minp
			 	 	s arri("arr",1,minpod)=minpdo
		 	    }
	 		}
 		} 	 
 		//arro("stt",1)=0 cinnosti se neprekryvaji / 1 cinnosti se prekryvaji
 		//arro("arr",1,idtm)=idcin ... cinosti, kde to koliduje
 		s err=$$chckArrminOverlap^OBapiED(idfa,nmsp,hrl,minod,mindo,mywrkglb,.arri,.arro) i +err zt
 		k @mywrkglb
		//nevejde se, kontrola, zda muzu zadane cinnosti "odsunout" aby se cinnost vesla (nesmim posunout spoje)
 		i +$g(arro("stt",1)) {
	 		k wrkmsg
 			s mvup=0 s mvupispossible=0 s mvupidmin="" s mvupmin=""
 			s mvdown=0 s mvdownispossible=0 s mvdownidmin="" s mvdownmin="" 
 			//cinnost zacina pred vkladanou cinnosti, posun nahoru
 			s mvupidmin=$o(arro("arr",1,minod),-1)
 			i mvupidmin'="" {
	 			s mvup=1
 				//kontrola, zda je posun mozny
 				s mvupispossible=1
 				s idtm=mvupidmin+.01 f {
	 				 s idtm=$o(arrtur("arr","tur",idtm),-1) i (idtm="")!('mvupispossible) q
 					 i $g(arrtur("arr","tur",idtm,"dta",2))=3 s mvupispossible=0
 				}
 				//je-li posum mozny, vypocet o kolik
 				i mvupispossible {
	 				s mvupmin=($g(arrtur("arr","tur",mvupidmin,"dta",1))-minod)
 				}
 				//kontrola, zda zacatek turnusu neprejde pres pulnoc zpet - pokud ano, neni posun mozny
 				i mvupispossible {
	 				i ($o(arrtur("arr","tur",""),1)-mvupmin)<0 s mvupispossible=0
 				}
 			}
 			//cinnost zacina po vkladane cinnosti nebo ve stejny cas, posun dolu
 			s mvdownidmin=$o(arro("arr",1,minod-.01),1)
 			i mvdownidmin'="" {
	 			s mvdown=1
 				//kontrola, zda je posun mozny
 				s mvdownispossible=1
 				s idtm=mvdownidmin-.01 f {
	 				s idtm=$o(arrtur("arr","tur",idtm),1) i (idtm="")!('mvdownispossible) q
 					i $g(arrtur("arr","tur",idtm,"dta",2))=3 s mvdownispossible=0
 				}
 				//je-li posum mozny, vypocet o kolik
 				i mvdownispossible {
	 				s mvdownmin=(mindo-(mvdownidmin\1))
 				}
 			}
 			//problem s posuny, nic se dit nebude
 			i (mvup&'mvupispossible) s mvup=0 s mvupispossible=0 s mvdown=0 s mvdownispossible=0
 			i (mvdown&'mvdownispossible) s mvup=0 s mvupispossible=0 s mvdown=0 s mvdownispossible=0 
 			//jsou posuny a posuny jsou mozne, upravim arrtur
 			i (mvup&mvupispossible)!(mvdown&mvdownispossible) {
	 			k wrkarrtur m wrkarrtur=arrtur
	 			//posun nahoru
 				i (mvup&mvupispossible) {
	 				s idtm="" f {
		 				s idtm=$o(wrkarrtur("arr","tur",idtm),1) i (idtm="")!(idtm>mvupidmin) q
 						s idcin=$g(wrkarrtur("arr","tur",idtm,"dta",2))
 						i idcin=3 continue
 						s wrkmsg($i(wrkmsg))="0~"_$tr($j($$mh^OBapiED(idtm#1440),0,2),".",":")_"~posun činnosti "_$g(arrc16("arr",+idcin))_" v "_$tr($j($$mh^OBapiED(idtm#1440),0,2),".",":")_" o "_-mvupmin_" min."
 						s wrkarrtur("arr","tur",idtm,"dta",1)=$g(wrkarrtur("arr","tur",idtm,"dta",1))-mvupmin
 						m wrkarrtur("arr","tur",(idtm-mvupmin))=wrkarrtur("arr","tur",idtm)
 						k wrkarrtur("arr","tur",idtm)
	 				}
 				}
 				//posun dolu
 				i (mvdown&mvdownispossible) {
	 				s idtm="" f {
		 				s idtm=$o(wrkarrtur("arr","tur",idtm),-1) i (idtm="")!(idtm<mvdownidmin) q
 						s idcin=$g(wrkarrtur("arr","tur",idtm,"dta",2))
 						i idcin=3 continue
 						s wrkmsg($i(wrkmsg))="0~"_$tr($j($$mh^OBapiED(idtm#1440),0,2),".",":")_"~posun činnosti "_$g(arrc16("arr",+idcin))_" v "_$tr($j($$mh^OBapiED(idtm#1440),0,2),".",":")_" o "_mvdownmin_" min."
 						s wrkarrtur("arr","tur",idtm,"dta",1)=$g(wrkarrtur("arr","tur",idtm,"dta",1))+mvdownmin
 						m wrkarrtur("arr","tur",(idtm+mvdownmin))=wrkarrtur("arr","tur",idtm)
 						k wrkarrtur("arr","tur",idtm)
	 				}
 				}
 				//nova kontrola na prekryti
 				//rozbaleni wrkarrtur do pole dle min
 				k @mywrkglb
 				// rozbaleni wrkarrtur do pole dle mm
 				s err=$$cnvArrurToArrmin^OBapiED(idfa,nmsp,hrl,.wrkarrtur,mywrkglb,"") i +err zt
 				//kontrola na prekryti
 				k arri,arro
 				//pro spoj doplnim vnitrni pauzy
 				i idCinnost=3 {
	 				k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.issp) i +err zt
	 				i issp {
		 				s den=minod\1440
		 				k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt	
		 				s relminpod="" f  {
			 				s relminpod=$o(arrsp("arr","pau",relminpod)) i relminpod="" q
			 	 			s minp=+$g(arrsp("arr","pau",relminpod))
			 	 			// aktualni zacatek a konec pauzy
			 	 			s minpod=minod+mapr+relminpod
			 	 			s minpdo=minpod+minp
			 	 			s arri("arr",1,minpod)=minpdo
		 	    		}
	 				}
 				} 	 
 				//arro("stt",1)=0 cinnosti se neprekryvaji / 1 cinnosti se prekryvaji
 				//arro("arr",1,idtm)=idcin ... cinosti, kde to koliduje
 				s err=$$chckArrminOverlap^OBapiED(idfa,nmsp,hrl,minod,mindo,mywrkglb,.arri,.arro) i +err zt
 				k mywrkglb
 				//cinnost lze vlozit, uprava aktualni tabulky turnusu arrtur podle wrkarrtur a zprava o posunu 
 				i '$g(arro("stt",1)) {
	 				k arrtur m arrtur=wrkarrtur
	 				s cntmsg="" f {
		 				 s cntmsg=$o(wrkmsg(cntmsg)) i cntmsg="" q
		 				 s out("msg",$i(out("msg")))=$g(wrkmsg(cntmsg))
	 				}
 				}
 			}
 			k wrkmsg	 			
	 	}
 		//vejde se
 		i '$g(arro("stt",1)) {
	 		s out("dta",1)=1
 		}
 		//nevejde se
 		else {
	 		s mymsg="1~"_$tr($j($$mh^OBapiED(minod#1440),0,2),".",":")_"~zadanou činnost nelze vložit, koliduje s činností:"
 			s idtm="" f {
	 			s idtm=$o(arro("arr",1,idtm)) i idtm="" q
 				s idcin=$g(arro("arr",1,idtm))
 				s mymsg=mymsg_" "_$g(arrc16("arr",+idcin))_" v "_$tr($j($$mh^OBapiED(idtm#1440),0,2),".",":")_";"
 			}
 			i $e(mymsg,$l(mymsg))=";" s mymsg=$e(mymsg,1,$l(mymsg)-1)
 			s mymsg=mymsg_"!"
 			s out("msg",$i(out("msg")))=mymsg
 		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="addToTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//vlozeni polozky do prubehu turnusu, data jsou v data
	//out:
	//out("arr",1,tmmin)="" //index vlozene cinnosti 
	//
	s ret=$$$OK s err="" k out
	try {
		$$$FROMSERVER
		//
		s minod=$lg(data,1)		 	//cas od
 		s mindo=$lg(data,2)			//cas do
 		s idCinnost=$lg(data,3)		//id polozky
 		s km=$lg(data,4)			//km
 		s min=$lg(data,5)			//doba
 		s li=$lg(data,6)			//linka
 		s sp=$lg(data,7)			//spoj
 		s mapr=$lg(data,8)			//manipulace pred
 		s mapo=$lg(data,9)			//manipulace po
 		s idzstod=$lg(data,10)		//zastavka od
 		s idzstdo=$lg(data,11)		//zastavka do
 		s idupr=$lg(data,12)		//id upresneni
 		s info=$lg(data,13)			//informace
 		s kurs=$lg(data,14)			//kurs
 		s hrPrej=$lg(data,15)		//hrazeny prejezd
 		s navSp=$lg(data,16)		//navazny spoj
 		s prejezdDoCis=$lg(data,17)	//zapis prejezdu do ciselniku
		// zacatek
		i idCinnost=1 {
			 // vymazu zacatky v tabulce
		 	 s tmmin="" f {
			 	  s tmmin=$o(arrtur("arr","tur",tmmin)) i tmmin="" q
			 	  i $g(arrtur("arr","tur",tmmin,"dta",2))=idCinnost {
				 	  k arrtur("arr","tur",tmmin)
			 	  }
		 	 }
		 	 // ========================
		 	 s minod=minod-.01
		 	 s arrtur("arr","tur",minod,"dta",1)=minod
		 	 s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	 s out("arr",1,minod)=""
		}
		// konec
		i idCinnost=2 {
			 // vymazu konce v tabulce
			 s tmmin="" f {
			 	  s tmmin=$o(arrtur("arr","tur",tmmin)) i tmmin="" q
			 	  i $g(arrtur("arr","tur",tmmin,"dta",2))=idCinnost {
				 	  k arrtur("arr","tur",tmmin)
			 	  }
		 	 }
		 	 // ========================
		 	 s arrtur("arr","tur",minod,"dta",1)=minod
		 	 s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	 s out("arr",1,minod)=""
		}
		// linka  spoj
		i idCinnost=3 {
			s minod=minod-mapr
			s mindo=mindo+mapo
			s arrtur("arr","tur",minod,"dta",1)=mindo
		 	s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	s arrtur("arr","tur",minod,"dta",3)=km
		 	s arrtur("arr","tur",minod,"dta",4)=min
		 	s arrtur("arr","tur",minod,"dta",5)=li
		 	s arrtur("arr","tur",minod,"dta",6)=sp
		 	s arrtur("arr","tur",minod,"dta",7)=mapr
		 	s arrtur("arr","tur",minod,"dta",8)=mapo
		 	s arrtur("arr","tur",minod,"dta",20)=kurs
		 	s arrtur("arr","tur",minod,"dta",21)=hrPrej
		 	s arrtur("arr","tur",minod,"dta",22)=$p(navSp,"/",1)
		 	s arrtur("arr","tur",minod,"dta",23)=$p(navSp,"/",2)
		 	s arrtur("arr","tur",minod,"dta",24)=$p(navSp,"/",3)
		 	s arrtur("arr","tur",minod,"dta",25)=$p(navSp,"/",4)
		 	s out("arr",1,minod)=""
		}
		// prejezdy
		i (idCinnost>3)&(idCinnost<8) {
			s arrtur("arr","tur",minod,"dta",1)=mindo
		 	s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	s arrtur("arr","tur",minod,"dta",3)=km
		 	s arrtur("arr","tur",minod,"dta",4)=min
		 	s arrtur("arr","tur",minod,"dta",9)=idzstod
		 	s arrtur("arr","tur",minod,"dta",10)=idzstdo
		 	s arrtur("arr","tur",minod,"dta",21)=hrPrej
			s out("arr",1,minod)=""
		}
	    // informace
		i idCinnost=8 {
			 f {
				  i '$d(arrtur("arr","tur",minod)) q
				  s minod=minod+.01
			 }
			 s arrtur("arr","tur",minod,"dta",1)=minod
		 	 s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	 s arrtur("arr","tur",minod,"dta",12)=info
		 	 s out("arr",1,minod)=""
		}
		// ostatni cinnosti
		i (idCinnost=0)!(idCinnost>8) {
			s arrtur("arr","tur",minod,"dta",1)=mindo
		 	s arrtur("arr","tur",minod,"dta",2)=idCinnost
		 	s arrtur("arr","tur",minod,"dta",4)=min
		 	i idCinnost=10 s arrtur("arr","tur",minod,"dta",11)=idupr
		 	i idCinnost=12 s arrtur("arr","tur",minod,"dta",12)=info
			s out("arr",1,minod)=""
		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="del1BegEndTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//vymaze zacatek a konec v pripade, ze je prvni / posledni
	//out:
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
		//zacatek
		s minod=$o(arrtur("arr","tur",""))
		i minod {
			i $g(arrtur("arr","tur",minod,"dta",2))=1 k arrtur("arr","tur",minod)
			
		}
		//konec
		s minod=$o(arrtur("arr","tur",""),-1)
		i minod {
			i $g(arrtur("arr","tur",minod,"dta",2))=2 k arrtur("arr","tur",minod)
			
		}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="updBegEndTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//aktualizace zacatku a konce turnusu
	//out:
	//out("msg",inx)=msg
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
		 //kontrola a oprava zacatku a konce turnusu 
		 // je zacatek ?
		 s isbeg=0
		 s tmmin="" f {
			  s tmmin=$o(arrtur("arr","tur",tmmin)) i (tmmin="")!(isbeg) q
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=1 s isbeg=1
		 }
		 // zacatek je a neni prvni, posun zacatku
		 i isbeg {
			 s tmmin=$o(arrtur("arr","tur",""))
			 i $g(arrtur("arr","tur",tmmin,"dta",2))'=1 {
				 //vymazu vsechny zacatky
		 		 s tmmin="" f {
			 		 s tmmin=$o(arrtur("arr","tur",tmmin)) i (tmmin="") q
			 		 i $g(arrtur("arr","tur",tmmin,"dta",2))=1 {
				 		 k arrtur("arr","tur",tmmin)
			 		 }
		 		 }
		 		 //novy zacatek
		 		 s tmmin=$o(arrtur("arr","tur",""))
		 		 i tmmin'="" {
			 		 //je-li prvni cinnost spoj a ma-li automaticke manipulace, nastavim zacatek tak, aby se manipulace vesla
		 		 	 i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
			 		 	 //kontrola na automaticke manipulace
			 		 	 i $g(arrtur("arr","tur",tmmin,"dta",7))["*" {
				 		 	 s li=$g(arrtur("arr","tur",tmmin,"dta",5))
		 		 		 	 s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
		 		 		 	 k myarr s err=$$gMaSp^OBapiED(idfa,nmsp,zp,li,sp,hrl,"",.myarr) i +err zt
		 		 		 	 s tmmin=tmmin-$g(myarr("dta",1))
		 		 		 	 k myarr
			 		 	 }
		 		 	 }
		 		 	 //posun casu pro zacatek
		 		 	 f {
			 		 	  i '$d(arrtur("arr","tur",tmmin)) q
			 		 	  s tmmin=tmmin-.01
		 		 	 }
		 		 	 //zapis zacatku
		 		 	 s arrtur("arr","tur",tmmin,"dta",1)=tmmin
		 	         s arrtur("arr","tur",tmmin,"dta",2)=1
		 		 	 s out("msg",$i(out("msg")))="0~~byl posunut čas začátku na "_$tr($j($$mh^OBapiED(tmmin#1440),0,2),".",":") 
		 		 }
			 }
		 }
		 // je konec ?
		 s isend=0 s endtmmin=""
		 s tmmin="" f {
			  s tmmin=$o(arrtur("arr","tur",tmmin),-1) i (tmmin="")!(isend) q
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=2 s isend=1 s endtmmin=tmmin
		 }
		 // konec je a neni posledni, posun konce
		 i isend {
			 // dohledam posledni cas v prubehu, ne konec !
			 s lasttmmin=""
			 s tmmin="" f {
				  s tmmin=$o(arrtur("arr","tur",tmmin),-1) i (tmmin="")!(lasttmmin) q
				  i $g(arrtur("arr","tur",tmmin,"dta",2))'=2 {
					  s lasttmmin=tmmin
				  }
			 }
			 // konci-li posledni cinnost za koncem, aktualizace
			 i (lasttmmin'="") {
				 i $g(arrtur("arr","tur",lasttmmin,"dta",1))>endtmmin {
					 //vymazu vsechny konce
			 		 s tmmin="" f {
				 		  s tmmin=$o(arrtur("arr","tur",tmmin)) i tmmin="" q
				 		  i $g(arrtur("arr","tur",tmmin,"dta",2))=2 {
					 		  k arrtur("arr","tur",tmmin)
				 		  }
			 		 }
			 		 //novy konec
			 		 s tmmin=$o(arrtur("arr","tur",""),-1)
			 		 i tmmin'="" {
				 		 s mindo=$g(arrtur("arr","tur",tmmin,"dta",1))
			 		 	 //je-li posledni cinnost spoj a ma-li automaticke manipulace, nastavim konec tak, aby se manipulace vesla
			 		 	 i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
				 		 	 //kontrola na automaticke manipulace
				 		 	 i $g(arrtur("arr","tur",tmmin,"dta",8))["*" {
					 		 	 s li=$g(arrtur("arr","tur",tmmin,"dta",5))
		 		 		 	 	 s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
		 		 		 	 	 k myarr s err=$$gMaSp^OBapiED(idfa,nmsp,zp,li,sp,hrl,"",.myarr) i +err zt
		 		 		 	 	 s mindo=mindo+$g(myarr("dta",2))
			 		 	 	 	 k myarr
				 		 	 }
			 		 	 }
			 		 	 //cinnost s koncem existuje posun konce
			 		 	 f {
				 		 	 i '$d(arrtur("arr","tur",mindo)) q
			 		 	     s mindo=mindo+.01
			 		 	 }
			 		 	 //zapis konce
		 		 	 	 s arrtur("arr","tur",mindo,"dta",1)=mindo
		 	         	 s arrtur("arr","tur",mindo,"dta",2)=2
		 		 	 	 s out("msg",$i(out("msg")))="0~~byl posunut čas konce na "_$tr($j($$mh^OBapiED(mindo#1440),0,2),".",":")
			 		 }
				 }
			 }
		 }
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="addDodkTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//doplneni dodk do turnusu
	//data=$lb(minzacatek,minkonec)
	//out:
	//out("arr",1,tmmin)=""	... doplnene cinnosti
	//out("msg",inx)=msg
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
		 s minzacatek=$lg(data,1)
		 s minkonec=$lg(data,2)
		 // vymazani zacatku a konce
		 s tmmin=$o(arrtur("arr","tur",""))
		 i tmmin'="" {
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=1 {
				  k arrtur("arr","tur",tmmin)
			  }
		 }
		 s tmmin=$o(arrtur("arr","tur",""),-1)
		 i tmmin'="" {
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=2 {
				  k arrtur("arr","tur",tmmin)
			  }
		 }
		 // vymazani DODK na zacatku a na konci
		 s tmmin=$o(arrtur("arr","tur",""))
		 i tmmin'="" {
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=14 {
				  k arrtur("arr","tur",tmmin)
			  }
		 }
		 s tmmin=$o(arrtur("arr","tur",""),-1)
		 i tmmin'="" {
			  i $g(arrtur("arr","tur",tmmin,"dta",2))=14 {
				  k arrtur("arr","tur",tmmin)
			  }
		 }
		 // doplneni dodk na zacatek
		 i minzacatek {
			 // zjistim prvni cinnost, je-li to spoj, posun dodk o pripadne manipulace
			 s tmmin="" s tmptmmin ="" f {
				  s tmptmmin=$o(arrtur("arr","tur",tmptmmin)) i (tmptmmin="")!(tmmin'="") q
			 	  //ne poznamka
			 	  i $g(arrtur("arr","tur",tmptmmin,"dta",2))=8 continue
			      s tmmin=tmptmmin
			 }
			 i tmmin'="" {
				 i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
					 i $g(arrtur("arr","tur",tmmin,"dta",7))["*" {
						 s li=$g(arrtur("arr","tur",tmmin,"dta",5))
						 s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
				 	 	 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 	 	 s iddsp=$g(arrsp("dta",4))
				 	 	 i 'iddsp s iddsp=1
				 	 	 k myarr s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,iddsp,"",.myarr) i +err zt
				 	 	 s mamin=$g(myarr("dta",1))
				 	 	 k myarr
				 	 	 s tmmin=tmmin-mamin
					 }
				 }
				 s minod=tmmin-minzacatek
				 s mindo=tmmin
				 //nezasahne to do predchoziho dne muyu vlozit 
				 i minod>0 {
					 s arrtur("arr","tur",minod,"dta",1)=mindo
		 		 	 s arrtur("arr","tur",minod,"dta",2)=14
		 		 	 s arrtur("arr","tur",minod,"dta",4)=minzacatek
		 		 	 s out("arr",1,minod)=""
				 }
				 else {
					 s out("msg",$i(out("msg")))="1~~manipulace na začátek turnusu vložit nelze, zasahují do předchozího dne !"
				 }
			 }
		 }
		 // doplneni dodk na konec
		 i minkonec {
			 // zjistim prvni cinnost, je-li to spoj, posun dodk o pripadne manipulace
			 s tmmin="" s tmptmmin ="" f {
				  s tmptmmin=$o(arrtur("arr","tur",tmptmmin),-1) i (tmptmmin="")!(tmmin'="") q
			 	  //ne poznamka
			 	  i $g(arrtur("arr","tur",tmptmmin,"dta",2))=8 continue
			      s tmmin=tmptmmin
			 }
			 i tmmin'="" {
				 s minod=$g(arrtur("arr","tur",tmmin,"dta",1))
				 i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
					 i $g(arrtur("arr","tur",tmmin,"dta",8))["*" {
						 s li=$g(arrtur("arr","tur",tmmin,"dta",5))
						 s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
				 	 	 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 	 	 s iddsp=$g(arrsp("dta",4))
				 	 	 i 'iddsp s iddsp=1
				 	 	 k myarr s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,iddsp,"",.myarr) i +err zt
				 	 	 s mamin=$g(myarr("dta",2))
				 	 	 k myarr
				 	 	 s minod=minod+mamin
					 }
				 }
				 s mindo=minod+minkonec
		 		 s arrtur("arr","tur",minod,"dta",1)=mindo
		 		 s arrtur("arr","tur",minod,"dta",2)=14
		 		 s arrtur("arr","tur",minod,"dta",4)=minkonec
		 		 s out("arr",1,minod)=""
			 }
		 }
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="addPrejTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//doplneni prejezdu do turnusu
	//
	//out:
	//out("arr",1,tmmin)=""	... doplnene cinnosti
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb=$$gWrkALVAADGlb^OBapiED(mywrk) k @mywrkglb 
		// vyhledani nenavaznosti v turnuse
		 k arrnnv
		 s tmmin="" f {
			  s tmmin=$o(arrtur("arr","tur",tmmin)) i tmmin="" q
			  //cinnost je jizda
			  i (($g(arrtur("arr","tur",tmmin,"dta",2))>2)&($g(arrtur("arr","tur",tmmin,"dta",2))<8)) {
				  //dohledam dalsi cinnost
			 	  s nxttmmin=""
			 	  s tmptmmin=tmmin f {
				 	   s tmptmmin=$o(arrtur("arr","tur",tmptmmin)) i (tmptmmin="")!(nxttmmin'="") q
			 	  	   i ($g(arrtur("arr","tur",tmptmmin,"dta",2))>2)&($g(arrtur("arr","tur",tmptmmin,"dta",2))<8) {
				 	  	    s nxttmmin=tmptmmin
			 	  	   }
			 	  }
			 	  //kontrola navaznosti
			 	  i nxttmmin'="" {
				 	  s idzst=$g(arrtur("arr","tur",tmmin,"dta",10))
				 	  i $g(arrtur("arr","tur",tmmin,"dta",2))=3 {
					 	  s li=$g(arrtur("arr","tur",tmmin,"dta",5))
						  s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
				 	 	  k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 	 	  s idzst=$g(arrsp("dta",7))
				 	  }
				 	  s idzstnxt=$g(arrtur("arr","tur",nxttmmin,"dta",9))
				 	  i $g(arrtur("arr","tur",nxttmmin,"dta",2))=3 {
					 	  s li=$g(arrtur("arr","tur",nxttmmin,"dta",5))
						  s sp=$g(arrtur("arr","tur",nxttmmin,"dta",6))
				 	 	  k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 	 	  s idzstnxt=$g(arrsp("dta",6))
				 	  }
				 	  //
				 	  i idzst'=idzstnxt s arrnnv(tmmin)=nxttmmin_"~"_idzst_"~"_idzstnxt
			 	  }
			  }
		 }
		 // doplneni prejezdu
		 s tmmin="" f {
			 s tmmin=$o(arrnnv(tmmin)) i tmmin="" q
		 	 //vytvoreni prejezdu
		 	 s val=$g(arrnnv(tmmin))
		 	 s nxttmmin=$p(val,"~",1)
		 	 s idzst=$p(val,"~",2)
		 	 s idzstnxt=$p(val,"~",3)
			 // nactu udaje o prejezdu z ciselniku
			 s prjmin="" s prjkm=""
			 f idprj=(idzstnxt_"~"_idzst),(idzst_"~"_idzstnxt) {
				 k myarr s err=$$isCisItm^OBapiED(idfa,nmsp,36,idprj,"",.myarr) i +err zt
			 	 i $g(myarr) {
				 	 k myarr s err=$$gCisItm^OBapiED(idfa,nmsp,36,idprj,"",.myarr) i +err zt
				 	 s prjmin=$p($g(myarr("arr",idprj)),"~",2)
				 	 s prjkm=$p($g(myarr("arr",idprj)),"~",1)
			 	 }
			 }
			 k myarr 
			 // rozbaleni cinnosti do minutoveho pole a vyhledani pauz
 			 k @mywrkglb
 			 s tmmindo=$g(arrtur("arr","tur",tmmin,"dta",1))
			 f min=($j(tmmindo+1,0,0)):1:$j(nxttmmin,0,0) {
				 s @mywrkglb@(min)=-1
			 }
			 s idtmmin=(tmmin-.01) f  {
				 s idtmmin=$o(arrtur("arr","tur",idtmmin)) i (idtmmin="")!(idtmmin>nxttmmin) q
			 	 //poznamka ne
			 	 i arrtur("arr","tur",idtmmin,"dta",2)=8 continue
			 	 //rozbaleni cinnosti
			 	 f min=($j(idtmmin,0,0)+1):1:$j($g(arrtur("arr","tur",idtmmin,"dta",1)),0,0) {
				 	 s @mywrkglb@(min)=1
			 	 }
			 	 i $g(arrtur("arr","tur",idtmmin,"dta",2))=3 {
				 	 s li=$g(arrtur("arr","tur",idtmmin,"dta",5))
				 	 s sp=$g(arrtur("arr","tur",idtmmin,"dta",6))
			 	 	 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
			 	 	 s iddsp=$g(arrsp("dta",4)) i 'iddsp s iddsp=1
			 	 	 k arrma s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,iddsp,"",.arrma) i +err zt
			 	 	 //manipulace pred
			 	 	 i $g(arrtur("arr","tur",idtmmin,"dta",7))["*" {
				 	 	 s mamin=$g(arrma("dta",1))
			 	 	 	 f tmpmamin=mamin:-1:1 {
				 	 	 	 s min=($j(idtmmin,0,0)-tmpmamin+1)
				 	 	 	 i $g(@mywrkglb@(min))=-1 {
					 	 	 	 s @mywrkglb@(min)=0
			 	 	 	 	 }
			 	 	 	 }
			 	 	 }
			 	 	 //manipulace po
			 	 	 i $g(arrtur("arr","tur",idtmmin,"dta",8))["*" {
				 	 	 s mamin=$g(arrma("dta",2))
			 	 	 	 f tmpmamin=1:1:mamin{
				 	 	 	  s min=($j($g(arrtur("arr","tur",idtmmin,"dta",1)),0,0)+tmpmamin)
				 	 	 	  i $g(@mywrkglb@(min))=-1 {
					 	 	 	  s @mywrkglb@(min)=0
				 	 	 	  }
			 	 	 	 }
			 	 	 }
			 	 	 k arrma
			 	 }
			 }
			 //cinnosti jsou v poli @mywrkglb@(min)=-1/0/1 -1 pauza / 0 manipulace / 1 cinnost
			 //projdu pole, vyhledam pauzy a vlozim prejezd:
			 // - v prvnim kole s manipulacemi
			 // - ve druhem bez manipulaci
			 // - ve tretim do nejvetsi pauzy
			 s cnt=0 s find=0 f {
				  i (cnt>3)!(find) q
				  s cnt=cnt+1
				  k arrpau
				  f min=($j(tmmindo+1,0,0)):1:$j(nxttmmin,0,0) {
					  i cnt=1 i $g(@mywrkglb@(min))=-1 s arrpau(1,min)=""
					  i cnt>1 i $g(@mywrkglb@(min))<1 s arrpau(1,min)=""
				  }
				  //spojeni mezer
				  s min="" f {
					   s min=$o(arrpau(1,min)) i min="" q
				  	   f tmpmin=min:1 {
					  	   i '$d(arrpau(1,tmpmin)) q
					  	   s arrpau(1,min)=tmpmin
					  	   i tmpmin'=min k arrpau(1,tmpmin)
				  	   }
				  }
				  //setrizeni podle delky
				  s tmpmin="" f {
					   s tmpmin=$o(arrpau(1,tmpmin)) i tmpmin="" q
					   s arrpau(2,($g(arrpau(1,tmpmin))-tmpmin+1),tmpmin)=$g(arrpau(1,tmpmin))
				  }
				  // prejezd neni v ciselniku, dam do nejvetsi mezerzy	  
				  i ('prjmin)&(cnt=1) {
					  s min=$o(arrpau(2,""),-1)
					  i min {
						  s minpauod=$o(arrpau(2,min,""),-1)
						  s minpaudo=$g(arrpau(2,min,minpauod))
						  s minpauod=minpauod-1
						  s find=1
					  }
				  }
				  // prejezd je v ciselniku, dam, kam se vejde
				  i (+prjmin)&((cnt=1)!(cnt=2)) {
					  s min=$o(arrpau(2,(prjmin-.01)))
					  i min {
						  s minpauod=$o(arrpau(2,min,""),-1)
						  s minpaudo=$g(arrpau(2,min,minpauod))
						  s minpauod=minpaudo-prjmin
						  s find=1
					  }
				  	  // prejezd je v ciselniku, a nevejde se, dam ho do nejvetsi mezery
				  	  i (+prjmin)&(cnt=3) {
					  	  s min=$o(arrpau(2,""),-1)
					  	  i min {
						  	  s minpauod=$o(arrpau(2,min,""),-1)
						  	  s minpaudo=$g(arrpau(2,min,minpauod))
						  	  s minpauod=minpauod-1
						  	  s find=1
					  	  }
				  	  } 
				  }
			 }
			 i find {
				 s arrtur("arr","tur",minpauod,"dta",1)=minpaudo
				 s arrtur("arr","tur",minpauod,"dta",2)=6
				 s arrtur("arr","tur",minpauod,"dta",3)=(+prjkm)
				 s arrtur("arr","tur",minpauod,"dta",4)=(minpaudo-minpauod)
				 s arrtur("arr","tur",minpauod,"dta",9)=idzst
				 s arrtur("arr","tur",minpauod,"dta",10)=idzstnxt
				 s out("arr",1,minpauod)=""
			 }
			 k @mywrkglb 
		 }    
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="checkPlTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&data:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//kontrola platnosti turnusu a spoju
	//
	//out:
	//out("msg",1)=zprava
	s ret=$$$OK s err="" k out
	try {
		$$$FROMSERVER
		// ============================================
		// kontrola platnosti turnusu a spoju za obdobi
		// ============================================
		//          1     2     3   4   5      6      7      8
		// data=$lb(datOd,datDo,tpl,dpl,omez11,omez12,omez13,omez22)
		// ============================================
		// omez11 = jede jen,     hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
		// omez12 = jede take,    hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
		// omez13 = jede od do,   hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
		// omez22 = nejede od do, hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
		//pracovni global
		s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb=$$gWrkALVAADGlb^OBapiED(mywrk) k @mywrkglb
		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
		s hrlfrom=$lg(data,1)
		s hrlto=$lg(data,2)
		s tpl=$lg(data,3)
		s dpl=$lg(data,4)
		s omez11=$lg(data,5)
		s omez12=$lg(data,6)
		s omez13=$lg(data,7)
		s omez22=$lg(data,8)
		// uprava hrlfrom a hrlto
		i 'hrlto s hrlto=hrlfrom
		// okres pro jarni prazdniny
		k arrset
		s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
		s blo=$g(arrset("arr",5,1,"prv",idprv))
		i blo="" s blo=$g(arrset("arr",5,1))
		k arrset
		// =========================
		// vyhledani spoju v turnuse
		// =========================
		k arrls
		s tmmin="" f {
			s tmmin=$o(arrtur("arr","tur",tmmin)) i tmmin="" q
		 	i ($g(arrtur("arr","tur",tmmin,"dta",2))=3) {
		 		s li=$g(arrtur("arr","tur",tmmin,"dta",5))
		 		s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
		 		s arrls(li,sp)=(tmmin\1440)
		 	}
		 }
		 //
		 //==================
		 //statistika turnusu
		 //==================
		 k arri,arro
		 s arri("dta",1)=blo
		 s arri("dta",2)=tpl
		 s arri("dta",3)=dpl
		 s arri("dta",4)=$$cnvPlTxt^OBapiED(tpl,dpl)
		 s arri("dta",5)=zp
		 i $g(omez11)'="" m arri("arr",1,11)=omez11
		 i $g(omez12)'="" m arri("arr",1,12)=omez12
		 i $g(omez13)'="" m arri("arr",1,13)=omez13
		 i $g(omez22)'="" m arri("arr",1,22)=omez22
		 s err=$$mkJedePltTur^OBapiED(idfa,nmsp,hrl,(hrlfrom-1),(hrlto+1),.arri,.arro) i +err zt
		 s mhrl="" f {
		 	s mhrl=$o(arro("arr",1,mhrl)) i mhrl="" q
		 	s li="" f {
			 	s li=$o(arrls(li)) i li="" q
			 	s sp="" f {
				 	s sp=$o(arrls(li,sp)) i sp="" q
				 	s @mywrkglb@(1,(mhrl+$g(arrls(li,sp))),li,sp)=""
			 	}
		 	} 
		 }
		 //================
		 //statistika spoju
		 //================
		 f mhrl=(hrlfrom):1:(hrlto) {
		 	k wrkdc s err=$$mkSttKal^JRapi(idfa,nmsp,$p($$nd^OBapiED(mhrl,0),".",3),"",.wrkdc) i +err zt
		 	// ===========================
		 	s li="" f {
			 	s li=$o(arrls(li)) i li="" q
			 	s sp="" f {
				 	s sp=$o(arrls(li,sp)) i sp="" q
				 	k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,mhrl,"",.arrsp) i +err zt
				 	s hrlsp=$g(arrsp("hrl"))
				 	// platnost - stare spoje, pokud nema tpl a dpl, pokusim se je odhadnout podle hexa znaku
		 			i $g(arrsp("dta",16))="" s arrsp("dta",16)=$p($$cnvPlHTplDpl^OBapiED($g(arrsp("dta",8))),"~",1)
		 			i $g(arrsp("dta",17))="" s arrsp("dta",17)=$p($$cnvPlHTplDpl^OBapiED($g(arrsp("dta",8))),"~",2)
		 			// ======================================================================================
		 			// statisticke vyhodnoceni spoje 
		 			k arrom
					f arrom=11,12,13,14,15,22 {
						i $d(arrsp("arr","omz",arrom)) m arrom(arrom)=arrsp("arr","omz",arrom)
					}
		 			s err=$$mkSttOm^JRapi(idfa,nmsp,hrlsp,(mhrl+365),.arrom)
		 			s arrom=$tr($g(arrsp("dta",16)),".","") s arrom("DPL")=$g(arrsp("dta",17))
		 			k jd s err=$$okSttDay^JRapi(idfa,nmsp,wrkdc,mhrl,.arrom,.jd) zt:+err "merr" s err=""
		 			i +$g(jd) {
						s @mywrkglb@(2,mhrl,li,sp)=""
		 			}
			 	}
		 	}	
		 }
		 
		 // kontrola turnusu a spoju
		 // @mywrkglb@(1,hrl,li,sp)="" ... co se ma odjet podle turnusu
		 // @mywrkglb@(2,hrl,li,sp)="" ... co se ma odjet podle spoju
		 // =====================
		 // vymazu, co je totozne
		 // =====================
		 s mhrl="" f {
			 	s mhrl=$o(@mywrkglb@(1,mhrl)) i mhrl="" q
			 	s li="" f {
				 	s li=$o(@mywrkglb@(1,mhrl,li)) i li="" q
				 	s sp="" f {
					 	s sp=$o(@mywrkglb@(1,mhrl,li,sp)) i sp="" q
					 	i $d(@mywrkglb@(2,mhrl,li,sp)) {
						 	k @mywrkglb@(1,mhrl,li,sp)
						 	k @mywrkglb@(2,mhrl,li,sp)
					 	}
				 	}
			 	}
		 }
		 // ===================================
		 // sestaveni popisu s chybami pro okno
		 // ===================================
		 f id=1,2 {
			 s mhrl="" f {
			 	s mhrl=$o(@mywrkglb@(id,mhrl)) i mhrl="" q
			 	i mhrl<hrlfrom continue
			 	i mhrl>hrlto continue
			 	s txt="dne "_$$nd^OBapiED(mhrl,0)_"("_$$ntd^OBapiED(mhrl)_")"
			 	i id=1 s txt=txt_" "_"turnus jede a spoj"
				i id=2 s txt=txt_" "_"spoj"
				s isli=0
			 	s li="" f {
				 	s li=$o(@mywrkglb@(id,mhrl,li)) i li="" q
				 	i 'isli s txt=txt_" "_li
				 	i +isli s txt=txt_" / "_li
				 	s isli=1
				 	s issp=0
				 	s sp="" f {
					 	s sp=$o(@mywrkglb@(id,mhrl,li,sp)) i sp="" q
					 	i 'issp s txt=txt_"-"_sp
					 	i +issp s txt=txt_","_sp
					 	s issp=1
				 	}
			 	}
			 	//turnus jede a spoj nejede - chyba
			 	i id=1 {
				 	s txt=txt_" "_" nejede"
				 	s out("msg",$i(out("msg")))="1~~"_txt
			 	}
			 	//turnus nejede a spoj jede - varovani (spoj muze byt v jinem turnusu, dale nekontolujeme)
			 	i id=2 {
				 	s txt=txt_" "_" jede a turnus nejede"
			 		s out("msg",$i(out("msg")))="0~~"_txt
			 	}
		 	}
		 }
		 // =============
		 // je to spravne
		 // =============
		 i '$d(out("msg")) {
			 s out("msg",$i(out("msg")))="0~~"_"v období "_$$nd^OBapiED(hrlfrom,0)_" - "_$$nd^OBapiED(hrlto,0)_" odpovídá platnost turnusu platnosti spojů "
		 }
	    k @mywrkglb 
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="getPauzaTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,zp:%String,hrl:%String,&arrtur:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//vrati pole pauz z prubehu turnusu pro aktualizaci vypisu
	//
	//out:
	//out("arr",1,tmmin)=pauza min
	s ret=$$$OK s err="" k out
	try {
		$$$FROMSERVER
		//pracovni pole
		k tmparrtur m tmparrtur=arrtur
  		// zrusim v prubehu vlozene cinnosti  
		s idtmmin="" f {
			s idtmmin=$o(tmparrtur("arr","tur",idtmmin)) i idtmmin="" q
			i $g(tmparrtur("arr","tur",idtmmin,"dta",2))=1 continue
			i $g(tmparrtur("arr","tur",idtmmin,"dta",2))=2 continue
			i $g(tmparrtur("arr","tur",idtmmin,"dta",2))=8 continue
		 	s beidtmmin=idtmmin f {
			 	s beidtmmin=$o(tmparrtur("arr","tur",beidtmmin),-1) i beidtmmin=""  q
			 	//jen ve spojich muzou byt vnitrni pauzy 
		 		i $g(tmparrtur("arr","tur",beidtmmin,"dta",2))'=3 continue
		 		i (idtmmin>beidtmmin)&($g(tmparrtur("arr","tur",idtmmin,"dta",1))<+tmparrtur("arr","tur",beidtmmin,"dta",1)) {
			 		k tmparrtur("arr","tur",idtmmin)
		 		}
		 	}
		}
		s idtmmin="" f {
		 	s idtmmin=$o(tmparrtur("arr","tur",idtmmin)) i idtmmin="" q
		 	i $g(tmparrtur("arr","tur",idtmmin,"dta",2))=8 continue				//poznamka
		 	i $g(tmparrtur("arr","tur",idtmmin,"dta",2))=0 continue				//cekani, zapocteni do pauzy
		 	s nxtidtmmin=""
		 	s tmpidtmmin=idtmmin f {
			 	s tmpidtmmin=$o(tmparrtur("arr","tur",tmpidtmmin)) i (tmpidtmmin="")!(nxtidtmmin'="") q
				i $g(tmparrtur("arr","tur",tmpidtmmin,"dta",2))=8 continue		//poznamka
				i $g(tmparrtur("arr","tur",tmpidtmmin,"dta",2))=0 continue		//cekani, zapocteni do pauzy
		 		s nxtidtmmin=tmpidtmmin
		 	}
		 	i nxtidtmmin="" continue
		 	s tmfmin=$g(tmparrtur("arr","tur",idtmmin,"dta",1))
		 	//pro spoj prictu manipulace
		 	i ($g(tmparrtur("arr","tur",idtmmin,"dta",2))=3) {
			 	i ($g(tmparrtur("arr","tur",idtmmin,"dta",8))["*") {
				 	s tmfmin=tmfmin+$tr($g(tmparrtur("arr","tur",idtmmin,"dta",8)),"*","")
			 	} 
		 	}
		 	s tmtmin=$j(nxtidtmmin,0,0)
		 	//pro spoj odectu manipulace
		 	i ($g(tmparrtur("arr","tur",nxtidtmmin,"dta",2))=3) {
			 	
			 	i ($g(tmparrtur("arr","tur",nxtidtmmin,"dta",7))["*") {
				 	s tmtmin=tmtmin-$tr($g(tmparrtur("arr","tur",nxtidtmmin,"dta",7)),"*","")
			 	} 
			 	
		 	}
		 	s paumin=tmtmin-tmfmin
		 	s out("arr",1,idtmmin)=paumin
		 }
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="addCchGlb">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[cchglb:%String,id:%String,txt:%String,&arr:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	//zapis do logovaciho globalu
	//id=1  ... log zmen v trase akualniho turnusu, ten se v editovanem turnuse nesmi mazat
	//id=2  ... log zmen pri editaci dalsiho turnus v turnusu - prenos cinnosti ALVA.ADTURNUSY.Turnus - editTable, po zapisu do sherlocka se maze
	//
	s ret=$$$OK
	try {
		s myid=$i(@cchglb@(id))
		s @cchglb@(id,myid)=$lb($h,$g(txt))
		m @cchglb@(id,myid,1)=arr
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="getTxtLog">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,tmmin:%String,&arrtur:%String,&txt:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//!!
	s ret=$$$OK s err=""
	try {
		$$$FROMSERVER
	    s txt=""	
		//ciselnik cinnosti
		k arrc16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrc16) i +err zt
		//text pro log
		s idcin=$g(arrtur("arr","tur",tmmin,"dta",2))
 		s hhmmbeg=$tr($j($$mh^OBapiED($j(tmmin#1440,0,0)),0,2),".",":")
 		s hhmmend=$tr($j($$mh^OBapiED($j($g(arrtur("arr","tur",tmmin,"dta",1))#1440,0,0)),0,2),".",":")
 		s hhmmlng=$tr($j($$mh^OBapiED($j($g(arrtur("arr","tur",tmmin,"dta",4))#1440,0,0)),0,2),".",":")
 		s km=$g(arrtur("arr","tur",tmmin,"dta",3))
 		s li=$g(arrtur("arr","tur",tmmin,"dta",5))
 		s sp=$g(arrtur("arr","tur",tmmin,"dta",6))
 		//
 		s txt=$p($g(arrc16("arr",idcin)),"~",1)_" od="_hhmmbeg_",do="_hhmmend
 		s txt=txt_" [čas="_hhmmlng_",km="_km_",sp="_li_"/"_sp_"]"
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyExport">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65604,54246.475641</TimeChanged>
<TimeCreated>65568,85408.446461</TimeCreated>

<Method name="VyberTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// doplneni turnusu podle definice
 	// ==========================================================
 	// podle: 
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv
 	// doplnim:
 	// in("arr",1,(idprv|idtu|hrl))=""	... turnusy pro export zadane naprimo
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
	 	k arri,arro
	 	s arri("turpl",+$g(in("arr",2,"dta",2)))=$g(in("arr",2,"dta",1))
	 	m arri("prv")=in("arr",2,"arr",1)
	 	s arri("glb")=myglb k @myglb
	 	s err=$$lTur^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
	 	s zp="" f {
		 	s zp=$o(@myglb@(zp)) i zp="" q
		 	s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
		 	s idtu="" f {
			 	s idtu=$o(@myglb@(zp,idtu)) i idtu="" q
			 	s hrl="" f {
				 	s hrl=$o(@myglb@(zp,idtu,hrl)) i hrl="" q
				 	s in("arr",1,(idprv_"|"_idtu_"|"_hrl))=""
			 	}
		 	}
	 	}
	 	k in("arr",2)
	 	k @myglb
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="PoleTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&arr:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// =============================================================================
 	// rozbaleni id turnusu z in("arr",1,(idprv|idtu|hrl))="" do arr(zp,idtu,hrl)=""
 	// =============================================================================
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		k myarr
		s myid="" f {
			s myid=$o(in("arr",1,myid)) i myid="" q
			s myarr($p(myid,"|",1),$p(myid,"|",2),$p(myid,"|",3))=""
		}
		s idprv="" f {
			s idprv=$o(myarr(idprv)) i idprv="" q
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			m arr(zp)=myarr(idprv)
		}
		k myarr
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataML">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// obecny export dat turnusu (MLINE)
 	// ==========================================================
 	// zakladni udaje pro export
 	// in("dta",1)=delimiter ";"
 	// in("dta",2)=znak "," nahradni znak v textu za oddelovac
 	// in("dta",3)=delimiterItemArr "|" oddelovac vice hodnot      
 	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))="" 		... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		i $g(in("dta",1))="" s in("dta",1)=";"
		i $g(in("dta",2))="" s in("dta",2)="_"
		i $g(in("dta",3))="" s in("dta",3)="|"
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
 		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//prevod turnusu
 		k arri,arro
 		s arri("dta",1)=$g(in("dta",1))
 		s arri("dta",2)=$g(in("dta",2))
 		s arri("dta",3)=$g(in("dta",3))
 		s arri("glb")=myglb
 		m arri("arr",1)=myArrTur
 		s err=$$exportTurEdisonNew^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
 		//zapis do souboru
 		s filename="AUDO"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
		s fidx="" f {
			s fidx=$o(@myglb@("arr",fidx)) i fidx="" q
			s cnt="" f {
				s cnt=$o(@myglb@("arr",fidx,"dta",cnt)) i cnt="" q
				s val=$g(@myglb@("arr",fidx,"dta",cnt))
				d file.WriteLine(fidx_$g(in("dta",1))_val)		
			}
		}
		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"mlturnusy.txt") 
		//zprava
 	  	m out("msg")=arro("msg")
 		//
 		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataUnis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro Unis
 	// ==========================================================
 	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))="" 		... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv	
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
 	//
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
 		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//prevod dat do globalu
		k arri,arro
		m arri("arr",1)=myArrTur
 	  	s err=$$exportTurEdison^OBapiED(idfa,nmsp,.arri,.arro) i err ztrap
 	  	//zapis do souboru
 	  	//^CacheTempJB(wrk,1,prv,tu,hrl)=val - soubor tur_1.txt
 		s filename="AUDO1"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idprv="" f {
	 		s idprv=$o(^CacheTempJB(arro,1,idprv)) i idprv="" q
	 		s idtur="" f {
		 		s idtur=$o(^CacheTempJB(arro,1,idprv,idtur)) i idtur="" q
		 		s hrl="" f {
			 		s hrl=$o(^CacheTempJB(arro,1,idprv,idtur,hrl)) i hrl="" q
			 		s val=$g(^CacheTempJB(arro,1,idprv,idtur,hrl))
			 		d file.WriteLine(val)	
		 		}
	 		}
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_1.txt") 
		//
 		//^CacheTempJB(wrk,2,prv,tu,hrl,cnt)=val -  soubor tur_2.txt
 		s filename="AUDO2"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idprv="" f {
	 		s idprv=$o(^CacheTempJB(arro,2,idprv)) i idprv="" q
	 		s idtur="" f {
		 		s idtur=$o(^CacheTempJB(arro,2,idprv,idtur)) i idtur="" q
		 		s hrl="" f {
			 		s hrl=$o(^CacheTempJB(arro,2,idprv,idtur,hrl)) i hrl="" q
			 		s cnt="" f {
				 		s cnt=$o(^CacheTempJB(arro,2,idprv,idtur,hrl,cnt)) i cnt="" q
				 		s val=$g(^CacheTempJB(arro,2,idprv,idtur,hrl,cnt))
			 			d file.WriteLine(val)	
			 		}
		 		}
	 		}
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_2.txt") 
 		//
 		//^CacheTempJB(wrk,3,zstId)=zstPopis (lokalni) - soubor tur_3.txt     
 		s filename="AUDO3"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idzst="" f {
	 		s idzst=$o(^CacheTempJB(arro,3,idzst)) i idzst="" q
	 		s val=$g(^CacheTempJB(arro,3,idzst))
	 		d file.WriteLine(val)
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_3.txt") 
		//
 		//^CacheTempJB(wrk,4,zstId)=zstPopis (dle JR) - soubor tur_4.txt     	
 		s filename="AUDO4"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idzst="" f {
	 		s idzst=$o(^CacheTempJB(arro,4,idzst)) i idzst="" q
	 		s val=$g(^CacheTempJB(arro,4,idzst))
	 		d file.WriteLine(val)
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_4.txt") 
 	  	//
 		//^CacheTempJB(wrk,5,prv,tu,hrl,idpzn,cnt)=val -  soubor tur_5.txt
 		s filename="AUDO5"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idprv="" f {
	 		s idprv=$o(^CacheTempJB(arro,5,idprv)) i idprv="" q
	 		s idtur="" f {
		 		s idtur=$o(^CacheTempJB(arro,5,idprv,idtur)) i idtur="" q
		 		s hrl="" f {
			 		s hrl=$o(^CacheTempJB(arro,5,idprv,idtur,hrl)) i hrl="" q
			 		s idpzn="" f {
				 		s idpzn=$o(^CacheTempJB(arro,5,idprv,idtur,hrl,idpzn)) i idpzn="" q
				 		s cnt="" f {
				 			s cnt=$o(^CacheTempJB(arro,5,idprv,idtur,hrl,idpzn,cnt)) i cnt="" q
				 			s val=$g(^CacheTempJB(arro,5,idprv,idtur,hrl,idpzn,cnt))
			 				d file.WriteLine(val)	
			 			}	
			 		}
		 		}
	 		}
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_5.txt") 
 	  	//
 		//^CacheTempJB(wrk,6,prv,tu,hrl,cnt)=val - soubor tur_6.txt
 		s filename="AUDO6"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
 		s idprv="" f {
	 		s idprv=$o(^CacheTempJB(arro,6,idprv)) i idprv="" q
	 		s idtur="" f {
		 		s idtur=$o(^CacheTempJB(arro,6,idprv,idtur)) i idtur="" q
		 		s hrl="" f {
			 		s hrl=$o(^CacheTempJB(arro,6,idprv,idtur,hrl)) i hrl="" q
			 		s cnt="" f {
				 		s cnt=$o(^CacheTempJB(arro,6,idprv,idtur,hrl,cnt)) i cnt="" q
				 		s val=$g(^CacheTempJB(arro,6,idprv,idtur,hrl,cnt))
			 			d file.WriteLine(val)	
			 		}
		 		}
	 		}
 		}
 		d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"tur_6.txt")
		//zprava
 	  	m out("msg")=arro("msg")
 	  	//
		k ^CacheTempJB(arro)
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataMikroUSVC">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro Mikroelektroniku USVC
 	// ==========================================================
	// zakladni udaje pro export
 	// in("dta",1)=linka pro rezijni km
 	// in("dta",2)=spoj pro rezijni km
 	// in("dta",3)=adresarlinkalik
 	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))=""  	... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
 		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//prevod dat do globalu
 		k arri,arro
 		//linka a spoj pro rezijni km
 		i ($g(in("dta",1))'="")&($g(in("dta",2))'="") {
	 		s arri("par",1)=$g(in("dta",1))_"~"_$g(in("dta",2))
 		}
 		//adresar k lik
 		i $g(in("dta",3))'="" {
	 		s arri("par",2)=$g(in("dta",3))
 		}
 		m arri("arr",1)=myArrTur
 	  	s err=$$exportTurUSVC^OBapiED(idfa,nmsp,.arri,.arro) i err ztrap
 	  	//
 	  	s filename="AUDO"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s file=##class(%File).%New(filename)
		d file.Open("WSNK\UTF8\") // "WSNK\CP1250\"
		s cnt="" f {
			s cnt=$o(^CacheTempJB(arro,cnt)) i cnt="" q
			s val=$g(^CacheTempJB(arro,cnt))
			d file.WriteLine(val)
		}
 	  	d file.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"turnusy.txt") 
		k ^CacheTempJB(arro)
 	  	//zprava
 	  	m out("msg")=arro("msg")
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataEMTEST">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro EMTEST
 	// ==========================================================
 	// in("dta",1)=obdobi od (hrl)
 	// in("dta",2)=obdobi do (hrl)
 	// in("dta",3)=akce pridat/upravit/odstranit - podivat se do VB, co se posilalo za hodnoty
 	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))=""  		... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv	
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//nastaveni programu
 		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
 		//vstupni parametry
 		s hrlod=$g(in("dta",1)) s hrldo=in("dta",2) s akce=$g(in("dta",3))
 		//prevod dat
 		//vytvoreni XML souboru
 	    s filename="AUDO"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s writer=##class(%XML.Writer).%New()
		s writer.Indent=2
	 	s writer.Charset="Windows-1250"
	 	s sc=writer.OutputToFile(filename) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.RootElement("Schedule") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("FormatVersion","1_1") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("Created",$zdate($h,3)_"T"_$ztime($p($h,",",2),1)) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("ValidFrom",$zdate(hrlod,3)) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("ValidTo",$zdate(hrldo,3)) if $$$ISERR(sc) s err=sc ztrap
	 	// data turnusu
	 	s zp="" f {
		 	s zp=$o(myArrTur(zp)) i zp="" q
		 	s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
		 	// id blizke obce pro kalendar
			s idblo=$g(arrset("arr",5,1)) i $g(arrset("arr",5,1,"prv",idprv))'="" s idblo=$g(arrset("arr",5,1,"prv",idprv))
			// vypocet statistiky pro vybrane turnusy za obdobi
			k @myglb
			s @myglb@("dta",1)=hrlod
 			s @myglb@("dta",2)=hrldo
 			s @myglb@("dta",3)=idblo
 			// definice turnusu bez casove varianty, program si je automaticky odvodi
	 		s idtu="" f {
		 		s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
		 		s @myglb@("arr",1,idtu)=""
	 		}
 			//statistika turnusu
 			k arri s arri("glb")=myglb
			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"","","") i +err zt
		 	//
		 	s idtu="" f  {
			 	s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
			 	// casova varianta turnusu - prvni ze statistiky, pokud neni, pak z pole arrtur
			 	 s hrl=$o(@myglb@("arr",1,idtu,""))
			 	 i hrl="" {
				 	 s hrl=$o(myArrTur(zp,idtu,""))
			 	 }
				 //nactu data turnusu
				 k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.arr) i +err zt
				 s sc=writer.Element("WeekSchedule_list") if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.Element("WeekSchedule") if $$$ISERR(sc) s err=sc ztrap
				 //cislo turnusu pro strojky
				 s numtu=$g(arr("dta",31))
				 i numtu="" s out("msg",$i(out("msg")))="turnus: "_idprv_"-"_idtu_"-"_$$nd^OBapiED(hrl,0)_" nemá zadáno "_""""_"označení pro strojky"_""""_", turnus nebyl převeden do souboru !" continue
				 s sc=writer.WriteAttribute("WeekScheduleNumber",numtu) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("WeekScheduleName",numtu) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("WeekScheduleType",1) if $$$ISERR(sc) s err=sc ztrap
				 //
				 s sc=writer.Element("DaySchedule_list") if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.Element("DaySchedule") if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("DayScheduleNumber",numtu) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("DayScheduleName",numtu) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
				 //
				 s sc=writer.Element("DayScheduleValidity") if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("ValidFrom",$zdate(hrlod,3)) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.WriteAttribute("ValidTo",$zdate(hrldo,3)) if $$$ISERR(sc) s err=sc ztrap
				 s val="" f cnt=hrlod:1:hrldo s val=val_($d(@myglb@("arr",2,idtu,"arr",2,cnt))>0)
				 //BitMap zatim negenerovat, strojky to neumi (BUSEM, Marek 24.11.2016)
				 //s sc=writer.WriteAttribute("BitMap",val) if $$$ISERR(sc) s err=sc ztrap
				 //===================================================================
				 //DayValidity
				 //s val=0
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),8) s val=val+64		//po
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),7) s val=val+32 	//ut
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),6) s val=val+16  	//st
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),5) s val=val+8  	//ct
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),4) s val=val+4  	//pa
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),3) s val=val+2  	//so
				 //i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),2) s val=val+1  	//ne
				 //DayValidity zatim 1,2,3,4,5,6,7, strojky maji jinou logiku, pozdeji konverzni tabulka (BUSEM, Marek 24.11.2016)
				 //     PUSCPSN
				 s val="1234567"
				 //===============================================================================================================
				 s sc=writer.WriteAttribute("DayValidity",val) if $$$ISERR(sc) s err=sc ztrap
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DayScheduleValidity
				 //
				 s sc=writer.Element("Course_list") if $$$ISERR(sc) s err=sc ztrap
				 s idcnt=0 s tm=""
				 f {
					 s tm=$o(arr("arr","tur",tm)) i tm="" q
					 // spoje
					 i $g(arr("arr","tur",tm,"dta",2))=3 {
						 s li=$g(arr("arr","tur",tm,"dta",5))
						 s sp=$g(arr("arr","tur",tm,"dta",6))
						 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) s err=""
						 s exsp=sp i $g(arrsp("dta",24))'="" s exsp=$g(arrsp("dta",24))
						 s czstod=$g(arrsp("dta",6))
						 s czstdo=$g(arrsp("dta",7))
						 s idcnt=$i(idcnt)
						 s sc=writer.Element("TripCourse") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("TripCourseNumber",idcnt) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("LineNumber",li) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("TripNumber",exsp) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.Element("Course") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("CourseOrder",idcnt) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("CourseType",1) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("PointStart",czstod) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("PointEnd",czstdo) if $$$ISERR(sc) s err=sc ztrap
						 s val=(tm+$g(arr("arr","tur",tm,"dta",7)))\1
						 s sc=writer.WriteAttribute("TimeStart",val) if $$$ISERR(sc) s err=sc ztrap
						 s val=($g(arr("arr","tur",tm,"dta",1))-$g(arr("arr","tur",tm,"dta",8)))\1
						 s sc=writer.WriteAttribute("TimeEnd",val) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Course
						 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //TripCourse
					 }
				 }
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Course_list
				 //
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DaySchedule
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DaySchedule_list				 
				 //
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //WeekSchedule				 
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //WeekSchedule_list
		 	}
	 	}
	 	s sc=writer.EndRootElement() if $$$ISERR(sc) s err=sc ztrap // Schedule
		// vystup
		s file=##class(%File).%New(filename)
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"schedules_"_$zd($h,3)_".xml") 
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataLIGNETA">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro LIGNETU
	// LIGNETA si ze souboru neco nacita pro doklady, nemenit !
 	// ==========================================================
 	// in("dta",1)=obdobi od (hrl)
 	// in("dta",2)=obdobi do (hrl)
 	// in("dta",3)=akce pridat/upravit/odstranit - podivat se do VB, co se posilalo za hodnoty
	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))=""  		... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv	
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//nastaveni programu
 		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
 		//vstupni parametry
 		s hrlod=$g(in("dta",1)) s hrldo=in("dta",2) s akce=$g(in("dta",3))
 		//prevod dat
 		//vytvoreni XML souboru
 	    s filename="AUDO"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s writer=##class(%XML.Writer).%New()
		s writer.Indent=2
	 	s writer.Charset="Windows-1250"
	 	s sc=writer.OutputToFile(filename) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.RootElement("Schedule") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("FormatVersion","1_1") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("Created",$zdate($h,3)_"T"_$ztime($p($h,",",2),1)) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("ValidFrom",$zdate(hrlod,3)) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("ValidTo",$zdate(hrldo,3)) if $$$ISERR(sc) s err=sc ztrap
	 	// data turnusu
	 	s zp="" f {
		 	s zp=$o(myArrTur(zp)) i zp="" q
		 	s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
		 	// id blizke obce pro kalendar
			s idblo=$g(arrset("arr",5,1)) i $g(arrset("arr",5,1,"prv",idprv))'="" s idblo=$g(arrset("arr",5,1,"prv",idprv))
			// vypocet statistiky pro vybrane turnusy za obdobi
			k @myglb
			s @myglb@("dta",1)=hrlod
 			s @myglb@("dta",2)=hrldo
 			s @myglb@("dta",3)=idblo
 			// definice turnusu bez casove varianty, program si je automaticky odvodi
	 		s idtu="" f {
		 		s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
		 		s @myglb@("arr",1,idtu)=""
	 		}
 			//statistika turnusu
 			k arri s arri("glb")=myglb
			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"","","") i +err zt
		 	//
		 	s idtu="" f  {
			 	s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
			 	// casova varianta turnusu - prvni ze statistiky, pokud neni, pak z pole arrtur
			 	s hrl=$o(@myglb@("arr",1,idtu,""))
			 	i hrl="" {
				 	s hrl=$o(myArrTur(zp,idtu,""))
			 	}
				//nactu data turnusu
				k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.arr) i +err zt
				s sc=writer.Element("WeekSchedule_list") if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.Element("WeekSchedule") if $$$ISERR(sc) s err=sc ztrap
				//cislo turnusu pro strojky
				s numtu=$g(arr("dta",31)) i numtu="" s numtu=idtu*100
				s sc=writer.WriteAttribute("WeekScheduleNumber",numtu) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("WeekScheduleName",idtu) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("WeekScheduleType",1) if $$$ISERR(sc) s err=sc ztrap
				//
				s sc=writer.Element("DaySchedule_list") if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.Element("DaySchedule") if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("DayScheduleNumber",numtu) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("DayScheduleName",idtu) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
				//
				s sc=writer.Element("DayScheduleValidity") if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("ValidFrom",$zdate(hrlod,3)) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("ValidTo",$zdate(hrldo,3)) if $$$ISERR(sc) s err=sc ztrap
				s val="" f cnt=hrlod:1:hrldo s val=val_($d(@myglb@("arr",2,idtu,"arr",2,cnt))>0)
				s sc=writer.WriteAttribute("BitMap",val) if $$$ISERR(sc) s err=sc ztrap
				s val=""
				f cnt=1:1:7 {
					i +$e($p($$pltHex^OBapiED($p($g(arr("dta",7)),"~",1)),"~",2),cnt) s val=val_cnt
				}
				s sc=writer.WriteAttribute("DayValidity",val) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DayScheduleValidity
				//
				s sc=writer.Element("Course_list") if $$$ISERR(sc) s err=sc ztrap
				s idcnt=0 s tm="" f {
					s tm=$o(arr("arr","tur",tm)) i tm="" q
					// spoje
					i $g(arr("arr","tur",tm,"dta",2))=3 {
						s li=$g(arr("arr","tur",tm,"dta",5))
						s sp=$g(arr("arr","tur",tm,"dta",6))
						k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) s err=""
						s exsp=sp i $g(arrsp("dta",24))'="" s exsp=$g(arrsp("dta",24))
						s czstod=$g(arrsp("dta",6))
						s czstdo=$g(arrsp("dta",7))
						s idcnt=$i(idcnt)
						s sc=writer.Element("TripCourse") if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("TripCourseNumber",idcnt) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("LineNumber",li) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("TripNumber",exsp) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.Element("Course") if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("Action",akce) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("CourseOrder",idcnt) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("CourseType",1) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("PointStart",czstod) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("PointEnd",czstdo) if $$$ISERR(sc) s err=sc ztrap
						s val=(tm+$g(arr("arr","tur",tm,"dta",7)))\1
						s sc=writer.WriteAttribute("TimeStart",val) if $$$ISERR(sc) s err=sc ztrap
						s val=($g(arr("arr","tur",tm,"dta",1))-$g(arr("arr","tur",tm,"dta",8)))\1
						s sc=writer.WriteAttribute("TimeEnd",val) if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Course
						s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //TripCourse
					}
				}
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Course_list
				//
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DaySchedule
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //DaySchedule_list				 
				//
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //WeekSchedule				 
				s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //WeekSchedule_list
		 	}
	 	}
	 	s sc=writer.EndRootElement() if $$$ISERR(sc) s err=sc ztrap // Schedule
		// vystup
		s file=##class(%File).%New(filename)
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"schedules_"_$zd($h,3)_".xml") 
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataTELMAX">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro EMTEST
 	// ==========================================================
 	// in("dta",1)=obdobi od (hrl)
 	// in("dta",2)=obdobi do (hrl)
 	// in("dta",3)=k oznaceni turnusu pridat 0 provozovnu/1 nic 
 	// in("dta",4)=platnost od (hrl), pokud se neposle, da se hrlod
 	// in("dta",5)=poradove cislo dat
	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))=""  	... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv	
 	// out
 	// out("arr",1,cnt)=$lb(fileCache,file)
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		s myglbcsv="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglbcsv
		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//nastaveni programu
 		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
 		//vstupni parametry
 		s hrlod=$g(in("dta",1)) s hrldo=$g(in("dta",2)) s mkidstrtur=$g(in("dta",3)) s platnostOd=$g(in("dta",4)) s poradoveCisloDat=$g(in("dta",5))
 		i 'platnostOd s platnostOd=hrlod
 		s platnostOd=$zdate(hrlod,3)_"T00:00:00"
 		i 'poradoveCisloDat s poradoveCisloDat=1
 		//vytvoreni XML souboru a CSV souboru
 	    s filename="AUDO1"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s writer=##class(%XML.Writer).%New()
		s writer.Indent=2
	 	s writer.Charset="utf-8"
	 	s sc=writer.OutputToFile(filename) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.RootElement("Turnusy") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("xsi:noNamespaceSchemaLocation","Turnusy.xsd") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("TypPodpisu","1") if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("Podpis","00") if $$$ISERR(sc) s err=sc ztrap
	 	//s sc=writer.WriteAttribute("Created",$zdate($h,3)_"T"_$ztime($p($h,",",2),1)) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("PlatnostOd",platnostOd) if $$$ISERR(sc) s err=sc ztrap
	 	s sc=writer.WriteAttribute("PoradoveCisloDat",poradoveCisloDat) if $$$ISERR(sc) s err=sc ztrap
	 	// data turnusu
	 	s zp="" f {
		 	s zp=$o(myArrTur(zp)) i zp="" q
		 	s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
		 	// id blizke obce pro kalendar
			s idblo=$g(arrset("arr",5,1)) i $g(arrset("arr",5,1,"prv",idprv))'="" s idblo=$g(arrset("arr",5,1,"prv",idprv))
			// vypocet statistiky pro vybrane turnusy za obdobi
			k @myglb
			s @myglb@("dta",1)=hrlod
 			s @myglb@("dta",2)=hrldo
 			s @myglb@("dta",3)=idblo
 			// definice turnusu bez casove varianty, program si je automaticky odvodi
	 		s idtu="" f {
		 		s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
		 		s @myglb@("arr",1,idtu)=""
	 		}
 			//statistika turnusu
 			k arri s arri("glb")=myglb
			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"","","") i +err zt
		 	//
		 	s idtu="" f  {
			 	s idtu=$o(myArrTur(zp,idtu)) i idtu="" q
			 	// casova varianta turnusu - prvni ze statistiky, pokud neni, pak z pole arrtur
			 	s hrl=$o(@myglb@("arr",1,idtu,""))
			 	i hrl="" {
					s hrl=$o(myArrTur(zp,idtu,""))
			 	}
				//nactu data turnusu
				k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.arr) i +err zt
				//cislo turnusu pro strojky
				s numtu=$g(arr("dta",31))
				//jako posledni 3 cisla doplnit idprv
				i 'mkidstrtur s numtu=(numtu_$e((idprv+1000),2,4))
				s sc=writer.Element("Turnus") if $$$ISERR(sc) s err=sc ztrap
				i numtu'="" {
					s sc=writer.WriteAttribute("Id",numtu) if $$$ISERR(sc) s err=sc ztrap
				}
				s sc=writer.WriteAttribute("PlatnostOd",$zdate(hrlod,3)) if $$$ISERR(sc) s err=sc ztrap
				s sc=writer.WriteAttribute("PlatnostDo",$zdate(hrldo,3)) if $$$ISERR(sc) s err=sc ztrap
				s val="" f cnt=hrlod:1:hrldo s val=val_($d(@myglb@("arr",2,idtu,"arr",2,cnt))>0)
				s sc=writer.WriteAttribute("PlatnostBitmap",val) if $$$ISERR(sc) s err=sc ztrap
				//
				s idcnt=0 s tm=""
				f {
					s tm=$o(arr("arr","tur",tm)) i tm="" q
 					s idcin=$g(arr("arr","tur",tm,"dta",2))
 					//gCisItm(idfa,nmsp,idcis,id,in,out)
 					k arrCin
 					s err=$$gCisItm^OBapiED(idfa,nmsp,16,idcin,"",.arrCin) i +err zt
					s nazcin=$g(arrCin("arr",idcin))
					// zacatek,konec
					i (idcin=1)||(idcin=2) {
						s sc=writer.Element("Cinnost") if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("Nazev",nazcin) if $$$ISERR(sc) s err=sc ztrap
						s val=$ztime(tm\1#1440,1)
						s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						s sc=writer.WriteAttribute("Informace",nazcin) if $$$ISERR(sc) s err=sc ztrap
					 	s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 }
					 // spoje
					 elseif idcin=3 {
						 s li=$g(arr("arr","tur",tm,"dta",5))
						 s sp=$g(arr("arr","tur",tm,"dta",6))
						 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) s err=""
						 //cislo spoje, muze byt jine pro strojky
						 s exsp=sp i $g(arrsp("dta",24))'="" s exsp=$g(arrsp("dta",24)) 
						 s czstod=$g(arrsp("dta",6))
						 s czstdo=$g(arrsp("dta",7))
						 s sc=writer.Element("Trasa") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Linka",li) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Spoj",exsp) if $$$ISERR(sc) s err=sc ztrap
						 s val=$j((tm+$g(arr("arr","tur",tm,"dta",7))),0,0)
						 s val=$ztime((val#1440))
						 s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s val=$j(($g(arr("arr","tur",tm,"dta",1))-$g(arr("arr","tur",tm,"dta",8))),0,0)
						 s val=$ztime(val#1440)
						 s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,czstod,"",.arrzst) s err=""
						 s nazzstod=$g(arrzst("dta",1))
						 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,czstdo,"",.arrzst) s err=""
						 s nazzstdo=$g(arrzst("dta",1))
						 s sc=writer.WriteAttribute("Zastavka",nazzstod_" - "_nazzstdo) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("DotazNaNacteni","true") if $$$ISERR(sc) s err=sc ztrap
						 s val=$g(arr("arr","tur",tm,"dta",20))
						 i val="" s val=$g(arr("dta",70))
						 i val {
							 s sc=writer.WriteAttribute("KurzVozidla",val) if $$$ISERR(sc) s err=sc ztrap
						 }
					 	 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 	 //CSV soubor
					 	 s rowtu=$i(@myglbcsv@(idtu))
					 	 s val=""
					 	 s $p(val,";",1)=numtu
					 	 s $p(val,";",2)=rowtu
					 	 s $p(val,";",3)=li
					 	 s $p(val,";",4)=exsp
					 	 s $p(val,";",5)=""
					 	 s $p(val,";",6)=$tr($j($$mh^OBapiED($j((tm+$g(arr("arr","tur",tm,"dta",7))),0,0)),0,2),".",":")_":00"
					 	 s $p(val,";",7)=$tr($j($$mh^OBapiED($j(($g(arr("arr","tur",tm,"dta",1))-$g(arr("arr","tur",tm,"dta",8))),0,0)),0,2),".",":")_":00"
					 	 s @myglbcsv@(idtu,rowtu)=val
					 }
					 // pristaveni,odstaveni,prejezd,rezijni km
					 elseif (idcin=4)||(idcin=5)||(idcin=6)||(idcin=7) {
						 s sc=writer.Element("Cinnost") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Nazev",nazcin) if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime((tm#1440),1)
						 s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime(($g(arr("arr","tur",tm,"dta",1))#1440),1)
						 s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s czstod=$g(arr("arr","tur",tm,"dta",9))
						 s czstdo=$g(arr("arr","tur",tm,"dta",10))
						 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,czstod,"",.arrzst) s err=""
						 s nazzstod=$g(arrzst("dta",1))
						 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,czstdo,"",.arrzst) s err=""
						 s nazzstdo=$g(arrzst("dta",1))
						 s sc=writer.WriteAttribute("Informace",nazzstod_" - "_nazzstdo) if $$$ISERR(sc) s err=sc ztrap
					 	 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 }
					 // informace,preruseni
					 elseif (idcin=8)||(idcin=12) {
						 s sc=writer.Element("Cinnost") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Nazev",nazcin) if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime((tm#1440),1)
						 s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime(($g(arr("arr","tur",tm,"dta",1))#1440),1)
						 s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s info=$g(arr("arr","tur",tm,"dta",12))
						 s sc=writer.WriteAttribute("Informace",info) if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("InfoTablo",info) if $$$ISERR(sc) s err=sc ztrap
					 	 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 }
					 // ost.prace
					 elseif (idcin=10) {
						 s sc=writer.Element("Cinnost") if $$$ISERR(sc) s err=sc ztrap
						 // ciselnik
						 s idOst=$g(arr("arr","tur",tm,"dta",11))
 						 k arrOst
 					 	 s err=$$gCisItm^OBapiED(idfa,nmsp,17,idOst,"",.arrOst) zt:+err "merr" s err=""
					 	 s nazOst=$g(arrOst("arr",idOst))
						 // dal stejne jako else
						 s sc=writer.WriteAttribute("Nazev",nazOst) if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime((tm#1440),1)
						 s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime(($g(arr("arr","tur",tm,"dta",1))#1440),1)
						 s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Informace","") if $$$ISERR(sc) s err=sc ztrap
					 	 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 }
					 // ostatni
					 else
					 {
						 s sc=writer.Element("Cinnost") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Nazev",nazcin) if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime((tm#1440),1)
						 s sc=writer.WriteAttribute("CasOd",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s val=$ztime(($g(arr("arr","tur",tm,"dta",1))#1440),1)
						 s sc=writer.WriteAttribute("CasDo",$p(val,":",2)_":"_$p(val,":",3)_":00.0Z") if $$$ISERR(sc) s err=sc ztrap
						 s sc=writer.WriteAttribute("Informace","") if $$$ISERR(sc) s err=sc ztrap
					 	 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Cinnost
					 }
				 }
				 //
				 s sc=writer.EndElement() if $$$ISERR(sc) s err=sc ztrap //Turnus
		 	}
	 	}
	 	s sc=writer.EndRootElement() if $$$ISERR(sc) s err=sc ztrap // Turnusy
		// vystup XML
		s file=##class(%File).%New(filename)
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filename),"Turnusy.xml") 
		// vystup CSV
		s filenameCSV="AUDO2"_$tr($zdt($h,3,1),"-: ","")_"_"_$j_".txt"
		s fileCSV=##class(%File).%New(filenameCSV)
		d fileCSV.Open("WSNK\UTF8\")
		// hlavicka pro CSV soubor
		s val=""
		s $p(val,";",1)="Turnus"
		s $p(val,";",2)="pořadí akce v turnusu"
		s $p(val,";",3)="linka"
		s $p(val,";",4)="spoj"
		s $p(val,";",5)="??"
		s $p(val,";",6)="výchozí čas spoje"
		s $p(val,";",7)="konec spoje"
		d fileCSV.WriteLine(val)
		s idtu="" f {
			s idtu=$o(@myglbcsv@(idtu)) i idtu="" q
			s rowtu="" f {
				s rowtu=$o(@myglbcsv@(idtu,rowtu)) i rowtu="" q
				d fileCSV.WriteLine($g(@myglbcsv@(idtu,rowtu)))
			}
			
		}
		d fileCSV.Close()
		s out("arr",1,$i(out("arr",1)))=$lb(file.NormalizeFilename(filenameCSV),"turnusy.csv") 
		k @myglbcsv
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataBCOPTIM">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// export dat turnusu pro BCOPTIM
 	// ==========================================================
	// filtr udaju pro export
 	// in("arr",1,(idprv|idtu|hrl))=""  	... turnusy pro export zadane naprimo
 	// nebo
 	// in("arr",2,"dta",1)=hrl				... horlog pro platnost turnusu
 	// in("arr",2,"dta",2)=1/2				... zpusob vyberu turnusu 1 cas.var.turnusu platnou k hrl (jeden) / cas.var.turnusu platnou k hrl a dalsi (vice)
 	// in("arr",2,"arr",1,idprv)=""			... je-li def, pak vratim turnusy pro def idprv	
 	// out
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vyhledani turnusu podle definice
 		i $d(in("arr",2)) s isok=##class(ALVA.AUDO.API.TurnusyExport).VyberTur(.sys,.in) i 'isok zt
 		//pole turnusu pro api fce
 		k myArrTur s isok=##class(ALVA.AUDO.API.TurnusyExport).PoleTur(.sys,.in,.myArrTur) i 'isok zt
 		//prevod dat do globalu
		k arri,arro,wrk
		m arri("arr",1)=myArrTur
 	  	s err=$$exportTurEdison^OBapiED(idfa,nmsp,.arri,.wrk) i err ztrap
 	  	// =============================================
		// presun globalu do OPTIMu
		// =============================================
		k arri,arro 
		s arri("dta",1)="^CacheTempJB("_wrk_")"
		s err=$$ImpTurEdison^ALVABCOPTIM1call(idfa,nmsp,.arri,.arro) i err ztrap   
 		k ^CacheTempJB(wrk)
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyGraf">
<IncludeCode>ALVAAUDO,OBMAC,ALVAMHD</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65646,52887.487626</TimeChanged>
<TimeCreated>65541,41463.906582</TimeCreated>

<Method name="getData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //w ##class(ALVA.ADW.TESTTU).getData("")
   //data pro naplneni okna pro praci s grafikonem - ciselniky, trasa, useky	
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   //myglb s docasnymi daty
	   s myglb="^CacheTempJB("_$$gWrkJB^JRapi()_")" k @myglb
	   //dz
	   s dz=$$gFaDz^OBapiED(idfa)
	   //cis
	   k arrcis16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrcis16)
 	   k arrcis16z f ind=1:1:18 s arrcis16z("arr",ind)=$p("ZAC~KON~SP~PŘIS~ODST~PŘEJ~REŽ~I~BP~OST~NOC~PŘERUŠ~JID~DODK~ODP~RZS~PPOH~VLV","~",ind)
 	   s arrcis16z("arr",0)="ČEK"
 	   m @myglb@("arr",100,"arr",1)=arrcis16 
 	   m @myglb@("arr",100,"arr",2)=arrcis16z
	   //
	   k arrTurnusID
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   i $p(val,D,1)="SadaID" {
			   s TurnusID=$p(val,D,2)
			   i TurnusID'="" {
				   s idprv=$p(TurnusID,"|",1)
			   	   s tu=$p(TurnusID,"|",2)
			   	   s hrl=$p(TurnusID,"|",3)
			   	   s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			   	   s arrTurnusID(zp,tu,hrl)=""
			   }   
		   }
	   }
	   //
       s minmin="" s maxmin=""
       s zp="" f {
	      s zp=$o(arrTurnusID(zp)) i (zp="") q
	      s tu="" f {
		      s tu=$o(arrTurnusID(zp,tu)) i (tu="") q
			  s hrl="" f {
				  s hrl=$o(arrTurnusID(zp,tu,hrl)) i (hrl="") q		      
		      	  k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) zt:+err "merr" s err=""
		      	  s myid=zp_"|"_tu_"|"_hrl
		      	  m @myglb@("arr",1,myid,"arr",1)=arrtur
		      	  k myarri,myarro
		      	  s myarri("dta",1)=myglb
		      	  s myarri("dta",2)=myid
		      	  s myarri("dta",3)=minmin
		      	  s myarri("dta",4)=maxmin
		      	  s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkDataTur(.sys,.myarri,.myarro) i 'isok zt
		      	  s minmin=$g(myarro("dta",1))
		      	  s maxmin=$g(myarro("dta",2))
		      	  s cnt="" f {
			      	  s cnt=$o(myarro("arr",1,cnt)) i cnt="" q
			      	  s ^||ML("OUT",$i(^||ML("OUT")))=$g(myarro("arr",1,cnt))	  
				  }
	      	  }
	      }
	  }
	  s val=""
	  s $p(val,D,1)="CASOD"
	  s $p(val,D,2)=minmin
	  s ^||ML("OUT",$i(^||ML("OUT")))=val
	  //
	  s val=""
	  s $p(val,D,1)="CASDO"
	  s $p(val,D,2)=maxmin
	  s ^||ML("OUT",$i(^||ML("OUT")))=val
	  //
	  s val=""
	  s $p(val,D,1)="GLOBAL"
	  s $p(val,D,2)=myglb
	  s ^||ML("OUT",$i(^||ML("OUT")))=val
	  //
	  $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="setData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //zapis dat do databaze	
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
	   }
	   i (myglb'="") {
		   s TurID="" f {
			   s TurID=$o(@myglb@("arr",1,TurID)) i TurID="" q
			   //byla zmena
			   i +$g(@myglb@("arr",1,TurID,"par",1)) {
				   s zp=$p(TurID,"|",1) s tu=$p(TurID,"|",2) s hrl=$p(TurID,"|",3)
				   k arrtur m arrtur=@myglb@("arr",1,TurID,"arr",1)
				   //aktualizace zacatku a konce
				   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).del1BegEndTur(.sys,zp,hrl,"",.arrtur,"") i 'isok zt
				   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,"",.arrtur,"") i 'isok zt
				   //prepoctu turnus
			   	   s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,hrl,.arrtur,"","") i +err zt
			   	   //vymazu turnus
			   	   s err=$$dTur^OBapiED(idfa,nmsp,zp,tu,hrl,"","")
			   	   //zapisu turnus
			   	   s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,hrl,.arrtur,"") i +err zt
			   }   			   
		   }
	   }
	  $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="isChangeData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //kontrola, zda jsou zmenena data pro dotaz pred stornem okna  
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
	   }
	   s ischange=0 k myarr
	   i (myglb'="") {
		   s TurID="" f {
			   s TurID=$o(@myglb@("arr",1,TurID)) i TurID="" q
			   //byla zmena
			   i +$g(@myglb@("arr",1,TurID,"par",1)) {
				   s zp=$p(TurID,"|",1) s tu=$p(TurID,"|",2) s hrl=$p(TurID,"|",3)
				   s ischange=1
				   s myarr($lb(zp,tu,$$nd^OBapiED(hrl,0)))=""
			   }   			   
		   }
	   }
	   s val="" s $p(val,D,1)="CHANGE" s $p(val,D,2)=ischange
	   s ^||ML("OUT",$i(^||ML("OUT")))=val
	   i $d(myarr) {
		   s val="" s $p(val,D,1)="MSG" s $p(val,D,2)="Byly změněny turnusy:"
		   s ^||ML("OUT",$i(^||ML("OUT")))=val
		   s myid="" f {
			   s myid=$o(myarr(myid)) i myid="" q
			   s myval=$lts(myid,"/")
			   s val="" s $p(val,D,1)="MSG" s $p(val,D,2)=myval
		   	   s ^||ML("OUT",$i(^||ML("OUT")))=val
		   }
	   }
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="moveUsek">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //prenos useku z jednoho turnusu do druheho
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb="" s SadaID="" s UsekID="" s TurToID="" s TurFromID="" s minod=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //do jake sady (turnusu) prenest
		   i $p(val,D,1)="SadaID" {
			   s SadaID=$p(val,D,2)
			   s TurToID=SadaID
		   }
		   //jaky usek (usek z turnusu) prenest
		   i $p(val,D,1)="UsekID" {
			   s UsekID=$p(val,D,2)
			   s TurFromID=$p(UsekID,"|",1,3)
			   s minod=$p(UsekID,"|",4)
		   }
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
	   }
	   i (TurToID'="")&(TurFromID'="") {
		   k arrmsg
		   s jeprenos=0
		   //turnus do ktereho prenasim usek
		   s zp=$p(TurToID,"|",1)  s hrl=$p(TurToID,"|",3)
		   k arrtur m arrtur=@myglb@("arr",1,TurToID,"arr",1)
		   //data cinnosti pro prenos
		   s mindo=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",1))
		   s idcin=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",2))
		   s km=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",3))
		   s min=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",4))
		   s li=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",5))
		   s sp=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",6))
		   s mapr=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",7))
		   s mapo=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",8))
		   s idzstod=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",9))
		   s idzstdo=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",10))
		   s idupr=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",11))
		   s info=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",12))
		   s kurs=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",20))
		   s hrprj=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",21))
		   s navsp=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",22))
		   s scpar=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",23))
		   s prefa=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",23))
		   s prefz=$g(@myglb@("arr",1,TurFromID,"arr",1,"arr","tur",minod,"dta",25))
		   //vkladam vse mimo zacatku a konce
		   i idcin>2 {
			   //data pro vlozeni
		   	   s data=""
		   	   s $li(data,1)=minod
		   	   s $li(data,2)=mindo
		   	   s $li(data,3)=idcin
		   	   s $li(data,4)=km
		   	   s $li(data,5)=min
		   	   s $li(data,6)=li
		   	   s $li(data,7)=sp
		   	   s $li(data,8)=mapr
		   	   s $li(data,9)=mapo
		   	   s $li(data,10)=idzstod
		   	   s $li(data,11)=idzstdo
		   	   s $li(data,12)=idupr
		   	   s $li(data,13)=info
		   	   s $li(data,14)=kurs
		   	   s $li(data,15)=hrprj
		   	   s $li(data,16)=navsp_"/"_scpar_"/"_prefa_"/"_prefz
		   	   s $li(data,17)=0
		   	   //aktualizace dat
			   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actInsData(.sys,zp,hrl,.data) i 'isok zt
			   //kontrola na misto v turnuse
			   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).isSpaceInTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
			   s cnt="" f {
				   s cnt=$o(myarro("msg",cnt)) i cnt="" q
				   s arrmsg($i(arrmsg))=$g(myarro("msg",cnt))
			   }
			   i (+$g(myarro("dta",1))=1) {
				   s jeprenos=1
				   //zapis do prubehu
				   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addToTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
				   //aktualizace zacatku a konce
				   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).del1BegEndTur(.sys,zp,hrl,"",.arrtur,"") i 'isok zt
				   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
				   s cnt="" f {
					   s cnt=$o(myarro("msg",cnt)) i cnt="" q
					   s arrmsg($i(arrmsg))=$g(myarro("msg",cnt))
				   }
			   }   			   
		   }
		   i jeprenos {
			   //prepoctu turnus
			   s err=$$calTur^OBapiED(idfa,nmsp,zp," ",hrl,.arrtur,"","") i +err zt
			   //zapis turnusu do globalu
			   k @myglb@("arr",1,TurToID,"arr",1)
			   m @myglb@("arr",1,TurToID,"arr",1)=arrtur
			   //poznacim zmenu
			   s @myglb@("arr",1,TurToID,"par",1)=1
			   //vratim data turnusu
		       k myarri,myarro
		       s myarri("dta",1)=myglb
		       s myarri("dta",2)=TurToID
		       s myarri("dta",3)=""
		       s myarri("dta",4)=""
		       s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkDataTur(.sys,.myarri,.myarro) i 'isok zt
		       s cnt="" f {
			       s cnt=$o(myarro("arr",1,cnt)) i cnt="" q
			       s ^||ML("OUT",$i(^||ML("OUT")))=$g(myarro("arr",1,cnt))	  
			   }
			   //vyhodim z turnusu prenasenou cinnost
			   s zp=$p(TurFromID,"|",1)  s hrl=$p(TurFromID,"|",3)
			   k arrtur m arrtur=@myglb@("arr",1,TurFromID,"arr",1)
			   k arrtur("arr","tur",minod)
			   //prepoctu turnus
			   s err=$$calTur^OBapiED(idfa,nmsp,zp," ",hrl,.arrtur,"","") i +err zt
			   //zapis turnusu do globalu
			   k @myglb@("arr",1,TurFromID,"arr",1)
			   m @myglb@("arr",1,TurFromID,"arr",1)=arrtur
			   //poznacim zmenu
			   s @myglb@("arr",1,TurFromID,"par",1)=1
			   //vratim data turnusu
		       k myarri,myarro
		       s myarri("dta",1)=myglb
		       s myarri("dta",2)=TurFromID
		       s myarri("dta",3)=""
		       s myarri("dta",4)=""
		       s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkDataTur(.sys,.myarri,.myarro) i 'isok zt
		       s cnt="" f {
			       s cnt=$o(myarro("arr",1,cnt)) i cnt="" q
			       s ^||ML("OUT",$i(^||ML("OUT")))=$g(myarro("arr",1,cnt))	  
			   }
			   //vratim zpravy
			   s cnt="" f {
				   s cnt=$o(arrmsg(cnt)) i cnt="" q
				    s val=""
		   			s $p(val,D,1)="MSG"
		   			s $p(val,D,2)=$g(arrmsg(cnt))
		   			s ^||ML("OUT",$i(^||ML("OUT")))=val
			   }
		   }
	   }
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="moveUsekToClipboard">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vypis schranky
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb="" k myarr
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
		   //jaky usek (usek z turnusu) prenest
		   i $p(val,D,1)="UsekID" {
			   s UsekID=$p(val,D,2)
			   s TurFromID=$p(UsekID,"|",1,3)
			   s minod=$p(UsekID,"|",4)
			   s myarr(TurFromID,minod)=""
		   }
	   }
	   //vyjmu useky z turnusu a dam je do schranky, vratim sady a useky pro opravene turnusy
	   s TurFromID="" f {
		   s TurFromID=$o(myarr(TurFromID)) i TurFromID="" q
		   s zp=$p(TurFromID,"|",1)
		   s hrl=$p(TurFromID,"|",3)
		   k arrtur m arrtur=@myglb@("arr",1,TurFromID,"arr",1)
		   s minod="" f {
			   s minod=$o(myarr(TurFromID,minod)) i minod="" q
			   //presun do schranky
			   s cID=$i(@myglb@("arr",2))
			   s @myglb@("arr",2,cID,"dta",1)=TurFromID
			   s @myglb@("arr",2,cID,"dta",2)=minod
			   m @myglb@("arr",2,cID,"arr",1)=arrtur("arr","tur",minod)
			   //vymazani z turnusu
			   k arrtur("arr","tur",minod)
			   //aktualizace zacatku a konce
			   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).del1BegEndTur(.sys,zp,hrl,"",.arrtur,"") i 'isok zt
			   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,"",.arrtur,.myarro) i 'isok zt
			   //prepoctu turnus
			   s err=$$calTur^OBapiED(idfa,nmsp,zp," ",hrl,.arrtur,"","") i +err zt
			   //zapis turnusu do globalu
			   k @myglb@("arr",1,TurFromID,"arr",1)
			   m @myglb@("arr",1,TurFromID,"arr",1)=arrtur
			   //poznacim zmenu
			   s @myglb@("arr",1,TurFromID,"par",1)=1
			   //vratim data turnusu
		       k myarri,myarro
		       s myarri("dta",1)=myglb
		       s myarri("dta",2)=TurFromID
		       s myarri("dta",3)=""
		       s myarri("dta",4)=""
		       s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkDataTur(.sys,.myarri,.myarro) i 'isok zt
		       s cnt="" f {
			       s cnt=$o(myarro("arr",1,cnt)) i cnt="" q
			       s ^||ML("OUT",$i(^||ML("OUT")))=$g(myarro("arr",1,cnt))	  
			   }
		   }  
	   }
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="moveUsekFromClipboard">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vypis schranky
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb="" s SadaID="" s UsekID="" k arrUsek s TurToID=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
		   //usek(y) ze schranky
		   i $p(val,D,1)="UsekID" {
			   s UsekID=$p(val,D,2)
			   s arrUsek(UsekID)=""
		   }
		   //do jake sady (turnusu) prenest
		   i $p(val,D,1)="SadaID" {
			   s SadaID=$p(val,D,2)
			   s TurToID=SadaID
		   }
	   }
	   //zapis do turnusu
	   i (TurToID'="")&($d(arrUsek)) {
		   k arrmsg
		   s jeprenos=0
		   //turnus do ktereho prenasim usek
		   s zp=$p(TurToID,"|",1)  s hrl=$p(TurToID,"|",3)
		   k arrtur m arrtur=@myglb@("arr",1,TurToID,"arr",1)
		   //data cinnosti pro prenos
		   s UsekID="" f {
			   s UsekID=$o(arrUsek(UsekID)) i UsekID="" q
			   s minod=$g(@myglb@("arr",2,UsekID,"dta",2))
			   s mindo=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",1))
		  	   s idcin=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",2))
		   	   s km=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",3))
		   	   s min=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",4))
		   	   s li=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",5))
		   	   s sp=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",6))
		   	   s mapr=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",7))
		   	   s mapo=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",8))
		   	   s idzstod=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",9))
		   	   s idzstdo=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",10))
		   	   s idupr=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",11))
		   	   s info=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",12))
		   	   s kurs=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",20))
		   	   s hrprj=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",21))
		   	   s navsp=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",22))
		   	   s scpar=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",23))
		   	   s prefa=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",23))
		   	   s prefz=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",25))
		   	   //vkladam vse mimo zacatku a konce
		   	   i idcin>2 {
			   	   //data pro vlozeni
		   	   	   s data=""
		   	   	   s $li(data,1)=minod
		   	   	   s $li(data,2)=mindo
		   	   	   s $li(data,3)=idcin
		   	   	   s $li(data,4)=km
		   	   	   s $li(data,5)=min
		   	   	   s $li(data,6)=li
		   	   	   s $li(data,7)=sp
		   	   	   s $li(data,8)=mapr
		   	   	   s $li(data,9)=mapo
		   	   	   s $li(data,10)=idzstod
		   	   	   s $li(data,11)=idzstdo
		   	   	   s $li(data,12)=idupr
		   	   	   s $li(data,13)=info
		   	   	   s $li(data,14)=kurs
		   	   	   s $li(data,15)=hrprj
		   	   	   s $li(data,16)=navsp_"/"_scpar_"/"_prefa_"/"_prefz
		   	   	   s $li(data,17)=0
		   	   	   //aktualizace dat
			   	   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actInsData(.sys,zp,hrl,.data) i 'isok zt
			   	   //kontrola na misto v turnuse
			   	   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).isSpaceInTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
			   	   s cnt="" f {
				   	   s cnt=$o(myarro("msg",cnt)) i cnt="" q
				   	   s arrmsg($i(arrmsg))=$g(myarro("msg",cnt))
			   	   }
			   	   i (+$g(myarro("dta",1))=1) {
				   	   s jeprenos=1
				   	   //zapis do prubehu
				   	   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).addToTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
				   	   //vymazu ze schranky
				   	   k @myglb@("arr",2,UsekID)
			   	   }   			   
		  	   }
		   } 
		   i jeprenos {
			   //aktualizace zacatku a konce
			   s isok=##class(ALVA.AUDO.API.TurnusyEditFce).del1BegEndTur(.sys,zp,hrl,"",.arrtur,"") i 'isok zt
			   k myarro s isok=##class(ALVA.AUDO.API.TurnusyEditFce).updBegEndTur(.sys,zp,hrl,.data,.arrtur,.myarro) i 'isok zt
			   s cnt="" f {
				   s cnt=$o(myarro("msg",cnt)) i cnt="" q
				   s arrmsg($i(arrmsg))=$g(myarro("msg",cnt))
			   }
			   //prepoctu turnus
			   s err=$$calTur^OBapiED(idfa,nmsp,zp," ",hrl,.arrtur,"","") i +err zt
			   //zapis turnusu do globalu
			   k @myglb@("arr",1,TurToID,"arr",1)
			   m @myglb@("arr",1,TurToID,"arr",1)=arrtur
			   //poznacim zmenu
			   s @myglb@("arr",1,TurToID,"par",1)=1
			   //vratim data turnusu
		       k myarri,myarro
		       s myarri("dta",1)=myglb
		       s myarri("dta",2)=TurToID
		       s myarri("dta",3)=""
		       s myarri("dta",4)=""
		       s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkDataTur(.sys,.myarri,.myarro) i 'isok zt
		       s cnt="" f {
			       s cnt=$o(myarro("arr",1,cnt)) i cnt="" q
			       s ^||ML("OUT",$i(^||ML("OUT")))=$g(myarro("arr",1,cnt))	  
			   }
			   //vratim zpravy
			   s cnt="" f {
				   s cnt=$o(arrmsg(cnt)) i cnt="" q
				    s val=""
		   			s $p(val,D,1)="MSG"
		   			s $p(val,D,2)=$g(arrmsg(cnt))
		   			s ^||ML("OUT",$i(^||ML("OUT")))=val
			   }
		   }
	   }
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="listClipboard">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vypis schranky
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb="" s SadaID="" s UsekID="" s TurToID="" s TurFromID="" s minod=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
	   }
	   //
	   s UsekID="" f {
		   s UsekID=$o(@myglb@("arr",2,UsekID)) i UsekID="" q
		   s TurFromID=@myglb@("arr",2,UsekID,"dta",1)
		   s zp=$p(TurFromID,"|",1) s hrl=$p(TurFromID,"|",3)
		   s minod=@myglb@("arr",2,UsekID,"dta",2)
		   s id=$g(@myglb@("arr",2,UsekID,"arr",1,"dta",2))
		   //data
		   i id<3 continue
		   //=============
		   k myarri,myarro
		   s myarri("dta",1)=myglb		//global s daty
	   	   s myarri("dta",2)=hrl		//hrl, k jakemu nacitat data
	   	   s myarri("dta",3)=""			//minimalni min pro zobrazeni
	   	   s myarri("dta",4)=""			//maximalni min pro zobrazeni
	   	   s myarri("dta",5)=minod		//zacatek cinnosti v min
	   	   m myarri("arr",1)=@myglb@("arr",2,UsekID,"arr",1)
	   	   s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkUsek(.sys,.myarri,.myarro) i 'isok zt
	   	   s val=$g(myarro("dta",3))	//data useku
	   	   //aktualizace id 
	   	   s $p(val,D,2)=UsekID
	   	   //zapis do out
		   s ^||ML("OUT",$i(^||ML("OUT")))=val
	   }
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="deleteGlobal">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //vymazani globalu po editaci	
   s ret=$$$OK
   s err=""
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb=""
	   s cnt="" f {
		   s val="" s cnt=$o(^||ML("IN",cnt),1,val) i cnt="" q
		   //global s daty
		   i $p(val,D,1)="GLOBAL" {
			   s myglb=$p(val,D,2)
		   }
	   }
	   i (myglb'="") k @myglb
	   //
	   $$$MYWRKGLBDEL
   }
   catch (ex) {
      s ret=$g(err)_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="mkDataTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   s ret=$$$OK
   s err="" s isok="" k out
   try {
	   $$$FROMSERVER
	   $$$MYWRKGLBSET
	   s myglb=$g(in("dta",1))				//global s daty
	   s myid=$g(in("dta",2))				//id turnusu
	   s minmin=$g(in("dta",3))				//minimalni min pro zobrazeni
	   s maxmin=$g(in("dta",4))				//maximalni min pro zobrazeni
	   k arrtur m arrtur=@myglb@("arr",1,myid,"arr",1)	
	   k arrcis16,arrcis16z
	   m arrcis16=@myglb@("arr",100,"arr",1)
	   m arrcis16z=@myglb@("arr",100,"arr",2)
	   //
	   s zp=$p(myid,"|",1) s tu=$p(myid,"|",2) s hrl=$p(myid,"|",3)
	   //
  	   s mynazev1=tu_" / "_$$nd^OBapiED(hrl,1)
  	   s mynazev2=$tr($g(arrtur("dta",8))," ","")_" / "_$$mh^OBapiED($g(arrtur("arr","tuv",11)))
  	   s mypopis=tu_" / "_$$nd^OBapiED(hrl,1)
  	   s val=""
  	   s $p(val,D,1)="SADA"
	   s $p(val,D,2)=myid
	   s $p(val,D,3)=mynazev1
	   s $p(val,D,4)=mynazev2
	   s $p(val,D,5)=mypopis
	   s out("arr",1,$i(out("arr",1)))=val
	   //prubeh turnusu
	   s minod="" f {
		   s minod=$o(arrtur("arr","tur",minod)) i minod="" q
		   s id=$g(arrtur("arr","tur",minod,"dta",2))
		   //ne zacatek a konec
		   i id<3 continue
		   //=============
		   k myarri,myarro
		   s myarri("dta",1)=myglb		//global s daty
	   	   s myarri("dta",2)=hrl		//hrl, k jakemu nacitat data
	   	   s myarri("dta",3)=minmin		//minimalni min pro zobrazeni
	   	   s myarri("dta",4)=maxmin		//maximalni min pro zobrazeni
	   	   s myarri("dta",5)=minod		//zacatek cinnosti v min
	   	   m myarri("arr",1)=arrtur("arr","tur",minod)
	   	   s isok=##class(ALVA.AUDO.API.TurnusyGraf).mkUsek(.sys,.myarri,.myarro) i 'isok zt
	   	   s minmin=$g(myarro("dta",1)) //minimalni min pro zobrazeni
	   	   s maxmin=$g(myarro("dta",2))	//maximalni min pro zobrazeni
	   	   s val=$g(myarro("dta",3))	//data useku
	   	   //aktualizace id 
	   	   s $p(val,D,2)=zp_"|"_tu_"|"_hrl_"|"_minod
	   	   //zapis do out
	  	   s out("arr",1,$i(out("arr",1)))=val
	  }
	  s out("dta",1)=minmin
	  s out("dta",2)=maxmin
   }
   catch (ex) {
      s ret=err_" "_$g(isok)_" "_ex.DisplayString()
      s ^||ML("ERR")=ret
   }
   q ret
]]></Implementation>
</Method>

<Method name="mkUsek">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ret=$$$OK s err="" k out
	try {
	   $$$FROMSERVER
	   s myglb=$g(in("dta",1))				//global s daty
	   s hrl=$g(in("dta",2))				//hrl, k jakemu nacitat data
	   s minmin=$g(in("dta",3))				//minimalni min pro zobrazeni
	   s maxmin=$g(in("dta",4))				//maximalni min pro zobrazeni
	   s minod=$g(in("dta",5))				//zacatek cinnosti v min
	   //
	   //in("arr",1) ... data useku
	   //nastaveni barev
	   s arrcolor(3)  = "33;171;205"    // modra   ~SP
	   s arrcolor(4)  = "137;207;240"   // modra  ~PŘIS
	   s arrcolor(5)  = "137;207;240"   // modra   ~ODST
	   s arrcolor(6)  = "137;207;240"   // modra   ~PŘEJ
	   s arrcolor(7)  = "137;207;240"   // modra   ~REŽ
	   s arrcolor(8)  = "255;239;0"     // zluta   ~I
	   s arrcolor(9)  = "229;43;80"     // cervena ~BP
	   s arrcolor(10) = "233;116;81"    // hneda   ~OST
	   s arrcolor(11) = "169;169;169"   // seda    ~NOC
	   s arrcolor(12) = "200;204;153"   // Hneda   ~PŘERUŠ
	   s arrcolor(13) = "255;127;80"    // oranz   ~JID
	   s arrcolor(14) = "54;69;79" 	 // petrol  ~DODK
	   s arrcolor(15) = "250;240;190"   // szluta  ~ODP
	   s arrcolor(16) = "227;218;201"   // shneda  ~RZS
	   s arrcolor(17) = "227;218;201"   // shneda   ~PPOH
	   s arrcolor(18) = "164;198;57"    // zelena   ~VLV
	   //
	   k arrcis16,arrcis16z
	   m arrcis16=@myglb@("arr",100,"arr",1)
	   m arrcis16z=@myglb@("arr",100,"arr",2)
	   //data
	   s mindo=$g(in("arr",1,"dta",1))
	   s id=$g(in("arr",1,"dta",2))
	   s li=$g(in("arr",1,"dta",5))
	   s sp=$g(in("arr",1,"dta",6))
	   s mapr=$g(in("arr",1,"dta",7))
	   s mapo=$g(in("arr",1,"dta",8))
	   s zstod=$g(in("arr",1,"dta",9))
	   s nzstod="" i zstod'="" k myarr s err=$$gZst^OBapiED(idfa,nmsp,zstod,"",.myarr) s nzstod=$g(myarr("dta",1)) k myarr
	   s zstdo=$g(in("arr",1,"dta",10)) 
	   s nzstdo="" i zstdo'="" k myarr s err=$$gZst^OBapiED(idfa,nmsp,zstdo,"",.myarr) s nzstdo=$g(myarr("dta",1)) k myarr
	   s info=$g(in("arr",1,"dta",12))
	   i id=3 {
		   k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
		   s zstod=$g(arrsp("dta",6))
		   s zstdo=$g(arrsp("dta",7))
		   s nzstod="" i zstod'="" k myarr s err=$$gZst^OBapiED(idfa,nmsp,zstod,"",.myarr) s nzstod=$g(myarr("dta",1)) k myarr
		   s nzstdo="" i zstdo'="" k myarr s err=$$gZst^OBapiED(idfa,nmsp,zstdo,"",.myarr) s nzstdo=$g(myarr("dta",1)) k myarr
		   k arrsp
	   }
	   //
	   s dscid=$g(arrcis16("arr",id))
	   s dscidz=$g(arrcis16z("arr",id))
	   s color=$g(arrcolor(id))
	   //
	   s myod=$j(minod,0,0)
	   s mydo=$j(mindo,0,0)
	   //
	   i minmin="" s minmin=myod
	   i maxmin="" s maxmin=mydo
	   //
	   i minmin>myod s minmin=myod
	   i maxmin<mydo s maxmin=mydo
	   //
	   s mynazev=""
  	   i (mydo-myod)>8 s mynazev=$tr($j($$mh^OBapiED(myod#1440),0,2),".",":")
  	   i (mydo-myod)>12 {
	  	   s mynazev=mynazev_" "_dscidz
  	  	   i id=3 s mynazev=mynazev_" "_li_"/"_sp
		   i id=8 s mynazev=mynazev_":"_info
  	   }
  	   //
  	   s mypopis=dscid
	   i id=3 {
		   s mypopis=mypopis_" "_li_"/"_sp
		   s mypopis=mypopis_$c(13,10)_"MAN="_mapr_"/"_mapo
		   s mypopis=mypopis_$c(13,10)_nzstod_$c(13,10)_"> "_nzstdo
	   }
	   i id=4 s mypopis=mypopis_$c(13,10)_nzstod_$c(13,10)_"> "_nzstdo
	   i id=5 s mypopis=mypopis_$c(13,10)_nzstod_$c(13,10)_"> "_nzstdo
	   i id=6 s mypopis=mypopis_$c(13,10)_nzstod_$c(13,10)_"> "_nzstdo
	   i id=7 s mypopis=mypopis_$c(13,10)_nzstod_$c(13,10)_"> "_nzstdo
	   i id=8 s mypopis=mypopis_$c(13,10)_info
	   //   
	   s mypouzeinfo=(id=8)
	   s mybarva=$g(arrcolor(id))
	   //
	   s val=""
	   s $p(val,D,1)="USEK"
	   s $p(val,D,2)=""
	   s $p(val,D,3)=mynazev
	   s $p(val,D,4)=mypopis
	   s $p(val,D,5)=mypouzeinfo
	   s $p(val,D,6)=mybarva
	   s $p(val,D,7)=myod
	   s $p(val,D,8)=mydo
	   s $p(val,D,9)="?"
	   //
	   s out("dta",1)=minmin		//minimalni min pro zobrazeni
	   s out("dta",2)=maxmin		//maximalni min pro zobrazeni
	   s out("dta",3)=val			//data useku
	}
	catch(ex) {
		s ret=err_ex.DisplayString()
      	s ^||ML("ERR")=ret
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyHromadneAktualizace">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65716,55672.702889</TimeChanged>
<TimeCreated>65615,33224.684968</TimeCreated>

<Method name="SpojeCasoveVarinty">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s isok=##class(ALVA.AUDO.API.TurnusyHromadneAktualizace).SpojeCasoveVarinty(.sys,.in,.out)
	//
	// ===========================================
 	// vrati casove varianty spoju pro aktualizaci
 	// (pro aktualni obdobi a dalsi)
 	// ===========================================
 	// in:
 	// out:
 	// out("arr",1,hrl)=pocet spoju
 	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		k myarr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
 		s rrrrmmact=$g(myarr("act"))
 		i rrrrmmact {
	 		s hrl=$$gminhrlrrmm^OBapiED(rrrrmmact)
	 		k arri s arri("glb")=myglb s arri("sppl",3)=hrl
			s err=$$lSp^OBapiED(idfa,nmsp,.arri,"") i +err zt
			k myarr
			s li="" f {
				s li=$o(@myglb@(li)) i li="" q
				s sp="" f {
					s sp=$o(@myglb@(li,sp)) i sp="" q
					s hrl="" f {
						s hrl=$o(@myglb@(li,sp,hrl)) i hrl="" q
						s tmp=$i(out("arr",1,hrl))	
					}
				}
			}
	 	}
  		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="SpojeVypis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s isok=##class(ALVA.AUDO.API.TurnusyHromadneAktualizace).SpojeVypis(.sys,.in,.out)
	//
	// ==============================================
 	// dohledani a vypis turnusu s neaktualnimi spoji
 	// ==============================================
 	// in:
 	// in("dta",1)=idprv
 	// in("dta",2)=hrl
 	// out:
 	// out("arr",1,cnt,"dta",1)=turnus
 	// out("arr",1,cnt,"dta",2)=casova varianta
 	// out("arr",1,cnt,"dta",3)=zprava
 	// out("arr",1,cnt,"dta",4)=priznak, zda je mozne turnus opravit 0/1 (aby nesel rozliknout)  
 	// out("arr",1,cnt,"id")=id turnusu
 	// out("msg",cnt)=zprava
 	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vstupni parametry
		s idprv=$g(in("dta",1)) i idprv="" s err="idprv=" zt
		s myhrl=$g(in("dta",2))
		//pocitadlo pro vybranne turnusy
		k myarrcnttur
		s myarrcnttur(1)=0
		s myarrcnttur(2)=0
		//je datum, pak kontrola
		i myhrl {
			//kontrola, zda muzu zapsat 
			k myarri,myarro s myarri("datum")=$$nd^OBapiED(myhrl,0)
			s isok=##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.myarri,.myarro) i +err zt
			s moznoopravit=+$g(myarro("stt"))
			//seznam turnusu
			k arri
			s arri("turpl",1)=myhrl
	 	  	s arri("prv",idprv)=""
	 	  	s arri("glb")=myglb
			s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
			s zp="" f {
				s zp=$o(@myglb@(zp)) i zp="" q
				s tu="" f {
					s tu=$o(@myglb@(zp,tu)) i tu="" q
					s hrl="" f {
						s hrl=$o(@myglb@(zp,tu,hrl)) i hrl="" q
						s myarrcnttur(1)=myarrcnttur(1)+1
						s txt=""
						k myarr
						s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
						k myarrdiff
						s err=$$fndDiffTurLS^OBapiED(idfa,nmsp,myhrl,.myarr,.myarrdiff) i +err zt
						i $d(myarrdiff("arr",1)) {
							s myarrcnttur(2)=myarrcnttur(2)+1
							s li="" f {
								s li=$o(myarrdiff("arr",1,li)) i li="" q
								s sp="" f {
									s sp=$o(myarrdiff("arr",1,li,sp)) i sp="" q
									i txt'="" s txt=txt_";"
									s txt=txt_(li_"/"_sp_"-")
									s mycnt="" f {
										s mycnt=$o(myarrdiff("arr",1,li,sp,"dta",mycnt)) i mycnt="" q
										s myval=$g(myarrdiff("arr",1,li,sp,"dta",mycnt))
										i mycnt=1 {
											i $e(txt,$l(txt))'="-" s txt=$e(txt,1,$l(txt)-1)_","
											s txt=txt_"odjezd("
											s txt=txt_$tr($j($$mh^OBapiED($p(myval,"~",1)),0,2),".",":")_">"_$tr($j($$mh^OBapiED($p(myval,"~",2)),0,2),".",":")
											s txt=txt_")"
										}
										i mycnt=2 {
											i $e(txt,$l(txt))'="-" s txt=$e(txt,1,$l(txt)-1)_","
											s txt=txt_"jízda("
											s txt=txt_$tr($j($$mh^OBapiED($p(myval,"~",1)),0,2),".",":")_">"_$tr($j($$mh^OBapiED($p(myval,"~",2)),0,2),".",":")
											s txt=txt_")"
										}
										i mycnt=3 {
											i $e(txt,$l(txt))'="-" s txt=$e(txt,1,$l(txt)-1)_","
											s txt=txt_"km("
											s txt=txt_$tr($tr(myval,"~",">"),".",",")
											s txt=txt_")"
											
										}
										i mycnt=4 {
											i $e(txt,$l(txt))'="-" s txt=$e(txt,1,$l(txt)-1)_","
											s txt=txt_"příjezd("
											s txt=txt_$tr($j($$mh^OBapiED($p(myval,"~",1)),0,2),".",":")_">"_$tr($j($$mh^OBapiED($p(myval,"~",2)),0,2),".",":")
											s txt=txt_")"
										}
										i mycnt=5 {
											i $e(txt,$l(txt))'="-" s txt=$e(txt,1,$l(txt)-1)_","
											s txt=txt_"ukončen k "
											s txt=txt_$$nd^OBapiED($p(myval,"~",2),0)
										}
									}
								}
							}
							//kontrola na moznost upravovat data v uzavrenem obdobi
							i moznoopravit=0 s txt=txt_", nelze opravit turnus v uzavřeném období !"
							//vystup
							s myidx=$i(out("arr",1))
							s out("arr",1,myidx,"dta",1)=tu
							s out("arr",1,myidx,"dta",2)=$$nd^OBapiED(hrl,0)
							s out("arr",1,myidx,"dta",3)=txt
							s out("arr",1,myidx,"dta",4)=moznoopravit
							s out("arr",1,myidx,"id")=idprv_"|"_tu_"|"_hrl
						}
					}
				}
			}
		}
		//zprava o kontrole ? mozno vypsat nekde dole v okne 
		s out("msg",$i(out("msg")))="překontrolováno "_+$g(myarrcnttur(1))_" turnusů, rozdíl ve spojích nalezen na "_+$g(myarrcnttur(2))_" tur."
  		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="SpojeAktualizace">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s isok=##class(ALVA.AUDO.API.TurnusyHromadneAktualizace).SpojeAktualizace(.sys,.in,.out)
	//
	// ==============================================
 	// dohledani a vypis turnusu s neaktualnimi spoji
 	// ==============================================
 	// in:
 	// in("dta",1)=hrl
 	// in("dta",2)=nastavitobjizdky 0/1
 	// in("dta",3)=aktualizovatzacatekkonec 0/1
 	// in("arr",1,idturnusu)=""
 	// out:
 	// out("arr",1,idturnusu,"dta",1)=turnus
 	// out("arr",1,idturnusu,"dta",2)=casova varianta
 	// out("arr",1,idturnusu,"dta",3)=zprava
 	// out("arr",1,idturnusu,"dta",4)=priznak, zda je mozne turnus opravit 0/1 (aby nesel rozliknout) 
 	// out("arr",1,idturnusu,"dta",5)=priznak, zda se se vse zaktualizovalo 0/1 (0 ne /1 ano)
 	// out("arr",1,idturnusu,"id")=nove idturnusu
 	// out("msg",cnt)=zprava
 	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vstupni parametry
		s myhrl=$g(in("dta",1))
		s actobjizdky=$g(in("dta",2))
		s actzackon=$g(in("dta",3))
		i myhrl {
			//kontrola, zda muzu zapsat 
			k myarri,myarro s myarri("datum")=$$nd^OBapiED(myhrl,0)
			s isok=##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.myarri,.myarro) i 'isok zt
			s moznoopravit=+$g(myarro("stt"))
			//turnusy
			s idtur="" f {
				s idtur=$o(in("arr",1,idtur)) i idtur="" q
				s idturnew=idtur
				s actok=1
				s txt=""
				s idprv=$p(idtur,"|",1) s tu=$p(idtur,"|",2) s hrl=$p(idtur,"|",3)
				s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp)
				i moznoopravit=1 {
					k myarr
					s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
					k myarrdiff
					s err=$$fndDiffTurLS^OBapiED(idfa,nmsp,myhrl,.myarr,.myarrdiff) i +err zt
					i $d(myarrdiff("arr",1)) {
						//aktualizace dat turnusu
						s myarr("arr","cop","dta",1)=$h
						s myarr("arr","cop","dta",2)=fullname
						s myarr("hrl")=myhrl
						s myarr("dta",11)=myhrl
						i myhrl'=hrl  s txt="nová čas. varianta "_$$nd^OBapiED(myhrl,0)
						k arro
						s err=$$actDiffTurLS^OBapiED(idfa,nmsp,myhrl,.myarrdiff,.myarr,.arro) i +err zt
						//zprava, co se zaktualizovalo
	  					i $d(myarrdiff("arr",2)) {
							s mymin="" f {
								s mymin=$o(myarrdiff("arr",2,mymin)) i mymin="" q
								i txt'="" s txt=txt_"; "
								s li=$g(myarrdiff("arr",2,mymin,"dta",1))
								s sp=$g(myarrdiff("arr",2,mymin,"dta",2))
								s act=$g(myarrdiff("arr",2,mymin,"dta",3))
								s txt=txt_li_"/"_sp_"-"
								i act {
									s txt=txt_"aktualizováno"
								}
								else {
									s txt=txt_"neaktualizováno"
									s actok=0
								}
							}		
						}
						//aktualizace zacatku a konce turnusu
						i +$g(actzackon) {
							s isact=0
							//zacatek
							s mymin=$o(myarr("arr","tur",""))
							i (mymin'="") {
								i ($g(myarr("arr","tur",mymin,"dta",2))=1) k myarr("arr","tur",mymin) s isact=1
							}
							//konec
							s mymin=$o(myarr("arr","tur",""),-1)
							i (mymin'="") {
								i ($g(myarr("arr","tur",mymin,"dta",2))=2) k myarr("arr","tur",mymin) s isact=1
							}
							i +isact {
								i txt'="" s txt=txt_"; "
								s txt=txt_"aktualizace začátku a konce"
							}
						}
						s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,myhrl,.myarr,"","") i +err zt
						i txt'="" s txt=txt_"; "
						s txt=txt_"přepočet turnusu"
						i $g(actobjizdky)=1 {
							s isobjizdka=0
							s mymin="" f  {
								 s mymin=$o(myarr("arr","tur",mymin)) i (mymin="")!(isobjizdka) q
								 i $g(myarr("arr","tur",mymin,"dta",2))=3 {
									 s li=$g(myarr("arr","tur",mymin,"dta",5))
									 s sp=$g(myarr("arr","tur",mymin,"dta",6))
									 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,myhrl,"",.arrsp)
									 i $g(arrsp("dta",23)) s isobjizdka=1
								 }
							}
							i (+isobjizdka)'=(+$g(myarr("dta",36))) {
								s myarr("dta",36)=(+isobjizdka)
								i txt'="" s txt=txt_"; "
								s txt=txt_"upraven stav na "_$p("neobjížďkový~objížďkový","~",(isobjizdka+1))
							}
						}
						s idturnew=zp_"|"_tu_"|"_myhrl
						s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,myhrl,.myarr,"") i +err zt
					}
					else {
						s txt="žádné rozdíly ve spojích nebyly nalezeny !"
					}
				}
				else {
					s txt="nelze opravit turnus v uzavřeném období !"
				}
				s out("arr",1,idtur,"dta",1)=tu
	 			s out("arr",1,idtur,"dta",2)=$$nd^OBapiED(myhrl,0)
	 			s out("arr",1,idtur,"dta",3)=txt
	 			s out("arr",1,idtur,"dta",4)=moznoopravit
	 			s out("arr",1,idtur,"dta",5)=actok
	 			s out("arr",1,idtur,"id")=idprv_"|"_tu_"|"_myhrl
			}
		}
  		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyHromadneUpravy">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65716,57118.348471</TimeChanged>
<TimeCreated>65604,48844.040541</TimeCreated>

<Method name="DataVypis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s in("arr",1,"2|2100|65524")=""
	//s in("arr",1,"20|30|62457")=""
	//s in("dta",1)=101
	//s isok=##class(ALVA.AUDO.API.TurnusyHromadneUpravy).DataVypis(.sys,.in,.out)
	//
	// ==================================
 	// pozadovana data pro seznam turnusu 
 	// ==================================
 	// in:
 	// in("arr",1,(idprv|idtu|hrl))=""
 	// in("dta",1)=iddat pro vypis hodnot
 	// out
 	// out("arr",1,idtur,"dta")=$lb(hodnota,zprava) ... pro zobrazeni v seznamu
 	// out("arr",2,cnt,"dta")=hodnota				... tabulka hodnot v turnusech
 	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//id datove polozky
		s dataid=$g(in("dta",1))
		// aktualni obdobi
		k myarr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
		s actrrrrmm=$g(myarr("act"))
		k myarr
		i 'actrrrrmm {
			s zprava="v AD není definováno aktuální obdobi"
		}
		//nastaveni
		k myarrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrset) i +err zt
		//ciselniky
		i dataid=303 {
			k arrcis16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrcis16) i +err zt
		}
		//
		s id="" f {
			s id=$o(in("arr",1,id)) i id="" q	
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			k myarrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarrtu) i +err zt
			//data a zprava
			s hodnota="" s zprava=""
			//
			k myarri,myarro
			s myarri("id")=id
			s myarri("obdobi")=actrrrrmm
			m myarri("arr",1)=myarrset
			s isok=##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.myarri,.myarro) i 'isok zt
			i '$g(myarro("stt"))  s zprava="není povoleno opravovat turnusy v uzavřeném období"
			//
			//Turnus
			//
			k arrcis i dataid=303 m arrcis=arrcis16 k hodnota
			s isok=..Hodnota(.sys,hrl,dataid,.arrcis,.myarrtu,.hodnota) i 'isok zt
			d ..HodnotaDoTabulky(.sys,.out,.hodnota)
			s out("arr",1,id,"dta")=$lb(hodnota,zprava)
		}	
		//
 		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="Hodnota">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,hrl:%String,dataid:%String,&arrcis:%String,&myarrtu:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// =======================================================================================
 	// vrati hodnotu turnusu pro dataid v out a plni tabulku hodnot v out("arr",1,cnt)=hodnota
 	// =======================================================================================
	s ret=$$$OK s err="" k out s out=""
	$$$FROMSERVER
	try {
	//Turnus / Alternativní varianta
	i dataid=101 {
		s out=+$g(myarrtu("dta",71))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Časová varianta do
	i dataid=102 {
		s out=$g(myarrtu("dta",33))
		i +out {
			s out=$$nd^OBapiED(out,0)
		}
		else {
			s out=""
		}
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Dělený
	i dataid=103 {
		s out=+$g(myarrtu("dta",53))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Kurs
	i dataid=104 {
		s out=$g(myarrtu("dta",70))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Kvalita vozu
	i dataid=105 {
		s out=$g(myarrtu("dta",59))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Limit km
	i dataid=106 {
		s out=$g(myarrtu("dta",52))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Neobsazovat v plánu
	i dataid=107 {
		s out=+$g(myarrtu("dta",64))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Nízkopodlažní
	i dataid=108 {
		s out=+$g(myarrtu("dta",37))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Objížďkový
	i dataid=109 {
		s out=+$g(myarrtu("dta",36))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Označení pro strojky
	i dataid=110 {
		s out=$g(myarrtu("dta",31))
		s out("arr",1,$i(out("arr",1)))=out
	}	
	//Turnus / Posilový
	i dataid=111 {
		s out=+$g(myarrtu("dta",3))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Poznámka na DZVA
	i dataid=112 {
		s mycnt="" f {
			s mycnt=$o(myarrtu("arr","txd",mycnt)) i mycnt="" q
			i out'="" s out=out_"; "
			s out=out_$g(myarrtu("arr","txd",mycnt))
		}
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Přirážka PHM (%)
	i dataid=113 {
		s out=$g(myarrtu("dta",14))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Záhlaví
	i dataid=114 {
		s mycnt="" f {
			s mycnt=$o(myarrtu("arr","txh",mycnt)) i mycnt="" q
			i out'="" s out=out_"; "
			s out=out_$g(myarrtu("arr","txh",mycnt))
		}
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Turnus / Zápatí
	i dataid=115 {
		s mycnt="" f {
			s mycnt=$o(myarrtu("arr","txp",mycnt)) i mycnt="" q
			i out'="" s out=out_"; "
			s out=out_$g(myarrtu("arr","txp",mycnt))
		}
		s out("arr",1,$i(out("arr",1)))=out
	}
	//
	//Mzdy
	//
	//Mzdy / Čekání + přer. práce do odpr. doby (%)
	i dataid=201 {
		s out=$g(myarrtu("dta",24))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Diety
	i dataid=202 {
		s out=$g(myarrtu("dta",21))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / DODK
	i dataid=203 {
		s out=$tr($j(+$g(myarrtu("dta",15)),0,2),".",":")
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / DODK v noci (%)
	i dataid=204 {
		s out=$g(myarrtu("dta",20))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Fixní příplatek k čekání
	i dataid=205 {
		s out=$g(myarrtu("dta",34))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Fixní příplatek ke mzdě
	i dataid=206 {
		s out=$g(myarrtu("dta",22))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Koeficient mzdy (%)
	i dataid=207 {
		s out=$g(myarrtu("dta",16))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Neproplácet čekání
	i dataid=208 {
		s out=+$g(myarrtu("dta",60))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Nevyhodnocovat vyrovnávací dobu
	i dataid=209 {
		s out=+$g(myarrtu("dta",61))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Proplácení diet
	i dataid=210 {
		s out=+$g(myarrtu("dta",35))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / / Příplatek nocovné
	i dataid=211 {
		s out=$g(myarrtu("dta",26))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Příplatek za odpracovené hodiny
	i dataid=212 {
		s out=+$g(myarrtu("dta",66))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Vícesměnný příplatek
	i dataid=213 {
		s out=+$g(myarrtu("dta",23))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Vyrovnávací doba
	i dataid=214 {
		s out=$tr($j($$mh^OBapiED($g(myarrtu("dta",25))),0,2),".",":")
		s out("arr",1,$i(out("arr",1)))=out
	}
	//Mzdy / Zahraniční diety
	i dataid=215 {
		s out=$g(myarrtu("dta",65))
		s out("arr",1,$i(out("arr",1)))=out
	}
	//	
    //Průběh
	//
	//Průběh / Bezpečnostní přestávka
	i dataid=301 {
		//doba pridelene BP v turnuse
		s actMinBP=$g(myarrtu("arr","tuv",5))
		k myarr s err=$$actBPTur^OBapiED(idfa,nmsp,hrl,.myarrtu,"",.myarr) i +err zt
		s out="do 50 km" i +$g(myarr("par","dta",1)) s out="nad 50 km"
		i +actMinBP s out=out_", v turnuse je BP nastavena"
		i ($o(myarr("arr",2,""))'="")!($o(myarr("arr",3,""))'="") {
			 s out=out_", v turnuse je BP potřeba"
			 i $o(myarr("arr",3,""))'="" {
				 s out=out_", ale automaticky ji nelze přidělit !"
			 }
		}
		else {
			s out=out_", v turnuse není BP potřeba"
		}
	}
	//Průběh / Dodk
	i dataid=302 {
		s minod="" f {
			s minod=$o(myarrtu("arr","tur",minod)) i minod="" q
			i $g(myarrtu("arr","tur",minod,"dta",2))=14 {
				s mindoba=$g(myarrtu("arr","tur",minod,"dta",4))
				i out'="" s out=out_"; "
				s out=out_" v "_$tr($j($$mh^OBapiED(minod),0,2),".",":")_"="_$tr($j($$mh^OBapiED(mindoba),0,2),".",":")
			}
		}
	}
	//Průběh /  Informace
	i dataid=303 {
		s minod="" f {
			s minod=$o(myarrtu("arr","tur",minod)) i minod="" q
			i $g(myarrtu("arr","tur",minod,"dta",2))=8 {
				i out'="" s out=out_"; "
				s out=out_" v "_$tr($j($$mh^OBapiED($j(minod,0,0)),0,2),".",":")_"="_$g(myarrtu("arr","tur",minod,"dta",12))
				s out("arr",1,$i(out("arr",1)))=$g(myarrtu("arr","tur",minod,"dta",12))
			}
		}
	}
	//Průběh / Přejezd + Přistavení
	i dataid=304 {
		k myarr s err=$$actPRJTur^OBapiED(idfa,nmsp,hrl,.myarrtu,"",.myarr) i +err zt "merr" s err=""
		s minod="" f  {
			s minod=$o(myarr("arr",1,minod)) i minod="" q
			s myval=$g(myarr("arr",1,minod))
			s idcin=$p(myval,"~",1)
			s czstod=$p(myval,"~",2)
			s czstdo=$p(myval,"~",3)
			s kmtur=$p(myval,"~",4)
			s kmcis=$p(myval,"~",5)
			s nzstod="" s nzstdo=""
	    	k myarrzst s err=$$gZst^OBapiED(idfa,nmsp,czstod,"",.myarrzst) s err=""
	    	s nzstod=$g(myarrzst("dta",1))
	    	k myarrzst s err=$$gZst^OBapiED(idfa,nmsp,czstdo,"",.myarrzst) s err=""
	    	s nzstdo=$g(myarrzst("dta",1))
		    i out'="" s out=out_"; "
			s out=out_$g(arrcis("arr",idcin))_" v "_$tr($j($$mh^OBapiED(minod),0,2),".",":")_" - "_kmtur_" km x "_kmcis_" km ("_nzstod_"-"_nzstdo_")"
		}
	}
	
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="HodnotaDoTabulky">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&arr:%String,&val:%String]]></FormalSpec>
<Implementation><![CDATA[
	//kontrola na to, zda tabulka obsahuje hodnotu(y), pokud ne, vlozim ji tam:
	//hodnoty v val("arr",1,cnt)
	//tabulka v arr("arr",2,cnt,"dta")=hodnota
	s cnt="" f {
		s cnt=$o(val("arr",1,cnt)) i cnt="" q
		s myval=$g(val("arr",1,cnt))
		s find=0
		s mycnt="" f {
			s mycnt=$o(arr("arr",2,mycnt)) i (mycnt="")!(find) q
			i $g(arr("arr",2,mycnt,"dta"))=myval s find=mycnt
		}
	 i 'find s arr("arr",2,$i(arr),"dta")=myval	
	}
]]></Implementation>
</Method>

<Method name="DataZapis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//d ##class(ALVA.MHD.WrkFce).MakeSys("VS_CSAD","USER",.sys)
	//s in("arr",1,"2|2100|65524")=""
	//s in("arr",1,"20|30|62457")=""
	//s in("dta",1)=101
	//s in("dta",2)=0
	//s in("dta",3)=1
	
	//s isok=##class(ALVA.AUDO.API.TurnusyHromadneUpravy).DataZapis(.sys,.in,.out)
	//
	// ==================================
 	// pozadovana data pro seznam turnusu 
 	// ==================================
 	// in:
 	// in("arr",1,(idprv|idtu|hrl))="" ... turnusy pro upravu
 	// in("dta",1)=iddat pro zapis hodnot
 	// in("dta",2)=0 spolecna hodnota pro turnusy / 1 podle tabulky / 2 algoritmus ... zpusob zmeny dat
 	// in("dta",3)=spolecna hodnota pro turnusy
 	// in("dta",4)=id algoritmu
 	// in("arr",2,cnt)=$lb(puvodni hodnota,nova hodnota) ... tabulka hodnot
 	// out
 	// out("arr",1,(idprv|idtu|hrl))="" ... id opravenych turnusu 
 	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//id datove polozky
		s dataid=$g(in("dta",1))
		// aktualni obdobi
		k myarr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.myarr) i +err zt
		s actrrrrmm=$g(myarr("act"))		
		i 'actrrrrmm {
			s zprava="v AD není definováno aktuální obdobi"
		}
		//nastaveni
		k myarrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrset) i +err zt
		//ciselniky
		i dataid=303 {
			k arrcis16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrcis16) i +err zt
		}
		//
		s id="" f {
			s id=$o(in("arr",1,id)) i id="" q	
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2) s hrl=$p(id,"|",3)
			//kontrola, zda je mozne turnus ulozit  
			k myarri,myarro
			s myarri("id")=id
			s myarri("obdobi")=actrrrrmm
			m myarri("arr",1)=myarrset
			s isok=##class(ALVA.AUDO.API.Turnusy).CanBeEdited(.sys,.myarri,.myarro) i 'isok zt
			i '$g(myarro("stt"))  s zprava="není povoleno opravovat turnusy v uzavřeném období" continue
			//zapis dat
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			k myarrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarrtu) i +err zt
			s ulozturnus=0
			//hodnota v turnusu
			k arrcis i dataid=303 m arrcis=arrcis16
			k myarrhodnota
			s isok=..Hodnota(.sys,hrl,dataid,.arrcis,.myarrtu,.myarrhodnota) i 'isok zt
			k arri,arro
			//parametry
			f cnt=1:1:4 s arri("dta",cnt)=$g(in("dta",cnt))
			//tabulka
			m arri("arr",1)=in("arr",2)
			//zapis do dat
			s isok=..HodnotaZapis(.sys,id,.myarrtu,.myarrhodnota,.arri,.arro) i 'isok zt
			//zapis turnusu
			i $g(arro("stt",1)) {
				// prepocet turnusu
				s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarrtu,"","") i +err zt
				//jeste tam poslat idos
				s myarrtu("arr","cop","dta",1)=$h
				s myarrtu("arr","cop","dta",2)=fullname
				s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarrtu,"") i +err zt
			}
		//
	}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="HodnotaZapis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,id:%String,&myarrtu:%String,&myarrhodnota:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// =======================================
 	// aktualizace hodnot v turnusu
 	// v in:
 	// in("dta",1)=iddat pro zapis hodnot
 	// in("dta",2)=0spolecna hodnota pro turnusy / 1 podle tabulky / 2 vypocet podle algoritmu ... zpusob zmeny dat
 	// in("dta",3)=spolecna hodnota pro turnusy
 	// in("dta",4)=id algoritmu
 	// in("arr",1,cnt)=$lb(puvodni hodnota,nova hodnota) ... tabulka hodnot
 	// v myarrhodnota:
 	// myarrhodnota=puvodni hodnota
 	// myarrhodnota("arr",1,cnt)=puvodnihodnota ... tabulka hodnot
 	// v out:
 	// out("stt",1)=0/1 1 ... provedl se zapis do turnusu
 	// =======================================
	s ret=$$$OK s err="" k out s out("stt",1)=0
	$$$FROMSERVER
	try {
		s idprv=$p(id,"|",1)
		s tu=$p(id,"|",2)
		s hrl=$p(id,"|",3)
		s dataid=$g(in("dta",1))
		s zmenaid=$g(in("dta",2))
		s spolecnahodnota=$g(in("dta",3))
		s algoritmusid=$g(in("dta",4))
		//zp
		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		//puvodni hodnota
		s puvodnihodnota=$g(myarrhodnota)
		//vypocet novych hodnot
		k novahodnota s novahodnota=""
		s find=0
		//spolecna hodnota do vsech turnusu
		i +zmenaid=0 {
			s novahodnota=spolecnahodnota
			s find=1
		}
		//podle tabulky
		i +zmenaid=1 {
			s cnt="" f {
				s cnt=$o(in("arr",1,cnt)) i (cnt="")!(find) q
				i $lg(in("arr",1,cnt),1)=puvodnihodnota {
					s novahodnota=$lg(in("arr",1,cnt),2)
					s find=1
				}
			}
		}
		//podle algoritmu
		i +zmenaid=2 {
			//cislo turnusu pro strojky
			i dataid=110 {
				i algoritmusid=0 s novahodnota="" s find=1
				i algoritmusid=1 s novahodnota=$tr(tu,".","") s find=1
				i algoritmusid=2 s novahodnota=tu*100 s find=1
				i algoritmusid=3 s novahodnota=tu*1000 s find=1
				i algoritmusid=4 s novahodnota=idprv_$tr(tu,".","") s find=1	
			}
			//kurs pro strojky
			i dataid=104 {
				i algoritmusid=0 s novahodnota="" s find=1
				i algoritmusid=1 s novahodnota=+$p(tu,".",2) s find=1	
			}
		}
		//je-li novahodnota rozdilna od puvodni provede se aktualizace dat, ne v prubezich, to je odlisne
		i (find)&(puvodnihodnota'=novahodnota)&(dataid<300) {
			
			//Turnus / Alternativní varianta
			i dataid=101 {
				s myarrtu("dta",71)=+novahodnota
			}
			//Turnus / Časová varianta do
			i dataid=102 {
				s myarrtu("dta",33)=""
				i novahodnota s myarrtu("dta",33)=$$dn^OBapiED(novahodnota)
			}
			//Turnus / Dělený
			i dataid=103 {
				s myarrtu("dta",53)=+novahodnota
			}
			//Turnus / Kurs
			i dataid=104 {
				s myarrtu("dta",70)=novahodnota
			}
			//Turnus / Kvalita vozu
			i dataid=105 {
				s myarrtu("dta",59)=novahodnota
			}
			//Turnus / Limit km
			i dataid=106 {
				s myarrtu("dta",52)=novahodnota
			}
			//Turnus / Neobsazovat v plánu
			i dataid=107 {
				s myarrtu("dta",64)=+novahodnota
			}
			//Turnus / Nízkopodlažní
			i dataid=108 {
				s myarrtu("dta",37)=+novahodnota
			}
			//Turnus / Objížďkový
			i dataid=109 {
				s myarrtu("dta",36)=+novahodnota
				s out("arr",1,$i(out("arr",1)))=out
			}
			//Turnus / Označení pro strojky
			i dataid=110 {
				s myarrtu("dta",31)=novahodnota
			}	
			//Turnus / Posilový
			i dataid=111 {
				s myarrtu("dta",3)=+novahodnota
			}
			//Turnus / Poznámka na DZVA
			i dataid=112 {
				k myarrtu("arr","txd")
				f mycnt=1:1:$l(novahodnota,";") {
					s myarrtu("arr","txd",mycnt)=$p(novahodnota,";",mycnt)
				}
			}
			//Turnus / Přirážka PHM (%)
			i dataid=113 {
				s myarrtu("dta",14)=novahodnota
			}
			//Turnus / Záhlaví
			i dataid=114 {
				k myarrtu("arr","txh")
				f mycnt=1:1:$l(novahodnota,";") {
					s myarrtu("arr","txh",mycnt)=$p(novahodnota,";",mycnt)
				}
			}
			//Turnus / Zápatí
			i dataid=115 {
				k myarrtu("arr","txp")
				f mycnt=1:1:$l(novahodnota,";") {
					s myarrtu("arr","txp",mycnt)=$p(novahodnota,";",mycnt)
				}
			}
			//
			//Mzdy
			//
			//Mzdy / Čekání + přer. práce do odpr. doby (%)
			i dataid=201 {
				s myarrtu("dta",24)=novahodnota
			}
			//Mzdy / Diety
			i dataid=202 {
				s myarrtu("dta",21)=novahodnota
			}
			//Mzdy / DODK
			i dataid=203 {
				s myarrtu("dta",15)=""
				i +$tr(novahodnota,":",".") s myarrtu("dta",15)=+$tr(novahodnota,":",".")
			}
			//Mzdy / DODK v noci (%)
			i dataid=204 {
				s myarrtu("dta",20)=novahodnota
			}
			//Mzdy / Fixní příplatek k čekání
			i dataid=205 {
				s myarrtu("dta",34)=novahodnota
			}
			//Mzdy / Fixní příplatek ke mzdě
			i dataid=206 {
				s myarrtu("dta",22)=novahodnota
			}
			//Mzdy / Koeficient mzdy (%)
			i dataid=207 {
				s myarrtu("dta",16)=novahodnota
			}
			//Mzdy / Neproplácet čekání
			i dataid=208 {
				s myarrtu("dta",60)=+novahodnota
			}
			//Mzdy / Nevyhodnocovat vyrovnávací dobu
			i dataid=209 {
				s myarrtu("dta",61)=+novahodnota
			}
			//Mzdy / Proplácení diet
			i dataid=210 {
				s myarrtu("dta",35)=+novahodnota
			}
			//Mzdy / / Příplatek nocovné
			i dataid=211 {
				s myarrtu("dta",26)=novahodnota
			}
			//Mzdy / Příplatek za odpracovené hodiny
			i dataid=212 {
				s myarrtu("dta",66)=+novahodnota
			}
			//Mzdy / Vícesměnný příplatek
			i dataid=213 {
				s myarrtu("dta",23)=+novahodnota
			}
			//Mzdy / Vyrovnávací doba
			i dataid=214 {
				s myarrtu("dta",25)=$$hm^OBapiED($tr(novahodnota,":","."))
			}
			//Mzdy / Zahraniční diety
			i dataid=215 {
				s myarrtu("dta",65)=novahodnota
			}
			s out("stt",1)=1
		}
		//zmena hodnot v prubehu turnusu
		i dataid>300 {
			//Průběh / Bezpečnostní přestávka
			i dataid=301 {
				//vypocet podle algoritmu
				i (+zmenaid=2)&(algoritmusid=0) {
					// aktualizace BP
					k arr s err=$$actBPTur^OBapiED(idfa,nmsp,hrl,.myarrtu,"","") i +err zt
					s out("stt",1)=1
				} 
			}
			//Průběh / Dodk
			i dataid=302 {
				i (+zmenaid=0) {
					s min1=$$hm^OBapiED($tr($p(spolecnahodnota,"~",1),":","."))
					s min2=$$hm^OBapiED($tr($p(spolecnahodnota,"~",2),":","."))
					k arri
					s arri("dta",1)=min1
					s arri("dta",2)=min2
					s err=$$addDODKTur^OBapiED(idfa,nmsp,zp,hrl,.myarrtu,.arri,"") i +err zt
					s out("stt",1)=1
				}
			}
			//Průběh /  Informace
			i dataid=303 {
				i (+zmenaid=0)!((+zmenaid=1)) {
					s minod="" f {
						s minod=$o(myarrtu("arr","tur",minod)) i minod="" q
						i $g(myarrtu("arr","tur",minod,"dta",2))=8 {
							s puvodnihodnota=$g(myarrtu("arr","tur",minod,"dta",12))
							s novahodnota=puvodnihodnota
							//stejna do vsech
							i (+zmenaid=0) {
								s novahodnota=spolecnahodnota
							}
							//podle tabulky
							i (+zmenaid=1) {
								//projdu tabulku a dohledam novou hodnotu
								s find=0 s cnt="" f {
									s cnt=$o(in("arr",1,cnt)) i (cnt="")!(find) q
									i $lg($g(in("arr",1,cnt)),1)=puvodnihodnota {
										s novahodnota=$lg($g(in("arr",1,cnt)),2)
										s find=1
									}
								}
							}
							i puvodnihodnota'=novahodnota {
								s myarrtu("arr","tur",minod,"dta",12)=novahodnota
								s out("stt",1)=1
							}
						}
					}
				}
			}
			//Průběh / Přejezd + Přistavení
			i dataid=304 {
				//vypocet podle algoritmu
				i (+zmenaid=2)&(algoritmusid=0) {
					// aktualizace prejezdu
					s err=$$actPRJTur^OBapiED(idfa,nmsp,hrl,.myarrtu,"","") i +err zt
					s out("stt",1)=1
				}
			}
		}
  	}
  	catch (ex) {
	  	s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
  	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyImport">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65622,52134.304912</TimeChanged>
<TimeCreated>65576,55074.373314</TimeCreated>

<Method name="NactiSoubory">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,translateTable:%String,glb:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// nacteni souboru go globalu
 	// ==========================================================
 	// translateTable = CP1250 / UTF8
 	// podle:
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// nactu soubory do:
 	// @glb@("arr",1000,cnt)=file
 	// @glb@("arr",1000,cnt,cntrow)=data
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		k @glb@("arr",1000)
	 	s cnt="" f {
		 	s cnt=$o(in("arr",1,cnt)) i cnt="" q
		 	s val=$g(in("arr",1,cnt))
		 	s fileCache=$lg(val,1) s file=$lg(val,2)
		 	i ##class(%File).Exists(fileCache) {
			 	s stream=##class(%FileCharacterStream).%New()
      			s stream.Filename=fileCache
      			d stream.TranslateTableSet(translateTable)
      			while 'stream.AtEnd {
	      			s data=stream.ReadLine()
	      			s @glb@("arr",1000,cnt,$i(@glb@("arr",1000,cnt)))=data
      			}
      			s @glb@("arr",1000,cnt)=file
   			}
   			else {
	   			//soubor neexistuje
   			}
	 	}
	}
	catch (ex) {
		s ret=('$$$OK)_"/"_$ze_"/"_$g(err)
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataMLSeznamTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ================================
 	// seznam turnusu ze souboru pro ML
 	// ================================
 	// zakladni udaje pro export
 	// in("dta",1)=delimiter ";"
 	// in("dta",2)=znak "," nahradni znak v textu za oddelovac
 	// in("dta",3)=delimiterItemArr "|" oddelovac vice hodnot      
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// out
 	// out("arr",1,cnt,"dta")=$lb(provoz,turnus,datumCasVar) ... pro zobrazeni v seznamu
 	// out("arr",1,cnt,"id")=idtur ... pro vyber turnusu
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		i $g(in("dta",1))="" s in("dta",1)=";"
		i $g(in("dta",2))="" s in("dta",2)="_"
		i $g(in("dta",3))="" s in("dta",3)="|"
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		//turnusy
 	  	s cnt="" f {
	 	  	s cnt=$o(@myglb@("arr",1000,cnt)) i cnt="" q
	 	  	s cntrow="" f {
		 	  	s cntrow=$o(@myglb@("arr",1000,cnt,cntrow)) i cntrow="" q
		 	  	s data=$g(@myglb@("arr",1000,cnt,cntrow))
		 	  	i $p(data,in("dta",1))=1 {
			 	  	s idprv=$p(data,in("dta",1),2)
			 	  	s idtur=$p(data,in("dta",1),3)
			 	  	s dat=$p(data,in("dta",1),4)
			 	  	s mycnt=$i(out("arr",1))
			 	  	s out("arr",1,mycnt,"dta")=$lb(idprv,idtur,dat)
			 	  	s out("arr",1,mycnt,"id")=idprv_"|"_idtur_"|"_dat
		 	  	}
	 	  	}
 	  	}
 		//
 		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataML">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// obecny import dat turnusu (MLINE)
 	// ==========================================================
 	// zakladni udaje pro export
 	// in("dta",1)=delimiter ";"
 	// in("dta",2)=znak "," nahradni znak v textu za oddelovac
 	// in("dta",3)=delimiterItemArr "|" oddelovac vice hodnot      
 	// in("dta",4)=provoz kam nahrat turnusy
 	// in("arr",1,cnt)=$lb(fileCache,file) soubory s daty
 	// in("arr",2,idtur)="" id turnusu pro import
 	// out
 	// out("msg",cnt)=zprava
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		i $g(in("dta",1))="" s in("dta",1)=";"
		i $g(in("dta",2))="" s in("dta",2)="_"
		i $g(in("dta",3))="" s in("dta",3)="|"
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		s myglbdta="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		//zapis do cache
		s del=in("dta",1)
		s fidx="" f {
			s fidx=$o(@myglb@("arr",1000,fidx)) i fidx="" q
			i $g(@myglb@("arr",1000,fidx))="mlturnusy.txt" {
				s cnt="" f {
					s cnt=$o(@myglb@("arr",1000,fidx,cnt)) i cnt="" q
					s val=$g(@myglb@("arr",1000,fidx,cnt))
					s didx=$p(val,del,1)
					s val=$p(val,del,2,$l(val,del))
					s @myglbdta@("arr",didx,"dta",$i(@myglbdta@("arr",didx,"dta")))=val
				}
			}	
		}
		//
		k arri,arro
		s arri("dta",1)=in("dta",1)
		s arri("dta",2)=in("dta",2)
		s arri("dta",3)=in("dta",3)
		s arri("dta",4)=in("dta",4)
 		s arri("glb")=myglbdta
 		//id turnusu pro import
 		m arri("arr",1)=in("arr",2)
		s arri("idos")=mlp_"~"_loginname_"~"_fullname
		//
 	  	s err=$$importTurEdisonNew^OBapiED(idfa,nmsp,.arri,.arro) i +err zt 
		//zprava
 	  	m out("msg")=arro("msg")
 		//
 		k @myglb
 		k @myglbdta
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataUnisSeznamTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==================================
 	// seznam turnusu ze souboru pro Unis
 	// ==================================
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// out
 	// out("arr",1,cnt,"dta")=$lb(provoz,turnus,datumCasVar) ... pro zobrazeni v seznamu
 	// out("arr",1,cnt,"id")=idtur ... pro vyber turnusu
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		s odd=";"
		//turnusy
 	  	s cnt="" f {
	 	  	s cnt=$o(@myglb@("arr",1000,cnt)) i cnt="" q
	 	  	s file=$g(@myglb@("arr",1000,cnt))
	 	  	i file="tur_1.txt" {
		 	  	s cntrow="" f {
			 	  	s cntrow=$o(@myglb@("arr",1000,cnt,cntrow)) i cntrow="" q
		 	  		s data=$g(@myglb@("arr",1000,cnt,cntrow))
			 	  	s idprv=$p(data,odd,1)
			 	  	s idtur1=$p(data,odd,2)
			 	  	s idtur2=$p(data,odd,3)
			 	  	s dat=$p(data,odd,4)
					s idtur=idtur1 i idtur2'="" s idtur=idtur_"."_idtur2
			 	  	s mycnt=$i(out("arr",1))
			 	  	s out("arr",1,mycnt,"dta")=$lb(idprv,idtur,dat)
			 	  	s out("arr",1,mycnt,"id")=idprv_"|"_idtur1_"|"_idtur2_"|"_dat
		 	  	}
	 	  	}
	 	}  	
 		//
 		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataUnis">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================================================
 	// import dat turnusu z Unis
 	// ==========================================================
 	// zakladni udaje pro export
 	// in("dta",1)=provoz kam nahrat turnusy
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// in("arr",2,idtur)="" id turnusu pro import
 	// out
 	// out("msg",cnt)=zprava
 	//
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		s odd=";"
		//data ze souboru do globalu ^CacheTempJB(wrk)
		s wrk=$$gWrkJB^OBapiED() k ^CacheTempJB(wrk)
		//provoz kam
		s idprvto=$g(in("dta",1))
		s cnt="" f {
	 	  	s cnt=$o(@myglb@("arr",1000,cnt)) i cnt="" q
	 	  	s file=$g(@myglb@("arr",1000,cnt))
		 	s cntrow="" f {
			 	s cntrow=$o(@myglb@("arr",1000,cnt,cntrow)) i cntrow="" q
		 	  	s data=$g(@myglb@("arr",1000,cnt,cntrow))
		 	  	//vymazani mezer z dat
		 	  	//====================
		 	  	i file="tur_1.txt" {
			 	  	s idprv=$p(data,odd,1)
			 	  	s idtur1=$p(data,odd,2)
			 	  	s idtur2=$p(data,odd,3)
			 	  	s dat=$p(data,odd,4)
			 	  	//turnus neni vybran
					i '$d(in("arr",2,(idprv_"|"_idtur1_"|"_idtur2_"|"_dat))) continue
					//
					s idtur=idtur1 i idtur2'="" s idtur=idtur_"."_idtur2
					s hrltur=$$dn^OBapiED(dat)
					s $p(data,odd,1)=idprvto
				    s ^CacheTempJB(wrk,1,idprvto,idtur,hrltur)=data
		 	  	}
		 	  	i file="tur_2.txt" {
			 	  	s idprv=$p(data,odd,1)
			 	  	s idtur1=$p(data,odd,2)
			 	  	s idtur2=$p(data,odd,3)
			 	  	s dat=$p(data,odd,4)
			 	  	//turnus neni vybran
					i '$d(in("arr",2,(idprv_"|"_idtur1_"|"_idtur2_"|"_dat))) continue
					//
					s idtur=idtur1 i idtur2'="" s idtur=idtur_"."_idtur2
					s hrltur=$$dn^OBapiED(dat)
					s $p(data,odd,1)=idprvto
				    s ^CacheTempJB(wrk,2,idprvto,idtur,hrltur,$i(^CacheTempJB(wrk,2,idprvto,idtur,hrltur)))=data
		 	  	}
		 	  	i file="tur_3.txt" {
			 	  	s idzst=$p(data,odd,1)
					s ^CacheTempJB(wrk,3,idzst)=data
		 	  	}
		 	  	i file="tur_4.txt" {
			 	  	s idzst=$p(data,odd,1)
					s ^CacheTempJB(wrk,4,idzst)=data
		 	  	}
		 	  	i file="tur_5.txt" {
			 	  	s idprv=$p(data,odd,1)
			 	  	s idtur1=$p(data,odd,2)
			 	  	s idtur2=$p(data,odd,3)
			 	  	s dat=$p(data,odd,4)
			 	  	s idpzn=+$p(data,";",5)
			 	  	//turnus neni vybran
					i '$d(in("arr",2,(idprv_"|"_idtur1_"|"_idtur2_"|"_dat))) continue
					//
					s idtur=idtur1 i idtur2'="" s idtur=idtur_"."_idtur2
					s hrltur=$$dn^OBapiED(dat)
					s $p(data,odd,1)=idprvto
					s ^CacheTempJB(wrk,5,idprvto,idtur,hrltur,idpzn,$i(^CacheTempJB(wrk,5,idprvto,idtur,hrltur,idpzn)))=data
		 	  	}
		 	  	i file="tur_6.txt" {
			 	  	s idprv=$p(data,odd,1)
			 	  	s idtur1=$p(data,odd,2)
			 	  	s idtur2=$p(data,odd,3)
			 	  	s dat=$p(data,odd,4)
			 	  	//turnus neni vybran
					i '$d(in("arr",2,(idprv_"|"_idtur1_"|"_idtur2_"|"_dat))) continue
					//
					s idtur=idtur1 i idtur2'="" s idtur=idtur_"."_idtur2
					s hrltur=$$dn^OBapiED(dat)
					s $p(data,odd,1)=idprvto
					s ^CacheTempJB(wrk,6,idprvto,idtur,hrltur,$i(^CacheTempJB(wrk,6,idprvto,idtur,hrltur)))=data
		 	  	}
		 	}
		}
		//zapis do cache
		k arri,arro s arri("idos")=mlp_"~"_loginname_"~"_fullname
 	  	s err=$$importTurEdison^OBapiED(idfa,nmsp,wrk,.arri,.arro) i +err zt 
		//zprava msg
		s idprv="" f  {
			s idprv=$o(arro("msg",idprv)) i idprv="" q
			s idtur="" f {
				s idtur=$o(arro("msg",idprv,idtur)) i idtur="" q
				s hrltur="" f {
					s hrltur=$o(arro("msg",idprv,idtur,hrltur)) i hrltur="" q
					s out("msg",$i(out("msg")))=idprv_"/"_idtur_"/"_$$nd^OBapiED(hrltur,0)_" "_$g(arro("msg",idprv,idtur,hrltur))
				}
			}
		}
		//zprava, nactene turnusy
		s idprv="" f  {
			s idprv=$o(arro("arr",1,idprv)) i idprv="" q
			s idtur="" f {
				s idtur=$o(arro("arr",1,idprv,idtur)) i idtur="" q
				s hrltur="" f {
					s hrltur=$o(arro("arr",1,idprv,idtur,hrltur)) i hrltur="" q
					s out("msg",$i(out("msg")))="načten turnus "_idprv_"/"_idtur_"/"_$$nd^OBapiED(hrltur,0)
				}
			}
		}
 	  	//
 	  	k ^CacheTempJB(wrk)
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataDataMikroUSVCSeznamTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ===========================================
 	// seznam turnusu ze souboru pro DataMikroUSVC
 	// ===========================================
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// out
 	// out("arr",1,cnt,"dta")=$lb(provoz,turnus,datumCasVar) ... pro zobrazeni v seznamu
 	// out("arr",1,cnt,"id")=idtur  ... pro vyber turnusu
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		s odd=";"
		//turnusy  	
		s cnt="" f {
	 	  	s cnt=$o(@myglb@("arr",1000,cnt)) i cnt="" q
	 	  	s cntrow="" f {
		 	  	s cntrow=$o(@myglb@("arr",1000,cnt,cntrow)) i cntrow="" q
		 	  	s data=$g(@myglb@("arr",1000,cnt,cntrow))
			 	s idtur=$p(data,odd,1) if (idtur="")||(idtur="-----END-----") continue
			 	s mycnt=$i(out("arr",1))
			 	s out("arr",1,mycnt,"dta")=$lb("",idtur,"")
			 	s out("arr",1,mycnt,"id")=idtur
	 	  	}
 	  	}
 		//
 		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataMikroUSVC">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================
 	// import dat turnusu z Mikra
 	// ==========================
 	// zakladni udaje pro export
 	// in("dta",1)=provoz kam nahrat turnusy
 	// in("dta",2)=hrl casove varianty pro turnusy
 	// in("arr",1,cnt)=$lb(fileCache,file)
 	// in("arr",2,idtur)="" id turnusu pro import
 	// out
 	// out("msg",cnt)=zprava
 	//
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		s idprv=$g(in("dta",1))
		s hrl=$g(in("dta",2))
		//seznam turnusu pro import
		k arrltur s idtur="" f {
			s idtur=$o(in("arr",2,idtur)) i idtur="" q
			s arrltur(idtur)=""
		}
		//nacteni souboru
		s isok=##class(ALVA.AUDO.API.TurnusyImport).NactiSoubory(.sys,.in,"UTF8",myglb) i 'isok zt
		s wrk=$$gWrkJB^OBapiED() k ^CacheTepmJB(wrk)
		s odd=";"
		s cnt="" f {
	 	  	s cnt=$o(@myglb@("arr",1000,cnt)) i cnt="" q
	 	  	s cntrow="" f {
		 	  	s cntrow=$o(@myglb@("arr",1000,cnt,cntrow)) i cntrow="" q
		 	  	s data=$g(@myglb@("arr",1000,cnt,cntrow))
			 	s idtur=$p(data,odd,1)
			 	//turnus neni
			 	i idtur="" continue
			 	//turnus neni vybrany
			 	i '$d(arrltur(idtur)) continue
			 	s li=$p(data,odd,4)
			 	s sp=$p(data,odd,5)
			 	s ^CacheTempJB(wrk,idprv,idtur,hrl,$i(^CacheTempJB(wrk,idprv,idtur,hrl)))=li_"|"_sp
	 	  	}
 	  	}
 	  	k arri,arro s arri("fullname")=fullname
 	    s err=$$importTurME^OBapiED(idfa,nmsp,wrk,.arri,.arro) i +err
		//zprava
		s idprv="" f {
			s idprv=$o(arro("msg",idprv)) i idprv="" q
			s idtur="" f {
				s idtur=$o(arro("msg",idprv,idtur)) i idtur="" q
				s hrltu="" f {
					 s hrltu=$o(arro("msg",idprv,idtur,hrltu)) i hrltu="" q
					 s cnt="" f {
						 s cnt=$o(arro("msg",idprv,idtur,hrltu,cnt)) i cnt="" q
						 s txt=$g(arro("msg",idprv,idtur,hrltu,cnt))
						 i txt'="" {
							 s out("msg",$i(out("msg")))=idprv_"/"_idtur_"/"_$$nd^OBapiED(hrltu,0)_" "_txt
						 }
					 }
				}
			}
		}
 	  	//
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataBCOPTIMSeznamTur">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ====================================
 	// seznam turnusu z globalu pro BCOPTIM
 	// ====================================
	// in("dta",1)=glb ... global s daty
 	// out
 	// out("arr",1,cnt,"dta")=$lb(provoz,turnus,datumCasVar) ... pro zobrazeni v seznamu
 	// out("arr",1,cnt,"id")=idtur  ... pro vyber turnusu
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		s glb=$g(in("dta",1)) i glb="" s err="glb=" zt
		//seznam turnusu
 		s ind="" f {
	 		s ind=$o(@glb@(1,ind)) i ind="" q
	 		s val=$g(@glb@(1,ind))
	 		s idprv=$p(val,";",1) s idtu=$p(val,";",2) s idtuvar=$p(val,";",3) s dat=$p(val,";",4)
	 		s itutx=idtu i idtuvar'="" s itutx=itutx_"."_idtuvar
	 		s mycnt=$i(out("arr",1))
			s out("arr",1,mycnt,"dta")=$lb(idprv,itutx,dat)
			s out("arr",1,mycnt,"id")=(idtu_"|"_idtuvar)
 		}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataBCOPTIM">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ===========================
 	// import dat turnusu z OPTIMU
 	// ===========================
 	// zakladni udaje pro export
 	// in("dta",1)=provoz kam nahrat turnusy
 	// in("dta",2)=hrl casove varianty pro turnusy
 	// in("dta",3)=importovat zastavky 0/1
 	// in("dta",4)=global s daty 
 	// in("arr",1,idtur)="" id turnusu pro import (idtu_"|"_idtuvar)
 	// out
 	// out("msg",cnt)=zprava
 	//
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		
		//pracovni global
		s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
		//vstupni promene
		s idprv=$g(in("dta",1)) i idprv="" s err="idprv=" zt
		s hrl=$g(in("dta",2)) i hrl="" s err="hrl=" zt
		s impzst=$g(in("dta",3))
		s glb=$g(in("dta",4)) i glb="" s err="glb=" zt
		//seznam turnusu pro import
		k arrltur s idtur="" f {
			s idtur=$o(in("arr",1,idtur)) i idtur="" q
			s arrltur(idtur)=""
		}
		//nacteni dat
		k zp  s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt "merr"
		s wrk=$$gWrkJB^OBapiED()
 	  	//prepis do pomocneho globalu -1-
		s ind="" f {
			s ind=$o(@glb@(1,ind)) i ind=""  q
	 		s val=$g(@glb@(1,ind))
	 		i '$d(arrltu(($p(val,";",2)_"|"_$p(val,";",3)))) continue
	 		s tu=$p(val,";",2) i $p(val,";",3)'="" s tu=tu_"."_$p(val,";",3)
	 		s ^CacheTempJB(wrk,1,idprv,tu,hrl)=val
		}
		//prepis do pomocneho globalu -2-
		s ind="" f {
			s ind=$o(@glb@(2,ind)) i ind=""  q  // out("msg",prv,tu,hrl,cnt)=zprava
	 		s val=$g(@glb@(2,ind))
	 		i '$d(arrltu($p(val,";",2)_"|"_$p(val,";",3))) continue
	 		s tu=$p(val,";",2) i $p(val,";",3)'="" s tu=tu_"."_$p(val,";",3)
	 		s ^CacheTempJB(wrk,2,idprv,tu,hrl,ind)=val
		}
		//prepis do pomocneho globalu -4-
		i impzst {
			// vyhledani zastavek v turnusech
			k arridzst s ind="" f {
				s ind=$o(@glb@(2,ind)) i ind=""  q
	 			s val=$g(@glb@(2,ind))
	 			i '$d(arrltu($p(val,";",2)_"|"_$p(val,";",3))) continue
	 			s idcin=$p(val,";",7)
	 			i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) {
		 			s zstod=$p(val,";",17)
		 			i zstod'="" s arridzst(zstod)=""
 					s zstdo=$p(val,";",18)
 					i zstdo'="" s arridzst(zstdo)=""
	 				}
				}
			s ind="" f {
			s ind=$o(@glb@(4,ind)) i ind=""  q
	 		s val=$g(@glb@(4,ind))
	 		s idzst=$p(val,";",1)
	 		i idzst="" continue
	 		i '$d(arridzst(idzst)) continue
	 		//s val=$p(val,";",2,5)
	 		i $tr(val,";","")="" continue
	 		s ^CacheTempJB(wrk,4,idzst)=val
			}	
		}
		k arri k arro s arri("idos")=mlp_"~"_loginname_"~"_fullname
  		s err=$$importTurEdison^OBapiED(idfa,db,wrk,.arri,.arro) i +err zt "merr"
  		// zapis do zpravy
 	  	s idx="" f {
	 		s idx=$o(arrltu(idx)) i idx="" q
	 		s tu=$p(idx,"|",1) i $p(idx,"|",2)'="" s tu=tu_"."_$p(idx,"|",2)
	 		s out("msg",$i(out("msg")))="načten turnus "_idprv_"/"_tu_"/"_$$nd^OBapiED(hrl,0)
 	  	}
 	  	//
 	  	k ^CacheTempJB(wrk)
 	  	k @glb
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="DataObehyMHD">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ========================
 	// import dat turnusu z MHD
 	// ========================
 	// zakladni udaje pro export
 	// in("dta",1)=provoz kam nahrat turnusy
 	// in("dta",2)=hrl od
 	// in("dta",3)=hrl do
 	// in("dta",4)=nazev turnusu (jak  vytvorit)  1/Obeh.var - 2/Poradi/Linka.var
 	// in("arr",1,ObehID)="" id turnusu pro import (idtu_"|"_idtuvar)
 	// out
 	// out("msg",cnt)=zprava
 	//
 	// !!! pozor, pripadna oprava i v ALVA.ADTURNUSY.ImportMHD !!!
 	//
	s ret=$$$OK s err="" k out
	$$$FROMSERVER
	try {
		s usr=mlp_"~"_loginname_"~"_fullname
		//vstupni promene
		s idprv=$g(in("dta",1)) i idprv="" s err="idprv=" zt
		s hrlod=$g(in("dta",2)) i hrlod="" s err="hrlod=" zt
		s hrldo=$g(in("dta",3)) i 'hrldo s hrldo=""
		s naztu=$g(in("dta",4))
		k arrObehID m arrObehID=in("arr",1)
	 	//
	 	s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i err ztrap	
	 	//===========
	 	s txVar="RON"
	 	//===========
	 	//global
	 	s glb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @glb
	 	//import obehu z MHD
	 	k arri,arro
	 	s arri("dta",1)=glb
	 	s arri("dta",2)=hrlod
	 	m arri("arr",1)=arrObehID
	 	s isok=##class(ALVA.MHD.MLAPI).GetObehyEDAD(.sys,.arri,.arro) i 'isok s err=isok ztrap
	 	//zpracovani obehu
	 	//@glb@("arr",1,ObehID)=$lb(CisloObehu,Linka,Poradi,TydenniPlatnost,DlouhodobaLpatnost)
	 	//@glb@("arr",1,ObehID,"arr",1,cnt)=$lb(B1ZastavkaID,B1Cas,B2ZastavkaID,B2Cas,SpojID,DruhUseckyID,B2Stridani,Vzdalenost)
	 	//@glb@("arr",1,ObehID,"arr",1,cnt,"arr",1,cnt)=$lb(BID,ZastavkaID,Cas,Vzdalenost) ... rozpis pro spoje
	 	//@glb@("arr",2,ZastavkaID)=$lb(Oznacnik,Nazev,NazevObceCIS,CastObceCIS,BlizsiMistoCIS,BlizkaObecCIS,CisloCIS,KategorieZastavekID,CisloEDAD,GPSLatitude,GPSLongitude)
	 	//@glb@("arr",3,SpojID)=$lb(CisloLinkyDleLicence,CisloVerejne,CisloSpoje,TypLinkyCISID,hrlod,hrldo,TydenniPlatnost,OmezeniJede,OmezeniJedeTake,OmezeniJedeJen,OmezeniNejede,PrepravniSystem)
	 	//
	 	//slouceni zastavek
	 	//
	 	s wrk=$$gWrkALVAAD^OBapiED() s wrkzstjrglb="^||wrk.ALVA.AD("_wrk_")" k @wrkzstjrglb	//zastavky pro JR
	 	s wrk=$$gWrkALVAAD^OBapiED() s wrkzstadglb="^||wrk.ALVA.AD("_wrk_")" k @wrkzstadglb	//zastavky pro AD (lokalni)
	 	s ZastavkaID="" f {
		 	s ZastavkaID=$o(@glb@("arr",2,ZastavkaID)) i ZastavkaID="" q
		 	s val=$g(@glb@("arr",2,ZastavkaID))
		 	s Oznacnik=$lg(val,1)
		 	s Nazev=$lg(val,2)
		 	s NazevObceCIS=$lg(val,3)
		 	s CastObceCIS=$lg(val,4)
		 	s BlizsiMistoCIS=$lg(val,5)
		 	s BlizkaObecCIS=$lg(val,6)
		 	s CisloCIS=$lg(val,7)
		 	s KategorieZastavekID=$lg(val,8)
		 	s CisloEDAD=$lg(val,9)
		 	s GPSLatitude=$lg(val,10)
			s GPSLongitude=$lg(val,11)
		 	//zastavka je zavedena
		 	i CisloEDAD'="" q
		 	//zastavka
		 	i KategorieZastavekID=1001 {
			 	s @wrkzstjrglb@("arr",1,ZastavkaID,"dta",1)=$lb(0,NazevObceCIS,CastObceCIS,BlizsiMistoCIS,BlizsiMistoCIS,CisloCIS,GPSLatitude,GPSLongitude,Oznacnik,Nazev)
		 	}	
		 	//lokalni zastavka
		 	i KategorieZastavekID'=1001 {
				s @wrkzstadglb@("arr",1,ZastavkaID,"dta",1)=$lb(0,NazevObceCIS,CastObceCIS,BlizsiMistoCIS,BlizsiMistoCIS,CisloCIS,GPSLatitude,GPSLongitude,Oznacnik,Nazev) 
		 	}
	 	}
	 	//slouceni zastavek s jr
	 	i $d(@wrkzstjrglb@("arr",1)) {
		 	k arri s arri("par",1)=1
		 	s err=##class(ALVA.JRMAIN.MLAPI).impZstUni(idfa,nmsp,wrkzstjrglb,.arri,"",usr) i err zt
		 	s ZastavkaID="" f {
			 	s ZastavkaID=$o(@wrkzstjrglb@("arr",101,ZastavkaID)) i ZastavkaID="" q
			 	s val=$g(@wrkzstjrglb@("arr",101,ZastavkaID))
			 	s CisloEDAD=$lg(val,1)
			 	s typsparovani=$lg(val,2)
			 	s val=$g(@glb@("arr",2,ZastavkaID))
			 	s $li(val,9)=CisloEDAD
			 	s @glb@("arr",2,ZastavkaID)=val
			 	//
			 	i typsparovani=1 {
				 	s val=$g(@glb@("arr",2,ZastavkaID))
		 		 	s Nazev=$lg(val,2)
		 		 	s NazevObceCIS=$lg(val,3)
		 		 	s CastObceCIS=$lg(val,4)
		 	     	s BlizsiMistoCIS=$lg(val,5)
		 		 	s BlizkaObecCIS=$lg(val,6)
				 	s out("msg",$i(out("msg")))="zavedena zastávka "_CisloEDAD_" - "_Nazev_" ("_NazevObceCIS_","_CastObceCIS_","_BlizsiMistoCIS_","_BlizkaObecCIS_")"
			 	}
		 	}
	 	}
	 	//slouceni zastavek s ad
	 	i $d(@wrkzstadglb@("arr",1)) {
		 	k arri s arri("par",1)=1
		 	s err=##class(ALVA.AD.MLAPI).impLokZstUni(idfa,nmsp,wrkzstadglb,.arri,"") i err zt
		 	s ZastavkaID="" f {
			 	s ZastavkaID=$o(@wrkzstadglb@("arr",101,ZastavkaID)) i ZastavkaID="" q
			 	s val=$g(@wrkzstadglb@("arr",101,ZastavkaID))
			 	s CisloEDAD=$lg(val,1)
			 	s typsparovani=$lg(val,2)
			 	s val=$g(@glb@("arr",2,ZastavkaID))
			 	s $li(val,9)=CisloEDAD_"/L"
			 	s @glb@("arr",2,ZastavkaID)=val
			 	//
			 	i typsparovani=1 {
				 	s val=$g(@glb@("arr",2,ZastavkaID))
		 		 	s Nazev=$lg(val,2)
		 		 	s NazevObceCIS=$lg(val,3)
		 		 	s CastObceCIS=$lg(val,4)
		 	     	s BlizsiMistoCIS=$lg(val,5)
		 		 	s BlizkaObecCIS=$lg(val,6)
				 	s out("msg",$i(out("msg")))="zavedena lokální zastávka "_CisloEDAD_" - "_Nazev_" ("_NazevObceCIS_","_CastObceCIS_","_BlizsiMistoCIS_","_BlizkaObecCIS_")"
			 	}
		 	}
	 	}
	 	k @wrkzstjrglb
	 	k @wrkzstadglb
	 	//
	 	//zavedeni turnusu a spoju
	 	//
	 	s ObehID="" f {
		 	s ObehID=$o(@glb@("arr",1,ObehID)) i ObehID="" q
		 	s val=$g(@glb@("arr",1,ObehID))
		 	s CisloObehu=$lg(val,1) s Linka=$lg(val,2) s Poradi=$lg(val,3) s TydenniPlatnost=$lg(val,4) s DlouhodobaPlatnost=$lg(val,5)
		 	k arrtu s cnttu=0 k myarrSpojID
		 	//========================
		 	//sestaveni prubeh turnusu
		 	//========================
		 	s cnt="" f {
			 	s cnt=$o(@glb@("arr",1,ObehID,"arr",1,cnt)) i cnt="" q
			 	s val=$g(@glb@("arr",1,ObehID,"arr",1,cnt))
			 	s B1ZastavkaID=$lg(val,1)
			 	s B1Cas=($lg(val,2))\1
			 	s B2ZastavkaID=$lg(val,3)
			 	s B2Cas=($lg(val,4))\1
			 	s SpojID=$lg(val,5)
				s DruhUseckyID=$lg(val,6)
			 	s B2Stridani=$lg(val,7)
			 	s Vzdalenost=$lg(val,8)
			 	//cinost pro AD
			 	i SpojID {
				 	s mycin=3
			 	}
	 		 	else {
				 	i DruhUseckyID=1001 s mycin=7		//obsazena jizda 
				 	i DruhUseckyID=1002 s mycin=6 		//manipulacni jizda
				 	i DruhUseckyID=1003 s mycin=15 		//pauza
				 	i DruhUseckyID=1004 s mycin=9 		//bp
					i DruhUseckyID=1005 s mycin=14 		//pristavne a odstavne prace	
				 	i DruhUseckyID=1006 s mycin=16 		//rozdelena smena	
				}
			 	//================
			 	//pauzu neprevadim
			 	//================
	 		 	i DruhUseckyID=1003 continue
	 		 	//====================
			 	//zavedeni spoje do db
			 	//====================
			 	i SpojID {
				 	s myarrSpojID(SpojID)=$g(myarrSpojID(SpojID))+1
				 	s val=$g(@glb@("arr",3,SpojID))
				 	s CisloLinkyDleLicence=$lg(val,1)
				 	s CisloVerejne=$lg(val,2)
				 	s CisloSpoje=$lg(val,3)
				 	//posun cisla spoje pri stridani
				 	s myCisloSpoje=CisloSpoje
				 	i myarrSpojID(SpojID)>1 {
					 	s myCisloSpoje=myCisloSpoje+500+(100*(myarrSpojID(SpojID)-2))
				 	}
				 	s TypLinkyCISID=$lg(val,4)
				 	s hrlspod=$lg(val,5)
				 	s hrlspdo=$lg(val,6)
				 	s TydenniPlatnost=$lg(val,7)
				 	s OmezeniJede=$lg(val,8)
				 	s OmezeniJedeTake=$lg(val,9)
				 	s OmezeniJedeJen=$lg(val,10)
				 	s OmezeniNejede=$lg(val,11)
				 	s PrepravniSystem=$lg(val,12)
				 	k arrsp
				 	s arrsp("dta",1)=B1Cas\1										//odjezd
				 	s arrsp("dta",2)=B2Cas\1										//prijezd
				 	s arrsp("dta",3)=(B2Cas-B1Cas)\1								//doba jizdy
				 	i TypLinkyCISID="A" s arrsp("dta",4)=3							//Městská
				 	i TypLinkyCISID="B" s arrsp("dta",4)=4							//Městská s obsluhou příměstských oblastí
				 	i TypLinkyCISID="N" s arrsp("dta",4)=5							//Mezinárodní – s vyloučenou vnitrostátní dopravou
				 	i TypLinkyCISID="P" s arrsp("dta",4)=5							//Mezinárodní – s povolenou vnitrostátní dopravou
				 	i TypLinkyCISID="V" s arrsp("dta",4)=1							//Vnitrostátní – vnitrokrajská
				 	i TypLinkyCISID="Z" s arrsp("dta",4)=1							//Vnitrostátní – mezikrajská
				 	i TypLinkyCISID="D" s arrsp("dta",4)=2							//Vnitrostátní – dálková
				 	s arrsp("dta",5)=(Vzdalenost/1000)								//km
	 			 	s arrsp("dta",6)=$lg($g(@glb@("arr",2,B1ZastavkaID)),9)			//zastavka od
	 			 	s arrsp("dta",7)=$lg($g(@glb@("arr",2,B2ZastavkaID)),9)			//zastavka do
	 			 	s arrsp("dta",8)=$$pldHex^OBapiED(1)_$p($$pltHex^OBapiED(TydenniPlatnost)_$$pldHex^OBapiED(1),"~")										    //platnost (kodovana)
	 			 	s arrsp("dta",11)=+$h											//aktualizace
	 			 	s arrsp("dta",12)=""											//prs
	 			 	i $l(PrepravniSystem,"~")=1 s arrsp("dta",12)=$p(PrepravniSystem,"|",1)
	 			 	s arrsp("dta",14)=$j((Vzdalenost/1000),0,1)						//kmt
	 			 	s arrsp("dta",15)=(Vzdalenost/1000)								//kmp
	 			 	s arrsp("dta",16)=TydenniPlatnost								//tydenni platnost
	 			 	s arrsp("dta",17)=1												//dlouhodoba platnost
	 			 	s arrsp("dta",18)=idprv											//provozovna, kam spoj patri
	 			 	s arrsp("dta",20)=(B2Cas\1440)+1								//pocet dnu spoje (pro prejezdy pres pulnoc)
	 			 	s arrsp("dta",21)=hrlspdo										//varianta spoje do
	 			 	s arrsp("dta",22)=CisloVerejne									//cislo linky v IDS
	 			 	i myCisloSpoje'=CisloSpoje {
		 			 	s arrsp("dta",24)=CisloSpoje							 	//orig.cislo spoje pro strojky (pro rozdelene spoje a export do strojku) 
	 			 	} 
	 			 	s arrsp("dta",27)=""											//bezbarierove pristupne vozidlo 0/1 (0 nebo "" ne / 1 ano)
	 			 	s arrsp("dta",28)=""											//castecne bezbarierove pristupne vozidlo 0/1 (0 nebo "" ne / 1 ano)
	 			 	s arrsp("dta",29)=""											//nastupiste v zastavce od												
	 			 	s arrsp("dta",28)=""											//nastupiste v zastavce do
	 			 	i $l(PrepravniSystem,"~")>1 {
		 			 	f ind=1:1:$l(PrepravniSystem,"~") {
			 			 	s tmp=$p(PrepravniSystem,"~",ind)
			 			 	s arrsp("arr","prs",$p(tmp,"|",1))=$p(tmp,"|",2)
		 			 	}
	 			 	}
				 	i OmezeniJedeJen'="" s arrsp("arr","omz",11)="t@"_..cnvHrlOmDat(OmezeniJedeJen) 
				 	i OmezeniJedeTake'="" s arrsp("arr","omz",12)="h@"_..cnvHrlOmDat(OmezeniJedeTake) 
				 	i OmezeniJede'="" s arrsp("arr","omz",13)="L@"_..cnvHrlOmDat(OmezeniJede) 
				 	i OmezeniNejede'="" s arrsp("arr","omz",22)="k@"_..cnvHrlOmDat(OmezeniNejede)
	 			 	//trasa spoje
	 			 	s cntsp="" f {
		 			 	s cntsp=$o(@glb@("arr",1,ObehID,"arr",1,cnt,"arr",1,cntsp)) i cntsp="" q
		 			 	s val=$g(@glb@("arr",1,ObehID,"arr",1,cnt,"arr",1,cntsp))
		 			 	s BID=$lg(val,1)
		 			 	s ZastavkaID=$lg(val,2)
		 			 	s CisloEDAD=$lg($g(@glb@("arr",2,ZastavkaID)),9)
		 			 	s Cas=$lg(val,3)
		 			 	s Cas=Cas-B1Cas
		 			 	s Vzdalenost=$lg(val,4)
		 			 	s val=BID_":"_CisloEDAD_":"_$j(Cas,0,0)_":"_0_":"_$j(Vzdalenost/1000,0,0)_":"_$j(Vzdalenost/1000,0,2)_":"
		 			 	s arrsp("arr","trs",$i(arrsp("arr","trs")))=val
	 			 	}
	 			 	//@glb@("arr",1,ObehID,"arr",1,cnt,"arr",1,cnt)=$lb(ZastavkaID,Cas,Vzdalenost) ... rozpis pro spoje
	 			 	// out("arr","trs",cnt)=tc:idzast:mm:mmcek:kmtar:kmpre:attr
	 			 	//		tc ..... tarifní cislo
	 			 	//      idzast.. id zastavky
	 			 	//      mm ..... mm od pocatku spoje, presny cas= odjezd + mm, nebo | nebo <
	 			 	//		mmcek .. mm cekani v zastavce
	 			 	//      kmtar .. tarifni km
	 			 	//      kmpre .. presne km
	 			 	//      attr ... atribut N,V,x
	 			 	s err=$$sSp^OBapiED(idfa,nmsp,CisloLinkyDleLicence,myCisloSpoje,hrlspod,.arrsp,"") i err ztrap
	 			 	s out("msg",$i(out("msg")))="převeden spoj "_CisloLinkyDleLicence_"/"_myCisloSpoje_" od: "_$$nd^OBapiED(hrlspod,0)
			 	}
	 	     	// 
	 		 	s arrtu("arr","tur",B1Cas,"dta",1)=B2Cas						//cas do
			 	s arrtu("arr","tur",B1Cas,"dta",2)=mycin						//cinnot
			 	s arrtu("arr","tur",B1Cas,"dta",3)=(Vzdalenost/1000)			//km
			 	s arrtu("arr","tur",B1Cas,"dta",4)=(B2Cas-B1Cas)				//doba
			 	i (mycin=3) {
				 	s arrtu("arr","tur",B1Cas,"dta",5)=CisloLinkyDleLicence		//linka
			 	 	s arrtu("arr","tur",B1Cas,"dta",6)=myCisloSpoje				//spoj
				 	s arrtu("arr","tur",B1Cas,"dta",7)="*"						//man.pred
			 	 	s arrtu("arr","tur",B1Cas,"dta",8)="*"				 		//man.po
			 	}
	 		 	i (mycin=7)!(mycin=6) {
		 		 	s val=$g(@glb@("arr",2,B1ZastavkaID)) s CisloEDAD=$lg(val,9)
				 	s arrtu("arr","tur",B1Cas,"dta",9)=CisloEDAD				//zast.od
				 	s val=$g(@glb@("arr",2,B2ZastavkaID)) s CisloEDAD=$lg(val,9)
			 	 	s arrtu("arr","tur",B1Cas,"dta",10)=CisloEDAD				//zast.do
	 		 	}
	 		 	// stridani, zapis turnusu a vynulovani pole
	 		 	i B2Stridani {
		 		 	s cnttu=cnttu+1
				 	s idtu=CisloObehu_"."_$e(txVar,cnttu)
				 	i naztu=2 s idtu=Poradi_"/"_Linka_"."_$e(txVar,cnttu)
				 	s arrtu("dta",2)=$h															//horlog zapisu
				 	s arrtu("dta",3)=0															//posila
				 	s arrtu("dta",4)=""															//pocet dnu
	 			 	s mm=$o(arrtu("arr","tur",""))
	 			 	s arrtu("dta",5)=$$mh^OBapiED(mm#1440)										//začátek hodin hh.mm
	 			 	s mm=$o(arrtu("arr","tur",""),-1)
	 			 	i mm'="" s mm=$g(arrtu("arr","tur",mm,"dta",1))
	 			 	s arrtu("dta",4)=((mm\1440)+1)												//pocet dnu
	 			 	s arrtu("dta",6)=$$mh^OBapiED(mm#1440)										//konec hodin hh.mm
	 			 	s arrtu("dta",7)=TydenniPlatnost_"~"_DlouhodobaPlatnost						//platnost tydenni~dlouhodoba
	 			 	s arrtu("dta",11)=hrlod														//horlog casove varianty
	 			 	s arrtu("dta",16)=100														//koeficient mzdy
	 			 	s arrtu("dta",33)=hrldo														//horlog casova varianta do, ukonceni platnosti turnusu
	 			 	//prepocet turnusu
	 			 	s err=$$calTur^OBapiED(idfa,nmsp,zp,idtu,hrlod,.arrtu,"","") i err ztrap
	 			 	//zapis turnusu
	 			 	s err=$$sTur^OBapiED(idfa,nmsp,zp,idtu,hrlod,.arrtu,"") i err ztrap
				 	k arrtu
				 	s out("msg",$i(out("msg")))="vytvořen turnus "_idtu_" od: "_$$nd^OBapiED(hrlod,0)
	 		 	}
		 	}
		 	i $o(arrtu("arr","tur",""))'="" {
			 	s cnttu=cnttu+1
			 	s idtu=CisloObehu_"."_$e(txVar,cnttu)
			 	i naztu=2 s idtu=Poradi_"/"_Linka_"."_$e(txVar,cnttu)
			 	s arrtu("dta",2)=$h															//horlog zapisu
			 	s arrtu("dta",3)=0															//posila
			 	s arrtu("dta",4)=""															//pocet dnu
	 		 	s mm=$o(arrtu("arr","tur",""))
	 		 	s arrtu("dta",5)=$$mh^OBapiED(mm#1440)										//začátek hodin hh.mm
	 		 	s mm=$o(arrtu("arr","tur",""),-1)
	 		 	i mm'="" s mm=$g(arrtu("arr","tur",mm,"dta",1))
	 		 	s arrtu("dta",4)=((mm\1440)+1)												//pocet dnu
	 		 	s arrtu("dta",6)=$$mh^OBapiED(mm#1440)										//konec hodin hh.mm
	 		 	s arrtu("dta",7)=(TydenniPlatnost_"~"_DlouhodobaPlatnost)					//platnost tydenni~dlouhodoba
	 		 	s arrtu("dta",11)=hrlod														//horlog casove varianty
	 		 	s arrtu("dta",16)=100														//koeficient mzdy
	 		 	s arrtu("dta",33)=hrldo														//horlog casova varianta do, ukonceni platnosti turnusu
	 		 	//prepocet turnusu
	 		 	s err=$$calTur^OBapiED(idfa,nmsp,zp,idtu,hrlod,.arrtu,"","") i err ztrap
	 		 	//zapis turnusu
	 		 	s err=$$sTur^OBapiED(idfa,nmsp,zp,idtu,hrlod,.arrtu,"") i err ztrap
			 	k arrtu
			 	s out("msg",$i(out("msg")))="vytvořen turnus "_idtu_" od: "_$$nd^OBapiED(hrlod,0)
		 	}
		 	s out("msg",$i(out("msg")))="import dokončen"
	 	}
		k @glb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_"/"_$g(isok)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="cnvHrlOmDat">
<ClassMethod>1</ClassMethod>
<FormalSpec>om:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s val=""
	f cnt=1:1:$l(om,"~") {
		s myhrlod=$p($p(om,"~",cnt),"|",1)
		s myhrldo=$p($p(om,"~",cnt),"|",2)
		i myhrldo=myhrlod s myhrldo=""
		s tmp=""
		i myhrlod s tmp=$$nd^OBapiED(myhrlod,0)
		i myhrldo s tmp=tmp_":"_$$nd^OBapiED(myhrldo,0)
		i val'="" s val=val_"#"
		s val=val_tmp
	}
 q val
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.TurnusyNastroje">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65541,43979.036813</TimeChanged>
<TimeCreated>65540,31781.178625</TimeCreated>

<Method name="SimulaceTurnusuNaMape">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//VSTUP:
	// in("den")=horlog dne simulace
	// in("id")=$lb(id,...)
	// in("barva")=0 jednobarevne / 1 barevne
	// in("glb")=global s vystupnimi daty, pokud neni, program si ho sam vytvori, vraci v out("glb")
	//OUT:
	// out("glb")
	// @out("glb")@("dta",cnt)=... data pro okno na zobrazeni prubehu  
    s ret=$$$OK
    s err=""
    $$$FROMSERVER
    try {  
        // vstup
        k hrlsim,coltur,arrltur,glb
        s hrlsim=$g(in("den"))
        s coltur=$g(in("barva"))
        s myglb=$g(in("glb"))
        i myglb="" {
	        s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")"
	        k @myglb
        }
        s out("glb")=myglb
        //turnusy
        f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s idprv=$p(id,"|",1) s tu=$p(id,"|",2)
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			s arrltur(zp,tu)=""
        }
        //pracovni global pro statistiku
        s glbstat="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @glbstat
        //pracovni global pro sestaveni vystupnich dat
        s glbdata="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @glbdata
        //nastaveni programu
        k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
        //statistika turnusu
 		s zp="" f {
	 		s zp=$o(arrltur(zp)) i zp="" q
	 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
	 		// okres pro prazdniny
		    s blo=$g(arrset("arr",5,1,"prv",idprv)) i blo="" s blo=$g(arrset("arr",5,1))
		    //data pro statistiku
		    k @glbstat
	 		s @glbstat@("dta",1)=hrlsim
	 		s @glbstat@("dta",2)=hrlsim
	 		s @glbstat@("dta",3)=blo
	 		s tu="" f {
		 		s tu=$o(arrltur(zp,tu)) i tu="" q
		 		s @glbstat@("arr",1,tu)=""
	 		}
	 		//statistika turnusu
 			k arri s arri("glb")=glbstat s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,"") i +err zt
  			//prehled turnusu
 			s tu="" f {
				s tu=$o(@glbstat@("arr",1,tu)) i tu="" q
				s hrl=$o(@glbstat@("arr",1,tu,""))
				i hrl'="" {
					//turnus v hrlsim nejede
					i '$d(@glbstat@("arr",1,tu,hrl,"arr",2,hrlsim)) continue
					//barva turnusu
					s @glbdata@(1,zp,tu)=$lb($i(@glbdata@(1)))
					//data turnusu
 					k arrtur
 					s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) i +err zt
 					s midzst=""
 					//seznam spoju na turnusu 
 					k arrtusp
 					s mm="" f {
	 					s mm=$o(arrtur("arr","tur",mm)) i mm="" q
	 					i $g(arrtur("arr","tur",mm,"dta",2))=3 {
		 					s arrtusp(mm)=""
	 					}
	 				}
 					s mm="" f {
	 					s mm=$o(arrtur("arr","tur",mm)) i mm="" q
	 					//poznamka ne
	 					i $g(arrtur("arr","tur",mm,"dta",2))=8 continue
	 					//linka a spoj - jede
	 					i $g(arrtur("arr","tur",mm,"dta",2))=3 {
		 					s li=$g(arrtur("arr","tur",mm,"dta",5))
		 					s sp=$g(arrtur("arr","tur",mm,"dta",6))
		 					//spoj z AD
		 					k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrlsim,"",.arrsp) i +err zt
		 					s mmodj=$g(arrsp("dta",1))
		 					//posledni bod
		 					s lastcnt=$o(arrsp("arr","trs",""),-1)
		 					s cnt="" f {
			 					s val="" s cnt=$o(arrsp("arr","trs",cnt),1,val) i cnt="" q
			 					s tc=$p(val,":",1)
			 					s idzst=$p(val,":",2)
			 					s mmsp=$p(val,":",3)
			 					i mmsp="<" continue
			 					i mmsp="|" continue
			 					i '$d(@glbdata@(2,idzst)) {
				 					k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst) i +err zt
 									s nzs=$g(arrzst("dta",1))
	 								s blo=$g(arrzst("dta",2))
									s gpsN=$g(arrzst("dta",8))
 									s gpsE=$g(arrzst("dta",9))									
 									s @glbdata@(2,idzst)=$lb(nzs,blo,gpsN,gpsE)
 									k arrzst
			 					}
			 					//body
			 					s @glbdata@(3,$$wrapHrlSec^OBapiED(hrlsim,((mmodj+mmsp)*60)))=""
			 					//ikona bodu
			 					s idpoint=7						//zelene auto - jede
			 					//posledni bod spoje
			 					i cnt=lastcnt {
				 					//nasleduje spoj
				 					i $o(arrtusp(mm))'="" {
					 					s idpoint=3				//modre auto, ceka na spoj
				 					}
				 					else{
					 					s idpoint=2				//nenasleduje spoj, bile auto
				 					}
				 					
			 					}
			 					s @glbdata@(4,zp,tu,$$wrapHrlSec^OBapiED(hrlsim,((mmodj+mmsp)*60)))=$lb(idzst,idpoint,li,sp)
			 					//spojnice
			 					i midzst'="" {
				 					i '$d(@glbdata@(5,idzst,midzst,zp,tu)) {
				 						s @glbdata@(5,midzst,idzst,zp,tu)=""
				 					}
			 					}
			 					s midzst=idzst
		 					}
	 					}
	 					//linka nejede
	 					else {
		 					i midzst'="" {
			 					s idpoint=2							//bile auto
			 					i $o(arrtusp(mm))'="" {
				 					s idpoint=3						//modre auto, ceka na spoj
			 					}
			 					s @glbdata@(3,$$wrapHrlSec^OBapiED(hrlsim,(mm*60)))=""
			 					s @glbdata@(4,zp,tu,$$wrapHrlSec^OBapiED(hrlsim,(mm*60)))=$lb(midzst,idpoint,2,"","")
		 					}
	 					}
 					}
				}
 			}
 		}
 		//projdu turnusy a doplnim vsechny casy
		s zp="" f {
	 		s zp=$o(@glbdata@(4,zp)) i zp="" q
	 		s tu="" f {
		 		s tu=$o(@glbdata@(4,zp,tu)) i tu="" q
	 			s hrlmm="" f {
		 			s hrlmm=$o(@glbdata@(3,hrlmm)) i hrlmm="" q
	 				i $d(@glbdata@(4,zp,tu,hrlmm)) continue
	 				s myhrlmm=$o(@glbdata@(4,zp,tu,(hrlmm+.01)),-1)
	 				i myhrlmm {
			 			s @glbdata@(4,zp,tu,hrlmm)=$g(@glbdata@(4,zp,tu,myhrlmm))
	 				}
	  			}
	 		}
 		}
 		//vystup title
 		s @myglb@("dta",$i(@myglb@("dta")))="title~Simulace oběhů vybraných turnusů dne: "_$$nd^OBapiED(hrlsim,0)
 		//vystup body
 		s idzst="" f {
	 		s val="" s idzst=$o(@glbdata@(2,idzst),1,val) i idzst="" q
	 		s nzs=$lg(val,1)
	 		s blo=$lg(val,2)
	 		s gpsN=$lg(val,3)
	 		s gpsE=$lg(val,4)
	 		i gpsN&gpsE {
		 		s val=""
		 		s $p(val,"~",1)="point"
		 		s $p(val,"~",2)=idzst
		 		s $p(val,"~",3)=nzs
		 		s $p(val,"~",4)=blo
		 		s $p(val,"~",5)=gpsN
		 		s $p(val,"~",6)=gpsE
		 		s @myglb@("dta",$i(@myglb@("dta")))=val
	 		}
	 		else {
		 		//zastavka bez gps
		 		s @glbdata@(-2,idzst)=""
	 		}
 		}
 		//vystup useky
 		s midzst="" f {
	 		s midzst=$o(@glbdata@(5,midzst)) i midzst="" q
	 		//zastavka nema souradnici
			i $d(@glbdata@(-2,midzst)) continue
	 		s idzst="" f {
		 		s idzst=$o(@glbdata@(5,midzst,idzst)) i idzst="" q
		 		//zastavka nema souradnici
			 	i $d(@glbdata@(-2,idzst)) continue
			 	//pocet vsech turnusu
			 	s sumtu="" s zp="" f {
			 		s zp=$o(@glbdata@(5,midzst,idzst,zp)) i zp="" q
			 		s tu="" f {
				 		s tu=$o(@glbdata@(5,midzst,idzst,zp,tu)) i tu="" q	
				 		s sumtu=$i(sumtu)
			 		}
			 	}
				s cnttu=0 s zp="" f {
			 		s zp=$o(@glbdata@(5,midzst,idzst,zp)) i zp="" q
			 		s tu="" f {
				 		s tu=$o(@glbdata@(5,midzst,idzst,zp,tu)) i tu="" q	
				 		s cnttu=$i(cnttu)
				 		i 'coltur {
					 		s mycol=2	//modre
			 				s height=((sumtu-cnttu+1)*1) s:height<2 height=2	
				 		}
				 		else {
					 		s mycol=$lg($g(@glbdata@(1,zp,tu)),1)
			 				s height=((sumtu-cnttu+1)*2)
				 		}
			 			s val=""
			 			s $p(val,"~",1)="line"
		 				s $p(val,"~",2)=tu
		 				s $p(val,"~",3)=mycol
		 				s $p(val,"~",4)=midzst
		 				s $p(val,"~",5)=idzst
		 				s $p(val,"~",6)=height
		 				s $p(val,"~",7)=""
		 				s @myglb@("dta",$i(@myglb@("dta")))=val
			 		}
		 		}
	 		}
 		}
 		//vystup turnusy
 		s zp="" f {
	 		s zp=$o(@glbdata@(4,zp)) i zp="" q
	 		s tu="" f {
		 		s tu=$o(@glbdata@(4,zp,tu)) i tu="" q
		 		s vehicledta=0
	 			s hrlmm="" f {
		 			s val="" s hrlmm=$o(@glbdata@(4,zp,tu,hrlmm),1,val) i hrlmm="" q
		 			s idzst=$lg(val,1)
		 			s mycol=$lg(val,2)
		 			s li=$lg(val,3)
		 			s sp=$lg(val,4)
		 			//souradnice
		 			s val=$g(@glbdata@(2,idzst))
		 			s gpsN=$lg(val,3)
		 			s gpsE=$lg(val,4)
		 			i gpsN&gpsE {
			 			s val=""
		 				s $p(val,"~",1)="vehicle"
		 				s $p(val,"~",2)=hrlmm
		 				s tmp=$$unwrapHrlSec^OBapiED(hrlmm)
		 				s day=$$ntd^OBapiED($lg(tmp,1))
		 				s $p(val,"~",3)=$$nd^OBapiED($lg(tmp,1),0)
		 				s $p(val,"~",4)=day_" "_$p($tr($$sh^OBapiED($lg(tmp,2)),".",":"),":",1,2)
		 				s $p(val,"~",5)=tu
		 				s $p(val,"~",6)=mycol
	 					s $p(val,"~",7)=gpsN
		 				s $p(val,"~",8)=gpsE
		 				s tmp=tu
		 				i li&sp s tmp=tmp_$c(13,10)_li_"/"_sp
		 				s $p(val,"~",9)=tmp
		 				s @myglb@("dta",$i(@myglb@("dta")))=val
		 				s vehicledta=1
		 			}
	 			}
	 			i vehicledta=1 s @myglb@("dta",$i(@myglb@("dta")))="vehicle_end"
	 		}
 		}
 		//data pro posuvnik
 		s hrlss="" f {
	 		s hrlss=$o(@glbdata@(3,hrlss)) i hrlss="" q
	 		s val=""
	 		s $p(val,"~",1)="slider"
		 	s $p(val,"~",2)=hrlss
		 	s tmp=$$unwrapHrlSec^OBapiED(hrlss)
		 	s day=$$ntd^OBapiED($lg(tmp,1))
		 	s $p(val,"~",3)=$$nd^OBapiED($lg(tmp,1),0)
		 	s $p(val,"~",4)=day_" "_$p($tr($$sh^OBapiED($lg(tmp,2)),".",":"),":",1,2)
		 	s @myglb@("dta",$i(@myglb@("dta")))=val	
 		}
 		//body bez gps (pro vypis)
 		s idzst="" f {
	 		s val="" s idzst=$o(@glbdata@(-2,idzst),1,val) i idzst="" q
	 		s val=$g(@glbdata@(2,idzst))
	 		s nzs=$lg(val,1)
	 		s blo=$lg(val,2)
		 	s val=""
		 	s $p(val,"~",1)="point_no_pos"
		 	s $p(val,"~",2)=idzst
		 	s $p(val,"~",3)=nzs
		 	s $p(val,"~",4)=blo
		 	s $p(val,"~",5)=""
		 	s $p(val,"~",6)=""
		 	s @myglb@("dta",$i(@myglb@("dta")))=val
 		}
 		//kill
 		k arrltur
 		k @glbstat
 		k @glbdata
    }
    catch (ex) 
    {
	    s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
    }
    q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.API.Zastavky">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54119.694421</TimeChanged>
<TimeCreated>65505,37483.478326</TimeCreated>

<Method name="List">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//s isok=##class(ALVA.AUDO.API.Zastavky).List(.sys,.in,.out)
	// VSTUP
    // in("ciselnik")=0/1 0 zastavky dle JR /1 lokalni zastavky z AD
    // in("nazev")= ... cast nazvu zastavky pro vyhledani
    // in("glb")=glb pro prenos dat
	// VYSTUP:
	// @glb@("dta",cnt,"id"...)=... - id zastavky
	// @glb@("dta",cnt,"dta"...)=... - data zastavky
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //
        s myglb=$g(in("glb")) k @myglb
        s mylglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @mylglb
        s nazev=$g(in("nazev")) i nazev="" s nazev="*"
        //zastavky dle JR
        i '$g(in("ciselnik")) {
	        k arri
	        s arri("naz")=$g(in("nazev")) i arri("naz")="" s arri("naz")="*"
	        s arri("glb")=mylglb
	        s err=$$fndZst^JRapi(idfa,nmsp,.arri,"") i err zt
	    }
	    //lokalni zastavky
	    i +$g(in("ciselnik")) {
		    s nazev=$$cnvBezDiaUp^JRapi(nazev)
		    k arrcis3
		    s err=$$gCis^OBapiED(idfa,nmsp,3,"",.arrcis3) i err zt
		    s idzst="" f {
			    s idzst=$o(arrcis3("arr",idzst)) i idzst="" q
			    s val=$g(arrcis3("arr",idzst))
			    s mynazev=$p(val,"~",2)
			    i nazev="*" {
				    s @mylglb@($$cnvDiaInd^JRapi((mynazev_idzst)))=idzst_"/L"
				    continue
			    }
			    s mynazev=$$cnvBezDiaUp^JRapi(mynazev)
			    i nazev=$e(mynazev,1,$l(nazev)) {
				    s @mylglb@($$cnvDiaInd^JRapi((mynazev_idzst)))=idzst_"/L"
			    }
		    }
	    }
        s abcidx="" f {
	        s abcidx=$o(@mylglb@(abcidx)) i abcidx="" q
		    s idzst=$g(@mylglb@(abcidx))
		    k myarr s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.myarr) i err zt
		    s mycnt=$i(@myglb)
		    s @myglb@("dta",mycnt,"id")=idzst
		    m @myglb@("dta",mycnt,"dta")=myarr
	    } 		
 		k @mylglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.RG.Api">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65706,50334.266788</TimeChanged>
<TimeCreated>65489,39425.300667</TimeCreated>

<Method name="SeznamSablon">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	//in("id")=SadaID
	// VYSTUP:
 	//out("arr",1,cnt)=SablonaID_"~"_SablonaNazev
	s ret=$$$OK
	s err=""
	k out
	$$$FROMSERVER
	try {
		k myin,myout
		s myin("par",1)=$g(in("id"))
		s err=##class(ALVA.ADREPORTGEN.Api).GetSeznamSablon(idfa,nmsp,.myin,.myout) i +err zt
		m out=myout
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.RG.Objednavky">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54578.424252</TimeChanged>
<TimeCreated>65489,52363.012112</TimeCreated>

<Method name="SeskupeniObjProPotvrzeni">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,id,...) nebo in("id",id)="" (provoz|idobj)
	// in("datumPotvrzeniH")=horolog datum potvrzeni
	// VYSTUP:
	// out("key",cnt)=data
	// out("msg",cnt)=zprava
	s ret=$$$OK
	s err=""
	k out
	$$$FROMSERVER
	try {
		s in("datumPotvrzeniH")=$g(in("datumPotvrzeniH"),$h)
		//rozklicovani id objednavek do pole
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s in("id",id)=""
		}
		//spojeni cisel
		k myarrdop
		s id="" f {
			s id=$o(in("id",id)) i id="" q
				s idprv=$p(id,"|",1)
				s idobj=$p(id,"|",2)
				s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
            	k mmyarr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.myarr) i +err zt
            	s ico=$g(myarr("dta",13))
            	s zaknaz=$g(myarr("dta",4))
            	s zakupr=$g(myarr("dta",54)) i zakupr'="" s zakupr=" "_zakupr
            	s myidzak=ico_"~"_zaknaz_zakupr
            	i $g(myarrdop(myidzak))'="" s myarrdop(myidzak)=myarrdop(myidzak)_"#"
            	s myarrdop(myidzak)=$g(myarrdop(myidzak))_zp_"|o|"_idobj
            	// kontrola datumu pristaveni vuci datumu potvrzeni
            	s datumPristaveniH=$g(myarr("dta",29))
            	i in("datumPotvrzeniH")>datumPristaveniH {
	            	s out("msg",$i(out("msg")))="Objednávka ["_idprv_"/"_idobj_"] - Datum potvrzení ["_$$$ND(in("datumPotvrzeniH"))_"] je větší než Datum přistavení ["_$$$ND(datumPristaveniH)_"]!"
            	}
        
		}
    	s myidzak="" f {
	    	s myidzak=$o(myarrdop(myidzak)) i myidzak="" q
	    	s out("key",$i(out("key")))=$g(myarrdop(myidzak))_"~"_$p(myidzak,"~",2)
    	}
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.Sherlock">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65780,58539.657757</TimeChanged>
<TimeCreated>65681,46236.324411</TimeCreated>

<Method name="SherlockTree">
<ClassMethod>1</ClassMethod>
<FormalSpec>glb:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	try {
		//w ##class(ALVA.AUDO.Sherlock).SherlockTree("arr") w ! zw arr
		//posledni ID = 1014
		k @glb
		k mycnt
		s myagd="AUDO"
		//1015
		s @glb@(1)="0~AUtobusová DOprava"
		s @glb@(1,1)="0~Objednávky"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1001~Objednávka, zápis"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1002~Objednávka, zrušení"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1003~Stálá Objednávka, zápis"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1004~Stálá objednávka, zrušení"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1005~Objednávka, import"
		s @glb@(1,2)="0~Spoje"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1006~Spoj, zápis"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1007~Spoj, zrušení"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1008~Spoj, import"
		s @glb@(1,3)="0~Turnusy"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1009~Turnus, zápis"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1010~Turnus, zrušení"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1011~Turnus, import"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1012~Turnus, export"
		s @glb@(1,4)="0~Turnusové skupiny"
		s @glb@(1,4,$i(cnt))="1~"_myagd_"|1013~Turnusova skupina, zápis"
		s @glb@(1,4,$i(cnt))="1~"_myagd_"|1014~Turnusova skupina, zrušení"
		s @glb@(1,5)="0~Plán dopravy"
		s @glb@(1,6)="0~Zpracování"
		s @glb@(1,7)="0~Export dat"
		s @glb@(1,8,$i(cnt))="1~"_myagd_"|1015~Export dokladů pro Prytanis"
	}
	catch(ex)
	{
		s err="1~"_ex.DisplayString()_"~"_$g(err)
	}
	q:'$g(err) "" q err
]]></Implementation>
</Method>

<Method name="SherlockItemTypeSave">
<ClassMethod>1</ClassMethod>
<FormalSpec>idfa:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	try {
		//w ##class(ALVA.AUDO.Sherlock).SherlockItemTypeSave("VS_CSAD")
		s myagd="AUDO"
		k ^||AUDO.SherlockTree,^||AUDO.SherlockItem
		s sc=##class(ALVA.AUDO.Sherlock).SherlockTree($name(^||AUDO.SherlockTree)) if sc s err=sc ztrap
		s glb=$name(^||AUDO.SherlockTree)
		for {
			s glb=$q(@glb,1,val) if glb="" q
			if $p(val,"~",1) s ^||AUDO.SherlockItem(+$p($p(val,"~",2),"|",2))=$p(val,"~",3)
		}
		s sc=##class(ALVA.SHERLOCK.Api).sTypPolozky(idfa,myagd,$name(^||AUDO.SherlockItem)) if sc s err=sc ztrap
	}
	catch(ex)
	{
		s err="1~"_ex.DisplayString()_"~"_$g(err)
	}
	q:'$g(err) "" q err
]]></Implementation>
</Method>

<Method name="CreateEvent">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	try {
		//in("id")=id udalosti
		//in("dsc")=popis udalosti
		//in("key",id)=val
 		// "OS"="Osobní číslo"
 		// "ST"="Středisko"
 		// "KA"="Kategorie"
 		// "PR"="Provozovna"
 		// "LI"="Linka"
 		// "SP"="Spoj"
 		// "TU"="Turnus"
 		// "RZ"="Registrační značka"
 		// "SK"="Skupina"
 		// "ZA"="Zastávka"
 		// "RO"="Rok"
 		// "FR"="Fakturační řada"
 		// "CI"="Číslo"
 		// "OBD"="Období"
 		// "JM"="Jméno"
		//in("dta",id)=$lb(newval,oldval,popis klíče/události)
		//in("nomail")=0/1 neodesilat mail
		//in("msgmail",cnt)=msg
		//in("filemail",cnt)=file
		$$$FROMSERVER
		s ret=""
		k err k mykey k mydta k mymsgmail k myfilemail m mykey=in("key") m mydta=in("dta") m mymsgmail=in("msgmail") m myfilemail=in("filemail")
		d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,idfa,mlp,fullname,$g(in("id")),$g(in("dsc")),.mykey,.mydta,+$g(in("nomail")),.mymsgmail,.myfilemail)
		i $g(err)'="" zt
	}
	catch (ex) {
		s ret="1~"_ex.DisplayString()_"~"_$g(err)
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.OBJ.AUDO0017">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54614.714659</TimeChanged>
<TimeCreated>65489,53633.118797</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("id")=$lb(id,id,...) nebo in("id",id)="" (provoz|idobj)
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//rozklicovani in("id")
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			s in("id",id)=""
		}
		//tiskove udaje
		k out
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="vyhledávání v objednávkách"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestaveni tabulky
		k arri,arro
		//id objednavek do pole
        s id="" f {
	        s id=$o(in("id",id)) i id="" q
	        s idprv=$p(id,"|",1) s idobj=$p(id,"|",2)
	        s zp="" s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
	        s arri("idobj",zp,idobj)=""
        }
		s arri("global")=glb
	    s arri("idtable")=tab
	    s arri("nazev")=nazev
		s arri("backgroundtask")=$g(in("backgroundtask"))
		s arri("taskid")=$g(in("taskid"))
		s isok=##class(ALVA.AUDO.TISKY.OBJ.AUDO0124).vytvorTabulku(.sys,.arri,.arro) i 'isok s err=isok zt
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.OBJ.AUDO0124">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54716.240017</TimeChanged>
<TimeCreated>65392,48971.450009</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("provoz",provoz)=""
	// in("datumOd")=datumOd
	// in("datumDo")=datumDo
	// in("cisloDokladuOd")=cisloDokladuOd
	// in("cisloDokladuDo")=cisloDokladuDo
	// in("druhZajezdu")=druhZajezdu
	// in("prepravce")=prepravce
	// in("icZakaznika")=icZakaznika
	
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="vyhledávání v objednávkách"
        s nazev=nazev_", od "_$g(in("datumOd"))_" do "_$g(in("datumDo"))
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		// filtr pro vyhledani dokladu
		k arri,arro
		i $g(in("datumOd")) s arri("hrlod")=$$dn^OBapiED(in("datumOd")) 
		i $g(in("datumDo")) s arri("hrldo")=$$dn^OBapiED(in("datumDo"))
		i $g(in("cisloDokladuOd")) s arri("cis","od")=in("cisloDokladuOd")
		i $g(in("cisloDokladuDo")) s arri("cis","od")=in("cisloDokladuDo")
		m arri("prv")=in("provoz")
		i $g(in("druhZajezdu"))'="" s arri("dzj",in("druhZajezdu"))=""
		i $g(in("prepravce"))'="" s arri("pre")=in("prepravce")
		i $g(in("icZakaznika"))'="" s arri("ico")=in("icZakaznika")
		// sestava - vyhledani objednavek
		i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá vyhledání dokladů",$j)
        s arri("glb")=1
        k wrk s err=$$lObj^OBapiED(idfa,nmsp,.arri,.wrk) i +err zt
        k arri,arro
        //prepis id objednavek do pole
        s zp="" f {
	        s zp=$o(^CacheTempJB(wrk,"arr",zp)) i zp="" q
	        s rr="" f {
		        s rr=$o(^CacheTempJB(wrk,"arr",zp,rr)) i rr="" q
		        s cobj="" f {
			        s cobj=$o(^CacheTempJB(wrk,"arr",zp,rr,cobj)) i cobj="" q
			        s idobj=$$wrapIdObj^OBapiED(rr,cobj)
			        s arri("idobj",zp,idobj)=""
		        }
	        }
        }
        k ^CacheTempJB(wrk)
        s arri("global")=glb
	    s arri("idtable")=tab
	    s arri("nazev")=nazev
		s arri("backgroundtask")=$g(in("backgroundtask"))
		s arri("taskid")=$g(in("taskid"))
		s isok=##class(ALVA.AUDO.TISKY.OBJ.AUDO0124).vytvorTabulku(.sys,.arri,.arro) i 'isok s err=isok zt
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>

<Method name="vytvorTabulku">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// VSTUP:
	// in("idobj",zp,idobj)="" //doklady pro tisk
	// in("global")=tiskovy global
	// in("idtable")=id vychozi tabulky
	// in("nazev")=nazev sestavy
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// VYSTUP:
	// 
	s ret=$$$OK
	s err=""
	k out
	$$$FROMSERVER
	try {
		//
		s glb=$g(in("global"))
		s tab=$g(in("idtable"))
		//
		//konstatnty a ciselnkiky
        s qsj=$$qsj^OBapiED()
        // ciselniky - typ zajezdu
 		k arrcis1 s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arrcis1) i +err zt
 		// ciselniky - typ prepravce
 		k arrcis2 s err=$$gCis^OBapiED(idfa,nmsp,2,"",.arrcis2) i +err zt
        //doplneni parametru do nazvu a aktualizace
        i 
        // sestava - definice
 		//         1      2          3     4    5                6              7                8    9         10 11       12              13            14           15           16       17           18          19   20   21            22                    23     24          25
 		s colHead="provoz~pracoviště~číslo~stav~přistavení|datum~přistavení|čas~přistavení|místo~vozů~přepravce~IC~cíl,přes~odstavení|datum~odstavení|čas~předběžné|km~typ přepravy~dopravce~cena|prodeje~cena|nákupu~měna~osob~došlá faktura~poznámka|obch.a prov.~sleva%~sleva|důvod~uznáno(SJ)"
 		//        1 2 3 4 5 6 7 8 9 0 1 2 3 4  5 6 7  8  9 0 1 2 3 4 5
 		s colTyp="N~T~T~T~D~T~T~N~T~T~T~D~T~N1~T~T~N2~N2~T~N~T~T~T~T~T"
 		//         1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
 		s colForm=">~>~>~>~>~>~<~>~<~>~<~>~>~>~>~<~>~>~<~>~<~<~>~<~<"
 		s @glb@(tab,"Name")=$g(in("nazev"))
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		// def.sloupcu
 		f cnt=1:1:$l(colHead,"~") {
	 		s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED($p(colHead,"~",cnt),"|",$c(13,10))
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
        i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím sestavu",$j)
        s zp="" f {
	        s zp=$o(in("idobj",zp)) i zp="" q
	        s idobj="" f {
		        s idobj=$o(in("idobj",zp,idobj)) i idobj="" q
		        k arr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr) i err zt
		        s idRow=$i(@glb@(tab,"RD"))
		        s @glb@(tab,"RD",idRow)=""
				s @glb@(tab,"Dta",idRow,1)=(zp#100)
				s @glb@(tab,"Dta",idRow,2)=$g(arr("dta",76))
				s @glb@(tab,"Dta",idRow,3)=idobj
				s @glb@(tab,"Dta",idRow,4)=$p("OBJ~ZRU~PLN~ODJ~FAK","~",(+$g(arr("dta",1))+1))
				s @glb@(tab,"Dta",idRow,5)=$$nd^OBapiED($g(arr("dta",29)),0)
				s @glb@(tab,"Dta",idRow,6)=$tr($j($$mh^OBapiED($g(arr("dta",30))),0,2),".",":")
				s @glb@(tab,"Dta",idRow,7)=$g(arr("dta",28))
				s @glb@(tab,"Dta",idRow,8)=$g(arr("dta",37))
				s @glb@(tab,"Dta",idRow,9)=$g(arr("dta",4))
				s @glb@(tab,"Dta",idRow,10)=$g(arr("dta",13))
				s @glb@(tab,"Dta",idRow,11)=$g(arr("arr",1))
				s hrld=$g(arr("dta",33)) s:'$g(hrld) hrld=$g(arr("dta",29))
				s @glb@(tab,"Dta",idRow,12)=$$nd^OBapiED(hrld,0)
				s @glb@(tab,"Dta",idRow,13)=$tr($j($$mh^OBapiED($g(arr("dta",34))),0,2),".",":")
				s @glb@(tab,"Dta",idRow,14)=$g(arr("dta",62))
				s @glb@(tab,"Dta",idRow,15)=$p("VLA~CIZ","~",(+$g(arr("dta",64))+1))
				k arrzak i $g(arr("frw","dta",4))'="" s err=$$Load^ALVAZAKAZNICIapi(idfa,sysnmsp,$g(arr("frw","dta",4)),"",.arrzak) i +err zt
				s @glb@(tab,"Dta",idRow,16)=$g(arrzak("ObchNaz1"))                   // dopravce
				s @glb@(tab,"Dta",idRow,17)=+$g(arr("frw","dta",2))                  // cena nakupu
				s @glb@(tab,"Dta",idRow,18)=+$g(arr("frw","dta",3))                  // cena prodeje
				s mena=$g(arr("dta",69)) i mena="" s mena="Kč"
				s @glb@(tab,"Dta",idRow,19)=mena                                     // mena
				s @glb@(tab,"Dta",idRow,20)=$g(arr("dta",31))                        // osob
				s @glb@(tab,"Dta",idRow,21)=$tr($g(arr("frw","dta",5)),":#","-;")    // dosla faktura
				s val="" s cntrow="" f {
 					s cntrow=$o(arr("arr",3,cntrow)) i cntrow="" q
 					s val=val_$g(arr("arr",3,cntrow))_"/"
				}
				i $e(val,$l(val))="/" s val=$e(val,1,($l(val)-1))
				s @glb@(tab,"Dta",idRow,22)=val
				s @glb@(tab,"Dta",idRow,23)=$g(arr("dta",27))						//sleva%
				s @glb@(tab,"Dta",idRow,24)=$g(arr("dta",73))						//sleva duvod
				s val="" s iddoc="" f {
 					s iddoc=$o(arr("arr",11,iddoc)) i iddoc="" q
					i val'="" s val=$g(val)_";"
					s val=val_($p(iddoc,"~",1)#100)_"-"_$$rrrrmm^OBapiED($p(iddoc,"~",1))_"-"_($p(iddoc,"~",3)-qsj)
				}
				s @glb@(tab,"Dta",idRow,25)=val										//uznano
		        
	        }
        }
	}
	catch (ex) {
		s ret=$g(err)_ex.DisplayString()
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.SP.AUDO0023">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54803.425371</TimeChanged>
<TimeCreated>65504,43728.670291</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//
	// VSTUP:
	// in("id")=$lb(id,id,...) nebo in("id",id)=""
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	;; in("hrl")=hrl, je-li uvedeno, bere se varianta turnusu jen od tohoto data
	//
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//rozklicovani in("id")
		f cnt=1:1:$ll($g(in("id"))) {
			s id=$lg($g(in("id")),cnt)
			i $p(id,"|",2)="o" {
				s in("id",id)=""
			}
		}
		//nastaveni programu a ciselniky
		k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i +err zt
		k arr4 s err=$$gCis^OBapiEDCis(idfa,nmsp,4,"",.arrcis4) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím sestavu",$j)
		//tiskove udaje
		k out
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="spoje, přehled údajů"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//
		//         1     2         3    4             5      6               7        8    9  10         11             12 13         14              15               16      17  	         18         19        20               21            22          23             24          25             26       27         28                     29                     30                             31                                      32                33              34       35                 36
		s colHead="linka~linka|ISD~spoj~spoj|originál~provoz~časová|varianta~ukončení~druh~od~nástupiště~odjezd|(hh:mm)~do~nástupiště~příjezd|(hh:mm)~týdenní|platnost~omezení~jízda|(hh:mm)~tarifní|km~přesné|km~přepravní|systém~pauzy|(hh:mm)~pauzy|popis~výkonová|sazba~přirážka|ph~počet|zastávek~posilový~objížďkový~nízkokapacitní|vozidlo~přepravuje|jízdní kola~bezbarierově|přístupné vozidlo~částečně bezbarierově|přístupné vozidlo~jede|na objednání~jede|podmínečně~uzamčeno~v turnusech|zp/tur~poznámka"
		//        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6
		s colTyp="N~T~N~T~T~D~D~T~T~T~T~T~T~T~T~T~T~N~N3~T~T~T~N~N~N~N~N~N~N~N~N~N~N~N~T~T"
		s colForm=">~>~>~>~>~>~>~<~<~>~>~<~>~>~>~<~>~>~>~<~>~<~>~>~>~>~>~>~>~>~>~>~>~>~<~<"
		s @glb@(tab,"Name")=nazev
		s @glb@(tab,"Format")="<"
		s @glb@(tab,"STYP")="T" 
		f cnt=1:1:$l(colHead,"~") {
			s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED($p(colHead,"~",cnt),"|",$c(13,10))
		 	s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
		 	s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
		}
 		// turnusy je spojum, pripravim si spoje z turnusu do @myglb@("arr",1,li,sp,hrl,zp,tu)=""
        s err=$$gAllTurLiSp^OBapiED(idfa,nmsp,myglb,"","") i +err zt
		// data sestavy
		// setrizeni li,sp,hrl
		s wrksort=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrksort)
		s idsp="" f {
			s idsp=$o(in("id",idsp)) i idsp="" q
		 	s li=$p(idsp,"|",1)
		 	s sp=$p(idsp,"|",2)
		 	s hrl=$p(idsp,"|",3)
		 	s ^||wrk.ALVA.AD(wrksort,li,sp,hrl)=""
		}
		s li="" f {
			s li=$o(^||wrk.ALVA.AD(wrksort,li)) i li="" q
		 	s sp="" f {
			 	s sp=$o(^||wrk.ALVA.AD(wrksort,li,sp)) i sp="" q
		 		s hrl="" f {
			 		s hrl=$o(^||wrk.ALVA.AD(wrksort,li,sp,hrl)) q:hrl=""  d
		 			k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
		 			s idrow=$i(@glb@(tab,"RD"))
		 			s @glb@(tab,"RD",idrow)=""
		 			s @glb@(tab,"Dta",idrow,1)=li
		 			s @glb@(tab,"Dta",idrow,2)=$g(arrsp("dta",22))
		 			s @glb@(tab,"Dta",idrow,3)=sp
		 			s @glb@(tab,"Dta",idrow,4)=$g(arrsp("dta",24))
		 			s @glb@(tab,"Dta",idrow,5)=$g(arrsp("dta",18))
		 			s @glb@(tab,"Dta",idrow,6)=$$nd^OBapiED(hrl,0)
		 			s @glb@(tab,"Dta",idrow,7)="" i $g(arrsp("dta",21)) s @glb@(tab,"Dta",idrow,7)=$$nd^OBapiED(hrl,21)
		 			s @glb@(tab,"Dta",idrow,8)=$g(arrcis4("arr",+$g(arrsp("dta",4))))
		 			k arrzst s err=$$gZst^OBapiED(idfa,nmsp,$g(arrsp("dta",6)),"",.arrzst)
		 			s @glb@(tab,"Dta",idrow,9)=$g(arrsp("dta",6))_" "_$g(arrzst("dta",1))
		 			s @glb@(tab,"Dta",idrow,10)=$g(arrsp("dta",29))
		 			s @glb@(tab,"Dta",idrow,11)=$tr($j($$mh^OBapiED($g(arrsp("dta",1))),0,2),".",":")
		 			k arrzst s err=$$gZst^OBapiED(idfa,nmsp,$g(arrsp("dta",7)),"",.arrzst)
		 			s @glb@(tab,"Dta",idrow,12)=$g(arrsp("dta",7))_" "_$g(arrzst("dta",1))
					s @glb@(tab,"Dta",idrow,13)=$g(arrsp("dta",29))	 		
		 			s @glb@(tab,"Dta",idrow,14)=$tr($j($$mh^OBapiED($g(arrsp("dta",2))),0,2),".",":")
		 			s @glb@(tab,"Dta",idrow,15)=$g(arrsp("dta",16))	 		
		 			// omezeni textove
 					k arri,arro
 					s arri("dta",1)=""
 					s arri("dta",2)=$g(arrsp("dta",17))
 					f idomz=11,12,13,14,15,22 {
	 					i '$d(arrsp("arr","omz",idomz)) continue
 						s arri("omz",idomz)=$p($g(arrsp("arr","omz",idomz)),"@",2)
 					}
 					s err=$$txtNZ^JRapi(idfa,nmsp,.arri,.arro) i +err zt
		 			s @glb@(tab,"Dta",idrow,16)=$g(arro("dta",1))
		 			k arri,arro
		 			s @glb@(tab,"Dta",idrow,17)=$tr($j($$mh^OBapiED($g(arrsp("dta",3))),0,2),".",":")
		 			s @glb@(tab,"Dta",idrow,18)=$g(arrsp("dta",14))	 		
		 			s @glb@(tab,"Dta",idrow,19)=$g(arrsp("dta",15))
		 			//prs
		 			i '$d(arrsp("arr","prs")) s @glb@(tab,"Dta",idrow,20)=$g(arrsp("dta",12))
		 			i +$d(arrsp("arr","prs")) {
			 			s val=""
			 			s idprs="" f {
				 			 s idprs=$o(arrsp("arr","prs",idprs)) i idprs="" q
		 					 s kmprs=+$g(arrsp("arr","prs",idprs))
		 					 i val'="" s val=val_";"
		 					 s val=val_idprs_"="_kmprs
			 			}
			 			s @glb@(tab,"Dta",idrow,20)=val
		 			}	 		
		 			//pauzy
		 			s val=0 s dscval=""
		 			s time="" f {
			 			s time=$o(arrsp("arr","pau",time)) i time="" q
		 				s val=val+$g(arrsp("arr","pau",time))
		 				i $g(arrsp("arr","pau",time)) s dscval=dscval_$tr($j($$mh^OBapiED($g(arrsp("dta",1))+time),0,2),".",":")_"="_+$g(arrsp("arr","pau",time))_";"
		 			}
		 			i $e(dscval,$l(dscval))=";" s dscval=$e(dscval,1,$l(dscval)-1) 
		 			s @glb@(tab,"Dta",idrow,21)=$tr($j($$mh^OBapiED(val),0,2),".",":")
		 			s @glb@(tab,"Dta",idrow,22)=dscval
		 			s @glb@(tab,"Dta",idrow,23)=$g(arrsp("dta",31))
		 			s @glb@(tab,"Dta",idrow,24)=$g(arrsp("dta",9))
		 			s @glb@(tab,"Dta",idrow,25)=+$g(arrsp("arr","pcz"))
		 			//posila
		 			s @glb@(tab,"Dta",idrow,26)=+$g(arrsp("dta",32))
		 			//posila podle cisla
		 			i (sp'<$g(arrset("arr",1,5))) s @glb@(tab,"Dta",idrow,26)=1
		 			s @glb@(tab,"Dta",idrow,27)=+$g(arrsp("dta",23))
		 			s @glb@(tab,"Dta",idrow,28)=+$g(arrsp("dta",26))
		 			s @glb@(tab,"Dta",idrow,29)=+$g(arrsp("dta",33))
		 			s @glb@(tab,"Dta",idrow,30)=+$g(arrsp("dta",27))
		 			s @glb@(tab,"Dta",idrow,31)=+$g(arrsp("dta",28))
		 			s @glb@(tab,"Dta",idrow,32)=+$g(arrsp("dta",19))
		 			s @glb@(tab,"Dta",idrow,33)=+$g(arrsp("dta",25))
		 			s @glb@(tab,"Dta",idrow,34)=+$g(arrsp("dta",10))
		 			s val="" k myarr
		 			s myhrl=$o(@myglb@("arr",1,li,sp,(hrl+.01)),-1) i myhrl="" s myhrl=hrl
		 			s myhrl=myhrl-.01
		 			f {
			 			s myhrl=$o(@myglb@("arr",1,li,sp,myhrl)) i myhrl="" q
			 			m myarr=@myglb@("arr",1,li,sp,myhrl)
		 			}
		 			s zp="" f {
			 			s zp=$o(myarr(zp)) i zp="" q
			 			s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
			 			s tu="" f {
				 			s tu=$o(myarr(zp,tu)) i tu="" q
				 			i val'="" s val=val_";"
				 			s val=val_idprv_"/"_tu
			 			} 
		 			}
		 			
		 			s @glb@(tab,"Dta",idrow,35)=val
		 			k myarr
		 			s @glb@(tab,"Dta",idrow,36)=$p($g(arrsp("arr","omz",41)),"@",2)
		 		}
		 	}
		}
		k ^||wrk.ALVA.AD(wrksort) 
		k @myglb
	}
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.SP.AUDO0024">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65533,54860.569146</TimeChanged>
<TimeCreated>65504,43802.176474</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("skupinajr")=... cislo skupiny JR
	// in("chybiad")=0/1... kontrolovat spoje, ktere chybi v AD
	// in("chybijr")=0/1... kontrolovat spoje, ktere chybi v JR
	// in("rozdilkmpresne")=0/1... rozdil v presnych km
	// in("limitkmpresne")=... limit pro kontrolu presnych km
	// in("rozdilkmtarifni")=0/1... rozdil v tarifnich km
	// in("limitkmtarifni")=... limit pro kontrolu tarifnich km
	// in("rozdilodjezd")=... rozdil v odjezdu spoje
	// in("rozdilprijezd")=... rozdil v prijezdu spoje
	// in("rozdildruh")=... rozdil v druhu spoje
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//ciselniky
		k arr4 s err=$$gCis^OBapiEDCis(idfa,nmsp,4,"",.arrcis4) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá kontrola spojů jr proti ad",$j)
		//tiskove udaje
		k out
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="kontrola spojů proti JŘ"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//
		//         1     2    3       	         4  		       5	 6		      7		       8		     9			   10		 11   	   12		  13		 14		       15
		s colHead="linka~spoj~AD časová|varinata~JŘ časová|varinta~chyba~AD přesné|km~JŘ přesné|km~AD tarifní|km~JŘ tarifní|km~AD odjezd~JŘ odjezd~AD příjezd~JŘ příjezd~AD druh spoje~JŘ druh spoje"
		//        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
		s colTyp="T~T~T~T~T~T~T~T~T~T~T~T~T~T~T"
		//         1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
		s colForm=">~>~>~>~<~>~>~>~>~>~>~>~>~<~<"
		//
		s @glb@(tab,"Name")=nazev
		s @glb@(tab,"Format")="<"
		s @glb@(tab,"STYP")="T" 
		f cnt=1:1:$l(colHead,"~") {
			s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED($p(colHead,"~",cnt),"|",$c(13,10))
		 	s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
		 	s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)	
		}	
		//spoje ze skupiny jr
		k mylarr s err=##class(ALVA.JRMAIN.MLAPI).fndContentSku(idfa,nmsp,$g(in("skupinajr")),"l","",.mylarr) i +err zt
		s linkaid="" f {
			s linkaid=$o(mylarr("dta",linkaid)) i linkaid="" q
			s linka=$p(linkaid,"|",3)
			//vlastnosti linky
			k myarr s err=##class(ALVA.JRMAIN.MLAPI).gPrpLin(idfa,nmsp,$g(in("skupinajr")),linka,"",.myarr) i +err zt
			s druh=$g(myarr("dta",1)) s druhad=$tr(druh,"012345678","123554678")
			s datod=$p($g(myarr("dta",2)),"~",1)
			s datdo=$p($g(myarr("dta",2)),"~",2)
			s hrlod=$$dn^OBapiED(datod)
			s hrldo=$$dn^OBapiED(datdo)
			//seznam spoju 
			k mylarrsp k arri s arri("par")=1
			s err=##class(ALVA.JRMAIN.MLAPI).lSpLin(idfa,nmsp,$g(in("skupinajr")),linka,.arri,.myarrlsp) i +err zt
			s sp="" f {
				s sp=$o(myarrlsp("arr",sp)) i sp="" q
				s sm="" f {
					s sm=$o(myarrlsp("arr",sp,sm)) i sm="" q
					k myarrsp
					s err=##class(ALVA.JRMAIN.MLAPI).gSpLin(idfa,nmsp,in("skupinajr"),linka,sm,sp,"",.myarrsp) i +err zt
					s tcdo=$g(myarrsp("dta",2))
					s kmtar=$g(myarrsp("trs",tcdo,4))
					s kmpre=$g(myarrsp("trs",tcdo,5))
					i kmpre="" s kmpre=kmtar
					s odjezd=$g(myarrsp("dta",4))
					s prijezd=((odjezd+$g(myarrsp("trs",tcdo,2)))#1440)
					//                           1     2     3      4      5       6     7
					s @myglb@(1,(+linka),sp)=$lb(hrlod,hrldo,druhad,odjezd,prijezd,kmtar,kmpre)
				}
			}
		}
		//test jr proti ad
		s linka="" f {
			s linka=$o(@myglb@(1,linka)) i linka="" q
			s sp="" f {
				s sp=$o(@myglb@(1,linka,sp)) i sp="" q
				s valjr=$g(@myglb@(1,linka,sp))
				s hrljr=$lg(valjr,1)
				s myerrtxt=""
				//je v ad
				s hrlad="" s valad=""
				k isad s err=$$isSp^OBapiED(idfa,nmsp,linka,sp,"","",.isad) i +err zt
				//spoj existuje v AD
				i $g(isad) {
					k myarrsp s err=$$gSp^OBapiED(idfa,nmsp,linka,sp,hrljr,"",.myarrsp) i +err zt
					s hrlod=$g(myarrsp("hrl"))
					s hrldo=$g(myarrsp("dta",21))
					s odjezd=$g(myarrsp("dta",1))
					s prijezd=$g(myarrsp("dta",2))
					s druhad=$g(myarrsp("dta",4))
					s kmtar=$g(myarrsp("dta",14))
					s kmpre=$g(myarrsp("dta",15))
					i 'kmpre s smpre=kmtar
					s hrlad=hrlod
					//          1     2     3      4      5       6     7
					s valad=$lb(hrlod,hrldo,druhad,odjezd,prijezd,kmtar,kmpre)
					//
					i $g(in("rozdilkmpresne")) {
						i $zabs($lg(valjr,7)-$lg(valad,7))>$g(in("limitkmpresne")) {
							i myerrtxt'="" s myerrtxt=myerrtxt_", "
							s myerrtxt=myerrtxt_"přesné km"
						}
					}
					i $g(in("rozdilkmtarifni")) {
						i $zabs($lg(valjr,6)-$lg(valad,6))>$g(in("limitkmtarifni")) {
							i myerrtxt'="" s myerrtxt=myerrtxt_", "
							s myerrtxt=myerrtxt_"tarifní km"
						}
					}
					i $g(in("rozdilodjezd")) {
						i $lg(valjr,4)'=$lg(valad,4) {
							i myerrtxt'="" s myerrtxt=myerrtxt_", "
							s myerrtxt=myerrtxt_"odjezd"
						}
					}
					i $g(in("rozdilprijezd")) {
						i $lg(valjr,5)'=$lg(valad,5) {
							i myerrtxt'="" s myerrtxt=myerrtxt_", "
							s myerrtxt=myerrtxt_"příjezd"
						}
					}
					i $g(in("rozdildruh")) {
						i $lg(valjr,3)'=$lg(valad,3) {
							i myerrtxt'="" s myerrtxt=myerrtxt_", "
							s myerrtxt=myerrtxt_"druh"
						}
					}
					//je chyba
					i myerrtxt'="" {
						s idrow=$i(@glb@(tab,"RD"))
				 		s @glb@(tab,"RD",idrow)=idrow
				 		s @glb@(tab,"Dta",idrow,1)=linka
				 		s @glb@(tab,"Dta",idrow,2)=sp
				 		s @glb@(tab,"Dta",idrow,3)=$$nd^OBapiED(hrlad,0)
				 		s @glb@(tab,"Dta",idrow,4)=$$nd^OBapiED(hrljr,0)
				 		s @glb@(tab,"Dta",idrow,5)=myerrtxt
				 		s @glb@(tab,"Dta",idrow,6)=$lg(valad,7)
				 		s @glb@(tab,"Dta",idrow,7)=$lg(valjr,7)
				 		s @glb@(tab,"Dta",idrow,8)=$lg(valad,6)
				 		s @glb@(tab,"Dta",idrow,9)=$lg(valjr,6)
				 		s @glb@(tab,"Dta",idrow,10)=$tr($j($$mh^OBapiED($lg(valad,4)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,11)=$tr($j($$mh^OBapiED($lg(valjr,4)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,12)=$tr($j($$mh^OBapiED($lg(valad,5)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,13)=$tr($j($$mh^OBapiED($lg(valjr,5)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,14)=$g(arrcis4("arr",(+$lg(valad,3))))
				 		s @glb@(tab,"Dta",idrow,15)=$g(arrcis4("arr",(+$lg(valjr,3))))
					}
				}
				//spoj neexistuje v AD
				else {
					i $g(in("chybiad")) {
						s myerrtxt="neexistuje v ad"
						s idrow=$i(@glb@(tab,"RD"))
				 		s @glb@(tab,"RD",idrow)=idrow
				 		s @glb@(tab,"Dta",idrow,1)=linka
				 		s @glb@(tab,"Dta",idrow,2)=sp
				 		s @glb@(tab,"Dta",idrow,3)=""
				 		s @glb@(tab,"Dta",idrow,4)=$$nd^OBapiED(hrljr,0)
				 		s @glb@(tab,"Dta",idrow,5)=myerrtxt
				 		s @glb@(tab,"Dta",idrow,6)=""
				 		s @glb@(tab,"Dta",idrow,7)=$lg(valjr,7)
				 		s @glb@(tab,"Dta",idrow,8)=""
				 		s @glb@(tab,"Dta",idrow,9)=$lg(valjr,6)
				 		s @glb@(tab,"Dta",idrow,10)=""
				 		s @glb@(tab,"Dta",idrow,11)=$tr($j($$mh^OBapiED($lg(valjr,4)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,12)=""
				 		s @glb@(tab,"Dta",idrow,13)=$tr($j($$mh^OBapiED($lg(valjr,5)),0,2),".",":")
				 		s @glb@(tab,"Dta",idrow,14)=""
				 		s @glb@(tab,"Dta",idrow,15)=$g(arrcis4("arr",(+$lg(valjr,3))))
					}
				}
			}
		}
		//test ad proti jr
		i $g(in("chybijr")) {
			//uloha na pozadi
	    	i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá kontrola spojů ad proti jr",$j)
			s myglblsad="^||wrk.ALVA.AD("_mywrk_",1000)" k @myglblsad
			k arri,arro s arri("glb")=myglblsad
			s err=$$lSp^OBapiED(idfa,nmsp,.arri,.arro) i +err zt
			s linka="" f {
				s linka=$o(@myglblsad@(linka)) i linka="" q
				s sp="" f {
					s sp=$o(@myglblsad@(linka,sp)) i sp="" q
					i '$d(@myglb@(1,linka,sp)) {
						s myerrtxt="neexistuje v jř"
						s idrow=$i(@glb@(tab,"RD"))
				 		s @glb@(tab,"RD",idrow)=idrow
				 		s @glb@(tab,"Dta",idrow,1)=linka
				 		s @glb@(tab,"Dta",idrow,2)=sp
				 		s @glb@(tab,"Dta",idrow,3)=""
				 		s @glb@(tab,"Dta",idrow,4)=""
				 		s @glb@(tab,"Dta",idrow,5)=myerrtxt
				 		s @glb@(tab,"Dta",idrow,6)=""
				 		s @glb@(tab,"Dta",idrow,7)=""
				 		s @glb@(tab,"Dta",idrow,8)=""
				 		s @glb@(tab,"Dta",idrow,9)=""
				 		s @glb@(tab,"Dta",idrow,10)=""
				 		s @glb@(tab,"Dta",idrow,11)=""
				 		s @glb@(tab,"Dta",idrow,12)=""
				 		s @glb@(tab,"Dta",idrow,13)=""
				 		s @glb@(tab,"Dta",idrow,14)=""
				 		s @glb@(tab,"Dta",idrow,15)=""
					}
				}
			}
			k @myglblsad
		}
		k @myglb
	}
 catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TS.AUDO0075">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65692,52442.134529</TimeChanged>
<TimeCreated>65673,55153.374999</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ========================
	// vypis stridani za obdobi
	// ========================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("typ")=0 podle lidi / 1 podle aut
	// in("pracoviste",idprac)=""
	// in("os",os)=""
	// in("rz",rz)=""
	// in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb				//data
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1			//pomocny
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2			//pomocny
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglbos="^||wrk.ALVA.AD("_mywrk_")" k @myglbos			//seznam ridicu 
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    s hrlOd=$$dn^OBapiED($g(in("datumOd")))
	    s hrlDo=$$dn^OBapiED($g(in("datumDo")))
	    s paridor=1 i $g(in("typ"))=1 s paridor=2
	    s idpractx="" s idprac="" f {
		    s idprac=$o(in("pracoviste",idprac)) i idprac="" q
		    i idpractx'="" s idpractx=idpractx_", "
		    s idpractx=idpractx_idprac
	    }
	    //ciselniky
	    //jmena vsech ridicu
	    s actnmsp=$znspace
		k arri
		s arri("IdFa")=idfa
		s arri("DataNamespace")=nmsp
		s arri("GlbOut")=myglbos
		s arri("VOLANO_Z")="AGENDA"
		s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.arri,"")
		i actnmsp'=$znspace zn actnmsp
	    //
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="tabulkový přehled turnusu podle střídacích cyklů za období: "_$g(in("datumOd"))_" - "_$g(in("datumOd"))_" pracoviště: "_idpractx
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		// nactu planovaci pracoviste
		k arrlidprac s err=$$lPlnPrac^OBapiED(idfa,nmsp,"",.arrlidprac) i +err zt
		// vyhledam data
		k @myglb
		s idprac="" f {
			 s idprac=$o(arrlidprac("arr",idprac)) i idprac="" q
		 	 i $d(in("pracoviste")) i '$d(in("pracoviste",idprac)) continue
		 	 k arridprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arridprac) i +err zt
		 	 s idprv=$g(arridprac("dta",1))
		 	 k arri,@myglb1
		 	 s arri("idprac",idprac)=""
		 	 s arri("tspl",2)=hrlOd
		 	 s arri("glb")=myglb1
		 	 s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
		 	 // vstupni parametry pro vypocet stridani
		 	 k arri,@myglb2
		 	 s arri("glb")=myglb2
			 s @myglb2@("dta",1)=hrlOd 	  //(od kdy vytvorit plan)
			 s @myglb2@("dta",2)=hrlDo    //(do kdy vytvorit plan)
			 s ts="" f {
				 s ts=$o(@myglb1@(idprac,ts)) i ts="" q
				 s @myglb2@("arr",1,ts)=""
			 }
			 //vypocet stridani
			 s err=$$gScDta^OBapiED(idfa,nmsp,idprac,"",.arri,"") i +err zt
			 //promitnuti druheho ridice do globalu s vypocitanymi stridacimi daty
			 s hrl="" f {
				  s hrl=$o(@myglb2@("arr",2,hrl)) i hrl="" q
				  s idor="" f {
					  s idor=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor)) i idor="" q
			 	  	  s nidor="" f {
				 	  	  s nidor=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor)) i nidor="" q
			 	  		  s tu="" f {
				 	  		  s tu=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)) i tu="" q
			 	  		      s os2=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",8))
			 	  		   	  s @myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",8)=""
			 	  		   	  i ($g(in("typ"))=0)&(os2){
				 	  		   	  m @myglb2@("arr",2,hrl,"arr",paridor,os2,nidor,idprac,tu)=@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)		 	  		   	  
			 	  		   	  }
			 	  		   	  i ($g(in("typ"))=1)&(os2) {
				 	  		   	  m @myglb2@("arr",2,hrl,"arr",paridor,idor,os2,idprac,tu)=@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)
			 	  	  		  }
			 	  		  }
			 	  	  }
				  } 
			 }
			 s hrl="" f {
				 s hrl=$o(@myglb2@("arr",2,hrl)) i hrl="" q
			 	 s idor="" f {
				 	  s idor=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor)) i idor="" q
				 	  //filtr lidi
				 	  i ($g(in("typ"))=0)&($d(in("os")))&('$d(in("os",idor))) continue
				 	  //filtr auta
			 		  i ($g(in("typ"))=1)&($d(in("rz")))&('$d(in("rz",idor))) continue
			 		  s sortid=idor
			 		  //tridit podle jmena
					  i $g(in("typ"))=0 s sortid=$$cnvDiaInd^OBapiED($g(@myglbos@("OS",idor))_idor)
					  s nidor="" f {
						  s nidor=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor)) i nidor="" q
						  s tu="" f {
							  s tu=$o(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)) i tu="" q
					 		  s ts=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",2))
					 		  s pd=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",4))
					 		  s mm=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",5))
					 		  s km=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",6))
					 		  s kmdsp=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",7))
					 		  s ddi=$g(@myglb2@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",11))
					 		  s ddi=$p("od pulnoci~do pulnoci~od pulnoci do pulnoci","~",+ddi)
					 		  s idpol=$i(@myglb@(hrl,sortid,idor,nidor))
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",1)=tu					//turnus
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",2)=mm					//odp.hodiny
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",3)=km					//celk.km
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",4)=idprac				//pracoviste
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",5)=ts					//turnusova skupina
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",6)=pd					//provozni den
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",7)=$p(kmdsp,"~",1)		//km vni
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",8)=$p(kmdsp,"~",2)		//km dal
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",9)=$p(kmdsp,"~",3)		//km mes
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",10)=$p(kmdsp,"~",4)		//km pri
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",11)=$p(kmdsp,"~",5)		//km mez
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",12)=$p(kmdsp,"~",6)		//km sml
					 		  s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",13)=$p(kmdsp,"~",7)		//km rez
					 		 s $p(@myglb@(hrl,sortid,idor,nidor,idpol),"~",14)=ddi					//dopocet diet/
						  }
					  }
				 } 
			 }
		}
		//definice tabulky
		s tab1="main_1"
		i paridor=1 {
			s colHead="den~os~jméno~rz~turnus~hod.(mm.d)~km~plán.prac~ts~provozní den~dopočet diet"  	//hlavicky
		 	s colTyp="D~N~T~T~T~N2~T~T~T~T"							     	 							//datovy typ
		 	s colForm=">~>~<~>~>~>~>~>~>~>~>"		   							     					//zarovnani
		}
		i paridor=2 {
			s colHead="den~rz~os~řidič~turnus~hod.(mm.d)~km~plán.prac~ts~provozní den~dopočet diet"  	//hlavicky
		 	s colTyp="D~T~N~T~T~N2~N2~T~T~T~T"				     	 									//datovy typ
		 	s colForm=">~>~>~<~>~>~>~>~>~>~>"		   				     								//zarovnani
		}
		s @glb@(tab,"Format")="<"
		s @glb@(tab,"STYP")="T"
		s @glb@(tab,"Name")=nazev
		s @glb@(tab,"Index",tab1)="přehled km podle střídacích cyklů za období: "_$g(in("datumOd"))_" - "_$g(in("datumDo"))_" pracoviště: "_idpractx
		// definice sloupců
		f cnt=1:1:$l(colHead,"~") {
			s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
		 	s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
		 	s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
		}
		//definice tabulky s rozpisem km tab1
		s colHead="rz~km~km vnitro~km dálk.~km město~km příměsto~km mezin.~km smluvní~km režijní" 	   		//hlavicky
		s colTyp="T~N2~N2~N2~N2~N2~N2~N2~N2"											     				//datovy typ
		s colForm=">~>~>~>~>~>~>~>~>"																		//zarovnani
		s colSkryt="~~2~2~2~2~2~2~2"
		s @glb@(tab1,"Format")="<"
		s @glb@(tab1,"STYP")="T"											 								//tabulka (Table)
		s @glb@(tab1,"Name")="přehled km podle střídacích cyklů za období: "_$g(in("datumOd"))_" - "_$g(in("datumDo"))_" pracoviště: "_idpractx
		s @glb@(tab1,"Index",tab)=nazev
		// definice sloupců
		f cnt=1:1:$l(colHead,"~") {
			s @glb@(tab1,"SL",cnt)=$p(colHead,"~",cnt)
		 	s @glb@(tab1,"SL",cnt,"Format")=$p(colForm,"~",cnt)
		 	s @glb@(tab1,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
		 	i +$p(colSkryt,"~",cnt) s @glb@(tab1,"SL",+$p(colSkryt,"~",cnt),"Skryt",cnt)=""
		}
		f hrl=hrlOd:1:hrlDo {
			// datum
		 	s dat=$$nd^OBapiED(hrl,0)
		 	// den
		 	s day=$$ntd^OBapiED(hrl)
		 	//sloupec obdobi
		 	s idcolm=$$grrrrmmfromhrl^OBapiED(hrl)
		 	i '$d(@glb@(tab1,"SL",idcolm)) {
			 	s @glb@(tab1,"SL",idcolm)="km "_idcolm
		 		s @glb@(tab1,"SL",idcolm,"Format")=">"
		 		s @glb@(tab1,"SL",idcolm,"Typ")="N2"
		 	}
		 	//sloupec obdobi-den
			s idcold=(idcolm+($p(dat,".",1)/100))
		 	i '$d(@glb@(tab1,"SL",idcold)) {
			 	s @glb@(tab1,"SL",idcold)=$p(dat,".",1,2)_"."_day
		 		i (day="So")!(day="Ne") s @glb@(tab1,"SL",idcold,"Priorita")=1
		 		s @glb@(tab1,"SL",idcold,"Format")=">"
		 		s @glb@(tab1,"SL",idcold,"Typ")="N2"
		 		s @glb@(tab1,"SL",idcolm,"Skryt",idcold)=""
		 	}
		}
		// ============
		// data tabulek
		// ============
		s hrl="" f {
			s hrl=$o(@myglb@(hrl)) i hrl="" q
		 	// datum
		 	s dat=$$nd^OBapiED(hrl,0)
		 	// den
		 	s day=$$ntd^OBapiED(hrl)
		 	//sloupec obdobi
		 	s idcolm=$$grrrrmmfromhrl^OBapiED(hrl)
		 	//sloupec obdobi-den
		 	s idcold=(idcolm+($p(dat,".",1)/100))
		 	//
		 	s sortid="" f {
			 	s sortid=$o(@myglb@(hrl,sortid)) i sortid="" q
		 		s idor="" f {
			 		s idor=$o(@myglb@(hrl,sortid,idor)) i idor="" q
			 		s nidor="" f {
				 		 s nidor=$o(@myglb@(hrl,sortid,idor,nidor)) i nidor="" q
		 			     s idpol="" f {
			 			     s idpol=$o(@myglb@(hrl,sortid,idor,nidor,idpol)) i idpol="" q
		 				     s val=$g(@myglb@(hrl,sortid,idor,nidor,idpol))
					 		 s jm=""
					 		 i $g(in("typ"))=0 {
						 		 // konverze idor na jmeno
					 			 s jm=$g(@myglbos@("OS",idor))
					 		 }
					 		 i $g(in("typ"))=1 {
						 		 // konverze nidor na jmeno
					 			 s jm=$g(@myglbos@("OS",nidor))
					 		 }
					 		 //tabulka tab
					 		 s idrow=$i(@glb@(tab,"RD"))
					 		 s @glb@(tab,"RD",idrow)=""
					 		 s @glb@(tab,"Dta",idrow,1)=$$nd^OBapiED(hrl,0)
					 		 i $g(in("typ"))=0 {
						 		 s @glb@(tab,"Dta",idrow,2)=idor
					 		     s @glb@(tab,"Dta",idrow,3)=jm
					 		     s @glb@(tab,"Dta",idrow,4)=nidor
					 		 }
					 		 i $g(in("typ"))=1 {
						 		 s @glb@(tab,"Dta",idrow,2)=idor
					 		     s @glb@(tab,"Dta",idrow,3)=nidor
					 		     s @glb@(tab,"Dta",idrow,4)=jm
					 		 }
					 		 s @glb@(tab,"Dta",idrow,5)=$p(val,"~",1)
					 		 s @glb@(tab,"Dta",idrow,6)=$$mc^OBapiED($p(val,"~",2))
					 		 s @glb@(tab,"Dta",idrow,7)=$p(val,"~",3)
					 		 s @glb@(tab,"Dta",idrow,8)=$p(val,"~",4)
					 		 s @glb@(tab,"Dta",idrow,9)=$p(val,"~",5)
					 		 s @glb@(tab,"Dta",idrow,10)=$p(val,"~",6)
					 		 s @glb@(tab,"Dta",idrow,11)=$p(val,"~",14)
					 		 //tabulka tab1
					 		 i $g(paridor)=1 s rz=nidor
					 		 i $g(paridor)=2 s rz=idor
					 		 i rz="" s rz="-"
					 		 s idrow=rz
					 		 s @glb@(tab1,"RD",idrow)=""
					 		 s @glb@(tab1,"Dta",idrow,1)=rz
					 		 s @glb@(tab1,"Dta",idrow,2)=$g(@glb@(tab1,"Dta",idrow,2))+$p(val,"~",3)
					 		 s @glb@(tab1,"Dta",idrow,3)=$g(@glb@(tab1,"Dta",idrow,3))+$p(val,"~",7)
					 		 s @glb@(tab1,"Dta",idrow,4)=$g(@glb@(tab1,"Dta",idrow,4))+$p(val,"~",8)
					 		 s @glb@(tab1,"Dta",idrow,5)=$g(@glb@(tab1,"Dta",idrow,5))+$p(val,"~",9)
					 		 s @glb@(tab1,"Dta",idrow,6)=$g(@glb@(tab1,"Dta",idrow,6))+$p(val,"~",10)
					 		 s @glb@(tab1,"Dta",idrow,7)=$g(@glb@(tab1,"Dta",idrow,7))+$p(val,"~",11)
					 		 s @glb@(tab1,"Dta",idrow,8)=$g(@glb@(tab1,"Dta",idrow,8))+$p(val,"~",12)
					 		 s @glb@(tab1,"Dta",idrow,9)=$g(@glb@(tab1,"Dta",idrow,9))+$p(val,"~",13)
					 		 s @glb@(tab1,"Dta",idrow,idcolm)=$g(@glb@(tab1,"Dta",idrow,idcolm))+$p(val,"~",3)
					 		 s @glb@(tab1,"Dta",idrow,idcold)=$g(@glb@(tab1,"Dta",idrow,idcold))+$p(val,"~",3)
		 			     } 
			 		}
		 		}		 
			}
		}
		k @myglb k @myglb1 k @myglb2 k @myglbos		
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TS.AUDO0076">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65682,58053.270486</TimeChanged>
<TimeCreated>65674,49069.210423</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================
	// kontrola stridani v obdobi
	// ==========================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("pracoviste",idprac)=""
	// in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb				//data
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1			//pomocny
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2			//pomocny
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglbos="^||wrk.ALVA.AD("_mywrk_")" k @myglbos			//seznam ridicu 
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    s hrlOd=$$dn^OBapiED($g(in("datumOd")))
	    s hrlDo=$$dn^OBapiED($g(in("datumDo")))
	    s idpractx="" s idprac="" f {
		    s idprac=$o(in("pracoviste",idprac)) i idprac="" q
		    i idpractx'="" s idpractx=idpractx_", "
		    s idpractx=idpractx_idprac
	    }
	    //ciselniky
	    //jmena vsech ridicu
	    s actnmsp=$znspace
		k arri
		s arri("IdFa")=idfa
		s arri("DataNamespace")=nmsp
		s arri("GlbOut")=myglbos
		s arri("VOLANO_Z")="AGENDA"
		s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.arri,"")
		i actnmsp'=$znspace zn actnmsp
	    //
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="kontrola střídání řidičů a vozidel podle střídacích cyklů za období: "_$g(in("datumOd"))_" - "_$g(in("datumOd"))_" pracoviště: "_idpractx
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		// nactu planovaci pracoviste
		
		k arrlidprac s err=$$lPlnPrac^OBapiED(idfa,nmsp,"",.arrlidprac) i +err zt
		// vyhledam data
		k @myglb
		s idprac="" f {
			 s idprac=$o(arrlidprac("arr",idprac)) i idprac="" q
		 	 i $d(in("pracoviste")) i '$d(in("pracoviste",idprac)) continue
		 	 k arridprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arridprac) i +err zt
		 	 s idprv=$g(arridprac("dta",1))
		 	 s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
		 	 k arri,@myglb1
		 	 s arri("idprac",idprac)=""
		 	 s arri("tspl",2)=hrlOd
		 	 s arri("glb")=myglb1
		 	 s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
		 	 // vstupni parametry pro vypocet stridani
		 	 k arri,@myglb2
		 	 s arri("glb")=myglb2
			 s @myglb2@("dta",1)=hrlOd 	  //(od kdy vytvorit plan)
			 s @myglb2@("dta",2)=hrlDo    //(do kdy vytvorit plan)
			 s ts="" f {
				 s ts=$o(@myglb1@(idprac,ts)) i ts="" q
				 s @myglb2@("arr",1,ts)=""
			 }
			 //vypocet stridani
			 s err=$$gScDta^OBapiED(idfa,nmsp,idprac,"",.arri,"") i +err zt
			 //promitnuti druheho ridice do globalu s vypocitanymi stridacimi daty
			 s hrl="" f {
				  s hrl=$o(@myglb2@("arr",2,hrl)) i hrl="" q
				  s os="" f {
					  s os=$o(@myglb2@("arr",2,hrl,"arr",1,os)) i os="" q
			 	  	  s rz="" f {
				 	  	  s rz=$o(@myglb2@("arr",2,hrl,"arr",1,os,rz)) i rz="" q
			 	  		  s tu="" f {
				 	  		  s tu=$o(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu)) i tu="" q
			 	  		      s os2=$g(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",8))
			 	  		   	  s @myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",8)=""
			 	  		   	  i os2{
				 	  		   	  m @myglb2@("arr",2,hrl,"arr",1,os2,rz,idprac,tu)=@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu)		 	  		   	  
			 	  		   	  }
			 	  		  }
			 	  	  }
				  } 
			 }
			 //pole jizd po minute
			 s hrl="" f {
				 s hrl=$o(@myglb2@("arr",2,hrl)) i hrl="" q
			 	 s os="" f {
				 	  s os=$o(@myglb2@("arr",2,hrl,"arr",1,os)) i os="" q
				 	  s sortid=$$cnvDiaInd^OBapiED($g(@myglbos@("OS",os))_os)
					  s rz="" f {
						  s rz=$o(@myglb2@("arr",2,hrl,"arr",1,os,rz)) i rz="" q
						  s tu="" f {
							  s tu=$o(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu)) i tu="" q
					 		  s ts=$g(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",2))
					 		  s pd=$g(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",4))
					 		  s mm=$g(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",5))
					 		  s km=$g(@myglb2@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",6))
					 		  //data turnusu
					 		  s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) i +err zt
 							  s minod=$$hm^OBapiED($g(arrtu("dta",5)))
 							  s mindo=$$hm^OBapiED($g(arrtu("dta",6)))
 							  s dnu=+$g(arrtu("dta",4)) i 'dnu s dnu=1
 							  s mindo=mindo+(1440*(dnu-1))
 							  s ridicu=+$g(arrtu("arr","drv","dta",1))
					 		  //
					 		  f min=minod:1:mindo {
						 		  s idx=$$wrapHrlMm^OBapiED(hrl,min) 
						 		  s @myglb@(1,os,idx,$lb(idprv,tu))=$lb(idprac,ts,pd,rz)
						 		  s @myglb@(2,rz,idx,$lb(idprv,tu))=$lb(idprac,ts,pd,os)
					 		  }
						  }
					  }
				 } 
			 }
		}
		k @myglb1,@myglb2
		//vyhledani duplicit
		f typdat=1,2 {
			s idx1="" f {
				s idx1=$o(@myglb@(typdat,idx1)) i idx1="" q
				s idx2="" f {
					s idx2=$o(@myglb@(typdat,idx1,idx2)) i idx2="" q
					s cnt=0
					s idx3="" f {
						s idx3=$o(@myglb@(typdat,idx1,idx2,idx3)) i idx3="" q
						s cnt=cnt+1
					}
					i cnt<2 k @myglb@(typdat,idx1,idx2)
				}
			}
		}
		//definice tabulky
		//         1     2      3      4     5  6     7  8     
		s colHead="datum~čas od~čas do~chyba~os~jméno~rz~turnus"
 		s colTyp="D~T~T~T~N~T~T~T"
 		s colForm=">~>~>~<~>~<~>~<"
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		// definice sloupců
 		f cnt=1:1:$l(colHead,"~") {
	 		s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
		//duplicity do tabulky
		f typdat=1,2 {
			s idx1="" f {
				s idx1=$o(@myglb@(typdat,idx1)) i idx1="" q
				s idx2="" f {
					s idx2=$o(@myglb@(typdat,idx1,idx2)) i idx2="" q
					k myidx
					//od
					s myidx(1)=idx2
					//turnusy
					m myidx(3)=@myglb@(typdat,idx1,idx2)
					//pokracovani
					f myidx=idx2:1 {
						i '$d(@myglb@(typdat,idx1,myidx)) q
						s myidx(2)=myidx
						m myidx(3)=@myglb@(typdat,idx1,myidx)
						s idx2=myidx
					}
					s idrow=$i(@glb@(tab,"RD"))
					s hrlminod=$g(myidx(1)) s mytimeod=$$unwrapHrlMm^OBapiED(hrlminod) 
					s hrlmindo=$g(myidx(2)) s mytimedo=$$unwrapHrlMm^OBapiED(hrlmindo) 
					s tutx=""
					s myidx="" f {
						s myidx=$o(myidx(3,myidx)) i myidx="" q
						s idprv=$lg(myidx,1)
						s tu=$lg(myidx,2)
						s val=$g(myidx(3,myidx))
						s idprac=$lg(val,1)
						s ts=$lg(val,2)
						s pd=$lg(val,3)
						s rzos=$lg(val,4)	
						i tutx'="" s tutx=tutx_"; "
						s tutx=tutx_tu_" (prov="_idprv_","_"prac="_idprac_","_"ts="_ts_","_"pd="_pd
						i typdat=1 {
							s tutx=tutx_","_"rz="_rzos_")"
						}
						i typdat=2 {
							s tutx=tutx_","_"os="_rzos_"/"_$g(@myglbos@("OS",rzos))_")"
						}
					}
					//datum~čas od~čas do~chyba~os~jméno~rz~turnus"
					i typdat=1 {
						s @glb@(tab,"RD",idrow)=""
						s @glb@(tab,"Dta",idrow,1)=$$nd^OBapiED($p($g(mytimeod),"~",1),0)
 						s @glb@(tab,"Dta",idrow,2)=$tr($j($$mh^OBapiED($p($g(mytimeod),"~",2)),0,2),".",":")
 						s @glb@(tab,"Dta",idrow,3)=$tr($j($$mh^OBapiED($p($g(mytimedo),"~",2)),0,2),".",":")
 						s @glb@(tab,"Dta",idrow,4)="překrytí turnusu pro řidiče"
 						s @glb@(tab,"Dta",idrow,5)=idx1
 						s @glb@(tab,"Dta",idrow,6)=$g(@myglbos@("OS",idx1))
 						s @glb@(tab,"Dta",idrow,7)=""
 						s @glb@(tab,"Dta",idrow,8)=tutx
					}
					i typdat=2 {
						s @glb@(tab,"RD",idrow)=""
						s @glb@(tab,"Dta",idrow,1)=$$nd^OBapiED($p($g(mytimeod),"~",1),0)
 						s @glb@(tab,"Dta",idrow,2)=$tr($j($$mh^OBapiED($p($g(mytimeod),"~",2)),0,2),".",":")
 						s @glb@(tab,"Dta",idrow,3)=$tr($j($$mh^OBapiED($p($g(mytimedo),"~",2)),0,2),".",":")
 						s @glb@(tab,"Dta",idrow,4)="překrytí turnusu pro vozidlo"
 						s @glb@(tab,"Dta",idrow,5)=""
 						s @glb@(tab,"Dta",idrow,6)=""
 						s @glb@(tab,"Dta",idrow,7)=idx1
 						s @glb@(tab,"Dta",idrow,8)=tutx
					}
				}
			}
		}
		k @myglb					
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TS.AUDO0125">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65692,53290.910087</TimeChanged>
<TimeCreated>65668,49168.777482</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==============
	// zakladni udaje
	// ==============
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("pracoviste",idprac)=""
	// in("datum")=dd.mm.rrrr
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglbos="^||wrk.ALVA.AD("_mywrk_")" k @myglbos			//seznam ridicu 
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    s hrl=$$dn^OBapiED($g(in("datum")))
	    s idpractx="" s idprac="" f {
		    s idprac=$o(in("pracoviste",idprac)) i idprac="" q
		    i idpractx'="" s idpractx=idpractx_", "
		    s idpractx=idpractx_idprac
	    }
	    //ciselniky
	    //jmena vsech ridicu
	    s actnmsp=$znspace
		k arri
		s arri("IdFa")=idfa
		s arri("DataNamespace")=nmsp
		s arri("GlbOut")=myglbos
		s arri("VOLANO_Z")="AGENDA"
		s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.arri,"")
		i actnmsp'=$znspace zn actnmsp
	    //
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="turnusové skupiny pracoviště: "_idpractx_" čas.varianta: "_$$nd^OBapiED(hrl,0)
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestava - zakladni udaje
		s colHead="pracoviště~ts~čas.var.~osč~řidič~rz~evč~turnus~prov.den"
 		s colTyp="T~T~D~T~T~T~T~T~T"
 		s colForm=">~>~>~>~<~>~>~>~>"
 		//
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		s @glb@(tab,"Name")=nazev
 		// definice sloupců
 		f cnt=1:1:$l(colHead,"~") {
	 		s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
 		//===========
		//dostupne ts
		//===========
 		k arri
 		m arri("idprac")=in("pracoviste")
 		s arri("tspl",1)=hrl
 		s arri("glb")=myglb
 		s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
 		s idprac="" f {
	 		s idprac=$o(@myglb@(idprac)) i idprac="" q
	 		s idts="" f {
				s idts=$o(@myglb@(idprac,idts)) i idts="" q
				s hrlts="" f {
					s hrlts=$o(@myglb@(idprac,idts,hrlts)) i hrlts="" q
					s ts=$g(@myglb@(idprac,idts,hrlts,"dta",1))
					k arrts s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrlts,"",.arrts) i +err zt
					k tarr
					//ridici
					s cnt="" s row="" f {
						s cnt=$o(arrts("arr",1,cnt)) i cnt="" q
						s os=$g(arrts("arr",1,cnt,"dta",1))
						s jm=$g(@myglbos@("OS",os))
						s row=$i(row)
						s $p(tarr(row),"~",1)=os
						s $p(tarr(row),"~",2)=jm
					}
					//vozidla
					s cnt="" s row="" f {
						s cnt=$o(arrts("arr",2,cnt)) i cnt="" q
						s rz=$g(arrts("arr",2,cnt,"dta",1))
						s evc="" i rz'="" s evc=$$VehicleGetEvc^ALVAVOZIDLAapiC(sysnmsp,rz)
						s row=$i(row)
						s $p(tarr(row),"~",3)=rz
						s $p(tarr(row),"~",4)=evc
					}
					//turnusy
					k turarr
					s idpd="" f {
						s idpd=$o(arrts("arr",3,idpd)) i idpd="" q
						s idtu="" f {
							s idtu=$o(arrts("arr",3,idpd,"arr",1,idtu)) i idtu="" q
							s turarr(idtu,idpd)=""
						}
					}
					s row=0
					s idtu="" f {
						s idtu=$o(turarr(idtu)) i idtu="" q
						s txpd=""
						s idpd="" f {
							s idpd=$o(turarr(idtu,idpd)) i idpd="" q
							i txpd'="" s txpd=txpd_","
							s txpd=txpd_$g(arrts("arr",3,idpd,"dta",1))
						}
						s row=$i(row)
						s $p(tarr(row),"~",5)=idtu
						s $p(tarr(row),"~",6)=txpd
					}
					k turarr
					//zapis do tabulky
					s cnt="" f {
						s cnt=$o(tarr(cnt)) i cnt="" q
						s val=$g(tarr(cnt))
						s idrow=$i(@glb@(tab,"RD"))
						//ts~čas.var.~osč~řidič~rz~evč~turnus~prov.den
						s @glb@(tab,"RD",idrow)=""
						s @glb@(tab,"Dta",idrow,1)=idprac
 						s @glb@(tab,"Dta",idrow,2)=ts
 						s @glb@(tab,"Dta",idrow,3)=$$nd^OBapiED(hrlts,0)
 						s @glb@(tab,"Dta",idrow,4)=$p(val,"~",1)
 						s @glb@(tab,"Dta",idrow,5)=$p(val,"~",2)
 						s @glb@(tab,"Dta",idrow,6)=$p(val,"~",3)
 						s @glb@(tab,"Dta",idrow,7)=$p(val,"~",4)
 						s @glb@(tab,"Dta",idrow,8)=$p(val,"~",5)
 						s @glb@(tab,"Dta",idrow,9)=$p(val,"~",6)
					}
				}
			}	 		
 		}
		k @myglb k @myglbos
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TS.AUDODT01">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65696,40814.860878</TimeChanged>
<TimeCreated>65694,47367.721306</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// =============================================================================
	// vypis (kontrola) stridani za obdobi v navrhu ts, do fce prijdou porizena data 
	// =============================================================================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("pracoviste")=idprac
	// in("datumOd")=dd.mm.rrrr (datum pro vypocet stridani od)
	// in("datumDo")=dd.mm.rrrr (datum pro vypocet stridani do)
	// in("dta",...)= data ts, stejne jako do Set
	// in("datum")=dd.mm.rrrr datum casove varianty od pro ts
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglbos="^||wrk.ALVA.AD("_mywrk_")" k @myglbos			//seznam ridicu 
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //data ts
	    k arrts m arrts=in("dta")
	    s hrlod=$$dn^OBapiED($g(in("datumOd")))
	    s hrldo=$$dn^OBapiED($g(in("datumDo")))
	    s idprac=$g(in("pracoviste"))
	    s hrltsod="" i $g(in("datum"))'="" s hrltsod=$$dn^OBapiED($g(in("datum")))
	    i hrltsod="" s hrltsod=hrlod
	    s hrltsdo=$g(arrts("dta",2))
	    s nazev=$g(arrts("dta",1))
	    //ciselniky
	    //jmena vsech ridicu
	    s actnmsp=$znspace
		k arri
		s arri("IdFa")=idfa
		s arri("DataNamespace")=nmsp
		s arri("GlbOut")=myglbos
		s arri("VOLANO_Z")="AGENDA"
		s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.arri,"")
		i actnmsp'=$znspace zn actnmsp
		//vypocet stridani
		// vstupni parametry pro vypocet stridani
		k arri,@myglb
		s arri("glb")=myglb
		s @myglb@("dta",1)=hrlod i (+hrltsod)&(hrlod<hrltsod) s @myglb@("dta",1)=hrltsod	//(od kdy vytvorit plan)
		s @myglb@("dta",2)=hrldo i (+hrltsdo)&(hrldo>hrltsdo) s @myglb@("dta",2)=hrltsdo    //(do kdy vytvorit plan)
		s @myglb@("arr",1,1,hrltsod,"dta",1)=@myglb@("dta",1)
		s @myglb@("arr",1,1,hrltsod,"dta",2)=@myglb@("dta",2)
 		m @myglb@("arr",1,1,hrltsod,"arr",1)=arrts
		//vypocet stridani
		s err=$$gScDta^OBapiED(idfa,nmsp,idprac,"",.arri,"") i +err zt
		//promitnuti druheho ridice do globalu s vypocitanymi stridacimi daty
		s hrl="" f {
			s hrl=$o(@myglb@("arr",2,hrl)) i hrl="" q
			s os="" f {
				s os=$o(@myglb@("arr",2,hrl,"arr",1,os)) i os="" q
			 	s rz="" f {
				 	s rz=$o(@myglb@("arr",2,hrl,"arr",1,os,rz)) i rz="" q
			 	    s tu="" f {
				 	    s tu=$o(@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu)) i tu="" q
			 	  		s os2=$g(@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",8))
			 	  		s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",8)=""
			 	  		i os2{
				 	  		m @myglb@("arr",2,hrl,"arr",1,os2,rz,idprac,tu)=@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu)		 	  		   	  
			 	  		}
			 	    }
			 	}
		    } 
		}
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="výpis střídání turnusové skupiny "_nazev_ ", pracoviště: "_idprac_", čas.varianta: "_$g(in("datum"))
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestava - zakladni udaje
		s colHead="os~jméno~hodiny|celkem~km|celkem"
 		s colTyp="N~T~T~N"
 		s colForm=">~<~>~>"
 		//
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		s @glb@(tab,"Name")=nazev
 		// definice sloupců
 		f cnt=1:1:$l(colHead,"~") {
	 		s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED($p(colHead,"~",cnt),"|",$c(13,10))
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
 		//doplnim dny
 		f hrl=hrlod:1:hrldo {
	 		s @glb@(tab,"SL",hrl)=$$nd^OBapiED(hrl,1)_$c(13,10)_$$ntd^OBapiED(hrl)
 			s @glb@(tab,"SL",hrl,"Format")="T"
 			s @glb@(tab,"SL",hrl,"Typ")="<"
 			i (hrl+3#7+1)>5 s @glb@(tab,"SL",hrl,"Priorita")=1
 		}
 		//data do tabulky
 		s hrl="" f {
			s hrl=$o(@myglb@("arr",2,hrl)) i hrl="" q
			s os="" f {
				s os=$o(@myglb@("arr",2,hrl,"arr",1,os)) i os="" q
				s jmeno=$g(@myglbos@("OS",os))
			 	s rz="" f {
				 	s rz=$o(@myglb@("arr",2,hrl,"arr",1,os,rz)) i rz="" q
			 	    s tu="" f {
				 	    s tu=$o(@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu)) i tu="" q
				 	    s min=$g(@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",5))
				 	    s km=$g(@myglb@("arr",2,hrl,"arr",1,os,rz,idprac,tu,"dta",6))
				 	    s idrow=os
				 	    s @glb@(tab,"RD",idrow)=""
						s @glb@(tab,"Dta",idrow,1)=os
						s @glb@(tab,"Dta",idrow,2)=jmeno
						s @glb@(tab,"Dta",idrow,3)=$g(@glb@(tab,"Dta",idrow,3))+min
						s @glb@(tab,"Dta",idrow,4)=$g(@glb@(tab,"Dta",idrow,4))+km
						s myval=$g(@glb@(tab,"Dta",idrow,hrl))
						i myval'="" s myval=myval_","
						s evc=##class(ALVA.VOZIDLA.MLAPI).VehicleGetEvc(sysnmsp,rz) i evc<0 s evc=""
						i evc="" s evc=rz
						s myval=myval_tu_"/"_evc
						s @glb@(tab,"Dta",idrow,hrl)=myval
			 	    }
			 	}
			}
 		}
 		//konverze min na hh.mm
 		s idrow="" f {
	 		s idrow=$o(@glb@(tab,"RD",idrow)) i idrow="" q
	 		s @glb@(tab,"Dta",idrow,3)=$tr($j($$mh^OBapiED($g(@glb@(tab,"Dta",idrow,3))),0,2),".",":")
 		} 
		k @myglb k @myglbos
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TS.AUDOEX01">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65686,47957.210127</TimeChanged>
<TimeCreated>65679,50271.264756</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==============
	// zakladni udaje
	// ==============
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("provoz",idprv)=""			... omezeni na provoz
	// in("pracoviste",idprac)=""		... omezeni na vybrana pracoviste
	// in("os",os)=""					... omezeni na ridice
	// in("rz",rz)=""					... omezeni na vozidla
	// in("datumOd")=dd.mm.rrrr			... obdobi od
	// in("datumDo")=dd.mm.rrrr			... obdobi do
	// in("typ")=						... 0 podle lidi / 1 podle aut
	// in("radit")=						... 0 podle jmena,RZ / 1 podle TS,jmena,rz / 2 TS,poradi v TS jmeno,rz
	// in("mzda")=						... 0/1 tisk mzdy
	// in("detail")=					... 0/1 zobrazit detail v bunce (podle os tisk rz a naopak) 
	// VYSTUP:
	// out("idx")=idx
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb3="^||wrk.ALVA.AD("_mywrk_")" k @myglb3
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglbos="^||wrk.ALVA.AD("_mywrk_")" k @myglbos
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //ciselniky
	    //jmena vsech ridicu
		k arri
		s arri("IdFa")=idfa
		s arri("DataNamespace")=nmsp
		s arri("GlbOut")=myglbos
		s arri("VOLANO_Z")="AGENDA"
		s err=##class(ALVA.MZDY.Ridici).LoadZamListFast(.arri,"")
		//mzdove nastaveni
		k arrmzdset s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzdset) i +err zt
	    //sestava
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
 		s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltisk"""_")"
        s nazev="střídací cykly pro období :"_$g(in("datumOd"))_" - "_$g(in("datumDo"))
        s ^CacheTempSS(wrkSS,"OUT","pageHeader")=nazev
 		s ^CacheTempSS(wrkSS,"OUT","pageFooter")="M-line EDISON"
 		s ^CacheTempSS(wrkSS,"OUT","tbColDelim")="~"
        s out("idx")=wrkSS
        s out("tab")="main"
		s out("nazev")=nazev
		//data
		s hrlOd=$$dn^OBapiED($g(in("datumOd")))
		s hrlDo=$$dn^OBapiED($g(in("datumDo")))
		s dz=$$gFaDz^OBapiED(idfa) 
		s fondmode=+$g(arrmzdset("arr",0,9)) k arrmzdset
		// pocet pracovnich dni (pro hrlod - do)
		s ddfond=##class(ALVA.MZDY.MLAPI).PocetPracDniOdDoH(hrlOd,hrlDo)
		// fond se pocita podle kalendarnich dni
		i fondmode s ddfond=(hrlDo-hrlOd+1) 
		// nactu planovaci pracoviste
		k arrlidprac s err=$$lPlnPrac^OBapiED(idfa,nmsp,"",.arrlidprac) i +err zt
		// vyhledam data
		s wrk=$$gWrkJB^OBapiED()
		s paridor=1 s:$g(in("typ"))=1 paridor=2
		s idprac="" f  s idprac=$o(arrlidprac("arr",idprac)) q:idprac=""  d
		.i $d(in("pracoviste",2)) q:'$d(in("pracoviste",idprac))
		.k arridprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arridprac) i +err zt
		.s idprv=$g(arridprac("dta",1))
		.i $d(in("provoz",1)) q:'$d(in("provoz",idprv))
		.k arri
		.s arri("idprac",idprac)=""
		.s arri("tspl",2)=hrlOd
		.s arri("glb")=myglb1 k @myglb1
		.s err=$$lScTS^OBapiED(idfa,nmsp,.arri,"") i +err zt
		.// vstupni parametry pro vypocet stridani
		.k @myglb
		.s @myglb@("dta",1)=hrlOd    //(od kdy vytvorit plan)
		.s @myglb@("dta",2)=hrlDo    //(do kdy vytvorit plan)
		.s ts="" f  s ts=$o(@myglb1@(idprac,ts)) q:ts=""  s @myglb@("arr",1,ts)=""
		.k @myglb1
		.// vypocet stridani
		.k arri s arri("glb")=myglb
		.s err=$$gScDta^OBapiED(idfa,nmsp,idprac,"",.arri,"") i +err zt
		.//promitnuti druheho ridice do globalu s vypocitanymi stridacimi daty
		.s hrl="" f  s hrl=$o(@myglb@("arr",2,hrl)) q:hrl=""  d
		..s idor="" f  s idor=$o(@myglb@("arr",2,hrl,"arr",paridor,idor)) q:idor=""  d
		...s nidor="" f  s nidor=$o(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor)) q:nidor=""  d
		....s tu="" f  s tu=$o(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)) q:tu=""  d
		.....s os2=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",8))
		.....s @myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",8)=""
		.....//podle lidi
		.....i ($g(in("typ"))=0)&(os2) m @myglb@("arr",2,hrl,"arr",paridor,os2,nidor,idprac,tu)=@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)
		.....//podle aut
		.....i ($g(in("typ"))=1)&(os2) d
		......m @myglb@("arr",2,hrl,"arr",paridor,idor,os2,idprac,tu)=@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)
		......s @myglb@("arr",2,hrl,"arr",paridor,idor,os2,idprac,tu,"dta",5)=""	//pro auta vymazu hodiny
		......s @myglb@("arr",2,hrl,"arr",paridor,idor,os2,idprac,tu,"dta",6)=""  //pro auta vymazu km
		......s @myglb@("arr",2,hrl,"arr",paridor,idor,os2,idprac,tu,"dta",7)=""  //pro auta vymazu km
		.// ======================================================================================= 
		.s hrl="" f  s hrl=$o(@myglb@("arr",2,hrl)) q:hrl=""  d
		..s idor="" f  s idor=$o(@myglb@("arr",2,hrl,"arr",paridor,idor)) q:idor=""  d
		...i $g(in("typ"))=0 i $d(in("os",4)) q:'$d(in("os",idor)) //filtr lidi
		...i $g(in("typ"))=1 i $d(in("rz",3)) q:'$d(in("rz",idor)) //filtr auta
		...s nidor="" f  s nidor=$o(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor)) q:nidor=""  d
		....s desc=nidor
		....i $g(in("typ"))=1 d
		.....;; konverze nidor na jmeno
		.....s desc=$p($g(@myglbos@("OS",nidor))," ",1)_" "_$e($p($g(@myglbos@("OS",nidor))," ",2),1)_"."
		....s tu="" f  s tu=$o(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu)) q:tu=""  d
		.....s idts=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",1))
		.....s dsts=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",2))
		.....s mm=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",5))
		.....s km=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",6))
		.....s mzd=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",9))
		.....s die=$g(@myglb@("arr",2,hrl,"arr",paridor,idor,nidor,idprac,tu,"dta",10))
		.....s iddoc=$i(@myglb2@("t",idor,hrl,1))
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",1)=hrl
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",2)=1
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",3)=desc
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",4)=tu
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",5)=mm
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",6)=km
		.....s @myglb2@("t",idor,hrl,1,iddoc,"dta",7)=0
		.....// hodiny celkem
		.....s $p(@myglb2@("t",idor),"~",1)=$p($g(@myglb2@("t",idor)),"~",1)+mm
		.....// km celkem
		.....s $p(@myglb2@("t",idor),"~",2)=$p($g(@myglb2@("t",idor)),"~",2)+km
		.....// mzda celkem
		.....s $p(@myglb2@("t",idor),"~",11)=$p($g(@myglb2@("t",idor)),"~",11)+mzd
		.....// diety celkem
		.....s $p(@myglb2@("t",idor),"~",12)=$p($g(@myglb2@("t",idor)),"~",12)+die
		.....// turnusova skupina
		.....s $p(@myglb2@("t",idor),"~",8)=dsts
		.....s $p(@myglb2@("t",idor),"~",9)=idts
		.....s $p(@myglb2@("t",idor),"~",10)=idprac
		.k @myglb
		// maximalni pocet dokladu
		s idor="" f  s idor=$o(@myglb2@("t",idor)) q:idor=""  d
		.s $p(@myglb2@("t",idor),"~",3)=1
		.s hrl="" f  s hrl=$o(@myglb2@("t",idor,hrl)) q:(hrl="")  d
		..s pcdoc=0
		..s typdoc="" f  s typdoc=$o(@myglb2@("t",idor,hrl,typdoc)) q:typdoc=""  d
		...s iddoc="" f  s iddoc=$o(@myglb2@("t",idor,hrl,typdoc,iddoc)) q:iddoc=""  d
		....s pcdoc=pcdoc+1
		..i $p($g(@myglb2@("t",idor)),"~",3)<pcdoc s $p(@myglb2@("t",idor),"~",3)=pcdoc
		// setrideni sestavy
		s idor="" f  s idor=$o(@myglb2@("t",idor)) q:idor=""  d
		.// data ridice / auta
		.k arror
		.i '$g(in("typ")) s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrlDo,idor,"",.arror) ;;i +err zt
		.i +$g(in("typ")) s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrlDo,idor,"",.arror) ;;i +err zt
		.s idsort=" " s dsts=" " s pozts=" "
		.// razeni dle rz/jmena
		.s idsort=idor i '$g(in("typ")) s idsort=$$cnvDiaInd^OBapiED($g(arror("dta",1))_idor)
		.// razeni dle ts
		.i +$g(in("radit"))=1 d
		..s dsts=$p($g(@myglb2@("t",idor)),"~",8) s:dsts="" dsts=" "
		.// razeni dle ts, dle poradi rz/osc v ts
		.i +$g(in("radit"))=2 d
		..s dsts=$p($g(@myglb2@("t",idor)),"~",8) s:dsts="" dsts=" "
		..s idts=$p($g(@myglb2@("t",idor)),"~",9)
		..s idprac=$p($g(@myglb2@("t",idor)),"~",10)
		..// poradi v ts
		..s pozts=""
		..i (idprac'="")&(idts'="") d
		...k hrlts s err=$$gTimeVariantScTS^OBapiED(idfa,nmsp,idprac,idts,hrlDo,"",.hrlts) i +err zt
		...i hrlts="" q
		...k arrscts s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrlts,"",.arrscts) i +err zt
		...s iddta=1 s:$g(in("typ")) iddta=2
		...s cnt="" f  s cnt=$o(arrscts("arr",iddta,cnt)) q:(cnt="")!(pozts'="")  d
		....s:$g(arrscts("arr",iddta,cnt,"dta",1))=idor pozts=cnt
		...k arrscts
		..s:pozts="" pozts=" "
		.i '$g(in("typ")) s @myglb3@(dsts,pozts,idsort)=idor_"~"_$g(arror("dta",1))_"~"_$g(arror("dta",4))_"~"_$g(arror("dta",7))
		.i +$g(in("typ")) s @myglb3@(dsts,pozts,idsort)=idor_"~"_idor_"~"_$g(arror("dta",4))
		//prevod do excelu
		s obj=1 s maxm=hrlDo-hrlOd+1
		// header
		s @glb@(obj)="<f='&black-bold'>"_"Přehled činností dle střídacích cyklů za období: "_$$nd^OBapiED(hrlOd,0)_" - "_$$nd^OBapiED(hrlDo,0)_"</f>"
		s obj=obj+1
		// tabulka - format
		s txt="<table posH='L" f cnt=1:1:(maxm+7) s:cnt'>(maxm+2) txt=txt_":C" s:cnt>(maxm+2) txt=txt_":R"
		s txt=txt_"'"
		s txt=txt_" pos='L" f cnt=1:1:(maxm+7) s:cnt'>(maxm+2) txt=txt_":C" s:cnt>(maxm+2) txt=txt_":RN2"
		s txt=txt_"'>"
		s @glb@(obj)=txt
		// tabulka - hlavicka (doplnim dni 1 2 3 4 + po ut st ct ...)
		s row=$o(@glb@(obj,"tr",""),-1)+1
		k txt
		s txt(1)="<bd='TLR'><f='&black-bold'>~~~"
		s:'$g(in("typ")) txt(2)="<bd='BLR'><f='&black-bold'>Příjmení jméno~NS~TS~"
		s:+$g(in("typ")) txt(2)="<bd='BLR'><f='&black-bold'>RZ~NS~TS~"
		f hrl=hrlOd:1:hrlDo d
		.i (hrl+3#7+1)>5 d
		..s $p(txt(1),"~",hrl-hrlOd+1+3)="<cl='&yellow'>"_($j(+$$nd^OBapiED(hrl,0),0,2))_"</cl>"
		..s $p(txt(2),"~",hrl-hrlOd+1+3)="<cl='&yellow'>"_$$ntd^OBapiED(hrl)_"</cl>"
		.i (hrl+3#7+1)'>5 d
		..s $p(txt(1),"~",hrl-hrlOd+1+3)="<cl='&white'>"_($j(+$$nd^OBapiED(hrl,0),0,2))_"</cl>"
		..s $p(txt(2),"~",hrl-hrlOd+1+3)="<cl='&white'>"_$$ntd^OBapiED(hrl)_"</cl>"
		// hodiny / km / mzda
		i '$g(in("typ")) s txt(1)=txt(1)_"~~~" s txt(2)=txt(2)_"~hodiny celkem~hodiny fond~hodiny rozdíl"
		i +$g(in("typ")) s txt(1)=txt(1)_"~" s txt(2)=txt(2)_"~km celkem"
		i +$g(in("mzda")) s txt(1)=txt(1)_"~~" s txt(2)=txt(2)_"~mzda celkem~diety celkem"
		//
		s txt(1)=txt(1)_"</bd></f>"
		s txt(2)=txt(2)_"</bd></f>"
		s @glb@(obj,"tr",row)=txt(1)
		s row=$o(@glb@(obj,"tr",""),-1)+1
		s @glb@(obj,"tr",row)=txt(2)
		// prevod zamestnancu/aut
		s dsts="" f  s dsts=$o(@myglb3@(dsts)) q:dsts=""  s pozts="" f  s pozts=$o(@myglb3@(dsts,pozts)) q:pozts=""  s idsort="" f  s idsort=$o(@myglb3@(dsts,pozts,idsort)) q:idsort=""  d
		.s idor=$p($g(@myglb3@(dsts,pozts,idsort)),"~",1)
		.f cnt=1:1:$p($g(@myglb2@("t",idor)),"~",3) d
		..// data ridice / auta
		..s txt=""
		..i '$g(in("typ")) s:cnt=1 txt="<f='&black-bold'>"_$p($g(@myglb3@(dsts,pozts,idsort)),"~",2)_"("_idor_")"_"</f>"_"~"_$p($g(@myglb3@(dsts,pozts,idsort)),"~",3)_"~"_$p($g(@myglb2@("t",idor)),"~",8)
		..i +$g(in("typ")) s:cnt=1 txt="<f='&black-bold'>"_idor_"</f>"_"~"_$p($g(@myglb3@(dsts,pozts,idsort)),"~",3)_"~"_$p($g(@myglb2@("t",idor)),"~",8)
		..s ram="LR" s:cnt=1 ram=ram_"T" s:cnt=$p($g(@myglb2@("t",idor)),"~",3) ram=ram_"B"
		..s txt="<bd='"_ram_"'>"_txt
		..f hrl=hrlOd:1:hrlDo d
		...s tmpcnt=0 s pathdoc=""
		...s typdoc="" f  s typdoc=$o(@myglb2@("t",idor,hrl,typdoc)) q:(typdoc="")!(pathdoc'="")  d
		....s iddoc="" f  s iddoc=$o(@myglb2@("t",idor,hrl,typdoc,iddoc)) q:(iddoc="")!(pathdoc'="")  d
		.....s tmpcnt=tmpcnt+1 i tmpcnt=cnt s pathdoc=typdoc_"~"_iddoc
		...s typdoc=$p(pathdoc,"~",1) s:typdoc="" typdoc=" "
		...s iddoc=$p(pathdoc,"~",2) s:iddoc="" iddoc=" "
		...s tmp="<f='&black-bold'>"
		...s:+typdoc=1 tmp="<f='&green-bold'>"
		...s:(+typdoc=1)&($g(@myglb2@("t",idor,hrl,typdoc,iddoc,"dta",2))=1) tmp="<f='&red-bold'>"
		...s:+typdoc=3 tmp="<f='&blue-bold'>"
		...s tmp=tmp_$g(@myglb2@("t",idor,hrl,typdoc,iddoc,"dta",4))
		...//tisk detailu v bunce
		...i +$g(in("detail")) d
		....i $g(@myglb2@("t",idor,hrl,typdoc,iddoc,"dta",3))'="" d
		.....s tmp=tmp_"/"_$g(@myglb2@("t",idor,hrl,typdoc,iddoc,"dta",3))
		...//====================
		...s tmp=tmp_"</f>"
		...i (hrl+3#7+1)>5 d
		....s $p(txt,"~",(hrl-hrlOd+1+3))="<cl='&yellow'>"_tmp_"</cl>"
		...i (hrl+3#7+1)'>5 d
		....s $p(txt,"~",hrl-hrlOd+1+3)="<cl='&white'>"_tmp_"</cl>"
		..// hodiny
		..i '$g(in("typ")) d
		...i cnt=1 d
		....//celkem
		....s tmp="<f='&black-bold'>"_$$mh^OBapiED($p($g(@myglb2@("t",idor)),"~",1))_"</f>"
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+1))=tmp
		....//fond
		....s tmp=($p($g(@myglb3@(dsts,pozts,idsort)),"~",4)*60)*ddfond
		....s tmp="<f='&black-bold'>"_$$mh^OBapiED(tmp)_"</f>"
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+2))=tmp
		....//rozdil
		....s tmp=$p($g(@myglb2@("t",idor)),"~",1)-(($p($g(@myglb3@(dsts,pozts,idsort)),"~",4)*60)*ddfond)
		....s tmp="<f='&black-bold'>"_$$mh^OBapiED(tmp)_"</f>"
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+3))=tmp
		....//mzda
		....i +$g(in("mzda")) d
		.....s tmp="<f='&black-bold'>"_$p($g(@myglb2@("t",idor)),"~",11)_"</f>"
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+4))=tmp
		.....s tmp="<f='&black-bold'>"_$p($g(@myglb2@("t",idor)),"~",12)_"</f>"
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+5))=tmp
		...i cnt>1 d
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+1))=""
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+2))=""
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+3))=""
		....i +$g(in("mzda")) d
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+4))=""
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+5))=""
		..// km
		..i +$g(in("typ")) d
		...i cnt=1 d
		....s tmp="<f='&black-bold'>"_$p($g(@myglb2@("t",idor)),"~",2)_"</f>"
		....s $p(txt,"~",(hrlDo-hrlOd+1+3+1))=tmp
		....i +$g(in("mzda")) d
		.....s tmp="<f='&black-bold'>"_$p($g(@myglb2@("t",idor)),"~",11)_"</f>"
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+2))=tmp
		.....s tmp="<f='&black-bold'>"_$p($g(@myglb2@("t",idor)),"~",12)_"</f>"
		.....s $p(txt,"~",(hrlDo-hrlOd+1+3+3))=tmp
		...i cnt>1 d
		....s $p(txt,"~",(hrl-hrlOd+1+3+1))=""
		....i +$g(in("mzda")) d
		.....s $p(txt,"~",(hrl-hrlOd+1+3+2))=""
		.....s $p(txt,"~",(hrl-hrlOd+1+3+3))=""
		..s txt=txt_"</bd>"
		..s row=$o(@glb@(obj,"tr",""),-1)+1
		..s @glb@(obj,"tr",row)=txt
		// legenda
		s obj=obj+1 s @glb@(obj)="<f='&black-bold'>"_"legenda:"_"</f>"
		s obj=obj+1 s @glb@(obj)="<f='&red-bold'>"_"červeně jsou označeny turnusy ze střídacích cyklů"_"</f>"
		//
		k @myglb k @myglb1 k @myglb2 k @myglb3 k @myglbos
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0018">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65630,43614.567176</TimeChanged>
<TimeCreated>65629,43273.140653</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==============
	// zakladni udaje
	// ==============
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("id","idprv|tu|hrl")=""
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //ciselniky
	    k arrcis45 s err=$$gCis^OBapiED(idfa,nmsp,45,"",.arrcis45) i +err zt
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="výpis základních údajů"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestava - definice - zakladni udaje
		k arrHead
		s arrHead(1)="N~>~provoz"
		s arrHead(2)="T~>~turnus"
		s arrHead(3)="D~>~časová|varianta od"
		s arrHead(4)="D~>~časová|varianta do"
		s arrHead(5)="N~>~označení|strojky"
		s arrHead(6)="T~<~týdenní|platnost"
		s arrHead(7)="T~<~dlouhodobá|platnost"
		s arrHead(8)="T~<~jede jen"
		s arrHead(9)="T~<~jede také"
		s arrHead(10)="T~<~jede"
		s arrHead(11)="T~<~nejede"
		s arrHead(12)="N~>~přirážka PH"
		s arrHead(13)="N~>~objížďkový"
		s arrHead(14)="N~>~posilový"
		s arrHead(15)="N~>~nízkopodlažní"
		s arrHead(16)="N~>~dělený"
		s arrHead(17)="N~>~neobsazovat|v plánu"
		s arrHead(18)="N~>~hlavní|varianta"
		s arrHead(19)="N~>~alternativní|varianta"
		s arrHead(20)="T~<~kvalita|vozu"
		s arrHead(21)="T~<~typ|autobusu"
		s arrHead(22)="T~<~dislokace"
		s arrHead(23)="T~>~kmenová|linka"
		s arrHead(24)="T~>~kmenové|vozidlo"
		s arrHead(25)="T~>~kurs"
		s arrHead(26)="N~>~limit km"
		s arrHead(27)="N~>~maximální|obsazenost"
		s arrHead(28)="T~<~maximální|obsaz.info"
		s arrHead(29)="T~<~záhlaví"
		s arrHead(30)="T~<~zápatí"
		s arrHead(31)="T~<~poznámka|DZVA"
		//doplneni vykonu
		k myarrdsc d gTurDsc^OBapiED(.myarrdsc)
		//vykony
		s cnt="" f {
			s cnt=$o(myarrdsc("dsc","tuv",cnt)) i cnt="" q
			i cnt=19 continue	//mzdy
			i cnt=20 continue	//sv
			i cnt=21 continue	//sone
			s myval=$g(myarrdsc("dsc","tuv",cnt))
			s dsc=$p(myval,"~",1)
			s jdn=$p(myval,"~",2)
			s format="<" s typ="T"
			i jdn=1 s dsc=dsc_"|"_"hh.dd" s format=">" s typ="N2" 
			i jdn=2 s dsc=dsc_"|"_"ks" s format=">" s typ="N"
			i jdn=3 s dsc=dsc_"|"_"Kč" s format=">" s typ="N2"
			i jdn=4 s dsc=dsc_"|"_"Km" s format=">" s typ="N3"
			s arrHead(cnt*1000)=typ_"~"_format_"~"_dsc
		}
		//koruny
		s cnt="" f {
			s cnt=$o(myarrdsc("dsc","tuv",19,cnt)) i cnt="" q
			s myval=$g(myarrdsc("dsc","tuv",19,cnt))
			s dsc=$p(myval,"~",1)
			s jdn=$p(myval,"~",2)
			s format="<" s typ="T"
			i jdn=1 s dsc=dsc_"|"_"hh.dd" s format=">" s typ="N2" 
			i jdn=2 s dsc=dsc_"|"_"ks" s format=">" s typ="N"
			i jdn=3 s dsc=dsc_"|"_"Kč" s format=">" s typ="N2"
			i jdn=4 s dsc=dsc_"|"_"Km" s format=">" s typ="N3"
			s arrHead(cnt*1000000)=typ_"~"_format_"~"_dsc
		}
		//
		s @glb@(tab,"Name")=$g(in("nazev"))
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
		s cnt="" f {
			s cnt=$o(arrHead(cnt)) i cnt="" q
			s val=arrHead(cnt) s colTyp=$p(val,"~",1) s colForm=$p(val,"~",2) s colHead=$p(val,"~",3)
			s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED(colHead,"|",$c(13,10))
 			s @glb@(tab,"SL",cnt,"Format")=colForm
 			s @glb@(tab,"SL",cnt,"Typ")=colTyp
		}
 		//setrizeni turnusu
 		s idtur="" f {
			s idtur=$o(in("id",idtur)) i idtur="" q
			s idprv=$p(idtur,"|",1) s tu=$p(idtur,"|",2) s hrl=$p(idtur,"|",3) 
			s @myglb@(1,idprv,tu,hrl)=""
 		}
		//
		//tiskove udaje
		s idprv="" f {
			s idprv=$o(@myglb@(1,idprv)) i idprv="" q
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			s tu="" f {
				s tu=$o(@myglb@(1,idprv,tu)) i tu="" q
				s hrl="" f {
					s hrl=$o(@myglb@(1,idprv,tu,hrl)) i hrl="" q
					k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) i +err zt
					//
					s idrow=$i(@glb@(tab,"RD"))
					s @glb@(tab,"RD",idrow)=idrow
					s @glb@(tab,"Dta",idrow,1)=idprv
				 	s @glb@(tab,"Dta",idrow,2)=tu
				 	s @glb@(tab,"Dta",idrow,3)=$$nd^OBapiED(hrl,0)
				 	s myval=$g(arrtur("dta",33)) i myval s myval=$$nd^OBapiED(myval,0)
				 	s @glb@(tab,"Dta",idrow,4)=myval
				 	s @glb@(tab,"Dta",idrow,5)=$g(arrtur("dta",31))
				 	s @glb@(tab,"Dta",idrow,6)=$p($g(arrtur("dta",7)),"~",1)
				 	s @glb@(tab,"Dta",idrow,7)=$tr($p($g(arrcis45("arr",+$p($g(arrtur("dta",7)),"~",2))),"~",1,2),"~","-")
				 	s @glb@(tab,"Dta",idrow,8)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",11)),"@",2),"#",","),":","-")
				 	s @glb@(tab,"Dta",idrow,9)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",12)),"@",2),"#",","),":","-")
				 	s @glb@(tab,"Dta",idrow,10)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",13)),"@",2),"#",","),":","-")
					s @glb@(tab,"Dta",idrow,11)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",22)),"@",2),"#",","),":","-")
					s @glb@(tab,"Dta",idrow,12)=+$g(arrtur("dta",14))
					s @glb@(tab,"Dta",idrow,13)=+$g(arrtur("dta",36))
					s @glb@(tab,"Dta",idrow,14)=+$g(arrtur("dta",3))
					s @glb@(tab,"Dta",idrow,15)=+$g(arrtur("dta",37))
					s @glb@(tab,"Dta",idrow,16)=+$g(arrtur("dta",53))
					s @glb@(tab,"Dta",idrow,17)=+$g(arrtur("dta",64))
					s @glb@(tab,"Dta",idrow,18)=+$g(arrtur("dta",67))
					s @glb@(tab,"Dta",idrow,19)=+$g(arrtur("dta",71))
					s @glb@(tab,"Dta",idrow,20)=$g(arrtur("dta",59))
					s @glb@(tab,"Dta",idrow,21)=$g(arrtur("dta",13))
					s @glb@(tab,"Dta",idrow,22)=$g(arrtur("dta",28))
					s @glb@(tab,"Dta",idrow,23)=$g(arrtur("dta",12))
					s @glb@(tab,"Dta",idrow,24)=$g(arrtur("dta",27))
					s @glb@(tab,"Dta",idrow,25)=$g(arrtur("dta",70))
					s @glb@(tab,"Dta",idrow,26)=$g(arrtur("dta",52))
					s @glb@(tab,"Dta",idrow,27)=$g(arrtur("dta",68))
					s @glb@(tab,"Dta",idrow,28)=$g(arrtur("dta",69))
					s myval="" s cnt="" f {
						s cnt=$o(arrtur("arr","txh",cnt)) i cnt="" q
						i myval'="" s myval=myval_";"
						s myval=myval_$g(arrtur("arr","txh",cnt))
					}
					s @glb@(tab,"Dta",idrow,29)=myval
					s myval="" s cnt="" f {
						s cnt=$o(arrtur("arr","txp",cnt)) i cnt="" q
						i myval'="" s myval=myval_";"
						s myval=myval_$g(arrtur("arr","txp",cnt))
					}
					s @glb@(tab,"Dta",idrow,30)=myval
					s myval="" s cnt="" f {
						s cnt=$o(arrtur("arr","txd",cnt)) i cnt="" q
						i myval'="" s myval=myval_";"
						s myval=myval_$g(arrtur("arr","txd",cnt))
					}
					s @glb@(tab,"Dta",idrow,31)=myval
					//vykony
					s cnt="" f {
						s cnt=$o(arrtur("arr","tuv",cnt)) i cnt="" q
						i cnt=19 continue	//mzdy
						i cnt=20 continue	//sv
						i cnt=21 continue	//sone
						s myval=$g(myarrdsc("dsc","tuv",cnt))
						s jdn=$p(myval,"~",2)
						s myval=$g(arrtur("arr","tuv",cnt)) 
						i jdn=1 s myval=$$mc^OBapiED(myval)
						s @glb@(tab,"Dta",idrow,(cnt*1000))=myval
					}
					//koruny
					s cnt="" f {
						s cnt=$o(arrtur("arr","tuv",19,cnt)) i cnt="" q
						s myval=$g(myarrdsc("dsc","tuv",19,cnt))
						s jdn=$p(myval,"~",2)
						s myval=$g(arrtur("arr","tuv",19,cnt)) 
						i jdn=1 s myval=$$mc^OBapiED(myval)
						s @glb@(tab,"Dta",idrow,(cnt*1000000))=myval
					}
				}
			}
		}
		k @myglb	
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0020">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65631,53281.037326</TimeChanged>
<TimeCreated>65630,41399.307773</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//==================
	//statistika turnusu
	//==================
	// vse z jedne provozovny  
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("datumDo")=dd.mm.rrrr
    // in("datumOd")=dd.mm.rrrr
	// in("id","idprv|tu|hrl")=""
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//nastaveni
		k myarrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrset) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //ciselniky
	    //dlouhodoba platnost
	    k arrcis45 s err=$$gCis^OBapiED(idfa,nmsp,45,"",.arrcis45) i +err zt
	    //prs
        k arrcis5 s err=$$gCis^OBapiED(idfa,nmsp,5,"",.arrcis5) i +err zt
        s cnt=.001 s id="" f {
 			s id=$o(arrcis5("arr",id)) q:id=""
			s arrcis5("arr",id,"col")=cnt
			s cnt=cnt+.001
 		}
	    //zakladni parametry
		s datumod=$g(in("datumOd")) s hrlod=$$dn^OBapiED(datumod)
		s datumdo=$g(in("datumDo")) s hrldo=$$dn^OBapiED(datumdo)
		//tiskovy global
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="statistické údaje v období "_datumod_" - "_datumdo
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestava - definice - zakladni udaje
		k arrHead
		s arrHead(1)="N~>~provoz"
		s arrHead(2)="T~>~turnus"
		s arrHead(3)="D~>~časová|varianta od"
		s arrHead(4)="D~>~časová|varianta do"
		s arrHead(5)="T~<~týdenní|platnost"
		s arrHead(6)="T~<~dlouhodobá|platnost"
		s arrHead(7)="T~<~jede jen"
		s arrHead(8)="T~<~jede také"
		s arrHead(9)="T~<~jede"
		s arrHead(10)="T~<~nejede"
		s arrHead(11)="T~<~kvalita|vozu"
		s arrHead(12)="T~<~typ|autobusu"
		s arrHead(13)="N~>~jede"
		s arrHead(14)="N~>~Po"
		s arrHead(15)="N~>~Út"
		s arrHead(16)="N~>~St"
		s arrHead(17)="N~>~Čt"
		s arrHead(18)="N~>~Pá"
		s arrHead(19)="N~>~So"
		s arrHead(20)="N~>~Ne"
		//doplneni vykonu
		k myarrdsc d gTurDsc^OBapiED(.myarrdsc)
		//vykony
		s cnt="" f {
			s cnt=$o(myarrdsc("dsc","tuv",cnt)) i cnt="" q
			i cnt=19 continue	//mzdy
			i cnt=20 continue	//sv
			i cnt=21 continue	//sone
			s myval=$g(myarrdsc("dsc","tuv",cnt))
			s dsc=$p(myval,"~",1)
			s jdn=$p(myval,"~",2)
			s format="<" s typ="T"
			i jdn=1 s dsc=dsc_"|"_"hh.dd" s format=">" s typ="N2" 
			i jdn=2 s dsc=dsc_"|"_"ks" s format=">" s typ="N"
			i jdn=3 s dsc=dsc_"|"_"Kč" s format=">" s typ="N2"
			i jdn=4 s dsc=dsc_"|"_"Km" s format=">" s typ="N3"
			s arrHead(cnt*1000)=typ_"~"_format_"~"_dsc
		}
		//koruny
		s cnt="" f {
			s cnt=$o(myarrdsc("dsc","tuv",19,cnt)) i cnt="" q
			s myval=$g(myarrdsc("dsc","tuv",19,cnt))
			s dsc=$p(myval,"~",1)
			s jdn=$p(myval,"~",2)
			s format="<" s typ="T"
			i jdn=1 s dsc=dsc_"|"_"hh.dd" s format=">" s typ="N2" 
			i jdn=2 s dsc=dsc_"|"_"ks" s format=">" s typ="N"
			i jdn=3 s dsc=dsc_"|"_"Kč" s format=">" s typ="N2"
			i jdn=4 s dsc=dsc_"|"_"Km" s format=">" s typ="N3"
			s arrHead(cnt*1000000)=typ_"~"_format_"~"_dsc
		}
		//
		s @glb@(tab,"Name")=$g(in("nazev"))
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
		s cnt="" f {
			s cnt=$o(arrHead(cnt)) i cnt="" q
			s val=arrHead(cnt) s colTyp=$p(val,"~",1) s colForm=$p(val,"~",2) s colHead=$p(val,"~",3)
			s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED(colHead,"|",$c(13,10))
 			s @glb@(tab,"SL",cnt,"Format")=colForm
 			s @glb@(tab,"SL",cnt,"Typ")=colTyp
		}
 		//statistika turnusu
 		k arri,arro
 		s arri("glb")=myglb
 		s @myglb@("dta",1)=hrlod
 		s @myglb@("dta",2)=hrldo
 		//turnusy
 		s idtur="" f {
			s idtur=$o(in("id",idtur)) i idtur="" q
			s idprv=$p(idtur,"|",1) s tu=$p(idtur,"|",2) s hrl=$p(idtur,"|",3) 
			s @myglb@("arr",1,tu)="" 
 		}
 		//neni turnus a tedy i provoz
 		i idprv="" q
 		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
 		// okres pro prazdniny
 		s blo="" i idprv'="" s blo=$g(myarrset("arr",5,1,"prv",idprv))
 		i blo="" s blo=$g(myarrset("arr",5,1))
 		s @myglb@("dta",3)=blo
 		k arr s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,.arro) i err zt
 		//tiskove udaje
 		s tu="" f {
	 		s tu=$o(@myglb@("arr",1,tu)) i tu="" q
	 		s idrow=$i(@glb@(tab,"RD"))
	 		s @glb@(tab,"RD",idrow)=idrow
			s @glb@(tab,"Dta",idrow,1)=idprv
			s @glb@(tab,"Dta",idrow,2)=tu
			f cnt=13:1:20 s @glb@(tab,"Dta",idrow,cnt)=0
	 		s hrl="" f {
		 		s hrl=$o(@myglb@("arr",1,tu,hrl)) i hrl="" q
		 		k jede
		 		s jede=$g(@myglb@("arr",1,tu,hrl,"dta",3))
		 		f typdne=1,2,3,4,5,6,7 {
			 		s ahrl="" f {
				 		s ahrl=$o(@myglb@("arr",1,tu,hrl,"arr",3,typdne,ahrl)) i ahrl="" q
				 		s jede(typdne)=$g(jede(typdne))+1
			 		}
		 		}
		 		s @glb@(tab,"Dta",idrow,13)=$g(@glb@(tab,"Dta",idrow,13))+jede
				s @glb@(tab,"Dta",idrow,14)=$g(@glb@(tab,"Dta",idrow,14))+$g(jede(1))
				s @glb@(tab,"Dta",idrow,15)=$g(@glb@(tab,"Dta",idrow,15))+$g(jede(2))
				s @glb@(tab,"Dta",idrow,16)=$g(@glb@(tab,"Dta",idrow,16))+$g(jede(3))
				s @glb@(tab,"Dta",idrow,17)=$g(@glb@(tab,"Dta",idrow,17))+$g(jede(4))
				s @glb@(tab,"Dta",idrow,18)=$g(@glb@(tab,"Dta",idrow,18))+$g(jede(5))
				s @glb@(tab,"Dta",idrow,19)=$g(@glb@(tab,"Dta",idrow,19))+$g(jede(6))
				s @glb@(tab,"Dta",idrow,20)=$g(@glb@(tab,"Dta",idrow,20))+$g(jede(7))
				//
		 		k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) i +err zt
				s typbus=$g(arrtur("dta",13)) i typbus="" s typbus="nezadáno" 
				// aktualizace druhu spoje v prubehu turnusu podle db spoju
				s err=$$actDspTur^OBapiED(idfa,nmsp,hrl,1,.arrtur) i +err zt
				// aktualizace tarifnich km v prubehu turnusu podle db spoju
				s err=$$actTkmTur^OBapiED(idfa,nmsp,hrl,1,.arrtur) i +err zt
  				// aktualizace prepravnich systemu v prubehu turnusu podle db spoju a nastaveni prs
  				k arri s arri("par",1)=idprv
 				s err=$$actPrsTur^OBapiED(idfa,nmsp,hrl,.arri,.arrtur) i +err zt
 				k arri
 				// suma km za prepravni systemy a druhy spoju do pole arrsmprs
 				k myarrsmprs
 				s err=$$actPrsTurSum^OBapiED(idfa,nmsp,hrl,.arrtur,.myarrsmprs) i +err zt
				//vypis turnusu
				s idrowhrl=idrow_"."_hrl
				s @glb@(tab,"RD",idrow,"Skryt",idrowhrl)=""
				s @glb@(tab,"RD",idrowhrl)=""
				s @glb@(tab,"Dta",idrowhrl,1)=idprv
				s @glb@(tab,"Dta",idrowhrl,2)=tu
				s @glb@(tab,"Dta",idrowhrl,3)=$$nd^OBapiED(hrl,0)
				s myval=$g(arrtur("dta",33)) i myval s myval=$$nd^OBapiED(myval,0)
			 	s @glb@(tab,"Dta",idrowhrl,4)=myval
			 	s @glb@(tab,"Dta",idrowhrl,5)=$p($g(arrtur("dta",7)),"~",1)
			 	s @glb@(tab,"Dta",idrowhrl,6)=$tr($p($g(arrcis45("arr",+$p($g(arrtur("dta",7)),"~",2))),"~",1,2),"~","-")
			 	s @glb@(tab,"Dta",idrowhrl,7)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",11)),"@",2),"#",","),":","-")
			 	s @glb@(tab,"Dta",idrowhrl,8)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",12)),"@",2),"#",","),":","-")
			 	s @glb@(tab,"Dta",idrowhrl,9)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",13)),"@",2),"#",","),":","-")
				s @glb@(tab,"Dta",idrowhrl,10)=$$cnvTxt^OBapiED($tr($p($g(arrtur("arr","omz",22)),"@",2),"#",","),":","-")
				s @glb@(tab,"Dta",idrowhrl,11)=$g(arrtur("dta",59))
				s @glb@(tab,"Dta",idrowhrl,12)=$g(arrtur("dta",13))
				s @glb@(tab,"Dta",idrowhrl,13)=jede
				s @glb@(tab,"Dta",idrowhrl,14)=$g(jede(1))
				s @glb@(tab,"Dta",idrowhrl,15)=$g(jede(2))
				s @glb@(tab,"Dta",idrowhrl,16)=$g(jede(3))
				s @glb@(tab,"Dta",idrowhrl,17)=$g(jede(4))
				s @glb@(tab,"Dta",idrowhrl,18)=$g(jede(5))
				s @glb@(tab,"Dta",idrowhrl,19)=$g(jede(6))
				s @glb@(tab,"Dta",idrowhrl,20)=$g(jede(7))
				//vykony
				s cnt="" f {
					s cnt=$o(arrtur("arr","tuv",cnt)) i cnt="" q
					i cnt=19 continue	//mzdy
					i cnt=20 continue	//sv
					i cnt=21 continue	//sone
					s myval=$g(myarrdsc("dsc","tuv",cnt))
					s jdn=$p(myval,"~",2)
					s myval=$g(arrtur("arr","tuv",cnt))
					s myval=(myval*jede)
					s @glb@(tab,"Dta",idrow,(cnt*1000))=$g(@glb@(tab,"Dta",idrow,(cnt*1000)))+myval
					i jdn=1 s myval=$$mc^OBapiED(myval)
					s @glb@(tab,"Dta",idrowhrl,(cnt*1000))=myval
				}
				//koruny
				s cnt="" f {
					s cnt=$o(arrtur("arr","tuv",19,cnt)) i cnt="" q
					s myval=$g(myarrdsc("dsc","tuv",19,cnt))
					s jdn=$p(myval,"~",2)
					s myval=($g(arrtur("arr","tuv",19,cnt))*jede)
					s @glb@(tab,"Dta",idrow,(cnt*1000000))=$g(@glb@(tab,"Dta",idrow,(cnt*1000000)))+myval
					i jdn=1 s myval=$$mc^OBapiED(myval)
					s @glb@(tab,"Dta",idrowhrl,(cnt*1000000))=myval
				}
				//km dle prepravnich systemu
				s mycol=(22*1000)			//rozpad pod km 
				s idprs="" f {
					s idprs=$o(myarrsmprs("arr",1,idprs)) i idprs="" q
					s iddkm="" f {
						s iddkm=$o(myarrsmprs("arr",1,idprs,iddkm)) i iddkm="" q
						s myval=$g(myarrsmprs("arr",1,idprs,iddkm))
						s myval=jede*myval
						// rozpad sloupce celk.km na km dle prs a prs rezijni
						s col=mycol+$g(arrcis5("arr",idprs,"col"))+.0001
						i iddkm=7 s col=col+.0001
						s @glb@(tab,"Dta",idrow,col)=$g(@glb@(tab,"Dta",idrow,col))+myval
						s @glb@(tab,"Dta",idrowhrl,col)=$g(@glb@(tab,"Dta",idrowhrl,col))+myval
						// doplnim definici sloupce
						s dsc=idprs_"/"_$p($g(arrcis5("arr",idprs)),"~",1)
						i iddkm=7 s dsc=dsc_"/režijní"
						s @glb@(tab,"SL",col)=dsc
						s @glb@(tab,"SL",col,"Format")=">"
 						s @glb@(tab,"SL",col,"Typ")="N3"
 						s @glb@(tab,"SL",mycol,"Skryt",col)=""
					}	
				}
	 		}
	 		//naformatovani hodin pro turnus
	 		//vykony
			s cnt="" f {
				s cnt=$o(myarrdsc("dsc","tuv",cnt)) i cnt="" q
				s myval=$g(myarrdsc("dsc","tuv",cnt))
				s jdn=$p(myval,"~",2)
				i jdn=1 {
					i $g(@glb@(tab,"Dta",idrow,(cnt*1000)))'="" {
						s myval=$g(@glb@(tab,"Dta",idrow,(cnt*1000)))
						s myval=$$mc^OBapiED(myval)
						s @glb@(tab,"Dta",idrow,(cnt*1000))=myval
					}
				}
			}
 		}
 		//
		k @myglb	
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0021">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65706,41302.708207</TimeChanged>
<TimeCreated>65661,46758.664817</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//=============================
	//kontrola spoju proti turnusum
	//=============================
	// vse z jedne provozovny  
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("kontrola")=1 casove varianty / 2 obsazenost k datu 
	// in("datum")=dd.mm.rrrr, pro kontrola=1
	// in("datumOd")=dd.mm.rrrr, pro kontrola=2
	// in("datumDo")=dd.mm.rrrr, pro kontrola=2
    // in("provoz",idprv)=""
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		k out
		//nastaveni
		k marrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.marrset) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb="^||wrk.ALVA.AD("_mywrk_")" k @mywrkglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb1="^||wrk.ALVA.AD("_mywrk_")" k @mywrkglb1
	    s mywrk=$$gWrkALVAAD^OBapiED() s mywrkglb2="^||wrk.ALVA.AD("_mywrk_")" k @mywrkglb2
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
		//tiskovy global
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")" s tab="main" s nazev=""
        //casove varianty
        i $g(in("kontrola"))=1 {
	        // sestaveni prehledu turnusu se zp, platnych k hrl
 			k arri
 			s arri("turpl",1)=$$dn^OBapiED($g(in("datum")))
 			s arri("glb")=mywrkglb1
 			m arri("prv")=in("provoz")
 			s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
 			s zp="" f {
	 			s zp=$o(@mywrkglb1@(zp)) i zp="" q
	 			s idtu="" f {
		 			s idtu=$o(@mywrkglb1@(zp,idtu)) i idtu="" q
		 			s hrltu="" f {
			 			s hrltu=$o(@mywrkglb1@(zp,idtu,hrltu)) i hrltu="" q
			 			k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrltu,"",.arrtu) i +err zt
			 			//ne alternativni varianta
 						i +$g(arrtu("dta",71)) continue
 						//projdu turnus a vyhledam spoje
 						s odj="" f {
	 						s odj=$o(arrtu("arr","tur",odj)) i odj="" q
 							s typ=+$g(arrtu("arr","tur",odj,"dta",2))
 							//spoj
 							i typ=3 {
	 							s li=$g(arrtu("arr","tur",odj,"dta",5))
	 							s sp=$g(arrtu("arr","tur",odj,"dta",6))
	 							s @mywrkglb@(1,zp,li,sp,idtu,hrltu)=""
 							}
 						}
		 			}
	 			}
 			}
 			k @mywrkglb1
 			// sestaveni prehledu spoju platnych k hrl
 			k arri
 			s arri("sta")=0
 			s arri("sppl",1)=$$dn^OBapiED($g(in("datum")))
 			s arri("glb")=mywrkglb1
 			m arri("prv")=in("provoz")
 			s err=$$lSp^OBapiED(idfa,nmsp,.arri,"") i +err zt
 			s li="" f {
	 			s li=$o(@mywrkglb1@(li)) i li="" q
	 			s sp="" f {
		 			s sp=$o(@mywrkglb1@(li,sp)) i sp="" q
		 			s hrlsp="" f {
			 			s hrlsp=$o(@mywrkglb1@(li,sp,hrlsp)) i hrlsp="" q
			 			k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrlsp,"",.arrsp) i +err zt
 	    				s idprv=$g(arrsp("dta",18))
 	    				s zpsp=""
 	    				i idprv {
	 	    				s err=$$mkZP^OBapiED(idfa,idprv,"","",.zpsp) i +err zt
 	    				}
 	    				s @mywrkglb@(2,li,sp)=zpsp
 	    				s @mywrkglb@(2,li,sp,hrlsp)=""
		 			}
	 			}
 			}
 			k @mywrkglb1
 			//definice tabulky
 			s colHead="linka~spoj~chyba~popis~provoz"
 			s colSkryt="0~0~0~0~0"
 			s colTyp="N~N~T~T~T"
 			s colForm=">~>~<~<~>"
 			s tmp=""
 			s zp="" f {
	 			s zp=$o(@mywrkglb@(1,zp)) i zp="" q
	 			s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
	 			s tmp=tmp_$g(idprv)_";"
 			} 
 			i $e(tmp,$l(tmp))=";" s tmp=$e(tmp,1,$l(tmp)-1)
 			s nazev="kontrola obsazení spojů mezi databází turnusů platných k: "_$g(in("datum"))_" a databází spojů, provoz: "_tmp
 			s @glb@(tab,"Name")=nazev
 			s @glb@(tab,"Format")="<"
 			s @glb@(tab,"STYP")="T"
 			//def.sloupcu
 			f cnt=1:1:$l(colHead,"~") {
	 			s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 				s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 				s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 				i $p(colSkryt,"~",cnt) {
	 				s @glb@(tab,"SL",+$p(colSkryt,"~",cnt),"Skryt",cnt)=""
 				}
 			}
 			//tabulka
 			//spoje obsazene v turnusech, ktere nejsou v db spoju
 			s zp="" f {
	 			s zp=$o(@mywrkglb@(1,zp)) i zp="" q
	 			s li="" f {
		 			s li=$o(@mywrkglb@(1,zp,li)) i li="" q
		 			s sp="" f {
			 			s sp=$o(@mywrkglb@(1,zp,li,sp)) i sp="" q
			 			i $d(@mywrkglb@(2,li,sp)) continue
			 			s tmp=""
			 			s idtu="" f {
				 			 s idtu=$o(@mywrkglb@(1,zp,li,sp,idtu)) i idtu="" q
				 			 s tmp=tmp_zp_"/"_idtu_";"
			 			}
 				        i $e(tmp,$l(tmp))=";" s tmp=$e(tmp,1,$l(tmp)-1)
 						s idrow=$i(@glb@(tab,"RD"))
 						s @glb@(tab,"RD",idrow)=""
 						s @glb@(tab,"Dta",idrow,1)=li
 						s @glb@(tab,"Dta",idrow,2)=sp
 						s @glb@(tab,"Dta",idrow,3)="spoj obsazen v turnusech, není v db. spojů"
 						s @glb@(tab,"Dta",idrow,4)="turnusy: "_tmp
 						s @glb@(tab,"Dta",idrow,5)=""
		 			}
	 			}
 			}
 			//spoje navic v databazi spoju
 			s li="" f {
	 			s li=$o(@mywrkglb@(2,li)) i li="" q
	 			s sp="" f {
		 			s sp=$o(@mywrkglb@(2,li,sp)) i sp="" q
		 			//kontrola provozovny - kontroluji spoje bez provozovny a s totoznou provozovnou
 					s zpsp=$g(@mywrkglb@(2,li,sp)) s tmp="" i +zpsp s err=$$mkPRV^OBapiED(idfa,zpsp,"",.tmp) i +err zt
 					s fndsp=0
 					i zpsp'="" {
	 					i $d(@mywrkglb@(1,zpsp,li,sp)) s fndsp=1
 					}
 					i zpsp="" {
	 					s zp="" f  {
		 					s zp=$o(@mywrkglb@(1,zp)) i (zp="")!(fndsp) q
 							i $d(@mywrkglb@(1,zp,li,sp)) s fndsp=1
	 					}
 					}
 					i fndsp continue
 					s idrow=$i(@glb@(tab,"RD"))
 					s @glb@(tab,"RD",idrow)=""
 					s @glb@(tab,"Dta",idrow,1)=li
 					s @glb@(tab,"Dta",idrow,2)=sp
 					s @glb@(tab,"Dta",idrow,3)="spoj je v db. spojů a není obsazen v turnusech"
 					s @glb@(tab,"Dta",idrow,4)=""
 					s @glb@(tab,"Dta",idrow,5)=tmp
	 			}
 			}
        }
        //obsazenost k datu
        i $g(in("kontrola"))=2 {
			// za obdobi hrlod - hrldo udelat statistiku turnusu a spoju a porovnat co neni odjete
			s hrlod=$$dn^OBapiED($g(in("datumOd")))
			s hrldo=$$dn^OBapiED($g(in("datumDo")))
			f mhrl=(hrlod-1):1:(hrldo+1) {
				// pro kazdy den udelam statistiku turnusu a z nich spoje, ktere je potreba odjet
				k @mywrkglb1
 				k arri
 				s arri("turpl",1)=mhrl
 				s arri("glb")=mywrkglb1
 				m arri("prv")=in("provoz")
 				s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
 				s mzp="" f {
	 				s mzp=$o(@mywrkglb1@(mzp)) i mzp="" q
	 				s err=$$mkPRV^OBapiED(idfa,mzp,"",.idprv) i +err zt
	 				s blo=""
					s blo=$g(marrset("arr",5,1))
					i $g(marrset("arr",5,1,"prv",idprv))'="" s blo=$g(marrset("arr",5,1,"prv",idprv))
					k @mywrkglb2
					s @mywrkglb2@("dta",1)=mhrl
					s @mywrkglb2@("dta",2)=mhrl
					s @mywrkglb2@("dta",3)=blo
					s tu="" f {
						s tu=$o(@mywrkglb1@(mzp,tu)) i tu="" q
						s @mywrkglb2@("arr",1,tu)=""
					}
					k arri s arri("glb")=mywrkglb2
					s err=$$mkStaTur^OBapiED(idfa,nmsp,mzp,"",.arri,"") i +err zt
					s tu="" f {
						s tu=$o(@mywrkglb2@("arr",2,tu)) i tu="" q
						//turnus se jede
						i +$g(@mywrkglb2@("arr",2,tu,"dta",3)) {
							k arrtu s err=$$gTur^OBapiED(idfa,nmsp,mzp,tu,mhrl,"",.arrtu) i +err zt
							//ne alternativni varianta
 							i +$g(arrtu("dta",71)) continue
 							//========================
							s min="" f {
								s min=$o(arrtu("arr","tur",min)) i min="" q
								// dhrl kdy jede spoj
								s dhrl=(mhrl+(min\1440))
								i (dhrl'<hrlod)&(dhrl'>hrldo) {
									i +$g(arrtu("arr","tur",min,"dta",2))=3 {
 							    		s li=$g(arrtu("arr","tur",min,"dta",5))
 							    		s sp=$g(arrtu("arr","tur",min,"dta",6))
 							    		s @mywrkglb@(dhrl,1,li,sp,(mzp_"|"_tu))=""							
										}
									}
								}
							}
						}
 					}
 					k @mywrkglb1
 					k @mywrkglb2
 					//
 					i (mhrl'<hrlod)&(mhrl'>hrldo) {
	 					// pro kazdy den udelam statistiku spoju, ktere se maji jet
 						// spoje se pocitaji ponovu, prenasi se platnost totozna s JR
 						k wrkdc s err=$$mkSttKal^JRapi(idfa,nmsp,$p($$nd^OBapiED(mhrl,0),".",3),"",.wrkdc) i +err zt
 						// ==========================================================
 						k arri
 						s arri("sta")=0
 						s arri("sppl",1)=mhrl
 						s arri("glb")=mywrkglb1
 						m arri("prv")=in("provoz")
 						s err=$$lSp^OBapiED(idfa,nmsp,.arri,"") i +err zt
 						s li="" f {
			 				s li=$o(@mywrkglb1@(li)) i li="" q
 							s sp="" f {
			 					s sp=$o(@mywrkglb1@(li,sp)) i sp="" q
 								s hrlsp="" f {
			 						s hrlsp=$o(@mywrkglb1@(li,sp,hrlsp)) i hrlsp="" q
 									k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrlsp,"",.arrsp) i +err zt
 									//spoj ze zvolene provozovny
 									i $o(in("provoz",""))'="" i $g(arrsp("dta",18)) i '$d(in("provoz",$g(arrsp("dta",18)))) continue
		 				    		// platnost - stare spoje, pokud nema tpl a dpl, pokusim se je odhadnout podle hexa znaku
 									i $g(arrsp("dta",16))="" s arrsp("dta",16)=$p($$cnvPlHTplDpl^OBapiED($g(arrsp("dta",8))),"~",1)
 									i $g(arrsp("dta",17))="" s arrsp("dta",17)=$p($$cnvPlHTplDpl^OBapiED($g(arrsp("dta",8))),"~",2)
 									// ======================================================================================
 									// statisticke vyhodnoceni spoje 
 									k arrom
									f arrom=11,12,13,14,15,22 i $d(arrsp("arr","omz",arrom)) m arrom(arrom)=arrsp("arr","omz",arrom)
 									s err=$$mkSttOm^JRapi(idfa,nmsp,hrlsp,(mhrl+365),.arrom) i +err zt
 									s arrom=$tr($g(arrsp("dta",16)),".","") s arrom("DPL")=$g(arrsp("dta",17))
 									k jd s err=$$okSttDay^JRapi(idfa,nmsp,wrkdc,mhrl,.arrom,.jd) i +err zt
 									i +$g(jd) {
			 							s @mywrkglb@(mhrl,2,li,sp)=""
 									}
 								}
 							}
 						}
 					}
 					k @mywrkglb1
 					k @mywrkglb2
				}
				//definice tabulky
 				s colHead="datum~linka~spoj~začátek~zastávka~konec~zastávka~chyba~turnus"
 				s colTyp="D~N~N~T~T~T~T~T~T"
 				s colForm=">~>~>~>~<~>~<~<~<"
 				s nazev="kontrola shody platností spojů a turnusů v období: "_$g(in("datumOd"))_" - "_$g(in("datumDo"))
 				s @glb@(tab,"Name")=nazev
 				s @glb@(tab,"Format")="<"
 				s @glb@(tab,"STYP")="T"
 				//def.sloupcu
 				f cnt=1:1:$l(colHead,"~") {
 					s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 					s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 					s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 				}
 				// tabulka
 				s mhrl="" f {
		 			s mhrl=$o(@mywrkglb@(mhrl)) i mhrl="" q
	 				// kontrola turnusu proti spojum
	 				s li="" f {
			 			s li=$o(@mywrkglb@(mhrl,1,li)) i li="" q
		 				s sp="" f {
				 			s sp=$o(@mywrkglb@(mhrl,1,li,sp)) i sp="" q
			 				s dscerr=""
			 				// kontrola, zda neni ve dvou turnusech
			 				s cnt=0 s dsctu=""
			 				s idtu="" f {
					 			s idtu=$o(@mywrkglb@(mhrl,1,li,sp,idtu)) i idtu="" q
				 				s cnt=cnt+1
				 				s dsctu=dsctu_$tr(idtu,"|","/")_";"
			 				}
			 				i $e(dsctu,$l(dsctu))=";" s dsctu=$e(dsctu,1,$l(dsctu)-1)
			 				i cnt>1 {
					 			i dscerr'="" s dscerr=dscerr_", "
				 				s dscerr=dscerr_"spoj je zařazen ve více turnusech ("_cnt_")"
			 				}
			 				// kontrola, zda spoj jede
			 				i '$d(@mywrkglb@(mhrl,2,li,sp)) {
					 			i dscerr'="" s dscerr=dscerr_", "
				 				s dscerr=dscerr_"spoj je zařazen do turnusu a nejede"
			 				}
			 				i dscerr'="" {
				 				k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,mhrl,"",.arrsp)
				 				s zst1="" k tmparr s err=$$gZst^OBapiED(idfa,nmsp,(+$g(arrsp("dta",6))),"",.tmparr) s zst1=$g(tmparr("dta",1)) k tmparr
				 				s zst2="" k tmparr s err=$$gZst^OBapiED(idfa,nmsp,(+$g(arrsp("dta",7))),"",.tmparr) s zst2=$g(tmparr("dta",1)) k tmparr
								s idrow=$i(@glb@(tab,"RD"))
 								s @glb@(tab,"RD",idrow)=idrow
 								s @glb@(tab,"Dta",idrow,1)=$$nd^OBapiED(mhrl,0)
 								s @glb@(tab,"Dta",idrow,2)=li
 								s @glb@(tab,"Dta",idrow,3)=sp
 								s @glb@(tab,"Dta",idrow,4)=$tr($j($$mh^OBapiED($g(arrsp("dta",1))#1440),0,2),".",":")
 								s @glb@(tab,"Dta",idrow,5)=zst1
 								s @glb@(tab,"Dta",idrow,6)=$tr($j($$mh^OBapiED($g(arrsp("dta",2))#1440),0,2),".",":")
 								s @glb@(tab,"Dta",idrow,7)=zst2
 								s @glb@(tab,"Dta",idrow,8)=dscerr
				 				s @glb@(tab,"Dta",idrow,9)=dsctu
			 				}
		 				}
	 				}
	 				// kontrola spoju proti turnusum
	 				s li="" f {
			 			s li=$o(@mywrkglb@(mhrl,2,li)) i li="" q
		 				s sp="" f {
				 			s sp=$o(@mywrkglb@(mhrl,2,li,sp)) i sp="" q
			 				s dscerr=""
			 				// kontrola, zda je spoj v turnuse (bude odjety)
			 				i '$d(@mywrkglb@(mhrl,1,li,sp)) {	
					 			i dscerr'="" s dscerr=dscerr_", "
				 				s dscerr=dscerr_"spoj není zařazen do turnusu a jede"
			 				}
			 				i dscerr'="" {
				 				k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,mhrl,"",.arrsp)
				 				s zst1="" k tmparr s err=$$gZst^OBapiED(idfa,nmsp,(+$g(arrsp("dta",6))),"",.tmparr) s zst1=$g(tmparr("dta",1)) k tmparr
				 				s zst2="" k tmparr s err=$$gZst^OBapiED(idfa,nmsp,(+$g(arrsp("dta",7))),"",.tmparr) s zst2=$g(tmparr("dta",1)) k tmparr
					 			s idrow=$i(@glb@(tab,"RD"))
 								s @glb@(tab,"RD",idrow)=idrow
 								s @glb@(tab,"Dta",idrow,1)=$$nd^OBapiED(mhrl,0)
 								s @glb@(tab,"Dta",idrow,2)=li
 								s @glb@(tab,"Dta",idrow,3)=sp
 								s @glb@(tab,"Dta",idrow,4)=$tr($j($$mh^OBapiED($g(arrsp("dta",1))#1440),0,2),".",":")
 								s @glb@(tab,"Dta",idrow,5)=zst1
 								s @glb@(tab,"Dta",idrow,6)=$tr($j($$mh^OBapiED($g(arrsp("dta",2))#1440),0,2),".",":")
 								s @glb@(tab,"Dta",idrow,7)=zst2
 								s @glb@(tab,"Dta",idrow,8)=dscerr
				 				s @glb@(tab,"Dta",idrow,9)=""
			 				}
		 				}
	 				}
 				}
 				k @mywrkglb
        }
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//
		k @mywrkglb
		k @mywrkglb1
		k @mywrkglb2
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0095">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65631,54133.299714</TimeChanged>
<TimeCreated>65631,52997.378958</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ===========
	// navrh planu  
	// ===========
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("id","idprv|tu|hrl")=""
	// in("datumDo")=dd.mm.rrrr
    // in("datumOd")=dd.mm.rrrr
    // in("rozkladat")=0/1
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//nastaveni
		k myarrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarrset) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //ciselniky
	    //parametry
	    //zakladni parametry
		s datumod=$g(in("datumOd")) s hrlod=$$dn^OBapiED(datumod)
		s datumdo=$g(in("datumDo")) s hrldo=$$dn^OBapiED(datumdo)
		s rozkladat=$g(in("rozkladat"))
	    //vystupni global
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="návrh plánu turnusů v období"_datumod_" - "_datumdo
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev	
		//statistika turnusu
 		k arri,arro
 		s arri("glb")=myglb
 		s @myglb@("dta",1)=hrlod
 		s @myglb@("dta",2)=hrldo
 		//turnusy
 		s idtur="" f {
			s idtur=$o(in("id",idtur)) i idtur="" q
			s idprv=$p(idtur,"|",1) s tu=$p(idtur,"|",2) s hrl=$p(idtur,"|",3) 
			s @myglb@("arr",1,tu)="" 
 		}
 		//neni turnus a tedy i provoz
 		i idprv="" q
 		s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
 		// okres pro prazdniny
 		s blo="" i idprv'="" s blo=$g(myarrset("arr",5,1,"prv",idprv))
 		i blo="" s blo=$g(myarrset("arr",5,1))
 		s @myglb@("dta",3)=blo
 		k arr s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,.arro) i err zt
		//
		k ^CacheTempOptT($j)
		s ^CacheTempOptT($j,"par",1)=zp
		s ^CacheTempOptT($j,"par",2)=hrlod
		s ^CacheTempOptT($j,"par",3)=hrldo
		s ^CacheTempOptT($j,"par",4)=wrkSS
		s ^CacheTempOptT($j,"par",6)=idfa
		s ^CacheTempOptT($j,"par",7)=nmsp
		i 'rozkladat s ^CacheTempOptT($j,"par",8)=-1
		i +rozkladat s ^CacheTempOptT($j,"par",8)=+1
		//
		s tu="" f {
	 		s tu=$o(@myglb@("arr",1,tu)) i tu="" q
	 		s hrl="" f {
		 		s hrl=$o(@myglb@("arr",2,tu,"arr",2,hrl)) i hrl="" q
				k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) i +err zt
				s zstod="" s find=0
				s tm="" f {
					s tm=$o(arrtur("arr","tur",tm)) i (tm="")!(find) q
					s id=$g(arrtur("arr","tur",tm,"dta",2))
					i (id=3) {
						s li=$g(arrtur("arr","tur",tm,"dta",5))
						s sp=$g(arrtur("arr","tur",tm,"dta",6))
						k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
						s idzst=$g(arrsp("dta",6))
						k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
						s zstod=$g(arrzst("dta",1))
						s find=1
					}
					i (id=4)!(id=5)!(id=6)!(id=7) {
						s idzst=$g(arrtur("arr","tur",tm,"dta",9))
						k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
						s zstod=$g(arrzst("dta",1))
						s find=1
					}
				}
				s zstdo="" s find=0
				s tm="" f {
					s tm=$o(arrtur("arr","tur",tm),-1) i (tm="")!(find) q
					s id=$g(arrtur("arr","tur",tm,"dta",2))
					i (id=3) {
						s li=$g(arrtur("arr","tur",tm,"dta",5))
						s sp=$g(arrtur("arr","tur",tm,"dta",6))
						k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
						s idzst=$g(arrsp("dta",7))
						k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
						s zstdo=$g(arrzst("dta",1))
						s find=1
					}
					i (id=4)!(id=5)!(id=6)!(id=7) {
						s idzst=$g(arrtur("arr","tur",tm,"dta",10))
						k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
						s zstdo=$g(arrzst("dta",1))
						s find=1
					}
				}
				s ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",1)=$j(+$o(arrtur("arr","tur","")),0,0)
				s myind=(+$o(arrtur("arr","tur",""),-1))
				s ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",2)=$j($g(arrtur("arr","tur",myind,"dta",1)),0,0)
				s ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",3)=+$g(arrtur("arr","tuv",11))
				s ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",4)=zstod
				s ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",5)=zstdo
			    //
				// casove prubehy turnusu pro hrl + data =======
				//^CacheTempOptT($j,"arr",2,hrl,tu,"dta",1)=$lb(0/1) ... 0 do 50 km / 1 nad 50 km
				//^CacheTempOptT($j,"arr",2,hrl,tu,"arr",1,tm)=... prubeh turnusu pole "tur"
				//^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(idcin,idsmena,t50,mmriz) ... rozpis turnusu po min idcin=0 odpocinek / 1 jizda / 2 ostatni, mmriz=0/1 ... zda se jedna o rizeni, dale scitam 
				// =============================================
				s t50=0
				s ^CacheTempOptT($j,"arr",2,hrl,tu,"dta",1)=$lb(t50)
				m ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",1)=arrtur("arr","tur") //prubeh turnusu (od=do)
				//zacatek a konec
				s mmbeg=$o(arrtur("arr","tur","")) s mmend=""
				i mmbeg'="" {
					s mmend=$o(arrtur("arr","tur",""),-1)
					s mmend=$g(arrtur("arr","tur",mmend,"dta",1))
				}
				//cela smena
				f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) {
					s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(0,tu,t50,0)
				}
				//prepis turnusu
				s mmbeg="" f {
					s mmbeg=$o(arrtur("arr","tur",mmbeg)) i mmbeg="" q
					s mmend=$g(arrtur("arr","tur",mmbeg,"dta",1))
					s idcin=$g(arrtur("arr","tur",mmbeg,"dta",2))
					//spoj 	
					i idcin=3 {
						s li=$g(arrtu("arr","tur",mmbeg,"dta",5))
						s sp=$g(arrtu("arr","tur",mmbeg,"dta",6))
						s mapr=$g(arrtur("arr","tur",mmbeg,"dta",7))
						s mapo=$g(arrtur("arr","tur",mmbeg,"dta",8))
						k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
						//pole vnitrnich pauz spoje
						k arrpau
						s mmspbeg=$g(arrsp("dta",1))
						s mmpaubeg="" f {
							s mmpaubeg=$o(arrsp("arr","pau",mmpaubeg)) i mmpaubeg="" q
							s mmpaulng=+$g(arrsp("arr","pau",mmpaubeg))
							f mm=($j((mmspbeg+mmpaubeg),0,0)+1):1:$j((mmspbeg+mmpaubeg+mmpaulng),0,0) {
								s arrpau(mm)="" 
							}
						}
						//spoje nad 50
						s t50=($g(arrsp("dta",5))>50)
						i t50 s ^CacheTempOptT($j,"arr",2,hrl,tu,"dta",1)=$lb(t50)
						//manipulace dopocitavana
						i mapr["*" {
							f tmpmm=(+$tr(mapr,"*","")):-1:1 {
								s mm=($j(mmbeg,0,0)-tmpmm+1)
								s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(2,tu,t50,0)
 							}
						}
 						i mapo["*" {
	 						f tmpmm=1:1:(+$tr(mapo,"*","")) {
		 						s mm=($j(mmend,0,0)+tmpmm)
		 						s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(2,tu,t50,0)
	 						}
 						}
 						//manipulace tvrda
 						i +mapr {
	 						f tmpmm=1:1:(mapr) {
		 						s mm=($j(mmbeg,0,0)+tmpmm)
		 						s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(2,tu,t50,0)
	 						}
 						}
 						i +mapo {
	 						f tmpmm=(+mapo):-1:1 {
		 						s mm=($j(mmend,0,0)-tmpmm+1)
		 						s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(2,tu,t50,0)
	 						}
 						}
 						//jizda
						f mm=($j((mmbeg+mapr),0,0)+1):1:$j((mmend-mapo),0,0) {
							//je ve spoji vnitrni pauza
							i $d(arrpau(mm)) continue
							//jede
							s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(1,tu,t50,1)
						}
						k arrpau
					}
					//pristaveni, odstaveni, prejezd, rezijni jizda 
					i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) {
						f mm=($j((mmbeg),0,0)+1):1:$j((mmend),0,0) {
							s t50=$g(arrtur("arr","tur",mmbeg,"dta",3))>50
							i t50 s ^CacheTempOptT($j,"arr",2,hrl,tu,"dta",1)=$lb(t50)
							s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(1,tu,t50,1)
						}	
					}
					//ostatni prace,dodk
					i (idcin=10)!(idcin=14) {
						f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) {
							s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(2,tu,t50,0)
						}
					}
					//bezp.prestavka, nocovani, preruseni, prestavka na jidlo, odpocinek, rozdelena smena, pracovni pohotovost
					i (idcin=9)!(idcin=11)!(idcin=12)!(idcin=13)!(idcin=15)!(idcin=16)!(idcin=17) {
						f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) {
							s ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(0,tu,t50,0)
						}
					}
			 	}
			}
		}		
 		i $t(Ridici^ALVABCOPTIM1call)'="" s err=$$Ridici^ALVABCOPTIM1call()
 		//vystupni tabulka
 		s idtab=$g(^CacheTempOptT($j,"par",5)) i idtab="" s idtab="main"
 		s out("tab")=idtab
 		// 
		k @myglb	
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0103">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65667,61237.690631</TimeChanged>
<TimeCreated>65661,54836.912942</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==========================
	// prujezdy lokalni zastavkou
	// ==========================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("datum")=dd.mm.rrrr
	// in("lokalniZastavka")=id
	// in("provoz",idprv)=""
	
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //nastaveni
	    k marrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.marrset) i +err zt
	    //ciselniky
	    k arrzst s err=$$gZst^OBapiED(idfa,nmsp,($g(in("lokalniZastavka"))_"/L"),"",.arrzst) i +err zt
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //global pro tisk
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")="přehled průjezdů lokální zastávkou "_$g(arrzst("dta",1))_" ("_$g(in("lokalniZastavka"))_") "_" dne: "_$g(in("datum"))
		// za obdobi hrl udelat statistiku turnusu
		s hrl=$$dn^OBapiED($g(in("datum")))
		f mhrl=(hrl-1),hrl {
			// pro kazdy den udelam statistiku turnusu a pole zastavek
			k @myglb1 k @myglb2
 			k arri
 			s arri("turpl",1)=mhrl
 			s arri("glb")=myglb1
 			m arri("prv")=in("provoz")
 			s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
 			s zp="" f {
	 			s zp=$o(@myglb1@(zp)) i zp="" q
	 			s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
	 			s blo=""
				s blo=$g(marrset("arr",5,1))
				i $g(marrset("arr",5,1,"prv",idprv))'="" s blo=$g(marrset("arr",5,1,"prv",idprv))
				k @myglb2
				s @myglb2@("dta",1)=mhrl
				s @myglb2@("dta",2)=mhrl
				s @myglb2@("dta",3)=blo
				s tu="" f {
					s tu=$o(@myglb1@(zp,tu)) i tu="" q
					s @myglb2@("arr",1,tu)=""
				}
				k arri s arri("glb")=myglb2
				s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,"") i +err zt
				s tu="" f {
					s tu=$o(@myglb2@("arr",2,tu)) i tu="" q
					//turnus se jede
					i +$g(@myglb2@("arr",2,tu,"dta",3)) {
						k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,mhrl,"",.arrtu) i +err zt
						s min="" f {
							s min=$o(arrtu("arr","tur",min)) i min="" q
							s mindo=$g(arrtu("arr","tur",min,"dta",1))
							s idcin=$g(arrtu("arr","tur",min,"dta",2))
							i '((idcin=4)!(idcin=5)!(idcin=6)) continue
							s czstod=$g(arrtu("arr","tur",min,"dta",9))
							s czstdo=$g(arrtu("arr","tur",min,"dta",10))
							//odjezd
							i czstod=($g(in("lokalniZastavka"))_"/L") {
								s dhrl=(mhrl+(min\1440))
								i dhrl=hrl {
									s @myglb@(dhrl,(min#1440),zp,tu)=1
								}
							}
							//prijezd
							i czstdo=($g(in("lokalniZastavka"))_"/L") {
								s dhrl=(mhrl+(mindo\1440))
								i dhrl=hrl {
									s @myglb@(dhrl,(mindo#1440),zp,tu)=2
								}
							}
						}
					}
				}
 			}
		}
		//definice tabulky
 		s colHead="datum~provoz~turnus~příjezd~odjezd"
 		s colSkryt="0~0~0~0~0"
 		s colTyp="D~N~T~T~T"
 		s colForm=">~>~>~>~>"
 		s @glb@(tab,"Name")=$g(out("nazev"))
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		//def.sloupcu
 		f cnt=1:1:$l(colHead,"~") {
 			s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 			i +$p(colSkryt,"~",cnt) {
	 			s @glb@(tab,"SL",+$p(colSkryt,"~",cnt),"Skryt",cnt)=""
 			}
 		}
		// tabulka
 		s mhrl="" f {
		 	s mhrl=$o(@myglb@(mhrl)) i mhrl="" q
		 	s mdat=$$nd^OBapiED(mhrl,0)
		 	s min="" f  {
			 	s min=$o(@myglb@(mhrl,min)) i min="" q
			 	s zp="" f {
				 	s zp=$o(@myglb@(mhrl,min,zp)) i zp="" q
				 	k idprv s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv)
				 	s tu="" f {
					 	s tu=$o(@myglb@(mhrl,min,zp,tu)) i tu="" q
					 	s val=$g(@myglb@(mhrl,min,zp,tu))
					 	s idrow=$i(@glb@(tab,"RD"))
 						s @glb@(tab,"RD",idrow)=idrow
 						s @glb@(tab,"Dta",idrow,1)=mdat
 						s @glb@(tab,"Dta",idrow,2)=$g(idprv)
 						s @glb@(tab,"Dta",idrow,3)=tu
 						i val=1 s @glb@(tab,"Dta",idrow,5)=$tr($j($$mh^OBapiED(min),0,2),".",":")
				 		i val=2 s @glb@(tab,"Dta",idrow,4)=$tr($j($$mh^OBapiED(min),0,2),".",":")
				 	}
			 	}
		 	}
		}
		k @myglb k @myglb1 k @myglb2
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0119">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65666,56584.510867</TimeChanged>
<TimeCreated>65661,57404.909949</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==================
	// statistika turnusu
	// ==================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// in("provoz",idprv)=""
	//
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //nastaveni
	    k marrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.marrset) i +err zt
	    //ciselnik DSP
        k arrcis4 s err=$$gCis^OBapiED(idfa,nmsp,4,"",.arrcis4) i +err zt
        //ciselnik PRS
        k arrcis5 s err=$$gCis^OBapiED(idfa,nmsp,5,"",.arrcis5) i +err zt
        //ocislovani prs pro sloupce
        s cnt=.001
        s id="" f {
 			s id=$o(arrcis5("arr",id)) i id="" q
			s arrcis5("arr",id,"col")=cnt
			s cnt=cnt+.001
 		}
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
	    //global pro tisk
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")="statisticke výstupy"
		// za obdobi hrl udelat statistiku turnusu
		s hrlod=$$dn^OBapiED($g(in("datumOd")))
		s hrldo=$$dn^OBapiED($g(in("datumDo")))
		//definice tabulky
		s nazev="statistika turnusů, období "_$$nd^OBapiED(hrlod,0)_" - "_$$nd^OBapiED(hrldo,0)
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		s @glb@(tab,"Name")=nazev
 		// definice sloupců tabulky
 		//         1      2      3            4        5        6    7             8
  		s colHead="provoz~turnus~čas.varianta~datum od~datum do~jede~km druh.celk.~km PřS celk."
 		s colTyp="N~T~D~D~D~N~N2~N2"
 		s colForm=">~>~>~>~>~>~>~>"
 		f cnt=1:1:$l(colHead,"~") {
 			s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
 		//rozpad km podle dsp
 		s id="" f {
	 		s id=$o(arrcis4("arr",id)) i id="" q
	 		s @glb@(tab,"SL",(7+(id/100)))="km "_$g(arrcis4("arr",id))
 			s @glb@(tab,"SL",(7+(id/100)),"Format")=">"
 			s @glb@(tab,"SL",(7+(id/100)),"Typ")="N2"
 			s @glb@(tab,"SL",7,"Skryt",(7+(id/100)))=""
 		}
 		//statistika turnusu a vytvoreni tabulky
		k arri
 		s arri("turpl",2)=hrlod
 		s arri("glb")=myglb1
 		m arri("prv")=in("provoz")
 		s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
 		s zp="" f {
	 		s zp=$o(@myglb1@(zp)) i zp="" q
	 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
	 		s blo=""
			s blo=$g(marrset("arr",5,1))
			i $g(marrset("arr",5,1,"prv",idprv))'="" s blo=$g(marrset("arr",5,1,"prv",idprv))
			k @myglb2
			s @myglb2@("dta",1)=hrlod
			s @myglb2@("dta",2)=hrldo
			s @myglb2@("dta",3)=blo
			s tu="" f {
				s tu=$o(@myglb1@(zp,tu)) i tu="" q
				s @myglb2@("arr",1,tu)=""
			}
			k arri s arri("glb")=myglb2
			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,"") i +err zt
			//projdu turnusy a sestavim tabulku
			s tu="" f {
				s tu=$o(@myglb2@("arr",1,tu)) i tu="" q
				s hrl="" f {
					s hrl=$o(@myglb2@("arr",1,tu,hrl)) i hrl="" q
					s myhrlod=$g(@myglb2@("arr",1,tu,hrl,"dta",1))
					s myhrldo=$g(@myglb2@("arr",1,tu,hrl,"dta",2))
					s jede=$g(@myglb2@("arr",1,tu,hrl,"dta",3))
					//turnus se jede
					i +jede {
						//data turnusu
						k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) i +err zt
						// aktualizace druhu spoje v prubehu turnusu podle db spoju
						s err=$$actDspTur^OBapiED(idfa,nmsp,hrl,1,.arrtu) i +err zt
						// aktualizace tarifnich km v prubehu turnusu podle db spoju
						s err=$$actTkmTur^OBapiED(idfa,nmsp,hrl,1,.arrtu) i +err zt
	  					// aktualizace prepravnich systemu v prubehu turnusu podle db spoju a nastaveni prs
	  					k arri s arri("par",1)=idprv
	 					s err=$$actPrsTur^OBapiED(idfa,nmsp,hrl,.arri,.arrtu) i +err zt
	 					k arri
	 					// suma km za prepravni systemy a druhy spoju do pole arrsmprs
	 					k arrsmprs
	 					s err=$$actPrsTurSum^OBapiED(idfa,nmsp,hrl,.arrtu,.arrsmprs) i +err zt
	 					//
	 					//            1      2        3         4     5             6
	  					//s colHead="provoz~turnus~čas.varianta~jede~km druh.celk.~km PřS celk."
	  					//	
	 					s idRow=$i(@glb@(tab,"RD"))
						s @glb@(tab,"RD",idRow)=""
						s @glb@(tab,"Dta",idRow,1)=idprv
						s @glb@(tab,"Dta",idRow,2)=tu
						s @glb@(tab,"Dta",idRow,3)=$$nd^OBapiED(hrl,0)
						s @glb@(tab,"Dta",idRow,4)=$$nd^OBapiED(myhrlod,0)
						s @glb@(tab,"Dta",idRow,5)=$$nd^OBapiED(myhrldo,0)
						s @glb@(tab,"Dta",idRow,6)=jede
						s @glb@(tab,"Dta",idRow,7)=(jede*$g(arrtu("arr","tuv",22)))										//km celkem
						s @glb@(tab,"Dta",idRow,7.01)=(jede*$g(arrtu("arr","tuv",23)))		//km vnitro
						s @glb@(tab,"Dta",idRow,7.02)=(jede*$g(arrtu("arr","tuv",24)))		//km dálkové
						s @glb@(tab,"Dta",idRow,7.03)=(jede*$g(arrtu("arr","tuv",25)))		//km město
						s @glb@(tab,"Dta",idRow,7.04)=(jede*$g(arrtu("arr","tuv",26)))		//km příměsto
						s @glb@(tab,"Dta",idRow,7.05)=(jede*$g(arrtu("arr","tuv",27)))		//km mezin.
						s @glb@(tab,"Dta",idRow,7.06)=(jede*$g(arrtu("arr","tuv",28)))		//km smluvní
						s @glb@(tab,"Dta",idRow,7.07)=(jede*$g(arrtu("arr","tuv",29)))		//km režijní
						//
						// km dle prepravnich systemu
						//
						s @glb@(tab,"Dta",idRow,8)=(jede*$g(arrtu("arr","tuv",22)))		//km celkem
						s idprs="" f {
							s idprs=$o(arrsmprs("arr",1,idprs)) q:idprs=""
							s iddkm="" f {
								s iddkm=$o(arrsmprs("arr",1,idprs,iddkm)) q:iddkm=""  d
								s km=jede*($g(arrsmprs("arr",1,idprs,iddkm)))
								// rozpad sloupce celk.km na km dle prs a prs rezijni
								s col=(8+$g(arrcis5("arr",idprs,"col"))+.0001)
								i iddkm=7 s col=col+.0001
								s @glb@(tab,"Dta",idRow,col)=$g(@glb@(tab,"Dta",idRow,col))+km
								// doplnim definici sloupce
								s dsc=idprs_$c(13,10)_$p($g(arrcis5("arr",idprs)),"~",1)
								i iddkm=7 s dsc=dsc_"/režijní"
								s @glb@(tab,"SL",col)=dsc
								s @glb@(tab,"SL",col,"Format")=">"
	 							s @glb@(tab,"SL",col,"Typ")="N2"
	 							s @glb@(tab,"SL",8,"Skryt",col)=""
							}	
						}
					}
				}
 			}
		}
		k @myglb k @myglb1 k @myglb2
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0130">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65629,43248.164203</TimeChanged>
<TimeCreated>65626,48102.089275</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//==============
	//prubeh turnusu
	//==============
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("id","idprv|tu|hrl")=""
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
		//ciselniky
	    //pracovni global
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","vytvářím tiskovou sestavu",$j)
	    k out
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
        s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s nazev="výpis časových údajů"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")=nazev
		//sestava - definice
 		//         1      2      3           4   5                   6                 7             8       9          10           11    12   13              14            15 16 17 18        19  20              21   22    
 		s colHead="provoz~turnus~časová|var.~den~čas začátek|(hh:mm)~čas konec|(hh:mm)~pauza|(hh:mm)~činnost~doba|(min)~doba|(hh:mm)~linka~spoj~manipulace|před~manipulace|po~od~do~km~informace~přs~rychlost|(km/h)~kurz~hrazený přejezd"
 		
 		//        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8  9 0 1 2 3
 		s colTyp="N~T~T~N~T~T~T~T~N~T~T~T~T~T~T~T~N~T~T~N~T~T~T"
 		//         1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
 		s colForm=">~>~>~>~>~>~>~<~>~>~>~>~>~>~<~<~>~<~<~>~>~>~>"
 		s @glb@(tab,"Name")=$g(in("nazev"))
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		// def.sloupcu
 		f cnt=1:1:$l(colHead,"~") {
	 		s @glb@(tab,"SL",cnt)=$$cnvTxt^OBapiED($p(colHead,"~",cnt),"|",$c(13,10))
 			s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
 			s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 		}
 		//setrizeni turnusu
 		s idtur="" f {
			s idtur=$o(in("id",idtur)) i idtur="" q
			s idprv=$p(idtur,"|",1) s tu=$p(idtur,"|",2) s hrl=$p(idtur,"|",3) 
			s @myglb@(1,idprv,tu,hrl)=""
 		}
		//
		//tiskove udaje
		s idprv="" f {
			s idprv=$o(@myglb@(1,idprv)) i idprv="" q
			s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
			s tu="" f {
				s tu=$o(@myglb@(1,idprv,tu)) i tu="" q
				s hrl="" f {
					s hrl=$o(@myglb@(1,idprv,tu,hrl)) i hrl="" q
					k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtur) i +err zt
					//konverze do tabulky 
					k arrtab  k arri,arro s arri("par","typkonverze")=0
					s isok=##class(ALVA.AUDO.API.TurnusyEditFce).cnvTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
					//aktualizace udaju v tabulce 
					k arri,arro
					s isok=##class(ALVA.AUDO.API.TurnusyEditFce).actTurTab(.sys,zp,hrl,.arrtur,.arrtab,.arri,.arro) i 'isok zt
					//
					s mycnt="" f {
						s mycnt=$o(arrtab(mycnt)) i mycnt="" q
						s myval=$g(arrtab(mycnt))																																																																															
						s idrow=$i(@glb@(tab,"RD"))
						s @glb@(tab,"RD",idrow)=idrow
						s @glb@(tab,"Dta",idrow,1)=idprv
				 		s @glb@(tab,"Dta",idrow,2)=tu
				 		s @glb@(tab,"Dta",idrow,3)=$$nd^OBapiED(hrl,0)
				 		s @glb@(tab,"Dta",idrow,4)=$lg(myval,4)
				 		s @glb@(tab,"Dta",idrow,5)=$lg(myval,7)
				 		s @glb@(tab,"Dta",idrow,6)=$lg(myval,8)
				 		s @glb@(tab,"Dta",idrow,7)=$lg(myval,9)
				 		s @glb@(tab,"Dta",idrow,8)=$lg(myval,11)
				 		s @glb@(tab,"Dta",idrow,9)=$lg(myval,12)
				 		s @glb@(tab,"Dta",idrow,10)=$lg(myval,13)
						s @glb@(tab,"Dta",idrow,11)=$lg(myval,14)
						s @glb@(tab,"Dta",idrow,12)=$lg(myval,15)
						s @glb@(tab,"Dta",idrow,13)=$lg(myval,16)
						s @glb@(tab,"Dta",idrow,14)=$lg(myval,17)
						s @glb@(tab,"Dta",idrow,15)=$lg(myval,19)
						s @glb@(tab,"Dta",idrow,16)=$lg(myval,21)
						s @glb@(tab,"Dta",idrow,17)=$lg(myval,22)
						s @glb@(tab,"Dta",idrow,18)=$lg(myval,24)
						s @glb@(tab,"Dta",idrow,19)=$lg(myval,25)
						s @glb@(tab,"Dta",idrow,20)=$lg(myval,26)
						s @glb@(tab,"Dta",idrow,21)=$lg(myval,27)
						s @glb@(tab,"Dta",idrow,22)=$lg(myval,28)
					}
				}
			}
		}
		k @myglb	
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.TISKY.TUR.AUDO0141">
<IncludeCode>ALVAAUDO,ALVAEDISON,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65666,54135.828174</TimeChanged>
<TimeCreated>65661,57515.9849</TimeCreated>

<Method name="Print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// ==================
	// obsazenost turnusu
	// ==================
	//
	// VSTUP:
	// in("backgroundtask")=[0/1]
	// in("taskid")=taskid
	// in("datumOd")=dd.mm.rrrr
	// in("datumDo")=dd.mm.rrrr
	// in("provoz",idprv)=""
	// in("tarif",idtar)=""
	// in("turnus",idtur)=""
	//
	// VYSTUP:
	// out("idx")=idx
	// out("tab")=tab (main)
	// out("nazev")=nazev
	//
	s ret=$$$OK
	s err=""
	$$$FROMSERVER
	try {
	    //nastaveni
	    k marrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.marrset) i +err zt
	    //pracovni global(y)
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
	    s mywrk=$$gWrkALVAAD^OBapiED() s myglb2="^||wrk.ALVA.AD("_mywrk_")" k @myglb2
	    //uloha na pozadi
	    i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá výpočet obsazenosti turnusů",$j)
	    k out
	    //global pro tisk
		s wrkSS=##class(ALVA.TISK.Main).GetNewGlobalIndex()
     	s glb="^CacheTempSS("_wrkSS_","_"""OUT"""_","_"""mltab"""_")"
        s tab="main"
        s out("idx")=wrkSS
		s out("tab")=tab
		s out("nazev")="výpočet obsazenosti turnusů"
		//priprava dat turnus/linka/spoj/den/obsazeni
		//@myglb@(1,zp,turnus,hrlvar,hrlodj,li,sp,tm)=$lb(lshrlodj,lstmodj,lshrlpri,lstmpri,maxobs,liAPL)
		//@myglb@(1,zp,turnus,hrlvar,hrlodj,li,sp,tm,"arr",1)=pole s prubehem xk
		//@myglb@(2,li)=""
		s hrlod=$$dn^OBapiED($g(in("datumOd")))
		s hrldo=$$dn^OBapiED($g(in("datumDo")))
		d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá výpočet statistiky turnusů",$j)		
		k arri
 		s arri("turpl",2)=hrlod
 		s arri("glb")=myglb1
 		m arri("prv")=in("provoz")
 		s err=$$lTur^OBapiED(idfa,nmsp,.arri,"") i +err zt
 		s zp="" f {
	 		s zp=$o(@myglb1@(zp)) i zp="" q
	 		s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt
	 		s blo=""
			s blo=$g(marrset("arr",5,1))
			i $g(marrset("arr",5,1,"prv",idprv))'="" s blo=$g(marrset("arr",5,1,"prv",idprv))
			k @myglb2
			s @myglb2@("dta",1)=hrlod
			s @myglb2@("dta",2)=hrldo
			s @myglb2@("dta",3)=blo
			s tu="" f {
				s tu=$o(@myglb1@(zp,tu)) i tu="" q
				//jsou zadane jen nektere turnusy 
		 		i ($o(in("turnus",""))'="")&'$d(in("turnus",tu)) continue 
		 		//===============================
		 		s @myglb2@("arr",1,tu)=""
			}
			k arri,arro
			s arri("glb")=myglb2
			s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,.arro) i err zt
	 		s tu="" f {
		 		s tu=$o(@myglb2@("arr",1,tu)) i tu="" q
		 		s hrl="" f {
			 		s hrl=$o(@myglb2@("arr",1,tu,hrl)) i hrl="" q
			 		k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) i err zt
			 		//prubeh turnusu
	 		 		s tm="" f {
		 		 		s tm=$o(arrtu("arr","tur",tm)) i tm="" q
		 		 		i $g(arrtu("arr","tur",tm,"dta",2))'=3 continue
		 		 		s li=$g(arrtu("arr","tur",tm,"dta",5))
		 		 		s sp=$g(arrtu("arr","tur",tm,"dta",6))
		 		 		//konverze cisla spoje na originalni spoj
 				 		k tmpsp s err=$$gOrgNumSp^OBapiED(idfa,nmsp,li,sp,(hrl+(tm\1440)),"",.tmpsp) i tmpsp'="" s sp=tmpsp
		 		 		s tmpri=$g(arrtu("arr","tur",tm,"dta",1))
		 		 		//zapis pro vsechny dny odjezdu
		 		 		s hrlodj="" f {
			 		 		s hrlodj=$o(@myglb2@("arr",1,tu,hrl,"arr",2,hrlodj)) i hrlodj="" q
			 		 		s val=""
		 		 	 		s $li(val,1)=(hrlodj+(tm\1440))
		 		 	 		s $li(val,2)=(tm#1440)
		 		 	 		s $li(val,3)=(hrlodj+(tmpri\1440))
		 		 	 		s $li(val,4)=(tmpri#1440)
		 		 	 		s $li(val,5)=""
		 		 	 		s $li(val,6)=""
		 		 	 		s @myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)=val
		 		 	 		s @myglb@(2,li)=""	 
	 		 	 		}
		 	 		} 
		 		}
	 		}
 		}
		k @myglb1 k @myglb2
 		// varianty linek z archivu linek
 		s li="" f {
	 		s li=$o(@myglb@(2,li)) i li="" q
	 		k arr s err=##class(ALVA.JRMAIN.MLAPI).gLinPltAPL(nmsp,hrlod,(hrldo+1),li,.arr)
     		m @myglb@(2,li)=arr 
 		}
 		//obsazenosti pro linky a spoje z aplikace listky
 		//@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)=val
 		s zp="" f {
	 		s zp=$o(@myglb@(1,zp)) i zp="" q
	 		s tu="" f {
		 		s tu=$o(@myglb@(1,zp,tu)) i tu="" q
		 		i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá nápočet obsazenosti pro turnus "_tu,$j)
		 		s hrl="" f {
			 		s hrl=$o(@myglb@(1,zp,tu,hrl)) i hrl="" q
			 		s hrlodj="" f {
				 		s hrlodj=$o(@myglb@(1,zp,tu,hrl,hrlodj)) i hrlodj="" q
			 	 		s li="" f {
				 	 		s li=$o(@myglb@(1,zp,tu,hrl,hrlodj,li)) i li="" q
				 	 		s sp="" f {
					 	 		s sp=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp)) i sp="" q
					 	 		s tm="" f {
						 	 		s tm=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)) i tm="" q
						 	 		s val=$g(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm))
						 	 		s lshrlodj=$lg(val,1)
						 	 		s lstmodj=$lg(val,2)
						 	 		s lshrlpri=$lg(val,3)
						 	 		s lstmpri=$lg(val,4)
						 	 		//obsazenost z listku
						 	 		k arri,arro
						 	 		s arri("linka")=li
     					 	 		s arri("spoj")=sp
     					 	 		s tmpl1="" s tmpl2=""
     					 	 		s tmpl1=$o(@myglb@(2,li,(lshrlodj+.01)),-1)
     					 	 		i tmpl1 s tmpl2=$o(@myglb@(2,li,tmpl1,(lshrlodj-.01)))
     					 	 		s hrlliAPL="" i (tmpl1&tmpl2) s hrlliAPL=$g(@myglb@(2,li,tmpl1,tmpl2))
     					 	 		i 'hrlliAPL continue
     					 	 		s $li(val,6)=1 //linka se nasla v archivu (APL)
     					 	 		s arri("hPlatnostLinky")=hrlliAPL
     					 	 		s arri("hDatumOd")=lshrlodj
     					 	 		s arri("hDatumDo")=lshrlpri
     					 	 		s arri("hCasOd")=(lstmodj*60)
     					 	 		s arri("hCasDo")=(lstmpri*60)
     					 	 		m arri("tarif")=in("tarif")
     					 	 		//
     					 	 		s err=##class(ALVA.TICKETS.Api).GetObsazenostSpoje(idfa,nmsp,.arri,.arro)
     					 	 		i $$$ISERR(err) s err=$system.Status.GetErrorText(err) zt "merr"
 						 	 		s err=""
						 	 		//===================
						 	 		s $li(val,5)=$g(arro("maxObsazenost"))
						 	 		s @myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)=val
						 	 		m @myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm,"arr",1)=arro("tc")
					 	 		}
			     	 		}
			 	 		}
		 	 		}
		 		}
	 		}
 		}
 		k @myglb@(2)
 		//
 		//zapis do databaze + protokol 
 		// sestaveni tabulky
 		s colHead="zp~turnus~čas.var.~max.obs."
 		s colSkryt="0~0~0~0"
 		s colTyp="N~T~D~N"
 		s colForm=">~>~>~>"
 		s @glb@(tab,"Name")="přehled obsazenosti turnusů v období "_$$nd^OBapiED(hrlod,0)_" - "_$$nd^OBapiED(hrldo,0)
 		s @glb@(tab,"Format")="<"
 		s @glb@(tab,"STYP")="T"
 		s @glb@(tab,"Index","lsNoApl")="přehled linek a spojů, které nejsou v archivu platných linek"
 		//def.sloupcu tabulky
 		f cnt=1:1:$l(colHead,"~") {
 			s @glb@(tab,"SL",cnt)=$p(colHead,"~",cnt)
    		s @glb@(tab,"SL",cnt,"Format")=$p(colForm,"~",cnt)
    		s @glb@(tab,"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
    		i +$p(colSkryt,"~",cnt) s @glb@(tab,"SL",+$p(colSkryt,"~",cnt),"Skryt",cnt)=""
 		}
 		//def dnu
 		f hrl=$g(hrlod):1:$g(hrldo) {
			s @glb@(tab,"SL",hrl)=$$nd^OBapiED(hrl,0)_"/"_$$ntd^OBapiED(hrl)
    		s @glb@(tab,"SL",hrl,"Format")=">"
    		s @glb@(tab,"SL",hrl,"Typ")="N"
    		//zvyrazneni So,Ne
    		i (hrl+3#7+1)>5 s @glb@(tab,"SL",hrl,"Priorita")=1
 		}
 		//definice ke grafu
 		s @glb@(tab,"SS_DChart",4)=2
 		//=================
 		//
 		i $g(in("backgroundtask")) d ##class(ALVA.EDISON.BackgroundTask).Update(.err,idfa,$g(in("taskid")),$$$BackgroundTaskStatePending,"","probíhá zápis obsazenostu k turnusům",$j)
 		//
 		s zp="" f {
	 		s zp=$o(@myglb@(1,zp)) i zp="" q
	 		s tu="" f {
		 		s tu=$o(@myglb@(1,zp,tu)) i tu="" q
		 		s hrl="" f {
			 		s hrl=$o(@myglb@(1,zp,tu,hrl)) i hrl="" q
			 		s mymaxobs=""
			 		s idrow=$i(@glb@(tab,"RD"))
         	 		s @glb@(tab,"RD",idrow)=""
         	 		s @glb@(tab,"Dta",idrow,1)=zp
         	 		s @glb@(tab,"Dta",idrow,2)=tu
         	 		s @glb@(tab,"Dta",idrow,3)=$$nd^OBapiED(hrl,0)
         	 		s @glb@(tab,"Dta",idrow,4)=""
		 	 		s hrlodj="" f {
	 			 		s hrlodj=$o(@myglb@(1,zp,tu,hrl,hrlodj)) i hrlodj="" q
			 	 		s li="" f {
	 				 		s li=$o(@myglb@(1,zp,tu,hrl,hrlodj,li)) i li="" q
				 	 		s sp="" f {
 						 		s sp=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp)) i sp="" q
					 	 		s tm="" f {
	 						 		s tm=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)) i tm="" q
						 	 		s val=$g(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm))
						 	 		s maxobs=$lg(val,5)
						 	 		i $g(@glb@(tab,"Dta",idrow,hrlodj))<maxobs {
	 							 		s @glb@(tab,"Dta",idrow,hrlodj)=maxobs
							 	 		s @glb@(tab,"Dta",idrow,hrlodj,"Index")=(zp_"|"_tu_"|"_hrlodj)
						 	 		}
						 	 		i mymaxobs<maxobs {
							 	 		s mymaxobs=maxobs
							 	 		s @glb@(tab,"Dta",idrow,4)=maxobs
						 	 		}
					 	 		}
			     	 		}
	 			 		}
			  			//rozpad turnusu
			  			s colHead="datum~turnus~linka~spoj~tč~zastávka~nástup~výstup~obsazenost"
 			  			s colTyp="D~T~N~N~N~T~N~N~N"
 			  			s colForm=">~>~>~>~>~<~>~>~>"
 			  			s @glb@((zp_"|"_tu_"|"_hrlodj),"Name")="obsazenost turnusu "_tu_" dne "_$$nd^OBapiED(hrlodj,0)
 			  			s @glb@((zp_"|"_tu_"|"_hrlodj),"Format")="<"
 			  			s @glb@((zp_"|"_tu_"|"_hrlodj),"STYP")="T"
 			 			//def.sloupcu tabulky
 			 			f cnt=1:1:$l(colHead,"~") {
 	 				 		s @glb@((zp_"|"_tu_"|"_hrlodj),"SL",cnt)=$p(colHead,"~",cnt)
    				 		s @glb@((zp_"|"_tu_"|"_hrlodj),"SL",cnt,"Format")=$p(colForm,"~",cnt)
    			 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"SL",cnt,"Typ")=$p(colTyp,"~",cnt)
 						}
			 			s li="" f {
						s li=$o(@myglb@(1,zp,tu,hrl,hrlodj,li)) i li="" q
					 		s sp="" f {
						 		s sp=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp)) i sp="" q
					 	 		s paro=-1 i sp#2 s paro=1 
					 	 		s tm="" f {
	 						 		s tm=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)) i tm="" q
						 	 		s tc="" f {
	 							 		s tc=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm,"arr",1,tc),paro) i tc="" q
							 	 		s val=$g(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm,"arr",1,tc))
							 	 		s row=$i(@glb@((zp_"|"_tu_"|"_hrlodj),"RD"))
						 	 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"RD",row)=""
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,1)=((hrlodj)+(tm\1440))
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,2)=tu
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,3)=li
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,4)=sp
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,5)=tc
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,6)=$lg(val,1)
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,7)=$lg(val,2)
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,8)=$lg(val,3)
							 	 		s @glb@((zp_"|"_tu_"|"_hrlodj),"Dta",row,9)=$lg(val,4)
						 	 		}
					  			}
			      			}
			  			}
		  			}
		 			//zapis obsazenosti k turnusu
		 			k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.istur) i err zt 
		 			i $g(istur) {
			 			k arrtu
			 			s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) i err zt
			 			s arrtu("dta",68)=+$g(mymaxobs)
			 			s arrtu("dta",69)=$$nd^OBapiED(+$h,0)_","_$$nd^OBapiED(hrlod,0)_","_$$nd^OBapiED(hrldo,0)
			 			s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,hrl,.arrtu,"") i err zt
		 			}
		 		}
	 		}
 		}
 		// vypis linek, ktere nejsou v APL
 		s colHead="li~sp~datum~čas"
 		s colSkryt="0~0~0~0"
 		s colTyp="N~N~D~T"
 		s colForm=">~>"
 		s @glb@("lsNoApl","Name")="přehled linek a spojů, které nejsou v archivu platných linek"
 		s @glb@("lsNoApl","Format")="<"
 		s @glb@("lsNoApl","STYP")="T"
 		s @glb@("lsNoApl","Index",tab)="přehled obsazenosti turnusů v období" 
 		//def.sloupcu tabulky
 		f cnt=1:1:$l(colHead,"~") {
 			s @glb@("lsNoApl","SL",cnt)=$p(colHead,"~",cnt)
    		s @glb@("lsNoApl","SL",cnt,"Format")=$p(colForm,"~",cnt)
    		s @glb@("lsNoApl","SL",cnt,"Typ")=$p(colTyp,"~",cnt)
    		i +$p(colSkryt,"~",cnt) s @glb@("lsNoApl","SL",+$p(colSkryt,"~",cnt),"Skryt",cnt)=""
 		}
 		s zp="" f {
	 		s zp=$o(@myglb@(1,zp)) i zp="" q
	 		s tu="" f {
		 		s tu=$o(@myglb@(1,zp,tu)) i tu="" q
		 		s hrl="" f {
			 		s hrl=$o(@myglb@(1,zp,tu,hrl)) i hrl="" q
			 		s hrlodj="" f {
				 		s hrlodj=$o(@myglb@(1,zp,tu,hrl,hrlodj)) i hrlodj="" q	 
 				 		s li="" f {
	 				 		s li=$o(@myglb@(1,zp,tu,hrl,hrlodj,li)) i li="" q
				 	 		s sp="" f {
					 	 		s sp=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp)) i sp="" q
					 	 		s tm="" f {
						 	 		s tm=$o(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm)) i tm="" q
							 		s val=$g(@myglb@(1,zp,tu,hrl,hrlodj,li,sp,tm))
							 		i +$lg(val,6) continue
							 		s row=$i(@glb@("lsNoApl","RD"))
						 	 		s @glb@("lsNoApl","RD",row)=""
							 		s @glb@("lsNoApl","Dta",row,1)=li
							 		s @glb@("lsNoApl","Dta",row,2)=sp
							 		s @glb@("lsNoApl","Dta",row,3)=$$nd^OBapiED(((hrlodj)+(tm\1440)),0)
							 		s @glb@("lsNoApl","Dta",row,4)=$tr($j($$mh^OBapiED(tm),0,2),".",":")
					 	 		}
				 	 		}
 				 		}
		     		} 
		 		}
	 		}
 		}
		k @myglb k @myglb1 k @myglb2
	}	
	catch (ex) {
		s ret=$$$ERROR($$$GeneralError,$g(err)_ex.DisplayString())
	}
 q ret
]]></Implementation>
</Method>
</Class>


<Class name="ALVA.AUDO.Udalosti">
<IncludeCode>ALVAAUDO,OBMAC</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65782,77318.430465</TimeChanged>
<TimeCreated>65782,77198.291129</TimeCreated>

<Method name="Tree">
<ClassMethod>1</ClassMethod>
<FormalSpec>glb:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	try {
		//w ##class(ALVA.AUDO.Udalosti).Tree("arr") w ! zw arr
		//posledni ID = 1014
		k @glb
		k mycnt
		s myagd="AUDO"
		//1015
		s @glb@(1)="0~AUtobusová DOprava"
		s @glb@(1,1)="0~Objednávky"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1001~Objednávka, zápis"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1002~Objednávka, zrušení"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1003~Stálá Objednávka, zápis"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1004~Stálá objednávka, zrušení"
		s @glb@(1,1,$i(cnt))="1~"_myagd_"|1005~Objednávka, import"
		s @glb@(1,2)="0~Spoje"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1006~Spoj, zápis"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1007~Spoj, zrušení"
		s @glb@(1,2,$i(cnt))="1~"_myagd_"|1008~Spoj, import"
		s @glb@(1,3)="0~Turnusy"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1009~Turnus, zápis"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1010~Turnus, zrušení"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1011~Turnus, import"
		s @glb@(1,3,$i(cnt))="1~"_myagd_"|1012~Turnus, export"
		s @glb@(1,4)="0~Turnusové skupiny"
		s @glb@(1,4,$i(cnt))="1~"_myagd_"|1013~Turnusova skupina, zápis"
		s @glb@(1,4,$i(cnt))="1~"_myagd_"|1014~Turnusova skupina, zrušení"
		s @glb@(1,5)="0~Plán dopravy"
		s @glb@(1,6)="0~Zpracování"
		s @glb@(1,7)="0~Export dat"
		s @glb@(1,8,$i(cnt))="1~"_myagd_"|1015~Export dokladů pro Prytanis"
	}
	catch(ex)
	{
		s err="1~"_ex.DisplayString()_"~"_$g(err)
	}
	q:'$g(err) "" q err
]]></Implementation>
</Method>

<Method name="CreateEvent">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[sys:%String,&in:%String,&out:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	try {
		//in("id")=id udalosti
		//in("dsc")=popis udalosti
		//in("key",id)=val
 		// "OS"="Osobní číslo"
 		// "ST"="Středisko"
 		// "KA"="Kategorie"
 		// "PR"="Provozovna"
 		// "LI"="Linka"
 		// "SP"="Spoj"
 		// "TU"="Turnus"
 		// "RZ"="Registrační značka"
 		// "SK"="Skupina"
 		// "ZA"="Zastávka"
 		// "RO"="Rok"
 		// "FR"="Fakturační řada"
 		// "CI"="Číslo"
 		// "OBD"="Období"
 		// "JM"="Jméno"
		//in("dta",id)=$lb(newval,oldval,popis klíče/události)
		//in("nomail")=0/1 neodesilat mail
		//in("msgmail",cnt)=msg
		//in("filemail",cnt)=file
		$$$FROMSERVER
		s ret=""
		k err
		k mykey m mykey=in("key")
		k mydta m mydta=in("dta")
		k mymsgmail m mymsgmail=in("msgmail")
		k myfilemail m myfilemail=in("filemail")
		d ##class(ALVA.UDALOSTI.MLAPI).newEvent(.err,idfa,mlp,fullname,$g(in("id")),$g(in("dsc")),.mykey,.mydta,+$g(in("nomail")),.mymsgmail,.myfilemail)
		i $g(err)'="" zt
	}
	catch (ex) {
		s ret="1~"_ex.DisplayString()_"~"_$g(err)
	}
	q ret
]]></Implementation>
</Method>
</Class>


<Project name="ALVA_AUDOAPI" LastModified="2021-02-07 22:09:44.95237">
  <Items>
    <ProjectItem name="ALVA.AUDO.API.Ciselniky" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.IO.Prytanis" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.Import" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.LinkySpoje" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.Nastaveni" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.ObecneFceKalendar" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.ObecneFceOs" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.ObecneFceRZ" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.Objednavky" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.ObjednavkyStale" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.PlanDopravy" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.PlanDopravyFce" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.RozvrhPracDobyRidici" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusoveSkupiny" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.Turnusy" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyEdit" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyEditFce" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyExport" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyGraf" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyHromadneAktualizace" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyHromadneUpravy" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyImport" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.TurnusyNastroje" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.API.Zastavky" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.RG.Api" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.RG.Objednavky" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.Sherlock" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.OBJ.AUDO0017" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.OBJ.AUDO0124" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.SP.AUDO0023" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.SP.AUDO0024" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TS.AUDO0075" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TS.AUDO0076" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TS.AUDO0125" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TS.AUDODT01" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TS.AUDOEX01" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0018" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0020" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0021" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0095" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0103" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0119" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0130" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.TISKY.TUR.AUDO0141" type="CLS"></ProjectItem>
    <ProjectItem name="ALVA.AUDO.Udalosti" type="CLS"></ProjectItem>
    <ProjectItem name="OBMAC.INC" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiED.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDBCD1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDBCD1New.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDCal.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDCis.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDConst.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDS.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDS1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDSInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDSW.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDan.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDoc.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDocKntBus.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDtaDoc.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDtaKmRz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDtaOs.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDtaRz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDz1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDzCal.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDDzInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDFce.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDFce1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDFce2.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDGrafikonOs.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDGrafikonRz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDInit.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDJBN.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDMYTRz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDNPHM.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDNPHM1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDObj.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDObj1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDObjInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDOs.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDOs1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDOsExport.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDOsExportF1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPHMOs.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPatch1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPlan.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPlan1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPlan2.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPlan3.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPlan4.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDPrm.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSAP.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSC.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet2.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet3.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet4.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSet5.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSj.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSj1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSjCal.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSjCal1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSjInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSp.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSp1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDSpInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTest.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur2.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur3.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur4.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTur5.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurCal.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurCal1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurCal2.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurExport.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurGr.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurImport.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurImport1.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurInfo.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDTurStat.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDUsrDocRz.INT" type="MAC"></ProjectItem>
    <ProjectItem name="OBapiEDZst.INT" type="MAC"></ProjectItem>
  </Items>
</Project>


<Routine name="OBMAC" type="INC" timestamp="64803,51568.003911"><![CDATA[
#define PdM(%VAL,%DEL,%I) $tr($p(%VAL,%DEL,%I)," ","")
#define PdMR(%VAL,%DEL,%I,%EVAL) $p(%VAL,%DEL,%I) f  q:$e(%EVAL,$l(%EVAL))'=" "  s %EVAL=$e(%EVAL,1,$l(%EVAL)-1)
#define FROMSERVER s D=$g(sys("U","delimiter")) i D="" ZTRAP ##continue
      s idfa=$g(sys("U","IdFa")) i idfa="" ZTRAP ##continue
      s sysnmsp=$g(sys("U","SystemDB")) i sysnmsp="" ZTRAP ##continue
      s nmsp=$g(sys("U","DATA")) i nmsp="" ZTRAP ##continue
      s mlp=$g(sys("U","MLP")) i mlp="" ZTRAP ##continue
      s loginname=$tr($g(sys("U","loginName")),"|","*") ##continue
      s fullname=$tr($g(sys("U","fullName")),"|","*") ##continue
/// hrl -> dd.mm.rrrr
#define ND(%Number) $tr($zd(%Number\1,4,,4,,,,,""),"/",".")
/// dd.mm.rrrr -> hrl
#define DN(%Date) $zdh($tr(%Date,".","/"),4,,,,,,,-1)
]]></Routine>


<Routine name="OBapiED" type="INT" languagemode="0" timestamp="65735,51540.111453"><![CDATA[
OBapiED
 // =====================
 // API fce pro AD EDISON 
 // =====================
 // inicializace, data
InitObdobi(idfa,nmsp,in,out) q $$InitObdobi^OBapiEDInit(idfa,nmsp,.in,.out)
InitCis(idfa,nmsp,in,out) q $$InitCis^OBapiEDInit(idfa,nmsp,.in,.out)
ExportData(idfa,nmsp,in,out) q $$ExportData^OBapiEDInit(idfa,nmsp,.in,.out)
 // ciselniky
isCis(idfa,nmsp,idcis,in,out) q $$isCis^OBapiEDCis(idfa,nmsp,idcis,.in,.out)
gCis(idfa,nmsp,id,in,out) q $$gCis^OBapiEDCis(idfa,nmsp,id,.in,.out)
dCis(idfa,nmsp,id,in,out) q $$dCis^OBapiEDCis(idfa,nmsp,id,.in,.out)
isCisItm(idfa,nmsp,idcis,id,in,out) q $$isCisItm^OBapiEDCis(idfa,nmsp,idcis,id,.in,.out)
gCisItm(idfa,nmsp,idcis,id,in,out) q $$gCisItm^OBapiEDCis(idfa,nmsp,idcis,id,.in,.out)
sCisItm(idfa,nmsp,idcis,id,val,in,out) q $$sCisItm^OBapiEDCis(idfa,nmsp,idcis,id,val,.in,.out)
dCisItm(idfa,nmsp,idcis,id,in,out) q $$dCisItm^OBapiEDCis(idfa,nmsp,idcis,id,.in,.out)
gNewIdCisItm(idfa,nmsp,idcis,in,out) q $$gNewIdCisItm^OBapiEDCis(idfa,nmsp,idcis,.in,.out)
 // zastavky
gZst(idfa,nmsp,czst,in,out) q $$gZst^OBapiEDZst(idfa,nmsp,czst,.in,.out)
rnZst(idfa,nmsp,glb,in,out) q $$rnZst^OBapiEDZst(idfa,nmsp,glb,.in,.out)
impLokZstUni(idfa,nmsp,glb,in,out) q $$impLokZstUni^OBapiEDZst(idfa,nmsp,glb,.in,.out)
 // spoje
lLi(idfa,nmsp,in,out) q $$lLi^OBapiEDSp(idfa,nmsp,.in,.out)
gSp(idfa,nmsp,li,sp,hrl,in,out) q $$gSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
gSpOne(idfa,nmsp,li,sp,hrl,id,in,out) q $$gSpOne^OBapiEDSp(idfa,nmsp,li,sp,hrl,id,.in,.out)
sSp(idfa,nmsp,li,sp,hrl,in,out) q $$sSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
dSp(idfa,nmsp,li,sp,hrl,in,out) q $$dSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
usedSp(idfa,nmsp,in,out) q $$usedSp^OBapiEDSp(idfa,nmsp,.in,.out)
udSp(idfa,nmsp,li,sp,hrl,in,out) q $$udSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
isSp(idfa,nmsp,li,sp,hrl,in,out) q $$isSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
lSp(idfa,nmsp,in,out) q $$lSp^OBapiEDSp(idfa,nmsp,.in,.out)
txtOmzSp(idfa,nmsp,in,out) q $$txtOmzSp^OBapiEDSp(idfa,nmsp,.in,.out)
gTimeVariantSp(idfa,nmsp,li,sp,hrl,in,out) q $$gTimeVariantSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
gOrgNumSp(idfa,nmsp,li,sp,hrl,in,out) q $$gOrgNumSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
gMaSp(idfa,nmsp,zp,li,sp,hrl,in,out) q $$gMaSp^OBapiEDSp(idfa,nmsp,zp,li,sp,hrl,.in,.out)
gMaDsp(idfa,nmsp,zp,dsp,in,out) q $$gMaDsp^OBapiEDSp(idfa,nmsp,zp,dsp,.in,.out)
fndNepSp(idfa,nmsp,in,out) q $$fndNepSp^OBapiEDSp(idfa,nmsp,.in,.out)
isSpLocZst(idfa,nmsp,czs,in,out) q $$isSpLocZst^OBapiEDSp(idfa,nmsp,czs,.in,.out)
chngSpLocZst(idfa,nmsp,fromczs,toczs,in,out) q $$chngSpLocZst^OBapiEDSp(idfa,nmsp,fromczs,toczs,.in,.out)
lBlockSp(idfa,nmsp,in,out) q $$lBlockSp^OBapiEDSp(idfa,nmsp,.in,.out)
sBlockSp(idfa,nmsp,li,sp,in,out) q $$sBlockSp^OBapiEDSp(idfa,nmsp,li,sp,.in,.out)
dBlockSp(idfa,nmsp,in,out) q $$dBlockSp^OBapiEDSp(idfa,nmsp,.in,.out)
impSp(idfa,nmsp,in,out) q $$impSp^OBapiEDSp1(idfa,nmsp,.in,.out)
impSpPrs(idfa,nmsp,in,out) q $$impSpPrs^OBapiEDSp1(idfa,nmsp,.in,.out)
mkPosilSp(idfa,nmsp,sku,lin,sp,hrlod,psp,tco,tcd,mmpos,in,out) q $$mkPosilSp^OBapiEDSp1(idfa,nmsp,sku,lin,sp,hrlod,psp,tco,tcd,mmpos,.in,.out)
lHstImpSp(idfa,nmsp,in,out) q $$lHstImpSp^OBapiEDSp1(idfa,nmsp,.in,.out)
sHstImpSp(idfa,nmsp,hrl,in,out) q $$sHstImpSp^OBapiEDSp1(idfa,nmsp,hrl,.in,.out)
lCnvTabPrvSp(idfa,nmsp,in,out) q $$lCnvTabPrvSp^OBapiEDSp(idfa,nmsp,.in,.out)
sCnvTabPrvSp(idfa,nmsp,faJR,prvJR,in,out) q $$sCnvTabPrvSp^OBapiEDSp(idfa,nmsp,faJR,prvJR,.in,.out)
dCnvTabPrvSp(idfa,nmsp,in,out) q $$dCnvTabPrvSp^OBapiEDSp(idfa,nmsp,.in,.out)
 // neodjete spoje - info
gNInfoSp(idfa,nmsp,li,sp,hrl,in,out) q $$gNInfoSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
sNInfoSp(idfa,nmsp,li,sp,hrl,in,out) q $$sNInfoSp^OBapiEDSp(idfa,nmsp,li,sp,hrl,.in,.out)
 // turnusy
isTur(idfa,nmsp,zp,tu,hrl,in,out) q $$isTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
gTur(idfa,nmsp,zp,tu,hrl,in,out) q $$gTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
gTurOne(idfa,nmsp,zp,tu,hrl,id,in,out) q $$gTurOne^OBapiEDTur(idfa,nmsp,zp,tu,hrl,id,.in,.out)
sTur(idfa,nmsp,zp,tu,hrl,in,out) q $$sTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
lTur(idfa,nmsp,in,out) q $$lTur^OBapiEDTur(idfa,nmsp,.in,.out)
dTur(idfa,nmsp,zp,tu,hrl,in,out) q $$dTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
usedTur(idfa,nmsp,in,out) q $$usedTur^OBapiEDTur(idfa,nmsp,.in,.out)
renameTur(idfa,nmsp,zp,oldtu,newtu,hrl,in,out) q $$renameTur^OBapiEDTur(idfa,nmsp,zp,oldtu,newtu,hrl,.in,.out)
newTimeVariantTur(idfa,nmsp,zp,tu,hrl,newhrl,in,out) q $$newTimeVariantTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,newhrl,.in,.out)
copyTur(idfa,nmsp,zp,tu,hrl,newzp,newtu,newhrl,in,out) q $$copyTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,newzp,newtu,newhrl,.in,.out)
fndDiffTurLS(idfa,nmsp,hrl,in,out) q $$fndDiffTurLS^OBapiEDTur1(idfa,nmsp,hrl,.in,.out)
actDiffTurLS(idfa,nmsp,hrl,arrls,in,out) q $$actDiffTurLS^OBapiEDTur1(idfa,nmsp,hrl,.arrls,.in,.out)
fndObjiTurLS(idfa,nmsp,hrl,in,out) q $$fndObjiTurLS^OBapiEDTur1(idfa,nmsp,hrl,.in,.out)
actBPTur(idfa,nmsp,hrl,arrtu,in,out) q $$actBPTur^OBapiEDTur2(idfa,nmsp,hrl,.arrtu,.in,.out)
mkStaTur(idfa,nmsp,zp,wrk,in,out) q $$mkStaTur^OBapiEDTurStat(idfa,nmsp,zp,wrk,.in,.out)
mkArrOm(idfa,nmsp,hrltufrom,hrlfrom,hrlto,arr) q $$mkArrOm^OBapiEDTurStat(idfa,nmsp,hrltufrom,hrlfrom,hrlto,.arr)
mkJedePltTur(idfa,nmsp,hrl,hrlf,hrlt,in,out) q $$mkJedePltTur^OBapiEDTurStat(idfa,nmsp,hrl,hrlf,hrlt,.in,.out)
cnvDtaTur(idfa,nmsp,in,out) q $$cnvDtaTur^OBapiEDTur(idfa,nmsp,.in,.out)
isTurLocZst(idfa,nmsp,czs,in,out) q $$isTurLocZst^OBapiEDTur(idfa,nmsp,czs,.in,.out)
chngTurLocZst(idfa,nmsp,fromczs,toczs,in,out) q $$chngTurLocZst^OBapiEDTur(idfa,nmsp,fromczs,toczs,.in,.out)
calTur(idfa,nmsp,zp,tu,hrl,arrtu,in,out) q $$calTur^OBapiEDTurCal(idfa,nmsp,zp,tu,hrl,.arrtu,.in,.out)
gTurDsc(arr) d gTurDsc^OBapiEDTur(.arr)
gTurZUDsc(arr) d gTurZUDsc^OBapiEDTur(.arr)
gTimeVariantTur(idfa,nmsp,zp,tu,hrl,in,out) q $$gTimeVariantTur^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
gAllTimeVariantTur(idfa,nmsp,zp,tu,in,out) q $$gAllTimeVariantTur^OBapiEDTur(idfa,nmsp,zp,tu,.in,.out)
actDspTur(idfa,nmsp,hrl,inpar,arr) q $$actDspTur^OBapiEDTur3(idfa,nmsp,hrl,.inpar,.arr)
actTkmTur(idfa,nmsp,hrl,inpar,arr) q $$actTkmTur^OBapiEDTur3(idfa,nmsp,hrl,.inpar,.arr)
actPrsTur(idfa,nmsp,hrl,inpar,arr) q $$actPrsTur^OBapiEDTur3(idfa,nmsp,hrl,.inpar,.arr)
actPrsTurSum(idfa,nmsp,hrl,arr,out) q $$actPrsTurSum^OBapiEDTur3(idfa,nmsp,hrl,.arr,.out)
actDsmTur(idfa,nmsp,zp,hrl,inpar,arr) q $$actDsmTur^OBapiEDTur4(idfa,nmsp,zp,hrl,.inpar,.arr)
actManTur(idfa,nmsp,zp,hrl,inpar,arr) q $$actManTur^OBapiEDTur4(idfa,nmsp,zp,hrl,.inpar,.arr)
mkTurGraf(idfa,nmsp,glb,in,out) q $$mkTurGraf^OBapiEDTurGr(idfa,nmsp,glb,.in,.out)
calcTur(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd) q $$calcTur^OBapiEDTurCal1(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,.arrset,.arrmzd)
calcTurMzd(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd) q $$calcTurMzd^OBapiEDTurCal2(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,.arrset,.arrmzd)
mkDieIntrvTur(idfa,nmsp,zp,docarr,arrmzd,in,out) q $$mkDieIntrvTur^OBapiEDTurCal2(idfa,nmsp,zp,.docarr,.arrmzd,.in,.out)
actPRJTur(idfa,nmsp,hrl,arrtu,in,out) q $$actPRJTur^OBapiEDTur5(idfa,nmsp,hrl,.arrtu,.in,.out)
addDODKTur(idfa,nmsp,zp,hrl,arrtu,in,out) q $$addDODKTur^OBapiEDTur5(idfa,nmsp,zp,hrl,.arrtu,.in,.out)
gTurFakDta(idfa,nmsp,zp,tu,hrl,in,out) q $$gTurFakDta^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
gTurMmProv(idfa,nmsp,zp,tu,hrl,in,out) q $$gTurMmProv^OBapiEDTur(idfa,nmsp,zp,tu,hrl,.in,.out)
gAllTurLiSp(idfa,nmsp,glb,in,out) q $$gAllTurLiSp^OBapiEDTur(idfa,nmsp,glb,.in,.out)
cnvArrurToArrmin(idfa,nmsp,hrl,arrtur,glb,out) q $$cnvArrurToArrmin^OBapiEDTur3(idfa,nmsp,hrl,.arrtur,glb,.out)
chckArrminOverlap(idfa,nmsp,hrl,minod,mindo,glb,in,out) q $$chckArrminOverlap^OBapiEDTur3(idfa,nmsp,hrl,minod,mindo,glb,.in,.out)
gPcPZU() q $$gPcPZU^OBapiEDTur()
gPcPDU() q $$gPcPDU^OBapiEDTur()
gPcPMU() q $$gPcPMU^OBapiEDTur()
 // turnusy export/import
exportTurEdisonNew(idfa,nmsp,in,out) q $$exportTurEdisonNew^OBapiEDTurExport(idfa,nmsp,.in,.out)
importTurEdisonNew(idfa,nmsp,in,out) q $$importTurEdisonNew^OBapiEDTurImport(idfa,nmsp,.in,.out)
exportTurEdison(idfa,nmsp,in,out) q $$exportTurEdison^OBapiEDTurExport(idfa,nmsp,.in,.out)
importTurEdison(idfa,nmsp,wrk,in,out) q $$importTurEdison^OBapiEDTurImport(idfa,nmsp,wrk,.in,.out)
importTurME(idfa,nmsp,wrk,in,out) q $$importTurME^OBapiEDTurImport(idfa,nmsp,wrk,.in,.out)
exportTurUSVC(idfa,nmsp,in,out) q $$exportTurUSVC^OBapiEDTurExport(idfa,nmsp,.in,.out)
 // objednavky
wrapIdObj(rr,oo) q $$wrapIdObj^OBapiEDObj(rr,oo)
unwrapIdObj(idobj,cnt) q $$unwrapIdObj^OBapiEDObj(idobj,cnt)
gObj(idfa,nmsp,zp,idobj,in,out) q $$gObj^OBapiEDObj(idfa,nmsp,zp,idobj,.in,.out)
sObj(idfa,nmsp,zp,idobj,in,out) q $$sObj^OBapiEDObj(idfa,nmsp,zp,idobj,.in,.out)
dObj(idfa,nmsp,zp,idobj,in,out) q $$dObj^OBapiEDObj(idfa,nmsp,zp,idobj,.in,.out)
isObj(idfa,nmsp,zp,idobj,in,out) q $$isObj^OBapiEDObj(idfa,nmsp,zp,idobj,.in,.out)
sSttObj(idfa,nmsp,zp,idobj,idstt,in,out) q $$sSttObj^OBapiEDObj(idfa,nmsp,zp,idobj,idstt,.in,.out)
lObj(idfa,nmsp,in,out) q $$lObj^OBapiEDObj(idfa,nmsp,.in,.out)
gCObj(idfa,nmsp,zp,hrl,in,out) q $$gCObj^OBapiEDObj(idfa,nmsp,zp,hrl,.in,.out)
gPcObjDD(idfa,nmsp,zp,idobj) q $$gPcObjDD^OBapiEDObj(idfa,nmsp,zp,idobj)
mkFakDtaObj(idfa,nmsp,arr) q $$mkFakDtaObj^OBapiEDObj1(idfa,nmsp,.arr)
actLinkObj(idfa,nmsp,zp,idobj,in,out) q $$actLinkObj^OBapiEDObj(idfa,nmsp,zp,idobj,.in,.out)
 // stale objednavky
gStlObj(idfa,nmsp,zp,id,in,out) q $$gStlObj^OBapiEDObj(idfa,nmsp,zp,id,.in,.out)
sStlObj(idfa,nmsp,zp,id,in,out) q $$sStlObj^OBapiEDObj(idfa,nmsp,zp,id,.in,.out)
dStlObj(idfa,nmsp,zp,id,in,out) q $$dStlObj^OBapiEDObj(idfa,nmsp,zp,id,.in,.out)
isStlObj(idfa,nmsp,zp,id,in,out) q $$isStlObj^OBapiEDObj(idfa,nmsp,zp,id,.in,.out)
lStlObj(idfa,nmsp,in,out) q $$lStlObj^OBapiEDObj(idfa,nmsp,.in,.out)
 // aviza
gAvi(idfa,nmsp,zp,hrl,idavi,in,out) q $$gAvi^OBapiEDObj(idfa,nmsp,zp,hrl,idavi,.in,.out)
sAvi(idfa,nmsp,zp,hrl,idavi,in,out) q $$sAvi^OBapiEDObj(idfa,nmsp,zp,hrl,idavi,.in,.out)
dAvi(idfa,nmsp,zp,hrl,idavi,in,out) q $$dAvi^OBapiEDObj(idfa,nmsp,zp,hrl,idavi,.in,.out)
isAvi(idfa,nmsp,zp,hrl,idavi,in,out) q $$isAvi^OBapiEDObj(idfa,nmsp,zp,hrl,idavi,.in,.out)
lAvi(idfa,nmsp,in,out) q $$lAvi^OBapiEDObj(idfa,nmsp,.in,.out)
 // plan dopravy, pracoviste
lPlnPrac(idfa,nmsp,in,out) q $$lPlnPrac^OBapiEDPlan1(idfa,nmsp,.in,.out)
gPlnPrac(idfa,nmsp,idprac,in,out) q $$gPlnPrac^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPrac(idfa,nmsp,idprac,in,out) q $$sPlnPrac^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
addPlnPracStanoviste(idfa,nmsp,idprac,in,out) q $$addPlnPracStanoviste^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
isPlnPrac(idfa,nmsp,idprac,in,out) q $$isPlnPrac^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
dPlnPrac(idfa,nmsp,idprac,in,out) q $$dPlnPrac^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
dDocPlnPrac(idfa,nmsp,idprac,in,out) q $$dDocPlnPrac^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
renamePlnPrac(idfa,nmsp,oldidprac,newidprac,in,out) q $$renamePlnPrac^OBapiEDPlan1(idfa,nmsp,oldidprac,newidprac,.in,.out)
gPlnPracLstOs(idfa,nmsp,idprac,in,out) q $$gPlnPracLstOs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPracLstOs(idfa,nmsp,idprac,in,out) q $$sPlnPracLstOs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
gPlnPracLstOsNs(idfa,nmsp,idprac,in,out) q $$gPlnPracLstOsNs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPracLstOsNs(idfa,nmsp,idprac,in,out) q $$sPlnPracLstOsNs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
gPlnPracLstRz(idfa,nmsp,idprac,in,out) q $$gPlnPracLstRz^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPracLstRz(idfa,nmsp,idprac,in,out) q $$sPlnPracLstRz^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
gPlnPracLstRzNs(idfa,nmsp,idprac,in,out) q $$gPlnPracLstRzNs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPracLstRzNs(idfa,nmsp,idprac,in,out) q $$sPlnPracLstRzNs^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
gPlnPracLstTu(idfa,nmsp,idprac,in,out) q $$gPlnPracLstTu^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
sPlnPracLstTu(idfa,nmsp,idprac,in,out) q $$sPlnPracLstTu^OBapiEDPlan1(idfa,nmsp,idprac,.in,.out)
 // plan dopravy, cislovani dokladu
gPlnPracCisDoc(idfa,nmsp,idprac,typdoc,rrrrmm,in,out) q $$gPlnPracCisDoc^OBapiEDPlan1(idfa,nmsp,idprac,typdoc,rrrrmm,.in,.out)
gPlnPracTypCisStt(idfa,nmsp,idprac,typdoc,in,out) q $$gPlnPracTypCisStt^OBapiEDPlan1(idfa,nmsp,idprac,typdoc,.in,.out)
chngPlnPracTypCisDoc(idfa,nmsp,idprac,typdoc,newtypcis,in,out) q $$chngPlnPracTypCisDoc^OBapiEDPlan1(idfa,nmsp,idprac,typdoc,newtypcis,.in,.out)
 // plan dopravy
gPln(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$gPln^OBapiEDPlan(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)
sPln(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$sPln^OBapiEDPlan(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)
dPln(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$dPln^OBapiEDPlan(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)
isPln(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$isPln^OBapiEDPlan(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)
lPln(idfa,nmsp,in,out) q $$lPln^OBapiEDPlan(idfa,nmsp,.in,.out)
gPlnNote(idfa,nmsp,idprac,hrl,in,out) q $$gPlnNote^OBapiEDPlan4(idfa,nmsp,idprac,hrl,.in,.out)
sPlnNote(idfa,nmsp,idprac,hrl,in,out) q $$sPlnNote^OBapiEDPlan4(idfa,nmsp,idprac,hrl,.in,.out)
isPlnNote(idfa,nmsp,idprac,hrl,in,out) q $$isPlnNote^OBapiEDPlan4(idfa,nmsp,idprac,hrl,.in,.out)
sDayBckUpPln(idfa,nmsp,idprac,hrl,in,out) q $$sDayBckUpPln^OBapiEDPlan4(idfa,nmsp,idprac,hrl,.in,.out)
isDayBckUpPln(idfa,nmsp,idprac,hrl,in,out) q $$isDayBckUpPln^OBapiEDPlan4(idfa,nmsp,idprac,hrl,.in,.out)
 //data pro predznaceni dokladu ve tvaru fce pro zapis dokladu, po provereni nahradit przPlnDZ a przPlnSJ    
gPlnPrzDta(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$gPlnPrzDta^OBapiEDPlan3(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)
 // plan dopravy, zapujcena auta
lPlnZapRZ(idfa,nmsp,idprac,hrl,in,out) q $$lPlnZapRZ^OBapiEDPlan(idfa,nmsp,idprac,hrl,.in,.out)
sPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out) q $$sPlnZapRZ^OBapiEDPlan(idfa,nmsp,idprac,hrl,rz,.in,.out)
dPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out) q $$dPlnZapRZ^OBapiEDPlan(idfa,nmsp,idprac,hrl,rz,.in,.out)
isPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out) q $$isPlnZapRZ^OBapiEDPlan(idfa,nmsp,idprac,hrl,rz,.in,.out)
 // plan dopravy, zapujceni ridici
lPlnZapOS(idfa,nmsp,idprac,hrl,in,out) q $$lPlnZapOS^OBapiEDPlan(idfa,nmsp,idprac,hrl,.in,.out)
sPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out) q $$sPlnZapOS^OBapiEDPlan(idfa,nmsp,idprac,hrl,os,.in,.out)
dPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out) q $$dPlnZapOS^OBapiEDPlan(idfa,nmsp,idprac,hrl,os,.in,.out)
isPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out) q $$isPlnZapOS^OBapiEDPlan(idfa,nmsp,idprac,hrl,os,.in,.out)
 // plan dopravy, predtisk dokladu, predznaceni dokladu
fndPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,in,out) q $$fndPlnDoc^OBapiEDPlan2(idfa,nmsp,mlp,zp,idprac,.hrl,.in,.out)
cslPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,typdoc,typcis,nbnc,in,out) q $$cslPlnDoc^OBapiEDPlan2(idfa,nmsp,mlp,zp,idprac,hrl,typdoc,typcis,nbnc,.in,.out)
gPlnDocDta(idfa,nmsp,in,out) q $$gPlnDocDta^OBapiEDPlan2(idfa,nmsp,.in,.out)
gPlnDocDtaDZ(idfa,nmsp,iddoc,spz,pc,in,out) q $$gPlnDocDtaDZ^OBapiEDPlan2(idfa,nmsp,iddoc,spz,pc,.in,.out)
gPlnDocDtaSJ(idfa,nmsp,iddoc,spz,pc,in,out) q $$gPlnDocDtaSJ^OBapiEDPlan2(idfa,nmsp,iddoc,spz,pc,.in,.out)
tPlnPrtDoc(idfa,nmsp,iddoc,in,out) q $$tPlnPrtDoc^OBapiEDPlan2(idfa,nmsp,iddoc,.in,.out)
lPlnPrtDoc(idfa,nmsp,in,out) q $$lPlnPrtDoc^OBapiEDPlan2(idfa,nmsp,.in,.out)
gPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) q $$gPlnPrtDoc^OBapiEDPlan2(idfa,nmsp,typdoc,idprac,hrl,cdoc,.in,.out) ;; vyzkouset
sPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) q $$sPlnPrtDoc^OBapiEDPlan2(idfa,nmsp,typdoc,idprac,hrl,cdoc,.in,.out) ;; vyzkouset
dPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) q $$dPlnPrtDoc^OBapiEDPlan2(idfa,nmsp,typdoc,idprac,hrl,cdoc,.in,.out) ;; vyzkouset
przPlnDZ(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$przPlnDZ^OBapiEDPlan2(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)	//predznaceni DZVA
przPlnSJ(idfa,nmsp,idprac,hrl,spz,pc,in,out) q $$przPlnSJ^OBapiEDPlan2(idfa,nmsp,idprac,hrl,spz,pc,.in,.out)	//predznaceni SJ
 // plan dopravy, stridaci cykly
lScTS(idfa,nmsp,in,out) q $$lScTS^OBapiEDSC(idfa,nmsp,.in,.out)
gScTS(idfa,nmsp,idprac,ts,hrl,in,out) q $$gScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,.in,.out)
sScTS(idfa,nmsp,idprac,ts,hrl,in,out) q $$sScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,.in,.out)
isScTS(idfa,nmsp,idprac,ts,hrl,in,out) q $$isScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,.in,.out)
dScTS(idfa,nmsp,idprac,ts,hrl,in,out) q $$dScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,.in,.out)
gTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,in,out) q $$gTimeVariantScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,.in,.out)
newTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,newhrl,in,out) q $$newTimeVariantScTS^OBapiEDSC(idfa,nmsp,idprac,ts,hrl,newhrl,.in,.out)
gScDta(idfa,nmsp,idprac,wrk,in,out) q $$gScDta^OBapiEDSC(idfa,nmsp,idprac,wrk,.in,.out)
cnvScDta(idfa,nmsp,in,out) q $$cnvScDta^OBapiEDSC(idfa,nmsp,.in,.out)
 // doklady dzva
gDz(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
gDzRzDta(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDzRzDta^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
gDzOsDta(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDzOsDta^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
sDzOsTuvDta(idfa,nmsp,zp,rrmm,doc,os,in,out) q $$sDzOsTuvDta^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,os,.in,.out)
sDz(idfa,nmsp,zp,rrmm,doc,in,out) q $$sDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
isDz(idfa,nmsp,zp,rrmm,doc,in,out) q $$isDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
dDz(idfa,nmsp,zp,rrmm,doc,in,out) q $$dDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
mvDz(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out) q $$mvDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,rrmmto,.in,.out)
dWatchDtaDz(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out) q $$dWatchDtaDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,.in,.out)
lDz(idfa,nmsp,in,out) q $$lDz^OBapiEDDz(idfa,nmsp,.in,.out)
gDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDzDocPhm^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
sDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$sDzDocPhm^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
dDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$dDzDocPhm^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
actPrsEdv(idfa,nmsp,hrl,in,arr) q $$actPrsEdv^OBapiEDDz1(idfa,nmsp,hrl,.in,.arr)
actPrsEdvSum(idfa,nmsp,hrl,arr,out) q $$actPrsEdvSum^OBapiEDDz1(idfa,nmsp,hrl,.arr,.out)
calcEdv(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd) q $$calcEdv^OBapiEDDzCal(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,.arrset,.arrmzd)
convPHTDZ(idfa,nmsp) q $$convPHTDZ^OBapiEDDz1(idfa,nmsp)
sDzPartPrs(idfa,nmsp,zp,rrmm,doc,in,out) q $$sDzPartPrs^OBapiEDDz1(idfa,nmsp,zp,rrmm,doc,.in,.out)
sDzPartNs(idfa,nmsp,zp,rrmm,doc,in,out) q $$sDzPartNs^OBapiEDDz1(idfa,nmsp,zp,rrmm,doc,.in,.out)
dWatchObdDtaDz(idfa,nmsp,rrmm,in,out) q $$dWatchObdDtaDz^OBapiEDDz(idfa,nmsp,rrmm,.in,.out)
gNxtIdDz(idfa,nmsp,zp,rrmm,doc,in,out) q $$gNxtIdDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
sSttDz(idfa,nmsp,zp,rrmm,doc,idstt,in,out) q $$sSttDz^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,idstt,.in,.out)
mkFakDtaDz(idfa,nmsp,docarr,inarr,outarr,arrset) q $$mkFakDtaDz^OBapiEDDzCal(idfa,nmsp,.docarr,.inarr,.outarr,.arrset)
isDzFak(idfa,nmsp,zp,rrmm,doc,in,out) q $$isDzFak^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
gDzBegEnd(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDzBegEnd^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
isDzTur(idfa,nmsp,zp,rrmm,doc,in,out) q $$isDzTur^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
gDzSttTach(idfa,nmsp,zp,rrmm,doc,in,out) q $$gDzSttTach^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out)
gIdPrvDzRrmm(idfa,nmsp,rrmm,in,out) q $$gIdPrvDzRrmm^OBapiEDDz(idfa,nmsp,rrmm,.in,.out)
 // evidence odjetych spoju
gEvOdjSp(idfa,nmsp,in,out) q $$gEvOdjSp^OBapiEDDz(idfa,nmsp,.in,.out)
sEvOdjSp(idfa,nmsp,zp,rrmm,doc,in,out,arr) q $$sEvOdjSp^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,.in,.out,.arr)
dEvOdjSp(idfa,nmsp,zp,rrmm,doc,hrl,in,out) q $$dEvOdjSp^OBapiEDDz(idfa,nmsp,zp,rrmm,doc,hrl,.in,.out)
lEvOdjSp(idfa,nmsp,in,out) q $$lEvOdjSp^OBapiEDDz(idfa,nmsp,.in,.out)
 // doklady sj
gSj(idfa,nmsp,zp,rrmm,doc,in,out) q $$gSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
gSjRzDta(idfa,nmsp,zp,rrmm,doc,in,out) q $$gSjRzDta^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
gSjOsDta(idfa,nmsp,zp,rrmm,doc,in,out) q $$gSjOsDta^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
sSjOsDtaDta(idfa,nmsp,zp,rrmm,doc,os,in,out) q $$sSjOsDtaDta^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,os,.in,.out)
sSj(idfa,nmsp,zp,rrmm,doc,in,out) q $$sSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
isSj(idfa,nmsp,zp,rrmm,doc,in,out) q $$isSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
dSj(idfa,nmsp,zp,rrmm,doc,in,out) q $$dSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
mvSj(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out) q $$mvSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,rrmmto,.in,.out)
dWatchDtaSj(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out) q $$dWatchDtaSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,.in,.out)
lSj(idfa,nmsp,in,out) q $$lSj^OBapiEDSj(idfa,nmsp,.in,.out)
gSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$gSjDocPhm^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
sSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$sSjDocPhm^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
dSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out) q $$dSjDocPhm^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
sSttSj(idfa,nmsp,zp,rrmm,doc,idstt,in,out) q $$sSttSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,idstt,.in,.out)
gSjDsc(arr) d gSjDsc^OBapiEDSj(.arr)
mkMzdDtaSj(idfa,nmsp,zp,arrdoc,in,out) q $$mkMzdDtaSj^OBapiEDSjCal(idfa,nmsp,zp,.arrdoc,.in,.out)
mkFakDtaSj(idfa,nmsp,zp,arrdoc,in,out) q $$mkFakDtaSj^OBapiEDSjCal(idfa,nmsp,zp,.arrdoc,.in,.out)
gSjFakKurz(idfa,nmsp,arrdoc,in,out) q $$gSjFakKurz^OBapiEDSjCal(idfa,nmsp,.arrdoc,.in,.out)
calcTsj(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd) q $$calcTsj^OBapiEDSjCal1(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,.arrset,.arrmzd)
mkDieIntrvTsj(idfa,nmsp,zp,docarr,arrmzd,in,out) q $$mkDieIntrvTsj^OBapiEDSjCal1(idfa,nmsp,zp,.docarr,.arrmzd,.in,.out)
convPHTSJ(idfa,nmsp) q $$convPHTSJ^OBapiEDSj1(idfa,nmsp)
sSjPartPrs(idfa,nmsp,zp,rrmm,doc,in,out) q $$sSjPartPrs^OBapiEDSj1(idfa,nmsp,zp,rrmm,doc,.in,.out)  //!!! kontrola
sSjPartNs(idfa,nmsp,zp,rrmm,doc,in,out) q $$sSjPartNs^OBapiEDSj1(idfa,nmsp,zp,rrmm,doc,.in,.out)
dWatchObdDtaSj(idfa,nmsp,rrmm,in,out) q $$dWatchObdDtaSj^OBapiEDSj(idfa,nmsp,rrmm,.in,.out)
gNxtIdSj(idfa,nmsp,zp,rrmm,doc,in,out) q $$gNxtIdSj^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
gSjSttTach(idfa,nmsp,zp,rrmm,doc,in,out) q $$gSjSttTach^OBapiEDSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
 // doklady obecne
chckDocOverlap(idfa,nmsp,iddoc,in,out) q $$chckDocOverlap^OBapiEDDoc(idfa,nmsp,iddoc,.in,.out)
canSaveKmToVehicle(idfa,nmsp,zp,rrmm) q $$canSaveKmToVehicle^OBapiEDDoc(idfa,nmsp,zp,rrmm)
 // normovani phm
gZiPrcPrNPHM(idfa,nmsp,zp,in,out) q $$gZiPrcPrNPHM^OBapiEDNPHM(idfa,nmsp,zp,.in,.out)
sZiPrcPrNPHM(idfa,nmsp,zp,in,out) q $$sZiPrcPrNPHM^OBapiEDNPHM(idfa,nmsp,zp,.in,.out)
lZiSpoNPHM(idfa,nmsp,in,out) q $$lZiSpoNPHM^OBapiEDNPHM(idfa,nmsp,.in,.out)
gZiSpoNPHM(idfa,nmsp,id,in,out) q $$gZiSpoNPHM^OBapiEDNPHM(idfa,nmsp,id,.in,.out)
sZiSpoNPHM(idfa,nmsp,in,out) q $$sZiSpoNPHM^OBapiEDNPHM(idfa,nmsp,.in,.out)
dZiSpoNPHM(idfa,nmsp,id,in,out) q $$dZiSpoNPHM^OBapiEDNPHM(idfa,nmsp,id,.in,.out)
isZiSpoNPHM(idfa,nmsp,hrl,in,out) q $$isZiSpoNPHM^OBapiEDNPHM(idfa,nmsp,hrl,.in,.out)
mkNormPhm(idfa,nmsp,in,out) q $$mkNormPhm^OBapiEDNPHM1(idfa,nmsp,.in,.out)
 // phm pro ridie uzivatelsky definovane - program vypocita data, ktera lze upravovat + tisk vysledku
lPHMOs(idfa,nmsp,in,out) q $$lPHMOs^OBapiEDPHMOs(idfa,nmsp,.in,.out)
gPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) q $$gPHMOs^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,.in,.out)
sPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) q $$sPHMOs^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,.in,.out)
dPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) q $$dPHMOs^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,.in,.out)
dPHMPO(idfa,nmsp,zp,rrmm,in,out) q $$dPHMPO^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,.in,.out)
gPHMHe(idfa,nmsp,zp,rrmm,in,out) q $$gPHMHe^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,.in,.out)
sPHMHe(idfa,nmsp,zp,rrmm,in,out) q $$sPHMHe^OBapiEDPHMOs(idfa,nmsp,zp,rrmm,.in,.out)
 // ridici, prehled cinosti pro seznam
lTxCinOs(idfa,nmsp,in,out) q $$lTxCinOs^OBapiEDDtaOs(idfa,nmsp,.in,.out)
 // grafikon ridici
gGrfOs(idfa,nmsp,osc,hrl,grf,in,out) q $$gGrfOs^OBapiEDGrafikonOs(idfa,nmsp,osc,hrl,grf,.in,.out)
sGrfOs(idfa,nmsp,osc,hrl,grf,in,out) q $$sGrfOs^OBapiEDGrafikonOs(idfa,nmsp,osc,hrl,grf,.in,.out)
dGrfOs(idfa,nmsp,osc,hrl,grf,in,out) q $$dGrfOs^OBapiEDGrafikonOs(idfa,nmsp,osc,hrl,grf,.in,.out)
isGrfOs(idfa,nmsp,osc,hrl,grf,in,out) q $$isGrfOs^OBapiEDGrafikonOs(idfa,nmsp,osc,hrl,grf,.in,.out)
lGrfOs(idfa,nmsp,hrlfrom,hrlto,in,out) q $$lGrfOs^OBapiEDGrafikonOs(idfa,nmsp,hrlfrom,hrlto,.in,.out)
gPosDtaGrfOs(idfa,nmsp,grf,in,out) q $$gPosDtaGrfOs^OBapiEDGrafikonOs(idfa,nmsp,grf,.in,.out)
calGrfOs(idfa,nmsp,osc,hrl,grf,arrgrf,in,out) q $$calGrfOs^OBapiEDGrafikonOs(idfa,nmsp,osc,hrl,grf,.arrgrf,.in,.out)
 // grafikon auta
gGrfRz(idfa,nmsp,rz,hrl,grf,in,out) q $$gGrfRz^OBapiEDGrafikonRz(idfa,nmsp,rz,hrl,grf,.in,.out)
sGrfRz(idfa,nmsp,rz,hrl,grf,in,out) q $$sGrfRz^OBapiEDGrafikonRz(idfa,nmsp,rz,hrl,grf,.in,.out)
dGrfRz(idfa,nmsp,rz,hrl,grf,in,out) q $$dGrfRz^OBapiEDGrafikonRz(idfa,nmsp,rz,hrl,grf,.in,.out)
isGrfRz(idfa,nmsp,rz,hrl,grf,in,out) q $$dGrfRz^OBapiEDGrafikonRz(idfa,nmsp,rz,hrl,grf,.in,.out)
lGrfRz(idfa,nmsp,hrlfrom,hrlto,in,out) q $$lGrfRz^OBapiEDGrafikonRz(idfa,nmsp,hrlfrom,hrlto,.in,.out)
 // auta, data z mytneho systemu
sMYTRz(idfa,nmsp,rz,glb,in,out) q $$sMYTRz^OBapiEDMYTRz(idfa,nmsp,rz,glb,.in,.out)
calcMYTRz(idfa,nmsp,rz,hrlFrom,tmFrom,hrlTo,tmTo,in,out) q $$calcMYTR^OBapiEDMYTRzz(idfa,nmsp,rz,hrlFrom,tmFrom,hrlTo,tmTo,.in,.out)
 // auta, prevod km a phm na ostatní auta
lUsrDocRz(idfa,nmsp,in,out) q $$lUsrDocRz^OBapiEDUsrDocRz(idfa,nmsp,.in,.out)
gUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out) q $$gUsrDocRz^OBapiEDUsrDocRz(idfa,nmsp,zp,rrmm,rz,.in,.out)
sUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out) q $$sUsrDocRz^OBapiEDUsrDocRz(idfa,nmsp,zp,rrmm,rz,.in,.out)
dUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out) q $$dUsrDocRz^OBapiEDUsrDocRz(idfa,nmsp,zp,rrmm,rz,.in,.out)
isUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out) q $$isUsrDocRz^OBapiEDUsrDocRz(idfa,nmsp,zp,rrmm,rz,.in,.out)
 // auta, napocet dat z dokladu
gDtaKmRz(idfa,nmsp,glb,in,out) q $$gDtaKmRz^OBapiEDDtaKmRz(idfa,nmsp,glb,.in,.out)
mkSumDtaRzToGrf(idfa,nmsp,rrmm,in,out) q $$mkSumDtaRzToGrf^OBapiEDDtaKmRz(idfa,nmsp,rrmm,.in,.out)
mkSumMzdDtaRz(idfa,nmsp,glb,rrmm,in,out) q $$mkSumMzdDtaRz^OBapiEDDtaRz(idfa,nmsp,glb,rrmm,.in,.out)
gDataDS(idfa,nmsp,rrrrmm,glb,in,out) q $$gDataDS^OBapiEDDS(idfa,nmsp,rrrrmm,glb,.in,.out)
gSumDtaJDC(idfa,nmsp,rrrrmm,glb,in,out) q $$gSumDtaJDC^OBapiEDDtaDoc(idfa,nmsp,rrrrmm,glb,.in,.out)
gDtaSpHrlRzDoc(idfa,nmsp,in,out) q $$gDtaSpHrlRzDoc^OBapiEDDtaDoc(idfa,nmsp,.in,.out)
 // ridici napocet dat z dokladu a grafikonu
mkSumDtaOs(idfa,nmsp,rrmm,glb,in,out) q $$mkSumDtaOs^OBapiEDDtaOs(idfa,nmsp,rrmm,glb,.in,.out)
mkSumDtaOsToGrf(idfa,nmsp,glb,rrmm,in,out) q $$mkSumDtaOsToGrf^OBapiEDDtaOs(idfa,nmsp,glb,rrmm,.in,.out)
mkSumDtaOsTogOM(idfa,nmsp,rrmm,in,out) q $$mkSumDtaOsTogOM^OBapiEDDtaOs(idfa,nmsp,rrmm,.in,.out)
 // ridici vypocet nadlimitnich diet
mkNdmlDieOs(idfa,nmsp,glb,in,out) q $$mkNdmlDieOs^OBapiEDDtaOs(idfa,nmsp,glb,.in,.out)
 // ridici export dat pro mzdy
GetMzdDataPopis(idfa,nmsp,in,out) q $$gDscOsExport^OBapiEDOsExport(idfa,nmsp,.in,.out)
GetMzdData(idfa,nmsp,rrrrmm,glb,in,out) q $$gValOsExport^OBapiEDOsExport(idfa,nmsp,rrrrmm,glb,.in,.out)
GetMzdKA(idfa,nmsp,in,out) q $$gKaOs^OBapiEDOsExport(idfa,nmsp,.in,.out)
 // ridici, jizda bez nehod
chngJBN(idfa,sysnmsp,os,in,out) q $$chngJBN^OBapiEDJBN(idfa,sysnmsp,os,.in,.out)
gJBN(idfa,sysnmsp,os,in,out) q $$gJBN^OBapiEDJBN(idfa,sysnmsp,os,.in,.out)
sJBN(idfa,sysnmsp,nmsp,rrrrmm,os,in,out) q $$sJBN^OBapiEDJBN(idfa,sysnmsp,nmsp,rrrrmm,os,.in,.out)
dJBN(idfa,sysnmsp,nmsp,rrrrmm,os,in,out) q $$dJBN^OBapiEDJBN(idfa,sysnmsp,nmsp,rrrrmm,os,.in,.out)
lJBN(idfa,sysnmsp,in,out) q $$lJBN^OBapiEDJBN(idfa,sysnmsp,.in,.out)
 // ridici, premie pravidelna
lPrmPOs(idfa,nmsp,in,out) q $$lPrmPOs^OBapiEDPrm(idfa,nmsp,.in,.out)
gPrmPOs(idfa,nmsp,zp,rrmm,os,in,out) q $$gPrmPOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
sPrmPOs(idfa,nmsp,zp,rrmm,os,in,out) q $$sPrmPOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
dPrmPOs(idfa,nmsp,zp,rrmm,os,in,out) q $$dPrmPOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
isPrmPOs(idfa,nmsp,zp,rrmm,os,in,out) q $$isPrmPOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
 // ridici, premie nepravidelna
lPrmNOs(idfa,nmsp,in,out) q $$lPrmNOs^OBapiEDPrm(idfa,nmsp,.in,.out)
gPrmNOs(idfa,nmsp,zp,rrmm,os,in,out) q $$gPrmNOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
sPrmNOs(idfa,nmsp,zp,rrmm,os,in,out) q $$sPrmNOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
dPrmNOs(idfa,nmsp,zp,rrmm,os,in,out) q $$dPrmNOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
isPrmNOs(idfa,nmsp,zp,rrmm,os,in,out) q $$isPrmNOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
 // ridici, premie pravidelna+nepravidelna+grafikon
lPrmAOs(idfa,nmsp,in,out) q $$lPrmAOs^OBapiEDPrm(idfa,nmsp,.in,.out)
gPrmAOs(idfa,nmsp,zp,rrmm,os,in,out) q $$gPrmAOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
sPrmAOs(idfa,nmsp,zp,rrmm,os,in,out) q $$sPrmAOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
dPrmAOs(idfa,nmsp,zp,rrmm,os,in,out) q $$dPrmAOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
isPrmAOs(idfa,nmsp,zp,rrmm,os,in,out) q $$isPrmAOs^OBapiEDPrm(idfa,nmsp,zp,rrmm,os,.in,.out)
 // sledovani teploty
lTemperHrl(idfa,nmsp,hrlf,hrlt,in,out) q $$lTemperHrl^OBapiEDUsrDocRz(idfa,nmsp,hrlf,hrlt,.in,.out)
gTemperHrl(idfa,nmsp,zp,hrl,in,out) q $$gTemperHrl^OBapiEDUsrDocRz(idfa,nmsp,zp,hrl,.in,.out)
sTemperHrl(idfa,nmsp,zp,hrl,in,out) q $$sTemperHrl^OBapiEDUsrDocRz(idfa,nmsp,zp,hrl,.in,.out)
dTemperHrl(idfa,nmsp,zp,hrl,in,out) q $$dTemperHrl^OBapiEDUsrDocRz(idfa,nmsp,zp,hrl,.in,.out)
 // firma
mkZP(idfa,idprv,idns,i,o) q $$mkZP^OBapiEDFce(idfa,idprv,idns,.i,.o)
mkPRV(idfa,zp,in,out) q $$mkPRV^OBapiEDFce(idfa,zp,.in,.out)
gFaDz(idfa) q $$gFaDz^OBapiEDFce(idfa)
gFaPrv(idfa,nmsp,in,out) q $$gFaPrv^OBapiEDFce(idfa,nmsp,.in,.out) 
gsaDph(idfa,hrl,in,out) q $$gsaDph^OBapiEDFce(idfa,hrl,.in,.out)
gSkRegDphIco(idfa,hrl,in,out) q $$gSkRegDphIco^OBapiEDFce(idfa,hrl,.in,.out)
isCentRegDph(idfa,hrl,in,out) q $$isCentRegDph^OBapiEDFce(idfa,hrl,.in,.out)
gSkRegDphDic(idfa,hrl,in,out) q $$gSkRegDphDic^OBapiEDFce(idfa,hrl,.in,.out)
 // dane
gDanSzbValDza(idfa,sysnmsp,nmsp,dza,hrl,in,out) q $$gDanSzbValDza^OBapiEDDan(idfa,sysnmsp,nmsp,dza,hrl,.in,.out)
gDanVal(val,dan) q $$gDanVal^OBapiEDDan(val,dan)
 // nastaveni parametru programu
gMainSet(idfa,nmsp,in,out) q $$gMainSet^OBapiEDSet(idfa,nmsp,.in,.out)
sMainSet(idfa,nmsp,in,out) q $$sMainSet^OBapiEDSet(idfa,nmsp,.in,.out)
gMainSetOne(idfa,nmsp,id1,id2) q $$gMainSetOne^OBapiEDSet(idfa,nmsp,id1,id2)
gMainDCal(idfa,nmsp,zp,idprv) q $$gMainDCal^OBapiEDSet(idfa,nmsp,zp,idprv)
 //
gPrsSet(idfa,nmsp,in,out) q $$gPrsSet^OBapiEDSet1(idfa,nmsp,.in,.out)
sPrsSet(idfa,nmsp,in,out) q $$sPrsSet^OBapiEDSet1(idfa,nmsp,.in,.out)
 //mzdove nastaveni
gMzdSet(idfa,nmsp,in,out) q $$gMzdSet^OBapiEDSet2(idfa,nmsp,.in,.out)
sMzdSet(idfa,nmsp,in,out) q $$sMzdSet^OBapiEDSet2(idfa,nmsp,.in,.out)
gMzdSetOne2i(idfa,nmsp,id1,id2) q $$gMzdSetOne2i^OBapiEDSet2(idfa,nmsp,id1,id2)
 //mzdove nastaveni, archiv
gMzdSetArchiv(idfa,nmsp,id,in,out) q $$gMzdSetArchiv^OBapiEDSet2(idfa,nmsp,id,.in,.out)
sMzdSetArchiv(idfa,nmsp,in,out) q $$sMzdSetArchiv^OBapiEDSet2(idfa,nmsp,.in,.out)
lMzdSetArchiv(idfa,nmsp,in,out) q $$lMzdSetArchiv^OBapiEDSet2(idfa,nmsp,.in,.out)
dMzdSetArchiv(idfa,nmsp,id,in,out) q $$dMzdSetArchiv^OBapiEDSet2(idfa,nmsp,id,.in,.out)
 //mzdove nastaveni UH pasmove
gMzdSet3(idfa,nmsp,in,out) q $$gMzdSet3^OBapiEDSet5(idfa,nmsp,.in,.out)
sMzdSet3(idfa,nmsp,in,out) q $$sMzdSet3^OBapiEDSet5(idfa,nmsp,.in,.out)
 //mzdove nastaveni UH casove
gMzdSet4(idfa,nmsp,in,out) q $$gMzdSet4^OBapiEDSet5(idfa,nmsp,.in,.out)
sMzdSet4(idfa,nmsp,in,out) q $$sMzdSet4^OBapiEDSet5(idfa,nmsp,.in,.out)
 //mzdove nastaveni pro vykonove mzdy - mzda pro linku a spoj - SA
gMzdSetMZP2LS(idfa,nmsp,in,out) q $$gMzdSetMZP2LS^OBapiEDSet5(idfa,nmsp,.in,.out)
sMzdSetMZP2LS(idfa,nmsp,in,out) q $$sMzdSetMZP2LS^OBapiEDSet5(idfa,nmsp,.in,.out)
 //mzdove sazby pro prenos do mezd, jen nektere polozky - rychlost
gSAMZD(idfa,nmsp,in,out) q $$gSAMZD^OBapiEDSet2(idfa,nmsp,.in,.out)
 //
gImpSet(idfa,nmsp,in,out) q $$gImpSet^OBapiEDSet3(idfa,nmsp,.in,.out)
sImpSet(idfa,nmsp,in,out) q $$sImpSet^OBapiEDSet3(idfa,nmsp,.in,.out)
gExpSet(idfa,nmsp,in,out) q $$gExpSet^OBapiEDSet3(idfa,nmsp,.in,.out)
sExpSet(idfa,nmsp,in,out) q $$sExpSet^OBapiEDSet3(idfa,nmsp,.in,.out)
gZskSet(idfa,nmsp,in,out) q $$gZskSet^OBapiEDSet3(idfa,nmsp,.in,.out)
sZskSet(idfa,nmsp,in,out) q $$sZskSet^OBapiEDSet3(idfa,nmsp,.in,.out)
 //nastaveni pro stravenky
gStrvSet(idfa,nmsp,in,out) q $$gStrvSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sStrvSet(idfa,nmsp,in,out) q $$sStrvSet^OBapiEDSet4(idfa,nmsp,.in,.out)
 //nastaveni pro MPVNET
gMPVNETSet(idfa,nmsp,in,out) q $$gMPVNETSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sMPVNETSet(idfa,nmsp,in,out) q $$sMPVNETSet^OBapiEDSet4(idfa,nmsp,.in,.out)
 //nastaveni pro TMAPY
gTMAPYSet(idfa,nmsp,in,out) q $$gTMAPYSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sTMAPYSet(idfa,nmsp,in,out) q $$sTMAPYSet^OBapiEDSet4(idfa,nmsp,.in,.out)
 //nastaveni pro EMTEST
gEMTESTSet(idfa,nmsp,in,out) q $$gEMTESTSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sEMTESTSet(idfa,nmsp,in,out) q $$sEMTESTSet^OBapiEDSet4(idfa,nmsp,.in,.out)
 //nastaveni pro barevne schema turnusu
gTuRowColorSet(idfa,nmsp,in,out) q $$gTuRowColorSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sTuRowColorSet(idfa,nmsp,in,out) q $$sTuRowColorSet^OBapiEDSet4(idfa,nmsp,.in,.out)
 //nastaveni pravidel pro tuzemske diety podle provozoven
gTDiePrv(idfa,nmsp,in,out) q $$gTDiePrv^OBapiEDSet5(idfa,nmsp,.in,.out)
sTDiePrv(idfa,nmsp,in,out) q $$sTDiePrv^OBapiEDSet5(idfa,nmsp,.in,.out)
 //nastaveni pro ztizene pracovni prostredi
isZtzPracSet(idfa,nmsp,in,out) q $$isZtzPracSet^OBapiEDSet4(idfa,nmsp,.in,.out)
gZtzPracSet(idfa,nmsp,in,out) q $$gZtzPracSet^OBapiEDSet4(idfa,nmsp,.in,.out)
sZtzPracSet(idfa,nmsp,in,out) q $$sZtzPracSet^OBapiEDSet4(idfa,nmsp,.in,.out)
gZtzPracZst(idfa,nmsp,os,in,out) q $$gZtzPracZst^OBapiEDSet4(idfa,nmsp,os,.in,.out)
chngZtzPracSetLocZst(idfa,nmsp,fromczs,toczs,in,out) q $$chngZtzPracSetLocZst^OBapiEDSet4(idfa,nmsp,fromczs,toczs,in,out)
isZtzPracSetLocZst(idfa,nmsp,czs,in,out) q $$isZtzPracSetLocZst^OBapiEDSet4(idfa,nmsp,czs,.in,.out)
 //gPlnSet(idfa,nmsp,in,out) q $$gPlnSet^OBapiEDSet4(idfa,nmsp,.in,.out) //zrusit, prehozeno do gMainSet
 //sPlnSet(idfa,nmsp,in,out) q $$sPlnSet^OBapiEDSet4(idfa,nmsp,.in,.out) //zrusit, prehozeno do gMainSet
 // funkce prevod data, hodin, roku,...
ntd(hrl) q $$ntd^OBapiEDFce(hrl)
nmm(mm) q $$nmm^OBapiEDFce(mm)
nd(hrl,par) q $$nd^OBapiEDFce(hrl,par)
dn(dt) q $$dn^OBapiEDFce(dt)
mh(m) q $$mh^OBapiEDFce(m)
mc(m) q $$mc^OBapiEDFce(m)
hm(h) q $$hm^OBapiEDFce(h)
hs(h) q $$hs^OBapiEDFce(h)
sh(s) q $$sh^OBapiEDFce(s)
md(m) q $$md^OBapiEDFce(m)
fhm(h) q $$fhm^OBapiEDFce(h)
round(val,dc) q $$round^OBapiEDFce(val,dc)
dhm(hrlFrom,tmFrom,hrlTo,tmTo) q $$dhm^OBapiEDFce(hrlFrom,tmFrom,hrlTo,tmTo)
rrrrmm(rrmm) q $$rrrrmm^OBapiEDFce(rrmm)
rrrr(rr) q $$rrrr^OBapiEDFce(rr)
gArrRrmm(rrmmod,rrmmdo,par,out) q $$gArrRrmm^OBapiEDFce(rrmmod,rrmmdo,par,.out)
gArrRrmmFromHrl(hrlfrom,hrlto,par,out) q $$gArrRrmmFromHrl^OBapiEDFce(hrlfrom,hrlto,par,.out)
gObdobi(idfa,nmsp,in,out) q $$gObdobi^OBapiEDFce(idfa,nmsp,.in,.out)
chngObdobi(idfa,nmsp,rrmm,in,out) q $$chngObdobi^OBapiEDFce(idfa,nmsp,rrmm,.in,.out)
wrapHrlMm(hrl,mm) q hrl*1440+mm
unwrapHrlMm(hrlmm) q (hrlmm\1440)_"~"_(hrlmm#1440)
wrapHrlSec(hrl,sec) q (hrl*86400)+sec						// prevod hrl a sekund (v ramci dne) na sekundy
unwrapHrlSec(hrlsec) q $lb((hrlsec\86400),(hrlsec#86400))	// prevod sekund na hrl a sec(v ramci dne)	
 // funkce, prace s retezci
format(txt,typ,len,char) q $$format^OBapiEDFce(txt,typ,len,char)
isStringInArr(arr,in) q $$isStringInArr^OBapiEDFce(.arr,.in)
cnvBezDia(txt) q $$cnvBezDia^OBapiEDFce(txt)
cnvBezDiaUp(txt) q $$cnvBezDiaUp^OBapiEDFce(txt)
cnvDiaUp(txt) q $$cnvDiaUp^OBapiEDFce(txt)
cnvDiaInd(txt) q $$cnvDiaInd^OBapiEDFce(txt)
cnvIndDia(txt) q $$cnvIndDia^OBapiEDFce(txt)
cnvTxt(txtall,txtfrom,txtto) q $$cnvTxt^OBapiEDFce(txtall,txtfrom,txtto)
cnvTxtToNum(txt) q $$cnvTxtToNum^OBapiEDFce(txt)
 // kalendar - dopravni - EDISON
lrrrrDCal(idfa,nmsp,in,out) q $$lrrrrDCal^OBapiEDCal(idfa,nmsp,.in,.out)
gDCal(idfa,nmsp,rrrr,in,out) q $$gDCal^OBapiEDCal(idfa,nmsp,rrrr,.in,.out)
sDCal(idfa,nmsp,rrrr,in,out) q $$sDCal^OBapiEDCal(idfa,nmsp,rrrr,.in,.out)
dDCal(idfa,nmsp,rrrr,in,out) q $$dDCal^OBapiEDCal(idfa,nmsp,rrrr,.in,.out)
mkDCal(idfa,nmsp,rrrr,arr) q $$mkDCal^OBapiEDCal(idfa,nmsp,rrrr,.arr)
gDCalDay(idfa,nmsp,hrl,in,out) q $$gDCalDay^OBapiEDCal(idfa,nmsp,hrl,.in,.out)
 // kalendar - funkce
grrmmdn(rrmm) q $$grrmmdn^OBapiEDCal(rrmm)
gminhrlrrmm(rrmm) q $$gminhrlrrmm^OBapiEDCal(rrmm)
gmaxhrlrrmm(rrmm) q $$gmaxhrlrrmm^OBapiEDCal(rrmm)
grrrrmmfromhrl(hrl) q $$grrrrmmfromhrl^OBapiEDCal(hrl)
addmmtorrrrmm(rrrrmm,cnt) q $$addmmtorrrrmm^OBapiEDCal(rrrrmm,cnt)
 // funkce, auta
gLastSttTachRZ(idfa,nmsp,rz,in,out) q $$gLastSttTachRZ^OBapiEDFce(idfa,nmsp,rz,.in,.out)
sLastSttTachRZ(idfa,nmsp,rz,in,out) q $$sLastSttTachRZ^OBapiEDFce(idfa,nmsp,rz,.in,.out)
chngLastSttTachRZ(idfa,nmsp,rz,in,out) q $$chngLastSttTachRZ^OBapiEDFce(idfa,nmsp,rz,.in,.out)
lLastSttTachRZ(idfa,nmsp,in,out) q $$lLastSttTachRZ^OBapiEDFce(idfa,nmsp,.in,.out)
gLastSttTankRZ(idfa,nmsp,rz,hrl,in,out) q $$gLastSttTankRZ^OBapiEDFce(idfa,nmsp,rz,hrl,.in,.out)
sLastSttTankRZ(idfa,nmsp,rz,hrl,in,out) q $$sLastSttTankRZ^OBapiEDFce(idfa,nmsp,rz,hrl,.in,.out)
gDtypRZ(idfa,nmsp,in,out) q $$gDtypRZ^OBapiEDFce(idfa,nmsp,.in,.out)
 // funkce, ostatni
sHistory(idfa,nmsp,idpol,glb,in,out) q $$sHistory^OBapiEDFce(idfa,nmsp,idpol,glb,.in,.out)
sKos(idfa,nmsp,idkos,idpol,fullname,info,glb,in,out) q $$sKos^OBapiEDFce(idfa,nmsp,idkos,idpol,fullname,info,glb,.in,.out) 
lKos(idfa,nmsp,idkos,glb,in,out) q $$lKos^OBapiEDFce(idfa,nmsp,idkos,glb,.in,.out)
gKos(idfa,nmsp,idkos,cnt,glb,in,out) q $$gKos^OBapiEDFce(idfa,nmsp,idkos,cnt,glb,.in,.out)
lHistPrepDoc(idfa,nmsp,in,out) q $$lHistPrepDoc^OBapiEDFce(idfa,nmsp,.in,.out)
gHistPrepDoc(idfa,nmsp,idtdoc,hrl,in,out) q $$gHistPrepDoc^OBapiEDFce(idfa,nmsp,idtdoc,hrl,.in,.out) 
sHistPrepDoc(idfa,nmsp,idtdoc,hrl,in,out) q $$sHistPrepDoc^OBapiEDFce(idfa,nmsp,idtdoc,hrl,.in,.out)
calTuzDie(idfa,nmsp,hrlFrom,tmFrom,hrlTo,tmTo,in,out) q $$calTuzDie^OBapiEDFce1(idfa,nmsp,hrlFrom,tmFrom,hrlTo,tmTo,.in,.out)
gPodilNS(idfa,nmsp,ns,prs,out) q $$gPodilNS^OBapiEDFce1(idfa,nmsp,ns,prs,.out)
gPodilTBNS(idfa,nmsp,out) q $$gPodilTBNS^OBapiEDFce1(idfa,nmsp,.out)
gRegZahDph(idfa,nmsp,idzak,in,out) q $$gRegZahDph^OBapiEDFce1(idfa,nmsp,idzak,.in,.out)
sRegZahDph(idfa,nmsp,idzak,in,out) q $$sRegZahDph^OBapiEDFce1(idfa,nmsp,idzak,.in,.out)
sRMForFillDS(idfa,nmsp,in,out) q $$sRMForFillDS^OBapiEDFce1(idfa,nmsp,.in,.out)
gRMForFillDS(idfa,nmsp,in,out) q $$gRMForFillDS^OBapiEDFce1(idfa,nmsp,.in,.out)
dRMForFillDS(idfa,nmsp,in,out) q $$dRMForFillDS^OBapiEDFce1(idfa,nmsp,.in,.out)
 //
rzpArr(arr,src,dc) q $$rzpArr^OBapiEDFce(.arr,.src,dc)
gWrkJB() q $$gWrkJB^OBapiEDFce()
gWrkALVAAD() q $$gWrkALVAAD^OBapiEDFce()
gWrkALVAADGlb(wrk) q $$gWrkALVAADGlb^OBapiEDFce(wrk)
gSzb(idfa,sysnmsp,nmsp,zp,in,out) q $$gSzb^OBapiEDFce(idfa,sysnmsp,nmsp,zp,.in,.out)
 // blokovani aplikace
gBlockApp(idfa,nmsp,zp,rrmm,in,out) q $$gBlockApp^OBapiEDFce(idfa,nmsp,zp,rrmm,.in,.out)
sBlockApp(idfa,nmsp,zp,rrmm,in,out) q $$sBlockApp^OBapiEDFce(idfa,nmsp,zp,rrmm,.in,.out)
gBlockAppInfo(idfa,nmsp,zp,rrmm,idcin,in,out) q $$gBlockAppInfo^OBapiEDFce(idfa,nmsp,zp,rrmm,idcin,.in,.out)
 // funkce, transformace platnosti
pltHex(val) q $$pltHex^OBapiEDFce2(val)
pltCmprs(val) q $$pltCmprs^OBapiEDFce2(val)
pldHex(val) q $$pldHex^OBapiEDFce2(val)
cnvPlTxt(tpl,dpl) q $$cnvPlTxt^OBapiEDFce2(tpl,dpl)
cnvPlHTxt(hpl) q $$cnvPlHTxt^OBapiEDFce2(hpl)
cnvPlDplTxt(dpl) q $$cnvPlDplTxt^OBapiEDFce2(dpl)
cnvPlHTplDpl(hpl) q $$cnvPlHTplDpl^OBapiEDFce2(hpl)
 // novy mesic - uloha
gNewMonthAsJob(idfa,nmsp,in,out) q $$gNewMonthAsJob^OBapiEDFce2(idfa,nmsp,.in,.out) 
sNewMonthAsJob(idfa,nmsp,in,out) q $$sNewMonthAsJob^OBapiEDFce2(idfa,nmsp,.in,.out)
dNewMonthAsJob(idfa,nmsp,in,out) q $$dNewMonthAsJob^OBapiEDFce2(idfa,nmsp,.in,.out)
 // konstanty
gDia() q $$gDia^OBapiEDConst()
qsj() q $$qsj^OBapiEDConst()
gCatR(nmsp) q $$gCatR^OBapiEDConst(nmsp)
gCatP(nmsp) q $$gCatP^OBapiEDConst(nmsp)
begNight() q $$begNight^OBapiEDConst()
endNight() q $$endNight^OBapiEDConst()
 // namespace
gSystemNmsp() q ##class(ALVA.EDISON.Main).GetSystemDB()
 // funkce pro BCD
checkBPPlanBCD(idfa,nmsp,in,out) q $$checkBPPlanBCD^OBapiEDBCD1(idfa,nmsp,.in,.out)
 //precislovani
rnOs(idfa,nmsp,oos,nos,in,out) q $$rnOs^OBapiEDOs1(idfa,nmsp,oldos,newos,.in,.out)
 //pomocne fce pro sap
gSAPFiktObj(idfa,nmsp,arr) q $$gSAPFiktObj^OBapiEDSAP(idfa,nmsp,.arr)
gSAPNumFile(idfa,nmsp,arr) q $$gSAPNumFile^OBapiEDSAP(idfa,nmsp,.arr)
 q

]]></Routine>


<Routine name="OBapiEDBCD1" type="INT" languagemode="0" timestamp="65269,33557.548926"><![CDATA[
OBapiEDBCD1 q
 //kontroly turnusu
tst
 k i,o
 s i("par",1)=2
 k ^CacheTempOptT($j) m ^CacheTempOptT($j)=^wwwbcd(0)
 w !,"err="_$$checkBPPlanBCD("VS_CSAD","USER",.i,.o) zw o
 q
checkBPPlanBCD(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" k out s out("stt")=1
 // in("par",1)=pc_ric 
 // ^CacheTempOptT($j,"par",1)=Provoz
 // ^CacheTempOptT($j,"par",2)=hrlOd
 // ^CacheTempOptT($j,"par",3)=hrlDo
 // ^CacheTempOptT($j,"par",4)=wrkSS
 // ^CacheTempOptT($j,"par",6)=idfa
 // ^CacheTempOptT($j,"par",7)=db
 // stridani
 // ^CacheTempOptT($j,"arr",51,pc_rid,hrl,idtu)=""
 // data turnusu
 // ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",1)=mmOd
 //	^CacheTempOptT($j,"arr",1,hrl,tu,"dta",2)=mmdo
 //	^CacheTempOptT($j,"arr",1,hrl,tu,"dta",3)=hod.celk.+$g(arrtur("arr","tuv",11))
 //	^CacheTempOptT($j,"arr",1,hrl,tu,"dta",4)=zstod
 // ^CacheTempOptT($j,"arr",1,hrl,tu,"dta",5)=zstdo
 // ^CacheTempOptT($j,"arr",2,hrl,tu,"dta",1)=$lb(0/1) ... 0 do 50 km / 1 nad 50 km
 // ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",1,tm)= ... prubeh turnusu pole "tur"
 // ^CacheTempOptT($j,"arr",2,hrl,tu,"arr",2,mm)=$lb(idcin,idsmena,t50,mmriz) ... rozpis turnusu po min idcin=0 pauza / 1 jizda / 2 ostatni
 // out("stt")=0/1 ... 1 ok
 s wrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrk)
 s id=$g(in("par",1)) i id="" q 0
 // zacatek a konec, posun na Po a Ne
 s hrlbeg=$g(^CacheTempOptT($j,"par",2)) i (hrlbeg+3#7+1)'=1 s hrlbeg=hrlbeg-(hrlbeg+3#7+1)+1
 s hrlend=$g(^CacheTempOptT($j,"par",3)) i (hrlend+3#7+1)'=7 s hrlend=hrlend+(7-(hrlend+3#7+1))
 /*
 // =========
 // stara fce
 // =========
 // ==========================
 // pole prace po dnech
 // ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(t50,beg,end)
 // ^||wrk.ALVA.AD(wrk,2,hrl*10000+mm)=$lb(idcin,tmbeg,tmend)
 // ==========================
 f hrl=hrlbeg-1:1:hrlend f mm=1:1:1440 s ^||wrk.ALVA.AD(wrk,2,((hrl+(mm\1440))*10000)+(mm#1440))=$lb("","","")
 s hrl="" f  s hrl=$o(^CacheTempOptT($j,"arr",51,id,hrl)) q:hrl=""  d
 .s idtu="" f  s idtu=$o(^CacheTempOptT($j,"arr",51,id,hrl,idtu)) q:idtu=""  d
 ..i +$g(^CacheTempOptT($j,"arr",2,hrl,idtu,"dta",1)) s ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(1,"","") 
 ..s mm="" f  s val="" s mm=$o(^CacheTempOptT($j,"arr",2,hrl,idtu,"arr",2,mm),1,val) q:mm=""  d
 ...s ^||wrk.ALVA.AD(wrk,2,((hrl+(mm\1440))*10000)+(mm#1440))=val
 ..//upraveny zacatek smeny
 ..s mm=$o(^CacheTempOptT($j,"arr",2,hrl,idtu,"arr",2,""))
 ..i mm'="" d
 ...s beg=((hrl+(mm\1440))*10000)+(mm#1440)
 ...i ($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),2)'="")&($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),2))>beg s $li(^||wrk.ALVA.AD(wrk,1,hrl),2)=beg
 ...i ($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),2)="") s $li(^||wrk.ALVA.AD(wrk,1,hrl),2)=beg
 ..//upraveny konec smeny
 ..s mm=$o(^CacheTempOptT($j,"arr",2,hrl,idtu,"arr",2,""),-1)
 ..i mm'="" d
 ...s end=((hrl+(mm\1440))*10000)+(mm#1440)
 ...i ($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),3)'="")&($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),3))<end s $li(^||wrk.ALVA.AD(wrk,1,hrl),3)=end
 ...i ($lg($g(^||wrk.ALVA.AD(wrk,1,hrl)),3)="") s $li(^||wrk.ALVA.AD(wrk,1,hrl),3)=end
 s err=$$checkBPPlanDta(idfa,nmsp,wrk,hrlbeg,hrlend,"",.out) zt:+err "merr" s err=""
 */
 ///*
 // =====================
 // nova fce jako v planu
 // =====================
 // ==================================================================
 // pole prace po dnech
 // ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(t50) - priznak modu spoje <50 ! > 50
 // ^||wrk.ALVA.AD(wrk,2,hrl*10000+mm)=$lb(idcin,idsmena,t50,mmriz)
 // ==================================================================
 //prazdne pole pro kontrolu, posun 21 dni zpatky (rezerva 23)
  f hrl=(hrlbeg-23):1:hrlend {
	s ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(0)
	f mm=1:1:1440 {
    	s ^||wrk.ALVA.AD(wrk,2,(((hrl+(mm\1440))*10000)+(mm#1440)))=$lb(0,"","","")
	}
  }
  //===============
  //doplnim turnusy
  //===============
  s mmriz=0		//pro napocet doby rizeni 
  s hrl="" f  {
 	s hrl=$o(^CacheTempOptT($j,"arr",51,id,hrl)) i hrl="" q
 	s checkhrl=hrl
	 s idtu="" f {
		  s idtu=$o(^CacheTempOptT($j,"arr",51,id,hrl,idtu)) i idtu="" q
		  i +$lg($g(^CacheTempOptT($j,"arr",2,hrl,idtu,"dta",1)),1) {
			  s ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(1)
		  } 
 		  s mm="" f {
	 		    s val=""
	 		    s mm=$o(^CacheTempOptT($j,"arr",2,hrl,idtu,"arr",2,mm),1,val) i mm="" q
	 		    //napocet rizeni
	 		    i +$lg(val,4) {
		 		    s mmriz=mmriz+1
		 		    s $li(val,4)=mmriz
	 		    }
	 		    s ^||wrk.ALVA.AD(wrk,2,((hrl+(mm\1440))*10000)+(mm#1440))=val
 		  }
	  }
  }
  //====================================================================================================
  //turnusy nechodi rovnomerne, vypocet intervalu pro kontroly, k poslednimu a pak o zacatku po 21 dnech
  //====================================================================================================
  s checkhrlbeg=$o(^CacheTempOptT($j,"arr",51,id,""))
  s checkhrlend=$o(^CacheTempOptT($j,"arr",51,id,""),-1)
  k arrcheckhrl s arrcheckhrl(checkhrlend)=""
  f mycnt=1:1 {
	  i (checkhrlbeg+(mycnt*21))<checkhrlend {
		  s arrcheckhrl(checkhrlbeg+(mycnt*21))=""
	  }
	  else {
		  q
	  }
  }
  // doplneni narustove doby rizeni do prubehu prace
  //s mmriz=0
  //s hrlmm="" f {
  //	  s hrlmm=$o(^||wrk.ALVA.AD(wrk,2,hrlmm)) i hrlmm="" q
  //	  s val=$g(^||wrk.ALVA.AD(wrk,2,hrlmm))
  //	  i $lg(val,4)>mmriz {
  //		  s mmriz=$lg(val,4)
  //	  }
  //	  i $lg(val,4)<mmriz {
  //		  s $li(val,4)=mmriz
  //  	  s ^||wrk.ALVA.AD(wrk,2,hrlmm)=val
  //	  }
  //}
  // =====================================
  // kontrola, prochazim pro kontrolni hrl
  // ===================================== 
  s quit=0 s checkhrl="" f {
	  s checkhrl=$o(arrcheckhrl(checkhrl)) i (checkhrl="")!(quit) q
	  s err=$$checkBPPlanDtaNP^OBapiEDBCD1New(idfa,nmsp,wrk,checkhrl,(checkhrl+1),"",.out) zt:+err "merr" s err=""
	  //===================
	  //beproslo to, koncim
	  //===================
	  i '$g(out("stt")) q
  }
  k ^||wrk.ALVA.AD(wrk)
 //*/
 q 0
checkBPPlanDta(idfa,nmsp,wrk,hrlbeg,hrlend,in,out)
 n (idfa,nmsp,wrk,hrlbeg,hrlend,in,out) s $zt="err" k out s out("stt")=1
 // kontrola bezpecnosti
 // wrk ... odkaz do globalu s rozpisem cinnosti
 // ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(t50,beg,end)
 // ^||wrk.ALVA.AD(wrk,2,hrl*10000+mm)=$lb(idcin,tmbeg,tmend)
 // hrlbeg=zacatek kontroly
 // hrlend=konec kontroly
 // out("msg",cnt)=popis
 // out("stt")=0/1  0 chyba / 1 ok
 // ==========================
 // kontrola dennich odpocinku
 // ==========================
 // vyhledam pauzy od zacatku a konce smeny 24 hodin zpet 
 f hrl=hrlend:-1 q:(hrl<hrlbeg)!('$g(out("stt")))  d
 .i '$d(^||wrk.ALVA.AD(wrk,1,hrl)) q
 .s val=$g(^||wrk.ALVA.AD(wrk,1,hrl))
 .s t50=$lg(val,1)
 .f cnt=3,2 s end=$lg(val,cnt) s beg=(((end\10000)-1)*10000)+(end#10000) d
 ..//pokud prvni kontrola neprosla
 ..i '$g(out("stt")) q
 ..k arrpau
 ..s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ...//pauza
 ...i '$lg(tmp,1) d
 ....s arrpau(tm)=tm s memtm=tm s quit=0
 ....s tmptm=tm f  s tmp="" s tmptm=$o(^||wrk.ALVA.AD(wrk,2,tmptm),1,tmp) q:(quit)!(tmptm="")!(tmptm>end)  d
 .....//pauza
 .....i '$lg(tmp,1) s arrpau(tm)=tmptm s memtm=tmptm q
 .....//neni pauza
 .....s quit=1
 ....s tm=memtm
 ..//vypocet skutecne delky pauzy a setrizeni pauz
 ..k srarrpau s tm="" f  s tmptm="" s tm=$o(arrpau(tm),1,tmptm) q:tm=""  d
 ...s mm=((((tmptm\10000)-(tm\10000))*1440)+(tmptm#10000))-(tm#10000)
 ...s arrpau(tm)=mm
 ...s srarrpau(mm,$i(srarrpau(mm)))=""
 ..k arrpau
 ..s mm="" f  s mm=$o(srarrpau(mm),-1) q:mm=""  d
 ...s cntmm="" f  s cntmm=$o(srarrpau(mm,cntmm)) q:cntmm=""  d
 ....s arrpau($i(arrpau))=mm
 ..k srarrpau
 ..//turnus do 50
 ..i 't50 d
 ...//nejdelsi alespon 11 hodin pauza ... ok
 ...i $g(arrpau(1))'<(11*60) q
 ...//nejdelsi alespon 8 hodin a suma 3 je alespon 12 hodin ...ok
 ...i $g(arrpau(1))'<(8*60) i ($g(arrpau(1))+$g(arrpau(2))+$g(arrpau(3)))'<(12*60) q
 ...//nejdelsi alespon 9 hodin ... ok ale musi se dorovnat !!!
 ...i $g(arrpau(1))'<(9*60) q
 ...s out("stt")=0
 ...s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn den.odpočinek"
 ..//turnus nad 50
 ..i +t50 d
 ...//nejdelsi alespon 11 hodin pauza ... ok
 ...i $g(arrpau(1))'<(11*60) q
 ...//delena 9 hodin + 3 hodiny ... ok
 ...i $g(arrpau(1))'<(9*60) i $g(arrpau(2))'<(3*60) q
 ...//nejdelsi alespon 9 hodin ... ok ale musi se dorovnat !!!
 ...i $g(arrpau(1))'<(9*60) q
 ...s out("stt")=0
 ...s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn den.odpočinek"
 //neproslo to ... konec
 i '$g(out("stt")) k ^||wrk.ALVA.AD(wrk) q 0
 // ===============================================================
 // kontrola tydenich odpocinku + u turnusu nad 50 tyd. dobu rizeni
 // ===============================================================
 f cnttyd=1:1 s hrlbegtyd=(hrlbeg+((cnttyd-1)*7)) s hrlendtyd=hrlbegtyd+6 q:hrlendtyd>hrlend  d
 .//mod turnusu pro tyden
 .s t50=0
 .f hrl=hrlbegtyd:1:hrlendtyd s val=$g(^||wrk.ALVA.AD(wrk,1,hrl)) i +$lg(val,1) s t50=1
 .//=====================
 .s beg=(hrlbegtyd*10000)-.01 s end=(hrlendtyd*10000)+1439
 .k arrpau
 .s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ..//pauza
 ..i '$lg(tmp,1) d
 ...s arrpau(tm)=tm s memtm=tm s quit=0
 ...s tmptm=tm f  s tmp="" s tmptm=$o(^||wrk.ALVA.AD(wrk,2,tmptm),1,tmp) q:(quit)!(tmptm="")!(tmptm>end)  d
 ....//pauza
 ....i '$lg(tmp,1) s arrpau(tm)=tmptm s memtm=tmptm q
 ....//neni pauza
 ....s quit=1
 ...s tm=memtm
 .//vypocet skutecne delky pauzy a setrizeni pauz
 .k srarrpau s tm="" f  s tmptm="" s tm=$o(arrpau(tm),1,tmptm) q:tm=""  d
 ..s mm=((((tmptm\10000)-(tm\10000))*1440)+(tmptm#10000))-(tm#10000)
 ..s arrpau(tm)=mm
 ..s srarrpau(mm,$i(srarrpau(mm)))=""
 .k arrpau
 .s mm="" f  s mm=$o(srarrpau(mm),-1) q:mm=""  d
 ..s cntmm="" f  s cntmm=$o(srarrpau(mm,cntmm)) q:cntmm=""  d
 ...s arrpau($i(arrpau))=mm
 .k srarrpau
 .//tyd mod turnus do 50
 .i 't50 d
 ..//je nejvetsi pauza 24h ... ok
 ..i $g(arrpau(1))'<(24*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn týd.odpočinek 24h"
 .//tyd mod turnus nad 50
 .i +t50 d
 ..//je nejvetsi pauza 45h ... ok
 ..i $g(arrpau(1))'<(45*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn týd.odpočinek 45h"
 .// ======================================
 .// tydenni doba rizeni u turnusu nad 50km
 .// ======================================
 .i +t50 d
 ..s val=0
 ..s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ...i $lg(tmp,1)=1 s val=val+1
 ..i val'>(56*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna týd. doba řízení max. 56 hodin"
 //neproslo to ... konec
 i '$g(out("stt")) k ^||wrk.ALVA.AD(wrk) q 0
 // ======================
 // 14ti denni doba rizeni
 // ======================
 f cnttyd=1:2 s hrlbeg14d=(hrlbeg+((cnttyd-1)*7)) s hrlend14d=hrlbeg14d+13 q:hrlend14d>hrlend  d
 .//mod turnusu pro 14 dni
 .s t50=0
 .f hrl=hrlbeg14d:1:hrlend14d s val=$g(^||wrk.ALVA.AD(wrk,1,hrl)) i +$lg(val,1) s t50=1
 .//=====================
 .s beg=(hrlbeg14d*10000)-.01 s end=(hrlend14d*10000)+1439
 .s val=0
 .s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ..i $lg(tmp,1)=1 s val=val+1
 .//14 denni doba rizeni pro turnus do 50 do 100 hodin
 .i 't50 d
 ..i val'>(100*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna 14 den. doba řízení max. 100 hodin"
 .i +t50 d
 ..i val'>(90*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna 14 den. doba řízení max. 90 hodin"
 k ^||wrk.ALVA.AD(wrk)
 //
 q 0
 //
checkBPPlanDtaNew(idfa,nmsp,wrk,hrlbeg,hrlend,in,out)
 n (idfa,nmsp,wrk,hrlbeg,hrlend,in,out) s $zt="err" k out s out("stt")=1
 // kontrola bezpecnosti
 // wrk ... odkaz do globalu s rozpisem cinnosti
 // ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(t50,beg,end)
 // ^||wrk.ALVA.AD(wrk,2,hrl*10000+mm)=$lb(idcin,tmbeg,tmend)
 // hrlbeg=zacatek kontroly
 // hrlend=konec kontroly
 // in("par",1)=0 pri nalezeni chyby kontrola konci / 1 probiha cela kontrola
 // out("msg",cnt)=popis
 // out("stt")=0/1  0 chyba / 1 ok
 s errquit=(+$g(in("par",1))=0)
 // ==========================
 // kontrola doby rizeni denni
 // pro kontrolovane dny prekontroluju dobu rizeni beg-end
 // ==========================
 k arr
 f hrl=hrlbeg:1 q:(hrl>hrlend)!((errquit)&('$g(out("stt"))))  d
 .i '$d(^||wrk.ALVA.AD(wrk,1,hrl)) q
 .s val=$g(^||wrk.ALVA.AD(wrk,1,hrl))
 .s t50=$lg(val,1) s beg=$lg(val,2) s end=$lg(val,3)
 .s val="" s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ..i $lg(tmp,1)=1 s val=val+1
 .//je vetsi nez 10 hod ... err
 .i (val>(10*60)) d
 ..s out("stt")=0 s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" doba řízení > 10:00 ("_$tr($j($$mh^OBapiED(val),0,2),".",":")_")" q
 .//je nad 50 a je vetsi nez 9 hod ... poznamenam si 
 .i +t50 i (val>(9*60)) d
 ..s hrl1tydbeg=hrl s:(hrl1tydbeg+3#7+1)'=1 hrl1tydbeg=hrl1tydbeg-(hrl1tydbeg+3#7+1)+1
 ..s arr(hrl1tydbeg)=""
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" doba řízení > 9:00 ("_$tr($j($$mh^OBapiED(val),0,2),".",":")_")"
 i ((errquit)&('$g(out("stt")))) q
 //v kontrolovanem obdobi se vyskytla prace nad 50km a doba rizeni 9-10 hod, kontrola na tyden
 i $o(arr(""))'="" d
 .s t50=1
 .s hrl1tydbeg="" f  s hrl1tydbeg=$o(arr(hrl1tydbeg)) q:hrl1tydbeg=""  d
 ..s hrl1tydend=hrl1tydbeg+6
 ..s cnt=0 f hrl=hrl1tydbeg:1:hrl1tydend d
 ...s val=$g(^||wrk.ALVA.AD(wrk,1,hrl)) s beg=$lg(val,2) s end=$lg(val,3)
 ...s val="" s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ....i $lg(tmp,1)=1 s val=val+1
 ...i (val>(9*60)) s cnt=cnt+1
 ..i cnt>2 s out("stt")=0 s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl1tydbeg,0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" v týdnu od "_$$nd^OBapiED(hrl1tydbeg,0)_" je doba řízení > 9:00 "_cnt_" x" q 
 i ((errquit)&('$g(out("stt")))) q 0
 // ===================================
 // tydenni a ctrnactidenni doba rizeni
 // ===================================
 // pripravim pole arr(hrl)=min rizeni
 s hrl=hrlbeg s:(hrl+3#7+1)'=1 hrl=hrl-(hrl+3#7+1)+1 s hrl=hrl-7
 s beg=(hrl*10000)
 s hrl=hrlend s:(hrl+3#7+1)'=7 hrl=hrl+(7-(hrl+3#7+1)) 
 s end=(hrl*10000+1439)
 // ==========================
 k arr s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 .i $lg(tmp,1)=1 s hrl=tm\10000 s arr(hrl)=$g(arr(hrl))+1
 f hrl=hrlbeg:1 q:(hrl>hrlend)!((errquit)&('$g(out("stt"))))  d
 .//stanoveni tydne
 .s hrl1tydbeg=hrl s:(hrl1tydbeg+3#7+1)'=1 hrl1tydbeg=hrl1tydbeg-(hrl1tydbeg+3#7+1)+1
 .s hrl1tydend=hrl s:(hrl1tydend+3#7+1)'=7 hrl1tydend=hrl1tydend+(7-(hrl1tydend+3#7+1))
 .//jak pocitam
 .s t50=0 f hrltyd=hrl1tydbeg:1:hrl1tydend s val=$g(^||wrk.ALVA.AD(wrk,1,hrltyd)) i $lg(val,1)>1 s t50=$lg(val,1)
 .//nad 50 kontrola tyd.doby rizeni
 .i +t50 d
 ..s val="" f hrltyd=hrl1tydbeg:1:hrl1tydend s val=$g(val)+$g(arr(hrltyd))
 ..i (val>(56*60)) s out("stt")=0 s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl1tydbeg,0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" v týdnu od "_$$nd^OBapiED(hrl1tydbeg,0)_" je suma doby řízení > 56:00 ("_$tr($j($$mh^OBapiED(val),0,2),".",":")_")"
 .//kontrola ctr.denni doby rizeni
 .s val="" f hrltyd=(hrl1tydbeg-7):1:hrl1tydend s val=$g(val)+$g(arr(hrltyd))
 .i 't50 i (val>(100*60)) s out("stt")=0 s out("msg",$i(out("msg")))=$$nd^OBapiED((hrl1tydbeg-7),0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" ve dvou týdnech od "_$$nd^OBapiED((hrl1tydbeg-7),0)_" je suma doby řízení > 100:00 ("_$tr($j($$mh^OBapiED(val),0,2),".",":")_")"
 .i +t50 i (val>(90*60)) s out("stt")=0 s out("msg",$i(out("msg")))=$$nd^OBapiED((hrl1tydbeg-7),0)_"|"_$p("do 50km~nad 50km","~",$g(t50)+1)_"|"_" ve dvou týdnech od "_$$nd^OBapiED((hrl1tydbeg-7),0)_" je suma doby řízení > 90:00 ("_$tr($j($$mh^OBapiED(val),0,2),".",":")_")"
 i ((errquit)&('$g(out("stt")))) q 0
 // ==========================
 // kontrola dennich odpocinku
 // ==========================
 // vyhledam pauzy od zacatku a konce smeny 24 hodin zpet 
 f hrl=hrlend:-1 q:(hrl<hrlbeg)!((errquit)&('$g(out("stt"))))  d
 .i '$d(^||wrk.ALVA.AD(wrk,1,hrl)) q
 .s val=$g(^||wrk.ALVA.AD(wrk,1,hrl))
 .s t50=$lg(val,1)
 .f cnt=3,2 s end=$lg(val,cnt) s beg=(((end\10000)-1)*10000)+(end#10000) d
 ..//pokud prvni kontrola neprosla
 ..i (errquit)&'($g(out("stt"))) q
 ..k arrpau
 ..s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ...//pauza
 ...i '$lg(tmp,1) d
 ....s arrpau(tm)=tm s memtm=tm s quit=0
 ....s tmptm=tm f  s tmp="" s tmptm=$o(^||wrk.ALVA.AD(wrk,2,tmptm),1,tmp) q:(quit)!(tmptm="")!(tmptm>end)  d
 .....//pauza
 .....i '$lg(tmp,1) s arrpau(tm)=tmptm s memtm=tmptm q
 .....//neni pauza
 .....s quit=1
 ....s tm=memtm
 ..//vypocet skutecne delky pauzy a setrizeni pauz
 ..k srarrpau s tm="" f  s tmptm="" s tm=$o(arrpau(tm),1,tmptm) q:tm=""  d
 ...s mm=((((tmptm\10000)-(tm\10000))*1440)+(tmptm#10000))-(tm#10000)
 ...s arrpau(tm)=mm
 ...s srarrpau(mm,$i(srarrpau(mm)))=""
 ..k arrpau
 ..s mm="" f  s mm=$o(srarrpau(mm),-1) q:mm=""  d
 ...s cntmm="" f  s cntmm=$o(srarrpau(mm,cntmm)) q:cntmm=""  d
 ....s arrpau($i(arrpau))=mm
 ..k srarrpau
 ..//turnus do 50
 ..i 't50 d
 ...//nejdelsi alespon 11 hodin pauza ... ok
 ...i $g(arrpau(1))'<(11*60) q
 ...//nejdelsi alespon 8 hodin a suma 3 je alespon 12 hodin ...ok
 ...i $g(arrpau(1))'<(8*60) i ($g(arrpau(1))+$g(arrpau(2))+$g(arrpau(3)))'<(12*60) q
 ...//nejdelsi alespon 9 hodin ... ok ale musi se dorovnat !!!
 ...i $g(arrpau(1))'<(9*60) q
 ...s out("stt")=0
 ...s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn den.odpočinek"
 ..//turnus nad 50
 ..i +t50 d
 ...//nejdelsi alespon 11 hodin pauza ... ok
 ...i $g(arrpau(1))'<(11*60) q
 ...//delena 9 hodin + 3 hodiny ... ok
 ...i $g(arrpau(1))'<(9*60) i $g(arrpau(2))'<(3*60) q
 ...//nejdelsi alespon 9 hodin ... ok ale musi se dorovnat !!!
 ...i $g(arrpau(1))'<(9*60) q
 ...s out("stt")=0
 ...s out("msg",$i(out("msg")))=$$nd^OBapiED(hrl,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn den.odpočinek"
 //neproslo to ... konec
 i '$g(out("stt")) k ^||wrk.ALVA.AD(wrk) q 0
 // ===============================================================
 // kontrola tydenich odpocinku + u turnusu nad 50 tyd. dobu rizeni
 // ===============================================================
 f cnttyd=1:1 s hrlbegtyd=(hrlbeg+((cnttyd-1)*7)) s hrlendtyd=hrlbegtyd+6 q:hrlendtyd>hrlend  d
 .//mod turnusu pro tyden
 .s t50=0
 .f hrl=hrlbegtyd:1:hrlendtyd s val=$g(^||wrk.ALVA.AD(wrk,1,hrl)) i +$lg(val,1) s t50=1
 .//=====================
 .s beg=(hrlbegtyd*10000)-.01 s end=(hrlendtyd*10000)+1439
 .k arrpau
 .s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ..//pauza
 ..i '$lg(tmp,1) d
 ...s arrpau(tm)=tm s memtm=tm s quit=0
 ...s tmptm=tm f  s tmp="" s tmptm=$o(^||wrk.ALVA.AD(wrk,2,tmptm),1,tmp) q:(quit)!(tmptm="")!(tmptm>end)  d
 ....//pauza
 ....i '$lg(tmp,1) s arrpau(tm)=tmptm s memtm=tmptm q
 ....//neni pauza
 ....s quit=1
 ...s tm=memtm
 .//vypocet skutecne delky pauzy a setrizeni pauz
 .k srarrpau s tm="" f  s tmptm="" s tm=$o(arrpau(tm),1,tmptm) q:tm=""  d
 ..s mm=((((tmptm\10000)-(tm\10000))*1440)+(tmptm#10000))-(tm#10000)
 ..s arrpau(tm)=mm
 ..s srarrpau(mm,$i(srarrpau(mm)))=""
 .k arrpau
 .s mm="" f  s mm=$o(srarrpau(mm),-1) q:mm=""  d
 ..s cntmm="" f  s cntmm=$o(srarrpau(mm,cntmm)) q:cntmm=""  d
 ...s arrpau($i(arrpau))=mm
 .k srarrpau
 .//tyd mod turnus do 50
 .i 't50 d
 ..//je nejvetsi pauza 24h ... ok
 ..i $g(arrpau(1))'<(24*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn týd.odpočinek 24h"
 .//tyd mod turnus nad 50
 .i +t50 d
 ..//je nejvetsi pauza 45h ... ok
 ..i $g(arrpau(1))'<(45*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněn týd.odpočinek 45h"
 .// ======================================
 .// tydenni doba rizeni u turnusu nad 50km
 .// ======================================
 .i +t50 d
 ..s val=0
 ..s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ...i $lg(tmp,1)=1 s val=val+1
 ..i val'>(56*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna týd. doba řízení max. 56 hodin"
 //neproslo to ... konec
 i '$g(out("stt")) k ^||wrk.ALVA.AD(wrk) q 0
 // ======================
 // 14ti denni doba rizeni
 // ======================
 f cnttyd=1:2 s hrlbeg14d=(hrlbeg+((cnttyd-1)*7)) s hrlend14d=hrlbeg14d+13 q:hrlend14d>hrlend  d
 .//mod turnusu pro 14 dni
 .s t50=0
 .f hrl=hrlbeg14d:1:hrlend14d s val=$g(^||wrk.ALVA.AD(wrk,1,hrl)) i +$lg(val,1) s t50=1
 .//=====================
 .s beg=(hrlbeg14d*10000)-.01 s end=(hrlend14d*10000)+1439
 .s val=0
 .s tm=beg-.01 f  s tmp="" s tm=$o(^||wrk.ALVA.AD(wrk,2,tm),1,tmp) q:(tm="")!(tm>end)  d
 ..i $lg(tmp,1)=1 s val=val+1
 .//14 denni doba rizeni pro turnus do 50 do 100 hodin
 .i 't50 d
 ..i val'>(100*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna 14 den. doba řízení max. 100 hodin"
 .i +t50 d
 ..i val'>(90*60) q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))=$$nd^OBapiED(hrlbegtyd,0)_"-"_$$nd^OBapiED(hrlendtyd,0)_" "_$p("do 50km~nad 50km","~",$g(t50)+1)_" není splněna 14 den. doba řízení max. 90 hodin"
 k ^||wrk.ALVA.AD(wrk)
 //
 q 0
 //
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDBCD1New" type="INT" languagemode="0" timestamp="65279,82548.259542"><![CDATA[
OBapiEDBCD1New q
 //kontroly turnusu
 /*
tst
 k i,o
 m i=^wwwbcd(0)
 k ^CacheTempOptT($j) m ^CacheTempOptT($j)=^wwwbcd(1)
 w !,"err="_$$checkBPPlanBCD("VS_CSAD","USER",.i,.o) zw o
 q
 */
checkBPPlanDtaNP(idfa,nmsp,wrk,hrlbeg,hrlend,in,out)
 n (idfa,nmsp,wrk,hrlbeg,hrlend,in,out) s $zt="err" k out s out("stt")=1
 // kontrola bezpecnosti
 // wrk ... odkaz do globalu s rozpisem cinnosti
 // ^||wrk.ALVA.AD(wrk,1,hrl)=$lb(t50) - priznak modu spoje <50 ! > 50
 // ^||wrk.ALVA.AD(wrk,2,hrl*10000+mm)=$lb(idcin,idsmena,t50,mmriz)
 // idcin=0 odpocinek
 // idcin=1 rizeni
 // idcin=2 ostatni prace, neni odpocinek
 // hrlbeg=zacatek kontroly
 // hrlend=konec kontroly
 // in("par",1)=0 pri nalezeni chyby kontrola konci / 1 probiha cela kontrola
 // out("msg",hrlmm)=$lb(err)
 // out("stt")=0/1  0 chyba / 1 ok
 // popis prace
 //                                                      1              2      3      4     5      6         7       8            9
 // ^||wrk.ALVA.AD(wrk,2.01,hrl*10000+mm_beg)=$lb(hrl*10000+mm_end,mm_lenght,idcin,idsmena,t50,isTydOdp,isDenOdp,isZkrTydOdp,isZkrDenOdp,mm_riz_lenght)
 //
 // zkracene denni odpocinky pro kontrolu dorovnani
 //                                                      1                2
 // ^||wrk.ALVA.AD(wrk,2.02,hrl*10000+mm_beg)=$lb(hrl*10000+mm_end,mm_lenght_dorovnat)
 //
 s errquit=(+$g(in("par",1))=0)
 s errquit=0
 // kontrola pres vsechny dny
 f myhrl=hrlbeg:1:hrlend d
 .//ukonceni pri chybe
 .i (errquit)&('($g(out("stt")))) q
 .//mod kontroly
 .s m50=0 f tmphrl=(myhrl-21):1:myhrl i $lg($g(^||wrk.ALVA.AD(wrk,1,tmphrl)),1)=1 s m50=1
 .//inicializace prom.
 .s hrlmmbeg=-1			// zacatek cinnosti
 .s hrlmmend=""			// konec cinnosti
 .s hrlmmcin=""			// id cinnosti
 .s hrlmmlen=""			// delka cinnosti(mm)
 .s hrlmmodptyddo=""	// do kdy plati tydenni odpocinek
 .s hrlmmodpdendo="" 	// do kdy plati denni odpocinek
 .s hrlmmidsme=""		// id smeny
 .s isTydOdp=0			// priznak tydenniho odpocinku
 .s isDenOdp=0			// priznak denniho odpocinku
 .s isZkrTydOdp=0		// priznak zkraceneho tydenniho odpocinku
 .s isZkrDenOdp=0		// priznak zkraceneho denniho odpocinku
 .k arrWatch
 .s arrWatch(0)=wrk
 .s arrWatch(2,1)=-1	//do kdy je splnena denni doba odpocinku
 .s arrWatch(3,1)=-1	//do kdy je splnena tydenni doba odpocinku
 .// =======================================================
 .// w !,"od="_$$nd^OBapiED(myhrl-21,0)
 .// w !,"do="_$$nd^OBapiED(myhrl,0)
 .s hrlmm=(((myhrl-21)*10000)-1)	//zacatek kontroly 21 dni zpet
 .s hrlmmstop=(myhrl*10000+1440)	//konec kontroly
 .f  s val="" s hrlmm=$o(^||wrk.ALVA.AD(wrk,2,hrlmm),1,val) q:(hrlmm="")!(hrlmm>hrlmmstop)!((errquit)&('$g(out("stt"))))  d 
 ..// popis radku 
 ..s idcin=$lg(val,1)		//id cinnosti 0 odpocinek / 1 rizeni / 2 ostatni cinnosti
 ..s myidcin=(idcin>0)		//upravene id cinnosti 0 odpocinek / 1 nejaka cinnost (smena)
 ..s idsme=$lg(val,2)		//identifikator smeny
 ..s idt50=$lg(val,3)		//priznak <> 50 km
 ..// pocatecni inicializace
 ..i hrlmmbeg=-1 d
 ...s hrlmmbeg=hrlmm			//zacatek cinnosti
 ...s hrlmmend=hrlmm 			//konec cinnosti
 ...s hrlmmmyidcin=myidcin 		//upravene id cinnosti - 0 odpocinek / 1 nejaka cinnost (smena)
 ...s hrlmmidsme=idsme			//popis smeny
 ...s hrlmmlen=1				//delka cinnosti
 ...i myidcin=0 d				//dohledam konec pauzy, podle ni nastavim do kdy je splnena denni a tydenni doba odpocinku
 ....s tmphrlmm=""
 ....d gIntrvCin(wrk,hrlmm,.tmphrlmm,"")
 ....s arrWatch(2,1)=$$addDayHrlmm(tmphrlmm,1)		//do kdy je splnena denni doba odpocinku
 ....s arrWatch(3,1)=$$addDayHrlmm(tmphrlmm,7)		//do kdy je splnena tydenni doba odpocinku
 ..//zacatek cinnosti nastaveni doby pro konec denniho a tydenniho odpocinku (od prvni nalezene smeny)
 ..i ($g(arrWatch(2,1))=-1)&(myidcin) d
 ....s arrWatch(2,1)=$$addDayHrlmm(hrlmm,1)			//do kdy je splnena denni doba odpocinku
 ....s arrWatch(3,1)=$$addDayHrlmm(hrlmm,7)			//do kdy je splnena tydenni doba odpocinku
 ..// ======================
 ..s hrl=(hrlmm\10000)			//aktualni den (hrl)	
 ..s hrl7=(hrl+7)-(hrl+3#7+1)	//aktualni nedele k hrl (hrl)
 ..//==========================
 ..//||||| zmena cinnosti |||||
 ..//==========================
 ..i (myidcin'=hrlmmmyidcin) d  q
 ...//=========================================================================
 ...//konec cinnosti, predchozi cinnost hrlmmbeg - hrlmmend, hrlmmlen, hrlmmcin
 ...//=========================================================================
 ...//zapis do prubehoveho globalu
 ...s mmriz=($lg($g(^||wrk.ALVA.AD(wrk,2,hrlmmend)),4)-$lg($g(^||wrk.ALVA.AD(wrk,2,hrlmmbeg)),4))
 ...s ^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg)=$lb(hrlmmend,hrlmmlen,hrlmmmyidcin,hrlmmidsme,m50,isTydOdp,isDenOdp,"","",mmriz) 
 ...//w !,$$nd^OBapiED(hrlmmbeg\10000,0)_" = "_$$mh^OBapiED(hrlmmbeg#10000)_" = "_hrlmmend_" = "_hrlmmlen_" "_hrlmmmyidcin
 ...//===============
 ...//konec odpocinku
 ...//===============
 ...i hrlmmmyidcin=0 d
 ....//=======================================================
 ....//zapis pauzy do pole arrWatch(2,2,hrlmm)=lenmm_"~"_hrlmmend
 ....//(pro pripadne pouziti pri delenych dennich odpocincich)
 ....//=======================================================
 ....i hrlmmlen'>(11*60) s arrWatch(2,2,hrlmmbeg)=hrlmmlen_"~"_hrlmmend		//jb !!!
 ....//=======================================================
 ....//zapis pauzy do pole arrWatch(3,2,hrlmm)=lenmm
 ....//(pro pripadne pouziti pri delenych tydennich odpocincich)
 ....//=======================================================
 ....i (hrlmmlen<(45*60))&(hrlmmlen>(11*60)) s arrWatch(3,2,hrlmmbeg)=hrlmmlen_"~"_hrlmmend
 ....//============================================
 ....//kontrola tydenniho odpocinku v modu do 50 km
 ....//============================================
 ....i m50=0 d
 .....//v prubehu pauzy doslo k prekroceni limitu pro tydenni odpocinek a pauza ho splnuje (isTydOdp=1)
 .....//nebo nedoslo k prekroceni limitu a pauza splnuje parametry tydenniho odpocinku ... ok
 .....i (isTydOdp)!(hrlmmlen'<(24*60)) d  q
 ......s isTydOdp=1 s isDenOdp=1
 ......d initNewTydOdp(hrlmmend,.arrWatch,hrlmmbeg)
 ....//=============================================
 ....//kontrola tydenniho odpocinku v modu nad 50 km
 ....//=============================================
 ....i m50=1 d
 .....//v prubehu pauzy doslo k prekroceni limitu pro tydenni odpocinek a pauza ho splnuje (isTydOdp=1)
 .....//nebo nedoslo k prekroceni limitu a pauza splnuje parametry tydenniho odpocinku ... ok
 .....i (isTydOdp)!(hrlmmlen'<(45*60)) d  q
 ......s isTydOdp=1 s isDenOdp=1
 ......d initNewTydOdp(hrlmmend,.arrWatch,hrlmmbeg)
 ....i 'isTydOdp d
 .....//==========================================
 .....//kontrola denniho odpocinku v modu do 50 km
 .....//==========================================
 .....i m50=0 d
 ......i (isDenOdp)!(hrlmmlen'<(11*60)) d
 .......s isDenOdp=1
 .......d initNewDenOdp(hrlmmend,.arrWatch,hrlmmbeg)
 .....//===========================================
 .....//kontrola denniho odpocinku v modu nad 50 km
 .....//===========================================
 .....i m50=1 d
 ......i (isDenOdp)!(hrlmmlen'<(11*60)) d
 .......s isDenOdp=1
 .......d initNewDenOdp(hrlmmend,.arrWatch,hrlmmbeg)
 ...//zapis do prubehoveho globalu
 ...s $li(^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg),6)=isTydOdp
 ...s $li(^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg),7)=isDenOdp
 ...//==========================
 ...//nastaveni novych pocitadel
 ...//==========================
 ...s hrlmmbeg=hrlmm
 ...s hrlmmend=hrlmm
 ...s hrlmmlen=""
 ...s hrlmmidsme=idsme
 ...s isDenOdp=0
 ...s isZkrDenOdp=0
 ...s isTydOdp=0
 ...s isZkrTydOdp=0
 ...s hrlmmmyidcin=myidcin
 ..//
 ..//==================================
 ..// ||||| pokracovani v napoctu |||||
 ..//==================================
 ..//
 ..//sumy pro kontroly napoctu (napocet tydenni doby rizeni)
 ..i idcin=1 s arrWatch(1,2,hrl7)=$g(arrWatch(1,2,hrl7))+1
 ..//pokracovani cinnosti, napocet doby =
 ..s hrlmmend=hrlmm s hrlmmlen=hrlmmlen+1
 ..//=======================================================
 ..//
 ..//==============================================================================
 ..//kontrola na prekroceni intervalu pro platnost tydenni doby odpocinku pro smenu
 ..//==============================================================================
 ..//
 ..i (arrWatch(3,1)>0) i (hrlmm'<arrWatch(3,1)) d
 ...//==============================================================================
 ...//ODPOCINEK, kontrola velikosti pauzy v modu do 50km, musi byt:
 ...// - minimalne 24 hod.
 ...//==============================================================================
 ...i (myidcin=0)&(m50=0) d  q:isTydOdp
 ....i (hrlmmlen'<(24*60)) s isTydOdp=1 q
 ....// odpocinek je mensi nez 24h, chyba
 ....s out("stt")=0
 ....d addMsg(hrlmm,m50,2,"není splněna týd.doba odpocinku ("_$tr($j($$mh^OBapiED(hrlmmlen),0,2),".",":")_")","",.out)
 ....d initNewTydOdp(arrWatch(3,1),.arrWatch,"")
 ...//===============================================================================================================================
 ...//ODPOCINEK, kontrola velikosti pauzy v modu nad 50km, musi byt:
 ...// - celkove minimalne 45 hod.a aktualni delka pauzy minimalne 24 hod.
 ...// - nebo aktualni delka pauzy 24 hod. a nemi byt jiz zkracena
 ...//===============================================================================================================================
 ...i (myidcin=0)&(m50=1) d  q:isTydOdp
 ....//zjistim delku cele pauzy a kontrola
 ....s allmmlen=0 s tmphrlmmend="" d gIntrvCin(wrk,hrlmmbeg,.tmphrlmmend,.allmmlen)
 ....//odpocinek je 45 hod
 ....i ((hrlmmlen'<(24*60)))&(allmmlen'<(45*60)) d  q
 .....d initNewTydOdp(tmphrlmmend,.arrWatch,hrlmmbeg)
 .....s isTydOdp=1
 ....//odpocinek < 45 hodin ale >24 hod, kontrola zda je mozny zkraceny
 ....i ((hrlmmlen'<(24*60)))&('$g(arrWatch(3,3))) d  q
 .....s arrWatch(3,3)=hrlmmbeg
 .....d initNewTydOdp(tmphrlmmend,.arrWatch,hrlmmbeg)
 .....s isZkrTydOdp=1
 .....s isTydOdp=1
 ...//==============================================================================================================
 ...//ODPOCINEK nebo CINNOST, mod nad 50 km, pokud jeste neni zkraceny, pokusim se ho dohledat v nachytaných pauzách 
 ...//==============================================================================================================
 ...i (m50=1)&('$g(arrWatch(3,3))) d  q:$g(arrWatch(3,3))
 ....k tmparrpau m tmparrpau=arrWatch(3,2)						//dostupne pauzy
 ....s tmphrlmm=$$findIntByLen(.tmparrpau,(24*60),-1)
 ....//nasel jsem pauzu pro zkraceny odpocinek
 ....i tmphrlmm d
 .....//konec cinnosti
 .....s tmphrlmmend=$p($g(arrWatch(3,2,tmphrlmm)),"~",2)
 .....d initNewTydOdp(tmphrlmmend,.arrWatch,tmphrlmm)
 .....s arrWatch(3,3)=tmphrlmm	    	  			//poznaceni zkraceneho tydenniho odpocinku 
 .....s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),6)=1	//poznaceni tydenniho odpocinku
 .....s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),7)=1	//poznaceni denniho odpocinku
 .....s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),8)=1	//poznaceni zkraceneho tydeniho odpocinku
 ...// =====================================
 ...// NENI SPLNENA DOBA TYDENNIHO ODPOCINKU
 ...// =====================================
 ...s out("stt")=0
 ...s mymsg=""
 ...i myidcin>0 s mymsg="není splněna týd.doba odpocinku"
 ...i myidcin=0 s mymsg="není splněna týd.doba odpocinku ( v(e) "_$tr($j($$mh^OBapiED(hrlmm#10000),0,2),".",":")_" je "_$tr($j($$mh^OBapiED(hrlmmlen),0,2),".",":")_")"
 ...i myidcin>1 d addMsg(hrlmm,m50,2,mymsg,"",.out)
 ...d initNewTydOdp(arrWatch(3,1),.arrWatch,"")
 ...s isDenOdp=0
 ...s isTydOdp=0
 ...s isZkrTydOdp=0
 ...s isZkrDenOdp=0
 ..//===========================================================================================
 ..//kontrola na prekroceni intervalu pro platnost denni doby odpocinku (behem kazdych 24 hodin)
 ..//===========================================================================================
 ..i arrWatch(2,1)>0 i (hrlmm'<arrWatch(2,1)) d
 ...//==============================================================
 ...//ODPOCINEK, kontrola velikosti pauzy v modu do 50km, musi byt:
 ...// - minimalne 11 hod.
 ...//==============================================================
 ...i (myidcin=0)&(m50=0) d  q:isDenOdp
 ....i hrlmmlen'<(11*60) s isDenOdp=1 q 
 ...//==============================================================
 ...//ODPOCINEK, kontrola velikosti pauzy v modu nad 50km, musi byt:
 ...// - minimalne 11 hod.
 ...//==============================================================
 ...i (myidcin=0)&(m50=1) d  q:isDenOdp
 ....i hrlmmlen'<(11*60) s isDenOdp=1 q 
 ...//====================================================================================================
 ...//ODPOCINEK nebo CINNOST, mod do 50 km, pokusim se dohledat deleny nebo zkraceny v nachytanych pauzach 
 ...//==================================================================================================== 
 ...// v prom arrWatch(2,2,hrlmm)=lenmm jsou nachytane pauzy od ukonceni předchozi doby denniho odpocinku
 ...k tmparrpau m tmparrpau=arrWatch(2,2)
 ...//jsem-li v pauze doplnim ji do pole
 ...i myidcin=0 d
 ....s tmparrpau(hrlmmbeg)=hrlmmlen_"~"_hrlmm
 ...//========================
 ...//kontrola v modu do 50 km
 ...//========================
 ...i m50=0 s isdzodp=0 d  q:isdzodp
 ....//deleny odpocinek - 3 pauzy, jedna musí být 8 hodin a soucet 3 pauz musí být min 12 hodin
 ....s tmphrlmmend=""
 ....k sorttmparrpau m sorttmparrpau=tmparrpau
 ....d sortIntByLen(.sorttmparrpau)
 ....i ($lg($g(sorttmparrpau(1)),1)'<(8*60)) d
 .....i (($lg($g(sorttmparrpau(1)),1)+$lg($g(sorttmparrpau(2)),1)+$lg($g(sorttmparrpau(3)),1))'<(12*60)) d
 ......s isdzodp=1
 ......f cnt=1:1:3 d
 .......i '$d(sorttmparrpau(cnt)) q
 .......s tmphrlmm=$lg($g(sorttmparrpau(cnt)),2)
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),7)=1 	 //poznaceni denniho odpocinku
 .......i $lg($g(sorttmparrpau(cnt)),3)>tmphrlmmend s tmphrlmmend=$lg($g(sorttmparrpau(cnt)),3)
 .......i tmphrlmm=hrlmmbeg s isDenOdp=1
 ......d initNewDenOdp(tmphrlmmend,.arrWatch,$lg($g(sorttmparrpau(1)),2))
 ....k sorttmparrpau
 ....//nasel jsem deleny odpocinek
 ....i isdzodp=1 q
 ....//zkraceny odpocinek 9-11 hodin, maximalne 3x v tydnu
 ....i $g(arrWatch(2,3))<3 d
 .....s tmphrlmm=$$findIntByLen(.tmparrpau,(9*60),-1)
 .....//nasel jsem pauzu pro zkraceny odpocinek
 .....i tmphrlmm d
 ......s isdzodp=1
 ......//poznaceni zkraceneho denniho odpocinku 
 ......s arrWatch(2,3)=$g(arrWatch(2,3))+1
 ......//konec cinnosti
 ......s tmphrlmmend=$p($g(tmparrpau(tmphrlmm)),"~",2)
 ......d initNewDenOdp(tmphrlmmend,.arrWatch,tmphrlmm)
 ......//aktualni pauza
 ......i tmphrlmm=hrlmmbeg s isDenOdp=1 s isZkrDenOdp=1
 ......i 'isDenOdp d
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),7)=1
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),9)=1
 ...//=========================
 ...//kontrola v modu nad 50 km
 ...//=========================
 ...i m50=1 s isdzodp=0 d  q:isdzodp 
 ....// deleny odpocinek - 2 pauzy, min. 3 hod a min 9 hodin v tomto poradi
 ....s is3hpau=0 s is9hpau=0
 ....s tmphrlmm="" f  s tmphrlmm=$o(tmparrpau(tmphrlmm),-1) q:(tmphrlmm="")!(isdzodp)  d
 .....i $g(tmparrpau(tmphrlmm))'<(9*60) s is9hpau=tmphrlmm q
 .....i 'is9hpau q
 .....i $g(tmparrpau(tmphrlmm))'<(3*60) d
 ......s is3hpau=tmphrlmm
 ......s isdzodp=1
 ......s tmphrlmmend=$p($g(tmparrpau(is9hpau)),"~",2)
 ......d initNewDenOdp(tmphrlmmend,.arrWatch,is9hpau)
 ......i is9hpau=hrlmmbeg s isDenOdp=1
 ......s $li(^||wrk.ALVA.AD(wrk,2.01,is3hpau),7)=1
 ......i 'isDenOdp d
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,is9hpau),7)=1
 ....//nasel jsem deleny odpocinek
 ....i isdzodp q
 ....//zkraceny odpocinek 9-11 hodin, maximalne 3x v tydnu
 ....i $g(arrWatch(2,3))<3 d
 .....s tmphrlmm=$$findIntByLen(.tmparrpau,(9*60),-1)
 .....//nasel jsem pauzu pro zkraceny odpocinek
 .....i tmphrlmm d
 ......s isdzodp=1
 ......//poznaceni zkraceneho denniho odpocinku 
 ......s arrWatch(2,3)=$g(arrWatch(2,3))+1
 ......//konec cinnosti
 ......s tmphrlmmend=$p($g(tmparrpau(tmphrlmm)),"~",2)
 ......d initNewDenOdp(tmphrlmmend,.arrWatch,tmphrlmm)
 ......//aktualni pauza
 ......i tmphrlmm=hrlmmbeg s isDenOdp=1 s isZkrDenOdp=1
 ......i 'isDenOdp d
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),7)=1
 .......s $li(^||wrk.ALVA.AD(wrk,2.01,tmphrlmm),9)=1
 ...// neni-li splneno chyba
 ...s out("stt")=0
 ...s mymsg=""
 ...i myidcin>0 s mymsg="není splněna denni doba odpocinku"
 ...i myidcin=0 s mymsg="není splněna denni doba odpocinku ( v(e) "_$$nd^OBapiED(hrlmm\10000,0)_"/"_$tr($j($$mh^OBapiED(hrlmm#10000),0,2),".",":")_" je "_$tr($j($$mh^OBapiED(hrlmmlen),0,2),".",":")_")"
 ...d addMsg(hrlmm,m50,1,mymsg,"",.out)
 ...d initNewDenOdp(arrWatch(2,1),.arrWatch,"")
 ...s isDenOdp=0
 .//==============================================
 .//zapis posledni cinnosti do prubehoveho globalu
 .//==============================================
 .i hrlmmlen d
 ..s mmriz=($lg($g(^||wrk.ALVA.AD(wrk,2,hrlmmend)),4)-$lg($g(^||wrk.ALVA.AD(wrk,2,hrlmmbeg)),4))
 ..s ^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg)=$lb(hrlmmend,hrlmmlen,hrlmmmyidcin,hrlmmidsme,m50,"","","","",mmriz) 
 ..//doplnena indikace odpocinku
 ..i hrlmmmyidcin=0 d
 ...//============================================
 ...//kontrola tydenniho odpocinku v modu do 50 km
 ...//============================================
 ...i m50=0 d
 ....//v prubehu pauzy doslo k prekroceni limitu pro tydenni odpocinek a pauza ho splnuje (isTydOdp=1)
 ....//nebo nedoslo k prekroceni limitu a pauza splnuje parametry tydenniho odpocinku ... ok
 ....i (isTydOdp)!(hrlmmlen'<(24*60)) d  q
 .....s isTydOdp=1 s isDenOdp=1
 ...//=============================================
 ...//kontrola tydenniho odpocinku v modu nad 50 km
 ...//=============================================
 ...i m50=1 d
 ....//v prubehu pauzy doslo k prekroceni limitu pro tydenni odpocinek a pauza ho splnuje (isTydOdp=1)
 ....//nebo nedoslo k prekroceni limitu a pauza splnuje parametry tydenniho odpocinku ... ok
 ....i (isTydOdp)!(hrlmmlen'<(45*60)) d  q
 .....s isTydOdp=1 s isDenOdp=1
 ...i 'isTydOdp d
 ....//==========================================
 ....//kontrola denniho odpocinku v modu do 50 km
 ....//==========================================
 ....i m50=0 d
 .....i (isDenOdp)!(hrlmmlen'<(11*60)) d
 ......s isDenOdp=1
 ....//===========================================
 ....//kontrola denniho odpocinku v modu nad 50 km
 ....//===========================================
 ....i m50=1 d
 .....i (isDenOdp)!(hrlmmlen'<(11*60)) d
 ......s isDenOdp=1
 ...//zapis do prubehoveho globalu
 ...s $li(^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg),6)=isTydOdp
 ...s $li(^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg),7)=isDenOdp
 .//
 .i ((errquit)&('$g(out("stt")))) q
 .//
 .//====================================
 .//kontrola na sumu tydennich odpocinku
 .//====================================    
 .s mmlen=0
 .s hrlmmbeg="" f  s val="" s hrlmmbeg=$o(^||wrk.ALVA.AD(wrk,2.01,hrlmmbeg),1,val) q:hrlmmbeg=""   d
 ..i $lg(val,6) d
 ...s mmlen=mmlen+$lg(val,2)
 .//================================================
 .//do 50 km - suma tydennich odpocinku je 105 hodin
 .//================================================
 .i m50=0 i mmlen<(105*24) d
 ..s out("stt")=0
 ..d addMsg(((myhrl*10000)+1439),m50,1,"3 týdenní doba odpocinku < 105 hodin ( "_$tr($j($$mh^OBapiED(mmlen),0,2),".",":")_" )","",.out)
 .//==============================================================================================================
 .//nad 50 km - le-li zkraceny odpocinek a je-li zkraceny odpocinek prvni tyden pak suma musi byt 135 hodin (3x45)
 .//==============================================================================================================
 .i m50=1 i $g(arrWatch(3,3)) d
 ..i ($g(arrWatch(3,3))\10000)'>(myhrl-14) d
 ...i mmlen<(135*60) d
 ....s out("stt")=0
 ....d addMsg(((myhrl*10000)+1439),m50,1,"3 týdenní doba odpocinku < 135 hodin ( "_$tr($j($$mh^OBapiED(mmlen),0,2),".",":")_" )","",.out)
 .//
 .i ((errquit)&('$g(out("stt")))) q
 .//
 .//
 .//==============================================
 .//kontrola doby rizeni denni, tydenni a 14 denni
 .//==============================================
 .//
 .// denni doba rizeni
 .s cnt10mmriz=0
 .s hrlmm="" f  s hrlmm=$o(arrWatch(1,1,hrlmm)) q:hrlmm=""  d
 ..s nxthrlmm=$o(arrWatch(1,1,hrlmm)) i nxthrlmm="" q
 ..s mmriz=($g(arrWatch(1,1,nxthrlmm))-$g(arrWatch(1,1,hrlmm)))-1
 ..i m50=0 d
 ...//do 50 km kontrola na dobu rizeni 10h
 ...i mmriz'>(10*60) q
 ...s out("stt")=0
 ...d addMsg(nxthrlmm,m50,1,"překročena denní doba řízení "_$j($$mh^OBapiED(mmriz),0,2),"",.out)
 ..i m50=1 d
 ...//nad 50 km kontrola na dobu rizeni 9h, 2x tydne muze byt 10 h
 ...i mmriz'>(9*60) q
 ...i (mmriz'>(10*60))&(cnt10mmriz<2) s cnt10mmriz=cnt10mmriz+1 q 
 ...s out("stt")=0
 ...d addMsg(nxthrlmm,m50,1,"překročena denní doba řízení "_$j($$mh^OBapiED(mmriz),0,2),"",.out)
 ..//vynulovani pocitadla pri tydennim odpocinku
 ..i $lg($g(^||wrk.ALVA.AD(wrk,2.01,nxthrlmm)),6) s cnt10mmriz=1
 ..//=========================================== 
 .s hrl7="" f  s hrl7=$o(arrWatch(1,2,hrl7)) q:hrl7=""  d
 ..//tydenni doba rizeni 
 ..s mm=$g(arrWatch(1,2,hrl7))
 ..i m50=1 d
 ...i mm>(56*60) d
 ....s out("stt")=0
 ....d addMsg(((hrl7*10000)+1439),m50,4,"překročena týdenní doba řízení "_$j($$mh^OBapiED(mm),0,2),"",.out)
 ..//14 denni doba rizeni
 ..s mm=mm+$g(arrWatch(1,2,(hrl7+7)))
 ..i m50=0 d
 ...i mm>(100*60) d
 ....s out("stt")=0
 ....d addMsg((((hrl7+7)*10000)+1439),m50,4,"překročena 14 denní doba řízení "_$j($$mh^OBapiED(mm),0,2),"",.out)
 ..i m50=1 d
 ...i mm>(90*60) d
 ....s out("stt")=0
 ....d addMsg((((hrl7+7)*10000)+1439),m50,4,"překročena 14 denní doba řízení "_$j($$mh^OBapiED(mm),0,2),"",.out)
 q 0
gHrlmmLen(hrlmmbeg,hrlmmend)
 n (hrlmmbeg,hrlmmend)
 //jeden den
 i (hrlmmbeg\10000)=(hrlmmend\10000) q (hrlmmend-hrlmmbeg+1)
 //vice dni
 s lenmm=0
 f hrl=(hrlmmbeg\10000):1:(hrlmmend\10000) d
 .i (hrl=(hrlmmbeg\10000)) s lenmm=(lenmm+1440-(hrlmmbeg#10000)+1) q
 .i (hrl=(hrlmmend\10000)) s lenmm=(lenmm+(hrlmmend#10000)) q
 .s lenmm=lenmm+1440
 q lenmm
initNewDenOdp(hrlmm,arrWatch,hrlmmbeg)
 n (hrlmm,arrWatch,hrlmmbeg)
 s arrWatch(2,1)=$$addDayHrlmm(hrlmm,1)	//nastaveni nove doby pro kontrolu denniho odpocinku
 k arrWatch(2,2)						//zrusenych nachytanych pauz pro denni odpocinek
 //nastaveni doby rizeni ke konci odpocinku
 i hrlmmbeg'="" s arrWatch(1,1,hrlmmbeg)=$lg($g(^||wrk.ALVA.AD($g(arrWatch(0)),2,hrlmmbeg)),4)
 q
initNewTydOdp(hrlmm,arrWatch,hrlmmbeg)
 n (hrlmm,arrWatch,hrlmmbeg)
 s arrWatch(2,1)=$$addDayHrlmm(hrlmm,1)	//nastaveni nove doby pro kontrolu denniho odpocinku
 s arrWatch(3,1)=$$addDayHrlmm(hrlmm,7)	//nastaveni nove doby pro kontrolu tydenniho odpocinku
 k arrWatch(2,2)						//zrusenych nachytanych pauz pro denni odpocinek
 k arrWatch(2,3)						//vynulovani poctu zkracenych dennich odpocinku (3x v tydnu)
 k arrWatch(3,2)						//zrusenych nachytanych pauz pro tydenni odpocinek
 //nastaveni doby rizeni ke konci odpocinku
 i hrlmmbeg'="" s arrWatch(1,1,hrlmmbeg)=$lg($g(^||wrk.ALVA.AD($g(arrWatch(0)),2,hrlmmbeg)),4)
 q
sortIntByLen(arr)
 n (arr)
 //setrizeni arr(zacatek)=delka~konec na arr(pozice)=$lb(delka,zacatek,konec)
 k tmparr
 s beg="" f  s beg=$o(arr(beg)) q:beg=""  s val=$g(arr(beg)) s tmparr((+val),beg)=$p(val,"~",2) 
 k arr
 s val="" f  s val=$o(tmparr(val),-1) q:val=""  d
 .s beg="" f  s beg=$o(tmparr(val,beg)) q:beg=""  d
 ..s end=$g(tmparr(val,beg))
 ..s arr($i(arr))=$lb(val,beg,end)
 q
 //
findIntByLen(arr,len,par)
 n (arr,len,par)
 // vyhleda prvni(par=1) / posledni(par=-1) interval, jehoz delka je rovna nebo vetsi nez len
 // arr(hrlmm)=len
 i '$g(par) s par=1
 s fndhrlmm=""
 s hrlmm="" f  s hrlmm=$o(arr(hrlmm),par) q:(hrlmm="")!(fndhrlmm)  d
 .i $g(arr(hrlmm))'<len s fndhrlmm=hrlmm
 q fndhrlmm
addMsg(hrlmm,t50,iderr,txt,i,arr)
 //iderr=	1 denni odpocinek
 //			2 tydenni odpocinek
 //			3 denni doba rizeni
 //			4 tydenni doba rizeni
 f  q:'$d(arr("msg",hrlmm))  s hrlmm=hrlmm+.01   
 s arr("msg",hrlmm)=$lb(m50,$g(txt),$g(iderr))
 q
delMsg(hrlmmfrom,hrlmmto,i,arr)
 //vymazani chybovych hlaseni
 n (hrlmmfrom,hrlmmto,i,arr)
 s hrlmm="" i hrlmmfrom s hrlmmfrom=hrlmmfrom-.01
 f  s hrlmm=$o(arr("msg",hrlmm)) q:(hrlmm="")!(hrlmmto&(hrlmm>hrlmmto))  d
 .k arr("msg",hrlmm)
 q
 //
addDayHrlmm(hrlmm,day)
 q (((hrlmm\10000)+day)*10000)+(hrlmm#10000)
 //
gIntrvCin(wrk,hrlmmbeg,hrlmmend,hrlmmlen)
 n (wrk,hrlmmbeg,hrlmmend,hrlmmlen)
 s val=$g(^||wrk.ALVA.AD(wrk,2,hrlmmbeg))
 s idcin=$lg(val,1)
 s hrlmmend=hrlmmbeg s hrlmmlen=1
 s hrlmm=hrlmmbeg
 f  s val="" s hrlmm=$o(^||wrk.ALVA.AD(wrk,2,hrlmm),1,val) q:(hrlmm="")!($lg(val,1)'=idcin)  d
 .s hrlmmend=hrlmm
 .s hrlmmlen=hrlmmlen+1 
 q
 //
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
 //
]]></Routine>


<Routine name="OBapiEDCal" type="INT" languagemode="0" timestamp="64946,33683.225254"><![CDATA[
OBapiEDCal q
 ;;// ====================================
 ;;// kalendar, rozpis turnusu, ...
 ;;// ====================================
lrrrrDCal(idfa,nmsp,in,out)
 ;;// s err=$$lrrrrDCal(idfa,nmsp,.in,.out)
 ;;// out
 ;;// ===
 ;;// out("arr",rrrr)="" ... definovane kalendare
 n (idfa,nmsp,in,out)
 s $zt="err2" k out s err=""
 s rrrr="" f  s rrrr=$o(^[nmsp]OI("CAL",rrrr)) q:rrrr=""  s out("arr",rrrr)=""
 q 0
 //
gDCal(idfa,nmsp,rrrr,in,out)
 ;;// s err=$$gDCal(idfa,nmsp,rrrr,in,out) ... definice dopravniho kalendare
 ;;// out
 ;;// ===
 ;;// ===============
 ;;// hlavni kalendar
 ;;// ===============
 ;;// kalendar - definice
 ;;// out("dta",1)=parametr pro svatky 0 - CZ / 1 –SK (jake svatky uvazovat)
 ;;// prazdniny - definice
 ;;// out("arr",1,cnt,"dta",1)=hrl skolni prazdniny od
 ;;// out("arr",1,cnt,"dta",2)=hrl skolni prazdniny do
 ;;// out("arr",1,cnt,"dta",3)=0/1 1 hlavni skolni prazdniny  
 ;;// jarni prazdniny - definice (pro hlavni i vedlejsi)
 ;;// out("arr",2,blo,"dta",1)=hrl jarni.skolni prazdniny od (hrl) pro blo
 ;;// out("arr",2,blo,"dta",2)=hrl jarni.skolni prazdniny od (hrl) pro blo
 ;;// presun dne - definice
 ;;// out("arr",3,hrl,"dta",1)=presun z
 ;;// out("arr",3,hrl,"dta",2)=presun na
 ;;// =================
 ;;// vedlejsi kalendar
 ;;// =================
 ;;// kalendar - definice
 ;;// out("dta",101)=parametr pro svatky 0 - CZ / 1 –SK (jake svatky uvazovat)
 ;;// prazdniny - definice
 ;;// out("arr",101,cnt,"dta",1)=hrl skolni prazdniny od
 ;;// out("arr",101,cnt,"dta",2)=hrl skolni prazdniny do
 ;;// out("arr",101,cnt,"dta",3)=0/1 1 hlavni skolni prazdniny  
 ;;// jarni prazdniny - definice
 ;;// out("arr",102,blo,"dta",1)=hrl jarni.skolni prazdniny od (hrl) pro blo
 ;;// out("arr",102,blo,"dta",2)=hrl jarni.skolni prazdniny od (hrl) pro blo
 ;;// presun dne - definice
 ;;// out("arr",103,hrl,"dta",1)=presun z
 ;;// out("arr",103,hrl,"dta",2)=presun na
 ;;//
 ;;// kalendar hlavni (retezec pro všechny dny roku)
 ;;// ==============================================
 ;;// out("arr",4,1,"dta",1)=definice dnu 1234567 (1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 ;;// out("arr",4,1,"dta",2)=definice dnu 12345678 (1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N)
 ;;// out("arr",4,1,"dta",3)=definice dnu svatky 0 ne / 1 ano
 ;;// out("arr",4,1,"dta",4)=sudy a lichy tyden 0 lichy / 1 sudy
 ;;// out("arr",4,1,"dta",5)=hl.skolni prazdniny 0 ne / 1 ano
 ;;// out("arr",4,1,"dta",6)=skolni prazdniny mimo jarnich 0 ne / 1 ano
 ;;// out("arr",4,1,"dta",7)=mesice, cislo je poradove cislo mesice
 ;;// out("arr",4,2,"arr",blo)=skolni prazdniny vcetne jarnich 0 ne / 1 ano
 ;;//
 ;;// kalendar vedlejsi (retezec pro všechny dny roku)
 ;;// ================================================
 ;;// out("arr",104,1,"dta",1)=definice dnu 1234567 (1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 ;;// out("arr",104,1,"dta",2)=definice dnu 12345678 (1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N)
 ;;// out("arr",104,1,"dta",3)=definice dnu svatky 0 ne / 1 ano
 ;;// out("arr",104,1,"dta",4)=sudy a lichy tyden 0 lichy / 1 sudy
 ;;// out("arr",104,1,"dta",5)=hl.skolni prazdniny 0 ne / 1 ano
 ;;// out("arr",104,1,"dta",6)=skolni prazdniny mimo jarnich 0 ne / 1 ano
 ;;// out("arr",104,1,"dta",7)=mesice, cislo je poradove cislo mesice
 ;;// out("arr",104,2,"arr",blo)=skolni prazdniny vcetne jarnich 0 ne / 1 ano
 ;;//
 n (idfa,nmsp,rrrr,in,out)
 s $zt="err2" k out s err=""
 ;; kontrola
 i $g(rrrr)="" s err="rrrr=" zt "merr"
 ;;definice kalendare
 f ical="CAL","CAL_V" d
 .s ishift=0 s:ical="CAL_V" ishift=100
 .;;zakladni udaje 
 .s val=$g(^[nmsp]OI(ical,rrrr,"#"))
 .f cnt=1:1:1 s out("dta",(cnt+ishift))=$p(val,"~",cnt)
 .;; skolni prazdniny - definice
 .s val=$g(^[nmsp]OI(ical,rrrr)) s cnt=1
 .f cnt=1:1:$l(val,"#") d
 ..s dpr=$p(val,"#",cnt) q:dpr=""
 ..s out("arr",(1+ishift),cnt,"dta",1)="" s dat=$p(dpr,":",1) i +dat s $p(dat,".",3)=rrrr s out("arr",(1+ishift),cnt,"dta",1)=$$dn^OBapiED(dat)
 ..s out("arr",(1+ishift),cnt,"dta",2)="" s dat=$p(dpr,":",2) i +dat s $p(dat,".",3)=rrrr s out("arr",(1+ishift),cnt,"dta",2)=$$dn^OBapiED(dat)
 ..s out("arr",(1+ishift),cnt,"dta",3)=(cnt=1)
 .;; jarni prazdniny - definice
 .s blo="" f  s blo=$o(^[nmsp]OI(ical,rrrr,blo)) q:blo=""  d
 ..q:blo'?.a  q:blo="~"  q:blo="#"
 ..s val=$g(^[nmsp]OI(ical,rrrr,blo))
 ..s out("arr",(2+ishift),blo,"dta",1)=""  s dat=$p($p(val,"#",1),":",1) i +dat s $p(dat,".",3)=rrrr s out("arr",(2+ishift),blo,"dta",1)=$$dn^OBapiED(dat)
 ..s out("arr",(2+ishift),blo,"dta",2)=""  s dat=$p($p(val,"#",1),":",2) i +dat s $p(dat,".",3)=rrrr s out("arr",(2+ishift),blo,"dta",2)=$$dn^OBapiED(dat)
 .;; presuny - definice
 .s dat="" f  s dat=$o(^[nmsp]OI(ical,rrrr,"~",dat)) q:dat=""  d
 ..s val=$g(^[nmsp]OI(ical,rrrr,"~",dat))
 ..s hrl=dat s $p(hrl,".",3)=rrrr s hrl=$$dn^OBapiED(hrl)
 ..s out("arr",(3+ishift),hrl,"dta",1)=$e(val,1)
 ..s out("arr",(3+ishift),hrl,"dta",2)=$e(val,2)
 .;; kalendar
 .f cnt=1:1:7 s out("arr",(4+ishift),1,"dta",cnt)=$g(^[nmsp]OI(ical,rrrr,cnt))
 .s blo="" f  s blo=$o(^[nmsp]OI(ical,rrrr,blo)) q:blo=""  d
 ..q:blo'?.a  q:blo="~"  q:blo="#"
 ..s out("arr",(4+ishift),2,"arr",blo)=$g(^[nmsp]OI(ical,rrrr,blo,8))
 q 0
 //
sDCal(idfa,nmsp,rrrr,in,out)
 ;;// s err=$$sDCal(idfa,nmsp,rrrr,in,out) ... zapis dopravniho kalendare
 ;;// in
 ;;// ==
 ;;// stejna struktura jako out v gDCal mimo in("arr",4,... a in("arr",104,... toto se aktualizuje podle dat
 ;;//
 n (idfa,nmsp,rrrr,in,out)
 s $zt="err2" k out s err=""
 ;; kontrola
 i $g(rrrr)="" s err="rrrr=" zt "merr"
 ;; jarni prazdniny pro vedlejsi kalendar podle hlavniho
 k in("arr",102) m in("arr",102)=in("arr",2)
 ;; vytvoreni kalendare z definice
 s err=$$mkDCal^OBapiED(idfa,nmsp,rrrr,.in) zt:+err "merr" s err=""
 ;; ==============================
 ;; zapis definice do databaze
 f ical="CAL","CAL_V" d
 .s ishift=0 s:ical="CAL_V" ishift=100 
 .k ^[nmsp]OI(ical,rrrr) s val=""
 .;; parametry kalendare
 .s val="" f cnt=1:1:1 s $p(val,"~",cnt)=$g(in("dta",(cnt+ishift)))
 .s ^[nmsp]OI(ical,rrrr,"#")=val
 .;; hlavni skolni prazdniny
 .s val="" s inc=1
 .s cnt="" f  s cnt=$o(in("arr",(1+ishift),cnt)) q:cnt=""  d
 ..q:$g(in("arr",(1+ishift),cnt,"dta",3))'=1
 ..q:'$g(in("arr",(1+ishift),cnt,"dta",1))
 ..s $p(val,"#",inc)=$p($$nd^OBapiED($g(in("arr",(1+ishift),cnt,"dta",1)),0),".",1,2)_":"_$p($$nd^OBapiED($g(in("arr",(1+ishift),cnt,"dta",2)),0),".",1,2)
 .;; skolni prazdniny
 .s cnt="" f  s cnt=$o(in("arr",(1+ishift),cnt)) q:cnt=""  d
 ..q:$g(in("arr",(1+ishift),cnt,"dta",3))=1
 ..q:'$g(in("arr",(1+ishift),cnt,"dta",1))
 ..s $p(val,"#",$i(inc))=$p($$nd^OBapiED($g(in("arr",(1+ishift),cnt,"dta",1)),0),".",1,2)_":"_$p($$nd^OBapiED($g(in("arr",(1+ishift),cnt,"dta",2)),0),".",1,2)
 .s ^[nmsp]OI(ical,rrrr)=val
 .;; jarni prazdniny
 .s blo="" f  s blo=$o(in("arr",(2+ishift),blo)) q:blo=""  d
 ..q:'$g(in("arr",(2+ishift),blo,"dta",1))
 ..s $p(^[nmsp]OI(ical,rrrr,blo),"#",1)=$p($$nd^OBapiED($g(in("arr",(2+ishift),blo,"dta",1)),0),".",1,2)_":"_$p($$nd^OBapiED($g(in("arr",(2+ishift),blo,"dta",2)),0),".",1,2)
 .;; presuny
 .s hrl="" f  s hrl=$o(in("arr",(3+ishift),hrl)) q:hrl=""  d
 ..s ^[nmsp]OI(ical,rrrr,"~",$p($$nd^OBapiED(hrl,0),".",1,2))=$e($g(in("arr",(3+ishift),hrl,"dta",1)),1)_$e($g(in("arr",(3+ishift),hrl,"dta",2)),1)
 .;; kalendar
 .f cnt=1:1:7 s ^[nmsp]OI(ical,rrrr,cnt)=$g(in("arr",(4+ishift),1,"dta",cnt))
 .s blo="" f  s blo=$o(in("arr",(4+ishift),2,"arr",blo)) q:blo=""  d
 ..s ^[nmsp]OI(ical,rrrr,blo,8)=$g(in("arr",(4+ishift),2,"arr",blo))
 q 0
 //
dDCal(idfa,nmsp,rrrr,in,out)
 ;;//s err=$$dDCal(idfa,nmsp,rrrr,in,out) ... zruseni dopravniho kalendare
 n (idfa,nmsp,rrrr,in,out)
 s $zt="err2" k out s err=""
 ;; kontrola
 i $g(rrrr)="" s err="rrrr=" zt "merr"
 ;; zruseni dopravniho kalendare
 k ^[nmsp]OI("CAL",rrrr)
 k ^[nmsp]OI("CAL_V",rrrr)
 q 0
 //
mkDCal(idfa,nmsp,rrrr,arr)
 ;;//s err=$$mkDCal(idfa,nmsp,rrrr,arr) ... vytvoreni struktury dopravniho kandare
 ;;//
 ;;// v arr je na vstupu definice kalendare - popsano v gDCal, program do prom. arr doplni kalendar
 ;;// doplni:
 ;;// =======
 ;;// arr("arr",4,1,"dta",1)=definice dnu 1234567 (1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 ;;// arr("arr",4,1,"dta",2)=definice dnu 12345678 (1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N)
 ;;// arr("arr",4,1,"dta",3)=definice dnu svatky 0 ne / 1 ano
 ;;// arr("arr",4,1,"dta",4)=sudy a lichy tyden 0 lichy / 1 sudy
 ;;// arr("arr",4,1,"dta",5)=hl.skolni prazdniny 0 ne / 1 ano
 ;;// arr("arr",4,1,"dta",6)=skolni prazdniny mimo jarnich 0 ne / 1 ano
 ;;// arr("arr",4,1,"dta",7)=mesice, cislo je poradove cislo mesice
 ;;// arr("arr",4,2,"arr",blo)=skolni prazdniny vcetne jarnich 0 ne / 1 ano
 ;;//
 ;;// arr("arr",104,1,"dta",1)=definice dnu 1234567 (1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 ;;// arr("arr",104,1,"dta",2)=definice dnu 12345678 (1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N)
 ;;// arr("arr",104,1,"dta",3)=definice dnu svatky 0 ne / 1 ano
 ;;// arr("arr",104,1,"dta",4)=sudy a lichy tyden 0 lichy / 1 sudy
 ;;// arr("arr",104,1,"dta",5)=hl.skolni prazdniny 0 ne / 1 ano
 ;;// arr("arr",104,1,"dta",6)=skolni prazdniny mimo jarnich 0 ne / 1 ano
 ;;// arr("arr",104,1,"dta",7)=mesice, cislo je poradove cislo mesice
 ;;// arr("arr",104,2,"arr",blo)=skolni prazdniny vcetne jarnich 0 ne / 1 ano
 ;;//
 n (idfa,nmsp,rrrr,arr)
 s $zt="err2" s err=""
 ;; kontrola
 i $g(rrrr)="" s err="rrrr=" zt "merr"
 ;; ========
 s zr=$$dn^OBapiED("1.1."_rrrr) s dnu=365 s:'(rrrr#4) dnu=366
 k mm
 f cnt=1:1:12 s mm(cnt)=$p("31:28:31:30:31:30:31:31:30:31:30:31",":",cnt)
 s:dnu=366 mm(2)=29
 ;; vytvoreni kalendare
 f ishift=0,100 d
 .;; ===========
 .;; dny v tydnu
 .;; ===========
 .s p="" f cnt=zr:1:(zr+dnu-1) s p=p_(cnt+3#7+1)
 .s arr("arr",(4+ishift),1,"dta",1)=p
 .s arr("arr",(4+ishift),1,"dta",2)=p
 .;; ===================================================================================
 .;; lichy a sudy tyden, kdyz prvni tyden neobsahuje ctvrtek(4), zacina rok sudym tydnem
 .;; ===================================================================================
 .s k=2 s fl=0 f cnt=1:1:7 s x=$e(p,cnt) d  q:fl
 ..i x=7 s fl=1 q
 ..s:x=4 k=1
 .s s="" s k=k-1 f cnt=1:1:dnu s x=$e(p,cnt) d
 ..i 'k s s=s_0 s:x=7 k=1 q
 ..s s=s_1 s:x=7 k=0
 .s arr("arr",(4+ishift),1,"dta",4)=s
 .;; =====================
 .;; svatky&dny prac.klidu
 .;; =====================
 .;; cz svatky
 .i '$g(arr("dta",(1+ishift))) s dtsv="01.01:01.05:08.05:05.07:06.07:28.09:28.10:17.11:24.12:25.12:26.12"
 .;; sk svatky
 .i +$g(arr("dta",(1+ishift))) s dtsv="01.01:06.01:01.05:08.05:05.07:29.08:01.09:15.09:01.11:17.11:24.12:25.12:26.12"
 .;; sk - pro rok 2018 maji jednorazovy svatek 30.10.
 .i (+$g(arr("dta",(1+ishift))))&(rrrr=2018) s dtsv=dtsv_":30.10"
 .s p=$tr($j("",dnu)," ",0)
 .f cnt=1:1 s x=$p(dtsv,":",cnt) q:x=""  d
 ..s pos=$$dn^OBapiED(x_"."_rrrr)-zr+1 s $e(p,pos)=1
 ..s $e(arr("arr",(4+ishift),1,"dta",2),pos)=7
 .; velikonocni pondeli
 .s x=$$gVeliPo(.err,rrrr) zt:$g(err)'="" "merr" s err="" 
 .s pos=$$dn^OBapiED(x_"."_rrrr)-zr+1 s $e(p,pos)=1
 .s $e(arr("arr",(4+ishift),1,"dta",2),pos)=7
 .; velky patek od roku 2016 nebo sk
 .i (rrrr>2015)!(+$g(arr("dta",(1+ishift)))) d
 ..s pos=($$dn^OBapiED(x_"."_rrrr)-3-zr+1) s $e(p,pos)=1
 ..s $e(arr("arr",(4+ishift),1,"dta",2),pos)=7
 .; ========================
 .s arr("arr",(4+ishift),1,"dta",3)=p
 .;; ==========================
 .;; presuny dnu - rucne zadano
 .;; ==========================
 .i $o(arr("arr",(3+ishift),""))'="" d
 ..s p=$g(arr("arr",(4+ishift),1,"dta",2))
 ..s hrl="" f  s hrl=$o(arr("arr",(3+ishift),hrl)) q:hrl=""  d
 ...s:$tr($g(arr("arr",(3+ishift),hrl,"dta",2)),"PUTAVSMN","12345678")'="" $e(p,hrl-zr+1)=$tr($g(arr("arr",(3+ishift),hrl,"dta",2)),"PUTAVSMN","12345678")
 ..s arr("arr",(4+ishift),1,"dta",2)=p
 .;; ====================================
 .;; ne(X) presuny (1,..8, kde 8 je Ne(X)
 .;; ====================================
 .s p=arr("arr",(4+ishift),1,"dta",2)_7
 .f cnt=1:1:dnu d
 ..s x=$e(p,cnt)
 ..s y=$e(p,cnt+1)
 ..s:x>6&(y<6) $e(p,cnt)=8
 .s arr("arr",(4+ishift),1,"dta",2)=$e(p,1,dnu)
 .;; ==========================
 .;; mesice (10->0,11->1,12->2)
 .;; ==========================
 .s p="" f cnt=1:1:12 s p=p_$tr($j("",mm(cnt))," ",cnt#10)
 .s arr("arr",(4+ishift),1,"dta",7)=p
 .;; =========
 .;; prazdniny
 .;; =========
 .s c="" s P=""
 .;; hlavni skolni prazdniny
 .s val=""
 .s cnt="" f  s cnt=$o(arr("arr",(1+ishift),cnt)) q:cnt=""  d
 ..q:$g(arr("arr",(1+ishift),cnt,"dta",3))'=1
 ..q:'$g(arr("arr",(1+ishift),cnt,"dta",1))
 ..s fdd=$g(arr("arr",(1+ishift),cnt,"dta",1))-zr+1
 ..s tdd=$g(arr("arr",(1+ishift),cnt,"dta",2))-zr+1
 ..s P=$tr($j("",fdd-1)," ",0)_$tr($j("",tdd-fdd+1)," ",1)
 .s arr("arr",(4+ishift),1,"dta",5)=P
 .s P=P_$tr($j("",dnu-$l(P))," ",0)
 .;; ostatni prazdniny
 .s cnt="" f  s cnt=$o(arr("arr",(1+ishift),cnt)) q:cnt=""  d
 ..q:$g(arr("arr",(1+ishift),cnt,"dta",3))=1
 ..q:'$g(arr("arr",(1+ishift),cnt,"dta",1))
 ..s fdd=$g(arr("arr",(1+ishift),cnt,"dta",1))-zr+1
 ..s tdd=$g(arr("arr",(1+ishift),cnt,"dta",2))-zr+1
 ..s $e(P,fdd,tdd)=$tr($j("",tdd-fdd+1)," ",1)
 .;; do prazdnin doplnim svatky
 .f cnt=1:1 q:$e($g(arr("arr",(4+ishift),1,"dta",3)),cnt)=""  d
 ..s:+$e($g(arr("arr",(4+ishift),1,"dta",3)),cnt) $e(P,cnt)=1
 .s arr("arr",(4+ishift),1,"dta",6)=P
 .;; jarni prazdniny
 .s blo="" f  s blo=$o(arr("arr",(2+ishift),blo)) q:blo=""  d
 ..s c="" i +$g(arr("arr",(2+ishift),blo,"dta",1)) d
 ...s fdd=$g(arr("arr",(2+ishift),blo,"dta",1))-zr+1
 ...s tdd=$g(arr("arr",(2+ishift),blo,"dta",2))-zr+1
 ...s c=$tr($j("",fdd-1)," ",0)_$tr($j("",tdd-fdd+1)," ",1)
 ..f cnt=1:1:dnu s:$e(P,cnt) $e(c,cnt)=1
 ..s c=$tr(c," ",0)
 ..s arr("arr",(4+ishift),2,"arr",blo)=c
 q 0
 //
gVeliPo(err,rr)
 ;;// s val=$$gVeliPo(.err,rr)
 ;;// vraci datum velikonocniho pondeli (dd.mm)
 s $zt="err1"
 n (err,rr) s err=""
 S M=23,N=3 S:rr>1799 N=4 S:rr>1899 N=N+1,M=24 S:rr>2099 N=N+1
 S A=rr#19,B=rr#4,C=rr#7,D=A*19+M#30,E=B*2+(C*4)+(D*6)+N#7,den=D+E+22
 i den'>31 s a=den+1,a=$e("00",1,2-$l(a))_a_".03" s:den=31 a="01.04" q a
 S den=den-31 s:den=26 den=den-7 s:den=25&(D=28)&(A>10) den=den-1
 s a=den+1
 q $e("00",1,2-$l(a))_a_".04"
 //
prtCal(idfa,nmsp,rrrr,blo,arr)
 n (idfa,nmsp,rrrr,blo,arr)
 k arro
 s err=$$gDCal^OBapiED(idfa,nmsp,rrrr,"",.arro)
 s zr=$$dn^OBapiED("1.1."_rrrr) s dnu=365 s:'(rrrr#4) dnu=366
 k p f cnt=1:1:6 s p(cnt)=$g(arro("arr",4,1,"dta",cnt))
 s p(8)=$g(arro("arr",4,2,"arr",blo)) s bg=0 s en=dnu-1
 f cnt=bg:1:en s x=$$nd^OBapiED(cnt+zr,0) d
 .s val="" s poz=cnt+1
 .s $p(val,"~",1)=x
 .s $p(val,"~",2)=$p("Po~Út~St~Čt~Pá~So~Ne","~",$e(p(1),poz))
 .s l=$e(p(2),poz) s $p(val,"~",3)=$e("PUTAVSMN",l)_"/"_l
 .s $p(val,"~",4)=$p("~Sva","~",$e(p(3),poz)+1)
 .s $p(val,"~",5)=$p("Li~Su","~",$e(p(4),poz)+1)
 .s $p(val,"~",6)=$p("-P~+P","~",$e(p(5),poz)+1)
 .s $p(val,"~",7)=$p("-w~w","~",$e(p(6),poz)+1)
 .s $p(val,"~",8)=$p("+c~-c","~",$e(p(8),poz)+1)
 .s arr(poz)=val
 q
 //
gDCalDay(idfa,nmsp,hrl,in,out)
 // vraci kalendar pro den - hrl
 //
 // in("par",1)=typ kalendare 0 hlavni / 1 vedlejsi
 //
 // out("dta",1)=den v tydnu 1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 // out("dta",2)=svatek 0 ne / 1 ano
 // out("dta",3)=sudy a lichy tyden 0 lichy / 1 sudy
 // out("dta",4)=den v tydnu 1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N
 //
 n (idfa,nmsp,hrl,in,out) s $zt="err2" k out
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(hrl)="" q "1~hrl="
 // kalendar - prom. pro posun
 s ishift=$g(in("par",1))*100
 // ==========================
 s rrrr=$p($$nd^OBapiED(hrl,0),".",3) s fhrl=$$dn^OBapiED("1.1."_rrrr)
 k arr s err=$$gDCal^OBapiED(idfa,nmsp,rrrr,"",.arr) zt:+err "merr" s err=""
 s out("dta",1)=$e($g(arr("arr",(4+ishift),1,"dta",1)),(hrl-fhrl+1)) 					//den v tydnu 1=Po,2=Ut,3=St,4=Ct,5=Pa,6=So,7=Ne)
 s out("dta",2)=$e($g(arr("arr",(4+ishift),1,"dta",3)),(hrl-fhrl+1)) 					//svatek 0 ne / 1 ano
 s out("dta",3)=$e($g(arr("arr",(4+ishift),1,"dta",4)),(hrl-fhrl+1))				 	//sudy a lichy tyden 0 lichy / 1 sudy
 s out("dta",4)=$e("PUTAVSMN",+$e($g(arr("arr",(4+ishift),1,"dta",2)),(hrl-fhrl+1))) 	//definice dnu 1=P,2=U,3=T,4=A,5=V,6=S,7=M,8=N
 q 0
 //
grrmmdn(rrmm)
 ;;// s dn=$$rrmmdn(rrmm) - fce, vrati kolik dnu ma mesic v roce
 n (rrmm)
 s $zt="err1"
 ;; <transformace rrmm na rrrrmm>
 s rrrrmm=$$rrrrmm^OBapiED(rrmm) s rrrr=rrrrmm\100 s mm=rrrrmm#100
 s dn=$p("31:28:31:30:31:30:31:31:30:31:30:31",":",mm) s:(mm=2)&(rrrr\4*4=rrrr) dn=29
 q dn
 //
gminhrlrrmm(rrmm)
 ;;// s hrl=$$mingrl(rrmm) - fce, vrati minimalni horlog ve mesici
 n (rrmm)
 s $zt="err1"
 ;; <transformace rrmm na rrrrmm>
 s rrrrmm=$$rrrrmm^OBapiED(rrmm) s rrrr=rrrrmm\100 s mm=rrrrmm#100
 q $$dn^OBapiED("1"_"."_mm_"."_rrrr)
 //
gmaxhrlrrmm(rrmm)
 ;;// s hrl=$$maxhrl(rrmm) - fce, vrati maximalni horlog ve mesici
 n (rrmm)
 s $zt="err1"
 ;; <transformace rrmm na rrrrmm>
 s rrrrmm=$$rrrrmm^OBapiED(rrmm) s rrrr=rrrrmm\100 s mm=rrrrmm#100
 q $$dn^OBapiED($$grrmmdn^OBapiED(rrmm)_"."_mm_"."_rrrr)
 //
grrrrmmfromhrl(hrl)
 n (hrl)
 s $zt="err1"
 s dat=$$nd^OBapiED(hrl,0)
 q $p(dat,".",3)*100+$p(dat,".",2)
 //
addmmtorrrrmm(rrrrmm,cnt)
 n (rrrrmm,cnt)
 s rrrr=rrrrmm\100
 s mm=rrrrmm#100
 i cnt>0 f inc=1:1:cnt s mm=mm+1 s:mm>12 mm=1,rrrr=rrrr+1
 i cnt<0 s cnt=(cnt*(-1)) f inc=1:1:cnt s mm=mm-1 s:mm<1 mm=12,rrrr=rrrr-1
 q rrrr*100+mm
 //
err1 s $zt="" q ""
err2 s $zt="" k out q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDCis" type="INT" languagemode="0" timestamp="65728,45680.886189"><![CDATA[
OBapiEDCis q
 ;;//
 ;;// ============
 ;;// AD ciselniky
 ;;// ============
 ;;//
 ;;// idcis identifikator ciselniku
 ;;// =============================
 ;;//   1   druh zajezdu
 ;;//   2   typ prepravce
 ;;//   3   lokalni zastavky
 ;;//   4   druh spoje
 ;;//   5   prepravni system
 ;;//   6   dopravni typ autobusu
 ;;//   7   emaily pro odesilani objednavek
 ;;//   8   zpusob platby (dodelat save !!!)
 ;;//   9   banka (dodelat save !!!)
 ;;//  10   typy vleku (dodelat save!!!)
 ;;//  11   poplatky pro SJ a OBJ s danovym rozlisenim
 ;;//  12   ciselnik statu (z firmy + nastaveni z AD)
 ;;//  13   ciselnik blo (ten zatim prebiram z firmy, ne dCisItm a sCisItm)
 ;;//  14   ciselnik sazeb dle poctu osob (SKODA)
 ;;//  15   pravidla pro vypocet pomeru km dotovana/nedotovana
 ;;//  16   cinnosti pro turnusy
 ;;//  17   upresneni cinnosti pro ostatni prace (turnusy)
 ;;//  18   informace k turnusu (k casove pozici)
 ;;//  19   informace k turnusu (zapati)
 ;;//  20   grafikon ridici - cinnosti
 ;;//  21   grafikon auta - cinnosti
 ;;//  22   druhy rezijnich km pro doklady
 ;;//  23   polozky pro predkontaci fakturace
 ;;//  24   zpusob vypoctu mzdy pro grafikon ridicu
 ;;//  25   kdy nabizet polozku grafikonu ridice
 ;;//  26   neprepravni vykony (dzva)
 ;;//  27   pravidla pro vypocet tuzemskych diet
 ;;//  28   fakturacni polozky
 ;;//  29   cil zajezdu
 ;;//  30   druhy spoju pro Reporting
 ;;//  31   polozky, ktere se napocitavaji do vykonu pro premie v pravidelne doprave
 ;;//  32   polozky, ktere se napocitavaji do vykonu pro premie v nepravidelne doprave
 ;;//  33   hodinove polozky pro vypocet mzdy s vykonovou a tarifni sazbou (casova mzda)
 ;;//  34   hodinove polozky pro vypocet mzdy s tarifni sazbou(vykonova mzda)
 ;;//  35   informace pro planovaci doklad (spolecne)
 ;;//  36   prejezdy
 ;;//  37   cinnosti pro SJ
 ;;//  38   cinnosti pro DZVA, ze kterych se pocitaji hodiny v noci
 ;;//  39   cinnosti pro SJ, ze kterych se pocitaji hodiny v noci
 ;;//  40   cinnosti pro porizovani DZVA
 ;;//  41   informace na fakturu do objednavek a SJ
 ;;//  42   cinnosti pro DZVA, ze kterych se pocitaji diety
 ;;//  43	odmeny pro jizdu bez nehod
 ;;//  44   zpusob fakturace
 ;;//  45   dlouhodoba platnost
 ;;//  46   pasma pro vypocet pausalnich mezd
 ;;//  47   typ SJ
 ;;//  48   skupina pro prepravni system
 ;;//  49   druhy km pro Reporting
 ;;//  50   planovana kvalita vozu na obeh (MPV NET)
 ;;//  51   datove polozky pro DS
 ;;//  52   pravidla pro zahranicni diety
 ;;//  53   uzemni celek (pro PRS - drive jako oblast)
 ;;//  54   druhy phm pro import phm z mtz (pro naparovani)
 ;;// ===================================================================================
 ;;// idcis identifikator ciselniku (stare, v textove AD, pozdeji predelat nebo vypustit)
 ;;// ===================================================================================
 ;;//   dza   druh zajezdu
 ;;//   tpr   typ prepravce
 ;;//   prs   prepravni system
 ;;//   nud   normovana udrzba
 ;;//   stt   okresy
 ;;//   zpl   zpusob platby
 ;;//   tdi   diety
 ;;// =============================
isCis(idfa,nmsp,idcis,in,out)
 ;;// s err = $$isCis(idfa,nmsp,idcis,in,out) - test na existenci ciselniku
 ;;// out=0 neexistuje
 ;;// out>0 existuje
 s $zt="err"
 k out q:idcis="" 0
 n (idfa,nmsp,idcis,in,out)
 s dz=$$gFaDz^OBapiED(idfa)
 i idcis=1 s out=$d(^[nmsp]OI(idfa,"SJDZA"))
 i idcis=2 s out=$d(^[nmsp]OI(idfa,"SJTYPP"))
 i idcis=3 s out=$d(^[nmsp]OBLOC(dz))
 i idcis=4 s out=$d(^[nmsp]OI("DSP"))
 i idcis=5 s out=$d(^[nmsp]OI(idfa,"PRS"))
 i idcis=6 s out=$d(^[nmsp]OI("DOPT"))
 i idcis=7 s out=$d(^[nmsp]OI(idfa,"jb","obj","email"))
 i idcis=8 s out=$d(^[nmsp]OI("ZPPL"))
 i idcis=9 s err=$$isCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","Banky","",.out) zt:+err "merr" s err=""
 i idcis=10 s out=0
 i idcis=11 s out=$d(^[nmsp]OI(idfa,"SJpopl"))
 i idcis=12 s err=$$isCis^MlJFapi("",$$gSystemNmsp^OBapiED(),"","StatyMPZ","",.out) zt:+err "merr" s err=""
 i idcis=13 s err=$$isCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","Okres","",.out) zt:+err "merr" s err=""
 i idcis=14 s out=$d(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob"))
 i idcis=15 s out=$d(^[nmsp]OI(idfa,"jb","pravidlaDotNedot"))
 i idcis=16 s out=1
 i idcis=17 s out=1
 i idcis=18 s out=$d(^[nmsp]OI(dz,"INFOTUR"))
 i idcis=19 s out=$d(^[nmsp]OI(dz,"INFOTURpod"))
 i idcis=20 s out=$d(^[nmsp]OI(idfa,"GRAO"))
 i idcis=21 s out=$d(^[nmsp]OI(idfa,"GRAA"))
 i idcis=22 s out=$d(^[nmsp]OI("RKM"))
 i idcis=23 s out=1
 i idcis=24 s out=1
 i idcis=25 s out=1
 i idcis=26 s out=$d(^[nmsp]OI("NEPH"))
 i idcis=27 s out=$d(^[nmsp]OI(idfa,"TDIE"))
 i idcis=28 s out=1
 i idcis=29 s out=$d(^[nmsp]OI(idfa,"CISODKUDKAM"))
 i idcis=30 s out=1
 i idcis=31 s out=1
 i idcis=32 s out=1
 i idcis=33 s out=1
 i idcis=34 s out=1
 i idcis=35 s out=$d(^[nmsp]OI(idfa,"jb","planDopravy","info"))
 i idcis=36 s out=$d(^[nmsp]OI(idfa,"jb","turnusy","prejezd"))
 i idcis=37 s out=1
 i idcis=38 s out=1
 i idcis=39 s out=1
 i idcis=40 s out=1
 i idcis=41 s out=$d(^[nmsp]OI(idfa,"jb","fakturace","info"))
 i idcis=42 s out=1
 i idcis=43 s out=1
 i idcis=44 s out=1
 i idcis=45 s out=1
 i idcis=46 s out=1
 i idcis=47 s out=1
 i idcis=48 s out=$d(^[nmsp]OI(idfa,"PRS_SKU"))
 i idcis=49 s out=1
 i idcis=50 s out=1
 i idcis=51 s out=1
 i idcis=52 s out=$d(^[nmsp]OI(idfa,"ZDIE"))
 i idcis=53 s out=1
 i idcis=54 s out=1
 q 0
gCis(idfa,nmsp,idcis,in,out)
 // gCis(idfa,nmsp,idcis,in,out) - ciselniky AD nacteni z db
 n (idfa,nmsp,idcis,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idcis)="" q "1~idcis="
 //
 s dz=$$gFaDz^OBapiED(idfa)
 //===================================================
 //in - parametry pro ciselnik
 //in("par",idcis,par)=val
 //in("par",5,1)=1 ... jako prepravni system vraci i 0
 //in("par",12,1)=1 ... vraci jen staty s neprazdnym DPH
 //===================================================
 //
 k out
 ;; druh zajezdu
 i idcis=1 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"SJDZA",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"SJDZA",id))
 ..s idd=$o(^[nmsp]OI(idfa,"SJDZA",id,""))
 ..s out("arr",id)=$p($tr(val,":","~"),"~",1,11) s $p(out("arr",id),"~",9)=idd
 ;; typ prepravce
 i idcis=2 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"SJTYPP",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"SJTYPP",id))
 ..s out("arr",id)=$p($tr(val,":","~"),"~",1,7)
 ..s $p(out("arr",id),"~",8)=$p($p(out("arr",id),"~",3),"/",2)
 ..s $p(out("arr",id),"~",3)=$p($p(out("arr",id),"~",3),"/",1)
 ..;; + daňové zkratky dodělat
 ;; lokalni zastavky
 i idcis=3 d
 .s id="" f  s id=$o(^[nmsp]OBLOC(dz,id)) q:id=""  d
 ..s val=$g(^[nmsp]OBLOC(dz,id))
 ..s out("arr",id)=$tr(val,"$","~")
 ;; druh spoje
 i idcis=4 d
 .s id="" f  s id=$o(^[nmsp]OI("DSP",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI("DSP",id))
 ..s out("arr",id)=val
 ;; prepravni system
 i idcis=5 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"PRS",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"PRS",id))
 ..s out("arr",id)=$tr(val,":","~")
 ..//doplneni nenastavenych hodnot
 ..s:$p(out("arr",id),"~",2)="" $p(out("arr",id),"~",2)=1 	//pravidelna
 ..s:$p(out("arr",id),"~",3)="" $p(out("arr",id),"~",3)=2 	//dotovana
 ..s:$p(out("arr",id),"~",4)="" $p(out("arr",id),"~",4)=1 	//vse
 ..s:$p(out("arr",id),"~",5)="" $p(out("arr",id),"~",5)=1 	//aktivni
 ..s:$p(out("arr",id),"~",6)="" $p(out("arr",id),"~",6)=1 	//tuzemska
 ..s:$p(out("arr",id),"~",7)="" $p(out("arr",id),"~",7)=+$h //+hrl zavedeni
 .i $g(in("par",idcis,1))=1 s out("arr",0)="neurčeno~~~1~1"
 ;; typ autobusu
 i idcis=6 d
 .k arrsetdtyp s err=##class(ALVA.ADMAIN.ApiRZ).gDtyp(idfa,nmsp,"",.arrsetdtyp)
 .s id="" f  s id=$o(^[nmsp]OI("DOPT",id)) q:id=""  d
 ..s out("arr",id)=id
 ..s isbus=0 s ispri=0
 ..s idd="" f  s idd=$o(^[nmsp]OI("DOPT",id,idd)) q:idd=""  d
 ...i $d(arrsetdtyp("arr",0,(idd\1000))) s isbus=1
 ...i $d(arrsetdtyp("arr",1,(idd\1000))) s ispri=1
 ...s out("arr",id,idd)=idd
 ..i ('isbus&'ispri) s isbus=1
 ..s $p(out("arr",id),"~",2)=isbus
 ..s $p(out("arr",id),"~",3)=ispri
 .k arrsetdtyp
 ;; emaily pro objednavky
 i idcis=7 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","obj","email",id)) q:id=""  d
 ..s out("arr",id)=id
 ;; zpusob platby
 i idcis=8 d
 .s id="" f  s id=$o(^[nmsp]OI("ZPPL",id)) q:id=""  d
 ..s out("arr",id)=$p($g(^[nmsp]OI("ZPPL",id)),"|",1)
 // banky - firemni ciselnik
 i idcis=9 d
 .k arr s err=$$gCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","","Banky","",.arr) zt:+err "merr" s err=""
 .s id="" f  s id=$o(arr("arr",id)) q:id=""  d
 ..s out("arr",id)=$p($g(arr("arr",id)),"~",2)
 // poplatky pro SJ a OBJ s danovym rozlisenim
 i idcis=11 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"SJpopl",id)) q:id=""  d
 ..s val=""
 ..//popis
 ..s $p(val,"~",1)=$g(^[nmsp]OI(idfa,"SJpopl",id))
 ..//pro univerzalni do popisu informaci, zda je soucasti prepravy
 ..i (id=1500)!(id=1700) s $p(val,"~",1)=$p(val,"~",1)_", je součástí přepravy"
 ..i (id=1800)!(id=1900) s $p(val,"~",1)=$p(val,"~",1)_", není součástí přepravy"
 ..//univerzalni 0 ne / 1 ano
 ..s $p(val,"~",2)=0 s:(id=1500)!(id=1700)!(id=1800)!(id=1900) $p(val,"~",2)=1
 ..//poplatky, ktere nesouvisi s prepravou (natvrdo) (0 ne / 1 ano)
 ..//600  - vstupne v tuzemsku
 ..//700  - ostatni poplatky
 ..//1000 - dan z obratu v nemecku
 ..//1300 - ostatni zahranicni poplatky
 ..//1400 - vybrane jizdne
 ..//1800 - univerzalni
 ..//1900 - univerzalni
 ..s $p(val,"~",4)=1 s:(id=600)!(id=700)!(id=1000)!(id=1300)!(id=1400)!(id=1800)!(id=1900) $p(val,"~",4)=0
 ..//mozny rozpis po statech (0 ne / 1 ano) 
 ..s $p(val,"~",5)=0 s:(id=100)!(id=200)!(id=500)!(id=900)!(id=1100)!(id=1200)!(id=1500)!(id=1700)!(id=2700) $p(val,"~",5)=1
 ..s out("arr",id)=val
 ..s idd="" f  s idd=$o(^[nmsp]OI(idfa,"SJpopl",id,idd)) q:idd=""  d
 ...s $p(val,"~",3)=$g(^[nmsp]OI(idfa,"SJpopl",id,idd))
 ...s out("arr",id,idd)=val
 ;; ciselnik statu
 i idcis=12 d
 .//nactu ciselnik z firmy
 .k arr s err=$$gCis^MlJFapi("",$$gSystemNmsp^OBapiED(),"","","StatyMPZ","",.arr) zt:+err "merr" s err=""
 .//k ciselniku doplnim udaje z AD
 .s id="" f  s id=$o(arr("arr",id)) q:id=""  d
 ..s val=""
 ..s $p(val,"~",1)=$p($g(arr("arr",id)),"~",2)										//nazev statu
 ..s $p(val,"~",2)=+$p($g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id)),":",2)	//blokovan
 ..s $p(val,"~",3)=$g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Dph"))		//dph
 ..s $p(val,"~",4)=$g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Limkm"))		//limit km
 ..//jen s neprazdnym DPH
 ..i +$g(in("par",12,1))&($p(val,"~",3)="") q 
 ..s out("arr",id)=val
 ;; ciselnik blizkych obci
 i idcis=13 d
 .k arr s err=$$gCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","","Okres","",.arr) zt:+err "merr" s err=""
 .s id="" f  s id=$o(arr("arr",id)) q:id=""  d
 ..s out("arr",(id))=$p($g(arr("arr",id)),"~",2)
 ;; ciselnik sazeb dle poctu osob
 i idcis=14 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id))
 ..s out("arr",id)=val
 ;; pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id)) q:id=""  d
 ..m out("arr",id)=^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id)
 ;; cinnosti pro turnusy
 i idcis=16 d
 .f id=1:1:18 s out("arr",id)=$p("Začátek~Konec~Spoj~Přistavení~Odstavení~Přejezd~Režijní~Informace~Bezp.přest~Ost.práce~Nocování~Přerušení~Přest.jídlo~Dodk~Odpočinek~Rozděl.směna~Prac.pohotovost~Vložený výkon","~",id)
 .s out("arr",0)="Čekání"
 ;; upresneni cinnosti pro ostatni prace (turnusy)
 i idcis=17 d
 .f id=0:1:12 s out("arr",id)=$p("Ostatní práce~Mytí, čištění~Odvod peněz~Tankování~Pracovní záloha~Režijní práce~Rozvoz pošty~Připojení cyklopřívěsu~Oprava na cestě~Naložení zavazadel~Doplatek do směny~Natáčení vozidla~Odpojení cyklopřívěsu","~",(id+1))
 ;; informace k turnusu (k casove pozici)
 i idcis=18 d
 .s id="" f  s id=$o(^[nmsp]OI(dz,"INFOTUR",id)) q:id=""  d
 ..s out("arr",id)=id
 ;; informace k turnusu (zapati)
 i idcis=19 d
 .s id="" f  s id=$o(^[nmsp]OI(dz,"INFOTURpod",id)) q:id=""  d
 ..s idd="" f  s idd=$o(^[nmsp]OI(dz,"INFOTURpod",id,idd)) q:idd=""  d
 ...s out("arr",id,idd)=$g(^[nmsp]OI(dz,"INFOTURpod",id,idd))
 ;;grafikon ridici
 i idcis=20 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"GRAO",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"GRAO",id))
 ..s $p(out("arr",id),"~",1)=$p($p(val,"#",1),":",1)
 ..s $p(out("arr",id),"~",2)=$p($p(val,"#",1),":",2)
 ..s $p(out("arr",id),"~",3)=+$p($p(val,"#",1),":",3)
 ..s $p(out("arr",id),"~",4)=+$p($p(val,"#",1),":",4)
 ..s $p(out("arr",id),"~",5)=+$p(val,"#",2)
 ..s $p(out("arr",id),"~",6)=+$p(val,"#",3)
 ..s $p(out("arr",id),"~",7)=(($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",id)))>0)
 ..s $p(out("arr",id),"~",8)=(($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)))>0)
 ..s $p(out("arr",id),"~",9)=(($d(^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",id)))>0)
 ..s $p(out("arr",id),"~",10)=(($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)))>0)!(($d(^[nmsp]OI(idfa,"GRAFIKON","CASODDO",id)))>0)
 ..s $p(out("arr",id),"~",11)=(($d(^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",id)))>0)
 ..s $p(out("arr",id),"~",12)=(($d(^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",id)))>0)
 ;;grafikon auta
 i idcis=21 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"GRAA",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"GRAA",id))
 ..s $p(out("arr",id),"~",1)=$p(val,":",1)
 ..s $p(out("arr",id),"~",2)=$p(val,":",2)
 ..s $p(out("arr",id),"~",3)=+$p(val,":",3)
 ;; rezijni km pro doklady
 i idcis=22 d
 .s id="" f  s id=$o(^[nmsp]OI("RKM",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI("RKM",id))
 ..s $p(out("arr",id),"~",1)=$p(val,":",1)
 ..s $p(out("arr",id),"~",2)=$p(val,":",2)
 ;; polozky pro predkontaci
 i idcis=23 d
 .k arrstt s err=$$gCis^MlJFapi("",$$gSystemNmsp^OBapiED(),"","","StatyMPZ","",.arrstt) zt:+err "merr" s err=""
 .//tuzemsko
 .s out("arr",1)="tuzemsko~0"
 .s out("arr",1,1)="tržba"
 .s out("arr",1,1,"CZ")=""
 .s out("arr",1,3)="mýto"
 .s out("arr",1,3,"CZ")=""
 .s out("arr",1,3,"SK")=""
 .s out("arr",1,4)="poplatky"
 .//zahranici
 .s out("arr",2)="zahraničí~0"
 .s out("arr",2,1)="tržba"
 .s out("arr",2,1,"CZ")=""
 .s out("arr",2,2)="zahraniční dph"
 .s out("arr",2,3)="mýto"
 .s out("arr",2,3,"CZ")=""
 .s out("arr",2,3,"SK")=""
 .s out("arr",2,4)="poplatky"
 .s idstt="" f  s idstt=$o(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",idstt)) q:idstt=""  d
 ..//neni v ciselniku statu
 ..i '$d(arrstt("arr",idstt)) q
 ..i $g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",idstt,"Dph"))="" q
 ..s out("arr",2,1,idstt)=""
 ..//pro rakousko rozliseni reverse charge
 ..i idstt="A" s out("arr",2,1,idstt_"_RCH")=""
 ..//1.7.2015 lt, zeme davame pro vsechny polozky
 ..s out("arr",1,1,idstt)="" 
 ..i '$g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",idstt,"Dph")) q
 ..s out("arr",2,2,idstt)=""
 ..//1.7.2015 lt, zeme davame pro vsechny polozky
 ..s out("arr",1,2)="zahraniční dph" s out("arr",1,2,idstt)="" 
 .//vnitrofaktura
 .s out("arr",3)="vnitrofaktura~1"
 .//spedice
 .s out("arr",4)="spedice~0"
 // vypocet mzdy pro grafikon ridicu
 i idcis=24 d
 .f id=0:1:10 s out("arr",id)=$p("nepočítat|průměr|základní tarif|výkonový tarif|příplatek zaškolování|příplatek noční|sazba speciální|sazba snížená|sazba čekání|sazba rozděl.směna|sazba zál.hodiny","|",(id+1))
 // kdy nabizet polozku pro grafikon ridicu
 i idcis=25 d
 .f id=0:1:5 s out("arr",id)=$p("vždy|všední dny|soboty a neděle|svátky|nikdy|PoÚtStČtPá","|",(id+1))
 ;;neprepravni vykony
 i idcis=26 d
 .s id="" f  s id=$o(^[nmsp]OI("NEPH",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI("NEPH",id))
 ..//nabizet, neni-li pak 1
 ..i $p(val,":",7)="" s $p(val,":",7)=1
 ..s $p(out("arr",id),"~",1)=$p(val,":",1)
 ..s $p(out("arr",id),"~",2)=$p(val,":",2)
 ..s $p(out("arr",id),"~",3)=$p(val,":",3)
 ..s $p(out("arr",id),"~",4)=$p(val,":",4)
 ..s $p(out("arr",id),"~",5)=$p(val,":",5)
 ..s $p(out("arr",id),"~",6)=$p(val,":",6)
 ..s $p(out("arr",id),"~",7)=$p(val,":",7)
 //pravidla pro vypocet tuzemskych diet
 i idcis=27 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"TDIE",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"TDIE",id))
 ..s $p(out("arr",id),"~",1)=$p(val,":",1)
 ..s $p(out("arr",id),"~",2)=$p(val,":",2)
 ..s $p(out("arr",id),"~",3)=$p(val,":",3)
 ..s $p(out("arr",id),"~",4)=$p(val,":",4)
 //polozky pro fakturaci
 i idcis=28 d
 .s $p(out("arr",10),"~",1)="Odjeté kilometry"
 .s $p(out("arr",11),"~",1)="Odjeté kilometry (neobsazené)"
 .s $p(out("arr",20),"~",1)="Odjeté km s přívěsem"
 .s $p(out("arr",30),"~",1)="Čtvrthodiny čekání"
 .s $p(out("arr",40),"~",1)="Čtvrthodiny provozu (čas.sazba)"
 .s $p(out("arr",50),"~",1)="Smluvní cena"
 .s $p(out("arr",60),"~",1)="Cykly"
 .//stary ciselnik sel do 100 a pak nove poplatky
 //cil zajezdu
 i idcis=29 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"CISODKUDKAM",id)) q:id=""  d
 ..s out("arr",id)=""
 // druhy spoju pro Reporting
 i idcis=30 d
 .s $p(out("arr",1),"~",1)="PrVnitro(1)"
 .s $p(out("arr",1.1),"~",1)="PrVnitroRež(1.1)"
 .s $p(out("arr",2),"~",1)="PrDálkový(2)"
 .s $p(out("arr",2.1),"~",1)="PrDálkovýRež(2.1)"
 .s $p(out("arr",3),"~",1)="PrMěsto(3)"
 .s $p(out("arr",3.1),"~",1)="PrMěstoRež(3.1)"
 .s $p(out("arr",4),"~",1)="PrPříměstský(4)"
 .s $p(out("arr",4.1),"~",1)="PrPříměstskýRež(4.1)"
 .s $p(out("arr",5),"~",1)="PrMezinárodní(5)"
 .s $p(out("arr",5.1),"~",1)="PrMezinárodníRež(5.1)"
 .s $p(out("arr",6),"~",1)="PrSmluvní(6)"
 .s $p(out("arr",6.1),"~",1)="PrSmluvníRež(6.1)"
 .s $p(out("arr",7),"~",1)="NeVnitro(7)"
 .s $p(out("arr",7.1),"~",1)="NeVnitroRež(7.1)"
 .s $p(out("arr",8),"~",1)="NeZahraniční(8)"
 .s $p(out("arr",8.1),"~",1)="NeZahraničníRež(8.1)"
 .s $p(out("arr",9),"~",1)="PrRežijní(9)"
 .s $p(out("arr",9.1),"~",1)="PrRežijníRež(9.1)"
 // polozky pro vykon pro premie - pravidelna
 i idcis=31 d
 .s $p(out("arr",1),"~",1)="jízda"
 .s $p(out("arr",2),"~",1)="manipulace"
 .s $p(out("arr",3),"~",1)="čekání započtené"
 .s $p(out("arr",5),"~",1)="bezpečnostní přestávka"
 .s $p(out("arr",6),"~",1)="ostatní práce"
 .s $p(out("arr",7),"~",1)="ostatní pauš. práce"
 .s $p(out("arr",8),"~",1)="vyrovnávací doba"
 .s $p(out("arr",9),"~",1)="dodk"
 .s $p(out("arr",10),"~",1)="hodiny neplacené"
 .s $p(out("arr",12),"~",1)="pracovní záloha"
 .s $p(out("arr",33),"~",1)="hodiny sníženou szb."
 .s $p(out("arr",36),"~",1)="jiné práce"
 .s $p(out("arr",54),"~",1)="fixní hodiny na dzva"
 // polozky pro vykon pro premie - nepravidelna
 i idcis=32 d
 .s $p(out("arr",4),"~",1)="čekání započtené"
 .s $p(out("arr",5),"~",1)="hodiny tarifem"
 .s $p(out("arr",6),"~",1)="dodk"
 .s $p(out("arr",13),"~",1)="jízda"
 // polozky pro vypocet mzdy s vykonovou a casovou sazbou
 i idcis=33 d
 .s $p(out("arr",1),"~",1)="jízda"
 .s $p(out("arr",2),"~",1)="manipulace"
 .s $p(out("arr",3),"~",1)="čekání započtené"
 .s $p(out("arr",5),"~",1)="bezpečnostní přestávka"
 .s $p(out("arr",6),"~",1)="ostatní práce"
 .s $p(out("arr",7),"~",1)="ostatní paušální práce"
 .s $p(out("arr",8),"~",1)="vyrovnávací doba"
 .s $p(out("arr",9),"~",1)="DODK"
 .s $p(out("arr",12),"~",1)="pracovní záloha"
 .s $p(out("arr",98),"~",1)="přerušení započtené"
 i idcis=34 d
 .s $p(out("arr",3),"~",1)="čekání započtené"
 .s $p(out("arr",5),"~",1)="bezpečnostní přestávka"
 .s $p(out("arr",6),"~",1)="ostatní práce"
 .s $p(out("arr",7),"~",1)="ostatní paušální práce"
 .s $p(out("arr",8),"~",1)="vyrovnávací doba"
 .s $p(out("arr",9),"~",1)="DODK"
 .s $p(out("arr",12),"~",1)="pracovní záloha"
 .s $p(out("arr",98),"~",1)="přerušení započtené"
 // informace pro planovaci doklad (spolecne)
 i idcis=35 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","planDopravy","info",id)) q:id=""  d
 ..s idd="" f  s idd=$o(^[nmsp]OI(idfa,"jb","planDopravy","info",id,idd)) q:idd=""  d
 ...s out("arr",id,idd)=$g(^[nmsp]OI(idfa,"jb","planDopravy","info",id,idd))
 // prejezdy
 i idcis=36 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","turnusy","prejezd",id)) q:id=""  d
 ..s out("arr",id)=$g(^[nmsp]OI(idfa,"jb","turnusy","prejezd",id))
 // cinnosti pro SJ
 i idcis=37 d
 .f id=1:1:10 s out("arr",id)=$p("Jízda obsazená~Jízda neobsazená~Jízda řežijní~Ost.práce~Dodk~Bezp.přest~Přerušení~Neplacené práce~Mytí, čištění~Nakládání zavazadel","~",id)
 // cinnosti pro DZVA, ze kterych se pocitaji hodiny v noci
 i idcis=38 d
 .f id=1:1:18 s out("arr",id)=$p("Začátek~Konec~Spoj~Přistavení~Odstavení~Přejezd~Režijní~Informace~Bezp.přest~Ost.práce~Nocování~Přerušení~Přest.jídlo~Dodk~Odpočinek~Rozděl.směna~Prac.pohotovost~Vložený výkon","~",id)
 .f id=1,2,8,12 k out("arr",id)
 .s out("arr",-3)="Přerušení práce nezapočtené"
 .s out("arr",-2)="Přerušení práce započtené"
 .s out("arr",-1)="Vyrovnávací doba"
 .s out("arr",0)="Čekání"
 // cinnosti pro SJ, ze kterych se pocitaji hodiny v noci
 i idcis=39 d
 .f id=1:1:7 s out("arr",id)=$p("Jízda obsazená~Jízda neobsazená~Jízda řežijní~Ost.práce~Dodk~Bezp.přest~Přerušení","~",id)
 .f id=7 k out("arr",id)
 .s out("arr",0)="Čekání"
 // cinnosti pro porizovani DZVA
 i idcis=40 d
 .i '$d(^[nmsp]OI(idfa,"jb","dzva","set","edv")) d
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",1)="turnus~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",2)="spoje +~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",3)="nepřepravní výkony~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",4)="vložený výkon~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",5)="režijní km~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",6)="diety~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",7)="část spoje~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",8)="přerušení práce~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",9)="přejezd s čas.pozicí~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",10)="nepřepravní výkony s čas.pozicí~1"
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","dzva","set","edv",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"jb","dzva","set","edv",id))
 ..s out("arr",id)=val
 // informace pro fakturaci ze SJ a OBJ
 i idcis=41 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","fakturace","info",id)) q:id=""  d
 ..s idd="" f  s idd=$o(^[nmsp]OI(idfa,"jb","fakturace","info",id,idd)) q:idd=""  d
 ...s out("arr",id,idd)=$g(^[nmsp]OI(idfa,"jb","fakturace","info",id,idd))
 // cinnosti pro DZVA, ze kterych se pocitaji diety
 i idcis=42 d
 .f id=1:1:18 s out("arr",id)=$p("Začátek~Konec~Spoj~Přistavení~Odstavení~Přejezd~Režijní~Informace~Bezp.přest~Ost.práce~Nocování~Přerušení~Přest.jídlo~Dodk~Odpočinek~Rozděl.směna~Prac.pohotovost~Vložený výkon","~",id)
 .f id=1,2,8 k out("arr",id)
 // stupne odmeny pro jizdu bez nehod id)=km~let~odmena(kc)
 i idcis=43 d
 .//default. prednastaveni ciselniku
 .i '$d(^[nmsp]OI(idfa,"jb","jbn","set","stp")) d
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",0)="0~0~0"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",1)="250000~5~2000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",2)="500000~10~3000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",3)="750000~15~4000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",4)="1000000~20~5000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",5)="1250000~25~6000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",6)="1500000~30~7000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",7)="1750000~35~8000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",8)="2000000~40~9000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",9)="2250000~45~10000"
 ..s ^[nmsp]OI(idfa,"jb","jbn","set","stp",10)="2500000~50~11000"
 .//================================
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","jbn","set","stp",id)) q:id=""  d
 ..s val=$g(^[nmsp]OI(idfa,"jb","jbn","set","stp",id))
 ..s out("arr",id)=val
 .s out("arr",0)="0~0~0"
 //zpusob fakturace
 i idcis=44 d
 .f id=1:1:4 s out("arr",id)=$p("Fakturovat za km~Fakturovat za čas~Smluvní cena~Nefakturovat","~",id)
 //dlouhodoba platnost
 i idcis=45 d
 .s out("arr",1)="+w~nejede ve dnech školních prázdnin"
 .s out("arr",2)="~vždy"
 .s out("arr",3)="+c~dny se školním vyučováním"
 .s out("arr",4)="-c~dny bez školního vyučování"
 .s out("arr",5)="su~sudé týdny"
 .s out("arr",6)="li~liché týdny"
 .s out("arr",7)="su+c~sudé týdny, dny se školním vyučováním"
 .s out("arr",8)="su-c~sudé týdny, dny bez školního vyučování"
 .s out("arr",9)="li+c~liché týdny, dny se školním vyučováním"
 .s out("arr",10)="li-c~liché týdny, dny bez školního vyučování"
 .s out("arr",11)="+P~hlavní školní prázdniny"
 .s out("arr",12)="-P~mimo hlavní školní prázdniny"
 .s out("arr",13)="su+P~sudé týdny, hlavní školní prázdniny"
 .s out("arr",14)="su-P~sudé týdny, mimo hlavní školní prázdniny"
 .s out("arr",15)="li+P~liché týdny, hlavní školní prázdniny"
 .s out("arr",16)="li-P~liché týdny, mimo hlavní školní prázdniny"
 // pasma pro vypocet pausalnich mezd
 i idcis=46 d
 .s $p(out("arr",1),"~",1)="jednomužný"
 .s $p(out("arr",2),"~",1)="dvoumužný"
 .s $p(out("arr",3),"~",1)="dvoumužný obden"
 .s $p(out("arr",4),"~",1)="pohotovost"
 // typ SJ
 i idcis=47 d
 .s $p(out("arr",1),"~",1)="vlož.tur."
 .s $p(out("arr",2),"~",1)="mimo tur."
 // skupina prepravnich systemu
 i idcis=48 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"PRS_SKU",id)) q:id=""  d
 ..s out("arr",id)=$g(^[nmsp]OI(idfa,"PRS_SKU",id))
 // druhy km pro Reporting
 i idcis=49 d
 .k arrcis4 s err=$$gCis^OBapiED(idfa,nmsp,4,"",.arrcis4)
 .k arrcis22 s err=$$gCis^OBapiED(idfa,nmsp,22,"",.arrcis22)
 .//km z pravidelne, turnusy
 .//spoj
 .s id=3 s iddsp="" f  s iddsp=$o(arrcis4("arr",iddsp)) q:iddsp=""  s $p(out("arr",(id+(iddsp/100))),"~",1)="DZ_Spoj"_$p($g(arrcis4("arr",iddsp)),"~",1)_"("_(id+(iddsp/100))_")"
 .//pristaveni
 .s id=4 s iddsp="" f  s iddsp=$o(arrcis4("arr",iddsp)) q:iddsp=""  d
 ..s $p(out("arr",(id+(iddsp/100))),"~",1)="DZ_Přistavení"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Nehrazené("_(id+(iddsp/100))_")"
 ..s $p(out("arr",(id+(iddsp/100)+.5)),"~",1)="DZ_Přistavení"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Hrazené("_(id+(iddsp/100)+.5)_")"
 .//odstaveni
 .s id=5 s iddsp="" f  s iddsp=$o(arrcis4("arr",iddsp)) q:iddsp=""  d 
 ..s $p(out("arr",(id+(iddsp/100))),"~",1)="DZ_Odstavení"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Nehrazené("_(id+(iddsp/100))_")"  
 ..s $p(out("arr",(id+(iddsp/100)+.5)),"~",1)="DZ_Odstavení"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Hrazené("_(id+(iddsp/100)+.5)_")"  
 .//prejezd
 .s id=6 s iddsp="" f  s iddsp=$o(arrcis4("arr",iddsp)) q:iddsp=""  d
 ..s $p(out("arr",(id+(iddsp/100))),"~",1)="DZ_Přejezd"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Nehrazený("_(id+(iddsp/100))_")"
 ..s $p(out("arr",(id+(iddsp/100)+.5)),"~",1)="DZ_Přejezd"_$p($g(arrcis4("arr",iddsp)),"~",1)_"Hrazený("_(id+(iddsp/100)+.5)_")"
 .//rezijni jizda 
 .s id=7 d
 ..s $p(out("arr",id),"~",1)="DZ_RežijníNehrazená"_"("_id_")"
 ..s $p(out("arr",(id+.5)),"~",1)="DZ_RežijníHrazená"_"("_(id+.5)_")"
 .//km z pravidelne, rezijni
 .s id="" f  s id=$o(arrcis22("arr",id)) q:id=""  s $p(out("arr",id),"~",1)="DZ_"_$p($g(arrcis22("arr",id)),"~",1)_"("_id_")"
 .//km z nepravidelne
 .s $p(out("arr",100),"~",1)="SJ_VnitroObsazene(100)"
 .s $p(out("arr",101),"~",1)="SJ_VnitroNeobsazene(101)"
 .s $p(out("arr",102),"~",1)="SJ_VnitroRežijní(102)" 
 .s $p(out("arr",103),"~",1)="SJ_ZahraničníObsazene(103)"
 .s $p(out("arr",104),"~",1)="SJ_ZahraničníNeobsazene(104)"
 .s $p(out("arr",105),"~",1)="SJ_ZahraničníRežijní(105)"
 .k arrcis4,arrcis22
 i idcis=50 d
 .f id="Sd","SdN","Kb","KbN","Md","MdN","Mn","MnN","Sd@","Sd@N","Md@","Md@N" d
 ..s $p(out("arr",id),"~",1)=id
 i idcis=51 d
 .//jednotka 1=min 2=ks 3=Kč 4=Km
 .s out("arr","U_KM")="km cekové~4"
 .s out("arr","U_KMDV")="km dlouhým vozem~4"
 .s out("arr","U_HODJIZ")="hodiny jízdy~1"
 .s out("arr","U_HODMA")="hodiny manipulací~1"
 .s out("arr","U_HODDODK")="hodiny dodk~1"
 .s out("arr","U_HODBP")="hodiny bezpečnostních přestávek~1"
 .s out("arr","U_HODVY")="hodiny vyrovnavací doby~1"
 .s out("arr","U_HODOS")="hodiny ostatních prací~1"
 .s out("arr","U_HODZS")="hodina zaškolování~1"
 .s out("arr","U_HODSONE")="hodiny v sobotu,neděli~1"
 .s out("arr","U_HODSV")="hodiny ve svátek~1"
 .s out("arr","U_HODNC")="hodiny v noci~1"
 .s out("arr","U_HODCEK")="hodiny čekání~1"
 .s out("arr","U_DIETOS")="diety na os~3"
 i idcis=52 d
 .s id="" f  s id=$o(^[nmsp]OI(idfa,"ZDIE",id)) q:id=""  d
 ..s out("arr",id)=$g(^[nmsp]OI(idfa,"ZDIE",id))
 i idcis=53 d
 .s out("arr","CZ010")="Hlavní město Praha"
 .s out("arr","CZ020")="Středočeský kraj"
 .s out("arr","CZ031")="Jihočeský kraj"
 .s out("arr","CZ032")="Plzeňský kraj"
 .s out("arr","CZ041")="Karlovarský kraj"
 .s out("arr","CZ042")="Ústecký kraj"
 .s out("arr","CZ051")="Liberecký kraj"
 .s out("arr","CZ052")="Královéhradecký kraj"
 .s out("arr","CZ053")="Pardubický kraj"
 .s out("arr","CZ063")="Kraj Vysočina"
 .s out("arr","CZ064")="Jihomoravský kraj"
 .s out("arr","CZ071")="Olomoucký kraj"
 .s out("arr","CZ072")="Zlínský kraj"
 .s out("arr","CZ080")="Moravskoslezský kraj"
 i idcis=54 d
 .s out("arr",1)="nafta"
 .s out("arr",2)="plyn"
 .s out("arr",3)="benzín"
 .s out("arr",4)="b100"
 .s out("arr",5)="b30"
 .s out("arr",6)="nafta topení"
 .s out("arr",7)="elektřina"
 ;; ===============
 ;; stare ciselniky
 ;; ===============
 i idcis="dza" m:$d(^[nmsp]OI(idfa,"SJDZA")) out=^[nmsp]OI(idfa,"SJDZA")
 i idcis="tpr" m:$d(^[nmsp]OI(idfa,"SJTYPP")) out=^[nmsp]OI(idfa,"SJTYPP")
 i idcis="prs" m:$d(^[nmsp]OI(idfa,"PRS")) out=^[nmsp]OI(idfa,"PRS")
 i idcis="nud" m:$d(^[nmsp]OI("NEPH")) out=^[nmsp]OI("NEPH")
 i idcis="stt" m:$d(^[nmsp]OI("SPZ")) out=^[nmsp]OI("SPZ")
 i idcis="zpl" m:$d(^[nmsp]OI("ZPPL")) out=^[nmsp]OI("ZPPL")
 i idcis="tdi" m:$d(^[nmsp]OI(idfa,"TDIE")) out=^[nmsp]OI(idfa,"TDIE")
 ;;
 q 0
 ;;
dCis(idfa,nmsp,idcis,in,out)
 ;;// s err = $$dCis(idfa,nmsp,idcis,in,out) - delete ciselniku (jen ty co potrebuju, postupne doplnovat)
 s $zt="err"
 k out q:idcis="" 0
 n (idfa,nmsp,idcis,in,out)
 s dz=$$gFaDz^OBapiED(idfa)
 i idcis=27 k ^[nmsp]OI(idfa,"TDIE")
 q 0
isCisItm(idfa,nmsp,idcis,id,in,out)
 ;;// s err = $$isCisItm(idfa,nmsp,idcis,id,in,out) - kontrola polozky v ciselniku
 ;;// idcis identifikator ciselniku
 ;;// id    identifikator polozky
 ;;// out=0 neexistuje
 ;;// out>0 existuje
 ;;
 s $zt="err"
 n (idfa,nmsp,idcis,id,in,out)
 k out s out=0 q:idcis="" 0 q:id="" 0
 s dz=$$gFaDz^OBapiED(idfa)
 ;; druh zajezdu
 i idcis=1 s out=$d(^[nmsp]OI(idfa,"SJDZA",id))
 ;; typ prepravce
 i idcis=2 s out=$d(^[nmsp]OI(idfa,"SJTYPP",id))
 ;; lokalni zastavky
 i idcis=3 s out=$d(^[nmsp]OBLOC(dz,id))
 ;; druh spoje
 i idcis=4 s out=$d(^[nmsp]OI("DSP",id))
 ;; prepravni system
 i idcis=5 s out=$d(^[nmsp]OI(idfa,"PRS",id))
 ;; dopravni typ
 i idcis=6 s out=$d(^[nmsp]OI("DOPT",id))
 ;; emaily pro objednavky
 i idcis=7 s out=$d(^[nmsp]OI(idfa,"jb","obj","email",id))
 ;; zpusob platby
 i idcis=8 s out=$d(^[nmsp]OI("ZPPL",id))
 //poplatky
 i idcis=11 s out=$d(^[nmsp]OI(idfa,"SJpopl",id))
 ;; staty
 i idcis=12 d
 .k arr s err=$$gCis^MlJFapi("",$$gSystemNmsp^OBapiED(),"","","StatyMPZ","",.arr) zt:+err "merr" s err=""
 .s out=$d(arr("arr",id))
 ;; blizke obce
 i idcis=13 d
 .k arr s err=$$gCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","","Okres","",.arr) zt:+err "merr" s err=""
 .s out=$d(arr("arr",id))
 ;; ciselnik sazeb dle poctu osob
 i idcis=14 s out=$d(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id))
 ;; pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 s out=$o(^[nmsp]OI(idfa,"jb","pravidlaDotNedot",""))'=""
 ;; cinnosti pro turnusy
 i idcis=16 f cnt=1:1:18 s:(id=cnt) out=1
 ;; upresneni cinnosti pro ostatni prace (turnusy)
 i idcis=17 f cnt=0:1:12 s:(id=cnt) out=1
 ;; informace k turnusu (k casove pozici)
 i idcis=18 s out=$d(^[nmsp]OI(dz,"INFOTUR",id))
 ;; informace k turnusu (zapati)
 i idcis=19 s out=$d(^[nmsp]OI(dz,"INFOTURpod",id))
 i idcis=20 s out=$d(^[nmsp]OI(idfa,"GRAO",id))
 i idcis=21 s out=$d(^[nmsp]OI(idfa,"GRAA",id))
 ;; druh rezijnich km
 i idcis=22 s out=$d(^[nmsp]OI("RKM",id))
 i idcis=24 f cnt=0:1:10 s:(id=cnt) out=1
 i idcis=25 f cnt=0:1:5 s:(id=cnt) out=1
 ;; neprepravni vykony
 i idcis=26 s out=$d(^[nmsp]OI("NEPH",id))
 ;; pravidla pro vypocet tuzemskych diet
 i idcis=27 s out=$d(^[nmsp]OI(idfa,"TDIE",id))
 //cil zajezdu
 i idcis=29 s out=$d(^[nmsp]OI(idfa,"CISODKUDKAM",id))
 // informace pro planovaci doklad (spolecne)
 i idcis=35 s out=$d(^[nmsp]OI(idfa,"jb","planDopravy","info",id))
 //prejezdy
 i idcis=36 s out=$d(^[nmsp]OI(idfa,"jb","turnusy","prejezd",id))
 //cinnost pro SJ
 i idcis=37 f cnt=1:1:8 s:(id=cnt) out=1
 // informace pro fakturaci ze SJ a OBJ (spolecne)
 i idcis=41 s out=$d(^[nmsp]OI(idfa,"jb","fakturace","info",id))
 // stupne odmeny pro jizdu bez nehod id)=km~let~odmena(kc)
 i idcis=43 s out=$d(^[nmsp]OI(idfa,"jb","jbn","set","stp",id))
 // zpusob fakturace
 i idcis=44 f cnt=1:1:4 s:(id=cnt) out=1
 // skupiny prepravnich systemu
 i idcis=48 s out=$d(^[nmsp]OI(idfa,"PRS_SKU",id))
 // pravidla pro zahranicni diety
 i idcis=52 s out=$d(^[nmsp]OI(idfa,"ZDIE",id)) 
 q 0
gCisItm(idfa,nmsp,idcis,id,in,out)
 ;;// s err = $$gCisItm(idfa,nmsp,idcis,id,in,out) - nacte jednu polozku z ciselniku
 ;;// idcis identifikator ciselniku
 ;;// id    identifikator polozky
 ;;// out("arr",id)=val
 s $zt="err"
 n (idfa,nmsp,idcis,id,in,out)
 k out q:idcis="" 0 q:id="" 0
 s dz=$$gFaDz^OBapiED(idfa)
 ;; druh zajezdu
 i idcis=1 d
 .q:'$d(^[nmsp]OI(idfa,"SJDZA",id))
 .s val=$g(^[nmsp]OI(idfa,"SJDZA",id))
 .s idd=$o(^[nmsp]OI(idfa,"SJDZA",id,""))
 .s out("arr",id)=$p($tr(val,":","~"),"~",1,11) s $p(out("arr",id),"~",9)=idd
 ;; typ prepravce
 i idcis=2 d
 .q:'$d(^[nmsp]OI(idfa,"SJTYPP",id))
 .s val=$g(^[nmsp]OI(idfa,"SJTYPP",id))
 .s out("arr",id)=$p($tr(val,":","~"),"~",1,7)
 .s $p(out("arr",id),"~",8)=$p($p(out("arr",id),"~",3),"/",2)
 .s $p(out("arr",id),"~",3)=$p($p(out("arr",id),"~",3),"/",1)
 ;; lokalni zastavky
 i idcis=3 d
 .s val=$g(^[nmsp]OBLOC(dz,id))
 .i $d(^[nmsp]OBLOC(dz,id)) s out("arr",id)=$tr(val,"$","~")
 ;; druh spoje
 i idcis=4 d
 .s val=$g(^[nmsp]OI("DSP",id))
 .s out("arr",id)=val
 ;; prepravni system
 i idcis=5 d
 .s val=$g(^[nmsp]OI(idfa,"PRS",id))
 .s out("arr",id)=$tr(val,":","~")
 .//doplneni nenastavenych hodnot
 .s:$p(out("arr",id),"~",2)="" $p(out("arr",id),"~",2)=1  //pravidelna
 .s:$p(out("arr",id),"~",3)="" $p(out("arr",id),"~",3)=2  //dotovana
 .s:$p(out("arr",id),"~",4)="" $p(out("arr",id),"~",4)=1  //vse
 .s:$p(out("arr",id),"~",5)="" $p(out("arr",id),"~",5)=1  //aktivni
 .s:$p(out("arr",id),"~",6)="" $p(out("arr",id),"~",6)=1  //tuzemska
 .s:$p(out("arr",id),"~",7)="" $p(out("arr",id),"~",7)="" //+hrl zavedni
 ;; dopravni typ
 i idcis=6 d
 .k arrsetdtyp s err=##class(ALVA.ADMAIN.ApiRZ).gDtyp(idfa,nmsp,"",.arrsetdtyp)
 .s out("arr",id)=id
 .s isbus=0 s ispri=0
 .s idd="" f  s idd=$o(^[nmsp]OI("DOPT",id,idd)) q:idd=""  d
 ..i $d(arrsetdtyp("arr",0,(idd\1000))) s isbus=1
 ..i $d(arrsetdtyp("arr",1,(idd\1000))) s ispri=1
 ..s out("arr",id,idd)=idd
 .i ('isbus&'ispri) s isbus=1
 .s $p(out("arr",id),"~",2)=isbus
 .s $p(out("arr",id),"~",3)=ispri
 .k arrsetdtyp
 ;; emaily pro objednavky
 i idcis=7 d
 .s out("arr",id)=id
 ;; zpusob platby
 i idcis=8 d
 .s out("arr",id)=$p($g(^[nmsp]OI("ZPPL",id)),"|",1)
 // poplatky
 i idcis=11 d
 .s val=""
 .//popis
 .s $p(val,"~",1)=$g(^[nmsp]OI(idfa,"SJpopl",id))
 .//univerzalni 0 ne / 1 ano
 .s $p(val,"~",2)=0 s:(id=1500)!(id=1700)!(id=1800)!(id=1900) $p(val,"~",2)=1
 .//poplatky, ktere nesouvisi s prepravou (natvrdo) (0 ne / 1 ano)
 .s $p(val,"~",4)=1 s:(id=600)!(id=700)!(id=1000)!(id=1300)!(id=1400)!(id=1800)!(id=1900) $p(val,"~",4)=0
 .//mozny rozpis po statech (0 ne / 1 ano)
 .s $p(val,"~",5)=0 s:(id=100)!(id=200)!(id=500)!(id=900)!(id=1100)!(id=1200)!(id=1500)!(id=1700)!(id=2700) $p(val,"~",5)=1
 .s out("arr",id)=val
 .s idd="" f  s idd=$o(^[nmsp]OI(idfa,"SJpopl",id,idd)) q:idd=""  d
 ..s $p(val,"~",3)=$g(^[nmsp]OI(idfa,"SJpopl",id,idd))
 ..s out("arr",id,idd)=val
 ;; staty 
 i idcis=12 d
 .//nactu ciselnik z firmy
 .k arr s err=$$gCis^MlJFapi("",$$gSystemNmsp^OBapiED(),"","","StatyMPZ","",.arr) zt:+err "merr" s err=""
 .//k ciselniku doplnim udaje z AD
 .s val=""
 .s $p(val,"~",1)=$p($g(arr("arr",id)),"~",2)										//nazev statu
 .s $p(val,"~",2)=+$p($g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id)),":",2)	//blokovan
 .s $p(val,"~",3)=$g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Dph"))		//dph
 .s $p(val,"~",4)=$g(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Limkm"))		//limit km
 .s out("arr",id)=val
 ;; blizke obce
 i idcis=13 d
 .k arr s err=$$gCis^MlJFapi("",$$gFaNmsp^MlJFapi(),"","","Okres","",.arr) zt:+err "merr" s err=""
 .q:'$d(arr("arr",id))
 .s out("arr",id)=$p($g(arr("arr",id)),"~",2)
 ;; ciselnik sazeb dle poctu osob
 i idcis=14 d
 .q:'$d(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id))
 .s val=$g(^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id))
 .s out("arr",id)=val
 ;; pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 d
 .q:'$d(^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id))
 .m out("arr",id)=^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id)
 ;; cinnosti pro turnus
 i idcis=16 d
 .i id=0 s out("arr",+id)="Čekání" q
 .s out("arr",id)=$p("Začátek~Konec~Spoj~Přistavení~Odstavení~Přejezd~Režijní~Informace~Bezp.přest~Ost.práce~Nocování~Přerušení~Přest.jídlo~Dodk~Odpočinek~Rozděl.směna~Prac.pohotovost~Vložený výkon","~",id)
 ;; upresneni cinnosti pro ostatni prace (turnusy)
 i idcis=17 d
 .s out("arr",id)=$p("Ostatní práce~Mytí, čištění~Odvod peněz~Tankování~Pracovní záloha~Režijní práce~Rozvoz pošty~Připojení cyklopřívěsu~Oprava na cestě~Naložení zavazadel~Doplatek do směny~Natáčení vozidla~Odpojení cyklopřívěsu","~",(id+1))
 ;; informace k turnusu (k casove pozici)
 i idcis=18 s out("arr",id)=id
 ;; informace k turnusu (zapati)
 i idcis=19 d
 .s idd="" f  s idd=$o(^[nmsp]OI(dz,"INFOTURpod",id,idd)) q:idd=""  d
 ..s out("arr",id,idd)=$g(^[nmsp]OI(dz,"INFOTURpod",id,idd))
 ;;grafikon lidi
 i idcis=20 d
 .s val=$g(^[nmsp]OI(idfa,"GRAO",id))
 .s $p(out("arr",id),"~",1)=$p($p(val,"#",1),":",1)
 .s $p(out("arr",id),"~",2)=$p($p(val,"#",1),":",2)
 .s $p(out("arr",id),"~",3)=+$p($p(val,"#",1),":",3)
 .s $p(out("arr",id),"~",4)=+$p($p(val,"#",1),":",4)
 .s $p(out("arr",id),"~",5)=+$p(val,"#",2)
 .s $p(out("arr",id),"~",6)=+$p(val,"#",3)
 .s $p(out("arr",id),"~",7)=($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",id))>0)
 .s $p(out("arr",id),"~",8)=($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id))>0)
 .s $p(out("arr",id),"~",9)=($d(^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",id))>0)
 .s $p(out("arr",id),"~",10)=(($d(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)))>0)!(($d(^[nmsp]OI(idfa,"GRAFIKON","CASODDO",id)))>0)
 .s $p(out("arr",id),"~",11)=(($d(^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",id)))>0)
 .s $p(out("arr",id),"~",12)=(($d(^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",id)))>0)
 ;; grafikon aut
 i idcis=21 d
 .s val=$g(^[nmsp]OI(idfa,"GRAA",id))
 .s $p(out("arr",id),"~",1)=$p(val,":",1)
 .s $p(out("arr",id),"~",2)=$p(val,":",2)
 .s $p(out("arr",id),"~",3)=+$p(val,":",3)
 ;; rezijni km pro doklady
 i idcis=22 d
 .s val=$g(^[nmsp]OI("RKM",id))
 .s $p(out("arr",id),"~",1)=$p(val,":",1)
 .s $p(out("arr",id),"~",2)=$p(val,":",2)
 // zpusob vypoctu mzdy pro grafikon ridicu
 i idcis=24 d
 .s out("arr",id)=$p("nepočítat|průměr|základní tarif|výkonový tarif|příplatek zaškolování|příplatek noční|sazba speciální|sazba snížená|sazba čekání|sazba rozděl.směna|sazba zál.hodiny","|",(id+1))
 // kdy nabizet polozku pro grafikon ridicu
 i idcis=25 d
 .s out("arr",id)=$p("vždy|všední dny|soboty,neděle|svátky|nikdy|PoÚtStČtPá","|",(id+1))
 //neprepravni vykony
 i idcis=26 d
 .s val=$g(^[nmsp]OI("NEPH",id))
 .//nabizet, neni-li pak 1
 .i $p(val,":",7)="" s $p(val,":",7)=1
 .s $p(out("arr",id),"~",1)=$p(val,":",1)
 .s $p(out("arr",id),"~",2)=$p(val,":",2)
 .s $p(out("arr",id),"~",3)=$p(val,":",3)
 .s $p(out("arr",id),"~",4)=$p(val,":",4)
 .s $p(out("arr",id),"~",5)=$p(val,":",5)
 .s $p(out("arr",id),"~",6)=$p(val,":",6)
 .s $p(out("arr",id),"~",7)=$p(val,":",7)
 //pravidla pro vypocet tuzemskych diet
 i idcis=27 d
 .s val=$g(^[nmsp]OI(idfa,"TDIE",id))
 .s $p(out("arr",id),"~",1)=$p(val,":",1)
 .s $p(out("arr",id),"~",2)=$p(val,":",2)
 .s $p(out("arr",id),"~",3)=$p(val,":",3)
 .s $p(out("arr",id),"~",4)=$p(val,":",4)
 //cil zajezdu
 i idcis=29 d
 .i $d(^[nmsp]OI(idfa,"CISODKUDKAM",id)) s out("arr",id)=""
 // informace pro planovaci doklad (spolecne)
 i idcis=35 d
 .s idd="" f  s idd=$o(^[nmsp]OI(idfa,"jb","planDopravy","info",id,idd)) q:idd=""  d
 ..s out("arr",id,idd)=$g(^[nmsp]OI(idfa,"jb","planDopravy","info",id,idd))
 // prejezdy
 i idcis=36 d
 .s out("arr",id)=$g(^[nmsp]OI(idfa,"jb","turnusy","prejezd",id))
 // cinnosti pro SJ
 i idcis=37 d
 .s out("arr",id)=$p("Jízda obsazená~Jízda neobsazená~Jízda řežijní~Ost.práce~Dodk~Bezp.přest~Přerušení~Neplacené práce~Mytí, čištění~Nakládání zavazadel","~",id)
 // cinnosti pro porizovani DZVA
 i idcis=40 d
 .i '$d(^[nmsp]OI(idfa,"jb","dzva","set","edv")) d
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",1)="turnus~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",2)="spoje +~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",3)="nepřepravní výkony~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",4)="vložený výkon~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",5)="režijní km~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",6)="diety~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",7)="část spoje~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",8)="přerušení práce~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",9)="přejezd s čas.pozicí~1"
 ..s ^[nmsp]OI(idfa,"jb","dzva","set","edv",10)="nepřepravní výkony s čas.pozicí~1"
 .s out("arr",id)=$g(^[nmsp]OI(idfa,"jb","dzva","set","edv",id))
 // informace pro fakturaci ze SJ a OBJ
 i idcis=41 d
 .s idd="" f  s idd=$o(^[nmsp]OI(idfa,"jb","fakturace","info",id,idd)) q:idd=""  d
 ..s out("arr",id,idd)=$g(^[nmsp]OI(idfa,"jb","fakturace","info",id,idd))
 // stupne odmeny pro jizdu bez nehod id)=km~let~odmena(kc)
 i idcis=43 s out("arr",id)=$g(^[nmsp]OI(idfa,"jb","jbn","set","stp",id))
 // zpusob fakturace
 i idcis=44 s out("arr",id)=$p("Fakturovat za km~Fakturovat za čas~Smluvní cena~Nefakturovat","~",id)
 // skupiny prepravnich systemu
 i idcis=48 s out("arr",id)=$g(^[nmsp]OI(idfa,"PRS_SKU",id))
 // pravidla pro zahranici diety
 i idcis=52 s out("arr",id)=$g(^[nmsp]OI(idfa,"ZDIE",id))
 q 0
sCisItm(idfa,nmsp,idcis,id,val,in,out)
 ;;// s err = $$sCisItm(idfa,nmsp,idcis,id,val,in,out) - zapise data jedne polozky do ciselniku
 ;;// idcis identifikator ciselniku
 ;;// id    identifikator polozky
 ;;// val   veta polozky
 s $zt="err"
 n (idfa,nmsp,idcis,id,val,in,out)
 k out q:idcis="" 0 q:id="" 0
 s dz=$$gFaDz^OBapiED(idfa)
 ;; druh zajezdu
 i idcis=1 d
 .s idd=$p(val,"~",9) s $p(val,"~",9)="" s val=$p(val,"~",1,11)
 .k ^[nmsp]OI(idfa,"SJDZA",id)
 .s ^[nmsp]OI(idfa,"SJDZA",id)=$tr(val,"~",":")
 .s:idd'="" ^[nmsp]OI(idfa,"SJDZA",id,idd)=""
 ;; typ prepravce
 i idcis=2 d
 .i +$p(val,"~",8) s tmp=$p(val,"~",3) s $p(tmp,"/",2)=$p(val,"~",8) s $p(val,"~",3)=tmp
 .s val=$p(val,"~",1,7)
 .s ^[nmsp]OI(idfa,"SJTYPP",id)=$tr(val,"~",":")
 ;; lokalni zastavky
 i idcis=3 d
 .k ^[nmsp]OBLOC(dz,id)
 .s ^[nmsp]OBLOC(dz,id)=$tr(val,"~","$")
 ;; prepravni system
 i idcis=5 d
 .s ^[nmsp]OI(idfa,"PRS",id)=$tr(val,"~",":")
 ;; dopravni typ
 i idcis=6 d
 .k ^[nmsp]OI("DOPT",id)
 .s idd="" f  s idd=$o(in("arr",id,idd)) q:idd=""  d
 ..s ^[nmsp]OI("DOPT",id,idd)=""
 ;; emaily pro objednavky
 i idcis=7 d
 .s ^[nmsp]OI(idfa,"jb","obj","email",id)=""
 //poplatky
 i idcis=11 d
 .s idd=$p(id,"|",2) s id=$p(id,"|",1)
 .s ^[nmsp]OI(idfa,"SJpopl",id,idd)=$p(val,"~",3) 
 //staty
 i idcis=12 d
 .//blokovani
 .s $p(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id),":",2)=""
 .s:+$p(val,"~",2) $p(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id),":",2)=1
 .s ^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Dph")=$p(val,"~",3)
 .s ^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id,"Limkm")=$p(val,"~",4)
 ;; ciselnik sazeb dle poctu osob
 i idcis=14 d
 .s ^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id)=val
 ;; pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 d
 .m ^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id)=in("arr",id)
 ;; informace k turnusu (k casove pozici)
 i idcis=18 s ^[nmsp]OI(dz,"INFOTUR",id)=""
 ;; informace k turnusu (zapati)
 i idcis=19 d
 .k ^[nmsp]OI(dz,"INFOTURpod",id)
 .m ^[nmsp]OI(dz,"INFOTURpod",id)=in("arr",id)
 ;;grafikon lidi
 i idcis=20 d
 .// misto 0 dam ""
 .f cnt=3,4,5,6 s:'$p(val,"~",cnt) $p(val,"~",cnt)=""
 .s newval=""
 .s $p(newval,":",1)=$p(val,"~",1)
 .s $p(newval,":",2)=$p(val,"~",2)
 .s $p(newval,":",3)=$p(val,"~",3)
 .s $p(newval,":",4)=$p(val,"~",4)
 .s $p(newval,"#",2)=$p(val,"~",5)
 .s $p(newval,"#",3)=$p(val,"~",6)
 .s ^[nmsp]OI(idfa,"GRAO",id)=newval
 .k ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",id)
 .s:$p(val,"~",7) ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",""))="" ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO")
 .k ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)
 .s:$p(val,"~",8) ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",""))="" ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC")
 .k ^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",id)
 .s:$p(val,"~",9) ^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",""))="" ^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY")
 .k ^[nmsp]OI(idfa,"GRAFIKON","CASODDO",id)
 .s:$p(val,"~",10) ^[nmsp]OI(idfa,"GRAFIKON","CASODDO",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","CASODDO",""))="" ^[nmsp]OI(idfa,"GRAFIKON","CASODDO")
 .k ^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",id)
 .s:$p(val,"~",11) ^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",""))="" ^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS")
 .k ^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",id) 
 .s:$p(val,"~",12) ^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",id)=""
 .k:$o(^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",""))="" ^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA") 
 ;; grafikon aut
 i idcis=21 d
 .s newval=""
 .s $p(newval,":",1)=$p(val,"~",1)
 .s $p(newval,":",2)=$p(val,"~",2)
 .s $p(newval,":",3)=$p(val,"~",3)
 .s ^[nmsp]OI(idfa,"GRAA",id)=newval
 i idcis=22 d
 .s newval=""
 .s $p(newval,":",1)=$p(val,"~",1)
 .s $p(newval,":",2)=$p(val,"~",2)
 .s ^[nmsp]OI("RKM",id)=val
 //neprepravni vykony
 i idcis=26 d
 .s newval=""
 .s $p(newval,":",1)=$p(val,"~",1)
 .s $p(newval,":",2)=$p(val,"~",2)
 .s $p(newval,":",3)=$p(val,"~",3)
 .s $p(newval,":",4)=$p(val,"~",4)
 .s $p(newval,":",5)=$p(val,"~",5)
 .s $p(newval,":",6)=$p(val,"~",6)
 .s $p(newval,":",7)=$p(val,"~",7)
 .s ^[nmsp]OI("NEPH",id)=newval
 //pravidla pro vypocet tuzemskych diet
 i idcis=27 d
 .s newval=""
 .s $p(newval,":",1)=$p(val,"~",1)
 .s $p(newval,":",2)=$p(val,"~",2)
 .s $p(newval,":",3)=$p(val,"~",3)
 .s $p(newval,":",4)=$p(val,"~",4)
 .s ^[nmsp]OI(idfa,"TDIE",id)=newval
 //cil zajezdu
 i idcis=29 d
 .s ^[nmsp]OI(idfa,"CISODKUDKAM",id)=""
 // informace pro planovaci doklad (spolecne)
 i idcis=35 d
 .k ^[nmsp]OI(idfa,"jb","planDopravy","info",id)
 .m ^[nmsp]OI(idfa,"jb","planDopravy","info",id)=in("arr",id)
 //prejezdy
 i idcis=36 d
 .k ^[nmsp]OI(idfa,"jb","turnusy","prejezd",id)
 .s ^[nmsp]OI(idfa,"jb","turnusy","prejezd",id)=val
 // cinnosti pro porizovani DZVA
 i idcis=40 d
 .s ^[nmsp]OI(idfa,"jb","dzva","set","edv",id)=$g(val)
 // informace pro fakturaci ze SJ a OBJ
 i idcis=41 d
 .k ^[nmsp]OI(idfa,"jb","fakturace","info",id)
 .m ^[nmsp]OI(idfa,"jb","fakturace","info",id)=in("arr",id)
 // stupne odmeny pro jizdu bez nehod id)=km~let~odmena(kc)
 i idcis=43 s ^[nmsp]OI(idfa,"jb","jbn","set","stp",id)=$g(val)
 // skupiny prepravnich systemu
 i idcis=48 s ^[nmsp]OI(idfa,"PRS_SKU",id)=$g(val)
 // pravidla pro zahranicni diety
 i idcis=52 s ^[nmsp]OI(idfa,"ZDIE",id)=$g(val)
 q 0
dCisItm(idfa,nmsp,idcis,id,in,out)
 ;;// s err = $$dCisItm(idfa,nmsp,idcis,id,in,out) - zrusi data polozky v ciselniku
 ;;// idcis identifikator ciselniku
 ;;// id    identifikator polozky
 ;;// (u nekterych ciselniku se poznaci stav, nekde kill)
 ;;// out("stt")=0/1 0 nepovedlo se vymazat / 1 vymazano
 ;;// out("msg",cnt)=txt  zprava, např. proč položka nebyla vymazana
 s $zt="err"
 n (idfa,nmsp,idcis,id,in,out)
 k out q:idcis="" 0 q:id="" 0
 s dz=$$gFaDz^OBapiED(idfa)
 ;; druh zajezdu
 i idcis=1 d
 .k ^[nmsp]OI(idfa,"SJDZA",id)
 .s out("stt")=1
 ;; typ prepravce
 i idcis=2 d
 .k ^[nmsp]OI(idfa,"SJTYPP",id)
 .s out("stt")=1
 ;; lokalni zastavky
 i idcis=3 d
 .;; kontrola, zda se zast nevyskytuje ve spojích, v turnusech a nebo u ridicu pro ztizene prostredi
 .s cnt=0
 .k arr s err=$$isSpLocZst^OBapiED(idfa,nmsp,id,"",.arr) s err="" s cnt=cnt+$g(arr)
 .k arr s err=$$isTurLocZst^OBapiED(idfa,nmsp,id,"",.arr) s err="" s cnt=cnt+$g(arr)
 .k arr s err=$$isZtzPracSetLocZst^OBapiED(idfa,nmsp,id,"",.arr) s err="" s cnt=cnt+$g(arr)
 .i cnt d  q
 ..s out("stt")=0
 ..s out("msg",$i(out("msg")))="zastávka je použita ve spojích nebo turnusech a nebo v nastavení pro vyhodnocení ztíženého prostředí, nelze jí zrušit"
 .k ^[nmsp]OBLOC(dz,id)
 .s out("stt")=1
 ;; prepravni systemy
 i idcis=5 d
 .s $p(^[nmsp]OI(idfa,"PRS",id),":",5)=2
 .s out("stt")=1
 ;; dopravni typ
 i idcis=6 d
 .k ^[nmsp]OI("DOPT",id)
 .s out("stt")=1
 ;; emaily pro objednavky
 i idcis=7 d
 .k ^[nmsp]OI(idfa,"jb","obj","email",id)
 .s out("stt")=1
 //staty
 i idcis=12 d
 .s $p(^[$$gSystemNmsp^OBapiED()]Orel(idfa,"Staty",id),":",2)=1
 .s out("stt")=1
 ;; ciselnik sazeb dle poctu osob
 i idcis=14 d
 .k ^[nmsp]OI(idfa,"jb","sazbyDlePoctuOsob",id)
 .s out("stt")=1
 ;; pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 d
 .k ^[nmsp]OI(idfa,"jb","pravidlaDotNedot",id)
 .s out("stt")=1
 ;; informace k turnusu (k casove pozici)
 i idcis=18 d
 .k ^[nmsp]OI(dz,"INFOTUR",id)
 .s out("stt")=1
 ;; informace k turnusu (zapati)
 i idcis=19 d
 .k ^[nmsp]OI(dz,"INFOTURpod",id)
 .s out("stt")=1
 ;; grafikon ridici
 i idcis=20 d
 .k ^[nmsp]OI(idfa,"GRAO",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETSONSVO",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","DOMYSLETNOC",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","STRAVENKY",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","CASODDO",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","ZAPOCETPLANPRESCAS",id)
 .k ^[nmsp]OI(idfa,"GRAFIKON","POVINNAPOZNAMKA",id)
 .s out("stt")=1
 ;; grafikon aut
 i idcis=21 d
 .k ^[nmsp]OI(idfa,"GRAA",id)
 .s out("stt")=1
 ;; neprepravni vykony
 i idcis=26 d
 .k ^[nmsp]OI("NEPH",id)
 .s out("stt")=1
 ;; pravidla pro vypocet tuzemskych diet
 i idcis=27 d
 .k ^[nmsp]OI(idfa,"TDIE",id)
 .s out("stt")=1
 //cil zajezdu
 i idcis=29 d
 .k ^[nmsp]OI(idfa,"CISODKUDKAM",id)
 .s out("stt")=1
 // informace pro planovaci doklad (spolecne)
 i idcis=35 d
 .k ^[nmsp]OI(idfa,"jb","planDopravy","info",id)
 .s out("stt")=1
 // prejezdy
 i idcis=36 d
 .k ^[nmsp]OI(idfa,"jb","turnusy","prejezd",id)
 .s out("stt")=1
 // informace pro fakturaci ze SJ a OBJ
 i idcis=41 d
 .k ^[nmsp]OI(idfa,"jb","fakturace","info",id)
 .s out("stt")=1
 // stupne odmeny pro jizdu bez nehod id)=km~let~odmena(kc)
 i idcis=43 d
 .k ^[nmsp]OI(idfa,"jb","jbn","set","stp",id)
 .s out("stt")=1
 //skupiny prepravnich systemu
 i idcis=48 d
 .k ^[nmsp]OI(idfa,"PRS_SKU",id)
 .s out("stt")=1
 // pravidla pro zahranicni diety
 i idcis=52 d
 .k ^[nmsp]OI(idfa,"ZDIE",id)
 .s out("stt")=1
 q 0
gNewIdCisItm(idfa,nmsp,idcis,in,out)
 ;;// s err = $$gNewIdCisItm(idfa,nmsp,idcis,in,out) - vrati nove id polozky v ciselniku
 ;;// funkce je pouze pro nektere ciselniky (kde to ma smysl)
 ;;// idcis identifikator ciselniku
 ;;// (u nekterych ciselniku se poznaci stav, nekde kill)
 ;;// out("id")=id
 s $zt="err"
 n (idfa,nmsp,idcis,in,out)
 k out q:idcis=""
 s dz=$$gFaDz^OBapiED(idfa)
 //lokalni zastavky
 i idcis=3 s out("id")=($o(^[nmsp]OBLOC(dz,""),-1)+1)
 // pravidla pro vypocet pomeru km dotovana/nedotovana
 i idcis=15 s out("id")=$i(^[nmsp]OI(idfa,"jb","pravidlaDotNedot"))
 q 0
 ;;============
sCis(idfa,nmsp,idcis,in,wrk)
 ;;
 ;;// sCis(idfa,nmsp,idcis,in,wrk) - ciselniky AD zapis
 ;;
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idcis)="" q "1~idcis="
 ;;
 i idcis="tdi" d
 .k ^[nmsp]OI(idfa,"TDIE")
 .i $o(in(""))'="" m ^[nmsp]OI(idfa,"TDIE")=in
 ;;
 q 0
 ;;
 ;;// ---------------------
 ;;// popis vety ciselniku
 ;;// ---------------------
 ;;// idcis = id ciselniku:
 ;;//    01 = druh zajezdu      = popis(10)~popisprt(20)~prirazkaPhm~koncovyStat~koncovyStatPopis~prs~predkontace~dph(1,2,3,4)~danZkratka~ucet.pripad~povol.prs odd ;
 ;;//                                 1           2           3            4             5         6        7           8         9         10			11
 ;;//    02 = typ prepravce     = popis(10)~popisprt(20)~sazbaKm~sazba15minCek~sazba15minVyk~sazbaKmPrives~mzdovaPref~sazbaKmNeobs
 ;;//                                 1           2           3            4             5         6        7              8         
 ;;//    03 = lokalni zastavky  = nazBdia~nazSdia~sluzebni cil pro odb.zar 0/1~nazTelmaxTabloPredni~nazTelmaxDisplay~nazTelmaxTabloBocni~nazTelmaxTabloVni1a2rad~nazTelmaxTabloZadni
 ;;//                                 1      2      3                            4                    5                6                   7                        8
 ;;//    04 = druh spoje        =
 ;;//    05 = prepravni system  = popis~1pravidelna/2neprav~1nedotovana/2dotovana~pro 1Vse/2Dzva/3Sj~1aktivni/2zrusen~1tuzemsko/2zahranici~hrl_zavedeni~fullname_zavedeni~jizda_do_opravy~skupina_prs(c48)~exportMPVNET~PID~fakturace~druh_spoje~sap_ucetni_okruh~sap_activita~sap_klient~sap_kontrakt~sap_zakaznik~sap_depo~exportTMAPY~dopravni_obsluznost~uzemni_celek~sap_wbsid 
 ;;//    						  (dopravni_obsluznost  - 1 - ZDO / 2 - ODO / 3 - KOM)
 ;;//    						  (uzemni_celek - oblast NUTS3)
 ;;//                                1             2                   3                  4                  5                 6                 7              8                 9          10                 11      12     13      14         15               16            17          18          19          20        21        22                  23            24
 ;;//    06 = typ autobusu      = popis~priznak autobus~priznak prives
 ;;//                               1           2               3
 ;;//    07 = emaily,objednavek =
 ;;//    08 = zpusob platby     = popis
 ;;//    09 = banka             =
 ;;//    10 = typy vleku        =
 ;;//    11 = poplatky SJ,OBJ   =
 ;;//                              1             2                      3              4                             5
 ;;//         id,idd)			=popis~je univerzalni(0 ne / 1 ano)~dan.index~je soucast prepravy (0 ne / 1 ano)~mozny rozpis po statech pro zahr.dph (0 ne / 1 ano)
 ;;//    12 = staty             = popis~blokovan(0/1)~sazbaDph~limitKm
 ;;//    13 = blo(okresy)       = popis
 ;;//    14 = sazby dle poc.os. = popis~sazbaKm~sazbaKmNeobs~sazba15minCek~sazba15minVyk~sazbaKmPrives (id polozky je pocet osob do)
 ;;//    15 = pravidlaDotNedot  = hrlPlatiOd~platnost(let)
 ;;//    	       out("arr",id)= hrlPlatiOd~platnost(let)
 ;;//              out("arr",id,"col",1,"prs")=prs~prs~...
 ;;//              out("arr",id,"col",2,"prs")=prs~prs~...
 ;;//    18 = informace			= informace
 ;;//     		   out("arr",id)=id
 ;;//    19 = id				=
 ;;//              out("arr",id,idrow)=text
 ;;//                               1    2     3    4   5    6      7                8           9        10        11       	12
 ;;//    20 = grafikon lidi     = popis~jedn~odpr~fond~plac~kdy~auto.dop.SVO,SON~auto.dop.NOC~stravenky~cas od-do~zap.presc~povinna_poznamka
 ;;// 							  popis  = popis polozky
 ;;//		 					  jedn   = 1=hod,2=Kc,3=vycpavka
 ;;// 							  odpr   = 1=ano
 ;;// 							  fond   = 1=ano
 ;;// 							  plac   = 0=nepocitat,1=prumer,2=tarif,3=hod.sazba,4=zaskol,5=nocni,6=special UL,7=snizena sazba,8=cekani,9=del.smena - ciselnik 24
 ;;// 							  kdy    = 0=vzdy,1=vsedni,2=sone,3=svatky,4=nenabizet,5=PoÚtStČtPá - ciselnik 25
 ;;//                auto.dopocet SON,SVO= 1=ano / 0 ne
 ;;//                    auto.dopocet NOC= 1=ano / 0 ne
 ;;//                  narok na stravenky= 1=ano / 0 ne
 ;;//                   zadavat cas od-do= 1=ano / 0 ne
 ;;//                   		zap.presc= 1=ano (zapocitat cinnost pro vyhodnoceni prescasu, musi byt hodinova + od-do)
 ;;//					 povinna_poznamka= 1=ano / 0 ne
 ;;//                  
 ;;//    21 = grafikon aut      = popis~jedn~kdy
 ;;//                             jedn  = 1=hod,2=Kc,3=vycpavka
 ;;//							  kdy   = 0 vzdy / 4 nikdy
 ;;//    22 = rez. km pro dok   = popis~zkratka 
 ;;//    23 = pol. pro předkon. = popis~priznakVnitroFakt 0/1 + dalsi strom
 ;;//    24 = zpusob vypoctu mzdy pro grafikon ridicu = popis
 ;;//    25 = kdy nabizet polozku grafikonu ridice= popis
 ;;//							   1   2      3      4      5  6      7
 ;;//    26 = nepr.vykony(DZVA) = cas~popis1~casklo~popis2~kc~kcklou~nabizet
 ;;//                             cas	 = normovany cas
 ;;// 							  popis1 = popis polozky dlouhy
 ;;//							  casklo = normovany cas pro kloubovy autobus
 ;;//		 					  popis2 = popis polozky kratky
 ;;//		 					  kc     = normovane kc
 ;;//		 					  kcklou = normovane kc pro kloubovy autobus
 ;;//                 			  nabizet= nabizet pri uznavani dokladu (0/1)  
 ;;//    27 = pravidla pro vypocet tuzemskych diet
 ;;//         					  id=dobaOd(mm)
 ;;//							  val=dobaDo(mm)~dietyKc~kraceni%~dietyKcLimit(pro vypocet nadlimitnich diet)
 ;;//    29 = cil zajezdu		  id=cil zajezdu, val=""
 ;;//    36 = prejezdy			  id=idzastod~idzastdo (je-li zast lokalni, je idzast=id/L) val=km~doba(min)
 ;;//    40 = cinnosti pro porizovani DZVA
 ;;//                             id=popis~nabizet(0/1)
 ;;//    43 = stupne pro odmenovani JBN
 ;;//							  id)=km~let~kc
 ;;//    48 = skupiny prepravnich systemu
 ;;//                             id)=popis
 ;;//    52 = pravidla pro zahraniční diety 
 ;;//                             id)=popis~CZK~EUR~CHF~GBP
 ;;//    53 = uzemni celek (pro PRS - drive jako oblast)
 ;;//                             id)=popis
 ;;// idcis = id ciselniku:
 ;;// 	dza - druh zajezdu ..... popis:popisprt:prirazkaPhm:koncovyStat:koncovyStatPopis:prs:predkontace:dph
 ;;// 	tpr - typ prepravce .... popis:popisprt:sazbaKm:sazbaCek:sazbaProv:sazbaKmPrives:mzdovaPref
 ;;// 	prs - prepravni system . popis:prav/neprav:nedot/dotov:proVse/Dzva/Sj:aktivni/zrusen
 ;;//   nud - normovana udrzba . cas:popis:casKlou:popisprt:Kc:KcKlou
 ;;//   stt - staty ............ popis (! id musi mit *)
 ;;//   zpl - zpusob platby..... popis
 ;;//   tdi - tuzemske diety ... idpol=mmod veta=mmdo:dieKc:kraceni%
 ;;//
 ;;
err s $zt="" k out q "1~"_$ze_"/"_$tr($g(err),"~","/")
err1 s $zt="" q ""
]]></Routine>


<Routine name="OBapiEDConst" type="INT" languagemode="0" timestamp="62374,51887"><![CDATA[
OBapiEDConst
 // konstatnty
 // -------------
gDia()
 // $$gDia() - vrati diakr. mod programu 3 - latin, 8 unicode
 //--------------------------------------------------------------------------
 n dia s dia=3 s:$a($c(256))=256 dia=8 q dia
qsj()
 // $$qsj() - vrati qsj (posun cisla dokladu pro sj)
 //--------------------------------------------------------------------------
 q 100000
gCatR(nmsp)
 // $$gCatR(nmsp) - vrati kategorii ridicu
 // -------------------------------------------------------------------------
 n val
 s val=11 s:$g(^[nmsp]OI("KATEGORIE-RIDICI")) val=$g(^[nmsp]OI("KATEGORIE-RIDICI"))
 q val
gCatP(nmsp)
 // $$gCatP(nmsp) - vrati kategorii pruvodcich
 // -------------------------------------------------------------------------
 n val
 s val=21
 s:$g(^[nmsp]OI("KATEGORIE-PRUVODCI")) val=$g(^[nmsp]OI("KATEGORIE-PRUVODCI"))
 q val
 /*
gCatRP(idfa,nmsp,in,out)
 // $$gCatRP(idfa,nmsp,in,.out) - vrati kategorie ridicu a pruvodcich
 // out("arr",1,kat)=1 ridic / 2 pruvodci
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 f id=2,1 d
 .k arr s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,id,.arr) zt:+err "merr" s err=""
 .s ka="" f  s ka=$o(arr("KA",ka)) q:ka=""  d
 ..s out("arr",1,ka)=id
 q
 */
begNight()
 // zacatek noci v minutach
 q 1320
endNight()
 // zacatek noci v minutach
 q 360
]]></Routine>


<Routine name="OBapiEDDS" type="INT" languagemode="0" timestamp="65164,38558.886745"><![CDATA[
OBapiEDDS q
go
 s arri("par",1)=1
 s arri("par",2)=1
 w $$gDataDS^OBapiEDDS("VS_CSAD","USER","201605","^||w",.arri,.arro)
 q
go1doc
 s idfa="VS_CSAD" s nmsp="USER" s zp=1310 s rrmm=1605 s doc=81
 //
 s qsj=$$qsj^OBapiED()
 s cglbOS="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @cglbOS
 s cglbRZ="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @cglbRZ
 s dglbDC="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @dglbDC
 //
 s hrlbeg=$$gminhrlrrmm^OBapiED(rrmm)
 s hrlend=$$gmaxhrlrrmm^OBapiED(rrmm)
 //
 // nastaveni pro prepravni systemy
 k arrprsset s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.arrprsset) zt:+err "merr" s err=""
 // obecne nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // mzdove nastaveni
 k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr" s err=""
 //
 k arrdoc
 s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""				//data dzva
 //nacteni zakladnich ukazatelu z dokladu do globalu
 //@dglbDC@("mu",iduk,idkl)=km/mm, kde idkl=$lb(linka,dspds,tykmds,ps)
 //iduk=KM,KMT,KMO,KMN,HODJIZ,HODMA,HODNC,HODCEK,HODVY
 s err=$$mkDtDzTur^OBapiEDDS1(idfa,nmsp,zp,rrmm,doc,.arrset,.arrmzd,dglbDC,.arrdoc,.arrprsset)
 zw @dglbDC
 q
gDataDS(idfa,nmsp,rrrrmm,glb,in,out)
 //@glb@(idfa,rrrrmm,spz,"1",dsp,ps)=km
 //@glb@(idfa,rrrrmm,spz,"2",dsp,ps)=phm
 //@glb@(idfa,rrrrmm,spz,"3",dsp,ps)=nphm
 //@glb@(idfa,rrrrmm,spz,"4",dsp,ps)=kmt
 n (idfa,nmsp,rrrrmm,glb,in,out)
 k out s err="" s $zt="err"
 //pamet
 i $zs<262144 s $zs=262144
 //=====
 s delDS=$g(in("par",1))  //mazani v DS 
 s fillDS=$g(in("par",2)) //plneni DS
 s idfaDS=$g(in("par",3)) //idfa, kam zapisovat do DS, pokud neni, pouziju idfa
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(rrrrmm)="" s err="rrrrmm=" zt "merr"
 i $g(idfaDS)="" s idfaDS=idfa
 //
 s qsj=$$qsj^OBapiED()
 s cglbOS="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @cglbOS
 s cglbRZ="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @cglbRZ
 s dglbDC="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @dglbDC
 s rrmm=rrrrmm#10000
 s hrlbeg=$$gminhrlrrmm^OBapiED(rrmm)
 s hrlend=$$gmaxhrlrrmm^OBapiED(rrmm)
 // kill napoctoveho globalu
 i $g(glb)'="" k @glb@(idfa,rrrrmm)
 // nove podilovani konverzni tabulka pro transformaci ns dle prs
 k arrALVAPodilTBNS
 i ##class(ALVA.DSPODILOVANI.ApiPS).IsEnabled(idfa,0) d 
 .k err s err=""
 .d ##class(ALVA.DSPODILOVANI.ApiPS).GetMinorNsList(.err,idfa,"",.arrALVAPodilTBNS,0,1)
 .zt:$g(err)'="" "merr" s err=""
 // nastaveni pro prepravni systemy
 k arrprsset s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.arrprsset) zt:+err "merr" s err=""
 // obecne nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // mzdove nastaveni
 k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr" s err=""
 // vymazani dokladu pred prevodem
 i delDS d
 .f id=11,12,25,106 d 
 ..s err="" d ##class(ALVA.DS.MLAPI).DeleteDocuments(.err,idfaDS,rrrrmm,"AD",id) zt:$g(err)'="" "merr" s err=""
 ..//vymazu i aktualni firmu, aby se data nedublovala 
 ..i idfaDS'=idfa s err="" d ##class(ALVA.DS.MLAPI).DeleteDocuments(.err,idfa,rrrrmm,"AD",id) zt:$g(err)'="" "merr" s err=""
 // kill pole pro podilovani phm, km, kmo, kmn a evidencni dny
 k phmarr k prsarr k prsarrkmo k prsarrkmn k evidarr k arrcislin
 // prevod dzva
 k arri,wrk
 s arri("rrmm",rrmm)=""
 s arri("sta",1)=""
 s arri("sta",2)=""
 s arri("par",1)=0
 s err=$$lDz^OBapiED(idfa,nmsp,.arri,.wrk) zt:err "merr"
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ..k arrdoc
 ..s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""				//data dzva
 ..//nacteni zakladnich ukazatelu z dokladu do globalu
 ..//@dglbDC@("mu",iduk,idkl)=km/mm, kde idkl=$lb(linka,dspds,tykmds,ps)
 ..//iduk=KM,KMT,KMO,KMN,HODJIZ,HODMA,HODNC,HODCEK,HODVY
 ..s err=$$mkDtDzTur^OBapiEDDS1(idfa,nmsp,zp,rrmm,doc,.arrset,.arrmzd,dglbDC,.arrdoc,.arrprsset) zt:+err "merr" s err=""
 ..//===============
 ..//data dokladu DS
 ..//=============== 
 ..k arrdocds
 ..s arrdocds("IdFa")=idfaDS
 ..s arrdocds("Agenda")="AD"
 ..s arrdocds("RRRRMM")=rrrrmm
 ..s arrdocds("Provoz")=(zp#100)
 ..s arrdocds("Typ")=11
 ..s arrdocds("Cislo")=doc
 ..k tmparr
 ..d mkDzva^OBapiEDDS1(idfa,nmsp,zp,rrmm,doc,cglbOS,.arrdoc,.arrdocds,.arrALVAPodilTBNS,.arrprsset,.tmparr,.arrset,cglbRZ,dglbDC)
 ..k @dglbDC@("ms")
 ..i fillDS s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 ..d npphm(.tmparr,.phmarr) d npprs(.tmparr,.prsarr,"KM") d npprs(.tmparr,.prsarrkmo,"KMO") d npprs(.tmparr,.prsarrkmn,"KMN")
 ..k tmparr("KMO") k tmparr("KMN")
 ..s hrldocbeg=$g(arrdoc("dta",4))
 ..s hrldocend=(hrldocbeg+$g(arrdoc("dta",14))-1)
 ..s numdocday=(hrldocend-hrldocbeg)+1 s:numdocday<1 numdocday=1
 ..s:hrldocend>hrlend hrldocend=hrlend
 ..d npevid(hrldocbeg,hrldocend,numdocday,.arrALVAPodilTBNS,.arrprsset,.tmparr,.evidarr)
 ..d npglbkm(idfa,rrrrmm,glb,.tmparr)
 ..//ciselnik linek
 ..s cas="" f  s cas=$o(arrdoc("arr","tur",cas)) q:cas=""  d
 ...i $g(arrdoc("arr","tur",cas,"dta",2))=3 d
 ....s lin=+$g(arrdoc("arr","tur",cas,"dta",5))
 ....i lin s arrcislin(lin)=""
 //zapis ciselniku linek do firmy pro DS
 k arrcisl
 s err=$$gCis^MlJFapiCi(idfa,$$gFaNmsp^MlJFapi(),"","AD","LIN","",.arrcisl) zt:+err "merr" s err=""
 s arrcisl("dta",1)="Linky"
 s arrcisl("dta",2)="T"
 s arrcisl("dta",3)=0
 s arrcisl("arr",0)="0~neurčeno"
 s lin="" f  s lin=$o(arrcislin(lin)) q:lin=""  d
 .k arrcisl("arr",lin)
 .s arrcisl("arr",lin)=lin_"~"_lin
 s err=$$sCis^MlJFapiCi(idfa,$$gFaNmsp^MlJFapi(),"","AD","LIN",.arrcisl,"") zt:+err "merr" s err=""
 k arrcislin,arrcisl
 k ^CacheTempJB(wrk)
 // prevod sj
 k arri,wrk
 s arri("rrmm",rrmm)="" s arri("sta",1)="" s arri("sta",2)="" s arri("par",1)=0
 s err=$$lSj^OBapiED(idfa,nmsp,.arri,.wrk) zt:err "merr"
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ..k arrdoc s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 ..k arrdocds
 ..s arrdocds("IdFa")=idfaDS
 ..s arrdocds("Agenda")="AD"
 ..s arrdocds("RRRRMM")=rrrrmm
 ..s arrdocds("Provoz")=(zp#100)
 ..s arrdocds("Typ")=12
 ..s arrdocds("Cislo")=(doc-qsj)
 ..k tmparr
 ..d mkSj^OBapiEDDS1(idfa,nmsp,zp,rrmm,doc,cglbOS,.arrdoc,.arrdocds,.arrALVAPodilTBNS,.arrprsset,.tmparr,.arrset,cglbRZ,dglbDC)
 ..i fillDS s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 ..d npphm(.tmparr,.phmarr) d npprs(.tmparr,.prsarr,"KM") d npprs(.tmparr,.prsarrkmo,"KMO") d npprs(.tmparr,.prsarrkmn,"KMN")
 ..s hrldocbeg=$g(arrdoc("dta",6))
 ..s hrldocend=$g(arrdoc("dta",7)) s:'hrldocend hrldocend=hrldocbeg
 ..s numdocday=(hrldocend-hrldocbeg)+1 s:numdocday<1 numdocday=1
 ..s:hrldocbeg<hrlbeg hrldocbeg=hrlbeg
 ..s:hrldocend>hrlend hrldocend=hrlend
 ..d npevid(hrldocbeg,hrldocend,numdocday,.arrALVAPodilTBNS,.arrprsset,.tmparr,.evidarr)
 ..d npglbkm(idfa,rrrrmm,glb,.tmparr)
 // ===========================
 // data pro mzdovy rozpocet OS
 // =========================== 
 i fillDS d
 .s os="" f  s os=$o(@dglbDC@("os",os)) q:os=""  d
 ..k arrdocds
 ..s arrdocds("IdFa")=idfaDS
 ..s arrdocds("Agenda")="AD"
 ..s arrdocds("RRRRMM")=rrrrmm
 ..s arrdocds("Typ")=106
 ..s arrdocds("Cislo")=os
 ..s iddoc="" f  s iddoc=$o(@dglbDC@("os",os,iddoc)) q:iddoc=""  d
 ...s ps="" f  s ps=$o(@dglbDC@("os",os,iddoc,ps)) q:ps=""  d
 ....s iddp="" f  s iddp=$o(@dglbDC@("os",os,iddoc,ps,iddp)) q:iddp=""  d
 .....s val=$g(@dglbDC@("os",os,iddoc,ps,iddp))
 .....q:'val
 .....s arrdocds("Dta","S_TDOC~"_iddoc,"S_PS~"_ps,"U_"_iddp_"~"_+val)=""
 ..s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 k @dglbDC
 // ===========
 // cerpani phm
 // ===========
 d npglbph(idfa,rrrrmm,glb,.phmarr)
 i fillDS d
 .k arrdocds
 .d mkphm(idfa,.phmarr,.arrdocds,.arrALVAPodilTBNS,.arrprsset) k phmarr
 .s arrdocds("IdFa")=idfaDS
 .s arrdocds("Agenda")="AD"
 .s arrdocds("RRRRMM")=rrrrmm
 .s arrdocds("Trida")=$znspace
 .s arrdocds("Typ")=11
 .s arrdocds("Cislo")="spzphm"_"_"_$znspace
 .s arrdocds("I","I_DATUM")=$$nd^OBapiED($$gmaxhrlrrmm^OBapiED(rrrrmm),0)
 .s arrdocds("I","I_TEXT")="podíl phm na přs za "_rrrrmm
 .i fillDS s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 // =====================
 // dny v provozu, opravy
 // =====================
 // napocet jizdy z presahujicich dokladu minuleho mesice
 // =====================================================
 k arri,wrk s arri("par",1)=1
 s err=$$lGrfRz^OBapiED(idfa,nmsp,hrlbeg-20,hrlbeg,.arri,.wrk)
 s dz="" f  s dz=$o(^CacheTempJB(wrk,dz)) q:dz=""  d
 .s spz="" f  s spz=$o(^CacheTempJB(wrk,dz,spz)) q:spz=""  d
 ..s quit=0
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,spz,hrl)) q:hrl=""  d  q:quit
 ...s idgrf="" f  s idgrf=$o(^CacheTempJB(wrk,dz,spz,hrl,idgrf)) q:(idgrf="")!(idgrf?.a)  d  q:quit
 ....k arrgrf s err=$$gGrfRz^OBapiED(idfa,nmsp,spz,hrl,idgrf,"",.arrgrf)
 ....s hrldocbeg=hrl
 ....s hrldocend=$g(arrgrf("dta",5))
 ....s numdocday=(hrldocend-hrldocbeg)+1 s:numdocday<1 numdocday=1
 ....i hrldocend<hrlbeg s quit=1 q
 ....s zpdoc=$g(arrgrf("dta",7))
 ....s rrmmdoc=$g(arrgrf("dta",6))
 ....//dzva
 ....i idgrf<qsj d
 .....k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zpdoc,rrmmdoc,idgrf,"",.arrdoc) zt:+err "merr" s err=""
 .....s err=$$mkDtDzTur^OBapiEDDS1(idfa,nmsp,zp,rrmm,doc,.arrset,.arrmzd,dglbDC,.arrdoc,.arrprsset)
 .....k tmparr
 .....d mkDzva^OBapiEDDS1(idfa,nmsp,zpdoc,rrmmdoc,idgrf,cglbOS,.arrdoc,"",.arrALVAPodilTBNS,.arrprsset,.tmparr,.arrset,cglbRZ,dglbDC)
 .....d npevid(hrldocbeg,hrldocend,numdocday,.arrALVAPodilTBNS,.arrprsset,.tmparr,.evidarr)
 ....// sj
 ....i idgrf>qsj d
 .....k arrdoc s err=$$gSj^OBapiED(idfa,nmsp,zpdoc,rrmmdoc,idgrf,"",.arrdoc) zt:+err "merr" s err=""
 .....k tmparr
 .....d mkSj^OBapiEDDS1(idfa,nmsp,zpdoc,rrmmdoc,idgrf,cglbOS,.arrdoc,"",.arrALVAPodilTBNS,.arrprsset,.tmparr,.arrset,cglbRZ,dglbDC)
 .....d npevid(hrldocbeg,hrldocend,numdocday,.arrALVAPodilTBNS,.arrprsset,.tmparr,.evidarr)
 k ^CacheTempJB(wrk)
 // =============
 // napocet oprav
 // =============
 // prepravni systemy s opravou
 k arrcis5 s err=$$gCis^OBapiED(idfa,nmsp,5,"",.arrcis5) zt:+err "merr" s err=""
 //v ciselniku prs ponecham prs pro opravu
 s id="" f {
 	s id=$o(arrcis5("arr",id)) i id="" q
 	i '$p($g(arrcis5("arr",id)),"~",9) {
	 	k arrcis5("arr",id)
 	} 	 
 }
 // ciselnik grafikonovych polozek
 k arrcis21 s err=$$gCis^OBapiED(idfa,nmsp,21,"",.arrcis21) zt:+err "merr" s err=""
 // =================
 // vyhodnoceni oprav
 // =================
 k arri,wrk
 //hledame vse
 s arri("par",1)=1
 s err=$$lGrfRz^OBapiED(idfa,nmsp,hrlbeg,hrlend,.arri,.wrk) zt:+err "merr" s err=""
 s dz="" f  s dz=$o(^CacheTempJB(wrk,dz)) q:dz=""  d
 .s spz="" f  s spz=$o(^CacheTempJB(wrk,dz,spz)) q:spz=""  d
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,spz,hrl)) q:hrl=""  d
 ...s ns=+$$VehicleGetNs^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,+hrl)
 ...s spzhrl=spz s val=$$VehicleGetRz^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,hrl) i (val'=-1)&(val'=-2) s spzhrl=val
 ...s idgrf="" f  s idgrf=$o(^CacheTempJB(wrk,dz,spz,hrl,idgrf)) q:idgrf=""  d
 ....// grafikonova polozka
 ....i $d(arrcis21("arr",idgrf)) d
 .....// oprava, dilna
 .....i $e(idgrf,1,3)="DIL" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="BOP" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="TOV" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="TPA" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="TPB" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="TPC" s evidarr(spzhrl,hrl,2,ns)="" q 
 .....i $e(idgrf,1,3)="HOP" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="SOP" s evidarr(spzhrl,hrl,2,ns)="" q
 .....i $e(idgrf,1,3)="PUD" s evidarr(spzhrl,hrl,2,ns)="" q
 ....//jsou def. PRS s opravou a polozka je doklad 
 ....i ($o(arrcis5("arr",""))'="") i '$d(arrcis21("arr",idgrf)) d
 .....//dzva
 .....i idgrf<qsj d
 ......k arrgrf s err=$$gGrfRz^OBapiED(idfa,nmsp,spz,hrl,idgrf,"",.arrgrf)
 ......s zpdoc=$g(arrgrf("dta",7))
 ......s rrmmdoc=$g(arrgrf("dta",6))
 ......s isdocopr=0
 ......k tmparrdoc s err=$$gDzRzDta^OBapiED(idfa,nmsp,zpdoc,rrmmdoc,idgrf,"",.tmparrdoc)
 ......i $o(tmparrdoc("arr",4,""))'="" s isdocopr=1
 ......s idprs="" f  s idprs=$o(tmparrdoc("arr",4,idprs)) q:(idprs="")!(isdocopr=0)  d
 .......//idprs neni v ciselniku oprav - neni oprava
 .......i '$d(arrcis5("arr",idprs)) s isdocopr=0 q
 ......i isdocopr s evidarr(spzhrl,hrl,2,ns)=""
 k ^CacheTempJB(wrk)
 //prepocet na dny a spz
 k arr
 s spz="" f  s spz=$o(evidarr(spz)) q:spz=""  d
 .f hrl=hrlbeg:1:hrlend d
 ..// dny v provozu, pokud jsou, nepocitaji se dny v oprave
 ..i $d(evidarr(spz,hrl,1)) d  q
 ...k tmparr k srcarr s tmparr=1 m srcarr=evidarr(spz,hrl,1)
 ...s err=$$rzpArr^OBapiED(.tmparr,.srcarr,2)
 ...s id="" f  s id=$o(tmparr(id)) q:id=""  s:+$g(tmparr(id)) arr(spz,id,1)=$g(arr(spz,id,1))+$g(tmparr(id))
 ..// dny v oprave
 ..i $d(evidarr(spz,hrl,2)) d
 ...s ns="" f  s ns=$o(evidarr(spz,hrl,2,ns)) q:ns=""  s arr(spz,ns,2)=+$g(arr(spz,ns,2))+1
 k evidarr
 //zapis do ds
 i fillDS d
 .k arrdocds 
 .s arrdocds("IdFa")=idfaDS
 .s arrdocds("Agenda")="AD"
 .s arrdocds("RRRRMM")=rrrrmm
 .s arrdocds("Trida")=$znspace
 .s arrdocds("Typ")=25
 .s spz="" f  s spz=$o(arr(spz)) q:spz=""  d
 ..s arrdocds("Cislo")=spz k arrdocds("Dta") k arrdocds("I")
 ..s id="" f  s id=$o(arr(spz,id)) q:id=""  d
 ...i $d(arr(spz,id,1)) d
 ....s ns=$p(id,"|",1) s dsp=$p(id,"|",2) s ps=$p(id,"|",3)
 ....s arrdocds("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_DNYPROV~"_+$g(arr(spz,id,1)))=""
 ...i $d(arr(spz,id,2)) d
 ....s ns=id
 ....s arrdocds("Dta","S_NS~"_ns,"S_SPZ~"_spz,"U_DNYOPR~"_+$g(arr(spz,id,2)))=""
 ...s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 // =========================================
 // rozpocitani prs podle ostatnich - rezijni
 // =========================================
 i fillDS d
 .//prvni rozpocet
 .s rpcprs=$g(arrprsset("arr",1,7))
 .i rpcprs'="" f rpcprscnt=1:1:$l(rpcprs,"~") s rpcprsitm=$p(rpcprs,"~",rpcprscnt) d:rpcprsitm'="" 
 ..//rozpocet km, kmo, kmn
 ..k arrdocds
 ..d mkrpcprs(idfa,rpcprsitm,$g(arrprsset("arr",1,8)),.prsarr,.arrdocds,.arrALVAPodilTBNS,.arrprsset,.prsarrkmo,.prsarrkmn)
 ..s arrdocds("IdFa")=idfaDS
 ..s arrdocds("Agenda")="AD"
 ..s arrdocds("RRRRMM")=rrrrmm
 ..s arrdocds("Trida")=$znspace
 ..s arrdocds("Typ")=11
 ..s arrdocds("Cislo")="spzrps"_"_"_rpcprsitm_"_1_"_$znspace
 ..s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 .//druhy rozpocet
 .s rpcprs=$g(arrprsset("arr",1,9))
 .i rpcprs'="" f rpcprscnt=1:1:$l(rpcprs,"~") s rpcprsitm=$p(rpcprs,"~",rpcprscnt) d:rpcprsitm'="" 
 ..//rozpocet km, kmo, kmn
 ..k arrdocds
 ..d mkrpcprs(idfa,rpcprsitm,$g(arrprsset("arr",1,10)),.prsarr,.arrdocds,.arrALVAPodilTBNS,.arrprsset,.prsarrkmo,.prsarrkmn)
 ..s arrdocds("IdFa")=idfaDS
 ..s arrdocds("Agenda")="AD"
 ..s arrdocds("RRRRMM")=rrrrmm
 ..s arrdocds("Trida")=$znspace
 ..s arrdocds("Typ")=11
 ..s arrdocds("Cislo")="spzrps"_"_"_rpcprsitm_"_2_"_$znspace
 ..s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 k prsarr k prsarrkmo k prsarrkmn
 // ====================
 // km na spz (sluzebni)
 // ====================
 i fillDS d
 .k arri,wrk s arri("rrrrmm",rrrrmm)=""
 .s err=$$lUsrDocRz^OBapiED(idfa,nmsp,.arri,.wrk) zt:+err "merr" s err=""
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s rz="" f  s rz=$o(^CacheTempJB(wrk,zp,rrrrmm,rz)) q:rz=""  d
 ...s drhphn=##class(ALVA.VOZIDLA.MLAPI).VehicleGetAVal($$GetSystemDB^ALVAVOZIDLAapiC(),rz,15) i 'drhphn s drhphn=1  //1 N / 2 P / 3 B
 ...k arrdoc s err=$$gUsrDocRz^OBapiED(idfa,nmsp,zp,rrrrmm,rz,"",.arrdoc) zt:+err "merr" s err=""
 ...s ph=+$g(arrdoc("dta",3))
 ...s phnafta="" i drhphn=1 s phnafta=ph
 ...s phplyn="" i drhphn=2 s phplyn=ph
 ...s phbenzin="" i drhphn=3 s phbenzin=ph
 ...k arrdocds
 ...s arrdocds("IdFa")=idfaDS
 ...s arrdocds("Agenda")="AD"
 ...s arrdocds("RRRRMM")=rrrrmm
 ...s arrdocds("Provoz")=zp#100
 ...s arrdocds("Typ")=11
 ...s arrdocds("Cislo")=rz
 ...s arrdocds("Dta","S_NS~"_$g(arrdoc("dta",1)),"S_SPZ~"_rz,"S_PS~"_0,"U_KM~"_+$g(arrdoc("dta",2)))=""
 ...s arrdocds("Dta","S_NS~"_$g(arrdoc("dta",1)),"S_SPZ~"_rz,"S_PS~"_0,"U_PHM~"_ph)=""
 ...s arrdocds("Dta","S_NS~"_$g(arrdoc("dta",1)),"S_SPZ~"_rz,"S_PS~"_0,"U_PHMN~"_phnafta)=""
 ...s arrdocds("Dta","S_NS~"_$g(arrdoc("dta",1)),"S_SPZ~"_rz,"S_PS~"_0,"U_PHMP~"_phplyn)=""
 ...s arrdocds("Dta","S_NS~"_$g(arrdoc("dta",1)),"S_SPZ~"_rz,"S_PS~"_0,"U_PHMB~"_phbenzin)=""
 ...s err="" d ##class(ALVA.DS.MLAPI).AddDocument(.err,idfaDS,.arrdocds,"") zt:$g(err)'="" "merr" s err=""
 k @cglbOS
 k @cglbRZ
 k @dglbDC
 q 0
npphm(darr,parr)
 n (darr,parr)
 // napocet cerpani pro souhrnny doklad
 s spz=$g(darr("SPZ")) s ns=$g(darr("NS")) i spz="" q
 s $p(parr(spz),"~",1)=$p($g(parr(spz)),"~",1)+$g(darr("PHM"))		//suma ph
 s $p(parr(spz),"~",2)=$p($g(parr(spz)),"~",2)+$g(darr("PHMNOR"))	//norma ph
 s $p(parr(spz),"~",3)=$p($g(parr(spz)),"~",3)+$g(darr("PHMN"))		//nafta
 s $p(parr(spz),"~",4)=$p($g(parr(spz)),"~",4)+$g(darr("PHMP")) 	//plyn
 s $p(parr(spz),"~",5)=$p($g(parr(spz)),"~",5)+$g(darr("PHMB"))		//benzin
 s $p(parr(spz),"~",6)=$p($g(parr(spz)),"~",6)+$g(darr("PHMES")) 	//fame/b100
 s $p(parr(spz),"~",7)=$p($g(parr(spz)),"~",7)+$g(darr("PHME"))		//b30
 s $p(parr(spz),"~",8)=$p($g(parr(spz)),"~",8)+$g(darr("PHMT"))		//topeni
 s $p(parr(spz),"~",9)=$p($g(parr(spz)),"~",9)+$g(darr("PHMA"))		//adblue
 s li="" f  s li=$o(darr("KM",li)) q:li=""  d
 .s dsp="" f  s dsp=$o(darr("KM",li,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(darr("KM",li,dsp,ps)) q:ps=""  d
 ...s km=$g(darr("KM",li,dsp,ps))
 ...s parr(spz,(ns_"~"_dsp_"~"_ps))=$g(parr(spz,(ns_"~"_dsp_"~"_ps)))+km
 q
npprs(darr,parr,iKM)
 n (darr,parr,iKM)
 // napocet km dle prs pro rozpocitani rezijnich km
 s spz=$g(darr("SPZ")) i spz="" q
 s ns=$g(darr("NS")) i ns="" q
 s li="" f  s li=$o(darr(iKM,li)) q:li=""  d
 .s dsp="" f  s dsp=$o(darr(iKM,li,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(darr(iKM,li,dsp,ps)) q:ps=""  d
 ...s km=$g(darr(iKM,li,dsp,ps))
 ...;; tabulka podle spz
 ...s parr("spz",spz,ns,ps)=$g(parr("spz",spz,ns,ps))+km
 ...s parr("spz",spz,ns,ps,dsp)=$g(parr("spz",spz,ns,ps,dsp))+km
 ...;; tabulka podle ns
 ...s parr("ns",ns,ps)=$g(parr("ns",ns,ps))+km
 ...s parr("ns",ns,ps,dsp)=$g(parr("ns",ns,ps,dsp))+km
 ...//km podle typu km
 ...s tykmds="" f  s tykmds=$o(darr(iKM,li,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=$g(darr(iKM,li,dsp,ps,tykmds))
 ....//tabuka podle spz
 ....s parr("spz",spz,ns,ps,dsp,tykmds)=$g(parr("spz",spz,ns,ps,dsp,tykmds))+km
 ....//tabulka podle ns
 ....s parr("ns",ns,ps,dsp,tykmds)=$g(parr("ns",ns,ps,dsp,tykmds))+km
 q
mkphm(idfa,parr,arr,arrALVAPodilTBNS,arrprsset)
 n (idfa,parr,arr,arrALVAPodilTBNS,arrprsset)
 // rozpocitani cerpani phm, struktura pro doklad
 k arr
 s spz="" f  s spz=$o(parr(spz)) q:spz=""  d
 .k ph s ph=$p($g(parr(spz)),"~",1)
 .k nor s nor=$p($g(parr(spz)),"~",2)
 .k phnafta s phnafta=$p($g(parr(spz)),"~",3)
 .k phplyn s phplyn=$p($g(parr(spz)),"~",4)
 .k phbenzin s phbenzin=$p($g(parr(spz)),"~",5)
 .k phfame s phfame=$p($g(parr(spz)),"~",6)
 .k phb30 s phb30=$p($g(parr(spz)),"~",7)
 .k phtop s phtop=$p($g(parr(spz)),"~",8)
 .k adblue s adblue=$p($g(parr(spz)),"~",9) 
 .//rozdeleni ukazatelu
 .k tmp m tmp=parr(spz)
 .i ph s err=$$rzpArr^OBapiED(.ph,.tmp,2)
 .i nor s err=$$rzpArr^OBapiED(.nor,.tmp,2)
 .i phnafta s err=$$rzpArr^OBapiED(.phnafta,.tmp,2)
 .i phplyn s err=$$rzpArr^OBapiED(.phplyn,.tmp,2)
 .i phbenzin s err=$$rzpArr^OBapiED(.phbenzin,.tmp,2)
 .i phfame s err=$$rzpArr^OBapiED(.phfame,.tmp,2)
 .i phb30 s err=$$rzpArr^OBapiED(.phb30,.tmp,2)
 .i phtop s err=$$rzpArr^OBapiED(.phtop,.tmp,2)
 .i adblue s err=$$rzpArr^OBapiED(.adblue,.tmp,2)
 .//zapis do pole pro DS
 .//suma ph
 .s ind="" f  s ind=$o(ph(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s ph=$g(ph(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHM~"_ph)=""
 .//norma
 .s ind="" f  s ind=$o(nor(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s nor=$g(nor(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMNOR~"_nor)=""
 .//nafta
 .s ind="" f  s ind=$o(phnafta(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phnafta=$g(phnafta(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMN~"_phnafta)=""
 .//plyn
 .s ind="" f  s ind=$o(phplyn(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phplyn=$g(phplyn(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMP~"_phplyn)=""
 .//benzin
 .s ind="" f  s ind=$o(phbenzin(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phbenzin=$g(phbenzin(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMB~"_phbenzin)=""
 .//fame/b100
 .s ind="" f  s ind=$o(phfame(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phfame=$g(phfame(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMES~"_phfame)=""
 .//b30
 .s ind="" f  s ind=$o(phb30(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phb30=$g(phb30(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHME~"_phb30)=""
 .//topeni
 .s ind="" f  s ind=$o(phtop(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s phtop=$g(phtop(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMT~"_phtop)=""
 .//adblue
 .s ind="" f  s ind=$o(adblue(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s adblue=$g(adblue(ind))
 ..i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_PHMA~"_adblue)=""
 q
npevid(hrldocbeg,hrldocend,numdocday,arrALVAPodilTBNS,arrprsset,tmparr,evidarr)
 n (hrldocbeg,hrldocend,numdocday,arrALVAPodilTBNS,arrprsset,tmparr,evidarr)
 s spz=$g(tmparr("SPZ"))
 f hrl=hrldocbeg:1:hrldocend d
 .s lin="" f  s lin=$o(tmparr("JI",lin)) q:lin=""  d
 ..s dsp="" f  s dsp=$o(tmparr("JI",lin,dsp)) q:dsp=""  d
 ...s ps="" f  s ps=$o(tmparr("JI",lin,dsp,ps)) q:ps=""  d
 ....s ji=$g(tmparr("JI",lin,dsp,ps))/numdocday
 ....// konverze ns
 ....s ns=$g(tmparr("NS"))
 ....i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s ns=$g(arrALVAPodilTBNS(ns,ps))
 ....s evidarr(spz,hrl,1,(ns_"|"_dsp_"|"_ps))=$g(evidarr(spz,hrl,1,(ns_"|"_dsp_"|"_ps)))+ji
 q
npglbkm(idfa,rrrrmm,glb,tmparr)
 n (idfa,rrrrmm,glb,tmparr)
 i $g(glb)="" q
 s spz=$g(tmparr("SPZ"))
 s val=$$VehicleGetRz^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,+$h)
 i (val'=-1)&(val'=-2) s spz=val
 s lin="" f  s lin=$o(tmparr("KM",lin)) q:lin=""  d
 .s dsp="" f  s dsp=$o(tmparr("KM",lin,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KM",lin,dsp,ps)) q:ps=""  d
 ...s @glb@(idfa,rrrrmm,spz,"1",dsp,ps)=$g(@glb@(idfa,rrrrmm,spz,"1",dsp,ps))+$g(tmparr("KM",lin,dsp,ps))
 s lin="" f  s lin=$o(tmparr("KMT",lin)) q:lin=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMT",lin,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMT",lin,dsp,ps)) q:ps=""  d
 ...s @glb@(idfa,rrrrmm,spz,"4",dsp,ps)=$g(@glb@(idfa,rrrrmm,spz,"4",dsp,ps))+$g(tmparr("KMT",lin,dsp,ps))
 q
npglbph(idfa,rrrrmm,glb,parr)
 n (idfa,rrrrmm,glb,parr)
 i $g(glb)="" q
 k arr
 s spz="" f  s spz=$o(parr(spz)) q:spz=""  d
 .k ph k nor s ph=$p($g(parr(spz)),"~",1) s nor=$p($g(parr(spz)),"~",2)
 .k tmp m tmp=parr(spz)
 .i ph s err=$$rzpArr^OBapiED(.ph,.tmp,0)
 .i nor s err=$$rzpArr^OBapiED(.nor,.tmp,0)
 .s ind="" f  s ind=$o(ph(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s ph=$g(ph(ind))
 ..s @glb@(idfa,rrrrmm,spz,"2",dsp,ps)=$g(@glb@(idfa,rrrrmm,spz,"2",dsp,ps))+ph
 .s ind="" f  s ind=$o(nor(ind)) q:ind=""  d
 ..s ns=$p(ind,"~",1) s dsp=$p(ind,"~",2) s ps=$p(ind,"~",3) s nor=$g(nor(ind))
 ..s @glb@(idfa,rrrrmm,spz,"3",dsp,ps)=$g(@glb@(idfa,rrrrmm,spz,"3",dsp,ps))+nor
 q
mkrpcprs(idfa,rpcprs,rpcprsd,parr,arr,arrALVAPodilTBNS,arrprsset,parrkmo,parrkmn)
 n (idfa,rpcprs,rpcprsd,parr,arr,arrALVAPodilTBNS,arrprsset,parrkmo,parrkmn)
 // km
 // rozpocitani prs=rpcprs
 // data dle SPZ - zdrojova + rozpoctova
 // 
 // parr("spz",spz,ns,prs)=sumaKm
 // parr("spz",spz,ns,prs,dsp)=sumaKm
 // parr("spz",spz,ns,prs,dsp,tykm)=sumaKm
 // 
 // parr("ns",ns,ps)=sumaKm
 // parr("ns",ns,ps,dsp)=sumaKm
 // parr("ns",ns,ps,dsp,tykm)=sumaKm
 // 
 // v poli parrkmo jsou km obsazene v poli parrkmn jsou km neobsazene,
 // struktura je stejna jako parr, rozpocitavaji se v pomeru km celk.
 //
 // tabulka, dle ceho to budu rozpocitavat - neni-li, pak na vse
 //
 k arrprsd
 s val=$g(rpcprsd)
 f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" arrprsd($p(val,"~",cnt))=""
 //rozpocet celkovych km
 k arr
 s spz="" f  s spz=$o(parr("spz",spz)) q:spz=""  d
 .s ns="" f  s ns=$o(parr("spz",spz,ns)) q:ns=""  d
 ..// spz nema prepravni system
 ..q:'$d(parr("spz",spz,ns,rpcprs))
 ..// =========================
 ..// prs je nulovy
 ..q:'+$g(parr("spz",spz,ns,rpcprs))
 ..// =============
 ..// kontrola, zda je jeste nejaky jiny prs na spz, na kterem se to bude rozpocitavat
 ..// urceni typu podilovani typpdl=1 dle ujetych km na spz / typpdl=2 dle ujetych km na ns
 ..s typpdl=""
 ..// nejdrive podle spz
 ..s cnt=0
 ..s prs="" f  s prs=$o(parr("spz",spz,ns,prs)) q:prs=""  d
 ...q:prs=rpcprs
 ...q:'+$g(parr("spz",spz,ns,prs))
 ...i $d(arrprsd) q:'$d(arrprsd(prs))
 ...s cnt=cnt+1
 ..i +cnt s typpdl=1
 ..// podle spz to nejde, zkusim to podle ns
 ..i 'cnt d
 ...s prs="" f  s prs=$o(parr("ns",ns,prs)) q:prs=""  d
 ....q:prs=rpcprs
 ....q:'+$g(parr("ns",ns,prs))
 ....i $d(arrprsd) q:'$d(arrprsd(prs))
 ....s cnt=cnt+1
 ...i +cnt s typpdl=2
 ..// cnt=0 nelze to rozpocitat 
 ..q:'cnt
 ..// ==============================================================================
 ..// km z rpcprs minusem
 ..s dsp="" f  s dsp=$o(parr("spz",spz,ns,rpcprs,dsp)) q:dsp=""  d
 ...s tykm="" f  s tykm=$o(parr("spz",spz,ns,rpcprs,dsp,tykm)) q:tykm=""  d
 ....s km=+$g(parr("spz",spz,ns,rpcprs,dsp,tykm)) s km=km*(-1)
 ....s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,rpcprs))'="" s newNS=$g(arrALVAPodilTBNS(ns,rpcprs))
 ....s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_rpcprs,"S_TYK~"_tykm,"U_KM"_"~"_km)=""
 ..// ===================
 ..// pomocne pole pro rozpocet
 ..k tmparr
 ..// podle spz
 ..i typpdl=1 d
 ...s prs="" f  s prs=$o(parr("spz",spz,ns,prs)) q:prs=""  d
 ....q:prs=rpcprs
 ....q:'+$g(parr("spz",spz,ns,prs))
 ....i $d(arrprsd) q:'$d(arrprsd(prs))
 ....s dsp="" f  s dsp=$o(parr("spz",spz,ns,prs,dsp)) q:dsp=""  d
 .....s tykm="" f  s tykm=$o(parr("spz",spz,ns,prs,dsp,tykm)) q:tykm=""  d
 ......s km=+$g(parr("spz",spz,ns,prs,dsp,tykm))
 ......//dsp transformuju na rezijni
 ......//pole rozpocet km 
 ......s ind=prs_"~"_((dsp\1)+.1)_"~"_tykm
 ......s tmparr(ind)=$g(tmparr(ind))+km
 ..// podle ns
 ..i typpdl=2 d
 ...s prs="" f  s prs=$o(parr("ns",ns,prs)) q:prs=""  d
 ....q:prs=rpcprs
 ....q:'+$g(parr("ns",ns,prs))
 ....i $d(arrprsd) q:'$d(arrprsd(prs))
 ....s dsp="" f  s dsp=$o(parr("ns",ns,prs,dsp)) q:dsp=""  d
 .....s tykm="" f  s tykm=$o(parr("ns",ns,prs,dsp,tykm)) q:tykm=""  d
 ......s km=+$g(parr("ns",ns,prs,dsp,tykm))
 ......// dsp transformuju na rezijni
 ......//pole pro rozpocet km 
 ......s ind=prs_"~"_((dsp\1)+.1)_"~"_tykm
 ......s tmparr(ind)=$g(tmparr(ind))+km
 ..// rozpocet
 ..k km s km=$g(parr("spz",spz,ns,rpcprs))
 ..s err=$$rzpArr^OBapiED(.km,.tmparr,1)
 ..// ========
 ..s ind="" f  s ind=$o(km(ind)) q:ind=""  d
 ...s km=$g(km(ind)) s ps=$p(ind,"~",1) s dsp=$p(ind,"~",2) s tykm=$p(ind,"~",3)
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykm,"U_KM"_"~"_km)=""
 ..//======================
 ..//rozpocet obsazenych km
 ..//======================
 ..d
 ...q:'$d(parrkmo("spz",spz,ns,rpcprs))
 ...// =========================
 ...// prs je nulovy
 ...q:'+$g(parrkmo("spz",spz,ns,rpcprs))
 ...// =============
 ...// km z rpcprs minusem
 ...s dsp="" f  s dsp=$o(parrkmo("spz",spz,ns,rpcprs,dsp)) q:dsp=""  d
 ....s tykm="" f  s tykm=$o(parrkmo("spz",spz,ns,rpcprs,dsp,tykm)) q:tykm=""  d
 .....s km=+$g(parrkmo("spz",spz,ns,rpcprs,dsp,tykm)) s km=km*(-1)
 .....s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,rpcprs))'="" s newNS=$g(arrALVAPodilTBNS(ns,rpcprs))
 .....s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_rpcprs,"S_TYK~"_tykm,"U_KMO"_"~"_km)=""
 ...// ===================
 ...// rozpocet
 ...k km s km=$g(parrkmo("spz",spz,ns,rpcprs))
 ...s err=$$rzpArr^OBapiED(.km,.tmparr,1)
 ...// ========
 ...s ind="" f  s ind=$o(km(ind)) q:ind=""  d
 ....s km=$g(km(ind)) s ps=$p(ind,"~",1) s dsp=$p(ind,"~",2) s tykm=$p(ind,"~",3)
 ....s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ....s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykm,"U_KMO"_"~"_km)=""
 ..//========================
 ..//rozpocet neobsazenych km
 ..//========================
 ..d
 ...q:'$d(parrkmn("spz",spz,ns,rpcprs))
 ...// =========================
 ...// prs je nulovy
 ...q:'+$g(parrkmn("spz",spz,ns,rpcprs))
 ...// =============
 ...// km z rpcprs minusem
 ...s dsp="" f  s dsp=$o(parrkmn("spz",spz,ns,rpcprs,dsp)) q:dsp=""  d
 ....s km=+$g(parrkmn("spz",spz,ns,rpcprs,dsp)) s km=km*(-1)
 ....s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,rpcprs))'="" s newNS=$g(arrALVAPodilTBNS(ns,rpcprs))
 ....s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_rpcprs,"U_KMN"_"~"_km)=""
 ...// ===================
 ...// rozpocet
 ...k km s km=$g(parrkmn("spz",spz,ns,rpcprs))
 ...s err=$$rzpArr^OBapiED(.km,.tmparr,1)
 ...// ========
 ...s ind="" f  s ind=$o(km(ind)) q:ind=""  d
 ....s km=$g(km(ind)) s ps=$p(ind,"~",1) s dsp=$p(ind,"~",2) s tykm=$p(ind,"~",3)
 ....s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ....s arr("Dta","S_NS~"_newNS,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykm,"U_KMN"_"~"_km)=""
 q
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDS1" type="INT" languagemode="0" timestamp="65385,51726.167509"><![CDATA[
OBapiEDDS1 q
 //
mkDtDzTur(idfa,nmsp,zp,rrmm,doc,arrset,arrmzd,dglbDC,arrdoc,arrprsset)
 n (idfa,nmsp,zp,rrmm,doc,arrset,arrmzd,dglbDC,arrdoc,arrprsset)
 // provoz
 s prv=zp#100
 // ns
 s ns=+$g(arrdoc("dta",16))
 // prace v noci
 s begnight=$$begNight^OBapiED()
 s endnight=$$endNight^OBapiED() 
 //datovy prehled pro DZVA z casoveho prubehu
 // datum jizdy
 s hrl=$g(arrdoc("dta",4))
 //aktualizace dsp u spoju (pro pripad, ze nakde neni zadano)
 s err=$$actDspTur^OBapiED(idfa,nmsp,hrl,0,.arrdoc) zt:+err "merr" s err=""
 //kill
 k @dglbDC@("ms") k @dglbDC@("mu") k @dglbDC@("mw")
 //pole pro dohledani dsp s nejvetsim poctem km 
 k arrkmdsp
 // projdu pole s prubehem pripravime tabulku ps ze spoju pro rychle vyhledani
 // - odvodim dspds
 // - odvodim tykmds
 // - pripravim pole spoju pro rozpocty
 //                              1  2  3   4     5      6
 //		- @dglbDC@("ms",mm)=$lb(li,sp,dsp,dspds,tykmds,isnc)
 //     - @dglbDC@("ms",mm,"tab",idps)=km	... tabulka presnych km podle ps pro rozpocty
 // =======================
 s cas="" f  s cas=$o(arrdoc("arr","tur",cas)) q:cas=""  d
 .s idcin=$g(arrdoc("arr","tur",cas,"dta",2))
 .i idcin=3 d
 ..s km=$g(arrdoc("arr","tur",cas,"dta",3))
 ..s linka=+$g(arrdoc("arr","tur",cas,"dta",5))
 ..s spoj=+$g(arrdoc("arr","tur",cas,"dta",6))
 ..s dsp=$g(arrdoc("arr","tur",cas,"dta",14)) s:'dsp dsp=1
 ..//posun dsp pro rezijni spoje
 ..s dspds=dsp i dsp=7 s dspds=9
 ..//typ km pro ds
 ..s tykmds=(3+(dsp/100))
 ..//je nocni spoj
 ..s isnc=0 f mm=cas:1:(+$g(arrdoc("arr","tur",cas,"dta",1))) q:isnc  s:((mm#1440)'<begnight) isnc=1 s:((mm#1440)'>endnight) isnc=1
 ..s @dglbDC@("ms",cas)=$lb(linka,spoj,dsp,dspds,tykmds,isnc)
 ..//prepravni system spoje - jeden
 ..s ps=$g(arrdoc("arr","tur",cas,"dta",15)) i ps="" s ps=0
 ..s @dglbDC@("ms",cas,"tab",ps)=km
 ..//prepravni system spoje - vic
 ..i $o(arrdoc("arr","tur",cas,"prs",""))'="" d
 ...k @dglbDC@("ms",cas,"tab")
 ...s ps="" f  s ps=$o(arrdoc("arr","tur",cas,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",1))
 ....s @dglbDC@("ms",cas,"tab",ps)=+km
 //==========================================
 //projdu prubeh a nactu ukazatele pro doklad
 //==========================================
 //@dglbDC@("mu",iduk,idkl)=km/mm, kde:
 //  iduk=KM,KMT,KMO,KMN,HODJIZ,HODMA,HODNC,HODCEK,HODVY
 //  idkl=$lb(linka,dspds,tykmds,ps)
 s cas="" f  s cas=$o(arrdoc("arr","tur",cas)) q:cas=""  d
 .s idcin=$g(arrdoc("arr","tur",cas,"dta",2))
 .//linka, spoj
 .i idcin=3 d
 ..s val=$g(@dglbDC@("ms",cas))
 ..s linka=$lg(val,1) s spoj=$lg(val,2) s dsp=$lg(val,3) s dspds=$lg(val,4) s tykmds=$lg(val,5) s isnc=$lg(val,6)
 ..s ji=$g(arrdoc("arr","tur",cas,"dta",4))
 ..s ma=($tr($g(arrdoc("arr","tur",cas,"dta",7)),"*","")+$tr($g(arrdoc("arr","tur",cas,"dta",8)),"*",""))
 ..s km=$g(arrdoc("arr","tur",cas,"dta",3))
 ..s kmt=$g(arrdoc("arr","tur",cas,"dta",13))
 ..s ps=$g(arrdoc("arr","tur",cas,"dta",15)) i ps="" s ps=0
 ..s arrkmdsp(dspds)=$g(arrkmdsp(dspds))+km
 ..//vynulovani tarifnich km pro rezijni spoje
 ..i dsp=7 s kmt=0
 ..// jeden prepravni system
 ..i $o(arrdoc("arr","tur",cas,"prs",""))="" d
 ...s idkl=$lb(linka,dspds,tykmds,ps)
 ...s @dglbDC@("mu","KM",idkl)=$g(@dglbDC@("mu","KM",idkl))+km
 ...s @dglbDC@("mu","KMT",idkl)=$g(@dglbDC@("mu","KMT",idkl))+kmt
 ...i dsp'=7 s @dglbDC@("mu","KMO",idkl)=$g(@dglbDC@("mu","KMO",idkl))+km
 ...i dsp=7 s @dglbDC@("mu","KMN",idkl)=$g(@dglbDC@("mu","KMN",idkl))+km
 ..// vic prepravnich systemu 
 ..i $o(arrdoc("arr","tur",cas,"prs",""))'="" d
 ...s ps="" f  s ps=$o(arrdoc("arr","tur",cas,"prs",ps)) q:ps=""  d
 ....s idkl=$lb(linka,dspds,tykmds,ps)
 ....s km=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",1))
 ....s kmt=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",2))
 ....//vynulovani tarifnich km pro rezijni spoje
 ....i dsp=7 s kmt=0
 ....s @dglbDC@("mu","KM",idkl)=$g(@dglbDC@("mu","KM",idkl))+km
 ....s @dglbDC@("mu","KMT",idkl)=$g(@dglbDC@("mu","KMT",idkl))+kmt
 ....i dsp'=7 s @dglbDC@("mu","KMO",idkl)=$g(@dglbDC@("mu","KMO",idkl))+km
 ....i dsp=7 s @dglbDC@("mu","KMN",idkl)=$g(@dglbDC@("mu","KMN",idkl))+km
 ..// rozpocitam jizdu podle idkl
 ..k srcarr k rzparr
 ..s rzparr=ji m srcarr=@dglbDC@("ms",cas,"tab") 
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ...s idkl=$lb(linka,dspds,tykmds,ps)
 ...s @dglbDC@("mu","HODJIZ",idkl)=$g(@dglbDC@("mu","HODJIZ",idkl))+$g(rzparr(ps))
 ...//pomocna jizda pro bp
 ...s @dglbDC@("mw","HODJIZ",idkl)=$g(@dglbDC@("mw","HODJIZ",idkl))+$g(rzparr(ps))
 ...//pomocna jizda pro noc
 ...s:isnc @dglbDC@("mw","HODNC",idkl)=$g(@dglbDC@("mw","HODNC",idkl))+$g(rzparr(ps))
 ..// rozpocitam manipulace podle iduk
 ..k srcarr k rzparr
 ..s rzparr=ma m srcarr=@dglbDC@("ms",cas,"tab") 
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ...s idkl=$lb(linka,dspds,tykmds,ps)
 ...s @dglbDC@("mu","HODMA",idkl)=$g(@dglbDC@("mu","HODMA",idkl))+$g(rzparr(ps))
 ...s:isnc @dglbDC@("mw","HODNC",idkl)=$g(@dglbDC@("mw","HODNC",idkl))+$g(rzparr(ps))
 .// ====================
 .// ostatni km - rezijni
 .// ====================
 .i (idcin>3)&(idcin<8) d
 ..s ji=$g(arrdoc("arr","tur",cas,"dta",4))
 ..k km s km=$g(arrdoc("arr","tur",cas,"dta",3)) s kmt=0
 ..s linka=0 s dsp="" s dspds="" s tykmds=""
 ..s ps=$g(arrdoc("arr","tur",cas,"dta",15)) i ps="" s ps=0
 ..// dohledam k rezijnim km (pristaveni, odstaveni, prejezd) co nasleduje nebo predchazi od toho dsp
 ..s fs=1 i idcin=5 s fs=-1
 ..s ind=cas s ind=$o(@dglbDC@("ms",ind),fs) i (ind'="") d
 ...s val=$g(@dglbDC@("ms",ind))
 ...s dsp=$lg(val,3) s dspds=$lg(val,4) s tykmds=$lg(val,5)
 ..//pokud nic nenasleduje, tak co predchazi a naopak ridi se to fs
 ..i ind="" d
 ...s fs=fs*(-1)
 ...s ind=cas s ind=$o(@dglbDC@("ms",ind),fs) i (ind'="") d
 ....s val=$g(@dglbDC@("ms",ind))
 ....s dsp=$lg(val,3) s dspds=$lg(val,4) s tykmds=$lg(val,5)
 ..//pokud jsou stale rezijni tak vnitro
 ..i 'dsp s dsp=1
 ..i 'dspds s dspds=1
 ..s tykmds=(idcin+(dsp/100))	//typ km pro ds
 ..//pro rezijni jizdu dam typ km rezijni, nerozepisuje se podle druhu spoje 
 ..i (idcin=7) s tykmds=7
 ..//=======================================================================
 ..//rozdeleni rezijnich (prist.,odst.,prej.,rez. na nehrazene a hrazene
 ..i $g(arrdoc("arr","tur",cas,"dta",21)) s tykmds=tykmds+.5
 ..//===================================================================
 ..s km(ps)=km
 ..// vic prepravnich systemu 
 ..i $o(arrdoc("arr","tur",cas,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","tur",cas,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",1))
 ....s km(ps)=km
 ..// zapis do ukazatelu na dokladu
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s idkl=$lb(linka,(dspds+.1),tykmds,ps)
 ...s @dglbDC@("mu","KM",idkl)=$g(@dglbDC@("mu","KM",idkl))+km
 ...s @dglbDC@("mu","KMN",idkl)=$g(@dglbDC@("mu","KMN",idkl))+km
 ..// rozpocitam jizdu podle idkl
 ..k srcarr k rzparr
 ..s rzparr=ji m srcarr=km
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ...s idkl=$lb(linka,(dspds+.1),tykmds,ps)
 ...s @dglbDC@("mu","HODJIZ",idkl)=$g(@dglbDC@("mu","HODJIZ",idkl))+$g(rzparr(ps))
 ...s @dglbDC@("mw","HODJIZ",idkl)=$g(@dglbDC@("mw","HODJIZ",idkl))+$g(rzparr(ps))
 ..//bp, rozpocitavam podle jizdy do BP
 .i (idcin=9) d
 ..k srcarr k rzparr
 ..s rzparr=$g(arrdoc("arr","tur",cas,"dta",4))
 ..m srcarr=@dglbDC@("mw","HODJIZ")
 ..i $o(srcarr(""))=""
 ...s idkl=$lb(0,1,3.01,0)
 ...s srcarr(idkl)=1 
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ...s @dglbDC@("mu","HODBP",idkl)=$g(@dglbDC@("mu","HODBP",idkl))+$g(rzparr(idkl))
 ..//kill napoctu jizdy pro dalsi BP
 ..k @dglbDC@("mw","HODJIZ")
 //zbytek casti spoju - km s dsp a ps
 s (linka,spoj)=0 
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .s dsp="" f  s dsp=$o(arrdoc("arr","edv",hor,"arr",7,dsp)) q:dsp=""  d
 ..s dspds=dsp i dsp=7 s dspds=9
 ..s tykmds=(3+(dsp/100))				//typ km pro ds
 ..k km,ji
 ..s km=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",4))
 ..s ji=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",1))
 ..s ps=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",6))
 ..s linka=+$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",7))
 ..i 'km q
 ..i 'ps s ps=0
 ..s arrkmdsp(dspds)=$g(arrkmdsp(dspds))+km
 ..s km(ps)=km
 ..i $o(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",ps,"dta",1))
 ....s km(ps)=km
 ..// zapis do ukazatelu na dokladu
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s idkl=$lb(linka,dspds,tykmds,ps)
 ...//presne km
 ...s @dglbDC@("mu","KM",idkl)=$g(@dglbDC@("mu","KM",idkl))+km
 ...s:dsp'=7 @dglbDC@("mu","KMO",idkl)=$g(@dglbDC@("mu","KMO",idkl))+km
 ...s:dsp=7 @dglbDC@("mu","KMN",idkl)=$g(@dglbDC@("mu","KMN",idkl))+km
 ...//tarifni km
 ...s:dsp'=7 @dglbDC@("mu","KMT",idkl)=$g(@dglbDC@("mu","KMT",idkl))+km
 ..// jizda
 ..k srcarr k rzparr
 ..s rzparr=ji m srcarr=km
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ...s idkl=$lb(linka,dspds,tykmds,ps)
 ...s @dglbDC@("mu","HODJIZ",idkl)=$g(@dglbDC@("mu","HODJIZ",idkl))+$g(rzparr(ps))
 //dohledani dsp s nejvyssim poctem km
 s maxdsp=1 s maxkm=0
 s dsp="" f  s dsp=$o(arrkmdsp(dsp)) q:dsp=""  d
 .i $g(arrkmdsp(dsp))>maxkm s maxdsp=dsp s maxkm=$g(arrkmdsp(dsp)) 
 //rezijni km a objizdky
 s (linka,spoj)=0
 s dsp=maxdsp
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .s ind="" f  s ind=$o(arrdoc("arr","edv",hor,"arr",5,ind)) q:ind=""  d
 ..s algdsp=+$g(arrprsset("arr",2,7,ind,4)) //algoritmus pro odvozeni druhu spoje pro DS - 0 default / 1 podle prs
 ..k km,ji
 ..// objizdky - konverze dsp
 ..s dsp=maxdsp s:ind=22 dsp=2 s:ind=23 dsp=3 s:ind=24 dsp=4 s:ind=25 dsp=5 s:ind=26 dsp=6
 ..// typ km pro ds
 ..s tykmds=ind
 ..s km=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",1))
 ..s ji=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",2))
 ..s ps=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",5))
 ..i 'km q
 ..i ps="" s ps=0
 ..s km(ps)=km
 ..i $o(arrdoc("arr","edv",hor,"arr",5,ind,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","edv",hor,"arr",5,ind,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","edv",hor,"arr",5,ind,"prs",ps,"dta",1))
 ....s km(ps)=km
 ..// zapis do ukazatelu na dokladu
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s mydsp=dsp
 ...//odvozeni druhu spoje podle prepravniho systemu 
 ...i algdsp>0 d
 ....k tmparro s err=$$gCisItm^OBapiED(idfa,nmsp,5,ps,"",.tmparro)
 ....s mydsp=$p($g(tmparro("arr",ps)),"~",14)
 ....k tmparro
 ....i mydsp="" s mydsp=dsp
 ...s idkl=$lb(linka,(mydsp+.1),tykmds,ps)
 ...//presne km
 ...s @dglbDC@("mu","KM",idkl)=$g(@dglbDC@("mu","KM",idkl))+km
 ...s @dglbDC@("mu","KMN",idkl)=$g(@dglbDC@("mu","KMN",idkl))+km
 ..// jizda
 ..k srcarr k rzparr
 ..s rzparr=ji m srcarr=km
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ...s mydsp=dsp
 ...//odvozeni druhu spoje podle prepravniho systemu 
 ...i algdsp>0 d
 ....k tmparro s err=$$gCisItm^OBapiED(idfa,nmsp,5,ps,"",.tmparro)
 ....s mydsp=$p($g(tmparro("arr",ps)),"~",14)
 ....k tmparro
 ....i mydsp="" s mydsp=dsp
 ...s idkl=$lb(linka,(mydsp+.1),tykmds,ps)
 ...s @dglbDC@("mu","HODJIZ",idkl)=$g(@dglbDC@("mu","HODJIZ",idkl))+$g(rzparr(ps))
 // =============================
 // zbytek nespoje - jizda bez km
 // ==============================
 // pripravim tabulku pro rozpocet !
 // podle stavajici tabulky jizdy
 // neni-li tabulka jizdy, pak na vychozi hodnotu ps 
 k srcarr
 s idkl="" f  s idkl=$o(@dglbDC@("mu","HODJIZ",idkl)) q:idkl=""  d
 .s ps=$lg(idkl,4) i ps'="" s srcarr(ps)=$g(srcarr(ps))+$g(@dglbDC@("mu","HODJIZ",idkl))
 i '$d(srcarr) d
 .s ps=$$gDlftValPrs^OBapiEDTur3(0,prv,ns,"","",.arrprsset) s:ps="" ps=0
 .s srcarr(ps)=1
 s (linka,spoj)=0,dsp=1,tykmds=3.01
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .q:'$d(arrdoc("arr","edv",hor,"arr",3,13))
 .s ji=$g(arrdoc("arr","edv",hor,"arr",3,13,"dta",2))
 .i 'ji q
 .k rzparr s rzparr=ji
 .s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 .s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 ..s idkl=$lb(linka,dsp,tykmds,ps)
 ..s @dglbDC@("mu","HODJIZ",idkl)=$g(@dglbDC@("mu","HODJIZ",idkl))+$g(rzparr(ps))
 //
 //===========================
 //na doklade je casovy prubeh
 //===========================
 //
 i $o(arrdoc("arr","tur",""))'="" d
 .//rozbaleni dokladu do minutoveho pole
 .k arri,wrkptu s arri("par",1)=zp s arri("par",2)=hrl s arri("par",12)=1
 .k arrp m arrp=arrdoc
 .s err=$$calcTur^OBapiED(idfa,nmsp,.arrp,"",.arri,.wrkptu,.arrset,.arrmzd) zt:+err "merr"
 .k arrp
 .//                           1     2    3   4  5  6    7    8  9  10  11
 .// ^||wrk.ALVA.AD(wrkm,mm)=mmbeg~idcin~hrl~dd~sv~noc~vicsm~dsp~li~sp~inpau
 .//minutove pole cekani a vyrovnavaci doby
 .s mm="" f  s val="" s mm=$o(^||wrk.ALVA.AD(wrkptu,mm),1,val) q:mm=""  d
 ..s id=($p(val,"~",2)\1)
 ..//cekani nebo vyrovnavaci doba
 ..i ('id)!(id=-1) d
 ...s:('id) iduk="HODCEK" s:(id=-1) iduk="HODVY"
 ...s mmb=mm s @dglbDC@("mw",iduk,mmb)=mmb
 ...f cnt=mm:1 s val=$g(^||wrk.ALVA.AD(wrkptu,cnt)) s myid=($p(val,"~",2)\1) q:('$d(^||wrk.ALVA.AD(wrkptu,cnt)))!(myid'=id)  d
 ....s @dglbDC@("mw",iduk,mmb)=cnt s mm=cnt
 .// rozpocet cekani a vyrovnavaci doby podle spoje
 .f iduk="HODCEK","HODVY" d
 ..s mm="" f  s mm=$o(@dglbDC@("mw",iduk,mm)) q:mm=""  d
 ...//dohledam spoj co nasleduje nebo predchazi
 ...s ind="" f fs=1,-1 q:ind'=""  s ind=$o(@dglbDC@("ms",mm),fs)
 ...i ind'="" d
 ....s val=$g(@dglbDC@("ms",ind))
 ....s linka=$lg(val,1) s dsp=$lg(val,3) s dspds=$lg(val,4) s tykmds=$lg(val,5)
 ....// rozpocitam dobu podle iduk
 ....k srcarr k rzparr
 ....s rzparr=(($g(@dglbDC@("mw",iduk,mm))-mm)+1)
 ....m srcarr=@dglbDC@("ms",ind,"tab") 
 ....s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ....s ps="" f  s ps=$o(rzparr(ps)) q:ps=""  d
 .....s idkl=$lb(linka,dspds,tykmds,ps)
 .....s @dglbDC@("mu",iduk,idkl)=$g(@dglbDC@("mu",iduk,idkl))+$g(rzparr(ps))
 ...//nenasel se spoj, pak vnitro a rezijni
 ...i ind="" d
 ....s idkl=$lb(0,1,7,0) 
 ....s @dglbDC@("mu",iduk,idkl)=$g(@dglbDC@("mu",iduk,idkl))+(($g(@dglbDC@("mw",iduk,mm))-mm)+1)
 .k ^||wrk.ALVA.AD(wrkptu)
 //vyhodnoceni nocni prace
 i $g(arrdoc("arr","tuv",15)) d
 .k srcarr k rzparr
 .s rzparr=$g(arrdoc("arr","tuv",15))
 .m srcarr=@dglbDC@("mw","HODNC")
 .//neni prace v noci na spojich, podle jizdy
 .i $o(srcarr(""))="" m srcarr=@dglbDC@("mu","HODJIZ")
 .//neni prace v noci na spojich ani jizda
 .i $o(srcarr(""))="" s idkl=$lb(0,1,7,0) s srcarr(idkl)=1 
 .s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 .s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ..s @dglbDC@("mu","HODNC",idkl)=$g(@dglbDC@("mu","HODNC",idkl))+$g(rzparr(idkl))
 // kill pracovnich globalu
 k @dglbDC@("ms") k @dglbDC@("mw")
 q 0
 //
mkDzva(idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 n (idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 k tmparr k arrkmdsp k arrSpzNS
 s prv=zp#100
 s hrl=$g(arrdoc("dta",4))
 s spz=$g(arrdoc("dta",6))
 s ns=+$g(arrdoc("dta",16))
 s typa=+$g(arrdoc("dta",18))
 //konverze spz ke dni jizdy, ekos pocita se starymi spz
 s val=$$VehicleGetRz^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,hrl)
 i (val'=-1)&(val'=-2) s spz=val
 //udaje spz
 i spz'="" d
 .i $d(@cglbRZ@(spz)) q
 .k tmparr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,spz,"",.tmparr)
 .m @cglbRZ@(spz)=tmparr k tmparr
 // ======================
 // zapis udaju pro ridice
 // ======================
 //@dglbDC@("mu",iduk,idkl)=km/mm, kde:
 //  iduk=KM,KMT,KMO,KMN,HODJIZ,HODMA,HODBP,HODNC,HODCEK,HODVY
 //  idkl=$lb(linka,dspds,tykmds,ps)
 s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 .f iduk="KM","KMDV","HODJIZ","HODMA","HODDODK","HODBP","HODVY","HODOS","HODZS","HODSONE","HODSV","HODNC","HODCEK","DIETOS" d
 ..k srcarr,rzparr
 ..i iduk="KM" s rzparr=$g(arrdoc("osc",os,"tuv",22)) m srcarr=@dglbDC@("mu","KM")			//km
 ..i iduk="KMDV" s rzparr=$g(arrdoc("osc",os,"tuv",30)) m srcarr=@dglbDC@("mu","KM")		//km dlouh.vozem
 ..i iduk="HODJIZ" s rzparr=$g(arrdoc("osc",os,"tuv",1)) m srcarr=@dglbDC@("mu","HODJIZ")	//jizda
 ..i iduk="HODMA" s rzparr=$g(arrdoc("osc",os,"tuv",2)) m srcarr=@dglbDC@("mu","HODMA")		//manipulace
 ..i iduk="HODDODK" s rzparr=$g(arrdoc("osc",os,"tuv",9)) m srcarr=@dglbDC@("mu","HODJIZ")	//dodk
 ..i iduk="HODBP" s rzparr=$g(arrdoc("osc",os,"tuv",5)) m srcarr=@dglbDC@("mu","HODBP")		//bezp.prestavka
 ..i iduk="HODVY" s rzparr=$g(arrdoc("osc",os,"tuv",8)) m srcarr=@dglbDC@("mu","HODVY")		//vyrovnavaci doba
 ..i iduk="HODOS" s rzparr=$g(arrdoc("osc",os,"tuv",6)) m srcarr=@dglbDC@("mu","HODJIZ")	//ostatni prace
 ..i iduk="HODZS" s rzparr=$g(arrdoc("osc",os,"tuv",31)) m srcarr=@dglbDC@("mu","HODJIZ")	//zaskolovani
 ..i iduk="HODSONE" s rzparr=$g(arrdoc("osc",os,"tuv",21)) m srcarr=@dglbDC@("mu","HODJIZ")	//sobota,nedele
 ..i iduk="HODSV" s rzparr=$g(arrdoc("osc",os,"tuv",20)) m srcarr=@dglbDC@("mu","HODJIZ")	//svatek
 ..i iduk="HODNC" s rzparr=$g(arrdoc("osc",os,"tuv",15)) m srcarr=@dglbDC@("mu","HODNC")	//noc
 ..i iduk="HODCEK" s rzparr=$g(arrdoc("osc",os,"tuv",14)) m srcarr=@dglbDC@("mu","HODCEK")	//cekani
 ..i iduk="DIETOS" s rzparr=$g(arrdoc("osc",os,"tuv",18)) m srcarr=@dglbDC@("mu","HODJIZ")	//diety
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ...s ps=$lg(idkl,4)
 ...s @dglbDC@("os",os,1,ps,iduk)=$g(@dglbDC@("os",os,1,ps,iduk))+$g(rzparr(idkl))
 // =========================================================================
 // zaskolovani
 i $g(arrdoc("dta",7))="Z" q
 // pruvodci
 i $g(arrdoc("dta",7))="P" q
 // =========================================================================
 // ========================
 // ridici prima mzda, diety
 // ========================
 k mzdapri s mzdapri=0 k die s die=0 s cntos=0 s tmp=""
 s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 .i '$d(@cglbOS@(os)) d
 ..k tmparr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,os,"",.tmparr)
 ..m @cglbOS@(os)=tmparr
 ..k tmparr
 .s tmp=tmp_os_"-"_$g(@cglbOS@(os,"dta",1))_"/"
 .s cntos=cntos+1
 .f cnt=1:1:4,12,26,40 s mzdapri=mzdapri+$g(arrdoc("osc",os,"tuv",19,cnt))	//pozor, ekvivalent v ALVA.ADZPRACOVANI.RZPrint - tbMzdPrhl - pro kontrolu, pripadne zmeny i tam
 .s die=die+$g(arrdoc("osc",os,"tuv",18))
 i cntos=0 s cntos=1
 // ========================================================================================================================
 // 9.9.2014 - s lt ... vypnuto nefunguje v pripade, ze se ridici nepocita mzda (pak to posilalo od auta), problem s OSNADEM
 //========================================================================================================================= 
 //i 'mzdapri d 
 //.f cnt=1:1:4,26 s mzdapri=mzdapri+$g(arrdoc("arr","tuv",19,cnt))
 //.s mzdapri=mzdapri*cntos
 i $e(tmp,$l(tmp))="/" s tmp=$e(tmp,1,$l(tmp)-1)
 //==========================================================================
 // pohon vozidla
 s drhphn=$g(@cglbRZ@(spz,"dta",12)) i 'drhphn s drhphn=1 	//1 N / 2 P / 3 B
 s ph=$g(arrdoc("dta",11))
 s phnafta="" i drhphn=1 s phnafta=ph
 s phplyn="" i drhphn=2 s phplyn=ph
 s phbenzin="" i drhphn=3 s phbenzin=ph
 s phfame=$g(arrdoc("dta",24)) s phb30=$g(arrdoc("dta",27)) s phtop=$g(arrdoc("dta",19))
 s adblue=$g(arrdoc("dta",20))
 s nor=$g(arrdoc("dta",15))
 s ph=ph+phfame+phb30
 // pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 i (+$g(@cglbRZ@(spz,"dta",12))=1)&(+$g(arrset("arr",6,28))) s ph=ph+phtop
 s provoz=+$g(arrdoc("arr","tuv",17))
 s cekani=+$g(arrdoc("arr","tuv",13))
 s jizda=+$g(arrdoc("arr","tuv",1))
 s kontrkm=+$g(arrdoc("arr","tuv",22))
 // informace
 s arr("I","I_RIDIC~"_tmp)=""
 s arr("I","I_TEXT~DZVA-pravidelná AD")=""
 s arr("I","I_DAPORI~"_$g(arrdoc("dta",2)))=""
 s arr("I","I_DATZ~"_$g(arrdoc("dta",4)))=""
 s arr("I","I_DATUM~"_$g(arrdoc("dta",4)))=""
 s tmp=+$g(arrdoc("dta",14)) s:'tmp tmp=1
 s arr("I","I_DNUDOK~"_tmp)=""
 s arr("I","I_DATK~"_($g(arrdoc("dta",4))+tmp-1))=""
 s:$g(arrdoc("dta",8))'="" arr("I","I_TACHZA~"_$g(arrdoc("dta",8)))=""
 s:$g(arrdoc("dta",7))'="" arr("I","I_TACHKO~"_$g(arrdoc("dta",7)))=""
 s:$g(arrdoc("dta",9))'="" arr("I","I_TACHC~"_$g(arrdoc("dta",9)))=""
 s:$g(arrdoc("dta",10))'="" arr("I","I_TACHKM~"_$g(arrdoc("dta",10)))=""
 s:$g(arrdoc("dta",12))'="" arr("I","I_PHMKOE~"_$g(arrdoc("dta",12)))=""
 s arr("I","I_PHM100~"_(+$g(arrdoc("dta",13))))=""
 s:$g(arrdoc("dta",17)) arr("I","I_KLOUB~"_$g(arrdoc("dta",17)))=""
 // ==================
 // data, primy prepis
 // ==================
 k tmparr
 f iduk="KM","KMO","KMN","KMT","HODJIZ" d
 .s idkl="" f  s idkl=$o(@dglbDC@("mu",iduk,idkl)) q:idkl=""  d
 ..s linka=$lg(idkl,1) s dspds=$lg(idkl,2) s tykmds=$lg(idkl,3) s ps=$lg(idkl,4)
 ..s val=$g(@dglbDC@("mu",iduk,idkl))
 ..//konverze indexu==========
 ..s myiduk=iduk
 ..s:iduk="HODJIZ" myiduk="JI"
 ..//=========================
 ..s tmparr(myiduk,linka,dspds,ps)=$g(tmparr(myiduk,linka,dspds,ps))+val
 ..s tmparr(myiduk,linka,dspds,ps,tykmds)=$g(tmparr(myiduk,linka,dspds,ps,tykmds))+val
 // zapis do pole arr - km (presne)
 s linka="" f  s linka=$o(tmparr("KM",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KM",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KM",linka,dsp,ps)) q:ps=""  d
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("KM",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=+$g(tmparr("KM",linka,dsp,ps,tykmds))
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_KM~"_km)=""
 // zapis do pole arr - km (obsazene)
 s linka="" f  s linka=$o(tmparr("KMO",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMO",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMO",linka,dsp,ps)) q:ps=""  d
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("KMO",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=$g(tmparr("KMO",linka,dsp,ps,tykmds)) 
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_KMO~"_km)=""
 // zapis do pole arr - km (neobsazene)
 s linka="" f  s linka=$o(tmparr("KMN",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMN",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMN",linka,dsp,ps)) q:ps=""  d
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("KMN",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=$g(tmparr("KMN",linka,dsp,ps,tykmds)) 
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_KMN~"_km)=""
 // kmt (tarifni)
 s linka="" f  s linka=$o(tmparr("KMT",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMT",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMT",linka,dsp,ps)) q:ps=""  d
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("KMT",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=$g(tmparr("KMT",linka,dsp,ps,tykmds)) 
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_KMT~"_km)=""
 // ji (jizda)
 s linka="" f  s linka=$o(tmparr("JI",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("JI",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("JI",linka,dsp,ps)) q:ps=""  d
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("JI",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s ji=$g(tmparr("JI",linka,dsp,ps,tykmds))
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_HODJIZ~"_ji)=""
 //dobu provozu rozpocitam podle doby jizdy
 i provoz d
 .k srcarr,rzparr
 .s rzparr=provoz
 .m srcarr=@dglbDC@("mu","HODJIZ")
 .s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 .s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ..s linka=$lg(idkl,1) s dsp=$lg(idkl,2) s tykmds=$lg(idkl,3) s ps=$lg(idkl,4)
 ..s val=$g(rzparr(idkl))
 ..s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_HODPRV~"_val)=""
 // cekani rozpocitam podle doby cekani
 i cekani d
 .k srcarr,rzparr
 .s rzparr=cekani
 .m srcarr=@dglbDC@("mu","HODCEK")
 .s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 .s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ..s linka=$lg(idkl,1) s dsp=$lg(idkl,2) s tykmds=$lg(idkl,3) s ps=$lg(idkl,4)
 ..s val=$g(rzparr(idkl))
 ..s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ..s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_HODCEK~"_val)=""
 // =================
 // pole pro rozpocty
 // =================
 k rarr
 s linka="" f  s linka=$o(tmparr("KM",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KM",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KM",linka,dsp,ps)) q:ps=""  d
 ...s km=+$g(tmparr("KM",linka,dsp,ps)) q:'km
 ...s rarr(dsp_"~"_ps)=$g(rarr(dsp_"~"_ps))+km
 // ===============================
 // primou mzdu rozpocitam podle km
 // ===============================
 i mzdapri d
 .k srcarr,rzparr
 .s rzparr=mzdapri
 .m srcarr=rarr
 .//je pole pro rozpocet
 .i $o(srcarr(""))'="" d
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ...s val=$g(rzparr(idkl))
 ...s dsp=$p(idkl,"~",1) s ps=$p(idkl,"~",2)
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_MZSPZ~"_val)=""
 .//neni pole pro rozpocet
 .i $o(srcarr(""))="" d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"U_MZSPZ~"_mzdapri)=""
 // ======================================
 // diety rozpocitam na dsp a prs podle km
 // ======================================
 i die d
 .k srcarr,rzparr
 .s rzparr=die
 .m srcarr=rarr
 .//je pole pro rozpocet
 .i $o(srcarr(""))'="" d
 ..s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0) zt:+err "merr" s err=""
 ..s idkl="" f  s idkl=$o(rzparr(idkl)) q:idkl=""  d
 ...s val=$g(rzparr(idkl))
 ...s dsp=$p(idkl,"~",1) s ps=$p(idkl,"~",2)
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_DIETSPZ~"_val)=""
 .//neni pole pro rozpocet
 .i $o(srcarr(""))="" d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"U_DIETSPZ~"_die)=""
 // zapis PHM pro rozpodilovani
 i $g(ph) s tmparr("PHM")=ph
 i $g(nor) s tmparr("PHMNOR")=nor
 i $g(phnafta) s tmparr("PHMN")=phnafta
 i $g(phplyn) s tmparr("PHMP")=phplyn
 i $g(phbenzin) s tmparr("PHMB")=phbenzin
 i $g(phfame) s tmparr("PHMES")=phfame
 i $g(phb30) s tmparr("PHME")=phb30
 i $g(phtop) s tmparr("PHMT")=phtop
 i $g(adblue) s tmparr("PHMA")=adblue
 s tmparr("SPZ")=spz
 s tmparr("NS")=ns
 q
 //
mkSj(idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 n (idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 k tmparr
 s prv=zp#100
 s ps=$g(arrdoc("arr",1,"dta",4)) i ps="" s ps=0
 // zakladni udaje
 s hrl=$g(arrdoc("dta",6))
 s spz=$g(arrdoc("dta",8))
 //<jb> 2.2.2008 konverze spz pro pro PL_CSADSTRED (spec !)
 i $t(^OBjbPlzTr)'="" s spz=$$actSpz^OBjbPlzTr(idfa,zp,rrmm,doc,spz)
 // konverze spz ke dni jizdy, ekos pocita se starymi spz
 s val=$$VehicleGetRz^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,hrl)
 i (val'=-1)&(val'=-2) s spz=val
 //udaje spz
 i spz'="" d
 .i $d(@cglbRZ@(spz)) q
 .k tmparr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,spz,"",.tmparr)
 .m @cglbRZ@(spz)=tmparr k tmparr
 // ======
 // ridici
 // ======
 k mzdapri s mzdapri=0 k die s die=0 s cntos=0 s tmp=""
 s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 .i '$d(@cglbOS@(os)) d
 ..k tmparr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,os,"",.tmparr)
 ..m @cglbOS@(os)=tmparr
 ..k tmparr
 .s tmp=tmp_os_"-"_$g(@cglbOS@(os,"dta",1))_"/"
 .s cntos=cntos+1
 .f cnt=10,19,20,22,23,24,25,28 s mzdapri=mzdapri+$g(arrdoc("osc",os,"dta",cnt)) //pozor, ekvivalent v ALVA.ADZPRACOVANI.RZPrint - tbMzdPrhl - pro kontrolu, pripadne zmeny i tam
 .s die=die+$g(arrdoc("osc",os,"dta",3))
 s:$e(tmp,$l(tmp))="/" tmp=$e(tmp,1,$l(tmp)-1)
 // pohon vozidla
 s drhphn=$g(@cglbRZ@(spz,"dta",12)) i 'drhphn s drhphn=1 	//1 N / 2 P / 3 B
 // phm + ns
 s ph=$g(arrdoc("dta",22))
 s phnafta="" i drhphn=1 s phnafta=ph
 s phplyn="" i drhphn=2 s phplyn=ph
 s phbenzin="" i drhphn=3 s phbenzin=ph
 s phfame=$g(arrdoc("dta",73)) s phtop=$g(arrdoc("dta",72)) s phb30=$g(arrdoc("dta",78))
 s adblue=$g(arrdoc("dta",55))
 s ph=ph+phfame+phb30
 // pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 i (+$g(@cglbRZ@(spz,"dta",12))=1)&(+$g(arrset("arr",6,28))) s ph=ph+phtop
 s nor=$g(arrdoc("dta",45))
 s ns=+$g(arrdoc("dta",43))
 // transformace ns podle ps
 s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 // ========================
 s kmz=+$g(arrdoc("arr",1,"dta",14))
 s kmn=($g(arrdoc("dta",17)))		//km neobsazene
 s kmr=($g(arrdoc("dta",18))) 		//km rezijni    //($g(arrdoc("dta",17))+$g(arrdoc("dta",18)))
 s kmv=($g(arrdoc("dta",16))-kmz)	//km vnitro
 // pole pro rozpocet km (pod 7 jsou vnitro+rezijni(rezijni jsou napevno pod 7), pod 8 jsou zahranicni)
 s rarr(7)=kmv s rarr(7.1)=(kmn+kmr) s rarr(8)=kmz
 s typ=$g(arrdoc("dta",46))
 s osob=$g(arrdoc("dta",15))
 s ji=$g(arrdoc("dta",12))
 s ce=$g(arrdoc("dta",13))
 s provo=$g(arrdoc("dta",14))
 //mena
 s mena=$g(arrdoc("dta",67)) s:mena="" mena="CZK"
 //trzba
 s trzba=0 s trzbaczk=0
 //prepravne
 s iditm="" f  s iditm=$o(arrdoc("fak","itm",iditm)) q:iditm=""  d
 .s trzba=trzba+$g(arrdoc("fak","itm",iditm,"dta",1))
 //poplatky
 s idppl="" f  s idppl=$o(arrdoc("fak","arr",1,idppl)) q:idppl=""  d
 .s idppldanszb="" f  s idppldanszb=$o(arrdoc("fak","arr",1,idppl,idppldanszb)) q:idppldanszb=""  d
 ..//je soucast ceny
 ..i +$g(arrdoc("fak","arr",1,idppl,idppldanszb,"dta",6)) q
 ..s trzba=trzba+$g(arrdoc("fak","arr",1,idppl,idppldanszb,"dta",1))
 //sleva
 s trzba=trzba+$g(arrdoc("fak","dta",1))
 //
 i mena="CZK" s trzbaczk=trzba
 i mena="EUR" d
 .k arrokurs
 .s err=##class(ALVA.POKLADNA.MLAPI).ExchangeRateRead(idfa,nmsp,hrl,"",1,.arrokurs)
 .s trzbaczk=(trzba*($g(arrokurs("Mena","EUR","Kurz"))/$g(arrokurs("Mena","EUR","Mnoz"))))
 .k arrokurs
 //informace
 s arr("I","I_RIDIC~"_tmp)=""
 s arr("I","I_TEXT~SJ-nepravidelná AD")=""
 s arr("I","I_DAPORI~"_$g(arrdoc("dta",2)))=""
 s arr("I","I_DATZ~"_$g(arrdoc("dta",6)))=""
 s arr("I","I_DATUM~"_$g(arrdoc("dta",6)))=""
 s arr("I","I_DATK~"_$g(arrdoc("dta",7)))=""
 s:$g(arrdoc("dta",21))'="" arr("I","I_TACHZA~"_$g(arrdoc("dta",21)))=""
 s:$g(arrdoc("dta",20))'="" arr("I","I_TACHKO~"_$g(arrdoc("dta",20)))=""
 s tmp=$g(arrdoc("arr",1,"dta",7)) s:'tmp tmp=1
 s arr("I","I_TACHC~"_tmp)=""
 s:$g(arrdoc("arr",1,"dta",8))'="" arr("I","I_TACHKM~"_$g(arrdoc("arr",1,"dta",8)))=""
 s:$g(arrdoc("arr",1,"dta",9))'="" arr("I","I_PHMKOE~"_$g(arrdoc("arr",1,"dta",9)))=""
 s arr("I","I_PHM100~"_$g(arrdoc("arr",1,"dta",10)))=""
 s arr("I","I_DNUDOK~"_($g(arrdoc("dta",7))-$g(arrdoc("dta",6))+1))=""
 s:$g(arrdoc("dta",44)) arr("I","I_KLOUB~"_$g(arrdoc("dta",44)))=""
 s arr("I","I_KODFAK~"_$P("Výkonově:Časovkou:SmluvníCena:Nefakturovat:OpravnáČástka",":",+$g(arrdoc("dta",24))))=""
 // nove polozky
 s arr("I","I_ADRJM~"_$g(arrdoc("dta",26)))=""
 s arr("I","I_ADRUPR~"_$g(arrdoc("dta",49)))=""
 s arr("I","I_ADRUL~"_$g(arrdoc("dta",27)))=""
 s arr("I","I_DIC~"_($g(arrdoc("dta",33))_$g(arrdoc("dta",34))))="" 
 s arr("I","I_ICO~"_$g(arrdoc("dta",32)))=""
 s:$g(arrdoc("dta",35)) arr("I","I_SMLCENA~"_$g(arrdoc("dta",35)))=""
 s:$g(arrdoc("dta",62)) arr("I","I_SMLCENA~"_$g(arrdoc("dta",62)))=""
 k arrcis8 s err=$$gCisItm^OBapiED(idfa,nmsp,8,(+$g(arrdoc("dta",39))),"",.arrcis8)
 s arr("I","I_ZPU~"_$g(arrcis8("arr",(+$g(arrdoc("dta",39))))))="" k arrcis8
 s arr("I","I_TRASA~"_$g(arrdoc("arr",1,"dta",13)))=""
 //
 s dzaj=$g(arrdoc("dta",10))
 s typpre=$g(arrdoc("dta",11))
 s stat=$tr($g(arrdoc("fak","dta",2)),"*","") s:stat="" stat="CZ"
 s kodz=$g(arrdoc("arr",1,"dta",5))
 //splatnost
 s spl="" i kodz'="" k arrzak s err=##class(ALVA.ZAKAZNICI.MLAPI).Load(idfa,##class(ALVA.EDISON.Main).GetSystemDB(),kodz,"",.arrzak) s spl=$g(arrzak("Splatnost")) k arrzak
 i +$g(arrdoc("arr",1,"dta",12)) s spl=+$g(arrdoc("arr",1,"dta",12))
 s arr("I","I_SPL~"_spl)=""
 //km vnitro
 i kmv d
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~7","S_PS~"_ps,"S_TYK~100","U_KM~"_kmv)=""
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~7","S_PS~"_ps,"U_KMO~"_kmv)=""
 .s tmparr("KM",0,7,ps)=kmv
 .s tmparr("KM",0,7,ps,100)=kmv
 //km zahranicni
 i kmz d
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~8","S_PS~"_ps,"S_TYK~103","U_KM~"_kmz)=""
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~8","S_PS~"_ps,"U_KMO~"_kmz)=""
 .s tmparr("KM",0,8,ps)=kmz
 .s tmparr("KM",0,8,ps,103)=kmz
 //km rezijni (rezijni+neobsazene)(pod vnitro)
 i (kmr+kmn) d
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~7.1","S_PS~"_ps,"S_TYK~101","U_KM~"_kmn)=""
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~7.1","S_PS~"_ps,"S_TYK~102","U_KM~"_kmr)=""
 .s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_DSP~7.1","S_PS~"_ps,"U_KMN~"_(kmr+kmn))=""
 .s tmparr("KM",0,7.1,ps)=(kmr+kmn)
 .s tmparr("KM",0,7.1,ps,101)=kmn
 .s tmparr("KM",0,7.1,ps,102)=kmr
 //osob
 s:osob arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_STAT~"_stat,"S_PS~"_ps,"U_OSOB~"_osob)=""
 //jizda
 //i ji d
 //jizdu rozpocitavam vzdy, i nulovou, podle ni se delaji dny provozu 
 i 1 d
 .s err=$$rzpArr^OBapiED(.ji,.rarr,0) zt:+err "merr" s err=""
 .s dsp="" f  s dsp=$o(ji(dsp)) q:dsp=""  d
 ..s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_STAT~"_stat,"S_PS~"_ps,"S_DSP~"_dsp,"U_HODJIZ~"_$g(ji(dsp)))=""
 ..s tmparr("JI",0,dsp,ps)=$g(ji(dsp))
 i ce d
 .s err=$$rzpArr^OBapiED(.ce,.rarr,0) zt:+err "merr" s err=""
 .s dsp="" f  s dsp=$o(ce(dsp)) q:dsp=""  d
 ..s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_STAT~"_stat,"S_PS~"_ps,"S_DSP~"_dsp,"U_HODCEK~"_$g(ce(dsp)))=""
 i provo d
 .s err=$$rzpArr^OBapiED(.provo,.rarr,0) zt:+err "merr" s err=""
 .s dsp="" f  s dsp=$o(provo(dsp)) q:dsp=""  d
 ..s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_STAT~"_stat,"S_PS~"_ps,"S_DSP~"_dsp,"U_HODPRV~"_$g(provo(dsp)))=""
 //
 i mzdapri d
 .s err=$$rzpArr^OBapiED(.mzdapri,.rarr,1) zt:+err "merr" s err=""
 .s dsp="" f  s dsp=$o(mzdapri(dsp)) q:dsp=""  d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_PS~"_ps,"S_DSP~"_dsp,"U_MZSPZ~"_$g(mzdapri(dsp)))=""
 //
 i die d
 .s err=$$rzpArr^OBapiED(.die,.rarr,1) zt:+err "merr" s err=""
 .s dsp="" f  s dsp=$o(die(dsp)) q:dsp=""  d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_PS~"_ps,"S_DSP~"_dsp,"U_DIETSPZ~"_$g(die(dsp)))=""
 //
 s:trzba arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_MENA~"_mena,"U_TRZBA~"_trzba)=""
 s:trzbaczk arr("Dta","S_NS~"_ns,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_ZAK~"_kodz,"S_STAT~"_stat,"S_MENA~CZK","U_TRZBACZK~"_trzbaczk)=""
 // myto v CR
 s mytoCZ=0
 s idppl=1600 s idppldanszb="" f  s idppldanszb=$o(arrdoc("fak","arr",1,idppl,idppldanszb)) q:idppldanszb=""  d
 .s mytoCZ=mytoCZ+$g(arrdoc("fak","arr",1,idppl,idppldanszb,"dta",1))
 s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typ,"S_SPZ~"_spz,"S_KODPRE~"_typpre,"S_KODZAJ~"_dzaj,"S_STAT~"_stat,"S_PS~"_ps,"U_MYTCZ~"_mytoCZ)=""
 //
 i $g(ph) s tmparr("PHM")=ph
 i $g(nor) s tmparr("PHMNOR")=nor
 i $g(phnafta) s tmparr("PHMN")=phnafta
 i $g(phplyn) s tmparr("PHMP")=phplyn
 i $g(phbenzin) s tmparr("PHMB")=phbenzin
 i $g(phfame) s tmparr("PHMES")=phfame
 i $g(phb30) s tmparr("PHME")=phb30
 i $g(phtop) s tmparr("PHMT")=phtop
 i $g(adblue) s tmparr("PHMA")=adblue
 s tmparr("SPZ")=spz
 s tmparr("NS")=ns
 //=======================================
 //data pro mzdovy rozpocet ridicu
 //@dglbDC@("os",os,2,ps,iduk)=val
 //=======================================
 s ps=$g(arrdoc("arr",1,"dta",4)) i ps="" s ps=0
 s os="" f {
	 s os=$o(arrdoc("osc",os)) i os="" q
	 s nsos=+$g(@cglbOS@(os,"dta",4))
	 //km
	 s val=$g(arrdoc("osc",os,"dta",14))+$g(arrdoc("osc",os,"dta",15))+$g(arrdoc("osc",os,"dta",16))
	 s @dglbDC@("os",os,2,ps,"KM")=$g(@dglbDC@("os",os,2,ps,"KM"))+val
	 //km dlouhym vozem
	 s val=$g(arrdoc("osc",os,"dta",18))
	 s @dglbDC@("os",os,2,ps,"KMDV")=$g(@dglbDC@("os",os,2,ps,"KMDV"))+val
	 //mm jizda
	 s val=$g(arrdoc("osc",os,"dta",13))
	 s @dglbDC@("os",os,2,ps,"HODJIZ")=$g(@dglbDC@("os",os,2,ps,"HODJIZ"))+val
	 //mm bp
	 s val=$g(arrdoc("osc",os,"dta",32))
	 s @dglbDC@("os",os,2,ps,"HODBP")=$g(@dglbDC@("os",os,2,ps,"HODBP"))+val
	 //mm dodk
	 s val=$g(arrdoc("osc",os,"dta",6))
	 s @dglbDC@("os",os,2,ps,"HODDODK")=$g(@dglbDC@("os",os,2,ps,"HODDODK"))+val
	 //mm ost.prace
	 s val=$g(arrdoc("osc",os,"dta",24))
	 s @dglbDC@("os",os,2,ps,"HODOS")=$g(@dglbDC@("os",os,2,ps,"HODOS"))+val
	 //mm sone
	 s val=$g(arrdoc("osc",os,"dta",8))
	 s @dglbDC@("os",os,2,ps,"HODSONE")=$g(@dglbDC@("os",os,2,ps,"HODSONE"))+val
	 //mm sv
	 s val=$g(arrdoc("osc",os,"dta",9))
	 s @dglbDC@("os",os,2,ps,"HODSV")=$g(@dglbDC@("os",os,2,ps,"HODSV"))+val
	 //mm cek
	 s val=$g(arrdoc("osc",os,"dta",12))
	 s @dglbDC@("os",os,2,ps,"HODCEK")=$g(@dglbDC@("os",os,2,ps,"HODCEK"))+val
	 //kc die
	 s val=$g(arrdoc("osc",os,"dta",3))
	 s @dglbDC@("os",os,2,ps,"DIETOS")=$g(@dglbDC@("os",os,2,ps,"DIETOS"))+val
 }
 q
 //
rzpsji(arr,src)
 n (arr,src)
 // rozpis podle jizdy
 // src("JI",linka,dsp,ps)
 s val=+$g(arr) k arr k trsrc
 s sum=0
 s linka="" f  s linka=$o(src("JI",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(src("JI",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(src("JI",linka,dsp,ps)) q:ps=""  d
 ...// suma
 ...s sum=sum+$g(src("JI",linka,dsp,ps))
 ...// transformace src na pole bez linek trsrc
 ...s trsrc("JI",0,dsp,ps)=$g(trsrc("JI",0,dsp,ps))+$g(src("JI",linka,dsp,ps))
 // rozpocet
 s linka="" f  s linka=$o(trsrc("JI",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(trsrc("JI",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(trsrc("JI",linka,dsp,ps)) q:ps=""  d
 ...s cst=$g(trsrc("JI",linka,dsp,ps))
 ...s arr(dsp,ps)=0 s:sum arr(dsp,ps)=$j((val/sum)*cst,0,0)
 // rozdil
 s max=0 s maxind=""
 s dsp="" f  s dsp=$o(arr(dsp)) q:dsp=""  d
 .s ps="" f  s ps=$o(arr(dsp,ps)) q:ps=""  d
 ..s val=val-$g(arr(dsp,ps)) s:+$g(arr(dsp,ps))>max max=+$g(arr(dsp,ps)),maxind=dsp_"~"_ps
 i val&(maxind="") s tmpdsp="" s tmpps="" s tmpdsp=$o(arr("")) s:tmpdsp'="" tmpps=$o(arr(tmpdsp,"")) s:tmpps'="" maxind=tmpdsp_"~"_tmpps
 i val&(maxind'="") s arr($p(maxind,"~",1),$p(maxind,"~",2))=$g(arr($p(maxind,"~",1),$p(maxind,"~",2)))+val
 q
]]></Routine>


<Routine name="OBapiEDDSInfo" type="INT" languagemode="0" timestamp="63819,53692"><![CDATA[
 q
 //
 //ukazatele pro DS - DZVA + SJ
 //
 //U_KM		... km cekove
 //U_KMO	... km obsazene
 //U_KMN	... km neobsazene
 //U_KMT	... km tarifni
 //U_HODJIZ ... hodiny jizdy
 //U_HODPRV	... hodina provozu
 //U_HODCEK	... hodina cekani
 //U_MZSPZ	... mzda na RZ
 //U_DIETSPZ... diety na RZ
 //U_OSOB	... pocet osob
 //U_TRZBA	... trzba
 //U_MYTCZ	... myto v cz
 //
 //ukazatele pro DS - rozpocet mzdovych polozek - doklad 106
 //
 //U_KM		 ... km cekove							... podle prs
 //U_KMDV	 ... km dlouhym vozem					... podle U_KM
 //U_HODJIZ  ... hodiny jizdy 						... podle prs spoje
 //U_HODMA   ... hodiny manipulaci 					... podle prs spoje
 //U_HODDODK ... hodiny dodk 						... na dokladu podle hodin jizdy
 //U_HODBP	 ... hodiny bezpecnostnich prestavek 	... podle jizdy, kterou do BP najel
 //U_HODVY	 ... hodiny vyrovnavaci doby			... podle nasledujiho/predchoziho spoje    
 //U_HODOS	 ... hodiny ostatnich praci				... podle jizdy na dokladu
 //U_HODZS	 ... hodina zaskolovani					... podle jizdy na dokladu
 //U_HODSONE ... hodiny v sobotu,nedeli				... podle jizdy na dokladu
 //U_HODSV 	 ... hodiny ve svatek					... podle jizdy na dokladu
 //U_HODNC 	 ... hodiny v noci						... podle jizdy v noci, pokud neni, podle posledního spoje
 //U_HODCEK  ... hodina cekani						... podle nasledujiciho/predchoziho spoje
 //U_DIETOS  ... diety na os						... podle jizdy
 //
 //Bezpečnostní přestávka – nastaven přepravní systém podle posledního předcházejícího spoje. 
 //Ostatní práce – pokud nenásleduje žádný další spoj, nastaven přepravní systém podle posledního předcházejícího spoje, v ostatních případech nastaven přepravní systém podle prvního následujícího spoje.
 //DODK - pokud nenásleduje žádný další spoj, nastaven přepravní systém podle posledního předcházejícího spoje, v ostatních případech nastaven přepravní systém podle prvního následujícího spoje.
 //Čekání - nastaven přepravní systém podle prvního následujícího spoje.
 //Vyrovnávací doba - nastaven přepravní systém podle prvního následujícího spoje.
 //
 //@dglbOS("d",OS,NS,DSP,TYK,IDPOL)=val
 //
]]></Routine>


<Routine name="OBapiEDDSW" type="INT" languagemode="0" timestamp="63826,35852"><![CDATA[
OBapiEDDSW q
 //zalohy pro DS (plneni datoveho skladu)
 /*
mkDzva(idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 n (idfa,nmsp,zp,rrmm,doc,cglbOS,arrdoc,arr,arrALVAPodilTBNS,arrprsset,tmparr,arrset,cglbRZ,dglbDC)
 k tmparr k arrkmdsp k arrSpzNS
 s prv=zp#100
 s hrl=$g(arrdoc("dta",4))
 s spz=$g(arrdoc("dta",6))
 s ns=+$g(arrdoc("dta",16))
 s typa=+$g(arrdoc("dta",18))
 //konverze spz ke dni jizdy, ekos pocita se starymi spz
 s val=$$VehicleGetRz^ALVAVOZIDLAapiC($$GetSystemDB^ALVAVOZIDLAapiC(),spz,hrl)
 i (val'=-1)&(val'=-2) s spz=val
 //udaje spz
 i spz'="" d
 .i $d(@cglbRZ@(spz)) q
 .k tmparr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,spz,"",.tmparr)
 .m @cglbRZ@(spz)=tmparr k tmparr
 // ========================
 // ridici prima mzda, diety
 // ========================
 k mzdapri s mzdapri=0 k die s die=0 s cntos=0 s tmp=""
 s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 .i '$d(@cglbOS@(os)) d
 ..k tmparr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,os,"",.tmparr)
 ..m @cglbOS@(os)=tmparr
 ..k tmparr
 .s tmp=tmp_os_"-"_$g(@cglbOS@(os,"dta",1))_"/"
 .s cntos=cntos+1
 .f cnt=1:1:4,26 s mzdapri=mzdapri+$g(arrdoc("osc",os,"tuv",19,cnt))
 .s die=die+$g(arrdoc("osc",os,"tuv",18))
 i cntos=0 s cntos=1
 // ========================================================================================================================
 // 9.9.2014 - s lt ... vypnuto nefunguje v pripade, ze se ridici nepocita mzda (pak to posilalo od auta), problem s OSNADEM
 //========================================================================================================================= 
 //i 'mzdapri d 
 //.f cnt=1:1:4,26 s mzdapri=mzdapri+$g(arrdoc("arr","tuv",19,cnt))
 //.s mzdapri=mzdapri*cntos
 i $e(tmp,$l(tmp))="/" s tmp=$e(tmp,1,$l(tmp)-1)
 //==========================================================================
 // zaskolovani
 i $g(arrdoc("dta",7))="Z" q
 // pruvodci
 i $g(arrdoc("dta",7))="P" q
 // =========================================================================
 // pohon vozidla
 s drhphn=$g(@cglbRZ@(spz,"dta",12)) i 'drhphn s drhphn=1 	//1 N / 2 P / 3 B
 s ph=$g(arrdoc("dta",11))
 s phnafta="" i drhphn=1 s phnafta=ph
 s phplyn="" i drhphn=2 s phplyn=ph
 s phbenzin="" i drhphn=3 s phbenzin=ph
 s phfame=$g(arrdoc("dta",24)) s phb30=$g(arrdoc("dta",27)) s phtop=$g(arrdoc("dta",19))
 s adblue=$g(arrdoc("dta",20))
 s nor=$g(arrdoc("dta",15))
 s ph=ph+phfame+phb30
 // pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 i (+$g(@cglbRZ@(spz,"dta",12))=1)&(+$g(arrset("arr",6,28))) s ph=ph+phtop
 s provoz=+$g(arrdoc("arr","tuv",17))
 s cekani=+$g(arrdoc("arr","tuv",13))
 s jizda=+$g(arrdoc("arr","tuv",1))
 s kontrkm=+$g(arrdoc("arr","tuv",22))
 // informace
 s arr("I","I_RIDIC~"_tmp)=""
 s arr("I","I_TEXT~DZVA-pravidelná AD")=""
 s arr("I","I_DAPORI~"_$g(arrdoc("dta",2)))=""
 s arr("I","I_DATZ~"_$g(arrdoc("dta",4)))=""
 s arr("I","I_DATUM~"_$g(arrdoc("dta",4)))=""
 s tmp=+$g(arrdoc("dta",14)) s:'tmp tmp=1
 s arr("I","I_DNUDOK~"_tmp)=""
 s arr("I","I_DATK~"_($g(arrdoc("dta",4))+tmp-1))=""
 s:$g(arrdoc("dta",8))'="" arr("I","I_TACHZA~"_$g(arrdoc("dta",8)))=""
 s:$g(arrdoc("dta",7))'="" arr("I","I_TACHKO~"_$g(arrdoc("dta",7)))=""
 s:$g(arrdoc("dta",9))'="" arr("I","I_TACHC~"_$g(arrdoc("dta",9)))=""
 s:$g(arrdoc("dta",10))'="" arr("I","I_TACHKM~"_$g(arrdoc("dta",10)))=""
 s:$g(arrdoc("dta",12))'="" arr("I","I_PHMKOE~"_$g(arrdoc("dta",12)))=""
 s arr("I","I_PHM100~"_(+$g(arrdoc("dta",13))))=""
 s:$g(arrdoc("dta",17)) arr("I","I_KLOUB~"_$g(arrdoc("dta",17)))=""
 // ====
 // data
 // ====
 //===!!!===!!!===
 k tmparr 
 s cas="" f  s cas=$o(arrdoc("arr","tur",cas)) q:cas=""  d
 .//linka, spoj
 .i $g(arrdoc("arr","tur",cas,"dta",2))=3 d
 ..k ji,km,kmt
 ..s ji=$g(arrdoc("arr","tur",cas,"dta",4))
 ..s km=$g(arrdoc("arr","tur",cas,"dta",3))
 ..s kmt=$g(arrdoc("arr","tur",cas,"dta",13))
 ..s linka=+$g(arrdoc("arr","tur",cas,"dta",5))
 ..s spoj=+$g(arrdoc("arr","tur",cas,"dta",6))
 ..s ps=$g(arrdoc("arr","tur",cas,"dta",15)) i ps="" s ps=0
 ..s dsp=$g(arrdoc("arr","tur",cas,"dta",14))
 ..i 'dsp k arrsp s err=$$gSp^OBapiED(idfa,nmsp,linka,spoj,hrl,"",.arrsp) s dsp=+$g(arrsp("dta",4)) k arrsp s:'dsp dsp=1
 ..s dspds=dsp i dsp=7 s dspds=9		//posun dsp pro rezijni spoje
 ..s tykmds=(3+(dsp/100))				//typ km pro ds
 ..i dsp=7 s kmt=0						//vynulovani tarifnich km pro rezijni spoje
 ..s arrkmdsp(dspds)=$g(arrkmdsp(dspds))+km
 ..s km(ps)=km
 ..s kmt(ps)=kmt
 ..// vic prepravnich systemu 
 ..i $o(arrdoc("arr","tur",cas,"prs",""))'="" d
 ...k km,kmt
 ...s ps="" f  s ps=$o(arrdoc("arr","tur",cas,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",1)) s km(ps)=km
 ....s kmt=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",2)) s:dsp=7 kmt=0 s kmt(ps)=kmt
 ..// rozpocitam jizdu podle ps
 ..s err=$$rzpArr^OBapiED(.ji,.km,0) zt:+err "merr" s err=""
 ..// presne km
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s tmparr("KM",linka,dspds,ps)=$g(tmparr("KM",linka,dspds,ps))+km
 ...s tmparr("KM",linka,dspds,ps,tykmds)=$g(tmparr("KM",linka,dspds,ps,tykmds))+km
 ...s:dsp'=7 tmparr("KMO",linka,dspds,ps)=$g(tmparr("KMO",linka,dspds,ps))+km
 ...s:dsp=7 tmparr("KMN",linka,dspds,ps)=$g(tmparr("KMN",linka,dspds,ps))+km
 ..// tarifni km
 ..s ps="" f  s ps=$o(kmt(ps)) q:ps=""  d
 ...s kmt=$g(kmt(ps)) s tmparr("KMT",linka,dspds,ps)=$g(tmparr("KMT",linka,dspds,ps))+kmt
 ..// jizda
 ..s ps="" f  s ps=$o(ji(ps)) q:ps=""  d
 ...s ji=$g(ji(ps))
 ...s tmparr("JI",linka,dspds,ps)=$g(tmparr("JI",linka,dspds,ps))+ji
 ...s tmparr("JI",linka,dspds,ps,tykmds)=$g(tmparr("JI",linka,dspds,ps,tykmds))+ji
 .// ostatni km - rezijni
 .i ($g(arrdoc("arr","tur",cas,"dta",2))>3)&($g(arrdoc("arr","tur",cas,"dta",2))<8) d
 ..k ji,km,kmt
 ..s ji=$g(arrdoc("arr","tur",cas,"dta",4))
 ..s km=$g(arrdoc("arr","tur",cas,"dta",3))
 ..s kmt=0 //$g(arrdoc("arr","tur",cas,"dta",13))
 ..s linka=0
 ..s spoj=0
 ..s dsp="" s dspds="" s tykmds=""
 ..s ps=$g(arrdoc("arr","tur",cas,"dta",15)) i ps="" s ps=0
 ..// dohledam k rezijnim km (pristaveni, odstaveni, prejezd) co nasleduje nebo predchazi od toho dsp
 ..s fs=1 i $g(arrdoc("arr","tur",cas,"dta",2))=5 s fs=-1
 ..s ind=cas f  s ind=$o(arrdoc("arr","tur",ind),fs) q:(ind="")!(dsp'="")  d
 ...i $g(arrdoc("arr","tur",ind,"dta",2))'=3 q
 ...s dsp=$g(arrdoc("arr","tur",ind,"dta",14))
 ...i 'dsp k arrsp s err=$$gSp^OBapiED(idfa,nmsp,+$g(arrdoc("arr","tur",ind,"dta",5)),+$g(arrdoc("arr","tur",ind,"dta",6)),hrl,"",.arrsp) s dsp=+$g(arrsp("dta",4)) k arrsp s:'dsp dsp=1
 ..//pokud nic nenasleduje, tak co predchazi a naopak ridi se to fs
 ..i dsp="" d
 ...s fs=fs*(-1)
 ...s ind=cas f  s ind=$o(arrdoc("arr","tur",ind),fs) q:(ind="")!(dsp'="")  d
 ....i $g(arrdoc("arr","tur",ind,"dta",2))'=3 q
 ....s dsp=$g(arrdoc("arr","tur",ind,"dta",14))
 ....i 'dsp k arrsp s err=$$gSp^OBapiED(idfa,nmsp,+$g(arrdoc("arr","tur",ind,"dta",5)),+$g(arrdoc("arr","tur",ind,"dta",6)),hrl,"",.arrsp) s dsp=+$g(arrsp("dta",4)) k arrsp s:'dsp dsp=1
 ..//pokud jsou stale rezijni tak vnitro
 ..i 'dsp s dsp=1
 ..s dspds=dsp i dsp=7 s dspds=9
 ..s tykmds=($g(arrdoc("arr","tur",cas,"dta",2))+(dsp/100))	//typ km pro ds
 ..//pro rezijni jizdu dam typ km rezijni, nerozepisuje se podle druhu spoje 
 ..i ($g(arrdoc("arr","tur",cas,"dta",2))=7) s tykmds=7
 ..//=======================================================================
 ..s km(ps)=km
 ..// vic prepravnich systemu 
 ..i $o(arrdoc("arr","tur",cas,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","tur",cas,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","tur",cas,"prs",ps,"dta",1)) s km(ps)=km
 ....s km(ps)=km
 ..// rozpocitam jizdu podle ps
 ..s err=$$rzpArr^OBapiED(.ji,.km,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(ji(ps)) q:ps=""  d
 ...s ji=$g(ji(ps))
 ...s tmparr("JI",linka,(dspds+.1),ps)=$g(tmparr("JI",linka,(dspds+.1),ps))+ji
 ...s tmparr("JI",linka,(dspds+.1),ps,tykmds)=$g(tmparr("JI",linka,(dspds+.1),ps,tykmds))+ji
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s tmparr("KM",linka,(dspds+.1),ps)=$g(tmparr("KM",linka,(dspds+.1),ps))+km
 ...s tmparr("KM",linka,(dspds+.1),ps,tykmds)=$g(tmparr("KM",linka,(dspds+.1),ps,tykmds))+km
 ...s tmparr("KMN",linka,(dspds+.1),ps)=$g(tmparr("KMN",linka,(dspds+.1),ps))+km
 //zbytek casti spoju - km s dsp a ps
 s (linka,spoj)=0
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .s dsp="" f  s dsp=$o(arrdoc("arr","edv",hor,"arr",7,dsp)) q:dsp=""  d
 ..s dspds=dsp i dsp=7 s dspds=9
 ..s tykmds=(3+(dsp/100))				//typ km pro ds
 ..k km,ji
 ..s km=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",4))
 ..s ji=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",1))
 ..s ps=$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",6))
 ..s linka=+$g(arrdoc("arr","edv",hor,"arr",7,dsp,"dta",7))
 ..i 'km q
 ..i 'ps s ps=0
 ..s arrkmdsp(dspds)=$g(arrkmdsp(dspds))+km
 ..s km(ps)=km
 ..i $o(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","edv",hor,"arr",7,dsp,"prs",ps,"dta",1))
 ....s km(ps)=km
 ..// jizda
 ..s err=$$rzpArr^OBapiED(.ji,.km,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(ji(ps)) q:ps=""  d
 ...s ji=$g(ji(ps))
 ...s tmparr("JI",linka,dspds,ps)=$g(tmparr("JI",linka,dspds,ps))+ji
 ...s tmparr("JI",linka,dspds,ps,tykmds)=$g(tmparr("JI",linka,dspds,ps,tykmds))+ji
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...// presne km
 ...s tmparr("KM",linka,dspds,ps)=$g(tmparr("KM",linka,dspds,ps))+km
 ...s tmparr("KM",linka,dspds,ps,tykmds)=$g(tmparr("KM",linka,dspds,ps,tykmds))+km
 ...s:dsp'=7 tmparr("KMO",linka,dspds,ps)=$g(tmparr("KMO",linka,dspds,ps))+km
 ...s:dsp=7 tmparr("KMN",linka,dspds,ps)=$g(tmparr("KMN",linka,dspds,ps))+km
 ...// tarifni km
 ...s:dsp'=7 tmparr("KMT",linka,dspds,ps)=$g(tmparr("KMT",linka,dspds,ps))+km
 //dohledani dsp s nejvyssim poctem km
 s maxdsp=1 s maxkm=0
 s dsp="" f  s dsp=$o(arrkmdsp(dsp)) q:dsp=""  d
 .i $g(arrkmdsp(dsp))>maxkm s maxdsp=dsp s maxkm=$g(arrkmdsp(dsp))
 //rezijni km a objizdky
 s (linka,spoj)=0
 s dsp=maxdsp
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .s ind="" f  s ind=$o(arrdoc("arr","edv",hor,"arr",5,ind)) q:ind=""  d
 ..k km,ji
 ..// objizdky - konverze dsp
 ..s dsp=maxdsp s:ind=22 dsp=2 s:ind=23 dsp=3 s:ind=24 dsp=4 s:ind=25 dsp=5 s:ind=26 dsp=6
 ..// typ km pro ds
 ..s tykmds=ind
 ..s km=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",1))
 ..s ji=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",2))
 ..s ps=$g(arrdoc("arr","edv",hor,"arr",5,ind,"dta",5))
 ..i 'km q
 ..i ps="" s ps=0
 ..s km(ps)=km
 ..i $o(arrdoc("arr","edv",hor,"arr",5,ind,"prs",""))'="" d
 ...k km
 ...s ps="" f  s ps=$o(arrdoc("arr","edv",hor,"arr",5,ind,"prs",ps)) q:ps=""  d
 ....s km=+$g(arrdoc("arr","edv",hor,"arr",5,ind,"prs",ps,"dta",1))
 ....s km(ps)=km
 ..// jizda
 ..s err=$$rzpArr^OBapiED(.ji,.km,0) zt:+err "merr" s err=""
 ..s ps="" f  s ps=$o(ji(ps)) q:ps=""  d
 ...s ji=$g(ji(ps))
 ...s tmparr("JI",linka,(dsp+.1),ps)=$g(tmparr("JI",linka,(dsp+.1),ps))+ji
 ...s tmparr("JI",linka,(dsp+.1),ps,tykmds)=$g(tmparr("JI",linka,(dsp+.1),ps,tykmds))+ji
 ..s ps="" f  s ps=$o(km(ps)) q:ps=""  d
 ...s km=$g(km(ps))
 ...s tmparr("KM",linka,(dsp+.1),ps)=$g(tmparr("KM",linka,(dsp+.1),ps))+km
 ...s tmparr("KM",linka,(dsp+.1),ps,tykmds)=$g(tmparr("KM",linka,(dsp+.1),ps,tykmds))+km
 ...s tmparr("KMN",linka,(dsp+.1),ps)=$g(tmparr("KMN",linka,(dsp+.1),ps))+km
 // zbytek nespoje - jizda bez km
 s (linka,spoj)=0,dsp=1,tykmds=3.01
 s ps=$$gDlftValPrs^OBapiEDTur3(0,prv,ns,"","",.arrprsset) s:ps="" ps=0
 s hor="" f  s hor=$o(arrdoc("arr","edv",hor)) q:hor=""  d
 .q:'$d(arrdoc("arr","edv",hor,"arr",3,13))
 .s ji=$g(arrdoc("arr","edv",hor,"arr",3,13,"dta",2))
 .i 'ji q
 .s tmparr("JI",linka,dsp,ps)=$g(tmparr("JI",linka,dsp,ps))+ji
 .s tmparr("JI",linka,dsp,ps,tykmds)=$g(tmparr("JI",linka,dsp,ps,tykmds))+ji
 //===!!!===!!!
 // zapis do pole arr - km (presne)
 s linka="" f  s linka=$o(tmparr("KM",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KM",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KM",linka,dsp,ps)) q:ps=""  d
 ...//s km=+$g(tmparr("KM",linka,dsp,ps))
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s tykmds="" f  s tykmds=$o(tmparr("KM",linka,dsp,ps,tykmds)) q:tykmds=""  d
 ....s km=+$g(tmparr("KM",linka,dsp,ps,tykmds))
 ....s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"S_TYK~"_tykmds,"U_KM~"_km)=""
 // zapis do pole arr - km (obsazene)
 s linka="" f  s linka=$o(tmparr("KMO",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMO",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMO",linka,dsp,ps)) q:ps=""  d
 ...s km=+$g(tmparr("KMO",linka,dsp,ps))
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"U_KMO~"_km)=""
 //k tmparr("KMO")
 // zapis do pole arr - km (neobsazene)
 s linka="" f  s linka=$o(tmparr("KMN",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMN",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMN",linka,dsp,ps)) q:ps=""  d
 ...s km=+$g(tmparr("KMN",linka,dsp,ps))
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"U_KMN~"_km)=""
 //k tmparr("KMN")
 // kmt (tarifni)
 s linka="" f  s linka=$o(tmparr("KMT",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KMT",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KMT",linka,dsp,ps)) q:ps=""  d
 ...s kmt=+$g(tmparr("KMT",linka,dsp,ps))
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"U_KMT~"_kmt)=""
 // ji (jizda)
 s linka="" f  s linka=$o(tmparr("JI",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("JI",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("JI",linka,dsp,ps)) q:ps=""  d
 ...s ji=+$g(tmparr("JI",linka,dsp,ps))
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arrSpzNs(spz,newNS)=""
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_LIN~"_linka,"S_DSP~"_dsp,"S_PS~"_ps,"U_HODJIZ~"_ji)=""
 //dobu provozu rozpocitam podle doby jizdy
 i provoz d
 .d rzpsji(.provoz,.tmparr)
 .s dsp="" f  s dsp=$o(provoz(dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(provoz(dsp,ps)) q:ps=""  d
 ...s tmp=$g(provoz(dsp,ps))
 ...q:'tmp
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_HODPRV~"_tmp)=""
 // cekani rozpocitam podle doby jizdy
 i cekani d
 .d rzpsji(.cekani,.tmparr)
 .s dsp="" f  s dsp=$o(cekani(dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(cekani(dsp,ps)) q:ps=""  d
 ...s tmp=$g(cekani(dsp,ps))
 ...q:'tmp
 ...s newNS=ns i $g(arrprsset("arr",1,3)) i $g(arrALVAPodilTBNS(ns,ps))'="" s newNS=$g(arrALVAPodilTBNS(ns,ps))
 ...s arr("Dta","S_NS~"_newNS,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_dsp,"S_PS~"_ps,"U_HODCEK~"_tmp)=""
 // pole pro rozpocty
 k rarr
 s linka="" f  s linka=$o(tmparr("KM",linka)) q:linka=""  d
 .s dsp="" f  s dsp=$o(tmparr("KM",linka,dsp)) q:dsp=""  d
 ..s ps="" f  s ps=$o(tmparr("KM",linka,dsp,ps)) q:ps=""  d
 ...s km=+$g(tmparr("KM",linka,dsp,ps)) q:'km
 ...s rarr(dsp_"~"_ps)=$g(rarr(dsp_"~"_ps))+km
 // ============================================
 // primou mzdu rozpocitam na dsp a prs podle km
 // ============================================
 i mzdapri d
 .//je pole pro rozpocet
 .i $o(rarr(""))'="" d
 ..s err=$$rzpArr^OBapiED(.mzdapri,.rarr,1) zt:+err "merr" s err=""
 ..s myind="" f  s myind=$o(mzdapri(myind)) q:myind=""  d
 ...s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_$p(myind,"~",1),"S_PS~"_$p(myind,"~",2),"U_MZSPZ~"_$g(mzdapri(myind)))=""
 .//neni pole pro rozpocet
 .i $o(rarr(""))="" d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"U_MZSPZ~"_mzdapri)=""
 // ======================================
 // diety rozpocitam na dsp a prs podle km
 // ======================================
 i die d
 .//je pole pro rozpocet
 .i $o(rarr(""))'="" d
 ..s err=$$rzpArr^OBapiED(.die,.rarr,1) zt:+err "merr" s err=""
 ..s myind="" f  s myind=$o(die(myind)) q:myind=""  d
 ...s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"S_DSP~"_$p(myind,"~",1),"S_PS~"_$p(myind,"~",2),"U_DIETSPZ~"_$g(die(myind)))=""
 .//neni pole pro rozpocet
 .i $o(rarr(""))="" d
 ..s arr("Dta","S_NS~"_ns,"S_TYPA~"_typa,"S_SPZ~"_spz,"U_DIETSPZ~"_die)=""
 // zapis PHM pro rozpodilovani
 i $g(ph) s tmparr("PHM")=ph
 i $g(nor) s tmparr("PHMNOR")=nor
 i $g(phnafta) s tmparr("PHMN")=phnafta
 i $g(phplyn) s tmparr("PHMP")=phplyn
 i $g(phbenzin) s tmparr("PHMB")=phbenzin
 i $g(phfame) s tmparr("PHMES")=phfame
 i $g(phb30) s tmparr("PHME")=phb30
 i $g(phtop) s tmparr("PHMT")=phtop
 i $g(adblue) s tmparr("PHMA")=adblue
 s tmparr("SPZ")=spz
 s tmparr("NS")=ns
 //============================================================
 //data pro mzdovy rozpocet ridicu @dglbDC
 //dostupne pole:
 //tmparr("KM",linka,dsp,ps,tyk)=km
 //tmparr("JI",linka,dsp,ps,tyk)=mm !!! dodelat tyk
 //data rozpocitam podle km - pole tmparr("KM",0,dsp,ps,tyk)=km
 //============================================================
 //U_KM		 ... km cekove
 //U_KMDV	 ... km dlouhym vozem
 //U_KMPL	 ... km na linkach s priplatkem
 //U_HODJIZ  ... hodiny jizdy
 //U_HODMA   ... hodiny manipulaci
 //U_HODDODK ... hodiny dodk
 //U_HODBP	 ... hodiny bezpecnostnich prestavek
 //U_HODVY	 ... hodiny vyrovnavaci doby
 //U_HODOS	 ... hodiny ostatnich praci
 //U_HODCEK	 ... hodina zaskolovani
 //U_HODSONE ... hodiny v sobotu,nedeli
 //U_HODSV 	 ... hodiny ve svatek
 //U_HODPRV	 ... hodina provozu
 //U_HODCEK  ... hodina cekani
 //U_DIETOS  ... diety na os
 q
 */
]]></Routine>


<Routine name="OBapiEDDan" type="INT" languagemode="0" timestamp="65054,80357.142271"><![CDATA[
OBapiEDDan q
 // EDISON 
gDanSzbValDza(idfa,sysnmsp,nmsp,dza,hrl,in,out)
 n (idfa,sysnmsp,nmsp,dza,hrl,in,out)
 s $zt="err" k out
 i dza="" s err="dza=" zt "merr"
 i hrl="" s err="hrl=" zt "merr"
 // nactu druhy zajezdu
 k arr s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arr) zt:+err "merr" s err=""
 s danszb=$p($g(arr("arr",dza)),"~",8)
 k arr
 // vyse dane dle hrl
 k arr s err=$$gDanSzb^MlJFapi(idfa,sysnmsp,hrl,"",.arr) zt:+err "merr" s err=""
 i danszb=1 s out("dta",1)=0
 i danszb=2 s out("dta",1)=$g(arr("dta",2))		//snizena sazba 
 i danszb=3 s out("dta",1)=$g(arr("dta",1))		//zakladni sazba
 i danszb=4 s out("dta",1)=$g(arr("dta",3))		//snizena sazba 2 
 k arr
 q 0
 //
 //20.1.2019 lt: Od včerejška platí, že při výpočtu DPH z ceny včetně DPH se koeficient nezaokrouhluje na 4 desetinná místa.
 //gDanVal(val,dan) n (val,dan) s koef=$j((dan/(100+dan)),0,4) q $j(val*koef,0,2)
 //fce na vypocet dane z ceny zadane vcetne dane
gDanVal(val,dan) n (val,dan) s koef=(dan/(100+dan)) q $j(val*koef,0,2)
 //
 //tst w $$gDanDZA("SM_CSAD","MLINE","AD_V",53,+$h,"",.out) w ! zw out
 //
err s $zt="" k out q:$g(err)'="" "1~"_$tr($g(err),"~","/") q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDDoc" type="INT" languagemode="0" timestamp="64503,49270.391697"><![CDATA[
OBapiEDDoc q
tst()
 s idfa="VS_CSAD"
 s nmsp="USER"
 s iddoc="DZ|1340|1305|37306"
 //s iddoc="GR|38142|"_$$dn^OBapiED("2.5.2013")_"|DOV"
 k in
 s in("arr",2,38142)=""
 s in("arr",1,"4Z02805")=""
 s hrlmmfrom=$$wrapHrlMm^OBapiED($$dn^OBapiED("2.5.2013"),$$hm^OBapiED(10.00))
 s hrlmmto=$$wrapHrlMm^OBapiED($$dn^OBapiED("2.5.2013"),$$hm^OBapiED(23.40))
 s in("arr",3,hrlmmfrom)=hrlmmto
 w !,"err=",$$chckDocOverlap(idfa,nmsp,iddoc,.in,.out)
 zw out r a
 q
 //w $$gIntvDz^OBapiEDDoc("VS_CSAD","USER",1340,1305,37306,"",.arr) zw arr
 //k arrcis20 s err=$$gCis^OBapiED("VS_CSAD","USER",20,"",.arrcis20) zt:+err "merr" s err=""
 //k arrgrf s err=$$gGrfOs^OBapiED("VS_CSAD","USER",38142,$$dn^OBapiED("2.5.2013"),"NOC","",.arrgrf)
 //w $$gIntvGrOs^OBapiEDDoc("VS_CSAD","USER",$$dn^OBapiED("2.5.2013"),"NOC",.arrgrf,.arrcis20,"",.arr)
 //w $$gIntvSj^OBapiEDDoc("VS_CSAD","USER",1340,1305,108246,"",.arr) zw arr
 //k arrgrf w $$gGrfRz^OBapiED("VS_CSAD","USER","4Z02805",$$dn^OBapiED("2.5.2013"),"BOP","",.arrgrf)
 //w $$gIntvGrRz^OBapiEDDoc("VS_CSAD","USER",$$dn^OBapiED("2.5.2013"),"BOP",.arrgrf,.arrcis21,"",.out) zw out
 //
chckDocOverlap(idfa,nmsp,iddoc,in,out)
 // kontrola na prekryti dokladu pri uznavani
 // iddoc ... DZ... d|zp|rrmm|cdoc
 // iddoc ... SJ... d|zp|rrmm|cdoc
 // iddoc ... GR... g|os|hrl|idgrf
 // in("arr",1,rz)="" 		      ... rz na dokladu
 // in("arr",2,os)="" 			  ... os na dokladu
 // in("arr",3,hrlmmfrom)=hrlmmto ... intervaly dokladu ke kontrole
 // out("arr",1,os,cnt)=doklad, kde se prekryva
 // out("arr",2,rz,cnt)=doklad, kde se prekryva
 n (idfa,nmsp,iddoc,in,out) s $zt="err" k out
 //graf.cinnosti os
 k arrcis20 s err=$$gCis^OBapiED(idfa,nmsp,20,"",.arrcis20) zt:+err "merr" s err=""
 s qsj=$$qsj^OBapiED()
 s dz=$$gFaDz^OBapiED(idfa)
 s wrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrk)
 s hrlfrom=+$$unwrapHrlMm^OBapiED($o(in("arr",3,""))) s hrlto=hrlfrom
 s ind=$o(in("arr",3,""),-1) i ind'="" s hrlto=+$$unwrapHrlMm^OBapiED($g(in("arr",3,ind)))
 //typ dokladu a iddokladu
 s mydoctyp=$p(iddoc,"|",1) s iddoc=$p(iddoc,"|",2,$l(iddoc,"|"))
 // projdu os a vyhledam doklady ke kontrole
 s os="" f  {
	 s os=$o(in("arr",2,os)) i os="" q
	 k arri,wrk
	 s arri("osc",os)=""		//ridic
	 s arri("par",1)=1			//vraci vse
	 s err=$$lGrfOs^OBapiED(idfa,nmsp,(hrlfrom-7),hrlto,.arri,.wrk) zt:+err "merr"
	 s hrl="" f {
		 s hrl=$o(^CacheTempJB(wrk,dz,os,hrl)) i hrl="" q
		 s idgrf="" f {
			 s idgrf=$o(^CacheTempJB(wrk,dz,os,hrl,idgrf)) i idgrf="" q
			 k arrgrf s err=$$gGrfOs^OBapiED(idfa,nmsp,os,hrl,idgrf,"",.arrgrf) zt:+err "merr"
			 //prom pro doklad
			 s zp=$g(arrgrf("dta",7)) s rrmm=$g(arrgrf("dta",6)) s cdoc=idgrf
			 //===============
			 //doklad, ne ten, ktery kontroluji
			 i (idgrf?.n) i (zp=$p(iddoc,"|",1))&(rrmm=$p(iddoc,"|",2))&(cdoc=$p(iddoc,"|",3)) continue
			 //grafikon, ne ten, ktery kontroluji
			 i '(idgrf?.n) i (os=$p(iddoc,"|",1))&(hrl=$p(iddoc,"|",2))&(idgrf=$p(iddoc,"|",3)) continue
			 //grafikon, pouze hodinove polozky a vycpavky, ne kc
 			 i '(idgrf?.n) i $p($g(arrcis20("arr",idgrf)),"~",2)=2 continue
 			 //grafikon, ne VIC, program prochazi doklady zpetne
 			 i '(idgrf?.n) i idgrf="VIC" continue
 			 //grafikon, kontrola na hrl, zda je v pozadovanem intervalu hrl  
 			 i '(idgrf?.n) i '$$isOverlap(hrl,hrl,hrlfrom,hrlto) continue
			 //doklad
			 i (idgrf?.n) {
				 //dzva
				 i (idgrf'>qsj) {
					 k arr s err=$$gIntvDz(idfa,nmsp,zp,rrmm,idgrf,"",.arr)
					 s overlap=0
					 s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					 	 }
					 }
					 i overlap s out("arr",1,os,$i(out("arr",1,os)))="DZ-"_(zp#100)_"-"_$$rrrrmm^OBapiED(rrmm)_"-"_idgrf
				}
				 //sj
				 i (idgrf>qsj) {
					 s overlap=0
					 k arr s err=$$gIntvSj(idfa,nmsp,zp,rrmm,idgrf,"",.arr)
					 s overlap=0
					 s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					 	 }
					 }
					 i overlap s out("arr",1,os,$i(out("arr",1,os)))="SJ-"_(zp#100)_"-"_$$rrrrmm^OBapiED(rrmm)_"-"_(idgrf-qsj)
				 }
			 }
			 //grafikonova polozka
			 i '(idgrf?.n) {
				k arr s err=$$gIntvGrOs(idfa,nmsp,hrl,idgrf,.arrgrf,.arrcis20,"",.arr)
			 	s overlap=0
			 	s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					}
			 	}
				i overlap s out("arr",1,os,$i(out("arr",1,os)))="GRAF-"_idgrf	
			}
		 } 
	 }
	 k ^CacheTempJB(wrk)
 }
 // projdu rz a vyhledam doklady ke kontrole
 s rz="" f  {
	 s rz=$o(in("arr",1,rz)) i rz="" q
	 i rz="-" continue
	 k arri,wrk
	 s arri("rz",rz)=""		//rz
	 s arri("par",1)=1		//vraci vse
	 s err=$$lGrfRz^OBapiED(idfa,nmsp,(hrlfrom-7),hrlto,.arri,.wrk) zt:+err "merr"
	 s hrl="" f {
		 s hrl=$o(^CacheTempJB(wrk,dz,rz,hrl)) i hrl="" q
		 s idgrf="" f {
			 s idgrf=$o(^CacheTempJB(wrk,dz,rz,hrl,idgrf)) i idgrf="" q
			 k arrgrf s err=$$gGrfRz^OBapiED(idfa,nmsp,rz,hrl,idgrf,"",.arrgrf) zt:+err "merr"
			 //prom pro doklad
			 s zp=$g(arrgrf("dta",7)) s rrmm=$g(arrgrf("dta",6)) s cdoc=idgrf
			 //===============
			 //doklad, ne ten, ktery kontroluji
			 i (idgrf?.n) i (zp=$p(iddoc,"|",1))&(rrmm=$p(iddoc,"|",2))&(cdoc=$p(iddoc,"|",3)) continue
			 //grafikon, ne ten, ktery kontroluji
			 i '(idgrf?.n) i (os=$p(iddoc,"|",1))&(hrl=$p(iddoc,"|",2))&(idgrf=$p(iddoc,"|",3)) continue
			 //grafikon, pouze hodinove polozky a vycpavky, ne kc
 			 i '(idgrf?.n) i $p($g(arrcis20("arr",idgrf)),"~",2)=2 continue
 			 //grafikon, ne VIC, program prochazi doklady zpetne
 			 i '(idgrf?.n) i idgrf="VIC" continue
 			 //grafikon, kontrola na hrl, zda je v pozadovanem intervalu hrl  
 			 i '(idgrf?.n) i '$$isOverlap(hrl,hrl,hrlfrom,hrlto) continue
			 //doklad
			 i (idgrf?.n) {
				 //dzva
				 i (idgrf'>qsj) {
					 k arr s err=$$gIntvDz(idfa,nmsp,zp,rrmm,idgrf,"",.arr)
					 s overlap=0
					 s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					 	 }
					 }
					 i overlap s out("arr",2,rz,$i(out("arr",2,rz)))="DZ-"_(zp#100)_"-"_$$rrrrmm^OBapiED(rrmm)_"-"_idgrf
				}
				 //sj
				 i (idgrf>qsj) {
					 s overlap=0
					 k arr s err=$$gIntvSj(idfa,nmsp,zp,rrmm,idgrf,"",.arr)
					 s overlap=0
					 s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					 	 }
					 }
					 i overlap s out("arr",2,rz,$i(out("arr",2,rz)))="SJ-"_(zp#100)_"-"_$$rrrrmm^OBapiED(rrmm)_"-"_(idgrf-qsj)
				 }
			 }
			 //grafikonova polozka
			 i '(idgrf?.n) {
				k arr s err=$$gIntvGrRz(idfa,nmsp,hrl,idgrf,.arrgrf,"","",.arr)
			 	s overlap=0
			 	s dhrlmmfrom="" f {
						 s dhrlmmfrom=$o(arr("arr",1,dhrlmmfrom)) i dhrlmmfrom="" q
						 s dhrlmmto=$g(arr("arr",1,dhrlmmfrom))
						 s hrlmmfrom="" f {
							 s hrlmmfrom=$o(in("arr",3,hrlmmfrom)) i hrlmmfrom="" q
							 s hrlmmto=$g(in("arr",3,hrlmmfrom))
							 i $$isOverlap(hrlmmfrom,hrlmmto,dhrlmmfrom,dhrlmmto) s overlap=1
					}
			 	}
				i overlap s out("arr",2,rz,$i(out("arr",2,rz)))="GRAF-"_idgrf	
			}
		 } 
	 }
	 k ^CacheTempJB(wrk)
 }
 q 0
isOverlap(beg1,end1,beg2,end2)
 n (beg1,end1,beg2,end2)
 s beg1=$j(beg1,0,0)
 s end1=$j(end1,0,0)
 s beg2=$j(beg2,0,0)
 s end2=$j(end2,0,0)
 // tesne napojene
 i end1=beg2 q 0
 i end2=beg1 q 0
 // vetsi ze spodnich hranic
 s beg=beg1 i beg2>beg s beg=beg2
 // mensi z hornich hranic
 s end=end1 i end2<end s end=end2
 // spodni neni vetsi nez horni
 i beg'>end q 1
 q 0
gIntvDz(idfa,nmsp,zp,rrmm,cdoc,in,out)
 //v out intervaly cinnosti ... out("arr",1,hrlmmfrom)=hrlmmto
 n (idfa,nmsp,zp,rrmm,cdoc,in,out) k out s err=""
 k arr s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arr)
 s dhrlfrom=$g(arr("dta",4))
 s dtmfrom=$j($o(arr("arr","tur","")),0,0) s dtmto=dtmfrom
 s ind=$o(arr("arr","tur",""),-1) i ind'="" s dtmto=$j($g(arr("arr","tur",ind,"dta",1)),0,1)
 s dhrlmmfrom=$$wrapHrlMm^OBapiED(dhrlfrom,dtmfrom)
 s dhrlmmto=$$wrapHrlMm^OBapiED((dhrlfrom+(dtmto\1440)),(dtmto#1440))
 s out("arr",1,dhrlmmfrom)=dhrlmmto
 q 0
gIntvSj(idfa,nmsp,zp,rrmm,cdoc,in,out)
 //v out intervaly cinnosti ... out("arr",1,hrlmmfrom)=hrlmmto
 n (idfa,nmsp,zp,rrmm,cdoc,in,out) k out s err=""
 k arr s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arr)
 s dhrlfrom=$g(arr("dta",6)) s dtmfrom=$g(arr("dta",57))
 s dhrlmmfrom=$$wrapHrlMm^OBapiED(dhrlfrom,dtmfrom)
 s dtmto=$g(arr("dta",7)) s dtmto=$g(arr("dta",58))
 i (dtmfrom="")&(dtmto="") s dtmto=1439					//pokud neni zadan cas, pak cely den
 s dhrlmmto=$$wrapHrlMm^OBapiED(dhrlfrom,dtmto)
 s out("arr",1,dhrlmmfrom)=dhrlmmto
 q 0
gIntvGrOs(idfa,nmsp,hrl,idgrf,arrgrf,arrcis20,in,out)
 //v out intervaly cinnosti ... out("arr",1,hrlmmfrom)=hrlmmto
 n (idfa,nmsp,hrl,idgrf,arrgrf,arrcis20,in,out) k out s err=""
 //vycpavka a nebo hodiny bez casove pozice - cely den
 i ($p($g(arrcis20("arr",idgrf)),"~",2)=3)!(($p($g(arrcis20("arr",idgrf)),"~",2)=1)&('$p($g(arrcis20("arr",idgrf)),"~",10))) {
 	s dhrlmmfrom=$$wrapHrlMm^OBapiED(hrl,"")
	s dhrlmmto=$$wrapHrlMm^OBapiED(hrl,1439)
	s out("arr",1,dhrlmmfrom)=dhrlmmto
 }
 i (($p($g(arrcis20("arr",idgrf)),"~",2)=1)&($p($g(arrcis20("arr",idgrf)),"~",10)=1)) {
 	f id=9,11 {
		i ($g(arrgrf("dta",id))'="")!($g(arrgrf("dta",(id+1)))'="") {
			s dhrlmmfrom=$$wrapHrlMm^OBapiED(hrl,$g(arrgrf("dta",id)))
			s dhrlmmto=$$wrapHrlMm^OBapiED(hrl,$g(arrgrf("dta",(id+1))))
			s out("arr",1,dhrlmmfrom)=dhrlmmto
		}
	}
	// nezadane intervaly cinnosti ... cely den
	i $o(out("arr",1,""))="" {
		s dhrlmmfrom=$$wrapHrlMm^OBapiED(hrl,"")
		s dhrlmmto=$$wrapHrlMm^OBapiED(hrl,1439)
		s out("arr",1,dhrlmmfrom)=dhrlmmto		
	}
 }
 q 0
gIntvGrRz(idfa,nmsp,hrl,idgrf,arrgrf,arrcis21,in,out)
 //v out intervaly cinnosti ... out("arr",1,hrlmmfrom)=hrlmmto
 n (idfa,nmsp,hrl,idgrf,arrgrf,arrcis21,in,out) k out s err=""
 // zadane intervaly u graf. polozky
 f id=14,16 {
	i ($g(arrgrf("dta",id))'="")!($g(arrgrf("dta",(id+1)))'="") {
		s dhrlmmfrom=$$wrapHrlMm^OBapiED(hrl,$g(arrgrf("dta",id)))
		s dhrlmmto=$$wrapHrlMm^OBapiED(hrl,$g(arrgrf("dta",(id+1))))
		s out("arr",1,dhrlmmfrom)=dhrlmmto
	}
 }
 // nezadane intervaly cinnosti ... cely den
 i $o(out("arr",1,""))="" {
 	s dhrlmmfrom=$$wrapHrlMm^OBapiED(hrl,"")
	s dhrlmmto=$$wrapHrlMm^OBapiED(hrl,1439)
	s out("arr",1,dhrlmmfrom)=dhrlmmto
 }
 q 0
 //
canSaveKmToVehicle(idfa,nmsp,zp,rrmm)
 //fce povoluje/blokuje ukladani km na vozidla pro udrzbu
 //zatim natvrdo, pozdeji mozno na nastaveni
 s rrrrmm=$$rrrrmm^OBapiED(rrmm)
 //u arriva city neaktualizovat km pro doklady z provozu zp=108 a obdobi 201701 - 201705
 //(jsou to doklady byvale arrivy teplice a doklady jsou uznane ve stare firme)
 i (idfa="PH_VTPR")&(zp=108)&(rrrrmm=201701) q 0
 i (idfa="PH_VTPR")&(zp=108)&(rrrrmm=201702) q 0
 i (idfa="PH_VTPR")&(zp=108)&(rrrrmm=201703) q 0
 i (idfa="PH_VTPR")&(zp=108)&(rrrrmm=201704) q 0
 i (idfa="PH_VTPR")&(zp=108)&(rrrrmm=201705) q 0
 q 1
 //
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDocKntBus" type="INT" languagemode="0" timestamp="63326,28622"><![CDATA[
OBapiEDDocKntBus
 q
sVcKntBus(idfa,nmsp,hrl,rz,iddoc,idos,in,out)
 n (idfa,nmsp,hrl,rz,iddoc,idos,in,out) k out s err="" s zt="err"
 //hrl .......... je hrl jizdy
 //rz ........... je rz autobusu
 //iddoc ........ je id dokladu (zp|rrmm|cdoc)
 //idos ......... je id uzivatele (mlp~loginname~fullname)
 //in("arr",3,... data kontroly z dz/sj
 //kontrola zda byla provedena kontrola vozu
 i '$g(in("arr",3,"dta",1)) q 0
 //=========================================
 //pro rz="-" ne, fiktivni
 i $g(rz)="-" q 0
 //=======================
 //systemovy namespace
 s sysnmsp=##class(ALVA.VOZIDLA.MLAPI).GetSystemDB()
 //zjistim id pro Vc
 k arrknt s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestGetId(idfa,sysnmsp,iddoc,.arrknt)
 s hrlknt="" s cntknt="" s hrlknt=$o(arrknt("")) i hrlknt s cntknt=$o(arrknt(hrlknt,""))
 i hrlknt="" s hrlknt=+hrl
 //jeli id, kontrola, zda muzu zapsat
 s used=0 i (hrlknt)&(cntknt) s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestUsed(idfa,sysnmsp,hrlknt,cntknt,.used)
 i 'used {
	//zapis 
	s os=$o(in("osc","")) s jm=""
	i os'="" {
		k arros
		s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,os,"",.arros)
		s jm=$g(arros("dta",1))
	}
 	k arrknt
 	s arrknt("dta",1)=##class(ALVA.VOZIDLA.MLAPI).VehicleGetIdc(sysnmsp,rz)
 	s arrknt("dta",2)=$g(in("arr",3,"dta",1)) //kontrola
 	s arrknt("dta",3)=$g(in("arr",3,"stt",1)) //stav
 	s arrknt("dta",4)="" s cnt="" f  s cnt=$o(in("arr",3,"dsc",cnt)) q:cnt=""  s arrknt("dta",4)=$g(arrknt("dta",4))_$g(in("arr",3,"dsc",cnt))_$c(13,10)
 	s arrknt("dta",5)=os
 	s arrknt("dta",6)=jm
 	s arrknt("dta",7)=iddoc
 	s arrknt("dta",8)=""
 	s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestWrite(idfa,sysnmsp,$tr(idos,"~","|"),hrlknt,cntknt,.arrknt)
 } 
 q 0
gVcKntBus(idfa,nmsp,hrl,rz,iddoc,idos,in,out)
 n (idfa,nmsp,hrl,rz,iddoc,idos,in,out) k out s err="" s zt="err"
 //pro rz="-" ne, fiktivni
 i $g(rz)="-" q 0
 //=======================
 //systemovy namespace
 s sysnmsp=##class(ALVA.VOZIDLA.MLAPI).GetSystemDB()
 //zjistim id pro Vc
 k arrknt s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestGetId(idfa,sysnmsp,iddoc,.arrknt)
 s hrlknt="" s cntknt="" s hrlknt=$o(arrknt("")) i hrlknt s cntknt=$o(arrknt(hrlknt,""))
 //kontrola, zda existuje
 i (hrlknt)&(cntknt) {
	 s exist=0
	 s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestExist(idfa,sysnmsp,hrlknt,cntknt,.exist)
	 i $g(exist) {
		 k arrknt
		 s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestRead(idfa,sysnmsp,hrlknt,cntknt,.arrknt)
		 s out("arr",3,"dta",1)=$g(arrknt("dta",2)) //kontrola
		 s out("arr",3,"stt",1)=$g(arrknt("dta",3)) //stav
		 f cnt=1:1:$l($g(arrknt("dta",4)),$c(13,10)) {
			 s out("arr",3,"dsc",cnt)=$p($g(arrknt("dta",4)),$c(13,10),cnt)
		 }
		 s out("stt")=1
	 }
 }
 q 0
dVcKntBus(idfa,nmsp,hrl,rz,iddoc,idos,in,out)
 n (idfa,nmsp,hrl,rz,iddoc,idos,in,out) k out s err="" s zt="err"
 //pro rz="-" ne, fiktivni
 i $g(rz)="-" q 0
 //=======================
 //systemovy namespace
 s sysnmsp=##class(ALVA.VOZIDLA.MLAPI).GetSystemDB()
 //zjistim id pro Vc
 k arrknt s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestGetId(idfa,sysnmsp,iddoc,.arrknt)
 s hrlknt="" s cntknt="" s hrlknt=$o(arrknt("")) i hrlknt s cntknt=$o(arrknt(hrlknt,""))
 //kontrola, zda neni pouzit 
 i (hrlknt)&(cntknt) {
	 s used=0
	 s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestUsed(idfa,sysnmsp,hrlknt,cntknt,.used)
	 i '$g(used) {
		 k arrknt
		 s err=##class(ALVA.VOZIDLA.MLAPI).MaintenanceRequestDelete(idfa,sysnmsp,$tr(idos,"~","|"),hrlknt,cntknt,.arrknt)
	 }
 }
 q 0
err s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDtaDoc" type="INT" languagemode="0" timestamp="64566,45544.204768"><![CDATA[
OBapiEDDtaDoc q
gSumDtaJDC(idfa,nmsp,rrrrmm,glb,in,out)
 n (idfa,nmsp,rrrrmm,glb,in,out)
 // vraci data z dokladu pro JDC
 //             1      2      3         4  5           6        7       8       9    10
 // @glb@(1,id)=provoz~rrrrmm~iddokladu~rz~dat.zacatku~km celk.~ph.tank~ph.norm~mzda~diety
 // @glb@(2,rrrrmm,osc,rz)=km
 //
 s $zt="err" k out s err=""
 s rrmm=rrrrmm#10000
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(rrmm)="" s err="rrmm=" zt "merr"
 i $g(glb)=""  s err="glb=" zt "merr"
 s dz=$$gFaDz^OBapiED(idfa)
 //========================
 //<napocet dokladu - dzva>
 //========================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=1
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...i $g(arrout("dta",7))="Z" q
 ...i $g(arrout("dta",7))="P" q
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",1)=zp#100								//provoz
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",2)=rrrrmm								//obdobi
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",3)=doc									//doklad
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",4)=$g(arrout("dta",6))					//rz
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",5)=$$nd^OBapiED($g(arrout("dta",4)),0)	//zacatek
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",6)=$g(arrout("arr","tuv",22))			//km celkem
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",7)=$g(arrout("dta",11))					//ph.tank
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",8)=$g(arrout("dta",15))					//ph.norm
 ...s cntosc=0
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""   s cntosc=cntosc+1 
 ...s:'cntosc cntosc=1
 ...s mzdall=0 s dieall=0
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....f id=1,2,3,4,26,28,34,36,38 d
 .....s mzdall=mzdall+$g(arrout("osc",osc,"tuv",19,id))
 ....s dieall=dieall+$g(arrout("osc",osc,"tuv",18))
 ....//neni pendl
 ....i '$g(arrout("osc",osc,"dta",3)) d
 .....s @glb@(2,rrrrmm,osc,$g(arrout("dta",6)))=$g(@glb@(2,rrrrmm,osc,$g(arrout("dta",6))))+$j(($g(arrout("arr","tuv",22))/cntosc),0,2)
 ....//je pendl
 ....i +$g(arrout("osc",osc,"dta",3)) d
 .....s @glb@(2,rrrrmm,osc,$g(arrout("dta",6)))=$g(@glb@(2,rrrrmm,osc,$g(arrout("dta",6))))+$g(arrout("osc",osc,"dta",11))
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",9)=mzdall								//mzda
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",10)=dieall					            //diety
 .k ^CacheTempJB(wrk)
 //<napocet dokladu - sj>
 //======================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=2
 s err=$$lSj^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",1)=zp#100								//provoz
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",2)=rrrrmm								//obdobi
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",3)=(doc-$$qsj^OBapiED())				//doklad
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",4)=$g(arrout("dta",8))					//rz
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",5)=$$nd^OBapiED($g(arrout("dta",6)),0)	//zacatek
 ...s km=$g(arrout("dta",16))+$g(arrout("dta",17))+$g(arrout("dta",18))
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",6)=km									//km celkem
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",7)=$g(arrout("dta",22))					//ph.tank
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",8)=$g(arrout("dta",45))					//ph.norm
 ...s cntosc=0
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""   s cntosc=cntosc+1 
 ...s:'cntosc cntosc=1
 ...s mzdall=0 s dieall=0
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....f id=10,11,19,20,22,23,24,25,26,28,30,31 d
 .....s mzdall=mzdall+$g(arrout("osc",osc,"dta",id))
 ....s dieall=dieall+$g(arrout("osc",osc,"dta",3))
 ....//neni pendl
 ....i '$g(arrout("osc",osc,"pnd",1)) d
 .....s km=$g(arrout("dta",16))+$g(arrout("dta",17))+$g(arrout("dta",18))
 .....s @glb@(2,rrrrmm,osc,$g(arrout("dta",8)))=$g(@glb@(2,rrrrmm,osc,$g(arrout("dta",8))))+$j((km/cntosc),0,0)
 ....//je pendl
 ....i +$g(arrout("osc",osc,"pnd",1)) d
 .....s km=$g(@glb@(2,rrrrmm,osc,$g(arrout("dta",8))))+$g(arrout("osc",osc,"pnd",4))+$g(arrout("osc",osc,"pnd",5))+$g(arrout("osc",osc,"pnd",6))
 .....s @glb@(2,rrrrmm,osc,$g(arrout("dta",8)))=km
 ....s dieall=dieall+$g(arrout("osc",osc,"arr",3))
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",9)=mzdall									//mzda
 ...s $p(@glb@(1,zp_"|"_rrrrmm_"|"_doc),"~",10)=dieall					            	//diety
 .k ^CacheTempJB(wrk)
 q 0
 //
gDtaSpHrlRzDoc(idfa,nmsp,in,out)
 // err=$$gDtaSpHrlRzDoc(idfa,nmsp,in,out) - sestaví prehled odjetych spoju v dokladech, ktere vyhovuji parametrum v in
 // a zapise je do:
 // - ^CacheTempJB(wrk,"l",li,sp,hrl,spz,"zp|rrmm|doc")=km
 //    - rozpis jizdy po spz a dokladech
 //    - prejizdi-li linka do nasledujiciho dne, je uvedena pro oba dny, km se napoctou pouze pro prvni den
 // - ^CacheTempJB(wrk,"p",li,sp,hrl)=km
 //    - rozpis jizdy po dnech (hrl=pouze datum vyjezdu)
 // (jsou zapocteny i casti spoju)
 // v out vrati wrk (out=wrk)
 // in -
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("rrmm",rrmm)=""        - hleda jen v rrmm
 //
 s $zt="err"
 n (idfa,nmsp,in,out)
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 k out s wrk=$$gWrkJB^OBapiED() s out=wrk
 // vyhledani dokladu
 k wrklst
 s err=$$lDz^OBapiED(idfa,nmsp,.in,.wrklst) zt:+err "merr" s err=""
 // =================
 // sestaveni prehledu - linky, spoje
 k ^CacheTempJB(out)
 s zp="" f  s zp=$o(^CacheTempJB(wrklst,zp)) q:zp=""  d
 .s rrmm="" f  s rrmm=$o(^CacheTempJB(wrklst,zp,rrmm)) q:rrmm=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrklst,zp,rrmm,doc)) q:doc=""  d
 ...k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 ...q:$g(arrdoc("dta",7))["Z"
 ...q:$g(arrdoc("dta",7))["P"
 ...s hrl=$g(arrdoc("dta",4))
 ...s spz=$g(arrdoc("dta",6))
 ...s time="" f  s time=$o(arrdoc("arr","tur",time)) q:time=""  d
 ....q:($g(arrdoc("arr","tur",time,"dta",2))'=3)
 ....s timepri=$g(arrdoc("arr","tur",time,"dta",1))\1
 ....s li=$g(arrdoc("arr","tur",time,"dta",5))
 ....s sp=$g(arrdoc("arr","tur",time,"dta",6))
 ....//konverze cisla spoje na originalni spoj
 ....k tmpsp s err=$$gOrgNumSp^OBapiED(idfa,nmsp,li,sp,(hrl+(time\1440)),"",.tmpsp) i tmpsp'="" s sp=tmpsp
 ....s km=$g(arrdoc("arr","tur",time,"dta",3))
 ....s $p(^CacheTempJB(out,"l",li,sp,(hrl+(time\1440)),spz,(zp_"|"_rrmm_"|"_doc)),"~",1)=$p($g(^CacheTempJB(out,"l",li,sp,(hrl+(time\1440)),spz,(zp_"|"_rrmm_"|"_doc))),"~",1)+km
 ....s $p(^CacheTempJB(out,"p",li,sp,(hrl+(time\1440))),"~",1)=$p($g(^CacheTempJB(out,"p",li,sp,(hrl+(time\1440)))),"~",1)+km
 ....// dalsi dni (nenapocitavam km)
 ....f phrl=(time\1440):1:(timepri\1440) d
 .....s $p(^CacheTempJB(out,"l",li,sp,(hrl+phrl),spz,(zp_"|"_rrmm_"|"_doc)),"~",1)=$p($g(^CacheTempJB(out,"l",li,sp,(hrl+phrl),spz,(zp_"|"_rrmm_"|"_doc))),"~",1)+0
 ...// sestaveni prehledu - casti spoju
 ...s hrl="" f  s hrl=$o(arrdoc("arr","edv",hrl)) q:hrl=""  d
 ....q:'$d(arrdoc("arr","edv",hrl,"arr",7))
 ....s dsp="" f  s dsp=$o(arrdoc("arr","edv",hrl,"arr",7,dsp)) q:dsp=""  d
 .....// neni rozpis - sumarne na jednu linku a spoj
 .....i '$d(arrdoc("arr","edv",hrl,"arr",7,dsp,"rzp")) d  q
 ......s km=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"dta",4))
 ......s li=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"dta",7))
 ......s sp=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"dta",8))
 ......i li="" q
 ......i sp="" q
 ......//konverze cisla spoje na originalni spoj
 ......k tmpsp s err=$$gOrgNumSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.tmpsp) i tmpsp'="" s sp=tmpsp
 ......s $p(^CacheTempJB(out,"l",li,sp,hrl,spz,(zp_"|"_rrmm_"|"_doc)),"~",1)=$p($g(^CacheTempJB(out,"l",li,sp,hrl,spz,(zp_"|"_rrmm_"|"_doc))),"~",1)+km
 ......s $p(^CacheTempJB(out,"p",li,sp,hrl),"~",1)=$p($g(^CacheTempJB(out,"p",li,sp,hrl)),"~",1)+km
 .....// je rozpis - linky a spoje podle nej
 .....s cnt="" f  s cnt=$o(arrdoc("arr","edv",hrl,"arr",7,dsp,"rzp",cnt)) q:cnt=""  d
 ......s km=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"rzp",cnt,"dta",4))
 ......s li=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"rzp",cnt,"dta",5))
 ......s sp=$g(arrdoc("arr","edv",hrl,"arr",7,dsp,"rzp",cnt,"dta",6))
 ......i li="" q
 ......i sp="" q
 ......//konverze cisla spoje na originalni spoj
 ......k tmpsp s err=$$gOrgNumSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.tmpsp) i tmpsp'="" s sp=tmpsp
 ......s $p(^CacheTempJB(out,"l",li,sp,hrl,spz,(zp_"|"_rrmm_"|"_doc)),"~",1)=$p($g(^CacheTempJB(out,"l",li,sp,hrl,spz,(zp_"|"_rrmm_"|"_doc))),"~",1)+km
 ......s $p(^CacheTempJB(out,"p",li,sp,hrl),"~",1)=$p($g(^CacheTempJB(out,"p",li,sp,hrl)),"~",1)+km
 k ^CacheTempJB(wrklst)
 q 0
 //
err s $zt="" q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDtaKmRz" type="INT" languagemode="0" timestamp="65514,44883.808344"><![CDATA[
OBapiEDDtaKmRz q
gDtaKmRz(idfa,nmsp,glb,in,out)
 // s err=$$gDtaKmRz(idfa,nmsp,glb,.in,.out)
 // in:
 // in("prv",prv)=""            - hleda jen v provozovne
 // in("rrrr",rrrr)=""          - hleda v rocich
 // in("rrmm",rrmm)=""          - hleda jen v rrmm
 // in("spz",spz)=""            - hleda jen spz
 // in("subdodavka")=0/1/2		- 0 vse / 1 bez subdodavek / 2 pouze subdodavky
 // out:
 // prehled km dle prepravnich systemu
 // @glb@("arr",spz,"arr",1,rrmm,idprs)=km
 // prehled km dotovana/nedotovana dle casovych pravidel (pro dotace na auta)
 // @glb@("arr",spz,"arr",2,rrmm,1)=dotovane km
 // @glb@("arr",spz,"arr",2,rrmm,1,idprs)=dotovane km
 // @glb@("arr",spz,"arr",2,rrmm,2)=nedotovane km
 // @glb@("arr",spz,"arr",2,rrmm,2,idprs)=nedotovane km
 // @glb@("arr",spz,"arr",2,rrmm,-1)=ostatni km
 // @glb@("arr",spz,"arr",2,rrmm,-1,idprs)=ostatni km
 // @glb@("arr",spz,"arr",2,0,...)=suma
 // prehled km pravidelna/nepravidelna (pro silnicni dan)
 // @glb@("arr",spz,"arr",3,rrmm,1)=pravidelna doprava tuzemska km
 // @glb@("arr",spz,"arr",3,rrmm,2)=pravidelna doprava zahranici km
 // @glb@("arr",spz,"arr",3,rrmm,3)=nepravidelna doprava km
 // @glb@("arr",spz,"arr",3,0,...)=suma
 // =====================================
 n (idfa,nmsp,glb,in,out)
 s $zt="err" s err="" k out
 s vehicledb=##class(ALVA.VOZIDLA.MLAPI).GetSystemDB()
 // konverze rrrr na rrrrmm
 s rrrr="" f  s rrrr=$o(in("rrrr",rrrr)) q:rrrr=""  d
 .k arrrrmm s err=$$gArrRrmm^OBapiED(((rrrr*100)+1),((rrrr*100)+12),1,.arrrrmm) zt:+err "merr" s err=""
 .m in("rrmm")=arrrrmm
 // =======================
 // data z dokladu DZVA
 k arri,wrk m arri("prv")=in("prv") m arri("rrmm")=in("rrmm") i $o(in("spz",""))'="" m arri("spz")=in("spz")
 s err=$$lDz^OBapiED(idfa,nmsp,.arri,.wrk) zt:+err "merr" s err=""
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s rrmm="" f  s rrmm=$o(^CacheTempJB(wrk,zp,rrmm)) q:rrmm=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...s iddoc=nmsp_"|"_zp_"|"_rrmm_"|"_doc
 ...k arrps
 ...k arrDzva s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrDzva) zt:+err "merr" s err=""
 ...// ne zaskolovani, pruvodci
 ...q:($g(arrDzva("dta",7))["Z")!($g(arrDzva("dta",7))["P")
 ...//subdodavky
 ...i +$g(in("subdodavka"))=1 i +$g(arrDzva("dta",32)) q 
 ...i +$g(in("subdodavka"))=2 i '$g(arrDzva("dta",32)) q 
 ...s hrl=$g(arrDzva("dta",4)) s spz=$g(arrDzva("dta",6)) s:spz="" spz="-"
 ...s spz=##class(ALVA.VOZIDLA.MLAPI).VehicleGetRz(vehicledb,spz,+$h)
 ...s idprs="" f  s idprs=$o(arrDzva("arr",4,idprs)) q:idprs=""  d
 ....s dsp="" f  s dsp=$o(arrDzva("arr",4,idprs,dsp)) q:dsp=""  d
 .....s km=$g(arrDzva("arr",4,idprs,dsp))
 .....s @glb@("arr",spz,"arr",1,rrmm,idprs)=$g(@glb@("arr",spz,"arr",1,rrmm,idprs))+km
 k ^CacheTempJB(wrk)
 // data z dokladu SJ
 k arri,wrk m arri("prv")=in("prv") m arri("rrmm")=in("rrmm") i $o(in("spz",""))'="" m arri("spz")=in("spz")
 s err=$$lSj^OBapiED(idfa,nmsp,.arri,.wrk) zt:+err "merr" s err=""
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s rrmm="" f  s rrmm=$o(^CacheTempJB(wrk,zp,rrmm)) q:rrmm=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...s iddoc=nmsp_"|"_zp_"|"_rrmm_"|"_doc
 ...k arrps
 ...k arrSJ s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrSJ) zt:+err "merr" s err=""
 ...//subdodavky
 ...i +$g(in("subdodavka"))=1 i +$g(arrSJ("dta",83)) q 
 ...i +$g(in("subdodavka"))=2 i '$g(arrSJ("dta",83)) q 
 ...s hrl=$g(arrSJ("dta",6)) s spz=$g(arrSJ("dta",8)) s:spz="" spz="-"
 ...s spz=##class(ALVA.VOZIDLA.MLAPI).VehicleGetRz(vehicledb,spz,+$h)
 ...s idprs=$g(arrSJ("arr",1,"dta",4)) s:idprs="" idprs="-"
 ...s km=$g(arrSJ("dta",16))+$g(arrSJ("dta",17))+$g(arrSJ("dta",18))
 ...s @glb@("arr",spz,"arr",1,rrmm,idprs)=$g(@glb@("arr",spz,"arr",1,rrmm,idprs))+km
 // ciselnik prepravnich systemu
 k arrcprs s err=$$gCis^OBapiED(idfa,nmsp,5,,.arrcprs) zt:+err "merr" s err=""
 // pro auta doplnim prehled dle nastaveni prs, dotovana a nedotovana
 k arrcis,tmparr s err=$$gCis^OBapiED(idfa,nmsp,15,,.tmparr) zt:+err "merr" s err=""
 s id="" f  s id=$o(tmparr("arr",id)) q:id=""  d
 .s hrl=+$p($g(tmparr("arr",id)),"~",1)
 .s idcol="" f  s idcol=$o(tmparr("arr",id,"col",idcol)) q:idcol=""  d
 ..s val=$g(tmparr("arr",id,"col",idcol,"prs"))
 ..f cnt=1:1:$l(val,"~") s:$tr($p(val,"~",cnt)," ","")'="" arrcis(hrl,idcol,$tr($p(val,"~",cnt)," ",""))=""
 s spz="" f  s spz=$o(@glb@("arr",spz)) q:spz=""  d
 .k arrspz s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,+$h,spz,"",.arrspz) s err="" ;zt:+err "merr" s err=""
 .// horlog uvedeni do provozu
 .s hrlprv=$g(arrspz("dta",7))
 .// odvozeni pravidel pro dotovane a nedotovane km
 .s hrl=$o(arrcis(hrlprv+.01),-1) s:hrl="" hrl=" "
 .s rrmm="" f  s rrmm=$o(@glb@("arr",spz,"arr",1,rrmm)) q:rrmm=""  d
 ..s idprs="" f  s idprs=$o(@glb@("arr",spz,"arr",1,rrmm,idprs)) q:idprs=""  d
 ...s km=$g(@glb@("arr",spz,"arr",1,rrmm,idprs))
 ...s fndcol=0
 ...s idcol="" f  s idcol=$o(arrcis(hrl,idcol)) q:(idcol="")!(fndcol)  d
 ....i $d(arrcis(hrl,idcol,idprs)) d
 .....s @glb@("arr",spz,"arr",2,rrmm,idcol)=$g(@glb@("arr",spz,"arr",2,rrmm,idcol))+km
 .....s @glb@("arr",spz,"arr",2,rrmm,idcol,idprs)=$g(@glb@("arr",spz,"arr",2,rrmm,idcol,idprs))+km
 .....s @glb@("arr",spz,"arr",2,0,idcol)=$g(@glb@("arr",spz,"arr",2,0,idcol))+km
 .....s fndcol=1
 ...i 'fndcol d
 ....s @glb@("arr",spz,"arr",2,rrmm,-1)=$g(@glb@("arr",spz,"arr",2,rrmm,-1))+km
 ....s @glb@("arr",spz,"arr",2,rrmm,-1,idprs)=$g(@glb@("arr",spz,"arr",2,rrmm,-1,idprs))+km
 ....s @glb@("arr",spz,"arr",2,0,-1)=$g(@glb@("arr",spz,"arr",2,0,-1))+km
 // pro auta doplnim prehled pravidelna/nepravidelna pro silnicni dan
 s spz="" f  s spz=$o(@glb@("arr",spz)) q:spz=""  d
 .s rrmm="" f  s rrmm=$o(@glb@("arr",spz,"arr",1,rrmm)) q:rrmm=""  d
 ..s idprs="" f  s idprs=$o(@glb@("arr",spz,"arr",1,rrmm,idprs)) q:idprs=""  d
 ...s km=$g(@glb@("arr",spz,"arr",1,rrmm,idprs))
 ...// prepravni system  = popis~1pravidelna/2neprav~1nedotovana/2dotovana~pro 1Vse/2Dzva/3Sj~1aktivni/2zrusen~1tuzemsko/2zahranici
 ...s valprs=$g(arrcprs("arr",idprs))
 ...s pn=0 s:$p(valprs,"~",2)=1 pn=1 // 0 nepravidelna / 1 pravidelna
 ...s tz=0 s:$p(valprs,"~",6)=2 tz=1 // 0 tuzemsko / 1 zahranici
 ...s idcol=3 i pn=1 s idcol=1 i tz=1 s idcol=2
 ...s @glb@("arr",spz,"arr",3,rrmm,idcol)=$g(@glb@("arr",spz,"arr",3,rrmm,idcol))+km
 ...s @glb@("arr",spz,"arr",3,0,idcol)=$g(@glb@("arr",spz,"arr",3,0,idcol))+km
 q 0
 //
mkSumDtaRzToGrf(idfa,nmsp,rrmm,in,out)
 n (idfa,nmsp,rrmm,in,out)
 s $zt="err" k out s err=""
 // s err=mkSumDtaRzToGrf(idfa,nmsp,rrmm,.in,.out)
 // in:
 // in("prv",prv)=""            - hleda jen v provozovne
 // in("rrmm",rrmm)=""          - hleda jen v rrmm 
 // data z dokladu DZVA
 k arrsumrz
 s dz=$$gFaDz^OBapiED(idfa)
 k arri,wrk m arri("prv")=in("prv") s arri("rrmm",rrmm)=""
 s err=$$lDz^OBapiED(idfa,nmsp,.arri,.wrk) zt:+err "merr" s err=""
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ..k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 ..i ($g(arrdoc("dta",7))["Z")!($g(arrdoc("dta",7))["P") q
 ..s ns=$g(arrdoc("dta",16)) s spz=$g(arrdoc("dta",6)) q:'ns  q:spz=""
 ..s val=""
 ..s $p(val,":",1)=$g(arrdoc("arr","tuv",1))		//jizda
 ..s $p(val,":",2)=$g(arrdoc("arr","tuv",13))		//cekani
 ..s $p(val,":",3)=$g(arrdoc("arr","tuv",17))		//provoz
 ..s $p(val,":",4)=$g(arrdoc("arr","tuv",11))		//hod.celkem
 ..s $p(val,":",5)=$g(arrdoc("arr","tuv",15))		//hod.noc
 ..s $p(val,":",6)=""
 ..s $p(val,":",7)=""
 ..s $p(val,":",8)=$g(arrdoc("arr","tuv",22))		//km celk
 ..s $p(val,":",9)=$g(arrdoc("arr","tuv",29))		//km rež.
 ..s $p(val,":",10)=$g(arrdoc("arr","tuv",23))		//km vni.
 ..s $p(val,":",11)=$g(arrdoc("arr","tuv",24))		//km dal.
 ..s $p(val,":",12)=$g(arrdoc("arr","tuv",25))		//km mes.
 ..s $p(val,":",13)=$g(arrdoc("arr","tuv",26))		//km pri.
 ..s $p(val,":",14)=$g(arrdoc("arr","tuv",27))		//km mez.
 ..s $p(val,":",15)=$g(arrdoc("arr","tuv",28))		//km sml.
 ..f cnt=1:1:15 s $p(arrsumrz(spz,ns,1),":",cnt)=$p($g(arrsumrz(spz,ns,1)),":",cnt)+$p(val,":",cnt)
 k ^CacheTempJB(wrk)
 k arri,wrk m arri("prv")=in("prv") s arri("rrmm",rrmm)=""
 s err=$$lSj^OBapiED(idfa,nmsp,.arri,.wrk) zt:+err "merr" s err=""
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ..k arrdoc s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err="" 
 ..s spz=$g(arrdoc("dta",8)) s ns=$g(arrdoc("dta",43)) q:'ns
 ..s val=""
 ..s $p(val,":",1)=$g(arrdoc("dta",12))	//jizda
 ..s $p(val,":",2)=$g(arrdoc("dta",13))	//cekani
 ..s $p(val,":",3)=$g(arrdoc("dta",14))	//provoz
 ..s $p(val,":",4)=$g(arrdoc("dta",22))	//phm
 ..s $p(val,":",5)=$g(arrdoc("dta",45))	//norma phm
 ..s $p(val,":",6)=$g(arrdoc("dta",15))	//osob
 ..s $p(val,":",7)=""					//trzba
 ..s idpol="" f  s idpol=$o(arrdoc("fak","itm",idpol)) q:idpol=""  d
 ...s $p(val,":",7)=$p($g(val),":",7)+$g(arrdoc("fak","itm",idpol,"dta",1))
 ..s idppl="" f  s idppl=$o(arrdoc("fak","arr",1,idppl)) q:idppl=""  d
 ...s iddsb="" f  s iddsb=$o(arrdoc("fak","arr",1,idppl,iddsb)) q:iddsb=""  q
 ....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",6)) q
 ....s $p(val,":",7)=$p($g(val),":",7)+$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ..s $p(val,":",8)=($g(arrdoc("dta",16))+$g(arrdoc("dta",17))+$g(arrdoc("dta",18)))	//km
 ..s $p(val,":",9)=$g(arrdoc("dta",18))		//km rezijni
 ..s $p(val,":",10)=$g(arrdoc("dta",17))	//km neobsazene
 ..s $p(val,":",11)=$g(arrdoc("dta",16))	//km obsazene
 ..s $p(val,":",12)=$g(arrdoc("dta",19))	//km prives
 ..f cnt=1:1:12 s $p(arrsumrz(spz,ns,2),":",cnt)=$p($g(arrsumrz(spz,ns,2)),":",cnt)+$p(val,":",cnt)
 k ^CacheTempJB(wrk)
 s spz="" f  s spz=$o(arrsumrz(spz)) q:spz=""  d
 .k ^[nmsp]XA(dz,spz,rrmm)
 .s ns="" f  s ns=$o(arrsumrz(spz,ns)) q:ns=""  d
 ..s cnt="" f  s cnt=$o(arrsumrz(spz,ns,cnt)) q:cnt=""  d
 ...s ^[nmsp]XA(dz,spz,rrmm,ns,cnt)=$g(arrsumrz(spz,ns,cnt))
 k arrsumrz
 q 0
err s $zt="" q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDtaOs" type="INT" languagemode="0" timestamp="65703,46096.299386"><![CDATA[
OBapiEDDtaOs q
 // data pro ridice
lTxCinOs(idfa,nmsp,in,out)
 // cinnosti textove pro ridice do seznamu AUDO, maximalne rychle
 //in("dta",1)=hrl
 //in("dta",2)=glb global s daty @glb@(os)=""
 //fce doplni:
 // @glb@(os,(hrl-1))=$lb(txcinnost)
 // @glb@(os,hrl)=$lb(txcinnost)
 // @glb@(os,(hrl+1))=$lb(txcinnost)
 n (idfa,nmsp,glb,in,out) s $zt="err" k out s err=""
 s hrl=$g(in("dta",1)) s glb=$g(in("dta",2))
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 i glb'="" {
	 s os="" f {
		 s os=$o(@glb@(os)) i os="" q
		 f myhrl=(hrl-1),hrl,(hrl+1) {
			 s txpln="" s txdoc="" s txgrf=""
			 //plan dopravy
			 s idprac="" f {
				 s idprac=$o(^[nmsp]OBPL(idprac)) i idprac="" q
				 s rz="" f {
					 s rz=$o(^[nmsp]OBPL(idprac,myhrl,"L",os,rz)) i rz="" q
					 s pc="" f {
						 s pc=$o(^[nmsp]OBPL(idprac,myhrl,"L",os,rz,pc)) i pc="" q
						 //pravidelna
						 i '$d(^[nmsp]OBPL(idprac,myhrl,"A",rz,pc,"sj")) {
							 s tu="" f {
								 s tu=$o(^[nmsp]OBPL(idprac,myhrl,"A",rz,pc,"T",tu)) i tu="" q
								 i txpln'="" s txpln=txpln_","
								 s txpln=txpln_tu
							 }
						 } 
						 //nepravidelna
						 i +$d(^[nmsp]OBPL(idprac,myhrl,"A",rz,pc,"sj")) {
							 s cobj=$g(^[nmsp]OBPL(idprac,myhrl,"A",rz,pc,"N",1,"OBJ"))
 							 i cobj {
	 							 s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(myhrl,1),".",3),cobj)
	 							 i txpln'="" s txpln=txpln_","
								 s txpln=txpln_"O"_idobj
 							 }
						 }
					 }
				 }
			 }
			 //grafikon
			 s idgrf="" f {
				 s val="" s idgrf=$o(^[nmsp]XL(dz,os,myhrl,idgrf),1,val) i idgrf="" q
				 //doklad
				 i idgrf?.n {
					 s rrmm=+$p(val,":",6) s zp=+$p(val,":",7)
					 //pravidelna
					 i idgrf'>qsj {
						 i txdoc'="" s txdoc=txdoc_","
						 s txdoc=txdoc_"DZ"_idgrf
						 //turnusy
						 s tu=""
						 s inxhrl="" f {
							  s inxhrl=$o(^[nmsp]OBD(zp,rrmm,idgrf,"D",inxhrl)) i inxhrl="" q
							  s id="" f {
								  s id=$o(^[nmsp]OBD(zp,rrmm,idgrf,"D",inxhrl,1,id)) i id="" q
								  i $p(id,":",1)'="" {
									  i tu'="" s tu=tu_","
									  s tu=tu_$p(id,":",1)
								  }
							  }
						 }
						 i tu'="" s txdoc=txdoc_"("_tu_")"						 
					 }
					 //nepravidelna
					 i idgrf>qsj {
						 i txdoc'="" s txdoc=txdoc_","
						 s txdoc=txdoc_"SJ"_(idgrf-qsj)
						 //objednavka
						 s idobj=$p($g(^[nmsp]OBD(zp,rrmm,idgrf)),":",4)
						 i idobj'="" s txdoc=txdoc_"(O"_idobj_")"						 
					 }
				 }
				 //grafikon
				 else {
					 i txgrf'="" s txgrf=txgrf_","
					 s txgrf=txgrf_idgrf
				 }
			 }
			 s mytx=txpln
			 i txdoc'="" s mytx=txdoc
			 i txgrf'="" {
				 i mytx'="" s mytx=mytx_","
				 s mytx=mytx_txgrf
			 }
			 s @glb@(os,myhrl)=$lb(mytx)
 		 }
	 }
 }
 q 0
 //
mkSumDtaOs(idfa,nmsp,rrmm,wglb,in,out)
 n (idfa,nmsp,rrmm,wglb,in,out) s $zt="err" k out s err=""
 // napocet dat pro ridice
 // rrmm - obdobi pro napocet (muze byt i rrrrmm)
 // wglb - global, do ktereho se zapisi vystupni data
 // in:
 // in("par",1) = 0/1 0 pred napoctem se killuje @wglb / 1 pred napoctem se nekilluje @wglb
 //               (pro potrebu napoctu za vice obdobi)
 // out:
 // pravidelna:
 // @wglb@("arr",osc,1,"tuv",id)=val		popis v ^OBapiEDTurInfo, odpovida poli arr("arr","tuv",id)
 //                 	                    nebo popis $$gTurDsc^OBapiED(.arr)
 // nepravidelna:
 // @wglb@("arr",osc,2,"dta",id)=val		popis v ^OBapiEDSjInfo, odpovida poli arr("osc",osc,"dta",cnt)
 //                     	                nebo popis v $$gSjDsc^OBapiED(.arr)
 // grafikon:
 // @wglb@("arr",osc,3,idgrf,"dta",id)=val	popis v OBapiEDGrafikonOs fce gGrfOs pole arr("dta",id)
 //                         	            idgrf=ciselnik 20 
 //
 // chyby
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(rrmm)="" s err="rrmm=" zt "rrmm"
 i $g(wglb)="" s err="wglb=" zt "merr"
 // dz
 s dz=$$gFaDz^OBapiED(idfa)
 // kill globalu
 i '+$g(in("par",1)) k @wglb
 // uprava rrmm
 s rrmm=rrmm#10000
 // dzva
 k arrin,arrout
 // vstupni parametry
 s typdoc=1
 s arrin("rrmm",rrmm)=""
 s arrin("sta",1)=""	//porizeno
 s arrin("sta",2)=""	//vyfakturovano
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...//pocet ridicu
 ...s cntosc=0 s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  s cntosc=cntosc+1
 ...//napocet pro ridice
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....//kontrola na pendl pro kraceni, je-li pendl, nekratim udaje
 ....s ispnd=+$g(arrout("osc",osc,"dta",3))
 ....//kraceni hodnot pri vice ridicich, provoz,km
 ....i (cntosc>1)&('ispnd) f cnt=1:1:$$gPcPDU^OBapiEDTur i cnt=17!(cnt>21&(cnt<30)) s arrout("osc",osc,"tuv",cnt)=($g(arrout("osc",osc,"tuv",cnt)))/cntosc+.05\.1/10
 ....//napocet do globalu
 ....k arrsm m arrsm=@wglb@("arr",osc,typdoc,"tuv")
 ....k arr m arr=arrout("osc",osc,"tuv")
 ....f cnt=1:1:$$gPcPDU^OBapiEDTur d
 .....i cnt=19 d  f cntmzd=1:1:$$gPcPMU^OBapiEDTur s arrsm(cnt,cntmzd)=$g(arrsm(cnt,cntmzd))+$g(arr(cnt,cntmzd))
 .....i cnt'=19 s arrsm(cnt)=$g(arrsm(cnt))+$g(arr(cnt))
 ....//ulozit
 ....k @wglb@("arr",osc,typdoc,"tuv") m @wglb@("arr",osc,typdoc,"tuv")=arrsm
 .k ^CacheTempJB(wrk)
 //sj
 k arrin,arrout
 s arrin("rrmm",rrmm)=""
 s arrin("sta",1)="" s arrin("sta",2)="" s typdoc=2
 s err=$$lSj^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....f cnt=1:1:($$gPcNMU^OBapiEDSj()) d
 .....i cnt=1 q  //osobni cislo
 .....i cnt=2 q  //pocitat mzdu
 .....s @wglb@("arr",osc,typdoc,"dta",cnt)=$g(@wglb@("arr",osc,typdoc,"dta",cnt))+$g(arrout("osc",osc,"dta",cnt))
 .k ^CacheTempJB(wrk)
 // napocet grafikonu
 k arrin,arrout s arrin("par",1)=0 s typdoc=3
 s err=$$lGrfOs^OBapiED(idfa,nmsp,$$gminhrlrrmm^OBapiED(rrmm),$$gmaxhrlrrmm^OBapiED(rrmm),.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s osc="" f  s osc=$o(^CacheTempJB(wrk,dz,osc)) q:osc=""  d
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,osc,hrl)) q:hrl=""  d
 ...s grf="" f  s grf=$o(^CacheTempJB(wrk,dz,osc,hrl,grf)) q:grf=""  d
 ....k arrout s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,hrl,grf,"",.arrout) zt:+err "merr" s err=""
 ....f cnt=1:1:4 d
 .....s @wglb@("arr",osc,typdoc,grf,"dta",cnt)=$g(@wglb@("arr",osc,typdoc,grf,"dta",cnt))+$g(arrout("dta",cnt))
 .k ^CacheTempJB(wrk)
 q 0
 //
mkSumDtaOsToGrf(idfa,nmsp,glb,rrmm,in,out)
 n (idfa,nmsp,glb,rrmm,in,out) s $zt="err" k out s err=""
 // napocet dokladu do grafikonu - mesicni soucty + mesicni mzdove soucty
 // err=$$mkSumDtaOsToGrf(idfa,nmsp,glb,rrmm,.in,.out)
 // napocet dokladu do ^XL
 //  pravidelna - 
 //  nepravidelna -
 // - in
 //    in("actAD")=1 - aktualizuje napoctove globaly v AD (^[nmsp]XL,^[nmsp]OM)
 // - out
 // - glb ... global, do ktereho se udela napocet (pracovni)
 //			   @glb@(dz,osc,rrmm,ns,1)=veta dzva
 //            @glb@(dz,osc,rrmm,ns,1,"d",zp,doc)=veta dzva (doklad)
 //            @glb@(dz,osc,rrmm,ns,1,"d",zp,doc,"sub")=subdodavka~subdodavkaIC
 //            @glb@(dz,osc,rrmm,ns,2)=veta sj
 //            @glb@(dz,osc,rrmm,ns,2,"d",zp,doc)=veta sj (doklad)
 //			   @glb@(dz,osc,rrmm,ns,2,"d",zp,doc,"sub")=subdodavka~subdodavkaIC
 //            @glb@(dz,osc,rrmm,ns,3,grf)=veta grafikonu
 //            @glb@(dz,osc,rrmm,ns,3,grf,"d",hrl)=veta grafikonu (jeden den)
 //            ns ... je ns z dokladu (dal se s nim tak pocita) 
 i $g(idfa)="" s err="idfa=" g err
 i $g(rrmm)="" s err="rrmm=" g err
 s rrmm=rrmm#10000
 s dz=$$gFaDz^OBapiED(idfa) s actAD=+$g(in("actAD"))
 //<nepravidelna, limitni hodnota, po jejimz prekroceni se hodiny berou v uvahu>
 k arrcmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrcmzd) zt:+err "merr"
 s omHodNoc=$g(arrcmzd("arr",2,0,3))
 //=============================================================================
 k arrKA s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,1,.arrKA) zt:+err "merr" s err=""
 s caR=$o(arrKA("KA","")) i caR="" s caR=11
 k arrKA s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,2,.arrKA) zt:+err "merr" s err=""
 s caP=$o(arrKA("KA","")) i caP="" s caP=21
 k arrKA s err=##class(ALVA.PREVODY.AD.Nastaveni).GetNastaveniKa(idfa,0,.arrKA) zt:+err "merr" s err=""
 //=============================================================================
 //<napocet do ^XL vymazani starych dat>
 i actAD d
 .s osc="" f  s osc=$o(^[nmsp]XL(dz,osc)) q:osc=""!(osc?.a)  d
 ..s nsk="" f  s nsk=$o(^[nmsp]XL(dz,osc,rrmm,nsk)) q:nsk=""  d
 ...//s ka=nsk#1*100 q:'$d(arrKA("KA",ka))
 ...k ^[nmsp]XL(dz,osc,rrmm,nsk)
 //<napocet dokladu - dzva>
 //========================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=1
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s ns=+$g(arrout("dta",16)) s nsk=ns+($s($g(arrout("dta",7))["P":caP,1:caR)/100)
 ...//<pocet ridicu>
 ...s cntosc=0 s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  s cntosc=cntosc+1
 ...//<napocet pro ridice>
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....s subdodavka=$g(arrout("osc",osc,"par",4))
 ....s subdodavkaIC=$g(arrout("osc",osc,"par",5))
 ....//<kraceni hodnot pri vice ridicich, provoz,km, neni pendl>
 ....i cntosc>1 i '$g(arrout("osc",osc,"dta",3)) f cnt=1:1:$$gPcPDU^OBapiEDTur i cnt=17!(cnt>21&(cnt<30)) s arrout("osc",osc,"tuv",cnt)=($g(arrout("osc",osc,"tuv",cnt)))/cntosc+.05\.1/10
 ....//=============================================
 ....//<pracovni global>
 ....i $g(glb)'="" d
 .....s val=$g(@glb@(dz,osc,rrmm,ns,typdoc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 .....k arr m arr=arrout("osc",osc,"tuv")
 .....d smArrDzva(.arrsm,.arr)
 .....//<zabalit a ulozit>
 .....k val d svTuV^OBapiEDTur(.val,.arrsm)
 .....s @glb@(dz,osc,rrmm,ns,typdoc)=val
 .....//<doklad>
 .....s val=$g(@glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 .....k arr m arr=arrout("osc",osc,"tuv")
 .....d smArrDzva(.arrsm,.arr)
 .....k val d svTuV^OBapiEDTur(.val,.arrsm)
 .....s @glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc)=val
 .....s @glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc,"sub")=subdodavka_"~"_subdodavkaIC
 ....//<napocet do ^XL>
 ....i actAD d
 .....s val=$g(^[nmsp]XL(dz,osc,rrmm,nsk,typdoc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 .....k arr m arr=arrout("osc",osc,"tuv")
 .....d smArrDzva(.arrsm,.arr)
 .....//<zabalit a ulozit>
 .....k val d svTuV^OBapiEDTur(.val,.arrsm)
 .....s ^[nmsp]XL(dz,osc,rrmm,nsk,typdoc)=val
 ....//================
 .k ^CacheTempJB(wrk)
 //<napocet dokladu - sj>
 //======================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=2
 s err=$$lSj^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s ns=$g(arrout("dta",43)) s nsk=ns+(caR/100)
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....s subdodavka=$g(arrout("osc",osc,"par",4))
 ....s subdodavkaIC=$g(arrout("osc",osc,"par",5))
 ....i omHodNoc i $g(arrout("osc",osc,"dta",7))<omHodNoc s arrout("osc",osc,"dta",7)=0
 ....i $g(glb)'="" d
 .....s val=$g(@glb@(dz,osc,rrmm,ns,typdoc))
 .....f cnt=1:1:($$gPcNMU^OBapiEDSj-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 .....s @glb@(dz,osc,rrmm,ns,typdoc)=val
 .....s val=$g(@glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc))
 .....f cnt=1:1:($$gPcNMU^OBapiEDSj-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 .....s @glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc)=val
 .....s @glb@(dz,osc,rrmm,ns,typdoc,"d",zp,doc,"sub")=subdodavka_"~"_subdodavkaIC
 ....//<napocet do ^XL>
 ....i actAD d
 .....s val=$g(^[nmsp]XL(dz,osc,rrmm,nsk,typdoc))
 .....f cnt=1:1:($$gPcNMU^OBapiEDSj-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 .....s ^[nmsp]XL(dz,osc,rrmm,nsk,typdoc)=val
 .k ^CacheTempJB(wrk)
 //================
 //<napocet grafikonu>
 k arrin,arrout s typdoc=3
 s arrin("par",1)=0	//pouze zkratky
 s err=$$lGrfOs^OBapiED(idfa,nmsp,$$gminhrlrrmm^OBapiED(rrmm),$$gmaxhrlrrmm^OBapiED(rrmm),.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s osc="" f  s osc=$o(^CacheTempJB(wrk,dz,osc)) q:osc=""  d
 ..s ns="" i $g(glb)'="" s ns=$o(@glb@(dz,osc,rrmm,""))
 ..i ns="" d
 ...k arrout s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,$$gmaxhrlrrmm^OBapiED(rrmm),osc,"",.arrout) s err=""
 ...s ns=$g(arrout("dta",4))
 ...i ns="" s ns=0
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,osc,hrl)) q:hrl=""  d
 ...s grf="" f  s grf=$o(^CacheTempJB(wrk,dz,osc,hrl,grf)) q:grf=""  d
 ....k arrout s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,hrl,grf,"",.arrout) zt:+err "merr" s err=""
 ....i $g(glb)'="" d
 .....s val=$g(@glb@(dz,osc,rrmm,ns,typdoc,grf))
 .....f cnt=1:1:4 s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("dta",cnt))
 .....s @glb@(dz,osc,rrmm,ns,typdoc,grf)=val
 .....s val=""
 .....f cnt=1:1:4 s $p(val,":",cnt)=$g(arrout("dta",cnt))
 .....s @glb@(dz,osc,rrmm,ns,typdoc,grf,"d",hrl)=val
 .k ^CacheTempJB(wrk)
 q 0
smArrDzva(arrsm,arr)
 // dzva suma udaju za ridice - pole
 // arrsm - pole, do ktereho to scitam
 // arr   - pole ktere pricitam
 n (arrsm,arr)
 f cnt=1:1:$$gPcPDU^OBapiEDTur d
 .i cnt=19 d  f cntmzd=1:1:$$gPcPMU^OBapiEDTur s arrsm(cnt,cntmzd)=$g(arrsm(cnt,cntmzd))+$g(arr(cnt,cntmzd))
 .i cnt'=19 s arrsm(cnt)=arrsm(cnt)+$g(arr(cnt))
 q
mkSumDtaOsTogOM(idfa,nmsp,rrmm,in,out)
 n (idfa,nmsp,rrmm,in,out)
 s $zt="err" k out s err=""
 // mzdovy napocet
 // err=$$mkSumDtaOsTogOM(idfa,nmsp,rrmm,.in,.out)
 // vysledky do ^[nmsp]OM(zp,rrmm,osc,1|2|3) 1=pravidelna / 2=nepravidelna / 3=grafikon
 //              (pokud je osc=0 je to suma za provoz)
 // soucty rucnich grafikonu z XL do ^OM(zp,ao,os,3,"XXX")=souct.veta
 s dz=$$gFaDz^OBapiED(idfa)
 // datumy, grafikon je v intervalu <hrlmin,hrlmax>
 s hrlmin=$$gminhrlrrmm^OBapiED(rrmm)
 s hrlmax=$$gmaxhrlrrmm^OBapiED(rrmm)
 //==============================
 //<vymazani globalu ^[nmsp]OM>
 s zp="" f  s zp=$o(^[nmsp]OM(zp)) q:zp=""  d
 .i (zp\100)=dz k ^[nmsp]OM(zp,rrmm)
 //============================
 //<soucty vet P a N ze vsech ns v ^[nmsp]XL do ^OM(zp,rrmm,osc,indx)>
 //===================================================================
 s osc="" f  s osc=$o(^[nmsp]XL(dz,osc)) q:osc=""  d
 .s mydz=dz
 .k arrosc s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrlmax,osc,"",.arrosc) zt:+err "merr" s err=""
 .s dz=mydz
 .s ns=$g(arrosc("dta",4)) s ka=$g(arrosc("dta",5))
 .i ns="" q
 .k arr s err=$$gNs^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),ns,"",.arr) //zt:+err "merr" s err=""
 .s idprv=$g(arr("dta",10))
 .k arr
 .i idprv="" q
 .//mzdovy zp
 .s mzdzp=((dz*100)+idprv)
 .f typdat=1:1:3 k ^[nmsp]OM(mzdzp,rrmm,osc,typdat)
 .s nsk="" f  s nsk=$o(^[nmsp]XL(dz,osc,rrmm,nsk)) q:nsk=""  d
 ..s typdat="" f  s typdat=$o(^[nmsp]XL(dz,osc,rrmm,nsk,typdat)) q:(typdat="")!(typdat?.a)  d
 ...s val=$g(^[nmsp]XL(dz,osc,rrmm,nsk,typdat))
 ...//pocet polozek
 ...s cntpol=""
 ...s:typdat=1 cntpol=($$gPcPDU^OBapiEDTur)
 ...s:typdat=2 cntpol=($$gPcNMU^OBapiEDSj-2)
 ...//<suma za osc>
 ...s mzdval=$g(^[nmsp]OM(mzdzp,rrmm,osc,typdat))
 ...d mkNpp(.mzdval,val,cntpol)
 ...s ^[nmsp]OM(mzdzp,rrmm,osc,typdat)=mzdval
 ...// <suma za provoz>
 ...s mzdval=$g(^[nmsp]OM(mzdzp,rrmm,0,typdat))
 ...d mkNpp(.mzdval,val,cntpol)
 ...s ^[nmsp]OM(mzdzp,rrmm,0,typdat)=mzdval
 .// <zruseni nulovych mist ve vete 0 - "">
 .f typdat=1,2 d
 ..s mzdval=$g(^[nmsp]OM(mzdzp,rrmm,osc,typdat))
 ..d delNull(.mzdval)
 ..s ^[nmsp]OM(mzdzp,rrmm,osc,typdat)=mzdval
 .// ======================================
 .// <grafikon ridice>
 .k arrin,arrout s arrin("osc",osc)=""
 .s err=$$lGrfOs^OBapiED(idfa,nmsp,hrlmin,hrlmax,.arrin,.arrout) zt:+err "merr" s err=""
 .s wrk=$g(arrout) d:wrk
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,osc,hrl)) q:hrl=""  d
 ...s grf="" f  s grf=$o(^CacheTempJB(wrk,dz,osc,hrl,grf)) q:grf=""  d
 ....k arrout s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,hrl,grf,"",.arrout) g:+err err s err=""
 ....s val=$g(^[nmsp]OM(mzdzp,rrmm,osc,3,grf))
 ....f cnt=1:1:4 s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("dta",cnt))
 ....f cnt=1:1:4 s:'$p(val,":",cnt) $p(val,":",cnt)=""
 ....s ^[nmsp]OM(mzdzp,rrmm,osc,3,grf)=val
 .k ^CacheTempJB(wrk)
 q 0
 //
mkNpp(smval,val,cntpol)
 // <fce pro napocet prav. a neprav.)
 // smval  - veta z ^OM do ktere se to napocitava
 // val    - veta z ^XL ze ktere se to napocitava
 // cntpol - je pocet polozek
 n cnt,cntx,tmp,tmpx
 f cnt=1:1:cntpol s tmp=$p(val,":",cnt) d
 .i tmp'["," s $p(smval,":",cnt)=$p(smval,":",cnt)+$p(val,":",cnt) q
 .s tmpx=$p(smval,":",cnt)
 .f xcnt=1:1:$l(tmp,",") s $p(tmpx,",",xcnt)=$p(tmpx,",",xcnt)+$p(tmp,",",xcnt)
 .s $p(smval,":",cnt)=tmpx
 q
delNull(val)
 // <mazani polozek kde je 0 -> "">
 n cnt
 f cnt=1:1 s tmp=$p(val,":",cnt) q:tmp=""  i tmp'["," i 'tmp s $p(val,":",cnt)=""
 q
 //
mkNdmlDieOs(idfa,nmsp,glb,in,out)
 n (idfa,nmsp,glb,in,out)
 s $zt="err" k out s err=""
 // in("rrmm",rrmm)="" ... povinne , je potreba pocitat pres vsechny provozovny, ridici muzou mit doklady napric prv
 // @glb@("arr",1,os,hrl,"dta",1)=diety
 // @glb@("arr",1,os,hrl,"dta",2)=mm od
 // @glb@("arr",1,os,hrl,"dta",3)=mm do
 // @glb@("arr",1,os,hrl,"dta",4)=dieta do limitu
 // @glb@("arr",1,os,hrl,"dta",5)=dieta nad limit
 // @glb@("arr",1,os,hrl,"dta",6)=vypoctena limitni dieta
 // @glb@("arr",1,os,hrl,"dta",7)=idprv (tabulka pro vypocet diet muze byt na provozovnu)
 // ==============
 // seznam dokladu
 // ==============
 k wrk s err=$$lDz^OBapiED(idfa,nmsp,.in,.wrk) zt:+err "merr" s err=""
 //
 s zp="" f {
	 s zp=$o(^CacheTempJB(wrk,zp)) i zp="" q
	 s rrmm="" f  {
		 s rrmm=$o(^CacheTempJB(wrk,zp,rrmm)) i rrmm="" q
		 s doc="" f {
			 s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) i doc="" q
			 //nactu zacatek a konec dokladu
			 k arrdoc s err=$$gDzBegEnd^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
			 //zacatek a konec
			 s hrlbeg=$g(arrdoc("dta",1))
			 s tmbeg=$g(arrdoc("dta",2))
			 s tmend=$g(arrdoc("dta",3))
			 s mmprv=$g(arrdoc("dta",4))
			 //posun konce podle doby provozu
			 i (tmbeg+mmprv)>tmend s tmend=(tmbeg+mmprv)
			 //data ridicu
			 k arrdoc s err=$$gDzOsDta^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
			 //diety pro os po dnech
			 s os="" f {
				 s os=$o(arrdoc("osc",os)) i os="" q
				 s die=$g(arrdoc("osc",os,"tuv",18))
				 //suma diet
				 s @glb@("arr",1,os,hrlbeg,"dta",1)=$g(@glb@("arr",1,os,hrlbeg,"dta",1))+die
				 //od
				 i tmbeg'="" {
					 i $g(@glb@("arr",1,os,hrlbeg,"dta",2))="" s @glb@("arr",1,os,hrlbeg,"dta",2)=tmbeg
					 i tmbeg<$g(@glb@("arr",1,os,hrlbeg,"dta",2)) s @glb@("arr",1,os,hrlbeg,"dta",2)=tmbeg
				 }
				 //do
				 i tmend'="" {
					 i $g(@glb@("arr",1,os,hrlbeg,"dta",3))="" s @glb@("arr",1,os,hrlbeg,"dta",3)=tmend
					 i tmend>$g(@glb@("arr",1,os,hrlbeg,"dta",3)) s @glb@("arr",1,os,hrlbeg,"dta",3)=tmend
				 }
				 s @glb@("arr",1,os,hrlbeg,"dta",7)=(zp#100)
				 s @glb@("arr",1,os,hrlbeg,"arr",1,zp_"|"_rrmm_"|"_doc)=die
			 }
			 
		 }
	 }
 }
 k ^CacheTempJB(wrk)
 //vypocet nadlimitnich diet
 s os="" f {
	 s os=$o(@glb@("arr",1,os)) i os="" q
	 s hrlbeg="" f  {
		 s hrlbeg=$o(@glb@("arr",1,os,hrlbeg)) i hrlbeg="" q
		 //nejsou diety
		 i '$g(@glb@("arr",1,os,hrlbeg,"dta",1)) continue
		 s idprv=$g(@glb@("arr",1,os,hrlbeg,"dta",7))
		 //vse nadlimitni
		 s @glb@("arr",1,os,hrlbeg,"dta",5)=$g(@glb@("arr",1,os,hrlbeg,"dta",1))
		 //je zacatek a konec, vypocet limitnich diet
		 i $g(@glb@("arr",1,os,hrlbeg,"dta",2))'="" {
			 s tmbeg=$j($g(@glb@("arr",1,os,hrlbeg,"dta",2)),0,0)
			 s tmend=$j($g(@glb@("arr",1,os,hrlbeg,"dta",3)),0,0)
			 k arri s arri("dta",1)=idprv
			 k arrdie s err=$$calTuzDie^OBapiED(idfa,nmsp,hrlbeg,tmbeg,(hrlbeg+(tmend\1440)),(tmend#1440),.arri,.arrdie) zt:+err "merr"
			 //vysledne limitni diety
			 s dielim=$g(arrdie("dta",2))
			 i +dielim {
				 s @glb@("arr",1,os,hrlbeg,"dta",5)=""
				 s @glb@("arr",1,os,hrlbeg,"dta",6)=dielim
				 //vse do limitu
				 s @glb@("arr",1,os,hrlbeg,"dta",4)=$g(@glb@("arr",1,os,hrlbeg,"dta",1))
				 //diety jsou vetsi nez limit, rozdeleni
				 i $g(@glb@("arr",1,os,hrlbeg,"dta",1))>dielim {
					 s @glb@("arr",1,os,hrlbeg,"dta",4)=dielim
					 s @glb@("arr",1,os,hrlbeg,"dta",5)=($g(@glb@("arr",1,os,hrlbeg,"dta",1))-dielim)
				 }
			 }
		 }
	 }
 }
 //
 q 0
err s $zt="" q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDtaRz" type="INT" languagemode="0" timestamp="65387,57294.436543"><![CDATA[
OBapiEDDtaRz q
mkSumMzdDtaRz(idfa,nmsp,glb,rrmm,in,out)
 n (idfa,nmsp,glb,rrmm,in,out) s $zt="err" k out s err=""
 // mesicni mzdove soucty pro RZ
 // err=$$mkSumMzdDtaRz(idfa,nmsp,glb,rrmm,.in,.out)
 //  pravidelna, nepravidelna
 // - in
 // - out
 // - glb ... global, do ktereho se udela napocet (pracovni)
 //			   @glb@(dz,rz,rrmm,ns,1)=veta dzva
 //            @glb@(dz,rz,rrmm,ns,1,"d",zp,doc)=veta dzva (doklad)
 //            @glb@(dz,rz,rrmm,ns,1,"d",zp,doc,"dta",1)=tachometr konec nebo ("Z" zaskolovani / "P" pruvodci)
 //            @glb@(dz,rz,rrmm,ns,1,"d",zp,doc,"dta",2)=OS~OS~... osobni cisla ridicu na doklade
 //            @glb@(dz,rz,rrmm,ns,2)=veta sj
 //            @glb@(dz,rz,rrmm,ns,2,"d",zp,doc)=veta sj (doklad)
 //            @glb@(dz,rz,rrmm,ns,2,"d",zp,doc,"dta",1)=tachometr konec
 //            @glb@(dz,rz,rrmm,ns,2,"d",zp,doc,"dta",2)=OS~OS~... osobni cisla ridicu na doklade
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(rrmm)="" s err="rrmm=" zt "merr"
 i $g(glb)=""  s err="glb=" zt "merr"
 s rrmm=rrmm#10000
 s dz=$$gFaDz^OBapiED(idfa)
 //<nepravidelna, limitni hodnota, po jejimz prekroceni se hodiny berou v uvahu>
 k arrcmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrcmzd) zt:+err "merr"
 s omHodNoc=$g(arrcmzd("arr",2,0,3))
 //========================
 //<napocet dokladu - dzva>
 //========================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=1
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s rz=$g(arrout("dta",6))
 ...s ns=$g(arrout("dta",16))
 ...//<pocet ridicu>
 ...s myos=""
 ...s cntosc=0 s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  s cntosc=cntosc+1 s $p(myos,"~",cntosc)=osc
 ...//<napocet dat>
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....//<kraceni hodnot pri vice ridicich, provoz,km, neni pendl>
 ....i cntosc>1 i '$g(arrout("osc",osc,"dta",3)) f cnt=1:1:$$gPcPDU^OBapiEDTur i cnt=17!(cnt>21&(cnt<30)) s arrout("osc",osc,"tuv",cnt)=($g(arrout("osc",osc,"tuv",cnt)))/cntosc+.05\.1/10
 ....//=============================================
 ....//<pracovni global>
 ....s val=$g(@glb@(dz,rz,rrmm,ns,typdoc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 ....k arr m arr=arrout("osc",osc,"tuv")
 ....d smArrDzva(.arrsm,.arr)
 ....//<zabalit a ulozit>
 ....k val d svTuV^OBapiEDTur(.val,.arrsm)
 ....s @glb@(dz,rz,rrmm,ns,typdoc)=val
 ....//<doklad>
 ....s val=$g(@glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 ....k arr m arr=arrout("osc",osc,"tuv")
 ....d smArrDzva(.arrsm,.arr)
 ....k val d svTuV^OBapiEDTur(.val,.arrsm)
 ....s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc)=val
 ....s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc,"dta",1)=$g(arrout("dta",7))
 ....s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc,"dta",2)=$g(myos)
 .k ^CacheTempJB(wrk)
 //<napocet dokladu - sj>
 //======================
 k arrin,arrout s arrin("rrmm",rrmm)="" s typdoc=2
 s err=$$lSj^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...s rz=$g(arrout("dta",8))
 ...s ns=$g(arrout("dta",43))
 ...s myos=""
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....s:myos'="" myos=myos_"~" s myos=myos_osc
 ....i omHodNoc i $g(arrout("osc",osc,"dta",7))<omHodNoc s arrout("osc",osc,"dta",7)=0
 ....s val=$g(@glb@(dz,rz,rrmm,ns,typdoc))
 ....f cnt=1:1:($$gPcNMU^OBapiEDSj-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 ....s @glb@(dz,rz,rrmm,ns,typdoc)=val
 ....s val=$g(@glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc))
 ....f cnt=1:1:($$gPcNMU^OBapiEDSj-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 ....s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc)=val
 ...s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc,"dta",1)=$g(arrout("dta",20))
 ...s @glb@(dz,rz,rrmm,ns,typdoc,"d",zp,doc,"dta",2)=$g(myos)
 .k ^CacheTempJB(wrk)
 q 0
smArrDzva(arrsm,arr)
 // dzva suma udaju za ridice - pole
 // arrsm - pole, do ktereho to scitam
 // arr   - pole ktere pricitam
 n (arrsm,arr)
 f cnt=1:1:$$gPcPDU^OBapiEDTur d
 .i cnt=19 d  f cntmzd=1:1:$$gPcPMU^OBapiEDTur s arrsm(cnt,cntmzd)=$g(arrsm(cnt,cntmzd))+$g(arr(cnt,cntmzd))
 .i cnt'=19 s arrsm(cnt)=arrsm(cnt)+$g(arr(cnt))
 q
err s $zt="" q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDz" type="INT" languagemode="0" timestamp="65772,41359.871929"><![CDATA[
OBapiEDDz q
 // api DZVA
isDz(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$isDz(idfa,nmsp,zp,rrmm,doc,in,out) - kontrola, zda existuje doklad
 // out= 0 neexistuje / >0 existuje
 // out("stt")=stav dokladu 0 predznacen / 1 porizen / 2 vyfakturovan / 3 zrusen (pokud doklad existuje)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // existence dokladu
 s out=$d(^[nmsp]OBD(zp,rrmm,doc))
 // stav dokladu
 s:$g(out) out("stt")=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",1)
 //
 q 0
 //
mvDz(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out)
 // err=$$mvDz(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out) - presun predznaceneho dokladu do jineho obdobi
 // out= 0 nepresunuto / 1 presunuto
 n (idfa,nmsp,zp,rrmm,doc,rrmmto,in,out)
 s $zt="err" k out s out=0 s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(rrmmto)="" q "1~rrmm="
 // existence dokladu
 i $d(^[nmsp]OBD(zp,rrmm,doc)) {
	 // stav predznaceno
	 i '$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",1) {
		 //neexistuje v obdobi, kam prenasim
		 i '$d(^[nmsp]OBD(zp,rrmmto,doc)) {
			m ^[nmsp]OBD(zp,rrmmto,doc)=^[nmsp]OBD(zp,rrmm,doc)
		 	//doklad je jen predznaceny, lze jen kill
		 	k ^[nmsp]OBD(zp,rrmm,doc)
		 	s out=1
		 }
	 }
 }
 q 0
 //
isDzFak(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$isDzFak(idfa,nmsp,zp,rrmm,doc,in,out) - kontrola, zda se doklad fakturuje
 // out=0 nefakturuje / >0 fakturuje
 // out("stt")=stav dokladu 0 predznacen / 1 porizen / 2 vyfakturovan / 3 zrusen (pokud doklad existuje)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // je fakturace dokladu
 s out=+$g(^[nmsp]OBD(zp,rrmm,doc,"fak"))
 // stav dokladu
 s out("stt")=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",1)
 //
 q 0
gDz(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gDz(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data dzva
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)= 0/1 ... mod pro nacteni kontroly autobusu z vozidel
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 //
 // data dzva - obecny
 s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1)
 f cnt=1:1:$$gPcPDU() s out("dta",cnt)=$p(val,":",cnt)
 // konverze dat
 s:$g(out("dta",4)) out("dta",4)=$$dn^OBapiED(out("dta",4))
 // data dzva - vyhodnoceni turnusu tuv
 s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)
 k arr d qvTuV^OBapiEDTur(val,.arr) m out("arr","tuv")=arr
 // ridici - vyhodnoceni
 s seqosc=0
 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 .s seqosc=seqosc+1
 .s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)
 .s:$g(^[nmsp]OBD(zp,rrmm,doc,osc))'="" $p(val,":",19)=$g(^[nmsp]OBD(zp,rrmm,doc,osc))
 .s:$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))'="" val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))
 .k arr d qvTuV^OBapiEDTur(val,.arr) m out("osc",osc,"tuv")=arr
 .// ridici, dalsi udaje (spolujizda,pendl)
 .i $g(^[nmsp]OBD(zp,rrmm,doc,osc,"i"))'="" d
 ..s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"i"))
 ..s out("osc",osc,"dta",1)="" s:$p(val,"~",1)'="" out("osc",osc,"dta",1)=$$hm^OBapiED($p(val,"~",1))
 ..s out("osc",osc,"dta",2)=+$p(val,"~",2)
 ..s out("osc",osc,"dta",3)=+$p(val,"~",3)
 ..s out("osc",osc,"dta",4)="" s:$p(val,"~",4)'="" out("osc",osc,"dta",4)=$$hm^OBapiED($p(val,"~",4))
 ..s out("osc",osc,"dta",5)="" s:$p(val,"~",5)'="" out("osc",osc,"dta",5)=$$hm^OBapiED($p(val,"~",5))
 ..s out("osc",osc,"dta",6)="" s:$p(val,"~",6)'="" out("osc",osc,"dta",6)=$$hm^OBapiED($p(val,"~",6))
 ..s out("osc",osc,"dta",7)="" s:$p(val,"~",7)'="" out("osc",osc,"dta",7)=$$hm^OBapiED($p(val,"~",7))
 ..s out("osc",osc,"dta",8)="" s:$p(val,"~",8)'="" out("osc",osc,"dta",8)=$$hm^OBapiED($p(val,"~",8))
 ..s out("osc",osc,"dta",9)="" s:$p(val,"~",9)'="" out("osc",osc,"dta",9)=$$hm^OBapiED($p(val,"~",9))
 ..s out("osc",osc,"dta",10)=$p(val,"~",10)
 ..s out("osc",osc,"dta",11)=$p(val,"~",11)
 ..s out("osc",osc,"dta",12)=$p(val,"~",12) i out("osc",osc,"dta",12)="" s out("osc",osc,"dta",12)="A"
 ..s out("osc",osc,"dta",13)=$p(val,"~",13)
 ..s out("osc",osc,"dta",14)=$p(val,"~",14)
 ..s out("osc",osc,"dta",15)=+$p(val,"~",15)
 .//dalsi parametry ridicu
 .//poradi ridicu pri zadavani
 .i +$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")) s out("osc",osc,"par",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p"))
 .i '$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")) s out("osc",osc,"par",1)=seqosc
 .//ns ridice
 .s out("osc",osc,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",2)
 .//zpusob vypoctu mzdy pro pausalni mzdy (UH)
 .s out("osc",osc,"par",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",3)
 .//subdodany ridic 0/1
 .s out("osc",osc,"par",4)=(+$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",4))
 .//IC spolecnosti, ktera subdodala ridice
 .s out("osc",osc,"par",5)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",5)
 // casovy prubeh turnusu
 s tm="" f  s tm=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)) q:(tm="")!(tm?.a)  d
 .// ===============================
 .//tmTo~id~km~tm~li~sp~maBe~maAf~zFr~zTo~upr~inf~dsp~prs
 .// casovy prubeh ponovu EDISON
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm))
 .s idcin=+$p(val,":",2)
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)							//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)							//id
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",3)							//id turnusu, ze ktere je cinnost
 .// spoj
 .i idcin=3 d
 ..s out("arr","tur",tm,"dta",1)=$p($p(val,"~",1),":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p($p(val,"~",1),":",2)				//id
 ..s out("arr","tur",tm,"dta",3)=$p($p(val,"~",1),":",3)				//km
 ..s out("arr","tur",tm,"dta",4)=$p($p(val,"~",1),":",4)				//tm
 ..i ($p($p(val,"~",1),":",5)[".") d
 ...s out("arr","tur",tm,"dta",5)=($p($p(val,"~",1),":",5)\1)			//li
 ...s out("arr","tur",tm,"dta",6)=($p($p(val,"~",1),":",5)#1*1000)		//sp
 ..i ($p($p(val,"~",1),":",5)["^") d
 ...s out("arr","tur",tm,"dta",5)=($p($p($p(val,"~",1),":",5),"^",1))	//li
 ...s out("arr","tur",tm,"dta",6)=($p($p($p(val,"~",1),":",5),"^",2))	//sp
 ..s out("arr","tur",tm,"dta",7)=$p($p(val,"~",1),":",6)				//maBe
 ..s out("arr","tur",tm,"dta",8)=$p($p(val,"~",1),":",7)				//maAf
 ..s out("arr","tur",tm,"dta",12)=$p($p(val,"~",1),":",11)				//informace
 ..s out("arr","tur",tm,"dta",13)=$p($p(val,"~",1),":",9)				//kmt
 ..s out("arr","tur",tm,"dta",14)=$p(val,"~",3)							//dsp
 ..s out("arr","tur",tm,"dta",15)=$p(val,"~",2)							//prs
 ..s out("arr","tur",tm,"dta",16)=$p($p(val,"~",1),":",8)				//prir.phm
 ..s out("arr","tur",tm,"dta",17)=$p(val,"~",5)							//vicesmenny priplatek
 ..s out("arr","tur",tm,"dta",18)=$p($p(val,"~",1),":",10)				//priznak casti spoje
 ..s out("arr","tur",tm,"dta",19)=$p($p(val,"~",1),":",12)				//id turnusu, ze ktere je cinnost
 ..// vice prepravnich systemu
 ..s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)) q:prs=""  d
 ...s out("arr","tur",tm,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)),"~",1)
 ...s out("arr","tur",tm,"prs",prs,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)),"~",2)
 .//pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s out("arr","tur",tm,"dta",1)=$p($p(val,"~",1),":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p($p(val,"~",1),":",2)				//id
 ..s out("arr","tur",tm,"dta",3)=$p($p(val,"~",1),":",3)				//km
 ..s out("arr","tur",tm,"dta",4)=$p($p(val,"~",1),":",4)				//tm
 ..s out("arr","tur",tm,"dta",9)=$p($p(val,"~",1),":",5)				//zFr
 ..s out("arr","tur",tm,"dta",10)=$p($p(val,"~",1),":",6)				//zTo
 ..s out("arr","tur",tm,"dta",15)=$p(val,"~",2)							//prs
 ..s out("arr","tur",tm,"dta",16)=$p($p(val,"~",1),":",8)				//prir.phm
 ..s out("arr","tur",tm,"dta",17)=$p(val,"~",5)							//vicesmenny priplatek
 ..s out("arr","tur",tm,"dta",19)=$p($p(val,"~",1),":",9)				//id turnusu, ze ktere je cinnost
 ..s out("arr","tur",tm,"dta",21)=$p($p(val,"~",1),":",7)				//atr. hrazeneho prejezdu
 ..// vice prepravnich systemu
 ..s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)) q:prs=""  d
 ...s out("arr","tur",tm,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)),"~",1)
 .//informace
 .i idcin=8 d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",6)				//id turnusu, ze ktere je cinnost
 .//cekani,bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 .i (idcin=0)!(idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",5)				//id turnusu, ze ktere je cinnost
 .//ost.pr
 .i idcin=10 d
 ..s idop=+$p(val,"#",2) s val=$p(val,"#",1)
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",11)=idop						//upresneni
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",5)				//id turnusu
 .//preruseni
 .i idcin=12 d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",6)				//id turnusu
 .//vlozeny vykon
 .i idcin=18 d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",3)=$p(val,":",3)				//km
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",19)=$p(val,":",5)				//id turnusu
 // ===========================================
 // edit dokladu, casovy prubeh, dalsi cinnosti
 // ===========================================
 s hrl="" f  s hrl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl)) q:hrl=""  d
 .s idedv="" f  s idedv=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv)) q:idedv=""  d
 ..//turnus
 ..i idedv=1 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",5)="" s $p(myid,"~",1)=$p(id,":",1) 
 ....//ls od
 ....i +$p($p(id,":",2),"|",1) d
 .....i $p($p(id,":",2),"|",1)["." s $p(myid,"~",2)=$p($p(id,":",2),"|",1)\1 s $p(myid,"~",3)=($p($p(id,":",2),"|",1)#1)*1000
 .....i $p($p(id,":",2),"|",1)["^" s $p(myid,"~",2)=$p($p($p(id,":",2),"|",1),"^",1) s $p(myid,"~",3)=$p($p($p(id,":",2),"|",1),"^",2)
 ....//ls do
 ....i +$p($p(id,":",3),"|",1) d
 .....i $p($p(id,":",3),"|",1)["." s $p(myid,"~",4)=$p($p(id,":",3),"|",1)\1 s $p(myid,"~",5)=($p($p(id,":",3),"|",1)#1)*1000
 .....i $p($p(id,":",3),"|",1)["^" s $p(myid,"~",4)=$p($p($p(id,":",3),"|",1),"^",1) s $p(myid,"~",5)=$p($p($p(id,":",3),"|",1),"^",2)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)	//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)						// koeficient mzdy (%)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$$hm^OBapiED($p(val,":",2))		// dodk (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p(val,":",3)						// priplatek nocovne (kc)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)						// diety (kc)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$p(val,":",5)						// celkove km (km)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=$p(val,":",6)						// zapoctene cek. z turnusu (%)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p(val,":",7)						// dopocet do uvazku
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=$p(val,":",8)						// fixni kc ke mzde (kc)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",9)=$p(val,":",9)						// fixni kc ke k cekani (kc)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",10)=$p(val,":",10)					// dodk v noci z dodk nad turnusem(%)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",11)=$p(val,":",11)					// priznak - neproplacet diety = 1 neproplacet
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",12)=$p(val,":",12)					// sazba pro pausalni mzdy (cis. 46)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",13)=$p(val,":",13)					// priznak neproplacet cekani (0/1 neproplacet)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",14)=$p(val,":",14)					// priznak nevyhodnocovat vyr.dobu (0/1 nevyhodnocovat)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",15)=$p(val,":",15)					// id pro zahranicni diety
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",16)=$p(val,":",16)					// id pro vypocet priplatku za odpracovane hodiny (0 ne / 1 ano, sazba 1 / 2 ano,sazba 2) 
 ..//linka.spoj
 ..i idedv=2 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid=""
 ....i id["." s $p(myid,"~",1)=(id\1) s $p(myid,"~",2)=((id#1)*1000)							//lisp postaru
 ....i id["^" s $p(myid,"~",1)=$p(id,"^",1) s $p(myid,"~",2)=$p(id,"^",2)						//lisp ponovu
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)			//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$$hm^OBapiED($p($p(val,"~",1),":",1))		//doba jizdy (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$$hm^OBapiED($p($p(val,"~",1),":",2))		//doba cekani (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p($p(val,"~",1),":",3)					//celkove km (km)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p($p(val,"~",1),":",4)					//druh spoje (ciselnik)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$p($p(val,"~",1),":",5)					//+/-
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=$p(val,"~",2)								//prepravni system
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p($p(val,"~",1),":",6)					//upraveny cas odjezdu (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=$p($p(val,"~",1),":",7)					//upraveny cas prijezdu (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",9)=$p($p(val,"~",1),":",8)					//upravene celkove km (km)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",10)=$p($p(val,"~",1),":",9)					//informace
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",11)=$p($p(val,"~",1),":",10)					//id turnusu odkud je spoj
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)) q:prs=""  d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)),"~",1)
 .....s out("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)),"~",2)
 ..//neprepravni vykony
 ..i idedv=3 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid=id
 ....f cnt=1:1:10 s out("arr","edv",hrl,"arr",idedv,myid,"dta",cnt)=$p(val,":",cnt)
 ....// konverze hh.mm na mm
 ....f cnt=1,2,3 s out("arr","edv",hrl,"arr",idedv,myid,"dta",cnt)=$$hm^OBapiED($g(out("arr","edv",hrl,"arr",idedv,myid,"dta",cnt)))
 ..//vlozeny vykon
 ..i idedv=4 d
 ...s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv))
 ...s out("arr","edv",hrl,"arr",idedv,"dta",1)=$p(val,":",1)				//km
 ...s out("arr","edv",hrl,"arr",idedv,"dta",2)=$$hm^OBapiED($p(val,":",2))	//cas(min)
 ..//rezijni km
 ..i idedv=5 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid=id
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p($p(val,"~",1),":",1) 				//celkove km
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$$hm^OBapiED($p($p(val,"~",1),":",2)) 	//hodiny (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$$hm^OBapiED($p($p(val,"~",1),":",3)) 	//cekani (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$$hm^OBapiED($p($p(val,"~",1),":",4)) 	//hodiny noc (min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$p(val,"~",2)							//ps
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=$p($p(val,"~",1),":",5)				//linka
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p($p(val,"~",1),":",6)				//spoj
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)) q:prs=""  d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)),"~",1)
 ..//diety
 ..i idedv=6 d
 ...s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv))
 ...s out("arr","edv",hrl,"arr",idedv,"dta",1)=$p(val,":",1)	//diety kc
 ..//casti spoju
 ..i idedv=7 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid=id
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$$hm^OBapiED($p($p(val,"~",1),":",1))	//doba jizdy(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$$hm^OBapiED($p($p(val,"~",1),":",2))	//doba manipulace(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$$hm^OBapiED($p($p(val,"~",1),":",3))	//hodiny v noci(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p($p(val,"~",1),":",4)				//celkove km(km)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$$hm^OBapiED($p($p(val,"~",1),":",5))	//doba cekani(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=$p(val,"~",2)							//prs
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=""										//linka
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=""										//spoj
 ....i +$p(val,"~",3) d
 .....i $p(val,"~",3)["." d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=+$p(val,"~",3)\1
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=+$p(val,"~",3)#1*1000
 .....i $p(val,"~",3)["^" d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p($p(val,"~",3),"^",1)
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=$p($p(val,"~",3),"^",2)
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)) q:prs=""  d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)),"~",1)
 ....// rozepsane cinnosti
 ....s idcnt="" f  s idcnt=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt)) q:idcnt=""  d
 .....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt))
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",1)=$$hm^OBapiED($p(val,":",1))		//hodiny jizdy(min)
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",2)=$$hm^OBapiED($p(val,":",2))		//hodiny manipulaci(min)
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",3)=$$hm^OBapiED($p(val,":",3))		//hodiny noc(min)
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",4)=$p(val,":",4)						//km
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)=""								//li
 .....s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6)=""								//sp
 .....i $p(val,":",5)["." d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)=($p(val,":",5)\1)				//linka
 ......s:'out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5) out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)=""
 ......s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6)=($p(val,":",5)#1*1000)			//spoj
 ......s:'out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6) out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6)=""
 .....i $p(val,":",5)["^" d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)=$p($p(val,":",5),"^",1)			//linka
 ......s:'out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5) out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)=""
 ......s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6)=$p($p(val,":",5),"^",2)			//spoj
 ......s:'out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6) out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6)=""
 .....// rozepsane cinnosti PRS
 .....s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt,"PRS",prs)) q:prs=""  d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"prs",prs,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt,"PRS",prs)),"~",1)
 ..//preruseni prace
 ..i idedv=8 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid=$$hm^OBapiED(id)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$$hm^OBapiED($p(val,":",1))			//do(min)
 ..//prejezd
 ..i idedv=9 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",1)=$p(id,":",1) s $p(myid,"~",2)=$p(id,":",2)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//do(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//km
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p(val,":",3)							//id zastavky od
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//id zastavky do
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$p(val,":",5)							//typ prejezdu
 ....//pokud typ prejezdu neni, doplnim 6 prejezd, drive se neevidovalo a byl prejezd(6)
 ....i out("arr","edv",hrl,"arr",idedv,myid,"dta",5)="" s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=6
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=$p(val,":",6)							//atr. hrazeneho prejezdu
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p(val,":",7)							//id turnusu odkud je prejezd
 ....//================================================================
 ..//neprepravni cinnost, vlozeny vykon
 ..i idedv=10 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",1)=$p(id,":",1) s $p(myid,"~",2)=$p(id,":",2)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//do(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id cinnosti
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p(val,":",3)							//id ostatnich praci
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//id turnusu, odkud je nepr.cinnost
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=$p(val,":",5)							//km pro neprepravni vykon
 ..//zpozdeni spoje - casovy posun konce
 ..i idedv=97 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",1)=$p(id,":",1) s $p(myid,"~",2)=$p(id,":",2)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//posun(min)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//linka
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p(val,":",3)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//spoj
 ..//posun v prubehu
 ..i idedv=98 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",1)=$p(id,":",1) s $p(myid,"~",2)=$p(id,":",2)
 ....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 ....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//posun(min)
 ..//odecteno z prubehu
 ..i idedv=99 d
 ...s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)) q:id=""  d
 ....// casovy prubeh ponovu EDISON
 ....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id))
 ....s myid="" s $p(myid,"~",1)=$p(id,":",1) s $p(myid,"~",2)=$p(id,":",2)
 ....s idcin=+$p(val,":",2)
 ....// zacatek a konec
 ....i (idcin=1)!(idcin=2) d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 ....// spoj
 ....i idcin=3 d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)			//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p($p(val,"~",1),":",1)					//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p($p(val,"~",1),":",2)					//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p($p(val,"~",1),":",3)					//km
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p($p(val,"~",1),":",4)					//tm
 .....i $p($p(val,"~",1),":",5)["." d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=($p($p(val,"~",1),":",5)\1)				//li postaru
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=($p($p(val,"~",1),":",5)#1*1000)			//sp postaru
 .....i $p($p(val,"~",1),":",5)["^" d
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",5)=($p($p($p(val,"~",1),":",5),"^",1))		//li ponovu
 ......s out("arr","edv",hrl,"arr",idedv,myid,"dta",6)=($p($p($p(val,"~",1),":",5),"^",2))		//sp ponovu
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",7)=$p($p(val,"~",1),":",6)					//maBe
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",8)=$p($p(val,"~",1),":",7)					//maAf
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",13)=$p($p(val,"~",1),":",9)					//kmt
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",14)=$p(val,"~",3)							//dsp
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",15)=$p(val,"~",2)							//prs
 ....//pristaveni,odstaveni,prejezd,rezijni
 ....i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)			//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p($p(val,"~",1),":",1)					//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p($p(val,"~",1),":",2)					//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p($p(val,"~",1),":",3)					//km
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p($p(val,"~",1),":",4)					//tm
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",9)=$p($p(val,"~",1),":",5)					//zFr
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",10)=$p($p(val,"~",1),":",6)					//zTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",15)=$p(val,"~",2)							//prs
 ....//informace
 ....i idcin=8 d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",12)=$p(val,":",5)						//info
 ....//bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 ....i (idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//tm
 ....//ost.pr
 ....i idcin=10 d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s idop=+$p(val,"#",2) s val=$p(val,"#",1)
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//tm
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",11)=idop									//upresneni
 ....//preruseni
 ....i idcin=12 d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//tm
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",12)=$p(val,":",5)						//info
 ....//vlozeny vykon s cas.pozici
 ....i idcin=18 d
 .....s out("arr","edv",hrl,"arr",idedv,myid,"par",1)=$p(val,"@",2) s val=$p(val,"@",1)		//poradi
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",1)=$p(val,":",1)							//tmTo
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",2)=$p(val,":",2)							//id
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",3)=$p(val,":",3)							//km
 .....s out("arr","edv",hrl,"arr",idedv,myid,"dta",4)=$p(val,":",4)							//tm
 // dalsi udaje
 s out("arr",1,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",1)							//zacatek ph
 s out("arr",1,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",2)							//konec ph
 s out("arr",1,"dta",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",3)							//lt ph
 s out("arr",2,"dta",1)=$g(^[nmsp]OBD(zp,rrmm,doc,"pocasiphm"))								//prirazka phm
 //kontrola auta
 s out("arr",3,"stt",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","s"))							//kontrola stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 s out("arr",3,"dta",1)=+$p($g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d")),"~",1)					//kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt)) q:cnt=""  d
 .s out("arr",3,"dsc",cnt)=$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt))					//zavada, popis
 //aktualizace udaju kontroly vozidel z vozidel
 i +$g(in("par",1)) d
 .//idfa,nmsp,hrl,rz,iddoc,idos,in,out
 .k arrknt
 .s err=$$gVcKntBus^OBapiEDDocKntBus(idfa,nmsp,+$g(out("dta",4)),$g(out("dta",6)),(zp_"|"_rrmm_"|"_doc),idos,"",.arrknt) s err=""
 .i +$g(arrknt("stt")) d
 ..k out("arr",3)
 ..m out("arr",3)=arrknt("arr",3)
 //============================================
 m:$d(^[nmsp]OBD(zp,rrmm,doc,"PS")) out("arr",4)=^[nmsp]OBD(zp,rrmm,doc,"PS")               //presne km dle prepravnich systemu "arr",4,prs)=km ; "arr",4,prs,dsp)=km ; "arr",4,prs,dsp,typ)=km
 m:$d(^[nmsp]OBD(zp,rrmm,doc,"PST")) out("arr",5)=^[nmsp]OBD(zp,rrmm,doc,"PST")    			//tarifni km dle prepravnich sytemu "arr",5,prs)=km ; "arr",5,prs,dsp)=km
 s out("arr",6,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"trol")),":",1)						//vychozi stav elektromeru pro trolejbus
 s out("arr",6,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"trol")),":",2)						//koncovy stav elektromeru pro trolejbus
 i $d(^[nmsp]OBD(zp,rrmm,doc,"docphm")) d
 .s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d						//doklady pro cerpane phm
 ..s out("arr",7,"arr",id,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1)
 .s out("arr",7,"cop","dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)
 .s out("arr",7,"cop","dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)
 // ===========================
 // odkaz na fakturu + historie
 // ===========================
 s out("arr",8,"dta",1)=$g(^[nmsp]OBD(zp,rrmm,doc,"CFAK"))												//odkaz na fakturu (rok~fstr~cislo~idfa)
 s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)) q:cnt=""  d
 .s out("arr",8,"arr",cnt,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",1)						//odkaz na fakturu (rok~fstr~cislo~idfa)
 .s out("arr",8,"arr",cnt,"par",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",2)						//horlog prevodu do fakturace
 .s out("arr",8,"arr",cnt,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",3)						//jmeno uzivatele, ktery prevedl fakturu
 // ===========================
 // konvertovane pauzy vypoctem
 // ===========================
 m:$d(^[nmsp]OBD(zp,rrmm,doc,"cnvpau")) out("arr",9)=^[nmsp]OBD(zp,rrmm,doc,"cnvpau")					//konvertovane pauzy
 // zahranicni diety (protokol)
 m out("arr",10)=^[nmsp]OBD(zp,rrmm,doc,"ZDIE")
 // ================
 // fakturacni udaje
 // ================
 // fakturace data
 s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak"))
 f cnt=1:1:$$gPcFakDz() s out("fak","dta",cnt)=$p(val,"~",cnt)
 // fakturacni polozky
 s iditm="" f  s iditm=$o(^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)) q:iditm=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)) 
 .f cnt=1:1:$$gPcFakItmDz() d
 ..s out("fak","itm",iditm,"dta",cnt)=$p(val,"~",cnt)
 // ============
 // hlidani zmen
 // ============
 s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"cop",""),-1)
 s out("arr","cop","dta",1)=cnt s out("arr","cop","dta",2)=""
 s:cnt'="" out("arr","cop","dta",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop",cnt))
 s out("arr","cop","dta",3)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop"))
 /*
 s out("arr",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"kdeTank"))		                                ;; kde tankoval id)=lt 	... kde tankoval  nepouziva se ???
 m:$d(^[nmsp]OBD(zp,rrmm,doc,"Mipl")) out("arr",6)=^[nmsp]OBD(zp,rrmm,doc,"Mipl")			;; KOREKCE KM PRO CASTI SPOJU (HO)... v HO se nepouziva
 s out("arr",7)=$g(^[nmsp]OBD(zp,rrmm,doc,"CDS"))											;; DODK PRO CDS 		... nepouziva se
 */
 ;;
 q 0
 //
gDzRzDta(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gDzRzDta(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data dzva zakladni a pro rz - vyhodnoceni
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 // data dzva - obecny
 s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1)
 f cnt=1:1:$$gPcPDU() s out("dta",cnt)=$p(val,":",cnt)
 // konverze dat
 s:$g(out("dta",4)) out("dta",4)=$$dn^OBapiED(out("dta",4))
 // data dzva - vyhodnoceni turnusu tuv
 s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)
 k arr d qvTuV^OBapiEDTur(val,.arr) m out("arr","tuv")=arr
 // prepravni systemy - napocet 
 m out("arr",4)=^[nmsp]OBD(zp,rrmm,doc,"PS")	//presne km dle prepravnich systemu "arr",4,prs)=km ; "arr",4,prs,dsp)=km ; "arr",4,prs,dsp,typ)=km
 m out("arr",5)=^[nmsp]OBD(zp,rrmm,doc,"PST")	//tarifni km dle prepravnich sytemu "arr",5,prs)=km ; "arr",5,prs,dsp)=km
 q 0
 //
gDzOsDta(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gDzOsDta(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data dzva pro os - vyhodnoceni
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 //
 s myval=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1)
 // datum jizdy
 s out("dta",4)=$p(myval,":",4)
 // konverze dat
 s:$g(out("dta",4)) out("dta",4)=$$dn^OBapiED(out("dta",4))
 // rz
 s out("dta",6)=$p(myval,":",6)
 // informace o zaskolovani (konec tachometru nebo "Z" nebo "P")
 s out("dta",7)=$p(myval,":",7)
 // nsrz
 s out("dta",16)=$p(myval,":",16)
 // ridici - vyhodnoceni
 s seqosc=0
 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 .s seqosc=seqosc+1
 .s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)
 .s:$g(^[nmsp]OBD(zp,rrmm,doc,osc))'="" $p(val,":",19)=$g(^[nmsp]OBD(zp,rrmm,doc,osc))
 .s:$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))'="" val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))
 .k arr d qvTuV^OBapiEDTur(val,.arr) m out("osc",osc,"tuv")=arr
 .// ridici, dalsi udaje (spolujizda,pendl)
 .i $g(^[nmsp]OBD(zp,rrmm,doc,osc,"i"))'="" d
 ..s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"i"))
 ..s out("osc",osc,"dta",1)="" s:$p(val,"~",1)'="" out("osc",osc,"dta",1)=$$hm^OBapiED($p(val,"~",1))
 ..s out("osc",osc,"dta",2)=+$p(val,"~",2)
 ..s out("osc",osc,"dta",3)=+$p(val,"~",3)
 ..s out("osc",osc,"dta",4)="" s:$p(val,"~",4)'="" out("osc",osc,"dta",4)=$$hm^OBapiED($p(val,"~",4))
 ..s out("osc",osc,"dta",5)="" s:$p(val,"~",5)'="" out("osc",osc,"dta",5)=$$hm^OBapiED($p(val,"~",5))
 ..s out("osc",osc,"dta",6)="" s:$p(val,"~",6)'="" out("osc",osc,"dta",6)=$$hm^OBapiED($p(val,"~",6))
 ..s out("osc",osc,"dta",7)="" s:$p(val,"~",7)'="" out("osc",osc,"dta",7)=$$hm^OBapiED($p(val,"~",7))
 ..s out("osc",osc,"dta",8)="" s:$p(val,"~",8)'="" out("osc",osc,"dta",8)=$$hm^OBapiED($p(val,"~",8))
 ..s out("osc",osc,"dta",9)="" s:$p(val,"~",9)'="" out("osc",osc,"dta",9)=$$hm^OBapiED($p(val,"~",9))
 ..s out("osc",osc,"dta",10)=$p(val,"~",10)
 ..s out("osc",osc,"dta",11)=$p(val,"~",11)
 ..s out("osc",osc,"dta",12)=$p(val,"~",12) i out("osc",osc,"dta",12)="" s out("osc",osc,"dta",12)="A"
 ..s out("osc",osc,"dta",13)=$p(val,"~",13)
 ..s out("osc",osc,"dta",14)=$p(val,"~",14)
 ..s out("osc",osc,"dta",15)=+$p(val,"~",15)
 .//dalsi parametry ridice
 .//poradi ridicu pri zadavani
 .i +$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")) s out("osc",osc,"par",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p"))
 .i '$g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")) s out("osc",osc,"par",1)=seqosc
 .//ns ridice
 .s out("osc",osc,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",2)
 .//zpusob vypoctu mzdy pro casovou mzdy (UH)
 .s out("osc",osc,"par",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",3)
 .//subdodany ridic 0/1
 .s out("osc",osc,"par",4)=(+$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",4))
 .//IC spolecnosti, ktera subdodala ridice
 .s out("osc",osc,"par",5)=$p($g(^[nmsp]OBD(zp,rrmm,doc,osc,"p")),"~",5)
 //
 q 0
 //
sDzOsTuvDta(idfa,nmsp,zp,rrmm,doc,os,in,out)
 // err=$$sDzOsTuvDta^OBapiED(idfa,nmsp,zp,rrmm,doc,os,in,out)
 // ===========================================================================================
 // zapis/aktualizace hodinovych a korunovych polozek ridice do dokladu dzva
 // pozor, nesmí se aktualizovat prubeh dokladu, v tomto pripade udelat cely prepocet !
 // pouziva se pri aktualizaci (doplneni) udaju v pripade, ze ma ridic v ramci dne vice dokladu
 // ===========================================================================================
 // in("osc",os,"tuv",...)
 n (idfa,nmsp,zp,rrmm,doc,os,in,out) s $zt="err" k out s err=""
 // kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(os)="" q "1~os="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 // save tuv pro os
 s dta="" k arr m arr=in("osc",os,"tuv") d svTuV^OBapiEDTur(.dta,.arr)
 s ^[nmsp]OBD(zp,rrmm,doc,os)=""
 i $p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2),":",19)'=$p(dta,":",19) {
	 s ^[nmsp]OBD(zp,rrmm,doc,os)=$p(dta,":",19)
 }
 s ^[nmsp]OBD(zp,rrmm,doc,os,"d")=""
 i $p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)'=dta {
	 s ^[nmsp]OBD(zp,rrmm,doc,os,"d")=dta
 }
 //horlog zacatku pro aktualizaco grafikonu
 s hrlbeg=(+$o(^[nmsp]OBD(zp,rrmm,doc,"D","")))\1
 //aktualizace grafikonu ridice 
 k arrgrf s err=$$gGrfOs^OBapiED(idfa,nmsp,os,hrlbeg,doc,"",.arrgrf) zt:+err "merr" s err=""
 //aktualizace hodin a kc 
 s arrgrf("dta",1)=0 f cnt=1:1:4,12,15,26,28,34,38,40,41,42 s arrgrf("dta",1)=$g(arrgrf("dta",1))+$g(in("osc",os,"tuv",19,cnt))
 s arrgrf("dta",2)=$g(in("osc",os,"tuv",11))
 s arrgrf("dta",3)=$g(in("osc",os,"tuv",18))
 s arrgrf("dta",4)=""
 s arrgrf("dta",6)=rrmm
 s arrgrf("dta",7)=zp
 s err=$$sGrfOs^OBapiED(idfa,nmsp,os,hrlbeg,doc,.arrgrf,"") zt:+err "merr" s err=""
 //
 q 0
 //
gNxtIdDz(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gNxtIdDz(idfa,nmsp,zp,rrmm,doc,in,out) - vrati dalsi id DZVA pro uznani
 // in("par",1)=idprac, pak hleda v rozsahu cisel pro pracoviste
 // out=zp~rrmm~iddoc (pozor, muze se zmenit rrmm)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // posun pro sj
 s qsj=$$qsj^OBapiED()
 s cdocbeg="" s cdocend=""
 // cislovani dokladu pro pracoviste
 s idprac=$g(in("par",1))
 i idprac'="" {
	 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac)
	 //planuje se pravidelna doprava
	 i +$g(arrprac("dta",5)) {
		 i $g(arrprac("dta",8))'="" s cdocbeg=$g(arrprac("dta",8))
		 i $g(arrprac("dta",9))'="" s cdocend=$g(arrprac("dta",9))
	 }
	 k arrprac
 }
 // v obdobi rrmm
 s out=""
 s iddoc=doc i (+cdocbeg)&(iddoc<cdocbeg) s iddoc=cdocbeg 
 f {
	 s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) i (iddoc="")!((+cdocend)&(iddoc>cdocend))!(iddoc'<qsj)!(out'="") q
	 i '+$g(^[nmsp]OBD(zp,rrmm,iddoc)) s out=zp_"~"_rrmm_"~"_iddoc
 }
 // v obdobi rrmm neni pak v rrmm+1
 i out="" {
	 s rrmm=$$addmmtorrrrmm^OBapiED($$rrrrmm^OBapiED(rrmm),1)#10000
     s iddoc="" i (+cdocbeg)&(iddoc<cdocbeg) s iddoc=cdocbeg
     f {
	 	s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) i (iddoc="")!((+cdocend)&(iddoc>cdocend))!(iddoc'<qsj)!(out'="") q
	 	i '+$g(^[nmsp]OBD(zp,rrmm,iddoc)) s out=zp_"~"_rrmm_"~"_iddoc
 	}	 
 }
 q 0
 //
sDz(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$sDz(idfa,nmsp,zp,rrmm,doc,in,out) - zapis DZVA do db
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)= 0/1 ... mod pro zapis kontroly autobusu do vozidel
 // !!! pozor, pri zmene v evidenci prepravnich systemu aktualizovat i program $$sDzPartPrs^OBapiEDDz1
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 // vymazani dokladu
 k ^[nmsp]OBD(zp,rrmm,doc)
 // zapis dokladu
 // obecna veta
 s dta="" f cnt=1:1:$$gPcPDU() d
 .s val=$g(in("dta",cnt))
 .// konverze dat
 .i (cnt=4) i (+val) s val=$$nd^OBapiED(val,1)
 .s $p(dta,":",cnt)=val
 s $p(^[nmsp]OBD(zp,rrmm,doc),"#",1)=dta
 // vyhodnoceni tuv
 s dta="" k arr m arr=in("arr","tuv") d svTuV^OBapiEDTur(.dta,.arr)
 s $p(^[nmsp]OBD(zp,rrmm,doc),"#",2)=dta
 // ridici - vyhodnoceni tuv
 s osc="" f  s osc=$o(in("osc",osc)) q:osc=""  d
 .s dta="" k arr m arr=in("osc",osc,"tuv") d svTuV^OBapiEDTur(.dta,.arr)
 .s ^[nmsp]OBD(zp,rrmm,doc,osc)=""
 .i $p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2),":",19)'=$p(dta,":",19) d
 ..s ^[nmsp]OBD(zp,rrmm,doc,osc)=$p(dta,":",19)
 .i $p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2)'=dta d
 ..s ^[nmsp]OBD(zp,rrmm,doc,osc,"d")=dta
 .// ridici, dalsi udaje (spolujizda,pendl)
 .s dta=""
 .s:$g(in("osc",osc,"dta",1)) $p(dta,"~",1)=$$mh^OBapiED($g(in("osc",osc,"dta",1)))
 .s $p(dta,"~",2)=+$g(in("osc",osc,"dta",2))
 .s $p(dta,"~",3)=+$g(in("osc",osc,"dta",3))
 .s:$g(in("osc",osc,"dta",4)) $p(dta,"~",4)=$$mh^OBapiED($g(in("osc",osc,"dta",4)))
 .s:$g(in("osc",osc,"dta",5)) $p(dta,"~",5)=$$mh^OBapiED($g(in("osc",osc,"dta",5)))
 .s:$g(in("osc",osc,"dta",6)) $p(dta,"~",6)=$$mh^OBapiED($g(in("osc",osc,"dta",6)))
 .s:$g(in("osc",osc,"dta",7)) $p(dta,"~",7)=$$mh^OBapiED($g(in("osc",osc,"dta",7)))
 .s:$g(in("osc",osc,"dta",8)) $p(dta,"~",8)=$$mh^OBapiED($g(in("osc",osc,"dta",8)))
 .s:$g(in("osc",osc,"dta",9)) $p(dta,"~",9)=$$mh^OBapiED($g(in("osc",osc,"dta",9)))
 .s $p(dta,"~",10)=$g(in("osc",osc,"dta",10))
 .s $p(dta,"~",11)=$g(in("osc",osc,"dta",11))
 .s $p(dta,"~",12)=$g(in("osc",osc,"dta",12))
 .s $p(dta,"~",13)=$g(in("osc",osc,"dta",13))
 .s $p(dta,"~",14)=$g(in("osc",osc,"dta",14))
 .s $p(dta,"~",15)=$g(in("osc",osc,"dta",15))
 .// je pohotovost pri spolujizde, nema narok na nocovne, je pendl, je nastaven vypocet mzdy nebo nema narok na priplatek ke mzde = zapis
 .i ($p(dta,"~",1))!($p(dta,"~",2))!($p(dta,"~",3))!($p(dta,"~",12)'="")!($p(dta,"~",15)) s ^[nmsp]OBD(zp,rrmm,doc,osc,"i")=dta
 .// poradi ridice pri porizeni
 .s $p(^[nmsp]OBD(zp,rrmm,doc,osc,"p"),"~",1)=$g(in("osc",osc,"par",1))
 .// ns ridice
 .s $p(^[nmsp]OBD(zp,rrmm,doc,osc,"p"),"~",2)=$g(in("osc",osc,"par",2))
 .//zpusob vypoctu mzdy pro pausalni mzdy (UH)
 .s $p(^[nmsp]OBD(zp,rrmm,doc,osc,"p"),"~",3)=$g(in("osc",osc,"par",3))
 .//subdodany ridic 0/1
 .s $p(^[nmsp]OBD(zp,rrmm,doc,osc,"p"),"~",4)=(+$g(in("osc",osc,"par",4)))
 .//IC spolecnosti, ktera subdodala ridice
 .s $p(^[nmsp]OBD(zp,rrmm,doc,osc,"p"),"~",5)=$g(in("osc",osc,"par",5))
 // casovy prubeh turnusu
 s tm="" f  s tm=$o(in("arr","tur",tm)) q:tm=""  d
 .s idcin=$g(in("arr","tur",tm,"dta",2))
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))					    //tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))						//id
 ..s $p(dta,":",3)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost 
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 .// spoj
 .i idcin=3 d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))											//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  											//id
 ..s $p(dta,":",3)=$g(in("arr","tur",tm,"dta",3))											//km
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))											//tm
 ..s $p(dta,":",5)=($g(in("arr","tur",tm,"dta",5))_"^"_($g(in("arr","tur",tm,"dta",6))))	//lisp 
 ..s $p(dta,":",6)=$g(in("arr","tur",tm,"dta",7))											//maBe
 ..s $p(dta,":",7)=$g(in("arr","tur",tm,"dta",8))											//maAf
 ..s $p(dta,":",8)=$g(in("arr","tur",tm,"dta",16))											//prir.phm
 ..s $p(dta,":",9)=$g(in("arr","tur",tm,"dta",13))											//kmt
 ..s $p(dta,":",10)=$g(in("arr","tur",tm,"dta",18))											//priznak casti spoje
 ..s $p(dta,":",11)=$g(in("arr","tur",tm,"dta",12))											//informace
 ..s $p(dta,":",12)=$g(in("arr","tur",tm,"dta",19))											//id turnusu, ze ktere je cinnost 
 ..s $p(dta,":",$l(dta,":")+1)=""															//dalsi : nakonec
 ..s $p(dta,"~",2)=$g(in("arr","tur",tm,"dta",15))											//prs
 ..s $p(dta,"~",3)=$g(in("arr","tur",tm,"dta",14))											//dsp
 ..s $p(dta,"~",5)=$g(in("arr","tur",tm,"dta",17))											//vicesmenny priplatek
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 ..// vice prepravnich systemu
 ..s prs="" f  s prs=$o(in("arr","tur",tm,"prs",prs)) q:prs=""  d
 ...s dta=""
 ...s $p(dta,"~",1)=$g(in("arr","tur",tm,"prs",prs,"dta",1))
 ...s $p(dta,"~",2)=$g(in("arr","tur",tm,"prs",prs,"dta",2))
 ...s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)=dta
 .//pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",3)=$g(in("arr","tur",tm,"dta",3))						//km
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))						//tm
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",9))						//zFr
 ..s $p(dta,":",6)=$g(in("arr","tur",tm,"dta",10))						//zFr
 ..s $p(dta,":",7)=$g(in("arr","tur",tm,"dta",21))						//atr. hrazeneho prejezdu
 ..s $p(dta,":",8)=$g(in("arr","tur",tm,"dta",16))						//prir.phm
 ..s $p(dta,":",9)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost 
 ..s $p(dta,":",$l(dta,":")+1)=""										//dalsi : nakonec
 ..s $p(dta,"~",2)=$g(in("arr","tur",tm,"dta",15))						//prs
 ..s $p(dta,"~",5)=$g(in("arr","tur",tm,"dta",17))						//vicesmenny priplatek
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 ..// vice prepravnich systemu
 ..s prs="" f  s prs=$o(in("arr","tur",tm,"prs",prs)) q:prs=""  d
 ...s dta=""
 ...s $p(dta,"~",1)=$g(in("arr","tur",tm,"prs",prs,"dta",1))
 ...s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm,"PRS",prs)=dta
 .//informace
 .i idcin=8 d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",12))  					//info
 ..s $p(dta,":",6)=$g(in("arr","tur",tm,"dta",19))  					//id turnusu, ze ktere je cinnost 
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 .//cekani,bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 .i (idcin=0)!(idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))						//tm
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 .//ost.pr
 .i idcin=10 d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))						//tm
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost
 ..s $p(dta,"#",2)=$g(in("arr","tur",tm,"dta",11))						//upresneni
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 .//preruseni
 .i idcin=12 d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))						//tm
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",12))						//info
 ..s $p(dta,":",6)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 .//vlozeny vykon
 .i idcin=18 d
 ..s dta=""
 ..s $p(dta,":",1)=$g(in("arr","tur",tm,"dta",1))						//tmTo
 ..s $p(dta,":",2)=$g(in("arr","tur",tm,"dta",2))  						//id
 ..s $p(dta,":",3)=$g(in("arr","tur",tm,"dta",3))						//km
 ..s $p(dta,":",4)=$g(in("arr","tur",tm,"dta",4))						//tm
 ..s $p(dta,":",5)=$g(in("arr","tur",tm,"dta",19))						//id turnusu, ze ktere je cinnost
 ..s ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)=dta
 // ===========================================
 // edit dokladu, casovy prubeh, dalsi cinnosti
 // ===========================================
 s skmvlo=0																				//km vlozeneho vykonu
 s hrl="" f  s hrl=$o(in("arr","edv",hrl)) q:hrl=""  d
 .s idedv="" f  s idedv=$o(in("arr","edv",hrl,"arr",idedv)) q:idedv=""  d
 ..//turnus
 ..i idedv=1 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....i $p(myid,"~",2)&$p(myid,"~",3) s $p(id,":",2)=($p(myid,"~",2)_"^"_($p(myid,"~",3)))
 ....i $p(myid,"~",4)&$p(myid,"~",5) s $p(id,":",3)=($p(myid,"~",4)_"^"_($p(myid,"~",5))) //!!! dodelat |
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))					// koeficient mzdy (%)
 ....s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2)))		// dodk (min)
 ....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))					// priplatek nocovne (kc)
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))					// diety (kc)
 ....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))					// celkove km (km)
 ....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6))					// zapoctene cek. z turnusu (%)
 ....s $p(dta,":",7)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7))					// dopocet do uvazku
 ....s $p(dta,":",8)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",8))					// fixni kc ke mzde
 ....s $p(dta,":",9)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",9))					// fixni kc k cekani
 ....s $p(dta,":",10)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",10))					// dodk v noci z dodk nad turnusem(%)
 ....s $p(dta,":",11)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",11))					// priznak neproplacet diety = 1 - neproplacet
 ....s $p(dta,":",12)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",12))					// sazba pro pausalni mzdy (cis. 46)
 ....s $p(dta,":",13)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",13))					// priznak neproplacet cekani (0/1 neproplacet)
 ....s $p(dta,":",14)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",14))					// priznak nevyhodnocovat vyr.dobu (0/1 nevyhodnocovat)
 ....s $p(dta,":",15)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",15))					// id pro zahranicni diety
 ....s $p(dta,":",16)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",16))					// id pro vypocet priplatku za odpracovane hodiny
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))					// poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//linka.spoj
 ..i idedv=2 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=($p(myid,"~",1)_"^"_($p(myid,"~",2)))
 ....s dta=""
 ....s $p(dta,":",1)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1)))				//doba jizdy (min)
 ....s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2)))				//doba cekani (min)
 ....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))							//celkove km (km)
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))							//druh spoje (ciselnik)
 ....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))							//+/-
 ....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7))							//upraveny cas odjezdu (min)
 ....s $p(dta,":",7)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",8))							//upraveny cas prijezdu (min)
 ....s $p(dta,":",8)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",9))							//upravene celkove km (km)
 ....s $p(dta,":",9)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",10))							//informace
 ....s $p(dta,":",10)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",11))							//id turnusu odkud je spoj
 ....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6))							//prepravni system
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))							//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs)) q:prs=""  d
 .....s dta=""
 .....s $p(dta,"~",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1))
 .....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",2))
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)=dta
 ..//neprepravni vykony
 ..i idedv=3 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=myid
 ....s dta=""
 ....f cnt=1:1:10 s $p(dta,":",cnt)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",cnt))
 ....// konverze mm na hh.mm
 ....f cnt=1,2,3 s $p(dta,":",cnt)=$$mh^OBapiED($p(dta,":",cnt))
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//vlozeny vykon
 ..i idedv=4 d
 ...s dta=""
 ...s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,"dta",1))							//km
 ...s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,"dta",2)))			//cas(min)
 ...s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv)=dta
 ...s skmvlo=skmvlo+$g(in("arr","edv",hrl,"arr",idedv,"dta",1))							//suma km vlozeneho vykonu
 ..//rezijni km
 ..i idedv=5 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=myid
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1)) 	 				//celkove km	
 ....s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))) 	//hodiny (min)
 ....s $p(dta,":",3)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))) 	//cekani (min)
 ....s $p(dta,":",4)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))) 	//hodiny noc (min)
 ....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6)) 	 				//linka
 ....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7)) 	 				//spoj
 ....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))					//prepravni system
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs)) q:prs=""  d
 .....s dta=""
 .....s $p(dta,"~",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1))
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)=dta
 ..//diety
 ..i idedv=6 d
 ...s dta=""
 ...s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,"dta",1))
 ...s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv)=dta
 ..//casti spoju
 ..i idedv=7 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=myid
 ....s dta=""
 ....s $p(dta,":",1)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1)))			//doba jizdy(min)
 ....s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2)))			//doba manipulace(min)
 ....s $p(dta,":",3)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3)))			//hodiny v noci(min)
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//celkove km(km)
 ....s $p(dta,":",5)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5)))			//doba cekani(min)
 ....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6))						//prepravni system
 ....s $p(dta,"~",3)=""																		//linka a spoj
 ....i $g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7)) d
 .....s $p(dta,"~",3)=($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7))_"^"_($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",8))))
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs)) q:prs=""  d
 .....s dta=""
 .....s $p(dta,"~",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"prs",prs,"dta",1))
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"PRS",prs)=dta
 ....// rozepsane cinnosti
 ....s idcnt="" f  s idcnt=$o(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt)) q:idcnt=""  d
 .....s dta=""
 .....s $p(dta,":",1)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",1)))		//hodiny jizdy(min)
 .....s $p(dta,":",2)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",2)))		//hodiny manipulaci(min)
 .....s $p(dta,":",3)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",3)))		//hodiny noc(min)
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",4))						//km
 .....s $p(dta,":",5)=""																				//linka a spoj
 .....i $g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5)) d
 ......s $p(dta,":",5)=($g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",5))_"^"_($g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"dta",6))))
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt)=dta
 .....// rozepsane cinnosti PRS
 .....s prs="" f  s prs=$o(out("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"prs",prs)) q:prs=""  d
 ......s dta=""
 ......s $p(dta,"~",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"rzp",idcnt,"prs",prs,"dta",1))
 ......s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id,"r",idcnt,"PRS",prs)=dta
 ..//preruseni prace
 ..i idedv=8 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=$$mh^OBapiED(myid)
 ....s dta=""
 ....s $p(dta,":",1)=$$mh^OBapiED($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1)))						//do(min)
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))									//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//prejezd
 ..i idedv=9 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....s $p(id,":",2)=$p(myid,"~",2)
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//do(min)
 ....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//km
 ....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))						//id zastavky od
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//id zastavky do
 ....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))						//typ prejezdu
 ....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6))						//atr. placeneho prejezdu
 ....s $p(dta,":",7)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7))						//id turnusu odkud je prejezd
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//neprepravni cinnost., vlozeny vykon
 ..i idedv=10 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....s $p(id,":",2)=$p(myid,"~",2)
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//do(min)
 ....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 ....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))						//id ost.prace
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//id turnusu odkud je nepr.cinnost
 ....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))						//km pro vlozeny vykon
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//zpozdeni spoje - casovy posun konce
 ..i idedv=97 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....s $p(id,":",2)=$p(myid,"~",2)
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//posun(min)
 ....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//linka
 ....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))
 ....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//spoj
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//posun v prubehu
 ..i idedv=98 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....s $p(id,":",2)=$p(myid,"~",2)
 ....s dta=""
 ....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//posun(min)
 ....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 ....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ..//odecteno z prubehu
 ..i idedv=99 d
 ...s myid="" f  s myid=$o(in("arr","edv",hrl,"arr",idedv,myid)) q:myid=""  d
 ....s id=""
 ....s $p(id,":",1)=$p(myid,"~",1)
 ....s $p(id,":",2)=$p(myid,"~",2)
 ....s idcin=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))
 ....// zacatek a konec
 ....i (idcin=1)!(idcin=2) d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....// spoj
 ....i idcin=3 d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))						//km
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....s $p(dta,":",5)=($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",5))_"^"_($g(in("arr","edv",hrl,"arr",idedv,myid,"dta",6))))
 .....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",7))						//maBe
 .....s $p(dta,":",7)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",8))						//maAf
 .....s $p(dta,":",9)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",13))						//kmt
 .....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",15))						//prs
 .....s $p(dta,"~",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",14))						//dsp
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//pristaveni,odstaveni,prejezd,rezijni
 ....i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))						//km
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",9))						//zFr
 .....s $p(dta,":",6)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",10))						//zTo
 .....s $p(dta,"~",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",15))						//prs
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//informace
 ....i idcin=8 d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",12))						//info
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 ....i (idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//ost.pr
 ....i idcin=10 d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....//s idop=+$p(val,"#",2) s val=$p(val,"#",1)
 .....s $p(dta,"#",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",11))						//upresneni
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//preruseni
 ....i idcin=12 d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....s $p(dta,":",5)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",12))						//info
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 ....//vlozeny vykon
 ....i idcin=18 d
 .....s dta=""
 .....s $p(dta,":",1)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",1))						//tmTo
 .....s $p(dta,":",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",2))						//id
 .....s $p(dta,":",3)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",3))						//km
 .....s $p(dta,":",4)=$g(in("arr","edv",hrl,"arr",idedv,myid,"dta",4))						//tm
 .....s $p(dta,"@",2)=$g(in("arr","edv",hrl,"arr",idedv,myid,"par",1))						//poradi
 .....s ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,id)=dta
 // dalsi udaje
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",1)=$g(in("arr",1,"dta",1))							//zacatek ph
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",2)=$g(in("arr",1,"dta",2))							//konec ph
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",3)=$g(in("arr",1,"dta",3))							//lt ph
 s ^[nmsp]OBD(zp,rrmm,doc,"pocasiphm")=$g(in("arr",2,"dta",1))								//prirazka phm
 //kontrola auta
 s ^[nmsp]OBD(zp,rrmm,doc,"kntbus","s")=$g(in("arr",3,"stt",1))								//kontrola stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 s $p(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d"),"~",1)=$g(in("arr",3,"dta",1))					//kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 s cnt="" f  s cnt=$o(in("arr",3,"dsc",cnt)) q:cnt=""  d
 .s ^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt)=$g(in("arr",3,"dsc",cnt))					//zavada, popis
 //zapis kontroly do vozidel 
 i +$g(in("par",1)) d
 .k arri m arri=in
 .s err=$$sVcKntBus^OBapiEDDocKntBus(idfa,nmsp,+$g(in("dta",4)),$g(in("dta",6)),(zp_"|"_rrmm_"|"_doc),idos,.arri,"")
 .s err="" k arri
 m ^[nmsp]OBD(zp,rrmm,doc,"PS")=in("arr",4)									                //presne km dle prepravnich systemu "arr",4,prs)=km ; "arr",4,prs,dsp)=km ; "arr",4,prs,dsp,typ)=km
 m ^[nmsp]OBD(zp,rrmm,doc,"PST")=in("arr",5)								    			//tarifni km dle prepravnich sytemu "arr",5,prs)=km ; "arr",5,prs,dsp)=km
 s $p(^[nmsp]OBD(zp,rrmm,doc,"trol"),":",1)=$g(in("arr",6,"dta",1))							//vychozi stav elektromeru pro trolejbus
 s $p(^[nmsp]OBD(zp,rrmm,doc,"trol"),":",2)=$g(in("arr",6,"dta",2))							//koncovy stav elektromeru pro trolejbus s
 i $d(in("arr",7,"arr")) d																	//doklady pro cerpane phm
 .s id="" f  s id=$o(in("arr",7,"arr",id)) q:id=""  d												
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm",id),"~",1)=$g(in("arr",7,"arr",id,"dta",1))
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$g(in("arr",7,"cop","dta",1))
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$g(in("arr",7,"cop","dta",2))
 //data pro zpetnou kompatibilitu
 s ^[nmsp]OBD(zp,rrmm,doc,"Auto")=$g(in("dta",6))											//rz
 s ^[nmsp]OBD(zp,rrmm,doc,"Ns")=$g(in("dta",16))											//ns
 s ^[nmsp]OBD(zp,rrmm,doc,"Start")=$g(in("dta",4))											//hrl zacatku
 //info, kdo doklad zmenil
 s ^[nmsp]OBD(zp,rrmm,doc,"x")=$p($g(idos),"~",3)_":"_$h
 // odkaz na fakturu + historie
 s ^[nmsp]OBD(zp,rrmm,doc,"CFAK")=$g(in("arr",8,"dta",1))									//odkaz na fakturu (rok~fstr~cislo~idfa)
 s cnt="" f  s cnt=$o(in("arr",8,"arr",cnt)) q:cnt=""  d
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",1)=$g(in("arr",8,"arr",cnt,"dta",1))			//odkaz na fakturu (rok~fstr~cislo~idfa)
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",2)=$g(in("arr",8,"arr",cnt,"par",1))			//horlog prevodu do fakturace
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",3)=$g(in("arr",8,"arr",cnt,"par",2))			//jmeno uzivatele, ktery prevedl fakturu
 // konvertovane pauzy vypoctem
 m ^[nmsp]OBD(zp,rrmm,doc,"cnvpau")=in("arr",9)
 // zahranicni diety (protokol)
 m ^[nmsp]OBD(zp,rrmm,doc,"ZDIE")=in("arr",10)
 // fakturace data
 s dta=""
 f cnt=1:1:$$gPcFakDz() s $p(dta,"~",cnt)=$g(in("fak","dta",cnt))
 s ^[nmsp]OBD(zp,rrmm,doc,"fak")=dta
 // fakturacni polozky
 s iditm="" f  s iditm=$o(in("fak","itm",iditm)) q:iditm=""  d
 .s dta=""
 .f cnt=1:1:$$gPcFakItmDz() d
 ..s $p(dta,"~",cnt)=$g(in("fak","itm",iditm,"dta",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)=dta
 //horlog zacatku
 s hrlbeg=(+$o(in("arr","edv","")))\1
 // zapis do evidence dokladu, ktere jsou uznany s vyraznym rozdílem proti tach. (asi nahradime vypoctem)
 // (toto ne, udelame na to sestavu)
 // zapis stavu tachometru
 i '(($g(in("dta",7))["P")!($g(in("dta",7))["Z")!($g(in("dta",7))="")) d
 .k arri s arri("dta",1)=$g(in("dta",7)) s arri("dta",2)=$g(in("dta",8))
 .s err=$$sLastSttTachRZ^OBapiED(idfa,nmsp,$g(in("dta",6)),.arri,"") zt:+err "merr"
 // zapis stavu nadrze
 k arri s arri("dta",1)=$g(in("arr",1,"dta",2))
 s err=$$sLastSttTankRZ^OBapiED(idfa,nmsp,$g(in("dta",6)),hrlbeg,.arri,"")
 // zacatek a konec (mm)
 s tmbeg=$j($o(in("arr","tur","")),0,0) i 'tmbeg s tmbeg=""
 s tmend=$o(in("arr","tur",""),-1) i tmend'="" s tmend=$j($g(in("arr","tur",tmend,"dta",1)),0,0) i 'tmend s tmend=""
 // ===================
 // zapis/aktualizace grafikonu lidi
 s osc="" f  s osc=$o(in("osc",osc)) q:osc=""  d
 .k arri
 .s arri("dta",1)=0 f cnt=1:1:4,12,15,26,28,34,38,40,41,42 s arri("dta",1)=$g(arri("dta",1))+$g(in("osc",osc,"tuv",19,cnt))
 .s arri("dta",2)=$g(in("osc",osc,"tuv",11))
 .s arri("dta",3)=$g(in("osc",osc,"tuv",18))
 .s arri("dta",4)=""
 .s arri("dta",5)=(hrlbeg+$g(in("dta",14))-1)
 .s arri("dta",6)=rrmm
 .s arri("dta",7)=zp
 .s arri("dta",8)=hrlbeg
 .s arri("dta",9)=tmbeg							//mm zacatku
 .s arri("dta",10)=tmend						//mm konce
 .s arri("dta",14)=$g(in("osc",osc,"tuv",22))	//celkove km
 .s err=$$sGrfOs^OBapiED(idfa,nmsp,osc,hrlbeg,doc,.arri,"") zt:+err "merr"
 // zapis/aktualizace grafikonu aut (ne zaskolovani, pruvodci)
 i '(($g(in("dta",7))["P")!($g(in("dta",7))["Z")) d
 .k arri
 .s arri("dta",1)=""
 .s arri("dta",2)=$g(in("arr","tuv",17))
 .s arri("dta",3)=$g(in("arr","tuv",22))
 .s arri("dta",4)=$g(in("arr","tuv",1))
 .s arri("dta",5)=(hrlbeg+$g(in("dta",14))-1)
 .s arri("dta",6)=rrmm
 .s arri("dta",7)=zp
 .s arri("dta",8)=$g(in("dta",15))	//norma phm
 .s arri("dta",9)=$g(in("dta",11))	//phm
 .s arri("dta",10)=$g(in("dta",24)) //fame
 .s arri("dta",11)=$g(in("dta",25)) //olej
 .s arri("dta",12)=$g(in("dta",19)) //topeni
 .s arri("dta",13)=$g(in("dta",20))	//adblue
 .s arri("dta",14)=tmbeg			//mm zacatku
 .s arri("dta",15)=tmend			//mm konce
 .s arri("dta",18)=$g(in("dta",26))	//doba topeni
 .s arri("dta",19)=$g(in("dta",27))	//phm b30
 .s err=$$sGrfRz^OBapiED(idfa,nmsp,$g(in("dta",6)),hrlbeg,doc,.arri,"") zt:+err "merr"
 // zapis do evidence dokladu vystavenych planem
 //
 // zapis do evidence elektromeru pro trolejbusy
 // (toto asi ne, zavolat do Chomutova)
 // ================================
 // zapis do evidence odjetych spoju
 // ================================
 i '(($g(in("dta",7))["P")!($g(in("dta",7))["Z")) d
 .s err=$$sEvOdjSp^OBapiED(idfa,nmsp,zp,rrmm,doc,"","",.in) zt:+err "merr"
 // ===================================
 // zapis km do centralni udrzby a pneu
 // =================================== 
 i '(($g(in("dta",7))["P")!($g(in("dta",7))["Z")) d
 .i $g(in("dta",6))="-" q									//pro rz="-" ne
 .i '$$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) q      //kontrola, zda je pro firmu, provoz a obdobi zapis povolen
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC($$gFaDz^OBapiED(idfa),"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .i $$rrrrmm^OBapiED(rrmm)>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .k arri s arri("Spz",$g(in("dta",6)))="" s:$g(in("dta",21))'="" arri("Spz",$g(in("dta",21)))=""
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri)
 .//km autobusu
 .k arri s arri("Spz",$g(in("dta",6)))=""
 .//km podle dokladu
 .s arri("Spz",$g(in("dta",6)),hrlbeg)=$g(in("arr","tuv",22))
 .//km podle tachometru a jsou-li, od km odectu km vlozeneho vykonu 
 .i ((+$$gMainSetOne^OBapiED(idfa,nmsp,6,50))&($g(in("dta",7))'="")) d
 ..s kmtach=$g(in("dta",7))-$g(in("dta",8))		//km podle tachometru
 ..i kmtach<0 s kmtach=kmtach+1000000			//km podle tachometru preslo mez
 ..s kmtach=kmtach-skmvlo						//odectu km vlozeneho vykonu, ten se zapisuje na SJ  
 ..s arri("Spz",$g(in("dta",6)),hrlbeg)=kmtach
 .//km pro subdodane vozidlo nezapisuju ===========
 .i +$g(in("dta",32)) k arri("Spz",$g(in("dta",6)))
 .//===============================================
 .//km privesu
 .i $g(in("dta",21))'="" s arri("Spz",$g(in("dta",21)))="" s arri("Spz",$g(in("dta",21)),hrlbeg)=$g(in("dta",22))
 .//nejsou vozidla
 .i '$d(arri("Spz")) q
 .s err=$$KmWrite^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri)
 // hlidani zmen
 s cnt=$g(in("arr","cop","dta",1)) s:'cnt cnt=$h
 s ^[nmsp]OBD(zp,rrmm,doc,"cop",cnt)=$g(in("arr","cop","dta",2))
 s ^[nmsp]OBD(zp,rrmm,doc,"cop")=$g(in("arr","cop","dta",3))
 /*
 s out("arr",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"kdeTank"))		                                ;; kde tankoval id)=lt 	... kde tankoval  nepouziva se ???
 m:$d(^[nmsp]OBD(zp,rrmm,doc,"Mipl")) out("arr",6)=^[nmsp]OBD(zp,rrmm,doc,"Mipl")			;; KOREKCE KM PRO CASTI SPOJU (HO)... v HO se nepouziva
 s out("arr",7)=$g(^[nmsp]OBD(zp,rrmm,doc,"CDS"))											;; DODK PRO CDS 		... nepouziva se
 */
 q 0
 //
gPcPDU() q 34		// pocet udaju v prvni casti vety DZVA 
gPcFakDz() q 22		// pocet udaju ve fakturacni vete DZVA
gPcFakItmDz() q 3 	// pocet udaju ve vete fakturacni polozky
 //
lDz(idfa,nmsp,in,out)
 // err=$$lDz(idfa,nmsp,in,out) - vyhleda doklady, ktere vyhovuji parametrum v in
 // a zapise je do ^CacheTempJB(wrk,zp,rrmm,doc)=""; v out vrati wrk (out=wrk)
 // in -
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",osc)=""          - hleda jen v dokladech s ridicem
 //    in("spz",spz)=""          - hleda jen v dokladech s spz
 //    in("nospz",spz)=""        - vynechava doklady s spz
 //    in("cis","od")            - hleda jen v dokladech s cislem od a dal
 //    in("cis","do")            - hleda jen v dokladech s cislem do a min
 //    in("jiz","od")            - hleda jen v dokladech s datem jizdy od (horlog)
 //    in("jiz","do")            - hleda jen v dokladech s datem jizdy do (horlog)
 //    in("jiz","zac")			 - hleda jen v dokladech s datem zacatku (horlog)
 //    in("por","od")            - hleda jen v dokladech s datem porizeni od (horlog)
 //    in("por","do")            - hleda jen v dokladech s datem porizeni do (horlog)
 //    in("spj")=1,2,3           - hleda jen v dokladech se spolujizdou 1 vse 2 se spolujizdou 3 bez spolujizdy
 //    in("prs",prs)             - hleda jen v dokladech s prepravnim systemem
 //    in("ns",ns)               - hleda jen doklady s ns
 //    in("tur",tur)             - hleda jen doklady s turnusem
 //    in("spc")                 - speciality 1 vse, 2 bez turnusu, 3 turnus-spoje, 4 cast spoje
 //    in("kntbus","stt",stt)="" - hleda jen v dokladech se stavem kontroly busu 1 porizeno / 2 opraveno / 3 bez opravy
 //    in("kntbus","knt",knt)="" - hleda jen v dokladech s kontrolou busu  1 nekontrolovano / 2 bez zavady / 3 se zavadou
 //    in("sta",idsta)=""		 - hleda jen doklady se stavem 0 predznacene / 1 porizene / 2 vyfakturovane / 3 zrusene
 //                                (pokud neni def.vraci porizene idsta=1 a 2)
 //    in("ls",li,sp)=""		 - hleda jen doklady s li a sp
 //    in("fak")				 - "",0 vsechny doklady / 1 doklady, ktere se budou fakturovat
 //    in("par",1)				 - 0 pouze seznam dokladu / 1 vraci i zakladni data k dokladu:
 //		^CacheTempJB(wrk,zp,rrmm,doc,"dta",xx)=val
 //		xx		val
 //     =================================
 //     01		stav
 //     02		hrl.jizdy	
 //		03		rz
 //     04		ns
 //     05		osc, vice oddelene ~
 //		06		turnus, vice oddelene ~
 //		07		hrl.porizeni                                                       
 //		08		hrl.zmeny
 //		09		id.zmeny
 //     10		tach.zacatek
 //     11		tach.konec
 //     12		km celk.
 //  	13		cerpane phm z dzva
 //     14      doklady s cerpanim PHM
 //     15      hrl.zmeny pro doklad s cerpanim PHM
 //     16      id.zmeny pro doklad s cerpanim PHM
 //     17      cerpane phm ze zadanych dokladu
 //     18		hodiny celkem (min)
 //     19      normovana spotreba phm
 //     20      prepravni system
 //     21		cerpane phm FAME z dzva
 //     22		cerpane phm do topeni z dzva
 //     23      cerpane phm FAME ze zadanych dokladu
 //     24      cerpane phm do topeni ze zadanych dokladu
 //		25		id.porizeni
 //     26      cerpane phm b30 z dzva
 //     27      cerpane phm b30 ze zadanych dokladu
 //     28      km tach. celkem
 //     =================================
 //--------------------------------------------------------------------------------------
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //stav dokladu
 i $o(in("sta",""))="" s in("sta",1)="" s in("sta",2)=""
 //
 k out s (wrk,out)=$$gWrkJB^OBapiED()
 //
 s qsj=$$qsj^OBapiED()
 //
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .i $d(in("prv")) q:'$d(in("prv",(zp#100)))
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBD(zp,rrmm)) q:rrmm=""  d
 ..i $d(in("rrmm")) q:'$d(in("rrmm",rrmm))
 ..s doc="" f  s doc=$o(^[nmsp]OBD(zp,rrmm,doc)) q:(doc="")!(doc'<qsj)  d
 ...s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 ...// kontrola na stav dokladu
 ...q:'$d(in("sta",+val))
 ...//
 ...s fnd=1
 ...//data pro vyhodnoceni
 ...s spz=$p(val,":",6)
 ...s zac=$$dn^OBapiED($p(val,":",4))
 ...s dnu=$p(val,":",14)
 ...s por=$p(val,":",2)
 ...s ns=+$p(val,":",16)
 ...//priznak fakturace 
 ...s isfak=+$g(^[nmsp]OBD(zp,rrmm,doc,"fak"))
 ...//prehled prs a km
 ...k prs
 ...// presne km dle prs
 ...s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"PS",prs)) q:prs=""  d
 ....s dsp="" f  s dsp=$o(^[nmsp]OBD(zp,rrmm,doc,"PS",prs,dsp)) q:dsp=""  d
 .....s km=$g(^[nmsp]OBD(zp,rrmm,doc,"PS",prs,dsp))
 .....s prs("p",prs)=$g(prs("p",prs))+km
 ...// tarifni km dle prs
 ...s prs="" f  s prs=$o(^[nmsp]OBD(zp,rrmm,doc,"PST",prs)) q:prs=""  d
 ....s dsp="" f  s dsp=$o(^[nmsp]OBD(zp,rrmm,doc,"PST",prs,dsp)) q:dsp=""  d
 .....s km=$g(^[nmsp]OBD(zp,rrmm,doc,"PST",prs,dsp))
 .....s prs("t",prs)=$g(prs("t",prs))+km
 ...// ridic
 ...i $d(in("osc")) s fnd=0 d  q:'fnd
 ....s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)!(fnd)  s:$d(in("osc",osc)) fnd=1
 ...// spz
 ...i $d(in("spz")) i spz'="" s:'$d(in("spz",spz)) fnd=0 q:'fnd
 ...// nospz
 ...i spz'="" i $d(in("nospz",spz)) s fnd=0 q:'fnd
 ...// od - do
 ...i $g(in("cis","od")) s:doc<$g(in("cis","od")) fnd=0 q:'fnd
 ...i $g(in("cis","do")) s:doc>$g(in("cis","do")) fnd=0 q:'fnd
 ...// jizda od - do
 ...i $g(in("jiz","od")) s:zac<$g(in("jiz","od")) fnd=0 q:'fnd
 ...i $g(in("jiz","do")) s:((zac+dnu-1))>$g(in("jiz","do")) fnd=0 q:'fnd
 ...// zacatek
 ...i $g(in("jiz","zac")) s:zac'=$g(in("jiz","zac")) fnd=0 q:'fnd
 ...// porizeni od - do
 ...i $g(in("por","od")) s:por<$g(in("por","od")) fnd=0 q:'fnd
 ...i $g(in("por","do")) s:por>$g(in("por","do")) fnd=0 q:'fnd
 ...// spolujizda
 ...i $g(in("spj"))>1 s fnd=0 d  q:'fnd
 ....s cnt=0 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  s cnt=cnt+1
 ....i in("spj")=2 s:cnt>1 fnd=1
 ....i in("spj")=3 s:cnt<2 fnd=1
 ...//fak (priznak fakturace)
 ...i +$g(in("fak"))=1 i 'isfak s fnd=0 q:'fnd
 ...// prs
 ...i $d(in("prs")) s fnd=0 d  q:'fnd
 ....s prs="" f  s prs=$o(in("prs",prs)) q:(prs="")!(fnd)  i $d(prs("p",prs)) s fnd=1
 ...// ns
 ...i $d(in("ns")) s:'$d(in("ns",ns)) fnd=0 q:'fnd
 ...//turnus
 ...i $d(in("tur")) s fnd=0 d  q:'fnd
 ....s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:(horl="")!(fnd)  d
 .....q:'$d(^[nmsp]OBD(zp,rrmm,doc,"D",horl,1))
 .....s tur="" f  s tur=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl,1,tur)) q:(tur="")!(fnd)  d
 ......s:$d(in("tur",$P(tur,":"))) fnd=1
 ...//speciality
 ...i $g(in("spc"))>1 d  q:'fnd
 ....// bez turnusu
 ....i $g(in("spc"))=2 d
 .....s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:horl=""  s:$d(^[nmsp]OBD(zp,rrmm,doc,"D",horl,1)) fnd=0
 ....// turnus-spoje
 ....i $g(in("spc"))=3 d
 .....s fnd=0 s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:(horl="")!(fnd)
 ......q:'$d(^[nmsp]OBD(zp,rrmm,doc,"D",horl,1))
 ......s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl,99,cnt)) q:(cnt="")!(fnd)  d
 .......s:$p($g(^[nmsp]OBD(zp,rrmm,doc,"D",horl,99,cnt)),":",2)=3 fnd=1 
 ....// cast spoje
 ....i $g(in("spc"))=4 d
 .....s fnd=0 s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:(horl="")!(fnd)  d
 ......s:$d(^[nmsp]OBD(zp,rrmm,doc,"D",horl,7)) fnd=1
 ...// kontrola vozidla - dzva a sj spolecne
 ...i $d(in("kntbus")) s fnd=0 d  q:'fnd
 ....// neni udaj o kontrole vozu
 ....i '$d(^[nmsp]OBD(zp,rrmm,doc,"kntbus")) q
 ....// kontrola stavu zaznamu
 ....i $o(in("kntbus","stt",""))'="" d  q:'fnd
 .....s fnd=0
 .....s stt=$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","s")) q:stt=""
 .....s:$d(in("kntbus","stt",stt)) fnd=1
 ....// kontrola vysledku
 ....i $o(in("kntbus","knt",""))'="" d  q:'fnd
 .....s fnd=0
 .....s knt=$p($g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d")),"~",1) q:knt=""
 .....s:$d(in("kntbus","knt",knt)) fnd=1
 ...//kontrola linky a spoje
 ...i $d(in("ls")) d
 ....s fnd=0 s tm="" f  s tm=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)) q:(tm="")!(fnd)  d
 .....s val=$g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",tm)) s li="" s sp=""
 .....s idcin=+$p(val,":",2)
 .....i idcin=3 d
 ......i $p($p(val,"~",1),":",5)["." s li=($p($p(val,"~",1),":",5)\1) s sp=($p($p(val,"~",1),":",5)#1*1000)
 ......i $p($p(val,"~",1),":",5)["^" s li=($p($p($p(val,"~",1),":",5),"^",1)) s sp=($p($p($p(val,"~",1),":",5),"^",2))
 ......i $d(in("ls",li)) s fnd=1
 ......i $o(in("ls",li,""))'="" i '$d(in("ls",li,sp)) s fnd=0
 ....i fnd q
 ....s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:(horl="")!(fnd)  d
 .....s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl,7,id)) q:(id="")!(fnd)  d
 ......s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",horl,7,id))
 ......i +$p(val,"~",3) d
 .......i $p(val,"~",3)["." s li=($p(val,"~",3)\1) s sp=($p(val,"~",3)#1*1000)
 .......i $p(val,"~",3)["^" s li=($p($p(val,"~",3),"^",1)) s sp=($p($p(val,"~",3),"^",2))
 .......i $d(in("ls",li)) s fnd=1
 .......i $o(in("ls",li,""))'="" i '$d(in("ls",li,sp)) s fnd=0
 .......i fnd q
 ......s idcnt="" f  s idcnt=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl,7,id,"r",idcnt)) q:(idcnt="")!(fnd)  d
 .......s val=$g(^[nmsp]OBD(zp,rrmm,doc,"D",horl,7,id,"r",idcnt))
 .......i $p(val,":",5)["." s li=($p(val,":",5)\1) s sp=($p(val,":",5)#1*1000)
 .......i $p(val,":",5)["^" s li=($p($p(val,":",5),"^",1)) s sp=($p($p(val,":",5),"^",2))
 .......i $d(in("ls",li)) s fnd=1
 .......i $o(in("ls",li,""))'="" i '$d(in("ls",li,sp)) s fnd=0
 ...// ======================================
 ...i fnd d
 ....s ^CacheTempJB(wrk,zp,rrmm,doc)=""
 ....//doplneni zakladnich udaju
 ....i $g(in("par",1)) d
 .....s valdoc=$g(^[nmsp]OBD(zp,rrmm,doc))
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",1)=+$p(valdoc,":",1)		//stav
 .....s val=$p(valdoc,":",4) s:+val val=$$dn^OBapiED(val)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",2)=val					//hrl.jizdy
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",3)=$p(valdoc,":",6)		//rz
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",4)=$p(valdoc,":",16)		//ns
 .....s val="" s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 ......s val=val_osc_"~"
 .....s:$e(val,$l(val))="~" val=$e(val,1,$l(val)-1) 
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",5)=val					//osc, vice oddelene ~
 .....s val="" s horl="" f  s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl)) q:(horl="")  d
 ......s tur="" f  s tur=$o(^[nmsp]OBD(zp,rrmm,doc,"D",horl,1,tur)) q:(tur="")  d
 .......s val=val_$p(tur,":",1)_"~"
 .....s:$e(val,$l(val))="~" val=$e(val,1,$l(val)-1) 
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",6)=val								//turnus
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",7)=$p(valdoc,":",2)					//hrl.porizeni
 .....s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"cop",""),-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",8)=horl								//hrl.zmeny
 .....s val="" i horl s val=$g(^[nmsp]OBD(zp,rrmm,doc,"cop",horl))
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",9)=val								//id.zmeny
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",10)=$p(valdoc,":",8)					//tach.zacatek
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",11)=$p(valdoc,":",7)					//tach.konec
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",12)=+$p($p(valdoc,"#",2),":",22)		//km celk.
 .....i ($p(valdoc,":",7)="Z")!($p(valdoc,":",7)="P") s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",12)=0 //km celk. pro ZASK,PRUV
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",13)=$p(valdoc,":",11)				//cerpane phm z dzva
 .....s val="" s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d
 ......s val=val_id_"="_$tr($p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1,3),"~","/")_";"
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",17)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",17))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",23)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",23))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",2)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",24)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",24))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",3)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",27)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",27))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",4)
 .....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",14)=val								//doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",15)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)	//hrl zmeny - doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",16)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)	//id zmeny - doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",17)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",17))		//cerpane phm ze zadanych dokladu
 .....s val="" s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 ......s valosc=$p(valdoc,"#",2)
 ......s:$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))'="" valosc=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"d"))
 ......s val=val_$tr($j($$mh^OBapiED($p(valosc,":",11)),0,2),".",":")_";"
 .....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",18)=val								//hodiny celkem
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",19)=$p(valdoc,":",15)				//norm.phm
 .....;;k val s val=""
 .....;;s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"PS",id)) q:id=""  d
 .....;;.s iddsp="" f  s iddsp=$o(^[nmsp]OBD(zp,rrmm,doc,"PS",id,iddsp)) q:iddsp=""  d
 .....;;..s val(id)=$g(val(id))+$g(^[nmsp]OBD(zp,rrmm,doc,"PS",id,iddsp))
 .....;;s id="" f  s id=$o(val(id)) q:id=""  d
 .....;;.s val=val_id_"="_+$g(val(id))_";"
 .....;;i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 .....s val="" s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"PS",id)) q:id=""  s val=val_id_";"
 .....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",20)=val												//prepravni systemy
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",21)=$p($p(valdoc,"#",1),":",24)						//cerpane phm fame z dzva
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",22)=$p($p(valdoc,"#",1),":",19)						//cerpane phm do topeni z dzva
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",23)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",23))		//cerpane phm FAME ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",24)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",24))		//cerpane phm do topeni ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",25)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop"))				//id porizeni
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",26)=$p($p(valdoc,"#",1),":",27)						//cerpane phm b30 z dzva
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",27)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",27))		//cerpane phm b30 ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",28)=+$p($p(valdoc,"#",1),":",10)						//km podle tachometru
 q 0
dDz(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$dDz(idfa,nmsp,zp,rrmm,doc,in,out) - vymazani dokladu z db
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)=zpusob vymazani dokladu 0 parametrem / 1 odstraneni dokladu z db
 // in("par",2)=zpusob vymazani sledovacich udaju 0 nemazat / 1 mazat (0 delete při přepočtech dokladu / 1 pokud jde o opravdovy delete dokladu)
 // in("par",3)=zpusob vymazani dokladu v evidenci odjetych spoju 0 nemazat / 1 mazat (0 delete při přepočtech dokladu / 1 pokud jde o opravdovy delete dokladu nebo delete po porizeni)
 // in("par",4)=zpusob vymazani kontroly vozidla v modulu vozidla 0 nemazat / 1 mazat
 //  - pridelovani fixnich dat (dodk,hod) 
 //  - odkazu v planu 
 // out("stt")= 0 nevymazano / 1 vymazano
 // out("msg",cnt)=txt ... zprava
 n (idfa,nmsp,zp,rrmm,doc,in,out) s $zt="err" k out s out("stt")=0 s err=""
 // kontrola prom.
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 // dz z idfa
 s dz=$$gFaDz^OBapiED(idfa)
 // id provozovny
 s idprv=zp#100
 // test na existenci dokladu
 k arr s err=$$isDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arr) zt:+err "merr" s err=""
 i '$g(arr) q 0
 // vymazani dokladu
 s out("stt")=0
 k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr"
 // zruseny doklad
 i +$g(arrdoc("dta",1))=3 q 0
 // predznaceny doklad vymazu pouze z planu
 i '$g(arrdoc("dta",1)) d  q 0
 .s hrlbg=+$g(arrdoc("dta",4))
 .// ruseni v planech ^obpy
 .i $g(in("par",2)) d
 ..k arri,arro s arri("zp",zp)="" s err=$$lPlnPrac^OBapiED(idfa,nmsp,.arri,.arro) zt:+err "merr" s err=""
 ..s idprac="" f  s idprac=$o(arro("arr",idprac)) q:idprac=""  d
 ...k arri s arri("dta",1)=$p(idos,"~",3)_"~"_$p(idos,"~",1)
 ...s err=$$dPlnPrtDoc^OBapiED(idfa,nmsp,"d",idprac,hrlbg,doc,.arri,"") zt:+err "merr" s err=""
 .// vymazani dokladu - parametr
 .i ('+$g(in("par",1))) d
 ..//zatim takto, pak predelat na $$sDz(...
 ..s $p(^[nmsp]OBD(zp,rrmm,doc),":",1,2)="3:"_+$h
 ..s ^[nmsp]OBD(zp,rrmm,doc,"KdoZrusil")=$p(idos,"~",3)
 ..k ^[nmsp]obproc(zp,rrmm,doc)
 .// vymazani dokladu - z db
 .i (+$g(in("par",1))) d
 ..//poznaceni ruseneho dokladu
 ..s inxhrl=$h
 ..s ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc)=$p(idos,"~",3)
 ..m ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc,"dta")=^[nmsp]OBD(zp,rrmm,doc)
 ..//ruseni dokladu v db
 ..k ^[nmsp]OBD(zp,rrmm,doc)
 ..k ^[nmsp]obproc(zp,rrmm,doc)
 .s out("stt")=1
 // =================================
 //uznany doklad
 //transakce !!!
 s $zt="errtroll" tstart
 s hrlbg=+$g(arrdoc("dta",4)) s rz=$g(arrdoc("dta",6)) s rzpri=$g(arrdoc("dta",21)) s ucit=($g(arrdoc("dta",7))["Z")
 s cntday=($o(arrdoc("arr","tur",""),-1)\1440)				//pocet dni
 i ($o(arrdoc("arr","tur",""),-1)#1440) s cntday=cntday+1
 i cntday<1 s cntday=1
 s hrlend=(hrlbg+cntday-1)
 // vymazani v grafikonu aut a lidi
 s hrl="" f  s hrl=$o(arrdoc("arr","edv",hrl)) q:hrl=""  d
 .s err=$$dGrfRz^OBapiED(idfa,nmsp,rz,hrl,doc,"","") zt:+err "merr" s err=""
 .s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 ..s err=$$dGrfOs^OBapiED(idfa,nmsp,os,hrl,doc,"","") zt:+err "merr" s err=""
 // vymazani v evidenci odjetych spoju, maze se po porizeni nebo pri opravdovem delete
 i $g(in("par",3)) s err=$$dEvOdjSp^OBapiED(idfa,nmsp,zp,rrmm,doc,hrlbg,"","") zt:+err "merr" s err=""
 // ruseni sledovani fixniho dodk - postaru - pozdeji vyhodit
 i $g(in("par",2)) d
 .s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 ..q:'$d(^[nmsp]OBdodk(idfa,idprv,hrlbg,os,rz))
 ..i $g(^[nmsp]OBdodk(idfa,idprv,hrlbg,os,rz))=doc k ^[nmsp]OBdodk(idfa,provo,hrlbg,os,rz)
 // ruseni sledovani fixniho dodk, fixnich kc, fixnich hodin, poctu dnu s dokladem
 i $g(in("par",2)) d
 .s err=$$dWatchDtaDz(idfa,nmsp,zp,rrmm,doc,hrlbg,hrlend,"","") zt:+err "merr" s err=""
 // ruseni v planech ^obpy
 i $g(in("par",2)) d
 .k arri,arro s arri("zp",zp)="" s err=$$lPlnPrac^OBapiED(idfa,nmsp,.arri,.arro) zt:+err "merr" s err=""
 .s idprac="" f  s idprac=$o(arro("arr",idprac)) q:idprac=""  d
 ..k arri s arri("dta",1)=$p(idos,"~",3)_"~"_$p(idos,"~",1)
 ..s err=$$dPlnPrtDoc^OBapiED(idfa,nmsp,"d",idprac,hrlbg,doc,.arri,"") zt:+err "merr" s err=""
 // ruseni km v centralni evidenci km (nova vozidla)
 i 'ucit d
 .i rz="-" q												// ne fiktivni vozidlo
 .i '$$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) q		//kontrola, zda je pro firmu, provoz a obdobi zapis povolen  
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(dz,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .i $$rrrrmm^OBapiED(rrmm)>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .k arri s arri("Spz",rz)="" s:$g(rzpri)'="" arri("Spz",rzpri)=""
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri)
 // vymazani zapisu o kontrole ve vozidlech
 i (+$g(in("par",4))) s err=$$dVcKntBus^OBapiEDDocKntBus(idfa,nmsp,hrlbg,rz,(zp_"|"_rrmm_"|"_doc),$tr(idos,"~","|"),"","") s err=""
 // =======================================
 // vymazani dokladu - parametr
 i ('+$g(in("par",1))) d
 .//zatim takto, pak predelat na $$sDz(...
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",1,2)="3:"_+$h
 .s ^[nmsp]OBD(zp,rrmm,doc,"KdoZrusil")=$p(idos,"~",3)
 .k ^[nmsp]obproc(zp,rrmm,doc)
 // vymazani dokladu - z db
 i (+$g(in("par",1))) d
 .//poznaceni ruseneho dokladu
 .s inxhrl=$h
 .s ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc)=$p(idos,"~",3)
 .m ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc,"dta")=^[nmsp]OBD(zp,rrmm,doc)
 .//ruseni dokladu v db
 .k ^[nmsp]OBD(zp,rrmm,doc)
 .k ^[nmsp]obproc(zp,rrmm,doc)
 s out("stt")=1
 tcommit
 q 0
dWatchDtaDz(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out)
 n (idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out) k out s $zt="err"
 f idwatch="FixDodkDoc","FixKcDoc","FixHodDoc","DenDoc" d
 .f hrl=hrlbeg:1:hrlend d
 ..s os="" f  s os=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os)) q:os=""  d
 ...s idwatchrz="" f  s idwatchrz=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)) q:idwatchrz=""  d
 ....i $g(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz))=(zp_"|"_rrmm_"|"_doc) k ^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)
 q 0
dWatchObdDtaDz(idfa,nmsp,rrmm,in,out)
 n (idfa,nmsp,rrmm,in,out) k out s $zt="err"
 //in("zp",zp)=""
 //in("prv",prv)=""
 i $g(rrmm)="" s err="rrmm=" zt "merr"
 s rrmm=rrmm#10000
 //konstanta qsj
 s qsj=$$qsj^OBapiED()
 //konverze prv na zp
 s idprv="" f  s idprv=$o(in("prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr"
 .i zp s in("zp",zp)=""
 s iszp=($o(in("zp",""))'="")
 s hrlbeg=$$gminhrlrrmm^OBapiED(rrmm)-15
 s hrlend=$$gmaxhrlrrmm^OBapiED(rrmm)+15
 f idwatch="FixDodkDoc","FixKcDoc","FixHodDoc","DenDoc" d
 .f hrl=hrlbeg:1:hrlend d
 ..s os="" f  s os=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os)) q:os=""  d
 ...s idwatchrz="" f  s idwatchrz=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)) q:idwatchrz=""  d
 ....s val=$g(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz))
 ....//nesedi obdobi
 ....i $p(val,"|",2)'=rrmm q
 ....//nesedi typ dokladu
 ....i $p(val,"|",3)'<qsj q
 ....//nesedi provoz
 ....i iszp i $p(val,"|",1)'="" i '$d(in("zp",$p(val,"|",1))) q  
 ....k ^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)
 //
 q 0
cnvOBLIS(idfa,nmsp)
 i $d(^[nmsp]OBLIS) {
	 s ls="" f {
		 s ls=$o(^[nmsp]OBLIS(ls)) i ls="" q
		 s li=ls\1 s sp=((ls#1)*1000)
		 s hrl="" f {
			 s hrl=$o(^[nmsp]OBLIS(ls,hrl)) i hrl="" q
			 s val=$g(^[nmsp]OBLIS(ls,hrl))
			 f cnt=1:1:$l(val,"#") {
				 s oldiddocs=$p(val,"#",cnt)
				 s idprv=$p(oldiddocs,"/",2)
				 s rrmm=$p(oldiddocs,"/",3)
				 s cdoc=$p(oldiddocs,"/",1)
				 s newiddoc=idprv_"|"_rrmm_"|"_cdoc
				 s ^[nmsp]OBOLS(idfa,"DTA",li,sp,hrl,newiddoc)=""
				 s ^[nmsp]OBOLS(idfa,"IDX",1,newiddoc,hrl,li,sp)=""
				 s ^[nmsp]OBOLS(idfa,"IDX",2,hrl,li,sp,newiddoc)=""
			 }
		 }
	 }
	 k ^[nmsp]OBLIS
 }
 q
gEvOdjSp(idfa,nmsp,in,out)
 // err=$$gOdjSp(idfa,nmsp,in,out) - vrati seznam dokladu, na kterych byl spoj uznan
 // 
 // in("arr",1,li,sp,hrl)="" ... spoje pro kontrolu
 // out("arr",1,li,sp,hrl,zp,rrmm,iddoc)="" ... doklad, kde byl spoj uznan
 //
 n (idfa,nmsp,in,out) k out s $zt="err"
 s li="" f  s li=$o(in("arr",1,li)) q:li=""  d
 .s sp="" f  s sp=$o(in("arr",1,li,sp)) q:sp=""  d
 ..s hrl="" f  s hrl=$o(in("arr",1,li,sp,hrl)) q:hrl=""  d
 ...s myid="" f  s myid=$o(^[nmsp]OBOLS(idfa,"DTA",li,sp,hrl,myid)) q:myid=""  d
 ....s idprv=$p(myid,"|",1) s rrmm=$p(myid,"|",2) s iddoc=$p(myid,"|",3)
 ....k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 ....s out("arr",1,li,sp,hrl,zp,rrmm,iddoc)=""
 q 0
sEvOdjSp(idfa,nmsp,zp,rrmm,doc,in,out,arrdoc)
 // err=$$sEvOdjSp(idfa,nmsp,zp,rrmm,doc,in,out,arrdoc) - zapis spoju do evidence odjetych spoju
 // 
 // in
 // out
 // arrdoc ... pole s dokladem dzva 
 //
 n (idfa,nmsp,zp,rrmm,doc,in,out,arrdoc) k out s $zt="err"
 //dz
 s dz=$$gFaDz^OBapiED(idfa)
 //idprv
 s idprv=zp#100
 //iddoc
 s iddoc=idprv_"|"_rrmm_"|"_doc
 // hrl zacatku
 s hrl=$g(arrdoc("dta",4))
 // prubeh cinnosti na doklade
 s tm="" f  s tm=$o(arrdoc("arr","tur",tm)) q:tm=""  d
 .q:$g(arrdoc("arr","tur",tm,"dta",2))'=3
 .s trhrl=tm\(24*60)+hrl
 .s li=$g(arrdoc("arr","tur",tm,"dta",5))
 .s sp=$g(arrdoc("arr","tur",tm,"dta",6))
 .s ^[nmsp]OBOLS(idfa,"DTA",li,sp,trhrl,iddoc)=""
 .s ^[nmsp]OBOLS(idfa,"IDX",1,iddoc,trhrl,li,sp)=""
 .s ^[nmsp]OBOLS(idfa,"IDX",2,trhrl,li,sp,iddoc)=""
 q 0
 //
dEvOdjSp(idfa,nmsp,zp,rrmm,doc,hrlfrom,in,out)
 // vymazani km z evidence odjetych spoju
 n (idfa,nmsp,zp,rrmm,doc,hrlfrom,in,out) s $zt="err" k out s err=""
 // identifikator provozovny
 s idprv=zp#100
 //iddoc
 s iddoc=idprv_"|"_rrmm_"|"_doc
 s hrl="" f {
	 s hrl=$o(^[nmsp]OBOLS(idfa,"IDX",1,iddoc,hrl))  i hrl="" q
	 s li="" f {
		 s li=$o(^[nmsp]OBOLS(idfa,"IDX",1,iddoc,hrl,li)) i li="" q
		 s sp="" f {
			 s sp=$o(^[nmsp]OBOLS(idfa,"IDX",1,iddoc,hrl,li,sp)) i sp="" q
			 k ^[nmsp]OBOLS(idfa,"DTA",li,sp,hrl,iddoc)
			 k ^[nmsp]OBOLS(idfa,"IDX",2,hrl,li,sp,iddoc)
 			 k ^[nmsp]OBOLS(idfa,"IDX",1,iddoc,hrl,li,sp)
		 }
	 }
 }
 q 0
lEvOdjSp(idfa,nmsp,in,out)
 // err=$$lOdjSp(idfa,nmsp,in,out) - vrati seznam odjetych spoju pro obdobi
 // 
 // in("dta",1)=hrlFrom ... horlog zacatku	(povinne)
 // in("dta",2)=hrlTo   ... horlog konce	(povinne)
 // out=wrk
 // ^CacheTempJB(wrk,"arr",1,li,sp,hrl,zp,rrmm,iddoc)=""
 //
 n (idfa,nmsp,in,out) k out s $zt="err"
 s out=$$gWrkJB^OBapiED()
 //vstupni parametry
 s hrlfrom=$g(in("dta",1)) i 'hrlfrom s err="1~hrlFrom=" zt "merr"
 s hrlto=$g(in("dta",2)) i 'hrlto s err="1~hrlTo=" zt "merr"
 // ================
 k arrzp
 //^[nmsp]OBOLS(idfa,"IDX",2,hrl,li,sp,iddoc)
 s hrl=hrlfrom-.01 f {
	 s hrl=$o(^[nmsp]OBOLS(idfa,"IDX",2,hrl)) i (hrl="")!(hrl>hrlto) q
	 s li="" f {
		 s li=$o(^[nmsp]OBOLS(idfa,"IDX",2,hrl,li)) i li="" q
		 s sp="" f {
			 s sp=$o(^[nmsp]OBOLS(idfa,"IDX",2,hrl,li,sp)) i sp="" q
			 s iddoc="" f {
				 s iddoc=$o(^[nmsp]OBOLS(idfa,"IDX",2,hrl,li,sp,iddoc)) i iddoc="" q
				 s idprv=$p(iddoc,"|",1)
				 s rrmm=$p(iddoc,"|",2)
				 s cdoc=$p(iddoc,"|",3)
				 i '$d(arrzp(idprv)) {
					 k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
					 s arrzp(idprv)=zp
				 }
				 s zp=$g(arrzp(idprv))
				 s ^CacheTempJB(out,"arr",1,li,sp,hrl,zp,rrmm,cdoc)=""
			 }
		 }
	 }
 }
 q 0
gDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // vrati doklady pro cerpane phm na DZVA
 // err=$$gDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // 
 // in
 // out
 //     out("dta",1)=phm na doklade
 //     out("dta",2)=phm FAME na doklade
 //     out("dta",3)=phm topeni na doklade
 //     out("dta",4)=phm b30 na doklade
 //		out("arr",1,"arr",idDoc,"dta",1)=phm
 //		out("arr",1,"arr",idDoc,"dta",2)=phm FAME
 //		out("arr",1,"arr",idDoc,"dta",3)=phm topeni
 //		out("arr",1,"arr",idDoc,"dta",4)=phm b30
 //     out("arr",1,"arr",idDoc,"dta",5)=dodavatel phm
 //     out("arr",1,"cop","dta",1)=horlog
 //     out("arr",1,"cop","dta",2)=jmeno uzivatele
 //
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 s out("dta",1)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",11)
 s out("dta",2)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",24)
 s out("dta",3)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",19)
 s out("dta",4)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",27)
 s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id))
 .f cnt=1:1:5 s out("arr",1,"arr",id,"dta",cnt)=$p(val,"~",cnt)
 s out("arr",1,"cop","dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)
 s out("arr",1,"cop","dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)
 q 0
sDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // zapise doklady pro cerpane phm na DZVA
 // err=$$sDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // 
 // in
 //     in("par",1)=0/1/-1 ... 0 nic / 1 phm se aktualizuje podle dokladu na DZVA / -1 phm se aktualizuje na dokladu podle DZVA
 //		in("arr",1,"arr",idDoc,"dta",1)=phm
 //		in("arr",1,"arr",idDoc,"dta",2)=phm FAME
 //		in("arr",1,"arr",idDoc,"dta",3)=phm topeni
 //		in("arr",1,"arr",idDoc,"dta",4)=phm b30
 //		in("arr",1,"arr",idDoc,"dta",5)=dodavatel phm
 //     in("idos")=mlp~loginname~fullname
 // out
 //
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 k ^[nmsp]OBD(zp,rrmm,doc,"docphm")
 //aktualizace phm z dokladu
 i $g(in("par",1))=-1 d
 .s id="" f  s id=$o(in("arr",1,"arr",id)) q:id=""  d
 ..s in("arr",1,"arr",id,"dta",1)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",11)	//PHM
 ..s in("arr",1,"arr",id,"dta",2)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",24)	//FAME
 ..s in("arr",1,"arr",id,"dta",3)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",19)	//TOPENI
 ..s in("arr",1,"arr",id,"dta",4)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",27)	//B30
 //zapis do dokladu
 s phm="" s phmF="" s phmT="" s phmB30=""
 s id="" f  s id=$o(in("arr",1,"arr",id)) q:id=""  d
 .s val="" f cnt=1:1:5 s $p(val,"~",cnt)=$g(in("arr",1,"arr",id,"dta",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,"docphm",id)=val s val=""
 .s phm=phm+$g(in("arr",1,"arr",id,"dta",1))
 .s phmF=phmF+$g(in("arr",1,"arr",id,"dta",2))
 .s phmT=phmT+$g(in("arr",1,"arr",id,"dta",3))
 .s phmB30=phmB30+$g(in("arr",1,"arr",id,"dta",4))
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$h
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$p($g(in("idos")),"~",3)
 //aktualizace phm na dokladech a v grafikonu aut
 i $g(in("par",1))=1 d
 .//doklad
 .s hrlbeg=(+$o(^[nmsp]OBD(zp,rrmm,doc,"D","")))\1
 .s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1)
 .s rz=$p(val,":",6)
 .s $p(val,":",11)=phm
 .s $p(val,":",24)=phmF
 .s $p(val,":",19)=phmT
 .s $p(val,":",27)=phmB30
 .s $p(^[nmsp]OBD(zp,rrmm,doc),"#",1)=val
 .//grafikon aut
 .s dz=$$gFaDz^OBapiED(idfa)
 .i (rz'="")&(hrlbeg'="") d
 ..i $d(^[nmsp]XA(dz,rz,hrlbeg,doc)) d
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",9)=phm
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",10)=phmF
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",12)=phmT
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",19)=phmB30
 q 0
dDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // vymaze doklady pro cerpane phm na DZVA
 // err=$$dDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // in
 //     in("idos")=mlp~loginname~fullname
 // out
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 k ^[nmsp]OBD(zp,rrmm,doc,"docphm")
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$h
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$p($g(in("idos")),"~",3)
 q 0
 //
sSttDz(idfa,nmsp,zp,rrmm,doc,idstt,in,out)
 // s err=$$sSttDz(idfa,nmsp,zp,rrmm,doc,idstt,.in,.out)
 // in:
 // in("dta",1)=idfak (idenfifikator faktury (rok~fstr~cislo~idfa)
 // in("dta",2)=hrl   (hrl prevodu do fakturace)
 // in("idos")=mlp~loginname~fullname
 //
 n (idfa,nmsp,zp,rrmm,doc,idstt,in,out)
 s $zt="err" s err="" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(idstt)="" q "1~idstt="
 // neprisel horlog zmeny, doplnim aktualni
 i '$g(in("dta",2)) s in("dta",2)=$h
 // =======================================
 // =================
 // zmena stavu na DZ
 // =================
 k arr s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arr) zt:+err "merr" s err=""
 //zmena stavu dokladu
 s arr("dta",1)=idstt
 //horlog prevodu do fakturace
 s arr("dta",28)=$g(in("dta",2))
 //odkaz na fakturu
 s arr("arr",8,"dta",1)=""  								//id faktury (rok~fstr~cislo~idfa)
 // stav vyfakturovano, poznacim fakturu
 i idstt=2 d
 .s arr("arr",8,"dta",1)=$g(in("dta",1))					//id faktury (rok~fstr~cislo~idfa)
 .s cnt=($o(arr("arr",8,"arr",""),-1)+1)
 .s arr("arr",8,"arr",cnt,"dta",1)=$g(in("dta",1)) 			//id faktury (rok~fstr~cislo~idfa)
 .s arr("arr",8,"arr",cnt,"par",1)=$g(in("dta",2))			//hrl prevodu do fakturace
 .s arr("arr",8,"arr",cnt,"par",2)=$p($g(in("idos")),"~",3)	//jmeno uzivatele
 s arr("idos")=$g(in("idos"))
 s arr("par",1)=0											//nezapisovat kontrolu vozidel do modulu vozidla
 s err=$$sDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arr,"") zt:+err "merr" s err=""
 q 0
 //
gDzBegEnd(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$BegEnd(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data zacatku a konce dokladu
 // out("dta",1)=hrl jizdy
 // out("dta",2)=mm cas odjezdu
 // out("dta",3)=mm cas prijezdu (pri prechodu pres pulnoc +1440 ...)
 // out("dta",4)=mm doba provozu
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 //
 s out("dta",1)=$$dn^OBapiED($p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",4))
 s out("dta",2)=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",""))
 i out("dta",2)'="" s out("dta",2)=$j(out("dta",2),0,0)
 s out("dta",3)=$o(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",""),-1)
 i out("dta",3)'="" s out("dta",3)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",out("dta",3))),"~",1),":",1)
 s out("dta",4)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",2),":",17)
 //
 q 0
 //
isDzTur(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$isDzTur(idfa,nmsp,zp,rrmm,doc,in,out) - zjisti, zda jsou na DZVA zadany turnusy
 // out= 0/1 nejsou/jsou turnusy
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err="" s out=0
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 //
 s out=0
 s hrl="" f {
	  s hrl=$o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl)) q:((hrl="")!(out))  d
	  i $o(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,1,"")) s out=1
 }
 //
 q 0
gDzSttTach(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gDzSttTach(idfa,nmsp,zp,rrmm,doc,in,out) - vrati stav tachometru z vozidla
 // out("dta",1)= konecny stav tachometru
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err="" s out=0
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 s out("dta",1)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1),":",7)
 q 0
gIdPrvDzRrmm(idfa,nmsp,rrmm,in,out)
 //vrati provozovny, ve kterych jsou v rrmm porizene doklady out("arr",1,zp)="", out("arr",2,idprv)=""
 n (idfa,nmsp,rrmm,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(rrmm)="" q "1~rrmm="
 s zp="" f {
	 s zp=$o(^[nmsp]OBD(zp)) i zp="" q
	 i $d(^[nmsp]OBD(zp,rrmm)) {
		 s out("arr",1,zp)=""
		 s out("arr",2,(zp#100))=""
	 }
 }
 q 0
 //
err s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
errtroll s $zt="" trollback 1 k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDz1" type="INT" languagemode="0" timestamp="65729,40775.908431"><![CDATA[
OBapiEDDz1 q
 // api DZVA
actPrsEdv(idfa,nmsp,hrl,inpar,arr)
 // prepocet prepravnich systemu - pole Edv
 // v promene arr je pole Edv a Tur 
 // idfa - identifikator firmy
 // inpar("par",1)=provoz,kam doklad patri (prv)
 // inpar("par",2)=ns na doklade (odvozene od auta) (nsspz)
 // inpar("par",3)=0 - prs do rezijnich a obj. jen doplnuje, respektuje zadane hodnoty / 1 - prs pro rezijnich a obj. aktualizuje vzdy podle vychozich hodnot (arez)
 // inpar("par",4)=0 - prs do casti spoju  jen doplnuje, respektuje zadane hodnoty / 1 - prs pro casti spoju aktualizuje vzdy podle vychozich hodnot (adsp)
 // hrl - den, ke kteremu se to pocita
 // vstup arr("arr","tur",...)
 // vstup/vystup arr("arr","edv",...)
 // program projde uvedene prom a podle nastaveni doplni prepravni system
 //
 n (idfa,nmsp,hrl,inpar,arr) s $zt="err"
 //jak aktualizovat do casti spoju
 s idprv=$g(inpar("par",1))
 s idns=$g(inpar("par",2))
 s arez=+$g(inpar("par",3))
 s adsp=+$g(inpar("par",4))
 //===============================
 //pole nastaveni
 k arrprsset s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.arrprsset) zt:+err "merr"
 k arrprscis s err=$$gCis^OBapiED(idfa,nmsp,5,"",.arrprscis) zt:+err "merr"
 k arrrkmcis s err=$$gCis^OBapiED(idfa,nmsp,22,"",.arrrkmcis) zt:+err "merr"
 //==============
 s ho="" f  s ho=$o(arr("arr","edv",ho)) q:ho=""  d
 .d:$d(arr("arr","edv",ho,"arr",7))
 ..s typ="" f  s typ=$o(arr("arr","edv",ho,"arr",7,typ)) q:typ=""  d
 ...k prs s prs=""
 ...// vymazu pripadnou tabulku prs i pod indexem rzp
 ...k arr("arr","edv",ho,"arr",7,typ,"prs")
 ...s cntr="" f  s cntr=$o(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr)) q:cntr=""  d
 ....k arr("arr","edv",ho,"arr",7,typ,"rzp",cntr,"prs")
 ...// ============================
 ...s prs=$g(arr("arr","edv",ho,"arr",7,typ,"dta",6)) s:adsp prs=""
 ...// zadani rucne, pokud se aktualizuje, pouzije se vychozi prs
 ...i +$g(arrprsset("arr",2,8,typ,3))=0 d  q
 ....i prs'="" s:'$d(arrprscis("arr",prs)) prs=""
 ....q:prs'=""
 ....s prs=$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,"",typ,.arrprsset)
 ....s arr("arr","edv",ho,"arr",7,typ,"dta",6)=prs
 ...// ===========================================================
 ...// tabulka spoju pro nejvetsi prs nebo rozpocet vrati resarr(cnt,li,sp)=km
 ...k resarr
 ...// souhrnna veta
 ...s km=$g(arr("arr","edv",ho,"arr",7,typ,"dta",4))
 ...s li=+$g(arr("arr","edv",ho,"arr",7,typ,"dta",7))
 ...s sp=+$g(arr("arr","edv",ho,"arr",7,typ,"dta",8))
 ...s resarr(0,li,sp)=km
 ...// je rozpis km na linky
 ...i $o(arr("arr","edv",ho,"arr",7,typ,"rzp",""))'="" d
 ....k resarr
 ....s cntr="" f  s cntr=$o(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr)) q:cntr=""  d
 .....s km=$g(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr,"dta",4))
 .....s li=$g(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr,"dta",5))
 .....s sp=$g(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr,"dta",6))
 .....// neni-li linka a spoj, zkusim hlavni vetu (zpetna kompatibilita, ls s neporizoval v rozpisu)
 .....i 'li d
 ......s li=+$g(arr("arr","edv",ho,"arr",7,typ,"dta",7))
 ......s sp=+$g(arr("arr","edv",ho,"arr",7,typ,"dta",8))
 .....s resarr(cntr,li,sp)=km
 ...// konverze tabulky resarr(cnt,li,sp)=km na resarr("prs",prs)=km dle db spoju
 ...k srcarr m srcarr=resarr k resarr
 ...s cntr="" f  s cntr=$o(srcarr(cntr)) q:cntr=""  d
 ....s li="" f  s li=$o(srcarr(cntr,li)) q:li=""  d
 .....s sp="" f  s sp=$o(srcarr(cntr,li,sp)) q:sp=""  d
 ......s km=$g(srcarr(cntr,li,sp))
 ......//neni li/sp - vychozi prepravni system
 ......i 'li d  q
 .......s prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,"",typ,.arrprsset)
 .......s resarr("prs",prs)=$g(resarr("prs",prs))+km
 .......s resarr("cnt",cntr,prs,"dta",1)=$g(resarr("cnt",cntr,prs,"dta",1))+km
 ......//prepravni system od linky a spoje
 ......k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 ......s prs=$g(arrsp("dta",12)) i $o(arrsp("arr","prs",""))'="" s prs=""
 ......//jeden prepravni system
 ......i prs'="" d  q
 .......s resarr("prs",prs)=$g(resarr("prs",prs))+km
 .......s resarr("cnt",cntr,prs,"dta",1)=$g(resarr("cnt",cntr,prs,"dta",1))+km
 ......//vice prepravnich systemu
 ......i $o(arrsp("arr","prs",""))'="" d  q
 .......k rarr k sarr
 .......s prs="" f  s prs=$o(arrsp("arr","prs",prs)) q:prs=""  s sarr(prs)=+$g(arrsp("arr","prs",prs))
 .......s rarr=+km
 .......s err=$$rzpArr^OBapiED(.rarr,.sarr,2) zt:+err "merr" s err=""
 .......s prs="" f  s prs=$o(rarr(prs)) q:prs=""  d
 ........s resarr("prs",prs)=$g(resarr("prs",prs))+$g(rarr(prs))
 ........s resarr("cnt",cntr,prs,"dta",1)=$g(resarr("cnt",cntr,prs,"dta",1))+$g(rarr(prs))
 ......//neni prs, vychozi
 ......s prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,"",typ,.arrprsset)
 ......s resarr("prs",prs)=$g(resarr("prs",prs))+km
 ......s resarr("cnt",cntr,prs,"dta",1)=$g(resarr("cnt",cntr,prs,"dta",1))+km
 ...// automat nejvetsi
 ...// ================
 ...i +$g(arrprsset("arr",2,8,typ,3))=1 d  q
 ....s maxkm=0 s prs=""
 ....s id="" f  s id=$o(resarr("prs",id)) q:id=""  d
 .....s:($g(resarr("prs",id))>maxkm) maxkm=$g(resarr("prs",id)),prs=id
 ....s arr("arr","edv",ho,"arr",7,typ,"dta",6)=prs
 ...// automat pomer
 ...// =============
 ...i +$g(arrprsset("arr",2,8,typ,3))=2 d  q
 ....s arr("arr","edv",ho,"arr",7,typ,"dta",6)=""
 ....// zjistim pocet prs
 ....s sps=0 s prs="" f  s prs=$o(resarr("prs",prs)) q:prs=""  s sps=sps+1
 ....// jen jeden prs
 ....i sps=1 s prs=$o(resarr("prs","")) s arr("arr","edv",ho,"arr",7,typ,"dta",6)=prs q
 ....// vice prepravnich systemu
 ....s prs="" f  s prs=$o(resarr("prs",prs)) q:prs=""  d
 .....s arr("arr","edv",ho,"arr",7,typ,"prs",prs,"dta",1)=$g(resarr("prs",prs))
 ....// je-li zado vice radku (vice linek) zapisu si vypocet do nich
 ....s cntr="" f  s cntr=$o(arr("arr","edv",ho,"arr",7,typ,"rzp",cntr)) q:cntr=""  d
 .....m:$d(resarr("cnt",cntr)) arr("arr","edv",ho,"arr",7,typ,"rzp",cntr,"prs")=resarr("cnt",cntr)
 // =================================================================================================
 // zdrojove pole pro rozpocet prs na dokladu podle trasy (spoje) + casti spoju + prs s max.poctem km
 // =================================================================================================
 k srcarr
 // z trasy
 s tm="" f  s tm=$o(arr("arr","tur",tm)) q:tm=""  d
 .i $g(arr("arr","tur",tm,"dta",2))'=3 q
 .i $o(arr("arr","tur",tm,"prs",""))="" d
 ..s km=$g(arr("arr","tur",tm,"dta",3))
 ..s prs=$g(arr("arr","tur",tm,"dta",15))
 ..q:prs=""
 ..s srcarr(prs)=$g(srcarr(prs))+km
 .i $o(arr("arr","tur",tm,"prs",""))'="" d
 ..s prs="" f  s prs=$o(arr("arr","tur",tm,"prs",prs)) q:prs=""  d
 ...s km=$g(arr("arr","tur",tm,"prs",prs,"dta",1))
 ...s srcarr(prs)=$g(srcarr(prs))+km
 // z casti spoju
 s ho="" f  s ho=$o(arr("arr","edv",ho)) q:ho=""  d
 .d:$d(arr("arr","edv",ho,"arr",7))
 ..s typ="" f  s typ=$o(arr("arr","edv",ho,"arr",7,typ)) q:typ=""  d
 ...i $o(arr("arr","edv",ho,"arr",7,typ,"prs",""))="" d
 ....s km=$g(arr("arr","edv",ho,"arr",7,typ,"dta",4))
 ....s prs=$g(arr("arr","edv",ho,"arr",7,typ,"dta",6))
 ....q:prs=""
 ....s srcarr(prs)=$g(srcarr(prs))+km
 ...i $o(arr("arr","edv",ho,"arr",7,typ,"prs",""))'="" d
 ....s prs="" f  s prs=$o(arr("arr","edv",ho,"arr",7,typ,"prs",prs)) q:prs=""  d
 .....s km=$g(arr("arr","edv",ho,"arr",7,typ,"prs",prs,"dta",1))
 .....s srcarr(prs)=$g(srcarr(prs))+km
 // prs s nejvetsim poctem km
 s srcarr="" s km=0 s prs="" f  s prs=$o(srcarr(prs)) q:prs=""  d
 .i +$g(srcarr(prs))>km s km=+$g(srcarr(prs)) s srcarr=prs
 // ====================
 // D ostatni rezijni km
 // ====================
 s ho="" f  s ho=$o(arr("arr","edv",ho)) q:ho=""  d
 .// rezijni km a objizdky
 .d:$d(arr("arr","edv",ho,"arr",5))
 ..s typ="" f  s typ=$o(arr("arr","edv",ho,"arr",5,typ)) q:typ=""  d
 ...k prs s prs=""
 ...// vymazu pripadnou tabulku prs
 ...k arr("arr","edv",ho,"arr",5,typ,"prs")
 ...// ============================
 ...s prs=$g(arr("arr","edv",ho,"arr",5,typ,"dta",5)) s:arez prs=""
 ...// prs rucne 
 ...i ($g(arrprsset("arr",2,7,typ,3))=0) d
 ....i prs'="" s:'$d(arrprscis("arr",prs)) prs=""
 ....// je-li prs="" dosadim default
 ....s:prs="" prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,typ,"",.arrprsset)
 ...// maximalni prs z linek na doklade
 ...i ($g(arrprsset("arr",2,7,typ,3))=1) d
 ....i prs'="" s:'$d(arrprscis("arr",prs)) prs=""
 ....// je-li vypocitan nejvetsi dosadim ho
 ....s:($g(srcarr)'="") prs=$g(srcarr)
 ....// je-li prs="" dosadim default
 ....s:prs="" prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,typ,"",.arrprsset)
 ...// rozpocitani prepravniho systemu v pomeru ostatnich
 ...i ($g(arrprsset("arr",2,7,typ,3))=2) d
 ....// neni-li podle ceho rozpocitat dosadim vychozi prs
 ....i $o(srcarr(""))="" s srcarr(+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,typ,"",.arrprsset))=1
 ....k resarr s resarr=$g(arr("arr","edv",ho,"arr",5,typ,"dta",1))
 ....s err=$$rzpArr^OBapiED(.resarr,.srcarr,2) zt:+err "merr" s err=""
 ....// zjistim pocet prs
 ....s sps=0 s id="" f  s id=$o(resarr(id)) q:id=""  s sps=sps+1
 ....// jen jeden prs
 ....i sps=1 s prs=$o(resarr("")) q
 ....// vice prs
 ....s id="" f  s id=$o(resarr(id)) q:id=""  s prs(id)=+$g(resarr(id))
 ...// vzdy vychozi prepravni system
 ...i ($g(arrprsset("arr",2,7,typ,3))=3) d
 ....s prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,typ,"",.arrprsset)	
 ...// prepravni system podle linky a spoje
 ...i ($g(arrprsset("arr",2,7,typ,3))=4) d
 ....k prs s prs=""
 ....s li=$g(arr("arr","edv",ho,"arr",5,typ,"dta",6))
 ....s sp=$g(arr("arr","edv",ho,"arr",5,typ,"dta",7))
 ....i (li'="")&(sp'="") d
 .....//prepravni system od linky a spoje
 .....k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 .....s prs=$g(arrsp("dta",12)) i $o(arrsp("arr","prs",""))'="" s prs=""
 .....//jeden prepravni system
 .....i prs'="" q
 .....//vice prepravnich systemu
 .....i $o(arrsp("arr","prs",""))'="" d  q
 ......k resarr k srcarr
 ......s id="" f  s id=$o(arrsp("arr","prs",id)) q:id=""  s srcarr(id)=+$g(arrsp("arr","prs",id))
 ......s resarr=$g(arr("arr","edv",ho,"arr",5,typ,"dta",1))
 ......s err=$$rzpArr^OBapiED(.resarr,.srcarr,2) zt:+err "merr" s err=""
 ......// zjistim pocet prs
 ......s sps=0 s id="" f  s id=$o(resarr(id)) q:id=""  s sps=sps+1
 ......// jen jeden prs
 ......i sps=1 s prs=$o(resarr("")) q
 ......// vice prs
 ......s id="" f  s id=$o(resarr(id)) q:id=""  s prs(id)=+$g(resarr(id))
 ...// program neodvodil prs - vychozi hodnota
 ...i ($g(prs)="")&($o(prs(""))="") s prs=+$$gDlftValPrs^OBapiEDTur3(0,idprv,idns,typ,"",.arrprsset)
 ...// =======================================
 ...// zpresneni
 ...i $g(arrprsset("arr",2,7,typ,2)) d
 ....// jeden prs
 ....i $g(prs)'="" d
 .....s prs=(prs\1)+$g(arrprsset("arr",2,7,typ,2))
 .....// kontrola na ciselnik
 .....d mkdtlPRS^OBapiEDTur3(nmsp,idfa,prs,$p($g(arrrkmcis("arr",typ)),"~",1))
 ....// vice prs
 ....i $o(prs(""))'="" d
 .....k resarr s id="" f  s id=$o(prs(id)) q:id=""  d
 ......s resarr((id\1)+$g(arrprsset("arr",2,7,typ,2)))=$g(resarr((id\1)+$g(arrprsset("arr",2,7,typ,2))))+prs(id)
 ......// kontrola na ciselnik
 ......d mkdtlPRS^OBapiEDTur3(nmsp,idfa,((id\1)+$g(arrprsset("arr",2,7,typ,2))),$p($g(arrrkmcis("arr",typ)),"~",1))
 ......k prs(id)
 .....s id="" f  s id=$o(resarr(id)) q:id=""  s prs(id)=resarr(id)
 ...// zapis do db
 ...s arr("arr","edv",ho,"arr",5,typ,"dta",5)=prs
 ...// vice prepravnich systemu
 ...i $o(prs(""))'="" d
 ....s arr("arr","edv",ho,"arr",5,typ,"dta",5)=""
 ....s id="" f  s id=$o(prs(id)) q:id=""  d
 .....s arr("arr","edv",ho,"arr",5,typ,"prs",id,"dta",1)=$g(prs(id))
 q 0
 //
actPrsEdvSum(idfa,nmsp,hrl,arr,out)
 // s err=$$actPrsEdvSum(idfa,nmsp,hrl,.arr,.out) - suma km za prepravni systemy z turnusu
 // pred spustenim je provedena aktualizace dsp,tkm,prs
 // vstup  ... arr("arr","edv",...) (pole s porizenymi hodnotami)
 // vystup ... out("arr",1,prs,dsp)=km					... presne km
 //        ... out("arr",1,prs,dsp,typ)=km (pro dsp=7)  ... presne km
 //        ... out("arr",2,prs,dsp)=km					... tarifni km
 //        ... out("arr",3,prs,dsp)=ji                  ... doba jizdy v minutach
 n (idfa,nmsp,hrl,arr,out) s $zt="err" k out
  // D
 s ho="" f  s ho=$o(arr("arr","edv",ho)) q:ho=""  d
 .//rezijni, objizdky,...
 .d:$d(arr("arr","edv",ho,"arr",5))
 ..s typ="" f  s typ=$o(arr("arr","edv",ho,"arr",5,typ)) q:typ=""  d
 ...s km=+$g(arr("arr","edv",ho,"arr",5,typ,"dta",1))
 ...s ji=+$g(arr("arr","edv",ho,"arr",5,typ,"dta",2))
 ...s prs=+$g(arr("arr","edv",ho,"arr",5,typ,"dta",5))
 ...i $o(arr("arr","edv",ho,"arr",5,typ,"prs",""))="" d
 ....s out("arr",1,prs,7)=$g(out("arr",1,prs,7))+km
 ....s out("arr",3,prs,7)=$g(out("arr",3,prs,7))+ji
 ....s out("arr",1,prs,7,(100+typ))=$g(out("arr",1,prs,7,(100+typ)))+km
 ...i $o(arr("arr","edv",ho,"arr",5,typ,"prs",""))'="" d
 ....k mysrcarr
 ....s prs="" f  s prs=$o(arr("arr","edv",ho,"arr",5,typ,"prs",prs)) q:prs=""  d
 .....s out("arr",1,prs,7)=$g(out("arr",1,prs,7))+$g(arr("arr","edv",ho,"arr",5,typ,"prs",prs,"dta",1))
 .....s mysrcarr($lb(prs,7))=$g(mysrcarr($lb(prs,7)))+$g(arr("arr","edv",ho,"arr",5,typ,"prs",prs,"dta",1))
 .....s out("arr",1,prs,7,(100+typ))=$g(out("arr",1,prs,7,(100+typ)))+$g(arr("arr","edv",ho,"arr",5,typ,"prs",prs,"dta",1))
 ...i ji d
 ....k myarr s myarr=ji
 ....s err=$$rzpArr^OBapiED(.myarr,.mysrcarr,0)
 ....s myidx="" f  s myidx=$o(myarr(myidx)) q:myidx=""  d
 .....s prs=$lg(myidx,1) s dsp=$lg(myidx,2)
 .....s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+$g(myarr(myidx))														//doba jizdy
 ....k myarr
 .// casti spoju
 .d:$d(arr("arr","edv",ho,"arr",7))
 ..s dsp="" f  s dsp=$o(arr("arr","edv",ho,"arr",7,dsp)) q:dsp=""  d
 ...s ji=$g(arr("arr","edv",ho,"arr",7,dsp,"dta",1))
 ...s km=$g(arr("arr","edv",ho,"arr",7,dsp,"dta",4))
 ...s prs=+$g(arr("arr","edv",ho,"arr",7,dsp,"dta",6))
 ...i $o(arr("arr","edv",ho,"arr",7,dsp,"prs",""))="" d
 ....s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+km
 ....s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+ji
 ....s:dsp=7 out("arr",1,prs,dsp,7)=$g(out("arr",1,prs,dsp,7))+km
 ....// pokud to nejsou rezijni, pak taky do tarifnich
 ....s:dsp'=7 out("arr",2,prs,dsp)=$g(out("arr",2,prs,dsp))+km
 ...i $o(arr("arr","edv",ho,"arr",7,dsp,"prs",""))'="" d
 ....k mysrcarr
 ....s prs="" f  s prs=$o(arr("arr","edv",ho,"arr",7,dsp,"prs",prs)) q:prs=""  d
 .....s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+$g(arr("arr","edv",ho,"arr",7,dsp,"prs",prs,"dta",1))
 .....s mysrcarr($lb(prs,dsp))=$g(mysrcarr($lb(prs,dsp)))+$g(arr("arr","edv",ho,"arr",7,dsp,"prs",prs,"dta",1))
 .....s:dsp=7 out("arr",1,prs,dsp,7)=$g(out("arr",1,prs,dsp,7))+$g(arr("arr","edv",ho,"arr",7,dsp,"prs",prs,"dta",1))
 .....// pokud to nejsou rezijni, pak taky do tarifnich
 .....s:dsp'=7 out("arr",2,prs,dsp)=$g(out("arr",2,prs,dsp))+$g(arr("arr","edv",ho,"arr",7,dsp,"prs",prs,"dta",1))
 ....i ji d
 .....k myarr s myarr=ji
 .....s err=$$rzpArr^OBapiED(.myarr,.mysrcarr,0)
 .....s myidx="" f  s myidx=$o(myarr(myidx)) q:myidx=""  d
 ......s prs=$lg(myidx,1) s dsp=$lg(myidx,2)
 ......s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+$g(myarr(myidx))														//doba jizdy
 .....k myarr
 q 0
sDzPartPrs(idfa,nmsp,zp,rrmm,doc,in,out)
 // ===============================================
 // zapis opravy prepravnich systemu na doklad DZVA
 // =============================================== 
 // !!! pozor, program primo zapisuje do globalu ^OBD !!!
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 //
 // in("idos")=idos
 // cinnosti s casovou pozici:
 // in("tur",idtur,"prs",idprs,"dta",1)=km 						//presne
 // in("tur",idtur,"prs",idprs,"dta",2)=km 						//tarifni (pouze spoj)
 // cinnosti bez casove pozice:
 // in("edv",hrl,"arr",idedv,idtyp,"prs",idprs,"dta",1)=km		//presne
 //
 s $zt="err" k out s err=""
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 s idos=$g(in("idos")) s fullname=$p(idos,"~",2)
 //==============================================================
 //nactu doklad
 k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 //kontrola, zda jsou vsechny polozky na doklade a lze prs ulozit
 s isok=1
 s idtur="" f  s idtur=$o(in("tur",idtur)) q:idtur=""  d
 .//neni cinnost
 .i '$d(arrdoc("arr","tur",idtur)) s isok=0
 s hrl="" f  s hrl=$o(in("edv",hrl)) q:hrl=""  d
 .f idedv=5,7 d
 ..s idtyp="" f  s idtyp=$o(in("edv",hrl,"arr",idedv,idtyp)) q:idtyp=""  d
 ...//neni cinnost
 ...i '$d(arrdoc("arr","edv",hrl,"arr",idedv,idtyp)) s isok=0
 s out("stt")=0
 i 'isok q 0
 //tur
 s idtur="" f  s idtur=$o(in("tur",idtur)) q:idtur=""  d
 .//neni cinnost
 .i '$d(arrdoc("arr","tur",idtur)) q
 .//typ
 .s typ=$g(arrdoc("arr","tur",idtur,"dta",2)) q:(typ<3)!(typ>7)
 .//pocet prs
 .s cntprs=0 s idprs="" f  s idprs=$o(in("tur",idtur,"prs",idprs)) q:idprs=""  s cntprs=cntprs+1
 .//jeden prs
 .i cntprs=1 d
 ..s idprs=$o(in("tur",idtur,"prs",""))
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur),"~",2)=idprs
 ..k ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur,"PRS")
 .//vic prs
 .i cntprs>1 d
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur),"~",2)=""
 ..k ^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur,"PRS")
 ..s idprs="" f  s idprs=$o(in("tur",idtur,"prs",idprs)) q:idprs=""  d
 ...s $p(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur,"PRS",idprs),"~",1)=+$g(in("tur",idtur,"prs",idprs,"dta",1))
 ...// tarifni - pouze pro spoj
 ...i (typ=3)  d
 ....s $p(^[nmsp]OBD(zp,rrmm,doc,"Zspoje",idtur,"PRS",idprs),"~",2)=+$g(in("tur",idtur,"prs",idprs,"dta",2))
 // edv
 s hrl="" f  s hrl=$o(in("edv",hrl)) q:hrl=""  d
 .f idedv=5,7 d
 ..s idtyp="" f  s idtyp=$o(in("edv",hrl,"arr",idedv,idtyp)) q:idtyp=""  d
 ...//neni cinnost
 ...i '$d(arrdoc("arr","edv",hrl,"arr",idedv,idtyp)) q
 ...s cntprs=0
 ...s idprs="" f  s idprs=$o(in("edv",hrl,"arr",idedv,idtyp,"prs",idprs)) q:idprs=""  s cntprs=cntprs+1
 ...i cntprs=1 d
 ....s idprs=$o(in("edv",hrl,"arr",idedv,idtyp,"prs",""))
 ....s $p(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,idtyp),"~",2)=idprs
 ....k ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,idtyp,"PRS")
 ...i cntprs>1 d
 ....s $p(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,idtyp),"~",2)=""
 ....k ^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,idtyp,"PRS")
 ....s idprs="" f  s idprs=$o(in("edv",hrl,"arr",idedv,idtyp,"prs",idprs)) q:idprs=""  d
 .....s $p(^[nmsp]OBD(zp,rrmm,doc,"D",hrl,idedv,idtyp,"PRS",idprs),"~",1)=$g(in("edv",hrl,"arr",idedv,idtyp,"prs",idprs,"dta",1))
 // obnoveni napoctu prs na doklade
 k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 k arrdoc("arr",4) k arrdoc("arr",5) s hrl=$g(arrdoc("dta",4))
 k arrsmprs s err=$$actPrsTurSum^OBapiED(idfa,nmsp,hrl,.arrdoc,.arrsmprs) zt:+err "merr" s err=""
 f idtkm=1,2 d
 .s:idtkm=1 idtkmdoc=4
 .s:idtkm=2 idtkmdoc=5
 .s idprs="" f  s idprs=$o(arrsmprs("arr",idtkm,idprs)) q:idprs=""  d
 ..s dsp="" f  s dsp=$o(arrsmprs("arr",idtkm,idprs,dsp)) q:dsp=""  d
 ...s arrdoc("arr",idtkmdoc,idprs,dsp)=$g(arrdoc("arr",idtkmdoc,idprs,dsp))+$g(arrsmprs("arr",idtkm,idprs,dsp))
 ...s typ="" f  s typ=$o(arrsmprs("arr",idtkm,idprs,dsp,typ)) q:typ=""  d
 ....s arrdoc("arr",idtkmdoc,idprs,dsp,typ)=$g(arrdoc("arr",idtkmdoc,idprs,dsp,typ))+$g(arrsmprs("arr",idtkm,idprs,dsp,typ))
 // pole edv
 k arrsmprs s err=$$actPrsEdvSum^OBapiED(idfa,nmsp,hrl,.arrdoc,.arrsmprs) zt:+err "merr" s err=""
 // napocet km
 f idtkm=1,2 d
 .s:idtkm=1 idtkmdoc=4
 .s:idtkm=2 idtkmdoc=5
 .s idprs="" f  s idprs=$o(arrsmprs("arr",idtkm,idprs)) q:idprs=""  d
 ..s dsp="" f  s dsp=$o(arrsmprs("arr",idtkm,idprs,dsp)) q:dsp=""  d
 ...s arrdoc("arr",idtkmdoc,idprs,dsp)=$g(arrdoc("arr",idtkmdoc,idprs,dsp))+$g(arrsmprs("arr",idtkm,idprs,dsp))
 ...s typ="" f  s typ=$o(arrsmprs("arr",idtkm,idprs,dsp,typ)) q:typ=""  d
 ....s arrdoc("arr",idtkmdoc,idprs,dsp,typ)=$g(arrdoc("arr",idtkmdoc,idprs,dsp,typ))+$g(arrsmprs("arr",idtkm,idprs,dsp,typ))
 k ^[nmsp]OBD(zp,rrmm,doc,"PS")
 m ^[nmsp]OBD(zp,rrmm,doc,"PS")=arrdoc("arr",4)									                //presne km dle prepravnich systemu "arr",4,prs)=km ; "arr",4,prs,dsp)=km ; "arr",4,prs,dsp,typ)=km
 k ^[nmsp]OBD(zp,rrmm,doc,"PST")
 m ^[nmsp]OBD(zp,rrmm,doc,"PST")=arrdoc("arr",5)								    			//tarifni km dle prepravnich sytemu "arr",5,prs)=km ; "arr",5,prs,dsp)=km
 // poznaceni o zmene
 k arr m arr(zp,rrmm,doc)=in
 s err=$$sHistory^OBapiED(idfa,nmsp,"CHNGPRS|"_rrmm,"",.arr,"") zt:+err "merr" s err=""
 // poznaceni obdobi pro plneni DS
 k arr s arr("arr",1,rrmm)=""
 s err=$$sRMForFillDS^OBapiED(idfa,nmsp,.arr,"") zt:+err "merr" s err=""
 s out("stt")=1
 q 0
 //
sDzPartNs(idfa,nmsp,zp,rrmm,doc,in,out)
 // ==============================
 // zapis opravy ns na doklad DZVA
 // ============================== 
 // !!! pozor, program primo zapisuje do globalu ^OBD !!!
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 //
 // in("idos")=idos
 // in("dta",16)=ns
 //
 s $zt="err" k out s err=""
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(in("dta",16))="" q "1~ns="
 //
 s idos=$g(in("idos")) s fullname=$p(idos,"~",2)
 //==============================================================
 //doklad neexistuje
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q 0
 //doklad je predznaceny
 i '$g(^[nmsp]OBD(zp,rrmm,doc)) q 0
 //zapis nsdo dokladu 
 s val=$p($g(^[nmsp]OBD(zp,rrmm,doc)),"#",1)
 s $p(val,":",16)=$tr($g(in("dta",16)),":","")
 s $p(^[nmsp]OBD(zp,rrmm,doc),"#",1)=val
 s ^[nmsp]OBD(zp,rrmm,doc,"Ns")=$tr($g(in("dta",16)),":","")
 // poznaceni o zmene
 k arr m arr(zp,rrmm,doc)=in
 s err=$$sHistory^OBapiED(idfa,nmsp,"CHNGNS|"_rrmm,"",.arr,"") zt:+err "merr" s err=""
 // poznaceni obdobi pro plneni DS
 k arr s arr("arr",1,rrmm)=""
 s err=$$sRMForFillDS^OBapiED(idfa,nmsp,.arr,"") zt:+err "merr" s err=""
 s out("stt")=1
 q 0 
convPHTDZ(idfa,nmsp)
 n (idfa,nmsp)
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 w #
 w "konverze evidovaného PHM na dokladech DZVA",!
 w "program od evidovaného phm na odečte ph pro topení",!
 w "idfa="_idfa,!
 w "namespace="_nmsp,!
 w "dz="_dz,!
 w "pokračovat ? (a)" r key
 i (key="a")!(key="a") d
 .s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 ..i zp\100'=dz q
 ..s rrmm="" f  s rrmm=$o(^[nmsp]OBD(zp,rrmm)) q:rrmm=""  d
 ...s iddoc="" f  s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) q:(iddoc="")!(iddoc'<qsj)  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,iddoc))
 ....//je topeni
 ....i +$p($p(val,"#",1),":",19) d
 .....w !,zp,"  ",rrmm,"  ",iddoc,"  ",+$p($p(val,"#",1),":",11),"/",+$p($p(val,"#",1),":",19),"->"
 .....s tmp=$p(val,"#",1) s $p(tmp,":",11)=($p(tmp,":",11)-$p(tmp,":",19)) s $p(val,"#",1)=tmp
 .....w +$p($p(val,"#",1),":",11),"/",+$p($p(val,"#",1),":",19)
 .....s ^[nmsp]OBD(zp,rrmm,iddoc)=val
 q ""
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDzCal" type="INT" languagemode="0" timestamp="65771,47637.0562"><![CDATA[
OBapiEDDzCal q
calcEdv(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 // inarr("par",1)=zp
 // vypocet rucnich vstupu ....... docarr("arr","edv")
 // vysledek ze zapise do pole ... docarr("arr","tuv")
 // dopocet km pro li a sp z casti spoju =========================================
 // pararr("arr",1,l,s)=km  	//km dle linek a spoju pro vypocet priplatku
 // pararr("arr",1,l,s,hrl)=km  //km dle linek, spoju a dnu  pro vypocet priplatku
 // pararr("arr",3,l,s)=mm  	//mm dle linek a spoju pro vypocet priplatku
 // ==============================================================================
 n (idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 s $zt="err" s err=""
 // ===================================================
 // !!! ne kill pararr a docarr - doplnuji se udaje !!!
 // ===================================================
 s zp=$g(inarr("par",1))
 // nastaveni programu
 i '$d(arrset("arr")) k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 // mzdove nastaveni
 i '$d(arrmzd("arr")) k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr"
 //id pro zapis/kraceni cekani sumarna, mozno 13(cekani)/99(preruseni nezapoctene)
 s idwait=$$gIdForWait^OBapiEDDzCal(.pararr,.arrset)
 s hrl="" f  s hrl=$o(docarr("arr","edv",hrl)) q:hrl=""  d
 .k tmparri,arr
 .s tmparri("par",1)=+$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
 .s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.tmparri,.arr) zt:+err "merr" s err=""
 .k tmparri
 .s dd=+$g(arr("dta",1)) //den v tydnu
 .s sv=+$g(arr("dta",2)) //svatek
 .s sn=(dd>5)			 //sone
 .s idevd="" f  s idevd=$o(docarr("arr","edv",hrl,"arr",idevd)) q:idevd=""  d
 ..//+-spoje
 ..i idevd=2 d
 ...s id="" f  s id=$o(docarr("arr","edv",hrl,"arr",idevd,id)) q:id=""  d
 ....//cekani
 ....s mm=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",2))
 ....d addTuv(.docarr,idwait,"",mm)  								//d addTuv(.docarr,13,"",mm)
 ..//neprepravni vykony
 ..i idevd=3 d
 ...s id="" f  s id=$o(docarr("arr","edv",hrl,"arr",idevd,id)) q:id=""  d
 ....s mmnc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",1))		// hodiny v noci
 ....s mm=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",2))		// hodiny
 ....s mmcc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",3)) 	// odecet z cekani
 ....s kszs=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",4)) 	// pocet zasilek, pocet spoju +/-
 ....s kcpr=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",5)) 	// kc priplatek
 ....s kcfx=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",6)) 	// kc fixni
 ....s kcmm=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",7)) 	// kc misto hodin
 ....s kcds=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",8)) 	// priplatek delena smena
 ....s kcnc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",9)) 	// priplatek za nocovani
 ....d addTuv(.docarr,15,"",mmnc)									// hodiny v noci
 ....d addTuv(.docarr,idwait,"",mmcc) 						 	    // cekani //d addTuv(.docarr,13,"",mmcc)
 ....i kcmm d addTuv(.docarr,19,23,kcmm) q 							// kc misto hodin
 ....// napocet hodin do sn a sv
 ....d
 .....i id=10 q 																			//cekani se do sn a sv nenapocitava
 .....i (id=21)&(($g(arrmzd("arr",0,3,"dta",1))=1)!($g(arrmzd("arr",0,3,"dta",1))=3)) q		//DODK nenapocitavam v pripade fixniho DODK
 .....i id=15 q																				//prestavka na jidlo do sn a sv nenapocitavam
 .....i id=23 q																				//delenou smenu do sn a sv nenapocitavam
 .....i +sv d addTuv(.docarr,20,"",mm)														//svatek
 .....i +sn d addTuvSn(.docarr,.arrmzd,sv,mm,dd)											//so+ne
 ....//
 ....i $g(arrset("arr",6,23))=2 i (id>30&(id<47)) d addTuv(.docarr,10,"",mm) q				// normovane hodiny udrzby - neplatit
 ....i id=70 d addTuv(.docarr,36,"",mm) q													//jine prace
 ....i id=76 s pararr("dta",11)=$g(pararr("dta",11))+kszs  q								//pocet spoju +/-
 ....i id=77 s pararr("dta",4)=$g(pararr("dta",4))+kszs  q									//zasilky
 ....i id=78 d addTuv(.docarr,19,13,kcpr) q   												//priplatek v kc
 ....i id=79 d addTuv(.docarr,19,13,kcpr) q     											//priplatek v kc
 ....i id=82 d addTuv(.docarr,19,13,kcpr) q    					  							//priplatek v kc
 ....i id=83 d addTuv(.docarr,19,37,kcpr) q    					  							//priplatek v kc za mimoradnosti
 ....i id=84 d addTuv(.docarr,19,9,kcpr) q    					  							//priplatek v kc za MHD
 ....i id=20 d addTuv(.docarr,19,25,kcds) q													//priplvicesmennyprovozLiberec
 ....i id=80 d addTuv(.docarr,19,14,kcfx) d addTuv(.docarr,19,43,kcfx) q 					//fixni kc k turnusu do fixnich kc
 ....i id=81 d addTuv(.docarr,19,3,kcnc) q	    											//nocovne
 ....i id=10 d addTuv(.docarr,idwait,"",mm) q												//cekani // d addTuv(.docarr,13,"",mm)
 ....i id=11 d addTuv(.docarr,6,"",mm) d addTuv(.docarr,63,"",mm) q							//ostatni prace (ostatni prace)
 ....i id=12 d addTuv(.docarr,10,"",mm) q													//neplacene hod.
 ....i id=13 d addTuv(.docarr,1,"",mm) d addTuv(.docarr,44,"",mm) q							//jizda + do jizdy vnitro
 ....i id=14 d addTuv(.docarr,2,"",mm) d addTuv(.docarr,55,"",mm) q							//manipulace + do manipulace vnitro
 ....i id=15 d addTuv(.docarr,4,"",mm) q													//obed
 ....i id=16 d addTuv(.docarr,5,"",mm) q													//bezp.prestavka
 ....i id=17 d addTuv(.docarr,6,"",mm) d addTuv(.docarr,65,"",mm) q							//ostat.prace (odvod trzeb)
 ....i id=18 d addTuv(.docarr,8,"",mm) d addTuv(.docarr,72,"",mm) q							//vyrovnavaci doba + do vyrovnavaci doby vnitro
 ....i id=19 d addTuv(.docarr,1,"",mm) d  q													//jizda po turnuse + do jizdy vnitro + doba provozu + doba provozu vnitro
 .....d addTuv(.docarr,44,"",mm)															//jizda vnitro
 .....d addTuv(.docarr,17,"",mm)															//doba provozu
 .....d addTuv(.docarr,88,"",mm)															//doba provozu vnitro
 ....i id=21 d addTuv(.docarr,9,"",mm) q													//dodk
 ....i id=23 d addTuv(.docarr,51,"",mm) d setTuv(.docarr,52,1) q							//delena smena
 ....i id=50 d addTuv(.docarr,12,"",mm) q													//pracovni zaloha
 ....i id=60 d addTuv(.docarr,31,"",mm) q													//zaskolovani
 ....i id=99 d addTuv(.docarr,33,"",mm) q													//ul spec. (hodiny snizenou sazbou)
 ....d addTuv(.docarr,7,"",mm) q															//ostatni pausalni prace
 ..//vlozeny vykon
 ..i idevd=4 d
 ...s mm=+$g(docarr("arr","edv",hrl,"arr",idevd,"dta",2))			//hodiny vlozeneho vykonu
 ...d addTuv(.docarr,107,"",(-mm))									//hodiny vlozeneho vykonu
 ...d addTuv(.docarr,idwait,"",mm)						 			//uprava cekani	(odecet)		//d addTuv(.docarr,13,"",mm)
 ...s pararr("dta",5)=$g(pararr("dta",5))+mm						//hodiny vlozeneho vykonu do parametru, uz se asi nepouziva
 ..//rezijni km
 ..i idevd=5 d
 ...s id="" f  s id=$o(docarr("arr","edv",hrl,"arr",idevd,id)) q:id=""  d
 ....s km=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",1))		//celkove km
 ....d addTuv(.docarr,22,"",km)
 ....d addTuv(.docarr,29,"",km)
 ....i (id>20)&(id<28) s pararr("dta",6)=$g(pararr("dta",6))+km		//km objizdek
 ....s mmji=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",2))		//hodiny
 ....d addTuv(.docarr,1,"",mmji)									//jizda
 ....d addTuv(.docarr,17,"",mmji) d									//doba provozu
 .....//doba provozu podle druhu objizdky
 .....i id=21 d addTuv(.docarr,88,"",mmji) q						//objizdky vnitro - doba provozu vnitro
 .....i id=22 d addTuv(.docarr,89,"",mmji) q						//objizdky dalkova - doba provozu dalkova
 .....i id=23 d addTuv(.docarr,90,"",mmji) q						//objizdky mesto - doba provozu mesto
 .....i id=24 d addTuv(.docarr,91,"",mmji) q						//objizdky primesto - doba provozu primesto
 .....i id=25 d addTuv(.docarr,92,"",mmji) q						//objizdky mezinarodni - doba provozu mezinarodni
 .....i id=26 d addTuv(.docarr,93,"",mmji) q						//objizdky smluvni - doba provozu smluvni
 .....i id=27 d addTuv(.docarr,94,"",mmji) q						//objizdky rezijni - doba provozu rezijni
 .....d addTuv(.docarr,94,"",mmji) q								//ostatni do rezijni
 ....//doba jizdy podle druhu spoje
 ....i '$g(arrset("arr",4,19)) d addTuv(.docarr,50,"",mmji)			//vse rezijni jizda
 ....i +$g(arrset("arr",4,19)) d									//rozepisovat podle druhu spoje 
 .....i id=21 d addTuv(.docarr,44,"",mmji) q						//objizdky vnitro - jizda vnitro
 .....i id=22 d addTuv(.docarr,45,"",mmji) q						//objizdky dalkova - jizda dalkova
 .....i id=23 d addTuv(.docarr,46,"",mmji) q						//objizdky mesto - jizda mesto
 .....i id=24 d addTuv(.docarr,47,"",mmji) q						//objizdky primesto - jizda primesto
 .....i id=25 d addTuv(.docarr,48,"",mmji) q						//objizdky mezinarodni - jizda mezinarodni
 .....i id=26 d addTuv(.docarr,49,"",mmji) q						//objizdky smluvni - jizda smluvni
 .....i id=27 d addTuv(.docarr,50,"",mmji) q						//objizdky rezijni - jizda rezijni
 .....d addTuv(.docarr,50,"",mmji) q								//ostatni do rezijnich
 ....s mmcc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",3)) 	//cekani
 ....d addTuv(.docarr,idwait,"",mmcc)								//cekani //d addTuv(.docarr,13,"",mmcc)
 ....d addTuv(.docarr,17,"",mmcc) d									//doba provozu
 .....//doba provozu podle druhu objizdky
 .....i id=21 d addTuv(.docarr,88,"",mmcc) q						//objizdky vnitro - doba provozu vnitro
 .....i id=22 d addTuv(.docarr,89,"",mmcc) q						//objizdky dalkova - doba provozu dalkova
 .....i id=23 d addTuv(.docarr,90,"",mmcc) q						//objizdky mesto - doba provozu mesto
 .....i id=24 d addTuv(.docarr,91,"",mmcc) q						//objizdky primesto - doba provozu primesto
 .....i id=25 d addTuv(.docarr,92,"",mmcc) q						//objizdky mezinarodni - doba provozu mezinarodni
 .....i id=26 d addTuv(.docarr,93,"",mmcc) q						//objizdky smluvni - doba provozu smluvni
 .....i id=27 d addTuv(.docarr,94,"",mmcc) q						//objizdky rezijni - doba provozu rezijni
 .....d addTuv(.docarr,94,"",mmcc) q								//ostatni do rezijni
 ....s mmnc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",4)) 	//hodiny v noci
 ....d addTuv(.docarr,15,"",mmnc)
 ....i +sv d addTuv(.docarr,20,"",(mmji))							//svatek
 ....i +sn d addTuvSn(.docarr,.arrmzd,sv,mmji,dd)					//so+ne
 ..//diety
 ..i idevd=6 d
 ...s kcdi=+$g(docarr("arr","edv",hrl,"arr",idevd,"dta",1))
 ...d addTuv(.docarr,18,"",kcdi)
 ..//casti spoju
 ..i idevd=7 d
 ...s id="" f  s id=$o(docarr("arr","edv",hrl,"arr",idevd,id)) q:id=""  d
 ....s mmji=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",1))
 ....d addTuv(.docarr,1,"",mmji)									//hodiny jizdy
 ....d addTuv(.docarr,17,"",mmji)									//hodiny jizdy do provozu
 ....//doba provozu podle druhu spoje
 ....i id=1 d addTuv(.docarr,88,"",mmji)
 ....i id=2 d addTuv(.docarr,89,"",mmji)
 ....i id=3 d addTuv(.docarr,90,"",mmji)
 ....i id=4 d addTuv(.docarr,91,"",mmji)
 ....i id=5 d addTuv(.docarr,92,"",mmji)
 ....i id=6 d addTuv(.docarr,93,"",mmji)
 ....i id=7 d addTuv(.docarr,94,"",mmji)
 ....//jizda podle druhu spoje
 ....i id=1 d addTuv(.docarr,44,"",mmji)
 ....i id=2 d addTuv(.docarr,45,"",mmji)
 ....i id=3 d addTuv(.docarr,46,"",mmji)
 ....i id=4 d addTuv(.docarr,47,"",mmji)
 ....i id=5 d addTuv(.docarr,48,"",mmji)
 ....i id=6 d addTuv(.docarr,49,"",mmji)
 ....i id=7 d addTuv(.docarr,50,"",mmji)
 ....s mmma=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",2))		//hodiny manipulaci
 ....d addTuv(.docarr,2,"",mmma)
 ....d addTuv(.docarr,17,"",mmma)									//hodiny manipulaci do provozu
 ....//doba provozu podle druhu spoje
 ....i id=1 d addTuv(.docarr,88,"",mmma)
 ....i id=2 d addTuv(.docarr,89,"",mmma)
 ....i id=3 d addTuv(.docarr,90,"",mmma)
 ....i id=4 d addTuv(.docarr,91,"",mmma)
 ....i id=5 d addTuv(.docarr,92,"",mmma)
 ....i id=6 d addTuv(.docarr,93,"",mmma)
 ....i id=7 d addTuv(.docarr,94,"",mmma)
 ....//manipulace podle druhu spoje
 ....i id=1 d addTuv(.docarr,55,"",mmma) 	  						//manipulace vnitro
 ....i id=2 d addTuv(.docarr,56,"",mmma) 							//manipulace dalkova
 ....i id=3 d addTuv(.docarr,57,"",mmma)							//manipulace mesto
 ....i id=4 d addTuv(.docarr,58,"",mmma)							//manipulace primesto
 ....i id=5 d addTuv(.docarr,59,"",mmma)							//manipulace mezinarodni
 ....i id=6 d addTuv(.docarr,60,"",mmma)							//manipulace smluvni
 ....i id=7 d addTuv(.docarr,61,"",mmma)							//manipulace rezijni 
 ....s mmnc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",3)) 	//hodiny v noci
 ....d addTuv(.docarr,15,"",mmnc)
 ....s km=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",4)) 		//km
 ....d addTuv(.docarr,22,"",km)
 ....i id=1 d addTuv(.docarr,23,"",km)
 ....i id=2 d addTuv(.docarr,24,"",km)
 ....i id=3 d addTuv(.docarr,25,"",km)
 ....i id=4 d addTuv(.docarr,26,"",km)
 ....i id=5 d addTuv(.docarr,27,"",km)
 ....i id=6 d addTuv(.docarr,28,"",km)
 ....i id=7 d addTuv(.docarr,29,"",km)
 ....s mmcc=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",5)) 	//hodiny cekani
 ....d addTuv(.docarr,idwait,"",mmcc)								//d addTuv(.docarr,13,"",mmcc)
 ....d addTuv(.docarr,17,"",mmcc)									//hodiny cekani do provozu
 ....//doba provozu podle druhu spoje
 ....i id=1 d addTuv(.docarr,88,"",mmcc)
 ....i id=2 d addTuv(.docarr,89,"",mmcc)
 ....i id=3 d addTuv(.docarr,90,"",mmcc)
 ....i id=4 d addTuv(.docarr,91,"",mmcc)
 ....i id=5 d addTuv(.docarr,92,"",mmcc)
 ....i id=6 d addTuv(.docarr,93,"",mmcc)
 ....i id=7 d addTuv(.docarr,94,"",mmcc)
 ....//
 ....i +sv d addTuv(.docarr,20,"",(mmji+mmma))						//svatek
 ....i +sn d addTuvSn(.docarr,.arrmzd,sv,(mmji+mmma),dd)			//so+ne
 ....//prepis km a mm podle li a sp - jedna linka
 ....s li=$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",7))		//linka
 ....s sp=$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",8))		//spoj
 ....i li&sp d
 .....s pararr("arr",1,li,sp)=$g(pararr("arr",1,li,sp))+km			//km dle linky a spoje
 .....s pararr("arr",1,li,sp,hrl)=$g(pararr("arr",1,li,sp,hrl))+km	//km dle linky,spoje a dne
 .....s pararr("arr",3,li,sp)=$g(pararr("arr",3,li,sp))+mmji		//mm dle linky a spoje
 ....//prepis km a mm podle li a sp - rozpis
 ....s idcnt="" f  s idcnt=$o(docarr("arr","edv",hrl,"arr",idevd,id,"rzp",idcnt)) q:idcnt=""  d
 .....s mmji=$g(docarr("arr","edv",hrl,"arr",idevd,id,"rzp",idcnt,"dta",1))		//mm rozepisovane
 .....s km=$g(docarr("arr","edv",hrl,"arr",idevd,id,"rzp",idcnt,"dta",4))		//km rozepisovane
 .....s li=$g(docarr("arr","edv",hrl,"arr",idevd,id,"rzp",idcnt,"dta",5))		//linka
 .....s sp=$g(docarr("arr","edv",hrl,"arr",idevd,id,"rzp",idcnt,"dta",6))		//spoj
 .....i li&sp d
 ......s pararr("arr",1,li,sp)=$g(pararr("arr",1,li,sp))+km
 ......s pararr("arr",3,li,sp)=$g(pararr("arr",3,li,sp))+mmji
 ..//zpozdeni
 ..i idevd=97 d
 ...q:'$g(arrmzd("arr",1,0,28))													//je posun spoje
 ...s id="" f  s id=$o(docarr("arr","edv",hrl,"arr",idevd,id)) q:id=""  d
 ....s mm=+$g(docarr("arr","edv",hrl,"arr",idevd,id,"dta",1))					//hodiny zpozdeni
 ....d addTuv(.docarr,96,"",mm)
 //
 q 0
setTuv(arr,id,val) n (arr,id,val) s arr("arr","tuv",id)=val q
addTuv(arr,id1,id2,val)
 i +id1&+id2 s arr("arr","tuv",id1,id2)=$g(arr("arr","tuv",id1,id2))+val
 i +id1&'id2 s arr("arr","tuv",id1)=$g(arr("arr","tuv",id1))+val
 q
addTuvSn(arr,arrmzd,sv,val,dd) n (arr,arrmzd,sv,val,dd) q:(+sv)&(+$g(arrmzd("arr",1,0,9)))  d addTuv(.arr,21,"",val) d:dd=6 addTuv(.arr,111,"",val) d:dd=7 addTuv(.arr,112,"",val)
 //
gIdForWait(pararr,arrset)
 //
 //============================================
 //vrati id polozky pro zapis cekani do dokladu
 //podle nastaveni programu a modu turnusu
 //13 = cekani
 //99 = preuseni nezapoctene
 //============================================
 //
 //neni zaple vyhodnoceni do preruseni prace = cekani
 i '$p($g(arrset("arr",4,21)),"~",1) q 13
 //je zaple vyhodnoceni cekani a turnus nad 50 = cekani
 i +$g(pararr("dta",10)) q 13
 //je zaple vyhodnoceni cekani a turnus 50 = preruseni nezapoctene
 q 99
 //
 //vypocet fakturacnich dat pro dzva
mkFakDtaDz(idfa,nmsp,docarr,inarr,outarr,arrset)
 //inarr("par",1)=zp
 //inarr("par",2)=hrl jizdy
 //inarr("par",3)=priznak nevyhodnocovani vyrovnavaci doby
 n (idfa,nmsp,docarr,inarr,outarr,arrset) s $zt="err1" k outarr s err=""
 //v pripade, ze je rucne upravena cena, neprepocitavam
 i +$g(docarr("fak","dta",16))=1 q 0
 //====================================================
 //vymazani fakturacni vety a fakturacnich polozek
 k docarr("fak","dta") //fakturacni data
 k docarr("fak","itm") //fakturacni polozky
 s zp=$g(inarr("par",1)) s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv)
 // ne pro zaskolovani
 i $g(docarr("dta",7))="Z" q 0
 // ne pro pruvodci
 i $g(docarr("dta",7))="P" q 0
 // projdu turnusy a zjistim, zda se bude fakturovat + nactu parametry pro fakturaci
 // muze byt zadan jeden turnus se sazbami za km/cek
 // NEBO
 // jeden turnus se smluvni cenou a turnusy, ktere se nefakturuji
 s cnttu=0 s cnttufakszb=0 s cnttufaksml=0
 s hrl="" f  s hrl=$o(docarr("arr","edv",hrl)) q:hrl=""  d
 .s idtu="" f  s idtu=$o(docarr("arr","edv",hrl,"arr",1,idtu)) q:idtu=""  d
 ..s tu=$p(idtu,"~",1)
 ..s cnttu=cnttu+1
 ..k arr s err=$$gTurFakDta^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arr)
 ..i $g(arr("dta",1))=1 d
 ...s docarr("fak","dta",1)=$g(arr("dta",1)) 			//priznak fakturace (0,"" ne/ 1 ano) (pro rychle vyhledani dokladu)
 ...s docarr("fak","dta",2)=$g(arr("dta",2)) 			//id zakaznika pro ktereho se bude fakturovat
 ...s docarr("fak","dta",3)=$g(arr("dta",3)) 			//druh zajezdu (idCis=1)
 ...s docarr("fak","dta",4)=$g(arr("dta",4)) 			//zpusob fakturace (1=fakturovat za km, 3=smluvni cena)
 ...i $g(arr("dta",4))=1 s cnttufakszb=cnttufakszb+1	//fakturace za km/cek
 ...i $g(arr("dta",4))=3 s cnttufaksml=cnttufaksml+1	//fakturace sml.cena
 ...s docarr("fak","dta",5)=$g(arr("dta",5)) 			//idprv pro fakturaci (kde se bude fakturovat), muze byt ""
 ...s docarr("fak","dta",6)=$g(arr("dta",6)) 			//vystaveni faktury (S/samostatne, T/tydne, M/mesicne)
 ...s docarr("fak","dta",7)=$g(arr("dta",7)) 			//mena pro fakturaci (CZK/EUR)
 ...s docarr("fak","dta",8)=$g(arr("dta",8)) 			//mena pro prepocet faktury (""/EUR)
 ...s docarr("fak","dta",9)=$g(arr("dta",9)) 			//sazba za km obsazeny
 ...s docarr("fak","dta",10)=$g(arr("dta",10))			//sazba za km neobsazeny
 ...s docarr("fak","dta",11)=$g(arr("dta",11)) 			//sazba za 15min cekani
 ...s docarr("fak","dta",12)=$g(arr("dta",12)) 			//smluvni cena bez DPH
 ...s docarr("fak","dta",13)=$g(arr("dta",13)) 			//smluvni cena s DPH
 ...s docarr("fak","dta",15)=$g(arr("dta",14)) 			//ns odberatele pro vnitrofakturu
 ...s docarr("fak","dta",17)=$g(arr("dta",15))			//id zakaznika na ktereho jde trzba (vnitrofaktura)
 ...s docarr("fak","dta",18)=$g(arr("dta",16))			//do doby cekani zapocitat manipulace 
 ...s docarr("fak","dta",19)=$g(arr("dta",17))			//do doby cekani zapocitat vyrovnavaci dobu
 ...s docarr("fak","dta",20)=$g(arr("dta",18))			//zpusob zaokrouhleni cekani pro fakturaci (0 dle nastavení prg / 1 čtvrthodiny čekání dolu / 2 čtvrthodiny čekání nahoru) 
 ...s docarr("fak","dta",21)=$g(arr("dta",19))			//zpusob vypoctu cekani pro fakturaci (0 veskere cekani na dokladu / 1 cekani pred a po spoji do vyse 15 min)
 ...s docarr("fak","dta",22)=$g(arr("dta",20))			//do doby cekani zapocitat vse mimo doby jizdy
 //========================================================================================
 //pro mod fakturace na firmu podle provozovny vozidla udelam korekci faktuarcni provozovny
 //========================================================================================
 k arro s err=##class(ALVA.ADZPRACOVANI.FAK1).gFakIdFa(idfa,nmsp,idprv,$g(inarr("par",2)),$g(docarr("dta",6)),"",.arro)
 i $g(arro("dta",1))=1 {
	 i $g(arro("dta",4))'="" s docarr("fak","dta",5)=$g(arro("dta",4))
 }
 //================
 //kontrola turnusu
 //================
 //fakturace pouze pro jeden turnus za sazby
 i (cnttufakszb&(cnttu>1)) k docarr("fak","dta") k docarr("fak","itm") 
 //fakturace pouze pro jeden turnus za smluvni cenu
 i (cnttufaksml>1) k docarr("fak","dta") k docarr("fak","itm")
 //turnus se fakturuje
 i $g(docarr("fak","dta",1))=1 d
 .//danova sazba podle druhu zajezdu k datu ukonceni
 .s iddza=$g(docarr("fak","dta",3))
 .//datum posledni porizene cinnosti 
 .s hrl=$o(docarr("arr","edv",""),-1)
 .//uprava hrl podle cinnosti s casovou pozici
 .i $o(docarr("arr","tur",""))'="" s hrl=$g(docarr("dta",4))+(($o(docarr("arr","tur",""),-1))\1440)
 .//dan v %
 .k arr s err=$$gDanSzbValDza^OBapiED(idfa,$$gSystemNmsp^OBapiED(),nmsp,iddza,hrl,"",.arr) zt:+err "merr" s err=""
 .s docarr("fak","dta",14)=$g(arr("dta",1))
 .//nactu nastaveni programu
 .i '$d(arrset("arr")) s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 .//nastaveni jak zaokrouhlit cekani
 .//dle nastaveni programu
 .s setZaokCek=+$g(arrset("arr",3,1))
 .//dle nastaveni turnusu
 .i +$g(docarr("fak","dta",20)) d
 ..i +$g(docarr("fak","dta",20))=1 s setZaokCek=0
 ..i +$g(docarr("fak","dta",20))=2 s setZaokCek=1
 .s fcek15=0  s:+$g(setZaokCek) fcek15=14
 .//=======================
 .//fakturace za km, cekani
 .//=======================
 .i docarr("fak","dta",4)=1 d   //km
 ..// km obsazene
 ..s km=$g(docarr("arr","tuv",22))-$g(docarr("arr","tuv",29))	//km celkove - km rezijni
 ..s szb=$g(docarr("fak","dta",9))
 ..i km&szb d
 ...s docarr("fak","itm",10,"dta",1)=(km*szb)
 ...s docarr("fak","itm",10,"dta",2)=szb
 ...s docarr("fak","itm",10,"dta",3)=km
 ..// km neobsazene
 ..s km=+$g(docarr("arr","tuv",29))
 ..s szb=$g(docarr("fak","dta",10))
 ..i km&szb d 
 ...s docarr("fak","itm",11,"dta",1)=(km*szb)
 ...s docarr("fak","itm",11,"dta",2)=szb
 ...s docarr("fak","itm",11,"dta",3)=km
 ..// =====================================================
 ..// cekani pro fakturaci - podle nastaveni veskere cekani
 ..// =====================================================
 ..i '$g(docarr("fak","dta",21)) d
 ...// cele cekani
 ...s mm=$g(docarr("arr","tuv",13))
 ...// +manipulace
 ...i $g(docarr("fak","dta",18))=1 s mm=mm+$g(docarr("arr","tuv",2))
 ...// +vyrov.doba
 ...i $g(docarr("fak","dta",19))=1 s mm=mm+$g(docarr("arr","tuv",8))
 ...// do doby cekani vse mimo jizdy (doba provozu mimo jizdy)
 ...i $g(docarr("fak","dta",22))=1 s mm=($g(docarr("arr","tuv",17))-$g(docarr("arr","tuv",1)))
 ..// ====================================================================================
 ..// cekani pro fakturaci - podle nastaveni pouze cekani pred a po spoji do vyse 15 minut
 ..// ====================================================================================
 ..i +$g(docarr("fak","dta",21)) d
 ...// vytvorim pole s prubehem prace
 ...k tmpdocarr,tmparri,tmpwrk
 ...s tmparri("par",1)=$g(inarr("par",1))	//zp
 ...s tmparri("par",2)=$g(inarr("par",2))	//dat
 ...s tmparri("dta",14)=$g(inarr("par",3))	//nevyhodnocuje se vyrovnavaci doba
 ...s tmparri("par",12)=1					//fce vrati prubeh prace
 ...m tmpdocarr("arr","tur")=docarr("arr","tur")
 ...s err=$$calcTur^OBapiED(idfa,nmsp,.tmpdocarr,"",.tmparri,.tmpwrk,"","") zt:+err "merr" s err=""
 ...//prevod vnitrnich pauz ve spojich na jizdu, poznam podle toho ze na 11 pozici je 1 
 ...s mm="" f  s mm=$o(^||wrk.ALVA.AD(tmpwrk,mm)) q:mm=""  d
 ....s idcin=$p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",2)
 ....i (idcin=0)&($p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",11)=1) s $p(^||wrk.ALVA.AD(tmpwrk,mm),"~",2)=3
 ...//do cekani se napocitavaji manipulace, prevod manipulaci na cekani (3.1 -> 0)
 ...i $g(docarr("fak","dta",18))=1 d
 ....s mm="" f  s mm=$o(^||wrk.ALVA.AD(tmpwrk,mm)) q:mm=""  d
 .....s idcin=$p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",2)
 .....i idcin=3.1 s $p(^||wrk.ALVA.AD(tmpwrk,mm),"~",2)=0
 ...//do cekani se napocitava vyrovnavaci doba, prevod vyrovnavaci doby na cekani (-1 -> 0)
 ...i $g(docarr("fak","dta",19))=1 d
 ....s mm="" f  s mm=$o(^||wrk.ALVA.AD(tmpwrk,mm)) q:mm=""  d
 .....s idcin=$p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",2)
 .....i idcin=-1 s $p(^||wrk.ALVA.AD(tmpwrk,mm),"~",2)=0
 ...//do cekani se napocitava vse mimo doby jizdy (vse mimo 3 -> 0)
 ...i $g(docarr("fak","dta",22))=1 d
 ....s mm="" f  s mm=$o(^||wrk.ALVA.AD(tmpwrk,mm)) q:mm=""  d
 .....s idcin=$p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",2)
 .....i idcin'=3 s $p(^||wrk.ALVA.AD(tmpwrk,mm),"~",2)=0
 ...//napocet cekani
 ...s isbesp=0	//priznak predchoziho spoje
 ...s sumcek=0  //suma validniho cekani
 ...s actcek=0  //aktualni stav cekani
 ...s mm="" f  s mm=$o(^||wrk.ALVA.AD(tmpwrk,mm)) q:mm=""  d
 ....s idcin=$p($g(^||wrk.ALVA.AD(tmpwrk,mm)),"~",2)
 ....i 'idcin s actcek=actcek+1
 ....//spoj
 ....i idcin=3 d
 .....s limcek=15 i isbesp s limcek=limcek*2
 .....i actcek>limcek s actcek=limcek
 .....s sumcek=sumcek+actcek
 .....s actcek=0
 .....s isbesp=1
 ...//cekani po poslednim spoji
 ...i (actcek&isbesp) d
 ....s limcek=15
 ....i actcek>limcek s actcek=limcek
 ....s sumcek=sumcek+actcek
 ...k ^||wrk.ALVA.AD(tmpwrk)
 ...s mm=sumcek
 ..//==================================
 ..//zaokrouhleni cekani na ctvrthodiny
 ..//==================================
 ..s mm=(mm+fcek15)\15
 ..s szb=$g(docarr("fak","dta",11))
 ..i mm&szb d 
 ...s docarr("fak","itm",30,"dta",1)=(mm*szb)
 ...s docarr("fak","itm",30,"dta",2)=szb
 ...s docarr("fak","itm",30,"dta",3)=mm
 .//============
 .//smluvni cena
 .//============
 .i docarr("fak","dta",4)=3 d
 ..// smluvni cena bez dane
 ..i +$g(docarr("fak","dta",12)) d
 ...s docarr("fak","itm",50,"dta",1)=$g(docarr("fak","dta",12))
 ...s docarr("fak","itm",50,"dta",2)=""
 ...s docarr("fak","itm",50,"dta",3)=""
 ..// smluvni cena s dani
 ..i +$g(docarr("fak","dta",13)) d
 ...s docarr("fak","itm",50,"dta",1)=($g(docarr("fak","dta",13))-$$gDanVal^OBapiED($g(docarr("fak","dta",13)),$g(docarr("fak","dta",14))))
 ...s docarr("fak","itm",50,"dta",2)=""
 ...s docarr("fak","itm",50,"dta",3)=""
 q 0
err s $zt="" k pararr k docarr q "1~"_$ze_"/"_$tr($g(err),"~","/")
err1 s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDDzInfo" type="INT" languagemode="0" timestamp="65772,41441.028117"><![CDATA[
OBapiEDDzInfo q
 //
 // popis pole s daty dzva out("dta",cnt)=...
 // ------------------------------------
 // cnt - pocitadlo
 // 01 - STATUT 	- (0 predznaceno / 1 porizeno / 2 prevedeno FAK / 3 zruseno)
 // 02 - DPOR 		- datum porizeni  (horlog)
 // 04 - ZAC 		- datum zacatku (horlog)
 // 05 - ZI 		- zimni prirazka v % (nepouziva-li se L/Z spotreba)
 // 06 - SPZ 		- RZ autobusu
 // 07 - TAK 		- tachometr konec nebo ("Z" zaskolovani / "P" pruvodci)
 // 08 - TAZ 		- tachometr zacatek
 // 09 - KTA 		- koeficient tachometru
 // 10 - TAKM 		- km z tachometru (uz upravene koeficientem)
 // 11 - PH 		- spotreba PHM (tankovani)
 // 12 - KPH 		- koeficient spotreby PH (z auta)
 // 13 - NPH 		- spotreba PHM na 100 km
 // 14 - DNU 		- pocet dnu DZVA
 // 15 - NORMA 		- normovana spotreba PH (na max.pocet des.mist)
 // 16 - NS 		- nakladove stredisko auta
 // 17 - KLOUB 		- kloubovy autobus (0 ne / 1 ano)
 // 18 - TYP 		- technicky typ auta
 // 19 - ltPHa 		- spotreba alternat. PHM (tankovani nafta pro topeni)
 // 20 - ltPHb 		- spotreba alternat. PHM (tankovani AdBlue - močovina)
 // 21 - spzPRI 	- RZ privesu
 // 22 - kmPRI 		- km privesu
 // 23 - kmPH  		- stav tachometru pri tankovani PHM
 // 24 - ltFAME		- spotreba PHM FAME
 // 25 - ltOLEJ		- olej
 // 26 - tmTopeni   - doba topeni(min)
 // 27 - ltB30		- spotreba PHM B30
 // 28 - hrlFAK     - datum prevodu do fakturace(horlog)
 // 29 - TAKALIB	- tachometr, pocet km kalibrace
 // 30 - dopDIE		- dopocet diet  0 ne / 1 od pulnoci / 2 do pulnoci / 3 od pulnoci a do pulnoci
 // 31 - POSILA     - posilový 0 ne / 1 ano
 // 32 - SUBRZ		- priznak subdodaneho vozidla 0/1 
 // 33 - SUBRZIC    - IC spolecnosti, ktera subdodala vozidlo
 // 34 - SMZVOL		- smena z volna 0/1 
 //
 // popis pole s daty dzva out("arr","tuv",cnt)=...
 // ------------------------------------
 // cnt - pocitadlo
 // toto pole je totozne s polem out("arr","tuv" v turnusech, je popsano tam
 // 
 // popis pole s daty dzva out("osc",osc,"tuv",cnt)=...
 // ------------------------------------
 // cnt - pocitadlo
 // toto pole je totozne s polem out("arr","tuv" v turnusech,je popsano tam
 // (pokud je jeden ridic, je to totozne s polem out("arr","tuv",cnt) (na doklade je to jen jednou))
 // (pokud je vice ridicu, ma kazdy svoji vetu (muzou byt jinak hodiny, tarif,...)
 // 
 // popis pole s daty dzva out("osc",osc,"dta",cnt)=...
 // ---------------------------------------------------
 // cnt = pocitadlo
 //  1 - pohotovost pri spolujizde ridice (min)
 //  2 - priplatek za nocovne (0 ano / 1 ne)
 //  3 - pendl (0 ne / 1 ano) ano = ridic nejede cely turnus, budou mu zadány vlastni mzd.udaje 
 //  4 - hodiny jízdy (min)
 //  5 - hodiny manipulaci (min)
 //  6 - hodiny ostatnich praci (min)
 //  7 - hodiny DODK (min)
 //  8 - hodiny cekani (min)
 //  9 - hodiny v noci (min)
 // 10 - diety (kč)
 // 11 - km celkem (km)
 // 12 - M zpusob vypoctu mzdy zatim A ano / F ne, vymazou se kc a vykony mimo km / N, nepocita se mzda, nejsou kc, položky ... ... do budoucna Z zaskolovani, doprogramovat ! 
 // 13 - hodiny SoNe (min)
 // 14 - hodiny Sv   (min)
 // 15 - fixni priplatek ke mzde (0 ano / 1 ne) 
 //
 // popis pole s daty dzva out("osc",osc,"par",cnt)=...
 // cnt = pocitadlo
 //  1 - poradi ridice
 //  2 - ns ridice
 //  3 - zpusob vypoctu mzdy pri casovych mzdach UH (1 jednomuzny / 2 dvoumuzny / 3 dvoumuzny obden / 4 pohotovost / // // 5 tarif)
 //  4 - subdodany ridic 0/1
 //  5 - IC spolecnosti, ktera subdodala ridice
 // 
 // popis pole s daty dzva out("arr","edv",hrl,"arr",idedv,...)=...
 // ---------------------------------------------------------------
 // idevd=1 ... porizeny turnus
 //      ,idtu ... tu~liod~spod~lido~spdo
 //      ,idtu,"par",1)=poradove cislo porizene cinnosti
 //      ,idtu,"dta",1)=koeficient mzdy (%)
 //      ,idtu,"dta",2)=dodk (min)
 //      ,idtu,"dta",3)=priplatek nocovne (kc)
 //      ,idtu,"dta",4)=diety (kc)
 //      ,idtu,"dta",5)=celkove km (km)
 //      ,idtu,"dta",6)=zapoctene cek. z turnusu (%)
 //      ,idtu,"dta",7)=dopocet do uvazku pres vyrovnavaci dobu (JI)
 //      ,idtu,"dta",8)=fixni priplatek ke mzde (kc)
 //      ,idtu,"dta",9)=fixni priplatek k cekani(kc)
 //      ,idtu,"dta",10)=dodk v noci z dodk nad turnusem(%)
 //      ,idtu,"dta",11)=neproplacet diety - priznak 0/1 = neproplacet
 //      ,idtu,"dta",12)=sazba pro pausalni mzdy (cis. 46)
 //      ,idtu,"dta",13)=neproplacet cekani (0/1)
 //      ,idtu,"dta",14)=nevyhodnocovat vyr.dobu (0/1)
 //      ,idtu,"dta",15)=id pro zahranicni diety
 //      ,idtu,"dta",16)=id sazby priplatku za odpracovane hodiny turnusu
 // idevd=2 ... +linka,spoj
 //      ,idsp ... li~sp
 //      ,idsp,"par",1)=poradove cislo porizene cinnosti
 //      ,idsp,"dta",1)=doba jizdy (min)
 //      ,idsp,"dta",2)=doba cekani (min)
 //      ,idsp,"dta",3)=celkove km (km)
 //      ,idsp,"dta",4)=druh spoje (ciselnik)
 //      ,idsp,"dta",5)=+/-
 //      ,idsp,"dta",6)=prepravni system (je-li jeden)
 //      ,idsp,"dta",7)=upraveny cas odjezdu (min)
 //      ,idsp,"dta",8)=upraveny cas prijezdu (min)
 //      ,idsp,"dta",9)=upravene celkove km (km)
 //      ,idsp,"dta",10)=informace o uprave (txt)
 //      ,idsp,"dta",11)=id turnusu
 //      ,idsp,"prs",idprs,"dta",1)=km presne dle prs (je-li vice prs)
 //      ,idsp,"prs",idprs,"dta",2)=km tarifni dle prs (je-li vice prs)
 // idevd=3 ... neprepravni vykony
 // neprepravni vykony
 //      ,id ... id neprepravniho vykonu
 //      ,id,"dta",1)=hodiny v noci (min)
 //      ,id,"dta",2)=hodiny (min)
 //      ,id,"dta",3)=odecet z cekani (min)
 //      ,id,"dta",4)=pocet zasilek
 //      ,id,"dta",5)=priplatek kc
 //      ,id,"dta",6)=fixni kc k turnusu
 //      ,id,"dta",7)=kc misto hodin
 //      ,id,"dta",8)=priplatek del.smena (liberec)
 //      ,id,"dta",9)=priplatek za nocovani
 //      ,id,"dta",10)=informace (txt)
 // idevd=4 ... vlozeny vykon
 //      ,"dta",1)=km
 //      ,"dta",2)=cas (min)
 // idevd=5 ... rezijni km
 //      ,id ... id rezinich km
 //      ,id,"dta",1)=celkove km
 //      ,id,"dta",2)=hodiny (min)
 //      ,id,"dta",3)=cekani (min)
 //      ,id,"dta",4)=hodiny noc (min)
 //      ,id,"dta",5)=prepravni system (je-li jeden)
 //      ,id,"dta",6)=linka pro odvozeni prepravniho systemu
 //      ,id,"dta",7)=spoj pro odvozeni prepravniho systemu
 //      ,id,"prs",idprs,"dta",1)=km presne dle prs (je-li vice prs)
 // idevd=6 ... diety
 //      ,"dta",1)=diety
 // idevd=7 ... casti spoju
 //      ,id ... id druhu spoje
 //      ,id,"dta",1)=doba jizdy(min)
 //      ,id,"dta",2)=doba manipulace(min)
 //      ,id,"dta",3)=hodiny v noci(min)
 //      ,id,"dta",4)=celkove km(km)
 //      ,id,"dta",5)=doba cekani(min)
 //      ,id,"dta",6)=prs (je-li jeden)
 //      ,id,"dta",7)=linka
 //      ,id,"dta",8)=spoj
 //      ,id,"prs",idprs,"dta",1)=km presne dle prs (je-li vice prs)
 //         ... casti spoju-rozpis
 //                idcnt ... poradove cislo
 //      ,id,"rzp",idcnt,"dta",1)=hodiny jizdy(min)
 //      ,id,"rzp",idcnt,"dta",2)=hodiny manipulaci(min)
 //      ,id,"rzp",idcnt,"dta",3)=hodiny noc(min)
 //      ,id,"rzp",idcnt,"dta",4)=km
 //      ,id,"rzp",idcnt,"dta",5)=linka
 //      ,id,"rzp",idcnt,"dta",6)=spoj
 //      ,id,"rzp",idcnt,"prs",prs,"dta",1)=km presne dle prs
 // idevd=8 ... preruseni prace
 //      ,id=cas od (min)
 //		 ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",1)=cas do (min)
 // idevd=9 ... prejezd 
 //      ,id=cas~poradi ... cas od (min, v ramci dne)~ poradi (pro pripad, ze se bude vice prejezdu v jeden den)
 //		 ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",1)=cas do (min)
 //      ,id,"dta",2)=km
 //      ,id,"dta",3)=id zastavky od
 //      ,id,"dta",4)=id zastavky do
 //      ,id,"dta",5)=id prejezdu (4/pristaveni,5/odstaveni,6/prejezd)
 //      ,id,"dta",6)=atr.hrazeneho prejezdu (0/1)
 //      ,id,"dta",7)=id turnusu
 // idevd=10 ... neprepravni cinnost, vlozeny vykon
 //      ,id=cas~poradi ... cas od (min, v ramci dne)~ poradi (pro pripad, ze se bude vice cinnosti v jeden den)
 //		 ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",1)=cas do (min)
 //      ,id,"dta",2)=id cinnosti
 //      ,id,"dta",3)=id pro ostatni prace
 //      ,id,"dta",4)=id turnusu
 //      ,id,"dta",5)=km pro vlozeny vykon
 // idevd=97 ... posun konce spoje - zpozdeni (posun konce spoje o xx min)
 //      ,id=cas~poradi ... cas od (min, v ramci dne)~ poradi (pro pripad, ze se bude zpozdovat vice cinnosti v jeden den)
 //      ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",1)=posun (min)
 //      ,id,"dta",2)=linka
 //      ,id,"dta",3)=spoj
 //      ,id,"dta",4)=informace
 // idevd=98 ... posun cinnosti (posun cinnosti v prubehu o xx min)
 //      ,id=cas~poradi ... cas od (min, v ramci dne)~ poradi (pro pripad, ze se bude posouvat vice cinnosti v jeden den)
 //      ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",1)=posun (min)
 // idevd=99 ... rusene cinnosti (odecteno z prubehu)
 //      ,id=cas~poradi ... cas od (min, v ramci dne)~ poradi (pro pripad, ze se bude odecitat vice cinnosti v jeden den)
 //      ,id,"par",1)=poradove cislo porizene cinnosti
 //      ,id,"dta",...)=... ... struktura shodna s polem "tuv"
 //
 // popis dalsich parametru out("arr",id,...)=...
 // ------------------------------------
 // out("arr",1,"dta",1)=zacatek ph ... stav v nadrzi (lt)
 // out("arr",1,"dta",2)=konec ph ... stav v nadrzi (lt)
 // out("arr",1,"dta",3)=lt ph ... tankovano (lt)
 // out("arr",2,"dta",1)=prirazka phm rucne porizena (%)
 // out("arr",3,"stt",1)=kontrola vozu - stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 // out("arr",3,"dta",1)=kontrola vozu - kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 // out("arr",3,"dsc",cnt)=txt  ... zavada, popis, cnt je pocitadlo
 // out("arr",4)=presne km dle prepravnich systemu (prehled za doklad) "arr",4,prs)=km ; "arr",4,prs,dsp)=km ; "arr",4,prs,dsp,typ)=km
 // out("arr",5)=tarifni km dle prepravnich sytemu (prehled za doklad) "arr",5,prs)=km ; "arr",5,prs,dsp)=km
 // out("arr",6,"dta",1)=vychozi stav elektromeru pro trolejbus
 // out("arr",6,"dta",2)=koncovy stav elektromeru pro trolejbus
 // out("arr",7,"arr",iddoc,"dta",1)=phm			... doklady s cerpanym phm (iddoc je id dokladu (faktury), phm je cerpane phm)
 // out("arr",7,"cop","dta",1)=hrl posledni zmeny	... doklady s cerpanym phm
 // out("arr",7,"cop","dta",2)=jmeno uzivatele		... doklady s cerpanym phm
 // out("arr",8,"dta",1)=id faktury z fakturace (rok~fakstr~cislo~idfa) ... odkaz na vystavenou fakturu
 //	out("arr",8,"arr",cnt,"dta",1)=id faktury z fakturace (rok~fakstr~cislo~idfa) ... odkaz na vystavenou fakturu, historie
 //	out("arr",8,"arr",cnt,"par",1)=horlog prevodu do fakturace
 //	out("arr",8,"arr",cnt,"par",2)=jmeno uzivatele, ktery prevedl fakturu
 // out("arr",9)=dopoctene pauzy na doklade "arr",9,id,mmod)=mmdo; id=vd(id=-1),ppz(-2),ppn(-3) - od 201601
 // out("arr",10)=zahranicni diety ... "arr",10,idzdie,mena)=dieta~kurz~mnozstvi~hrlkurzu
 // fakturacni udaje zakladni udaje
 // -------------------------------
 // out("fak","dta",1)=priznak fakturace (0,"" ne/ 1 ano) (pro rychle vyhledani dokladu)
 // out("fak","dta",2)=id zakaznika pro ktereho se bude fakturovat
 // out("fak","dta",3)=druh zajezdu (idCis=1)
 // out("fak","dta",4)=zpusob fakturace (1=fakturovat za km, 3=smluvni cena)
 // out("fak","dta",5)=idprv pro fakturaci (kde se bude fakturovat), muze byt ""
 // out("fak","dta",6)=vystaveni faktury (S/samostatne, T/tydne, M/mesicne)
 // out("fak","dta",7)=mena pro fakturaci (CZK/EUR)
 // out("fak","dta",8)=mena pro prepocet faktury (""/EUR)
 // out("fak","dta",9)=sazba za km obsazeny
 // out("fak","dta",10)=sazba za km neobsazeny
 // out("fak","dta",11)=sazba za 15min cekani
 // out("fak","dta",12)=smluvni cena bez DPH
 // out("fak","dta",13)=smluvni cena s DPH
 // out("fak","dta",14)=%dan (pocitana k datu ukonceni)
 // out("fak","dta",15)=ns odberatele pro vnitrofakturu
 // out("fak","dta",16)=priznak rucni upravy ceny 0/1
 // out("fak","dta",17)=id zakaznika na ktereho jde trzba (v pripade vnitrofaktury)
 // out("fak","dta",18)=zahrnout do doby cekani pro fakturaci manipulace (0/1)
 // out("fak","dta",19)=zahrnout do doby cekani pro fakturaci vyrovnavaci dobu (0/1)
 // out("fak","dta",20)=jak zaokrouhlit čekání pro fakturaci 0 dle nastavení prg / 1 čtvrthodiny čekání dolu / 2 čtvrthodiny čekání nahoru
 // out("fak","dta",21)=zpusob vypoctu cekani pro fakturaci 0 veskere cekani na dokladu / 1 cekani pred a po spoji do vyse 15 min
 // out("fak","dta",22)=zahrnout do doby cekani vse, mimo jizdy (0/1)
 //
 // fakturacni polozky
 // ------------------
 // out("fak","itm",idpol,"dta",1)=kc celkem (zaklad)
 // out("fak","itm",idpol,"dta",2)=kc sazba
 // out("fak","itm",idpol,"dta",3)=mnozstvi
 //
 // zaznam o zmenach na doklade
 // ---------------------------
 // out("arr","cop","dta",1)=horlog posledni zmeny
 // out("arr","cop","dta",2)=jmeno uzivatele posledni zmeny
 // out("arr","cop","dta",3)=jmeno uzivatele kdo doklad poridil
]]></Routine>


<Routine name="OBapiEDFce" type="INT" languagemode="0" timestamp="65724,33962.217668"><![CDATA[
OBapiEDFce q
 // obecne funkce
 // -------------
ntd(hrl)
 // $$ntd(hrl,par) - transformace numera na dd (den textove)
 //--------------------------------------------------------------------------
 s $zt="err1"
 q:'hrl ""
 q $p("Po:Út:St:Čt:Pá:So:Ne",":",hrl+3#7+1)
nmm(mm)
 // $$nmm(mm) - vraci nazev mesice
 //--------------------------------------------------------------------------
 s $zt="err1"
 q:'mm ""
 q $p("leden~únor~březen~duben~květen~červen~červenec~srpen~září~říjen~listopad~prosinec","~",mm)
nd(hrl,par)
 // $$nd(hrl,par) - transformace numera na datum dd.mm.rrrr (par=1 dd.mm.rr)
 //--------------------------------------------------------------------------
 s $zt="err1"
 n dt,rr
 s dt=##class(ALVA.GENERALAPI.Date).horToDate(+hrl)
 i $p(dt,".",3)<100 {
	 s $p(dt,".",3)=$p(dt,".",3)+1900 
 }
 i par=1 {
	 s rr=$p(dt,".",3)#100
	 i rr<10 s rr="0"_rr
	 s $p(dt,".",3)=rr
 }
 q dt
dn(dt)
 // $$dn(dt) - transformace datumu na numero
 //--------------------------------------------------------------------------
 s $zt="err1"
 n rok
 s dt=$tr(dt,"/",".")	//nekdy prijde z VB datum s /
 s rok=$p(dt,".",3)
 //prevod dd.mm.rr na dd.mm.rrrr
 i rok<100 {
	 i rok>50 {
		 s rok=rok+1900
	 }
	 else {
		 s rok=rok+2000
	 }
	 s $p(dt,".",3)=rok
 }
 s dt=$tr(dt,".","/")
 s dt=##class(ALVA.GENERALAPI.Date).DateToHor(dt)
 q dt
fhm(h)
 // formatovani casu na hh:mm
 s h=$tr(h,":",".") s h=$j(h,0,2) s:h<10 h="0"_h s h=$tr(h,".",":") q h
mh(m)
 // $$mh(m) - transformace minut na hh.mm
 //--------------------------------------------------------------------------
 s $zt="err1"
 i m<0 s m=-m,m=m+.5\1,m=m\60+(m#60/100)*-1 q m
 s m=m+.5\1
 q m\60+(m#60/100)
 //
mc(m)
 // $$mc(m) - transformace minut na hod.ciselne 90 min = 1.5 hod (dve des.mista)
 //-----------------------------------------------------------------------------
 s $zt="err1"
 i m<0 s m=-m,m=m\60+(m#60/60+.005\.01/100)*-1 q m
 q m\60+(m#60/60+.005\.01/100)
 //
hm(h)
 // $$hm(h) - transformace hh.mm na mm
 //--------------------------------------------------------------------------
 s $zt="err1"
 n flz s flz=1 s:h<0 flz=-1 s h=h*flz
 q (((h\1*60)+((h#1)*100))*flz)
 //
hs(h)
 // $$hs(h) - transformace hh.mm.ss na sec
 //--------------------------------------------------------------------------
 s $zt="err1"
 n hh,mm,ss s hh=$p(h,".",1) s mm=$p(h,".",2) s ss=$p(h,".",3)
 q ((hh*3600)+(mm*60)+ss)
 //
sh(s)
 // $$sh(s) - transformace sec na hh.mm.ss
 //--------------------------------------------------------------------------
 s $zt="err1"
 n flz,hh,mm,ss,val
 s flz=1 i s<0 s flz=-1 s s=s*flz
 s ss=s#60 s s=(s\60) s:+ss<10 ss="0"_+ss
 s mm=s#60 s s=(s\60) s:+mm<10 mm="0"_+mm
 s hh=s#60 s s=(s\60) s:+hh<10 hh="0"_+hh
 s:flz<0 hh="-"_hh
 s val=hh_"."_mm_"."_ss
 q val
 //
md(m)
 // $$md(m) - zjisti z minut pocet dnu
 // pr. 360 - 1 den (6.00)
 //    1800 - 2 dny (6.00)
 s $zt="err1"
 n cnt
 s cnt=0 f  q:m'>1440  s m=m-1440 s cnt=cnt+1
 s:m cnt=cnt+1
 q cnt
 //
dhm(hrlFrom,tmFrom,hrlTo,tmTo)
 // $$dhm(hrlFrom,tmFrom,hrlTo,tmTo) - zjisti pocet minut
 //                                    (intervalu hrlFrom,tmFrom - hrlTo,hrlTo)
 // hrlFrom,hrlTo je dat ve formatu hrl
 // tmFrom,tmTo je cas v min od pocatku dne (max.1440)
 s $zt="err1"
 n (hrlFrom,tmFrom,hrlTo,tmTo) s m=""
 //
 s:'hrlTo hrlTo=hrlFrom
 s:tmTo="" tmTo=tmFrom
 //
 q:hrlFrom>hrlTo m
 q:(tmTo<tmFrom)&(hrlTo'>hrlFrom) m
 //
 s m=(((hrlTo-hrlFrom)*1440)+tmTo)-tmFrom
 //
 q m
 //
rrrrmm(rrmm)
 // $$rrrrmm(rrmm) - transformace rrmm na rrrrmm
 //--------------------------------------------------------------------------
 n rr,mm
 s rr=rrmm\100 s mm=rrmm#100
 i rr?4n q rrmm
 s rr=$s(rr<50:2000,1:1900)+rr
 q (rr*100)+mm
 //
rrrr(rr)
 // $$rrrr(rr) - transformace rr na rrrr
 //--------------------------------------------------------------------------
 q:rr?4n rr
 q $s(rr<50:2000,1:1900)+rr
 //
gArrRrmm(rrmmod,rrmmdo,par,out)
 // $$gArrRrmm(rrmmod,rrmmdo,par,.out) vytvori pole obdobi out(rrmm)=""
 //  par=0 vystup je v rrrrmm
 //  par=1 vystup je v rrmm
 // --------------------------------------------------------------------------
 s $zt="err2"
 n rr,mm,end
 k out
 s:rrmmdo="" rrmmdo=rrmmod
 s rrmmod=$$rrrrmm^OBapiED(rrmmod) s rrmmdo=$$rrrrmm^OBapiED(rrmmdo)
 s rr=rrmmod\100 s mm=rrmmod#100
 s end=0
 s:'par out(rr*100+mm)=""
 s:par out(rr#100*100+mm)=""
 f  d  q:end
 .s mm=mm+1 S:mm>12 mm=1,rr=rr+1
 .i ((rr*100+mm)>rrmmdo) s end=1 q
 .s:'par out(rr*100+mm)=""
 .s:par out(rr#100*100+mm)=""
 q 0
gArrRrmmFromHrl(hrlfrom,hrlto,par,out)
 // $$gArrRrmmFromHrl(hrlfrom,hrlto,par,.out) vytvori pole obdobi out(rrmm)=""
 //  par=0 vystup je v rrrrmm
 //  par=1 vystup je v rrmm
 // --------------------------------------------------------------------------
 s $zt="err2"
 n rr,mm,end
 k out s par=$g(par)
 f hrl=hrlfrom:1:hrlto d
 .s dat=$$nd^OBapiED(hrl,0)
 .s mm=$p(dat,".",2) s rr=$p(dat,".",3)
 .i 'par s out(rr*100+mm)=""
 .i +par s out(rr#100*100+mm)=""
 q 0
gFaDz(idfa)
 // $$gFaDz(idfa) - vrati dz pro idfa
 //--------------------------------------------------------------------------
 n i,o,err
 //s err=$$gIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),.i,.o) q:+err ""
 s err=$$gDzIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),.i,.o) q:+err ""
 q $g(o("dta",1))
mkZP(idfa,idprv,idns,in,out)
 n (idfa,idprv,idns,in,out)
 s $zt="err2" k out s err=""
 s dz=$$gFaDz^OBapiED(idfa) i 'dz q "1~pro "_idfa_" nelze odvodit DZ"
 i idprv s out=dz*100+idprv
 i idns k arr s err=$$gNs^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),idns,"",.arr) s idprv=$g(arr("dta",10)) q:'idprv "1~pro "_idns_" nelze odvodit provoz" s out=dz*100+idprv
 q 0
mkPRV(idfa,zp,in,out)
 n (idfa,zp,in,out)
 s $zt="err2" k out s err=""
 i '$g(zp) q "1~zp="
 s out=zp#100
 q 0
gFaPrv(idfa,nmsp,in,out)
 // seznam provozoven pro firmu
 // out("arr",1,idprv,"dta",1)=nazev provozovny
 // out("arr",2,zp,"dta",1)=nazev provozovny
 n (idfa,nmsp,in,out)
 s $zt="err2" k out s err=""
 i nmsp="" s nmsp=##class(ALVA.GENERALAPI.DataBase).dataDB(idfa)
 // nactu seznam provozoven
 k arr s err=$$lPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),"",.arr) zt:+err "merr" s err=""
 // kontrola, zda jsou u provozoven nastavene agd. AD
 s isAgd=0
 s idprv="" f  s idprv=$o(arr("arr",idprv)) q:idprv=""  d
 .k arrprv s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),idprv,"",.arrprv) zt:+err "merr" s err=""
 .s:$g(arrprv("dta",9))["AD" isAgd=1
 // seznam provozoven
 s idprv="" f  s idprv=$o(arr("arr",idprv)) q:idprv=""  d
 .k arrprv s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),idprv,"",.arrprv) zt:+err "merr" s err=""
 .i isAgd q:$g(arrprv("dta",9))'["AD"
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s out("arr",1,idprv,"dta",1)=$g(arrprv("dta",1))
 .s out("arr",2,zp,"dta",1)=$g(arrprv("dta",1))
 q 0
gObdobi(idfa,nmsp,in,out)
 // err=$$gObdobi(idfa,nmsp,in,out) - vrati pro firmu aktualni obdobi v AD
 // - in
 //   out("act")=aktualni obdobi rrrrmm
 //   out("min")=minimalni nalezene obdobi rrrrmm
 //   out("max")=maximalni nalezene obdobi rrrrmm
 //   out("arr",1,rrrrmm)="" dohledana obdobi
 //--------------------------------------------------------------------------
 s $zt="err2"
 n zp,dz,rrmm,rr,mm
 s dz=$$gFaDz^OBapiED(idfa)
 k rrmm
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .q:zp\100'=dz
 .s mm=+$g(^[nmsp]OBD(zp)) s rr=+$p($g(^[nmsp]OBD(zp)),":",2)
 .i mm*rr s out("act")=$$rrrrmm^OBapiED(rr*100+mm)
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBD(zp,rrmm)) q:rrmm=""  d
 ..s out("arr",1,$$rrrrmm^OBapiED(rrmm))=""
 s out("min")=$o(out("arr",1,""))
 s out("max")=$o(out("arr",1,""),-1)
 q 0
 //
chngObdobi(idfa,nmsp,rrmm,in,out)
 // err=$$chngObdobi(idfa,nmsp,rrmm,in,out) - zmena obdobi v AD
 n (idfa,nmsp,rrmm,in,out) s $zt="err2" s err=""
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 i rrmm="" q "1~rrmm="
 s dz=$$gFaDz^OBapiED(idfa)
 s mm=(rrmm#100) s rr=((rrmm\100)#100)
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .i (zp\100)=dz s ^[nmsp]OBD(zp)=mm_":"_rr
 s out("stt")=1
 q 0
 //
format(txt,typ,len,char)
 // s txt=$$format(txt,typ,len,char) - format textu
 // typ  = L,R,C
 // len  = delka
 // char = vyplnovy znak, neni li uvedeno, pak mezera
 n val
 s:$g(char)="" char=" " s:'$g(len) len=$l(txt)
 s typ=$tr(typ,"lrc","LRC") s:$g(typ)="" typ="L"
 s $p(val,char,len)=""
 q:typ="L" $e(txt_val,1,len)
 q:typ="R" $e(val,1,len-$l(txt))_txt
 s len=(len-$l(txt))\2 s:len<1 len=0
 q $e(val,1,len)_txt_$e(val,1,len)
 //
isStringInArr(arr,in)
 // s isstr=isStringInArr(.arr,.in)
 // kontrola, zda ve v poli arr(cnt)=val vyplnen nejaky retezec
 // (fce vrati 0 neni
 //            1 je)
 // popis in:
 // in("modification")=0 - pole arr se neupravuje
 // in("modification")=1 - uprava pole arr - odstraneni prazdnych radek, posun indexu
 // 
 n cnt,tmparr,tmpcnt,val,isstring
 // modifikace pole
 i +$g(in("modification"))=1 d
 .k tmparr s tmpcnt=0
 .s cnt="" f  s cnt=$o(arr(cnt)) q:cnt=""  d
 ..s val=$g(arr(cnt)) q:$tr(val," ","")=""
 ..s tmpcnt=tmpcnt+1 s tmparr(tmpcnt)=val
 .k arr m arr=tmparr k tmparr
 // kontrola na string
 s isstring=0
 s cnt="" f  s cnt=$o(arr(cnt)) q:(cnt="")!(isstring)  d
 .s:$tr(arr(cnt)," ","")'="" isstring=1
 //
 q isstring
 //
gsaDph(idfa,hrl,in,out)
 // s err=$$gsaDph(idfa,hrl,in,out) - vratí sazby dph k hrl (out=bez~snizena~zakladni)
 s $zt="err2" k out
 n err,i,o
 s hrl=$g(hrl) s:'hrl hrl=+$h
 k i,o,err s err=$$gDanSzb^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),hrl,.i,.o) zt:err "merr" s err=""
 s out=0_"~"_+$g(o("dta",2))_"~"_+$g(o("dta",1))_"~"_+$g(o("dta",3))
 q 0
isCentRegDph(idfa,hrl,in,out)
 n (idfa,hrl,in,out)
 s $zt="err2" k out s out=0
 //vraci informaci o tom, zda ma firma nastaven centralni odvod dph 0/1
 //out=0/1 1 ... firma ma nastaven centralni odvod dph
 //out("dta",1)=danova zkratka
 //out("dta",2)=dic
 k arr s err=$$gIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),"",.arr) zt:+err "merr" s err=""
 // 38  = dph, centralni odvod 0 ne / 1 ano
 // 39  = dph, centralni odvod od (dd.mm.rrrr)
 // 40  = dph, centralni odvod - danova zkratka
 // 41  = dph, centralni odvod - dic (nove)	 	
 i ($g(arr("dta",38))=1)&(hrl'<$$dn^OBapiED($g(arrfa("dta",39)))) {
	 s out=1
	 s out("dta",1)=$g(arr("dta",40))
	 s out("dta",2)=$g(arr("dta",41))
 }
 q 0
gSkRegDphIco(idfa,hrl,in,out)
 //out("arr",1,ico)="" ...  ico firem pro skupinovou registaci k hrl
 s $zt="err2" k out
 n (idfa,hrl,in,out)
 s hrl=$g(hrl) s:'hrl hrl=+$h
 s fnmsp=$$gFaNmsp^MlJFapi()
 k arr s err=$$gSkRegDphIdFa^MlJFapi(idfa,fnmsp,"",.arr) zt:err "merr" s err=""
 //arr("arr",idfa,"dta",1)=horlog
 s skidfa="" f  s skidfa=$o(arr("arr",skidfa)) q:skidfa=""  d
 .i (hrl'<$g(arr("arr",skidfa,"dta",1))) d
 ..k arrfa s err=$$gIdFa^MlJFapi(skidfa,fnmsp,"",.arrfa) zt:err "merr" s err=""
 ..i $g(arrfa("dta",7))'="" s out("arr",1,$g(arrfa("dta",7)))=""
 q 0
 //
gSkRegDphDic(idfa,hrl,in,out)
 //
 //w $$gSkRegDphDic^OBapiED("VS_CSAD",$$dn^OBapiED("01.01.2018"),"",.arr) zw arr
 //out("dta",1)=0/1 1 ... firma je v skupinova registraci DPH
 //out("dta",2)=dic	  ... dic pro skupinova registrace 
 s $zt="err2" k out
 n (idfa,hrl,in,out)
 s out("dta",1)=0 s out("dta",2)=""
 s hrl=$g(hrl) i 'hrl s hrl=+$h
 s fnmsp=$$gFaNmsp^MlJFapi()
 //idfa nadrizene firmy
 s myidfa="" s err=$$gNIdFa^MlJFapi(idfa,fnmsp,"",.myidfa) zt:+err "merr" s err=""
 i $g(myidfa)="" s myidfa=idfa
 //je centralni odvod DPH u nadrizene firmy 
 k myarr s err=$$gIdFa^MlJFapi(myidfa,fnmsp,"",.myarr) zt:+err "merr" s err=""
 // 38  = dph, centralni odvod 0 ne / 1 ano
 // 39  = dph, centralni odvod od (dd.mm.rrrr)
 // 40  = dph, centralni odvod - danova zkratka
 // 41  = dph, centralni odvod - dic (nove)
 i ($g(myarr("dta",38))=1)&(hrl'<$$dn^OBapiED($g(myarr("dta",39)))) {
	 s out("dta",1)=1
	 s out("dta",2)=$g(myarr("dta",41))
 }
 //je firma ve skupinove registraci u nadrizene firmy ? 
 k myarr s err=$$gSkRegDphIdFa^MlJFapi(myidfa,fnmsp,"",.myarr) zt:err "merr" s err=""
 //neni ve skupinove registraci 
 i '$d(myarr("arr",idfa)) {
	 s out("dta",1)=0
	 s out("dta",2)=""
 } 
 //je ve skupinove registraci, ale nesedi datum
 i +$d(myarr("arr",idfa)) {
	 i hrl<$g(myarr("arr",idfa,"dta",1)) {
		 s out("dta",1)=0
	 	 s out("dta",2)=""
	 }
 }
 q 0
 //
sHistory(idfa,nmsp,idpol,glb,in,out)
 // s err=$$sHistory(idfa,nmsp,idpol,glb,in,out) - zapis do globalu pro archivaci historie
 // je-li def glb (glb'=""), ulozi obsah globalu, jinak ulozi pole in
 // global ^[nmsp]OBHstr(idfa,idpol,$h,...)=ulozene pole
 n (idfa,nmsp,idpol,glb,in,out)
 s $zt="err2"
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 i idpol="" q "1~idpol="
 i $g(glb)="" i '$d(in)="" q "1~in="
 i $g(glb)'="" i '$d(@glb) q "1~neexistujici global "_$g(glb)
 //
 s out=$h_"|"_$i(^[nmsp]OBHstr(idfa,idpol))
 i glb="" m ^[nmsp]OBHstr(idfa,idpol,out)=in
 i glb'="" m ^[nmsp]OBHstr(idfa,idpol,out)=@(glb)
 q 0
 //
sKos(idfa,nmsp,idkos,idpol,fullname,info,glb,in,out)
 // s err=$$sKos(idfa,nmsp,idkos,idpol,fulname,glb,in,out) - zapis do kose pro archivaci historie
 // je-li def glb (glb'=""), ulozi obsah globalu, jinak ulozi pole in
 // zapis do globalu ^[nmsp]OBKOS(idfa,idkos,cnt)=$lb(idpol,$h,fullname,info)
 //                  ^[nmsp]OBKOS(idfa,idkos,cnt,"arr")=in nebo @glb
 // idkos=1 objednavky /2 stale objednavky / 3 spoje / 4 turnusy / 5 plan
 n (idfa,nmsp,idkos,idpol,fullname,info,glb,in,out)
 s $zt="err2"
 //kontrola
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 i idkos="" q "1~idkos="
 i $g(glb)="" i '$d(in)="" q "1~in="
 i $g(glb)'="" i '$d(@glb) q "1~neexistujici global "_$g(glb)
 //
 s cnt=$i(^[nmsp]OBKOS(idfa,idkos))
 s ^[nmsp]OBKOS(idfa,idkos,cnt)=$lb($g(idpol),$h,$g(fullname),$g(info))
 i $g(glb)="" {
	 m ^[nmsp]OBKOS(idfa,idkos,cnt,"arr")=in
 }
 else {
	 m ^[nmsp]OBKOS(idfa,idkos,cnt,"arr")=@glb
 }
 q 0
 //
lKos(idfa,nmsp,idkos,glb,in,out)
 //s err=$$lKos(idfa,nmsp,idkos,glb,in,out) - seznam polozek v kosi pro idkos
 //out:
 //@glb@("arr",cnt,"id")=id (idkos_"|"_cnt)
 //@glb@("arr",cnt,"dta",1)=idpol
 //@glb@("arr",cnt,"dta",2)=$h
 //@glb@("arr",cnt,"dta",3)=fullname
 //@glb@("arr",cnt,"dta",4)=info
 n (idfa,nmsp,idkos,glb,in,out)
 s $zt="err2" k out
 k @glb
 s cnt="" f {
	 s val="" s cnt=$o(^[nmsp]OBKOS(idfa,idkos,cnt),-1,val) i cnt="" q
	 s mycnt=$i(@glb@("arr"))
	 s @glb@("arr",mycnt,"id")=(idkos_"|"_cnt)
 	 s @glb@("arr",mycnt,"dta",1)=$lg(val,1)
 	 s @glb@("arr",mycnt,"dta",2)=$lg(val,2)
 	 s @glb@("arr",mycnt,"dta",3)=$lg(val,3)
 	 s @glb@("arr",mycnt,"dta",4)=$lg(val,4)
 }
 q 0
 //
gKos(idfa,nmsp,idkos,cnt,glb,in,out)
 //s err=$$lKos(idfa,nmsp,idkos,glb,in,out) - seznam polozek v kosi pro idkos
 //out:
 //je-li definovano glb, je vystup:
 //@glb@("dta",1)=idpol
 //@glb@("dta",2)=$h
 //@glb@("dta",3)=fullname
 //@glb@("dta",4)=info
 //@glb@("arr")=... data
 //neni-li definovano glb, je vystup v out ve stejne strukture
 n (idfa,nmsp,idkos,glb,in,out)
 s $zt="err2" k out i $g(glb)'="" k @glb
 s cnt="" f {
	 s val="" s cnt=$o(^[nmsp]OBKOS(idfa,idkos,cnt),-1,val) i cnt="" q
	 i $g(glb)'="" {
 	 	s @glb@("dta",1)=$lg(val,1)
 	 	s @glb@("dta",2)=$lg(val,2)
 	 	s @glb@("dta",3)=$lg(val,3)
 	 	s @glb@("dta",4)=$lg(val,4)
 	 	m @glb@("arr")=^[nmsp]OBKOS(idfa,idkos,cnt,"arr")
	 }
	 else {
		s out("dta",1)=$lg(val,1)
 	 	s out("dta",2)=$lg(val,2)
 	 	s out("dta",3)=$lg(val,3)
 	 	s out("dta",4)=$lg(val,4)
 	 	m out("arr")=^[nmsp]OBKOS(idfa,idkos,cnt,"arr")
	 }
 }
 q 0
lHistPrepDoc(idfa,nmsp,in,out)
 // s err=$$lHistPrepDoc(idfa,nmsp,.in,.out) - vypis seznamu informaci o prepoctu dokladu
 // vrati ^CacheTempJB(out,idtdoc,$h)="" ... idtdoc=1 DZVA / 2SJ / 3GRAF ; $h horlog zacatku
 n (idfa,nmsp,in,out) s $zt="err2" s err=""
 s out=$$gWrkJB^OBapiED() k ^CacheTempJB(out)
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 s dz=$$gFaDz^OBapiED(idfa)
 s idtdoc="" f  s idtdoc=$o(^[nmsp]OI(dz,"Prepocty",idtdoc)) q:idtdoc=""  d
 .s hrl="" f  s hrl=$o(^[nmsp]OI(dz,"Prepocty",idtdoc,hrl)) q:hrl=""  d
 ..s ^CacheTempJB(out,idtdoc,hrl)=""
 q 0
gHistPrepDoc(idfa,nmsp,idtdoc,hrl,in,out)
 // s err=$$gHistPrepDoc(idfa,nmsp,idtdoc,hrl,.in,.out) - vrati info data o jednom prepoctu dokladu
 // vrati data jednoho zaznamu historie prepoctu dokladu
 //out("dta",1)=kdo (fullname)
 //out("dta",2)=datum od (hrl) pro vyber dokladu
 //out("dta",3)=datum do (hrl) pro vyber dokladu
 //out("dta",4)=kolik dokladu
 //out("dta",5)=$h (konec)
 //out("dta",6)=popis
 //out("arr",1,idprv)="" ... id provozovny pro ktere se prepocitavalo
 n (idfa,nmsp,idtdoc,hrl,in,out) s $zt="err2" s err="" k out
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 i idtdoc="" q "1~idtdoc="
 i hrl="" q "1~hrl="
 s dz=$$gFaDz^OBapiED(idfa)
 //data
 s val=$g(^[nmsp]OI(dz,"Prepocty",idtdoc,hrl))
 s out("dta",1)=$p(val,":",1) 													// kdo (fullname)
 s out("dta",2)="" i $p(val,":",2) s out("dta",2)=$$dn^OBapiED($p(val,":",2)) 	// datum od (hrl)
 s out("dta",3)="" i $p(val,":",3) s out("dta",3)=$$dn^OBapiED($p(val,":",3))	// datum do (hrl)
 s out("dta",4)=$p(val,":",4) 													// kolik
 s out("dta",5)=$p(val,":",5)													// $h (konec)
 s out("dta",6)=$p(val,":",6)													// popis
 //provozovny
 s zp="" f  s zp=$o(^[nmsp]OI(dz,"Prepocty",idtdoc,hrl,zp)) q:zp=""  d
 .s out("arr",1,(zp#100))=""
 q 0
sHistPrepDoc(idfa,nmsp,idtdoc,hrl,in,out)
 // s err=$$sHistPrepDoc(idfa,nmsp,idtdoc,hrl,.in,.out) - zapise info data o jednom prepoctu dokladu
 // zapise data jednoho zaznamu historie prepoctu dokladu
 //in("dta",1)=kdo (fullname)
 //in("dta",2)=datum od (hrl) pro vyber dokladu
 //in("dta",3)=datum do (hrl) pro vyber dokladu
 //in("dta",4)=kolik dokladu
 //in("dta",5)=$h (konec)
 //in("dta",6)=popis
 //in("arr",1,idprv)="" ... id provozovny pro ktere se prepocitavalo
 n (idfa,nmsp,idtdoc,hrl,in,out) s $zt="err2" s err="" k out
 i idfa="" q "1~idfa="
 i nmsp="" q "1~nmsp="
 i idtdoc="" q "1~idtdoc="
 i hrl="" q "1~hrl="
 s dz=$$gFaDz^OBapiED(idfa)
 //data
 k ^[nmsp]OI(dz,"Prepocty",idtdoc,hrl)
 s $p(val,":",1)=$g(in("dta",1))
 s $p(val,":",2)="" i $g(in("dta",2)) s $p(val,":",2)=$$nd^OBapiED($g(in("dta",2)),0)
 s $p(val,":",3)="" i $g(in("dta",3)) s $p(val,":",3)=$$nd^OBapiED($g(in("dta",3)),0)
 s $p(val,":",4)=$g(in("dta",4))
 s $p(val,":",5)=$g(in("dta",5))
 s $p(val,":",6)=$g(in("dta",6))
 s ^[nmsp]OI(dz,"Prepocty",idtdoc,hrl)=val
 s idprv="" f  s idprv=$o(in("arr",1,idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i zp="" q
 .s ^[nmsp]OI(dz,"Prepocty",idtdoc,hrl,zp)=""
 q 0
 //
cnvBezDia(txt)
 // $$cnvbezDia(txt) - provede konverzi diakritickeho textu na obyc
 q $tr(txt,"ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖØÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöøùúûüýÿĂăĄąĆćČčĎďĐđĖėĘęĚěĹĺĽľŁłŃńŇňŐőŔŕŘřŚśŞşŠšŢţŤťŮůŰűŹźŻżŽžǍǎ│┤╣║╗╝┐└┴┬├─┼╚╔╩╦╠═╬┘┌░▒▓","AAAAAACEEEEIIIINOOOOOOUUUUYaaaaaaceeeeiiiinoooooouuuuyyAaAaCcCcDdDdEeEeEeLlLlLlNnNnOoR+RrSsSsSsTtTtUuUuZzZzZzAa|++|+++++++-++++++-+++   ")
 //
cnvBezDiaUp(txt)
 // $$cnvbezDiaUp(txt) - provede konverzi diakritickeho textu na obyc a vse velke
 q $zconvert($$cnvBezDia^OBapiED(txt),"U")
 //
cnvDiaUp(txt)
 // $$cnvDiaUp(txt) - provede konverzi diakritickeho textu na velka pismena
 s tr1="AaÁáÄäBbCcČčDdĎďEeÉéĚěFfGgHhIiÍíJjKkLlĹĺĽľMmNnŇňOoÓóÖöÔôPpQqRrŘřSsŠšTtŤťUuÚúŮůÜüVvWwXxYyÝýZzŽž"
 s tr2="AAÁÁÄÄBBCCČČDDĎĎEEÉÉĚĚFFGGHHIIÍÍJJKKLLĹĹĽĽMMNNŇŇOOÓÓÖÖÔÔPPQQRRŘŘSSŠŠTTŤŤUUÚÚŮŮÜÜVVWWXXYYÝÝZZŽŽ"
 q $tr(txt,tr1,tr2)
 //
cnvDiaInd(txt)
 // $$cnvDiaInd(txt) - provede konverzi diakritickeho nazvu do indexu
 n tr1,tr2,cnt
 s tr1="AaÁáÄäBbCcČčDdĎďEeÉéĚěFfGgHh{}IiÍíJjKkLlĹĺĽľMmNnŇňOoÓóÖöÔôPpQqRrŘřSsŠšTtŤťUuÚúŮůÜüVvWwXxYyÝýZzŽž0123456789()-/ .;,:""|*$#"
 s tr2="" f cnt=1000:1:$l(tr1)+1000 s tr2=tr2_$c(cnt)
 f  q:txt'["Ch"  s txt=$p(txt,"Ch")_"{"_$p(txt,"Ch",2,$l(txt))
 f  q:txt'["ch"  s txt=$p(txt,"ch")_"}"_$p(txt,"ch",2,$l(txt))
 s txt=$tr(txt,tr1,tr2)
 q txt
cnvIndDia(txt)
 // $$cnvIndDia(txt) - provede konverzi diakritickeho nazvu do indexu
 n tr1,tr2,cnt
 s tr1="AaÁáÄäBbCcČčDdĎďEeÉéĚěFfGgHh{}IiÍíJjKkLlĹĺĽľMmNnŇňOoÓóÖöÔôPpQqRrŘřSsŠšTtŤťUuÚúŮůÜüVvWwXxYyÝýZzŽž0123456789()-/ .;,:""|*$#"
 s tr2="" f cnt=1000:1:$l(tr1)+1000 s tr2=tr2_$c(cnt)
 s txt=$tr(txt,tr2,tr1)
 f  q:'(txt["{")  s txt=$p(txt,"{")_"Ch"_$p(txt,"{",2,$l(txt))
 f  q:'(txt["}")  s txt=$p(txt,"}")_"ch"_$p(txt,"}",2,$l(txt))
 q txt
cnvTxt(txtall,txtfrom,txtto)
 n txtnew,mycnt
 // konverze textu z txtfrom na txtto v txtall
 s txtnew=""
 f mycnt=1:1:$l(txtall,txtfrom) {
	 i txtnew'="" s txtnew=txtnew_txtto
	 s txtnew=txtnew_$p(txtall,txtfrom,mycnt)
 }
 q txtnew
 //
cnvTxtToNum(txt)
 //konverze textu na cislo - v txt se ponechaji jen cisla a .
 n num,mycnt
 s num=""
 f mycnt=1:1:$l(txt) {
	 i ($e(txt,mycnt)?.n)!($e(txt,mycnt)=".") {
		 s num=num_$e(txt,mycnt)
	 }
 }
 q num
rzpArr(arr,src,dc)
 // $$rzpArr(arr,src,dc) - rozpocita hodnotu podle udaju v poli
 // arr - pole, do ktereho se rozpocte udaj v arr=
 // src - zdrojove pole pro rozpocet (jedna uroven)
 // dc  - pocet des.mist
 n val,ind,sum,cst,max,maxind
 s val=+$g(arr)
 // suma
 s sum=0 s ind="" f  s ind=$o(src(ind)) q:ind=""  s sum=sum+$g(src(ind))
 // rozpocet
 s ind="" f  s ind=$o(src(ind)) q:ind=""  s cst=+$g(src(ind)) s arr(ind)=0 s:sum arr(ind)=$j((val/sum)*cst,0,dc)
 // rozdil
 s max=0 s maxind="" s ind="" f  s ind=$o(arr(ind)) q:ind=""  s val=val-$g(arr(ind)) s:+$g(arr(ind))>max max=+$g(arr(ind)),maxind=ind
 //
 i val&(maxind="") s maxind=$o(arr(""))
 i val&(maxind'="") s arr(maxind)=$g(arr(maxind))+val
 //
 q 0
gWrkJB()
 // vrati pracovni index do globalu CacheTempJB
 q $i(^CacheTempJB)
gWrkALVAAD()
 // vraci pracovni index do globalu ^||wrk.ALVA.AD
 q $i(^||wrk.ALVA.AD)
gWrkALVAADGlb(wrk)
 // vraci nazev pracovniho globalu s indexem wrk (fce: gWrkALVAAD()) ^||wrk.ALVA.AD
 q "^||wrk.ALVA.AD("_wrk_")"
 // 
gSzb(idfa,sysnmsp,nmsp,zp,in,out)
 //
 // vypocet sazeb pro fakturaci
 //
 // - in
 //   in("dta",1)=spz
 //   in("dta",2)=idpre
 //   in("dta",3)=idzak
 //   in("dta",4)=idobj
 // - out
 //   out("dta",1)=sazbaKm
 //   out("dta",2)=sazbaKmNeobs
 //   out("dta",3)=sazba15minCek
 //   out("dta",4)=sazba15minVyk
 //   out("dta",5)=sazbaKmPrives
 //   out("dta",6)=sazbaCyklus
 //
 s $zt="err2" n (idfa,sysnmsp,nmsp,zp,in,out) k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 //
 s spz=$g(in("dta",1))
 s idpre=$g(in("dta",2))
 s idzak=$g(in("dta",3))
 s idobj=$g(in("dta",4))
 // nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 // 1 auto
 i $p($g(arrset("arr",3,2)),"~",1) d
 .q:spz=""
 .k arr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,+$h,spz,"",.arr)
 .// 27 = tarifni sazba Kc/km
 .// 28 = tarifni sazba Kc/15 minut cekani
 .// 29 = tarifni sazba Kc/15 vykonu
 .i $g(arr("dta",27)) s out("dta",1)=+$g(arr("dta",27)) //km obsazeny
 .i $g(arr("dta",27)) s out("dta",2)=+$g(arr("dta",27)) //km neobsazeny
 .i $g(arr("dta",28)) s out("dta",3)=+$g(arr("dta",28)) //15 min cekani
 .i $g(arr("dta",29)) s out("dta",4)=+$g(arr("dta",29)) //15 minut vykonu
 .k arr
 // 2 typ prepravce
 i $p($g(arrset("arr",3,2)),"~",2) d
 .q:idpre=""
 .k arrcis s err=$$gCisItm^OBapiED(idfa,nmsp,2,idpre,"",.arrcis)
 .s:$p($g(arrcis("arr",idpre)),"~",3) out("dta",1)=$p($g(arrcis("arr",idpre)),"~",3) //km obsazeny
 .s:$p($g(arrcis("arr",idpre)),"~",3) out("dta",2)=$p($g(arrcis("arr",idpre)),"~",3) //km neobsazeny
 .s:$p($g(arrcis("arr",idpre)),"~",8) out("dta",2)=$p($g(arrcis("arr",idpre)),"~",8) //km neobsazeny (vlastni)
 .s:$p($g(arrcis("arr",idpre)),"~",4) out("dta",3)=$p($g(arrcis("arr",idpre)),"~",4) //15 min.cekani
 .s:$p($g(arrcis("arr",idpre)),"~",5) out("dta",4)=$p($g(arrcis("arr",idpre)),"~",5) //15 min.vykonu
 .s:$p($g(arrcis("arr",idpre)),"~",6) out("dta",5)=$p($g(arrcis("arr",idpre)),"~",6) //km prives
 // 3 zakaznik
 i $p($g(arrset("arr",3,2)),"~",3) d
 .q:idzak=""
 .//dodelat !!!
 // 4 objednavka
 i $p($g(arrset("arr",3,2)),"~",4) d
 .q:idobj=""
 .k arr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr)
 .i $g(arr("dta",49)) s out("dta",1)=+$g(arr("dta",49)) //km obsazeny
 .i $g(arr("dta",49)) s out("dta",2)=+$g(arr("dta",49)) //km neobsazeny
 .i $p($g(arr("dta",49)),"/",2) s out("dta",2)=+$p($g(arr("dta",49)),"/",2) //km neobsazeny vlastni
 .i $g(arr("dta",50)) s out("dta",3)=+$g(arr("dta",50)) //15 min cekani
 .i $g(arr("dta",51)) s out("dta",4)=+$g(arr("dta",51)) //15 minut vykonu
 .i $g(arr("dta",52)) s out("dta",5)=+$g(arr("dta",52)) //km vleku
 .i $g(arr("dta",80)) s out("dta",6)=+$g(arr("dta",80)) //cyklus
 .k arr
 q 0
gBlockApp(idfa,nmsp,zp,rrmm,in,out)
 // vrati stav blokovani aplikace pro zp a rrmm
 // out("arr",1,idcin)=stav (0 volno /1 blokovano)
 //             idcin=1 .... porizovani DZVA
 //             idcin=2 .... porizovani SJ
 //             idcin=3 .... porizovani GRAF OS
 //             idcin=4 .... porizovani GRAF RZ
 //             idcin=5 .... porizovani premie pravidelna
 //             idcin=6 .... porizovani premie nepravidelna
 //             idcin=7 .... prevod km na ostatni auta
 //             idcin=8 .... fakturace
 //             idcin=9 .... porizovani premie spolecne
 //             idcin=10 ... spotreba PHM ridicu
 //
 n (idfa,nmsp,zp,rrmm,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 f idcin=1:1:10 d
 .i idcin=1 s idglb="docDZ"
 .i idcin=2 s idglb="docSJ"
 .i idcin=3 s idglb="grfOS"
 .i idcin=4 s idglb="grfRZ"
 .i idcin=5 s idglb="prmDZ"
 .i idcin=6 s idglb="prmSJ"
 .i idcin=7 s idglb="docKM"
 .i idcin=8 s idglb="fakSO"
 .i idcin=9 s idglb="prmAL"
 .i idcin=10 s idglb="phmOS"
 .s out("arr",1,idcin)=(+$g(^[nmsp]OI(idfa,"jb","blk","cin",idglb,rrmm,zp))>0)
 q 0
sBlockApp(idfa,nmsp,zp,rrmm,in,out)
 // zapise stav blokovani aplikace pro zp a rrmm
 // in("arr",1,idcin)=stav (0 volno /1 blokovano)
 //            idcin=1 .... porizovani DZVA
 //            idcin=2 .... porizovani SJ
 //            idcin=3 .... porizovani GRAF OS
 //            idcin=4 .... porizovani GRAF RZ
 //            idcin=5 .... porizovani premie pravidelna
 //            idcin=6 .... porizovani premie nepravidelna
 //            idcin=7 .... prevod km na ostatni auta
 //            idcin=8 .... fakturace
 //            idcin=9 .... porizovani premie spolecne
 //            idcin=10 ... spotreba PHM ridicu
 // in("idos")=mlp~loginname~fullname
 n (idfa,nmsp,zp,rrmm,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 f idcin=1:1:10 d
 .i idcin=1 s idglb="docDZ"
 .i idcin=2 s idglb="docSJ"
 .i idcin=3 s idglb="grfOS"
 .i idcin=4 s idglb="grfRZ"
 .i idcin=5 s idglb="prmDZ"
 .i idcin=6 s idglb="prmSJ"
 .i idcin=7 s idglb="docKM"
 .i idcin=8 s idglb="fakSO"
 .i idcin=9 s idglb="prmAL"
 .i idcin=10 s idglb="phmOS"
 .i $d(in("arr",1,idcin)) d
 ..s block=+$g(in("arr",1,idcin))
 ..s ^[nmsp]OI(idfa,"jb","blk","cin",idglb,rrmm,zp)=block
 ..s ^[nmsp]OI(idfa,"jb","blk","cin",idglb,rrmm,zp,"h",$h)=block_"~"_$p($g(in("idos")),"~",3)_"~"_$p($g(in("idos")),"~",1)
 q 0
gBlockAppInfo(idfa,nmsp,zp,rrmm,idcin,in,out)
 // vrati stav info o blokovani aplikace pro zp, rrmm a idcin 
 //             idcin=1 .... porizovani DZVA
 //             idcin=2 .... porizovani SJ
 //             idcin=3 .... porizovani GRAF OS
 //             idcin=4 .... porizovani GRAF RZ
 //             idcin=5 .... porizovani premie pravidelna
 //             idcin=6 .... porizovani premie nepravidelna
 //             idcin=7 .... prevod km na ostatni auta
 //             idcin=8 .... fakturace
 //             idcin=9 .... porizovani premie spolecne
 //             idcin=10 ... spotreba PHM ridicu
 // out("arr",1,hrl,"dta",1)=stav (0 volno /1 blokovano)
 // out("arr",1,hrl,"dta",2)=jmeno uzivatele
 //
 n (idfa,nmsp,zp,rrmm,idcin,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(idcin)="" q "1~idcin="
 i idcin=1 s idglb="docDZ"
 i idcin=2 s idglb="docSJ"
 i idcin=3 s idglb="grfOS"
 i idcin=4 s idglb="grfRZ"
 i idcin=5 s idglb="prmDZ"
 i idcin=6 s idglb="prmSJ"
 i idcin=7 s idglb="docKM"
 i idcin=8 s idglb="fakSO"
 i idcin=9 s idglb="prmAL"
 i idcin=10 s idglb="phmOS"
 s hrl="" f  s hrl=$o(^[nmsp]OI(idfa,"jb","blk","cin",idglb,rrmm,zp,"h",hrl)) q:hrl=""  d
 .s val=$g(^[nmsp]OI(idfa,"jb","blk","cin",idglb,rrmm,zp,"h",hrl))
 .s out("arr",1,hrl,"dta",1)=($p(val,"~",1)>0)
 .s out("arr",1,hrl,"dta",2)=$p(val,"~",2)
 q 0
gLastSttTachRZ(idfa,nmsp,rz,in,out)
 // v out("dta",1)= vraci posledni stav tachometru
 n (idfa,nmsp,rz,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(rz)="" q "1~rz="
 //pro rz="-" ne, fiktivni
 i rz="-" s out("dta",1)="" q 0
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 s out("dta",1)="" i $g(arr("arr",6,7)) s out("dta",1)=$g(^[nmsp]OI("TACHM",rz))
 q 0
sLastSttTachRZ(idfa,nmsp,rz,in,out)
 // zapise posledni stav tachometru
 // in("dta",1)= konecny stav tachometru na doklade
 // in("dta",2)= pocatecni stav tachometru na doklade
 n (idfa,nmsp,rz,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(rz)="" q "1~rz="
 //pro rz="-" ne, fiktivni
 i rz="-" q 0
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 i $g(arr("arr",6,7)) d
 .s pretoc=0 i ($g(in("dta",1))-$g(in("dta",2)))<0 s pretoc=1
 .i pretoc!($g(in("dta",1))>$g(^[nmsp]OI("TACHM",rz))) s ^[nmsp]OI("TACHM",rz)=+$g(in("dta",1))
 q 0
chngLastSttTachRZ(idfa,nmsp,rz,in,out)
 n (idfa,nmsp,rz,in,out) k out s err="" s $zt="err2"
 // in("dta",1)=novy konecny stav tachometru
 // in("dta",2)=hrl vymeny tachometru
 // in("idos")=mlp~loginname~fullname
 s $zt="err2" s err="" k out
 //pro rz="-" ne, fiktivni
 i rz="-" q 0
 s idos=$g(in("idos")) s kmtach=$g(in("dta",1))
 s hrltach=$g(in("dta",2)) s dattach="" s:hrltach dattach=$$nd^OBapiED(+hrltach,1)
 s ^[nmsp]OI("TACHM",rz)=kmtach
 s ^[nmsp]OI("TACHM",rz,$h)=dattach_":"_$p(idos,"~",3)
 q 0
lLastSttTachRZ(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) k out s err="" s $zt="err2"
 //out("arr",1,rz)=tachKm
 s $zt="err2" s err="" k out
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 i $g(arr("arr",6,7)) d
 .s rz="" f  s val="" s rz=$o(^[nmsp]OI("TACHM",rz),1,val) q:rz=""  d
 ..s out("arr",1,rz)=$g(val)
 q 0
gLastSttTankRZ(idfa,nmsp,rz,hrl,in,out)
 // v out("dta",1)=vraci posledni stav nadrze
 n (idfa,nmsp,rz,hrl,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 //pro rz="-" ne, fiktivni
 i rz="-" s out("dta",1)="" q 0
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 s hrl=+$g(hrl) s out("dta",1)=""
 i ($p($g(arr("arr",6,1)),"~",1))&($p($g(arr("arr",6,1)),"~",2)) d
 .s hrl=$o(^[nmsp]OI("PHSTAVY",rz,hrl),-1)
 .i hrl s out("dta",1)=$g(^[nmsp]OI("PHSTAVY",rz,hrl))
 q 0
sLastSttTankRZ(idfa,nmsp,rz,hrl,in,out)
 // zapise posledni stav nadrze
 // in("dta",1)=stav(lt)
 n (idfa,nmsp,rz,hrl,in,out)
 s $zt="err2" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 //pro rz="-" ne, fiktivni
 i rz="-" q 0
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 s hrl=+$g(hrl)
 i ($p($g(arr("arr",6,1)),"~",1))&($p($g(arr("arr",6,1)),"~",2)) d
 .s ^[nmsp]OI("PHSTAVY",rz,hrl)=$g(in("dta",1))
 q 0
round(val,dc)
 n (val,dc)
 s $zt="err1"
 s par=1 i val<1 s par=-1 s val=val*par
 i +dc=0 s val=par*(val+.5\1)
 i +dc=1 s val=par*(val+.05\.1/10)
 i +dc=2 s val=par*(val+.005\.01/100)
 i +dc=3 s val=par*(val+.0005\.001/1000)
 i +dc=4 s val=par*(val+.00005\.0001/10000)
 q val
gDtypRZ(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 // vrati druhy typu pro autobusy a privesy
 // in:
 // out:
 // out("arr",0,dtyp)="" ... typy pro autobusy
 // out("arr",1,dtyp)="" ... typy pro privesy
 // out("arr",2,dtyp)="" ... typy pro osobni
 // out("arr",3,dtyp)="" ... typy pro ostatni (+sklapece)
 k out
 s out("arr",0,0)=""		//... autobus
 s out("arr",1,1)=""		//... autobus s privesem
 s out("arr",1,6)=""		//... prives
 s out("arr",2,9)=""		//... osobni
 s out("arr",3,7)=""		//... ostatni specialy
 s out("arr",3,8)=""		//... ostatni
 s out("arr",3,3)=""		//... sklapece
 q 0
 //
 // chyby
 //
err1 s $zt="" q ""
err2 s $zt="" k out q "1/"_$ze_"/"_$g(err)

]]></Routine>


<Routine name="OBapiEDFce1" type="INT" languagemode="0" timestamp="64700,40696.901079"><![CDATA[
OBapiEDFce1 q
 //obecne funkce
calTuzDie(idfa,nmsp,hrlFrom,tmFrom,hrlTo,tmTo,in,out)
 //s err=$$calTuzDie^OBapiED("VS_CSAD","user",+$h,100,+$h,1300,.in,.out)
 // =======================
 // vypocet tuzemskych diet
 // =======================
 // s err=$$TuzDie(idfa,nmsp,hrlFrom,tmFrom,hrlTo,tmTo,.in,.out)
 // - hrlFrom    = den zacatku pracovni cesty - horlog
 // - tmFrom     = cas zacatku pracovni cesty - mm
 // - hrlTo      = den konce pracovni cesty - horlog
 // - tmTo       = cas konce pracovni cesty - mm
 ;;// - in
 ;;//   in("dta",1)=idprv (identifikator provozovny), provozovna muze mit vlastni pravidla 
 ;;//   in("arr","pj",hrl)=pocet poskytnutych jidel
 ;;// - out
 ;;//   out("dta",1)=vysledne diety
 ;;//   out("dta",2)=vysledne limitni diety
 ;;//                            1       2     3      4      5
 ;;//   out("arr","dta",hrl)=timefrom~timeto~kcdie~%krac~kcdielimit
 ;; ============================================
 s $zt="err" n (idfa,nmsp,hrlFrom,tmFrom,hrlTo,tmTo,in,out) k out
 ;; ============================================
 i $g(idfa)="" q "1~idfa="
 i $g(hrlFrom)="" q "1~hrlFrom="
 i $g(tmFrom)="" q "1~tmFrom="
 ;;
 s:'hrlTo hrlTo=hrlFrom
 s:tmTo="" tmTo=tmFrom
 //
 s idprv=$g(in("dta",1))
 //
 q:hrlFrom>hrlTo "1~hrlFrom>hrlTo"
 q:(tmTo<tmFrom)&(hrlTo'>hrlFrom) "1~tmTo<tmFrom"
 //
 // ciselnik - zakladni sazby pro vypocet diet diety
 k arrcis27 s err=$$gCis^OBapiED(idfa,nmsp,27,"",.arrcis27)
 // vlastni pravidla diety a sazby pro provozovnu
 k arrprvdi s err=$$gTDiePrv^OBapiED(idfa,nmsp,"",.arrprvdi) zt:+err "merr"
 // zaokrouhleni
 s typzaok=+$g(arrprvdi("dta",1)) //0 na cele cislo /1 na 2 desetiny /2 bez zaokrouhleni
 // sazby pro provozovnu
 i idprv'="" {
	 //ma vlastni pravidla
	 i +$g(arrprvdi("arr",idprv,"dta",1))=1 {
		 k arrcis27
		 m arrcis27("arr")=arrprvdi("arr",idprv,"arr",1)
	 }
 }
 ;; ==============================
 ;; 
 ;; vlastni vypocet
 ;; ===============
 ;; pripravim si pole: arr=pocet dnu , arr(hrl)=tmFrom~tmTo
 k arr f hrl=hrlFrom:1:hrlTo d
 .s arr=$g(arr)+1
 .s $p(arr(hrl),"~",1)=0  s:hrl=hrlFrom $p(arr(hrl),"~",1)=tmFrom
 .s $p(arr(hrl),"~",2)=1440  s:hrl=hrlTo $p(arr(hrl),"~",2)=tmTo
 ;; =======================================================
 ;; projdu pole a vypoctu diety pro jednotlive dny arr(hrl)=tmfrom~tmto~kcdie~krac%
 s hrl="" f  s hrl=$o(arr(hrl)) q:hrl=""  d
 .s val=$g(arr(hrl))
 .s mm=$$dhm^OBapiED(hrl,$p(val,"~",1),hrl,$p(val,"~",2))
 .s mmdiefrom="" f  s mmdiefrom=$o(arrcis27("arr",mmdiefrom)) q:mmdiefrom=""  d
 ..s mmdieto=+$g(arrcis27("arr",mmdiefrom))
 ..i (mm'<mmdiefrom)&(mm'>mmdieto) d
 ...s $p(arr(hrl),"~",3)=$p($g(arrcis27("arr",mmdiefrom)),"~",2)
 ...s $p(arr(hrl),"~",4)=$p($g(arrcis27("arr",mmdiefrom)),"~",3)*$g(in("arr","pj",hrl))
 ...s $p(arr(hrl),"~",5)=$p($g(arrcis27("arr",mmdiefrom)),"~",4)
 ;; ===============================================================================
 ;; kontrola dvoudenni jizdy - vyhodnejsi varianta
 i +$g(arr)=2 d
 .;; suma vypoctenych hodnot
 .s sdie=0 s hrl="" f  s hrl=$o(arr(hrl)) q:hrl=""  s sdie=sdie+$p(arr(hrl),"~",3)
 .;; diety za dva dny - jedna cesta
 .s mm=$$dhm^OBapiED(hrlFrom,tmFrom,hrlTo,tmTo)
 .s die=0 s krac=0 s dielim=0
 .s mmdiefrom="" f  s mmdiefrom=$o(arrcis27("arr",mmdiefrom)) q:mmdiefrom=""  d
 ..s mmdieto=+$g(arrcis27("arr",mmdiefrom))
 ..i (mm'<mmdiefrom)&(mm'>mmdieto) d
 ...s die=$p($g(arrcis27("arr",mmdiefrom)),"~",2)
 ...s krac=$p($g(arrcis27("arr",mmdiefrom)),"~",3)*($g(in("arr","pj",hrlFrom))+$g(in("arr","pj",hrlTo)))
 ...s dielim=$p($g(arrcis27("arr",mmdiefrom)),"~",4)
 .i die>sdie d
 ..s $p(arr(hrlFrom),"~",2)=tmTo
 ..s $p(arr(hrlFrom),"~",3)=die
 ..s $p(arr(hrlFrom),"~",4)=krac
 ..s $p(arr(hrlFrom),"~",5)=dielim
 ..k arr(hrlTo)
 ;; kraceni diet pri poskytnuti jidla
 f  s hrl=$o(arr(hrl)) q:hrl=""  d
 .s val=$g(arr(hrl)) s die=$p(arr(hrl),"~",3) s krac=$p(arr(hrl),"~",4) s dielim=$p(arr(hrl),"~",5)
 .s:krac>100 krac=100
 .s die=die-(die/100*krac) s $p(arr(hrl),"~",3)=die
 .s dielim=dielim-(dielim/100*krac) s $p(arr(hrl),"~",5)=dielim
 ;; =================================
 ;; celkovy soucet
 s out("dta",1)="" s out("dta",2)=""
 f  s hrl=$o(arr(hrl)) q:hrl=""  d
 .s out("dta",1)=out("dta",1)+$p(arr(hrl),"~",3)
 .s out("dta",2)=out("dta",2)+$p(arr(hrl),"~",5)
 //zaokrouhleni na cele cislo
 i typzaok=0 d
 .s:+out("dta",1) out("dta",1)=$j(out("dta",1),0,0)
 .s:+out("dta",2) out("dta",2)=$j(out("dta",2),0,0)
 //zaokrouhleni na dve desetinna mista
 i typzaok=1 d
 .s:+out("dta",1) out("dta",1)=$j(out("dta",1),0,2)
 .s:+out("dta",2) out("dta",2)=$j(out("dta",2),0,2)
 //
 m out("arr","dta")=arr
 ;; ==============
 q 0
gRegZahDph(idfa,nmsp,idzak,in,out)
 //fce vrati id statu, kde je zakaznik registrovanej pro zahranicni odvod DPH
 //out("arr",1,idstat)=""
  s $zt="err" n (idfa,nmsp,idzak,in,out) k out
 ;; ============================================
 i $g(idfa)="" q "1~idfa="
 s idzak=$p(idzak,"Z",1,2)
 i $g(idzak)="" q "1~idzak="
 s idstat="" f  s idstat=$o(^[nmsp]OI(idfa,"jb","regOdvZahDph",idzak,idstat)) q:idstat=""  d
 .s out("arr",1,idstat)=""
 q 0
sRegZahDph(idfa,nmsp,idzak,in,out)
 //fce zapise id statu, kde je zakaznik registrovanej pro zahranicni odvod DPH
 //in("arr",1,idstat)=""
 s $zt="err" n (idfa,nmsp,idzak,in,out) k out
 ;; ============================================
 i $g(idfa)="" q "1~idfa="
 s idzak=$p(idzak,"Z",1,2)
 i $g(idzak)="" q "1~idzak="
 k ^[nmsp]OI(idfa,"jb","regOdvZahDph",idzak)
 s idstat="" f  s idstat=$o(in("arr",1,idstat)) q:idstat=""  d
 .s ^[nmsp]OI(idfa,"jb","regOdvZahDph",idzak,idstat)=""
 q 0
gPodilNS(idfa,nmsp,ns,prs,out)
 // s ns=$$gPodilNS(idfa,nmsp,ns,prs,.out) - transformace ns podle prs pro auta
 // out("stt")=0	naslo se vedlejsi stredisko k hlavnimu
 // out("stt")=1	nenaslo se vedlejsi stredisko k hlavnimu
 n (idfa,nmsp,ns,prs,out) k out s err=""
 s $zt="errPodilNS"
 i $$isALVAPodilovani(idfa) s ns=$$ALVAPodilovaniNS(idfa,$g(ns),$g(prs),.out)
 q $g(ns)
errPodilNS s $zt="" s out("stt")=1 q $g(ns)
 //
isALVAPodilovani(idfa)
 // test na nove podilovani
 n (idfa) s $zt="isALVAPodilovaniErr" q ##class(ALVA.DSPODILOVANI.ApiPS).IsEnabled(idfa,0)
isALVAPodilovaniErr s $zt="" q 0
 //
ALVAPodilovaniNS(idfa,ns,prs,out)
 n (idfa,ns,prs,out) s $zt="ALVAPodilovaniNSErr"
 s newns=##class(ALVA.DSPODILOVANI.ApiPS).GetMinorNs(.err,idfa,"",$g(ns),$g(prs),0,1)
 i $g(err)'="" s newns=ns s out("stt")=1
 i newns=-1 s newns=ns
 i newns="" s newns=ns s out("stt")=1
 q newns
ALVAPodilovaniNSErr s $zt="" s arr("stt")=1 q $g(ns)
 //
gPodilTBNS(idfa,nmsp,out)
 //err=$$gPodilTBNS(idfa,nmsp,.out) - v out vraci podilovaci tabulku
 n (idfa,nmsp,out) k out s $zt="err"
 d ##class(ALVA.DSPODILOVANI.ApiPS).GetMinorNsList(.err,idfa,"",.out,0,1) i $g(err)'="" zt "merr"
 q 0
 //
sRMForFillDS(idfa,nmsp,in,out)
 // in("arr",1,rrmm)="" ... obdobi - nastaveni pro plneni ds
 n (idfa,nmsp,in,out) k out s $zt="err"
 s rrmm="" f  s rrmm=$o(in("arr",1,rrmm)) q:rrmm=""  d
 .s ^[nmsp]OI(idfa,"jb","ds","fill",$$rrrrmm^OBapiED(rrmm))=""
 q 0
gRMForFillDS(idfa,nmsp,in,out)
 // out("arr",1,rrrrmm)="" ... obdobi - nastaveni pro plneni ds
 n (idfa,nmsp,in,out) k out s $zt="err"
 s rrrrmm="" f  s rrrrmm=$o(^[nmsp]OI(idfa,"jb","ds","fill",rrrrmm)) q:rrrrmm=""  d
 .s out("arr",1,rrrrmm)=""
 q 0
dRMForFillDS(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) k out s $zt="err"
 k ^[nmsp]OI(idfa,"jb","ds","fill")
 q 0
err s $zt="" k out q "1/"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDFce2" type="INT" languagemode="0" timestamp="63274,36798"><![CDATA[
OBapiFce2 q
 // obecne funkce
pltHex(tpl)
 // $$plhx(tpl) - transformace platnosti tpl=znak.pl, vraci hex.kod XX~pppppppp (pppppppp vraci platnost 0/1 [prvek 8 je ne(X)])
 n (tpl)
 f i=1:1:8 s u(i)=0
 s:tpl="" tpl="."
 f i=1:1:$l(tpl) s a=$e(tpl,i) d
 .i a?1N s u(a)=1 q
 .i a=" "!(a=".") d  q
 ..f x=1:1:8 s u(x)=1
 .i a="g" d  q
 ..f x=1:1:5,7,8 s u(x)=1
 .i a="b" d  q
 ..f x=1:1:6 s u(x)=1
 .i a="X" d  q
 ..f x=1:1:5 s u(x)=1
 .i a="d" d  q
 ..f x=1:1:4 s u(x)=1
 .i a="y" d  q
 ..f x=2:1:5 s u(x)=1
 .i a="a" s (u(6),u(7),u(8))=1 q
 .s w=$f("PUTAVSM+",a) s:w u($e("12345677",w-1))=1
 .s:"N+"[a u(8)=1
 s (a(1),a(2))="" f i=1:1:8 d:u(i)
 .i i<5 s a(1)=a(1)+$e("1248",i) q
 .s a(2)=a(2)+$p("10:20:40:40",":",i-4)
 I u(7),u(8) s a(2)=a(2)-40
 s:a(1)>9 a(1)=$e("ABCDEF",a(1)-9) f i=1,2 s:a(i)="" a(i)="0"
 s x="" f i=1:1:8 s x=x_u(i)
 q $e(a(2))_a(1)_"~"_x
 ;
pldHex(dpl)
 // pldhx(dpl) - transformace dlouhodobe platnosti na hexa kod
 q:dpl<10 +dpl
 q $e("ADCFBE",dpl-9)
 //
pltCmprs(p)
 // $$cmprsPlt(tpl) - komprese tydenni platnosti
 // 31.12.2012 - <jb> upraveno na tydenni platnost 1,2,3,4,5,6,7
 n (p)
 s:p="" p="."
 //platnost postaru
 s PST=".11111111#g11111011#b111111#X11111#d1111#y01111#a00000111#+00000011#P1#U01#T001#A0001#V00001#S000001#M0000001#N00000001"
 s A=".gbXdya+ATUMPNSV"
 //platnost kalendarove, je li zadano 1,2,3,4,5,6,7, pak k tomu povolim X,+ a nedelam kompresi
 i (p["1")!(p["2")!(p["3")!(p["4")!(p["5")!(p["6")!(p["7") d  q p
 .i (p["1")!(p["2")!(p["3")!(p["4")!(p["5") s p=$tr(p,".X","")
 .i (p["7") s p=$tr(p,".+","")
 .s p=$tr(p,".gbdyaATUMPNSV","")
 .//s PST=".11111111#X11111#+00000011#11#201#3001#40001#500001#6000001#70000001"
 .//s A=".+1234567"
 F I=1:1 S CA=$P(PST,"#",I) Q:CA=""  S X=$E(CA) D
 .F J=1:1:8 S PL(X,J)=+$E(CA,J+1)
 s CPL="",ZAC=0,SPL=p D  F I=1:1:8 S VYPL(I)=0
 .K ARD S (R1,R2)="" F I=1:1 S ZNAK=$E(SPL,I) Q:ZNAK=""  D
 ..I "PUTAVSMN"'[ZNAK S R1=R1_ZNAK Q   
 ..S ARD($F("PUTAVSMN",ZNAK)-1)=ZNAK
 .I $D(ARD) s I=-1 F  S I=$N(ARD(I)) Q:I<0  S R2=R2_ARD(I)
 .S SPL=R1_R2 K ARD
 F I=1:1 S CAST=$E(p,I) Q:CAST=""  F J=1:1:8 S:$g(PL(CAST,J)) VYPL(J)=1
 F I=1:1:8 S:VYPL(I) ZAC=ZAC+1
 D KUST
 S p=CPL
 i (p=SPL) d  q p
 S J=0 F I=1:1:$L(SPL) S:p'[$E(SPL,I) J=1
 I 'J,$L(SPL)=$L(p) S p=SPL
 Q p
KUST F I=1:1 S ZNAK=$E(A,I) Q:ZNAK=""  D  Q:'ZAC
 .S C=-1,T=0 F K=1:1:8 S:$g(PL(ZNAK,K))&'VYPL(K) T=1
 .Q:T  S CPL=CPL_ZNAK F K=1:1:8 S:$g(PL(ZNAK,K)) VYPL(K)=0,ZAC=ZAC-1
 Q
 //
cnvPlTxt(tpl,dpl)
 // cnvPlTxt(tpl,dpl) - transformace platnosti na textovy udaj
 n (tpl,dpl)
 s tpl=$p($$pltHex^OBapiED(tpl),"~",1)
 s dpl=$$pldHex^OBapiED(dpl-1)
 q $$cnvPlHTxt^OBapiED(dpl_tpl)
 //
cnvPlHTxt(h)
 // cnvPlHTxt(h) - transformace platnosti hex na textovy udaj
 n (h)
 q:h="" ""
 s D=":" s x=0 f i=1:1:$l(h) s a=$e(h,i) d
 .q:a?1n  q:"ABCDEF"[a  s x=1
 q:x ""  s v(1)=1 f i=2:1:7 s v(i)=v(i-1)*2
 k a,c s b=3 f i=$l(h):-1:$l(h)-2 s x=$e(h,i) d
 .s:x?1a x=$f("ABCDEF",x)+8 s a(b)=x,b=b-1
 s x=a(2)*16+a(3) f i=7:-1:1 s c(i)=x\v(i) s:c(i) x=x-v(i)
 s b=$$cnvPlDplTxt(a(1))
 //s b=$p("w::+c:-c:sudý:lichý:sudý+c:sudý-c:lichý+c:lichý-c:+P:lichý+P:sudý+P:-P:lichý-P:sudý-P",D,a(1)+1)
 s a="",b=b_$e($j("",7),1,7-$l(b))
 f i=1:1:7 s a=a_$s(c(i):$p("Po:Út:St:Čt:Pá:So:Ne",D,i),1:" .")
 q a_" "_b
cnvPlDplTxt(dpl)
 q $p("w::+c:-c:sudý:lichý:sudý+c:sudý-c:lichý+c:lichý-c:+P:lichý+P:sudý+P:-P:lichý-P:sudý-P",":",($g(dpl)+1))
cnvPlHTplDpl(h)
 // cnvPlHTxt(h) - transformace platnosti hex na tydeni a dlouhodobou (tpl~dpl)
 n (h)
 q:h="" ""
 s D=":" s x=0 f i=1:1:$l(h) s a=$e(h,i) d
 .q:a?1n  q:"ABCDEF"[a  s x=1
 q:x ""  s v(1)=1 f i=2:1:7 s v(i)=v(i-1)*2
 k a,c s b=3 f i=$l(h):-1:$l(h)-2 s x=$e(h,i) d
 .s:x?1a x=$f("ABCDEF",x)+8 s a(b)=x,b=b-1
 s x=a(2)*16+a(3) f i=7:-1:1 s c(i)=x\v(i) s:c(i) x=x-v(i)
 s tpl="" s dpl=1 s:(a(1)=4)!(a(1))=5 dpl=a(1)
 s a="" f i=1:1:7 s a=a_+c(i)
 i a="1111111" s tpl="" q tpl_"~"_dpl
 i a="1111100" s tpl="X" q tpl_"~"_dpl
 f i=1:1:7 d
 .i (+c(i))&(i'=7) s:+c(i) tpl=tpl_i
 .i (+c(i))&(i=7) s:+c(i) tpl=tpl_"+"
 q tpl_"~"_dpl
 //
 // prechod na novy mesic jako uloha na pozadi
 //
gNewMonthAsJob(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err2" s err="" k out
 f cnt=1:1:1 d
 .s out("dta",cnt)=$p($g(^[nmsp]OI(idfa,"jb","new_month_as_job")),"~",cnt)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","new_month_as_job","arr",1)
 q 0
 //
sNewMonthAsJob(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err2" s err="" k out
 //in("dta",1)=rrrrmm
 //in("arr",1)=sys
 k ^[nmsp]OI(idfa,"jb","new_month_as_job")
 f cnt=1:1:1 d
 .s $p(^[nmsp]OI(idfa,"jb","new_month_as_job"),"~",cnt)=$g(in("dta",cnt))
 m ^[nmsp]OI(idfa,"jb","new_month_as_job","arr",1)=in("arr",1)
 q 0
 //
dNewMonthAsJob(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err2" s err="" k out
 k ^[nmsp]OI(idfa,"jb","new_month_as_job") 
 q 0
 //
 // ==========================================
 // chyby
err1 s $zt="" q ""
err2 s $zt="" k out q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDGrafikonOs" type="INT" languagemode="0" timestamp="64466,81856.070606"><![CDATA[
OBapiEDGrafikonOs q
 // grafikon ridici
gGrfOs(idfa,nmsp,osc,hrl,grf,in,out)
 // nacteni polozky z grafikonu pro osc
 // s err=$$gGrfOs(idfa,nmsp,osc,hrl,grf,.in,.out)
 // - in
 //   -
 // - out
 //   out("dta",1)=mzda
 //            ,2)=odpracovane hodiny (min)
 //            ,3)=diety
 //            ,4)=ostatni hodiny (min)
 //            ,5)=horlog konce (hrl)
 //            ,6)=rrmm
 //            ,7)=zp
 //            ,8)=horlog zacatku
 //            ,9)=cas zacatku 1.interval (min)
 //            ,10)=cas konce 1.interval (min)
 //            ,11)=cas zacatku 2.interval (min)
 //            ,12)=cas konce 2.interval (min)
 //     	   ,13)=poznamka
 //			   ,14)=celkove km
 //
 n (idfa,nmsp,osc,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(osc)="" q "1~osc="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 s val=$g(^[nmsp]XL(dz,osc,hrl,grf))
 f cnt=1:1:14 s out("dta",cnt)=$p(val,":",cnt)
 // prevod hh.mm na mm pro grafikonove polozky
 i '(grf?.n) f cnt=2,4 s out("dta",cnt)=$$hm^OBapiED(out("dta",cnt))
 // ------------------------------------------
 q 0
 //
sGrfOs(idfa,nmsp,osc,hrl,grf,in,out)
 // zapis polozky do grafikonu pro osc
 // s err=$$sGrfOs(idfa,nmsp,osc,hrl,grf,.in,.out)
 // - in
 //   in("dta",1)=mzda
 //           ,2)=odpracovane hodiny
 //           ,3)=diety
 //           ,4)=ostatni hodiny
 //           ,5)=horlog konce
 //           ,6)=rrmm
 //           ,7)=zp
 //           ,8)=horlog zacatku
 //           ,9)=cas zacatku 1.interval (min)
 //           ,10)=cas konce 1.interval (min)
 //           ,11)=cas zacatku 2.interval (min)
 //           ,12)=cas konce 2.interval (min)
 //     	  ,13)=poznamka
 //           ,14)=celkove km
 // - out
 //   -
 //
 n (idfa,nmsp,osc,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(osc)="" q "1~osc="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 // prevod mm na hh.mm pro grafikonove polozky
 i '(grf?.n) f cnt=2,4 s in("dta",cnt)=$$mh^OBapiED($g(in("dta",cnt)))
 // ------------------------------------------
 s in("dta",13)=$tr($g(in("dta",13)),":","_")
 //
 s val="" f cnt=1:1:14 s $p(val,":",cnt)=$g(in("dta",cnt))
 s ^[nmsp]XL(dz,osc,hrl,grf)=val
 q 0
dGrfOs(idfa,nmsp,osc,hrl,grf,in,out)
 // zruseni polozky v grafikonu pro osc
 // s err=$$dGrfOs(idfa,nmsp,osc,hrl,grf,.in,.out)
 // - in
 // - out
 // 
 n (idfa,nmsp,osc,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(osc)="" q "1~osc="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 k ^[nmsp]XL(dz,osc,hrl,grf)
 q 0
 //
isGrfOs(idfa,nmsp,osc,hrl,grf,in,out)
 // test na existenci polozky polozky v grafikonu pro osc
 // s err=$$isGrfOs(idfa,nmsp,osc,hrl,grf,.in,.out)
 // - in
 // - out = 0 neexistuje / >0 existuje
 // 
 n (idfa,nmsp,osc,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(osc)="" q "1~osc="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 s out=$d(^[nmsp]XL(dz,osc,hrl,grf))
 q 0
 //
lGrfOs(idfa,nmsp,hrlfrom,hrlto,in,out)
 // nacteni seznamu grafikonovych polozek za obdobi hrlfrom - hrlto
 // s err=$$lGrfOs(idfa,nmsp,hrlfrom,hrlto,.in,.out)
 // - in
 //    in("osc",osc)=""         - hleda v grafikonu ridice
 //    in("par",1)=0/1          - 0 hleda pouze grafikonove zkratky / 1 hleda vse (i doklady)
 // - out
 //    out=wrk, vysledek je v ^CacheTempJB(wrk,dz,osc,hrl,grf)=""
 //
 n (idfa,nmsp,hrlfrom,hrlto,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(hrlfrom)="" q "1~hrlfrom="
 i $g(hrlto)="" q "1~hrlto="
 //
 s dz=$$gFaDz^OBapiED(idfa)
 k out s out=$$gWrkJB^OBapiED() s glb="^CacheTempJB("_out_")"
 //
 s osc="" f  s osc=$o(^[nmsp]XL(dz,osc)) q:osc=""  d
 .i $d(in("osc")) q:'$d(in("osc",osc))
 .s hrl=hrlfrom-.1 f  s hrl=$o(^[nmsp]XL(dz,osc,hrl)) q:hrl=""!(hrl?.a)!(hrl>hrlto)  d
 ..s grf=9999999999 s:+$g(in("par",1)) grf="" f  s grf=$o(^[nmsp]XL(dz,osc,hrl,grf)) q:grf=""  d
 ...i '+$g(in("par",1)) q:grf?.n
 ...s @glb@(dz,osc,hrl,grf)=""
 q 0
gPosDtaGrfOs(idfa,nmsp,grf,in,out)
 // vrati pozici pro zapis polozky do grafikonu
 n (idfa,nmsp,grf,in,out) s $zt="err" k out s out=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(grf)="" q "1~grf="
 // nactu popis polozky z ciselniku
 k arrcis s err=$$gCisItm^OBapiED(idfa,nmsp,20,grf,"",.arrcis) zt:+err "merr" s err=""
 s jedn=$p($g(arrcis("arr",grf)),"~",2)
 s odpr=$p($g(arrcis("arr",grf)),"~",3)
 // hodiny
 i jedn=1 s out=4 s:odpr out=2
 // kc
 i jedn=2 s out=1 s:grf="DIE" out=3
 q 0
 /*
tstGr
 k arr
 s arr("dta",2)=60
 s err=$$calGrfOs("VS_CSAD","USER",54255,+$h,"JIP",.arr,"","") 
 //   out("dta",1)=mzda
 //            ,2)=odpracovane hodiny (min)
 //            ,3)=diety
 //            ,4)=ostatni hodiny (min)
 //            ,5)=horlog konce (hrl)
 //            ,6)=rrmm
 //            ,7)=zp
 //            ,8)=horlog zacatku 
 w !,"err="_err,!
 zw arr
 q
 */
calGrfOs(idfa,nmsp,osc,hrl,grf,arrgrf,in,out)
 // vypocet grafikonove polozky
 // arrgrf ... pole s daty grafikonove polozky - popsano v $$gGrfOs(...
 // pro hodinove polozky dopocita mzdu
 n (idfa,nmsp,osc,hrl,grf,arrgrf,in,out) s $zt="err" k out
 // mzdove nastaveni
 k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr" s err=""
 // je v ciselniku ?
 k arrcis s err=$$isCisItm^OBapiED(idfa,nmsp,20,grf,"",.arrcis) zt:+err "merr" s err=""
 q:'$g(arrcis) 0
 // nactu popis polozky
 k arrcis s err=$$gCisItm^OBapiED(idfa,nmsp,20,grf,"",.arrcis) zt:+err "merr" s err=""
 // nejsou to hodiny
 s jedn=$p($g(arrcis("arr",grf)),"~",2) i jedn'=1 q 0
 // nactu data ridice
 k arros s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arros) zt:+err "merr" s err=""
 // vypocet provozovny ridice pro odvozeni sazeb
 s idprv="" i $g(arros("dta",4))'="" d
 .k arrns s err=$$gNs^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),$g(arros("dta",4)),"",.arrns) zt:+err "merr" s err=""
 .s idprv=$g(arrns("dta",10))
 .k arrns
 // vymazu penize
 s arrgrf("dta",1)=0
 // vyse hodin
 s odpr=$p($g(arrcis("arr",grf)),"~",3)
 s idpoz=4 s:odpr idpoz=2
 s mm=$g(arrgrf("dta",idpoz))
 // zpusob placeni
 // (0=nepocitat,1=prumer,2=tarif,3=hod.sazba,4=zaskol,5=nocni,6=special UL,7=snizena sazba,8=cekani,9=del.smena)
 s plac=$p($g(arrcis("arr",grf)),"~",5)
 //druh mzdy
 s dmz=+$g(arrmzd("arr",1,0,1))
 // sazba
 s sazb=0
 //prumer (nepocitame)
 i plac=1
 //tarif
 i plac=2 d
 .i dmz=1 s sazb=$g(arrmzd("arr",1,1,1)) i idprv'="" i $g(arrmzd("arr",1,1,1,"prv",idprv))'="" s sazb=$g(arrmzd("arr",1,1,1,"prv",idprv))
 .i dmz=2 s sazb=$g(arrmzd("arr",1,2,1))
 .// osobni tarif (pokud je osobni tatif pro vykonovou i zakladni sazbu) 
 .i $g(arrmzd("arr",0,1)) i '$g(arrmzd("arr",0,2)) s sazb=$g(arros("dta",6))
 //hod.sazba
 i plac=3 d
 .i dmz=1 s sazb=$g(arrmzd("arr",1,1,2)) i idprv'="" i $g(arrmzd("arr",1,1,2,"prv",idprv))'="" s sazb=$g(arrmzd("arr",1,1,2,"prv",idprv))
 .// dodelat osobni tarif (pouze pro casovou mzdu)
 .i $g(arrmzd("arr",0,1)) i dmz=1 s sazb=$g(arros("dta",6))
 //zaskolovani
 i plac=4 s sazb=$g(arrmzd("arr",1,0,10))
 //nocni
 i plac=5 d
 .i dmz=1 s sazb=$g(arrmzd("arr",1,1,15)) i idprv'="" i $g(arrmzd("arr",1,1,15,"prv",idprv))'="" s sazb=$g(arrmzd("arr",1,1,15,"prv",idprv))
 .i dmz=2 s sazb=$g(arrmzd("arr",1,2,7))
 //special UL
 i plac=6 s sazb=$g(arrmzd("arr",3,2))
 //snizena sazba
 i plac=7 s sazb=$g(arrmzd("arr",3,1))
 //cekani
 i plac=8 d 
 .i dmz=1 s sazb=$g(arrmzd("arr",1,1,9)) i idprv'="" i $g(arrmzd("arr",1,1,9,"prv",idprv))'="" s sazb=$g(arrmzd("arr",1,1,9,"prv",idprv))
 .i dmz=2 s sazb=$g(arrmzd("arr",1,2,4))
 //del.smena
 i plac=9 d
 .i dmz=1 s sazb=$g(arrmzd("arr",1,1,24)) i idprv'="" i $g(arrmzd("arr",1,1,24,"prv",idprv))'="" s sazb=$g(arrmzd("arr",1,1,24,"prv",idprv))
 .i dmz=2 s sazb=$g(arrmzd("arr",1,2,13))
 //zalohove hodiny
 i plac=10 d
 .s sazb=$g(arrmzd("arr",3,3))
 //vypocet
 s arrgrf("dta",1)=sazb*$$mc^OBapiED(mm)
 q 0
 ;;
err s $zt="" k out s:$g(err)="" err="1~"_$ze q "1~"_err
]]></Routine>


<Routine name="OBapiEDGrafikonRz" type="INT" languagemode="0" timestamp="63278,35272"><![CDATA[
OBapiEDGrafikonRz q
 // grafikon auta
gGrfRz(idfa,nmsp,rz,hrl,grf,in,out)
 // nacteni polozky z grafikonu pro rz
 // s err=$$gGrfRz(idfa,nmsp,rz,hrl,grf,.in,.out)
 // - in
 //   -
 // - out
 //   out("dta",1)=trzba
 //            ,2)=doba provozu (min)
 //            ,3)=celkové km
 //            ,4)=doba jizdy (min)
 //            ,5)=horlog konce (hrl)
 //            ,6)=rrmm
 //            ,7)=zp
 //            ,8)=norma PHM
 //            ,9)=PHM
 //           ,10)=PHM FAME
 //           ,11)=olej
 //           ,12)=topeni
 //           ,13)=AdBlue
 //           ,14)=cas zacatku 1.interval (min)
 //           ,15)=cas konce 1.interval (min)
 //           ,16)=cas zacatku 2.interval (min)
 //           ,17)=cas konce 2.interval (min)
 //           ,18)=doba topeni (min)
 //           ,19)=PHM B30 (lt)
 //
 n (idfa,nmsp,rz,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 s val=$g(^[nmsp]XA(dz,rz,hrl,grf))
 f cnt=1:1:19 s out("dta",cnt)=$p(val,":",cnt)
 // u sj jsou hodiny ulozene jako hh.mm, konverze
 i grf>$$qsj^OBapiED() f cnt=2,4 s out("dta",cnt)=$$hm^OBapiED(out("dta",cnt))
 // =============================================
 q 0
 //
sGrfRz(idfa,nmsp,rz,hrl,grf,in,out)
 // zapis polozky do grafikonu pro rz
 // s err=$$sGrfRz(idfa,nmsp,rz,hrl,grf,.in,.out)
 // - in
 //    in("dta",1)=trzba
 //            ,2)=doba provozu (min)
 //            ,3)=celkové km
 //            ,4)=doba jizdy (min)
 //            ,5)=horlog konce (hrl)
 //            ,6)=rrmm
 //            ,7)=zp
 //            ,8)=norma PHM
 //            ,9)=PHM
 //           ,10)=PHM FAME
 //           ,11)=olej
 //           ,12)=topeni
 //           ,13)=AdBlue
 //           ,14)=cas zacatku 1.interval (min)
 //           ,15)=cas konce 1.interval (min)
 //           ,16)=cas zacatku 2.interval (min)
 //           ,17)=cas konce 2.interval (min)
 //           ,18)=doba topeni (min)
 //           ,19)=PHM B30 (lt)
 // - out
 //   -
 //
 n (idfa,nmsp,rz,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 // u sj jsou hodiny ulozene jako hh.mm, konverze
 i grf>$$qsj^OBapiED() f cnt=2,4 s in("dta",cnt)=$$mh^OBapiED(in("dta",cnt))
 // =============================================
 s val="" f cnt=1:1:19 s $p(val,":",cnt)=$g(in("dta",cnt))
 s ^[nmsp]XA(dz,rz,hrl,grf)=val
 q 0
dGrfRz(idfa,nmsp,rz,hrl,grf,in,out)
 // zruseni polozky v grafikonu pro rz
 // s err=$$dGrfRz(idfa,nmsp,rz,hrl,grf,.in,.out)
 // - in
 // - out
 // 
 n (idfa,nmsp,rz,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 k ^[nmsp]XA(dz,rz,hrl,grf)
 q 0
 //
isGrfRz(idfa,nmsp,rz,hrl,grf,in,out)
 // test na existenci polozky polozky v grafikonu pro rz
 // s err=$$isGrfRz(idfa,nmsp,rz,hrl,grf,.in,.out)
 // - in
 // - out = 0 neexistuje / >0 existuje
 // 
 n (idfa,nmsp,rz,hrl,grf,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(grf)="" q "1~grf="
 s dz=$$gFaDz^OBapiED(idfa)
 s out=$d(^[nmsp]XA(dz,rz,hrl,grf))
 q 0
 //
lGrfRz(idfa,nmsp,hrlfrom,hrlto,in,out)
 // nacteni seznamu grafikonovych polozek za obdobi hrlfrom - hrlto
 // s err=$$lGrfRz(idfa,nmsp,hrlfrom,hrlto,.in,.out)
 // - in
 //    in("rz",rz)=""           - hleda v grafikonu auta
 //    in("par",1)=0/1          - 0 hleda pouze grafikonove zkratky / 1 hleda vse (i doklady)
 // - out
 //    out=wrk, vysledek je v ^CacheTempJB(wrk,dz,rz,hrl,grf)=""
 //
 n (idfa,nmsp,hrlfrom,hrlto,in,out) s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(hrlfrom)="" q "1~hrlfrom="
 i $g(hrlto)="" q "1~hrlto="
 //
 s dz=$$gFaDz^OBapiED(idfa)
 k out s out=$$gWrkJB^OBapiED() s glb="^CacheTempJB("_out_")"
 //
 s rz="" f  s rz=$o(^[nmsp]XA(dz,rz)) q:rz=""  d
 .i $d(in("rz")) q:'$d(in("rz",rz))
 .s hrl=hrlfrom-.1 f  s hrl=$o(^[nmsp]XA(dz,rz,hrl)) q:hrl=""!(hrl?.a)!(hrl>hrlto)  d
 ..s grf=9999999999 s:+$g(in("par",1)) grf="" f  s grf=$o(^[nmsp]XA(dz,rz,hrl,grf)) q:grf=""  d
 ...i '+$g(in("par",1)) q:grf?.n
 ...s @glb@(dz,rz,hrl,grf)=""
 q 0
err s $zt="" k out s:$g(err)="" err="1~"_$ze q "1~"_err
]]></Routine>


<Routine name="OBapiEDInit" type="INT" languagemode="0" timestamp="65659,42946.025037"><![CDATA[
OBapiEDInit q
 //
ExportData(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 //in("dta",1)=filename
 //out("msg",cnt)=txt
 s filename=$g(in("dta",1))
 i filename="" s out("msg",$i(out("msg")))="není definován název souboru" q 0
 //
 k globalsList	
 s globalsList("^OI.gbl")=""
 s globalsList("^OM.gbl")=""
 s globalsList("^OBLOC.gbl")=""
 s globalsList("^OBJS.gbl")=""
 s globalsList("^OBD.gbl")=""
 s globalsList("^OBPREM.gbl")=""
 s globalsList("^OBPREMn.gbl")=""
 s globalsList("^OBPREMa.gbl")=""
 s globalsList("^OBPL.gbl")=""
 s globalsList("^obpx.gbl")=""
 s globalsList("^obpy.gbl")=""
 s globalsList("^obpz.gbl")=""
 s globalsList("^OBT.gbl")=""
 s globalsList("^OBTcomp.gbl")=""
 s globalsList("^OBS.gbl")=""
 s globalsList("^OBPXSC.gbl")=""
 s globalsList("^OBOBJ.gbl")=""
 s globalsList("^XL.gbl")=""
 s globalsList("^XA.gbl")=""
 s globalsList("^JRZ.gbl")=""
 s globalsList("^JRSET.gbl")=""
 s globalsList("^JRL.gbl")=""
 s globalsList("^JRi.gbl")=""
 //
 s err=""
 //
 i $g(nmsp)="" {
	 k myarr d ##class(ALVA.EDISON.Main).GetApplicationInfo(-1,.myarr,idfa)
 	 s nmsp=$g(myarr(0))
 }
 s err=##class(%Library.Global).Export(nmsp,.globalsList,filename,7,,"-d")
 q err
 //
InitObdobi(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 //in("dta",1)=rrrrmm
 //out("msg",cnt)=txt
 k out
 //nactu provozovny pro idfa
 s rrrrmm=$g(in("dta",1))
 i rrrrmm="" s out("msg",$i(out("msg")))="není definováno rrrrmm" q 0
 s rr=rrrrmm\100#100
 s mm=rrrrmm#100
 k myarr s err=$$gFaPrv^OBapiED(idfa,nmsp,"",.myarr)
 //provozovny z firmy
 s zp="" f {
	 s zp=$o(myarr("arr",2,zp)) i zp="" q
	 s ^[nmsp]OBD(zp)=mm_":"_rr
	 s out("msg",$i(out("msg")))="pro zp="_zp_" nastaveno období "_mm_":"_rr
 }
 //kontrola aktualnich provozoven
 s zp="" f {
	 s zp=$o(^[nmsp]OBD(zp)) i zp="" q
	 i $g(^[nmsp]OBD(zp))'=(mm_":"_rr) {
		 s ^[nmsp]OBD(zp)=mm_":"_rr
	 	 s out("msg",$i(out("msg")))="pro zp="_zp_" nastaveno období "_mm_":"_rr
	 }
 }
 q 0
 //
InitCis(idfa,nmsp,in,out)
 //d InitCis^OBapiEDInit("","user",.i,.o)
 n (idfa,nmsp,in,out)
 //inicializace ciselniku
 //druhy spoju
 s val="Vnitro|Dálkový|Městský|Příměstský|Mezinárodní|Smluvní|Režijní"
 f cnt=1:1:$l(val,"|") s ^[nmsp]OI("DSP",cnt)=$p(val,"|",cnt)
 //zpusob platby
 s ^[nmsp]OI("ZPPL",1)="Inkaso"
 s ^[nmsp]OI("ZPPL",2)="Inkaso vs"
 s ^[nmsp]OI("ZPPL",3)="Faktura"
 s ^[nmsp]OI("ZPPL",4)="Poukázka"
 s ^[nmsp]OI("ZPPL",5)="Hotově"
 s ^[nmsp]OI("ZPPL",8)="VnitroFaktura"
 s ^[nmsp]OI("ZPPL",9)="NevystavFakturu"
 //rezijni km
 s ^[nmsp]OI("RKM",11)="Přeprav.zajištění:PřepZaj"
 s ^[nmsp]OI("RKM",12)="Technické závady:TechZáv"
 s ^[nmsp]OI("RKM",13)="Zkušební jízdy:ZkušJíz"
 s ^[nmsp]OI("RKM",14)="Ostatní režij.km:OstReKm"
 s ^[nmsp]OI("RKM",15)="OstatSledKm:OstSlKm"
 s ^[nmsp]OI("RKM",16)="KorekceTachAuto:KorTchgA"
 s ^[nmsp]OI("RKM",17)="KorekceTachRučně:KorTchgR"
 s ^[nmsp]OI("RKM",21)="Objížďky-vnitro:ObjVni"
 s ^[nmsp]OI("RKM",22)="Objížďky-dálkové:ObjDál"
 s ^[nmsp]OI("RKM",23)="Objížďky-město:ObjMěs"
 s ^[nmsp]OI("RKM",24)="Objížďky-příměst.:ObjPří"
 s ^[nmsp]OI("RKM",25)="Objížďky-mezinár.:ObjMez"
 s ^[nmsp]OI("RKM",26)="Objížďky-smluvní:ObjSml"
 s ^[nmsp]OI("RKM",27)="Objížďky-režij.km:ObjRež"
 // neprepravni vykony
 s err=$$InitNeprVyk(idfa,nmsp,"","")
 // poplatky pro SJ a OBJ
 s err=$$InitSjPopl(idfa,nmsp,"","")
 // grafikon auta
 f cnt=1:1 s val=$p($t(@("GRAA")+cnt),"//",2) q:val=""  d
 .s ^[nmsp]OI(idfa,"GRAA",$p(val,"|",1))=$p(val,"|",2)
 // grafikon ridici
 s err=$$InitGrafOs(idfa,nmsp,"","")
 //okresy
 d mkCisOkres^MlJFapiCiSet("mline")
 q 0
InitNeprVyk(idfa,nmsp,in,out)
 //neprepravni vykony
  n (idfa,nmsp,in,out)
  f cnt=1:1 s val=$p($t(@("NEPH")+cnt),"//",2) q:val=""  d
  .q:$d(^[nmsp]OI("NEPH",$p(val,"|",1)))
  .s $p(^[nmsp]OI("NEPH",$p(val,"|",1)),":",2)=$p(val,"|",2)
  .s $p(^[nmsp]OI("NEPH",$p(val,"|",1)),":",4)=$p(val,"|",3)
  .s $p(^[nmsp]OI("NEPH",$p(val,"|",1)),":",7)=1			//nabizet
  q 0
InitGrafOs(idfa,nmsp,in,out)
 // grafikon ridici = id|nazev:jed:odpr:fond#placeno#kdy
 n (idfa,nmsp,in,out)
 f cnt=1:1 s val=$p($t(@("GRAO")+cnt),"//",2) q:val=""  d
 .s id=$p(val,"|",1) s val=$p(val,"|",2)
 .i idfa="VS_CSAD" i id="JIP" s $p(val,"#",2)=2
 .i (idfa="LIPA_CSAD")!(idfa="USTI_DPUK") i id="PZA" s $p(val,"#",2)=3
 .q:$d(^[nmsp]OI(idfa,"GRAO",id))
 .//pro nove nastavim nenabizet
 .s $p(val,"#",3)=4
 .s ^[nmsp]OI(idfa,"GRAO",id)=val
 q 0
InitSjPopl(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 f cnt=1:1 s val=$p($t(@("SJPOPL")+cnt),"//",2) q:val=""  d
 .s ^[nmsp]OI(idfa,"SJpopl",(+$p(val,"|",1)))=$p(val,"|",2)
 .s dszb=$p(val,"|",3)
 .f cnti=1:1 q:$p(dszb,"~",cnti)=""  d
 ..i '$d(^[nmsp]OI(idfa,"SJpopl",(+$p(val,"|",1)),$p(dszb,"~",cnti))) d
 ...s ^[nmsp]OI(idfa,"SJpopl",(+$p(val,"|",1)),$p(dszb,"~",cnti))=""
 q 0
 //penezni ustavy
 //^[nmsp]OI(idfa,"PU")
 q 0
NEPH
 //10|čekání|HodČek
 //11|hodiny plac.tarifem|HodTar
 //12|hodiny neplacené|HodNepl
 //13|hodiny jízdy|HodJíz
 //14|doba manipulace|HodMan
 //15|přest.na jídlo|HodJídl
 //16|bezp.přestávka|HodBP
 //17|odvod tržeb|OdvTržeb
 //18|vyrovnávací doba|HodVyrDoba
 //19|hodiny jízdy po turnuse|HodJízPoTur
 //20|příplatek rozděl.směna|PříplRozdělSmě
 //21|DODK|DODK
 //22|opravy na cestě|HodOpr
 //23|hodiny rozdělené směny|HodRozdělSm
 //31|výměna pneu za zálož|VýmPneu
 //32|vým.pneu a vzd.ručně|VýmPneR
 //33|vým.pneu a vzd.hydr.|VýmPneH
 //34|vněj.mytí aut.umývár|MytíUmý
 //35|vněj.mytí kart&hadic|MytíHad
 //36|vymet.,utření sedač.|VymetSe
 //37|vytření mokr.hadrem|Vytření
 //38|mytí vnitř.s ukliz.|Mytí&Uk
 //39|mytí vnitř.řid.sám.|MytíSám
 //40|mytí motoru|MytíMot
 //41|vým.oleje v motoru|VýmOlMo
 //42|vým.ol.v mot./odsáv|OlMotOd
 //43|technické ošetř. A|TchOš-A
 //44|technické ošetř. B|TchOš-B
 //45|vým.oleje v převod|VýmOlPř
 //46|STK|STK
 //50|pracovní záloha|PracZáloha
 //60|zaškolování|Zaškol
 //70|jiné práce(průměr)|JinéPr
 //76|počet spojů +/-|Spoje +/-
 //77|zásilky|Zásilky
 //78|přípl.v Kč|PříplKč
 //79|plnění plyn|PlněníPlyn
 //80|fixní Kč k Turnusu|FixKčTu
 //81|přípl.nocování|PříplKčNocv
 //82|přípl.mytí BUS v Kč|PříplKčMytiBus
 //83|přípl.zaj.mimořádnosti|PříplKčZajMimo
 //84|přípl.MHD|PříplKčMHD
 //99|hodiny sníženou sazbou|HodSnížSzb
 //
SJPOPL
 //100|Parkovné|1~2~3~4|
 //200|Nocležné|1~2~3~4|
 //300|Diety|1~3~4|
 //400|Náhr.za 2.a další řidiče|1~3~4|
 //500|Silniční daň|1~3~4|
 //600|Vstupné v tuzemsku|2|
 //700|Ostatní poplatky|1~2~3~4|
 //800|Rozdíl ceny PHM|1~3~4|
 //900|Euromýtné|1|
 //1000|Daň z obratu (Německo)|1|
 //1100|Tunely|1|
 //1200|Trajekty|1|
 //1300|Ostatní zahr.poplatky|1|využ.na zahr.DPH, přefaktur.zákazníkovi
 //1400|Vybrané jízdné|1|
 //1500|Univerzální|1~2~3~4|uživatelské nastavení popisu
 //1600|Mýtné ČR|1~2~3~4|
 //1700|Univerzální|1~2~3~4|uživatelské nastavení popisu
 //1800|Univerzální|1~2~3~4|uživatelské nastavení popisu
 //1900|Univerzální|1~2~3~4|uživatelské nastavení popisu
 //2000|Mýtné SK|1|
 //2100|Mýtné Slo|1|
 //2200|Mýtné Hr|1|
 //2300|Mýtné A|1|
 //2400|Mýtné I|1|
 //2500|Mýtné F|1|
 //2600|Mýtné PL|1|
 //2700|Vjezdy do měst|1| 
 //
GRAA //ZKR|POPIS|TYP
 //VIC|Víced.jízda|3
 //PRO|Prostoj|3
 //TPA|Tech.ošetř. A|3
 //TPB|Tech.ošetř. B|3
 //TPC|Tech.ošetř. C|3
 //BOP|Běžná oprava|3
 //DIL|Na dílně|3
 //TOV|Techn.ošetř|3
 //HOP|Oprava po havárii|3
 //SOP|Středová oprava|3
 //PUD|Pravidelná údržba|3
 //TVO|Turn.volno|3
 //ZRU|Zrušení vozidla|3
 //
 //-------------------------------------------
 //jed           ->> 1=hod,2=Kc,3=vycpavka
 //placeno       ->> 1=prumer,2=tarif,3=hod.sazba,4=zaskol,5=nocni,6=special UL,7=hodiny snizenou sazbou,8=cekani,9=delena smena,10=zal.hodiny
 //kdy           ->> 1=vsedni,2=sone,3=svatky,4=nikdy,5=PoUtStCtPa
 //-------------------------------------------
 // veolia praha - jizda hybrid, pokus, pokud to neprojde, nepouzivat, jinak vsem
GRAO //id|nazev:jed:odpr:fond#placeno#kdy
 //JHY|Jízda hybrid:1::1##
 //JSA|Jízda Světluška:1:1##
 //ZAH|ZálohovéHod:1:1#2#
 //NVS|NáhrVolnoSvát:1:1##
 //ZDZ|Zdr.způsobil.:1::1#1#
 //PHH|Pohotovost na pracovišti:1:1##
 //PHP|PohotPlán:1##
 //PHD|PohotDoma:1##
 //PHJ|PohotJiMi:1##
 //PHV|PohotDomSN:1##2
 //HSA|Hod.sníž.s:1:1#7#
 //UOP|Údržba(UL):1:1#6#
 //DOV|Dovolená:1::1#1#1
 //NEM|Nemoc:1::1##
 //OCR|Ošetřov.čl.rodiny:1::1##
 //PRE|Překážky:1::1#1#
 //PR6|Překážky60%:1::1#1#
 //PR8|Překážky80%:1::1#1#
 //PR0|Překážky100%:1::1#1#
 //PRB|PřekážkyBezMzd:1::1##1
 //PRC|PřekážkyCOVID:1::1#1#
 //HDR|Lékař:1::1#1#1
 //HSV|Svatba:1::1#1#1
 //HND|Dítě:1::1#1#1
 //HDK|Krev:1::1#1#1
 //HSK|Vst.a j.školení:1::1#1#
 //HKO|Komise:1::1#1#1
 //HPO|Pohřeb:1::1#1#1
 //HST|Stěhování:1::1#1#1
 //TVO|Turn.volno:3##
 //VOL|Volno:3##
 //NEP|Nepl.volno:1::1##
 //ABS|Absence:1##
 //VIC|Víced.jízd:3##
 //SKO|Prav.školení:1:1##
 //POH|Pohotovost:2##
 //OST|Ostat.práce:1:1#2#
 //SVN|Svát.Neodpr:1::1##3
 //SVO|Svát.Odprac:1#1#3
 //DIE|Stravné:2##
 //REF|Refundace:1::1#1#
 //VOJ|Voj.cvičení:1::1##
 //JIP|Jiné práce:1:1#1#
 //NCV|Nocovné:2##
 //NCH|Nocování:1##
 //PZA|Prac.záloha:1:1#2#
 //NOC|Hodiny v noci:1#5#
 //JIM|Jízda&manip:1:1#3#
 //ZSK|Zaškolování:1#4#
 //HTA|Hod.tarifem:1:1#2#
 //HNE|Hod.nepl.odpr:1:1##
 //SON|Hod.v SONE:1#1#2
 //PAU|Pauš.mzda:2##
 //OSK|Ost.práceKč:2##
 //CEK|Čekání v Kč:2##
 //OSO|Osobní ohodnocení v Kč:2##
 //H60|Nedost.práce:1::1##
 //LPP|Lim.přesč.pr:1##
 //ZAS|Zásilky:2##
 //CEP|Čekání v Hod:1::#8#
 //DSP|Rozděl.směna:1::#9#
 //DOP|Doplatek do FPČ:1::1#1#
 //NPC|Náhrada při pracovní cestě:1::1#1#
 //PLP|Periodická lékařská prohlídka:1::1#1#
 //PHM|Pohotovost mimo pracoviště:1::##
 //PRO|Překážky v práci odbory:1::1#1#
 //PRV|Překážky v práci osobní:1::1#1#
 //PST|Psychotesty:1::1#1#
 //REO|Refundace odbory:1::1#1#
 //SKB|Školení BOZP:1:1:#2#
 //STP|Stravné psychotesty:2::##
 //STS|Stravné pravidelné školení+BOZP:2::##
 //ZAO|Zaškolování na odbavovací techniku:1:1#2#
 //KMZ|Korekce mzdy:2##
 //CES|Cestovné v Kč:2##
 //SMV|Směna z volna v Kč:2##
 //ODV|Otcovská dovolená:1::1#1#1
 //RDV|Rodičovská dovolená:1::1#1#1
 //PVH|Převoznické hodiny:1:1##
 //PPO|Příplatek k pohotovosti:1##
 //JIV|Řídí jiné vozidlo vyňaté z AETR:3##
 //NIC|Nepřidělená práce:1::##
 //
]]></Routine>


<Routine name="OBapiEDJBN" type="INT" languagemode="0" timestamp="63145,53908"><![CDATA[
OBapiEDjbn q
 // stavajici struktura
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,nmsp)=km	(ujete km v obdobi z jednoho namespace)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm)=km		(ujete km v obdobi)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO")=km				(celkova suma km korekce, celk. km jsou tyto + sumar po mesicich)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",$h)=kmkorekce~poznamka~mlp~fullname	(korekce km)
 // 
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm,nmsp)=1 (info o zapoctenem obdobi z namespace)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm)=1		(info o zapoctenem obdobi)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")=rr_":"_mm		(celkova doba jbn rr a mm)
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",$h)=rr:mm~poznamka~mlp~fullname	(korekce rr:mm)
 //
 // rozsireni - odmena -
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA")=idodmeny~rrrrmm
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",$h)=idodmeny~rrrrmm~mlp~fullname
 // rozsireni - rrrrmm vstupu -
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"VSTUP")=rrrrmm
 // ^[sysnmsp]MlMzJBN(idfa,os,1,"VSTUP",$h)=rrrrmm~mlp~fullname
 // - id odmena - id odmeny, kterou zamestnanec dostal
 // - rrrrmm	- obdobi, kdy byla odmena vyplacena
 // + ciselnik odmen
 // idodmeny)=ujetoKM~odjetoLet~odmenaKc
 // 
chngJBN(idfa,sysnmsp,os,in,out)
 // nastaveni/zmena udaju v evidenci jizdy bez nehod
 // in("dta",1)=km - nová hodnota km
 // in("dta",2)=rr~mm - nová hodnota pocet roku~pocet mesicu 
 // in("dta",3)=tx - poznamka k oprave
 // in("dta",4)=idodmena 		(vyplacena odmena)
 // in("dta",5)=rrrrmm_odmena	(obdobi vyplacene odmeny)
 // in("dta",6)=rrrrmm_vstup	(obdobi vstupu do souteze)
 // in("idos")=mlp~loginname~fullname
 n (idfa,sysnmsp,os,in,out) s $zt="err" k out
 // korekce KM - pokud prijdou
 i $g(in("dta",1))'="" d
 .s kmc=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO"))
 .s rrrrmm="" f  s rrrrmm=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm)) q:rrrrmm=""  d
 ..s kmc=kmc+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm))
 .s kmc=$j(kmc,0,0)
 .s kmcor=$g(in("dta",1))-(kmc-($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO"))))
 .i kmcor'=+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO")) d
 ..s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO")=kmcor
 ..s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",$h)=kmcor_"~"_$g(in("dta",3))_"~"_$p($g(in("idos")),"~",1)_"~"_$p($g(in("idos")),"~",3)
 // korekce OBD - pokud prijdou rr nebo mm
 i ((($p($g(in("dta",2)),"~",1)'="")!($p($g(in("dta",2)),"~",2)'=""))) d
 .i ((+$p($g(in("dta",2)),"~",1))_":"_(+$p($g(in("dta",2)),"~",2)))'=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")) d
 ..s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")=((+$p($g(in("dta",2)),"~",1))_":"_(+$p($g(in("dta",2)),"~",2)))
 ..s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",$h)=((+$p($g(in("dta",2)),"~",1))_":"_(+$p($g(in("dta",2)),"~",2)))_"~"_$g(in("dta",3))_"~"_$p($g(in("idos")),"~",1)_"~"_$p($g(in("idos")),"~",3)
 // odmena
 i $g(in("dta",4))'="" d
 .k arrjbn s err=$$gJBN^OBapiED(idfa,sysnmsp,os,"",.arrjbn)
 .s val=""
 .s $p(val,"~",1)=$g(in("dta",4))
 .s $p(val,"~",2)=$g(in("dta",5))
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA")=val
 .s val=""
 .s $p(val,"~",1)=$g(in("dta",4))
 .s $p(val,"~",2)=$g(in("dta",5))
 .s $p(val,"~",3)=$p($g(in("idos")),"~",1)
 .s $p(val,"~",4)=$p($g(in("idos")),"~",3)
 .s $p(val,"~",5)=$g(arrjbn("dta",1))				//akt.stav.km
 .s $p(val,"~",6)=$p($g(arrjbn("dta",2)),"~",1)		//akt.stav.let
 .s $p(val,"~",7)=$p($g(arrjbn("dta",2)),"~",2)		//akt.stav.mes
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",$h)=val
 .k arrjbn
 // vstup do souteze
 i $g(in("dta",6))'="" d
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"VSTUP")=$g(in("dta",6))
 .s val=""
 .s $p(val,"~",1)=$g(in("dta",6))
 .s $p(val,"~",2)=$p($g(in("idos")),"~",1)
 .s $p(val,"~",3)=$p($g(in("idos")),"~",3)
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"VSTUP",$h)=val
 q 0
gJBN(idfa,sysnmsp,os,in,out)
 // ========================================
 // prehled udaju jizdy bez nehod pro ridice
 // ========================================
 // out("dta",1)=km celkem
 // out("dta",2)=rr~mm celkem
 // out("dta",3)=rrrrmm posledni napoctene obdobi
 // out("dta",4)=posleni vyplacena odmena
 // out("dta",5)=rrrrmm posleni vyplacene odmeny
 // out("dta",6)=rrrrmm vstupu do souteze
 // out("arr",1)=km vychozi stav (korekce)
 // out("arr",1,rrrmm)=km v mesici
 // out("arr",2,hrl,"dta,1)=km korekce					(historie)
 // out("arr",2,hrl,"dta,2)=poznamka ke korekci			(historie)
 // out("arr",2,hrl,"dta,3)=idos						(historie)
 // out("arr",2,hrl,"dta,4)=fullname					(historie)
 // out("arr",3,hrl,"dta,1)=rr~mm korekce				(historie)
 // out("arr",3,hrl,"dta,2)=poznamka ke korekci			(historie)
 // out("arr",3,hrl,"dta,3)=idos						(historie)
 // out("arr",3,hrl,"dta,4)=fullname					(historie)
 // out("arr",4,hrl,"dta,1)=id stupne vyplacene odm.	(historie)
 // out("arr",4,hrl,"dta,2)=rrrrmm stupne vyplacene odm.(historie)
 // out("arr",4,hrl,"dta,3)=idos						(historie)
 // out("arr",4,hrl,"dta,4)=fullname					(historie)
 // out("arr",4,hrl,"dta,5)=stav km						(historie)
 // out("arr",4,hrl,"dta,6)=stav let					(historie)
 // out("arr",4,hrl,"dta,7)=stav mesicu					(historie)
 n (idfa,sysnmsp,os,in,out) s $zt="err" k out
 // km celkem
 s out("dta",1)=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO"))
 s out("arr",1)=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO"))
 s rrrrmm="" f  s rrrrmm=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm)) q:rrrrmm=""  d
 .s out("dta",1)=out("dta",1)+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm))
 .s out("arr",1,rrrrmm)=+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm))
 .s out("dta",3)=rrrrmm
 s out("dta",1)=$j(out("dta",1),0,0)
 // rrrr,mm celkem
 s $p(out("dta",2),"~",1)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")),":",1)
 s $p(out("dta",2),"~",2)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")),":",2)
 // korekce km
 s hrl="" f  s hrl=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",hrl)) q:hrl=""  d
 .s out("arr",2,hrl,"dta",1)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",hrl)),"~",1)
 .s out("arr",2,hrl,"dta",2)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",hrl)),"~",2)
 .s out("arr",2,hrl,"dta",3)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",hrl)),"~",3)
 .s out("arr",2,hrl,"dta",4)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNO",hrl)),"~",4)
 // korekce rrrr,mm
 s hrl="" f  s hrl=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",hrl)) q:hrl=""  d
 .q:hrl'[","
 .s out("arr",3,hrl,"dta",1)=$tr($p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",hrl)),"~",1),":","~")
 .s out("arr",3,hrl,"dta",2)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",hrl)),"~",2)
 .s out("arr",3,hrl,"dta",3)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",hrl)),"~",3)
 .s out("arr",3,hrl,"dta",4)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",hrl)),"~",4)
 //odmena
 s out("dta",4)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA")),"~",1)
 s out("dta",5)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA")),"~",2)
 s hrl="" f  s hrl=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)) q:hrl=""  d
 .s out("arr",4,hrl,"dta",1)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",1)
 .s out("arr",4,hrl,"dta",2)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",2)
 .s out("arr",4,hrl,"dta",3)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",3)
 .s out("arr",4,hrl,"dta",4)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",4)
 .s out("arr",4,hrl,"dta",5)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",5)
 .s out("arr",4,hrl,"dta",6)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",6)
 .s out("arr",4,hrl,"dta",7)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"ODMENA",hrl)),"~",7)
 //rrrrmm vstupu do souteze
 s out("dta",6)=$p($g(^[sysnmsp]MlMzJBN(idfa,os,1,"VSTUP")),"~",1)
 q 0
sJBN(idfa,sysnmsp,nmsp,rrrrmm,os,in,out)
 // ==================================================================
 // zapis udaju pro jizdu bez nehod pro ridice (prechod na novy mesic)
 // in("dta",1)=ujete km
 // ==================================================================
 n (idfa,sysnmsp,nmsp,rrrrmm,os,in,out) s $zt="err" k out
 // vymazani km
 s err=$$dJBN^OBapiED(idfa,sysnmsp,nmsp,rrrrmm,os,"","") zt:+err "merr" s err=""
 // zapis km
 s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,nmsp)=$g(in("dta",1))
 // napocet km
 s kmnmsp=0 s tmpnmsp="" f  s tmpnmsp=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,tmpnmsp)) q:tmpnmsp=""  d
 .s kmnmsp=kmnmsp+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,tmpnmsp))
 s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm)=kmnmsp
 // zapis obd
 i $g(in("dta",1)) d
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm,nmsp)=1
 // napocet obd
 s val=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")) s rr=+val s mm=+$p(val,":",2) d
 .q:+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm))  		// uz jsem to v rrrrmm zvysil
 .q:$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm,""))=""  // celej mesic nejel
 .s mm=mm+1 i mm>11 s rr=rr+1 s mm=0
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")=rr_":"_mm
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm)=1 			// poznaceni zapisu
 q 0
dJBN(idfa,sysnmsp,nmsp,rrrrmm,os,in,out)
 // ==================================================================
 // vymazani jizdy bez nehod pro osc za obdobi (prechod na novy mesic)
 // ==================================================================
 n (idfa,sysnmsp,nmsp,rrrrmm,os,in,out) s $zt="err" k out
 // vymazani udaju jizdy bez nehod za obdobi
 k ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,nmsp)
 k ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm,nmsp)
 // uprava km
 s kmnmsp=0 s tmpnmsp="" f  s tmpnmsp=$o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,tmpnmsp)) q:tmpnmsp=""  d
 .s kmnmsp=kmnmsp+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm,tmpnmsp))
 s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBN",rrrrmm)=kmnmsp
 // uprava obdobi
 s jel=($o(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm,""))'="")
 // nejel a je poznaceno, odectu mesic
 i 'jel&(+$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm))) d
 .s val=$g(^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS"))
 .s rr=+val s mm=+$p(val,":",2)
 .s mm=mm-1 i mm<0 s rr=rr-1 s mm=11
 .s ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS")=rr_":"_mm
 .k ^[sysnmsp]MlMzJBN(idfa,os,1,"JBNCAS",rrrrmm)
 q 0
lJBN(idfa,sysnmsp,in,out)
 // =====================================================================
 // fce vrati seznam os evidovanych v JBN v ^CacheTempJB(out,"arr",os)=""
 // =====================================================================
 n (idfa,sysnmsp,in,out) s $zt="err" k out s out=$$gWrkJB^OBapiED()
 s os="" f  s os=$o(^[sysnmsp]MlMzJBN(idfa,os)) q:os=""  d
 .q:'$d(^[sysnmsp]MlMzJBN(idfa,os,1))
 .s ^CacheTempJB(out,"arr",os)=""
 q 0
 //
err s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDMYTRz" type="INT" languagemode="0" timestamp="62241,623"><![CDATA[
OBapiEDMYTRz q
sMYTRz(idfa,nmsp,rz,glb,in,out)
 // s err=$$sMYTRz(idfa,rz,glb,in,out) - zapis dat z mytnych bran pro rz do db
 // - rz  ... rz pro kterou jsou data
 // - glb ... odkaz na global, ve kterem jsou souradnice @glb@(hrl,sec)=mytne~brana~kategorie
 // - in
 // - out 
 // 
 n (idfa,nmsp,rz,glb,in,out) s $zt="err" s err="" k out
 //
 i $g(idfa)="" s err="idfa=" g err
 i $g(nmsp)="" s err="nmsp=" g err
 i $g(rz)="" s err="rz=" g err
 ;;
 m ^[nmsp]OBjbMYT(idfa,rz)=@glb
 q 0
 //
calcMYTRz(idfa,nmsp,rz,hrlFrom,tmFrom,hrlTo,tmTo,in,out)
 // ==========================
 // vypocet tuzemskeho mytneho
 // ==========================
 // s err=$$calcMYTSpz(idfa,nmsp,rz,hrlFrom,tmFrom,hrlTo,tmTo,.in,.out)
 // - hrlFrom    = den zacatku - horlog
 // - tmFrom     = cas zacatku - mm
 // - hrlTo      = den konce - horlog
 // - tmTo       = cas konce - mm
 // - in
 // - out
 //   out("dta",1)=vysledne myto
 //   out("arr",1,hrl,tm)=myto~brana~kategorie
 //
 n (idfa,nmsp,rz,hrlFrom,tmFrom,hrlTo,tmTo,in,out) s $zt="err" k out s err=""
 // uprava rz - v premidu jsou bez mezer
 s rz=$tr(rz," ","")
 ;; =====================================
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(rz)="" s err="rz=" zt "merr"
 i $g(hrlFrom)="" s err="hrlFrom=" zt "merr"
 i $g(tmFrom)="" s err="tmFrom=" zt "merr"
 s:'hrlTo hrlTo=hrlFrom
 s:tmTo="" tmTo=tmFrom
 i hrlFrom>hrlTo s err="1~hrlFrom>hrlTo" zt "merr"
 i (tmTo<tmFrom)&(hrlTo'>hrlFrom) s err="1~tmTo<tmFrom" zt "merr"
 ;;
 s tmFrom=tmFrom*60 s tmTo=tmTo*60
 s hrl=hrlFrom-.01 f  s hrl=$o(^[nmsp]OBjbMYT(idfa,rz,hrl)) q:(hrl="")!(hrl>hrlTo)  d
 .s tm=tmFrom-.01 s:hrl>hrlFrom tm="" f  s tm=$o(^[nmsp]OBjbMYT(idfa,rz,hrl,tm)) q:(tm="")!((hrl=hrlTo)&(tm>tmTo))  d
 ..s out("dta",1)=$g(out("dta",1))+$g(^[nmsp]OBjbMYT(idfa,rz,hrl,tm))
 ..s out("arr","dta",hrl,tm)=$g(^[nmsp]OBjbMYT(idfa,rz,hrl,tm))
 q 0
err s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDNPHM" type="INT" languagemode="0" timestamp="62157,48310"><![CDATA[
OBapiEDNPHM
 q
 // normovani PHM
 // ================
 // zimni % prirazka
 // ================
gZiPrcPrNPHM(idfa,nmsp,zp,in,out)
 // vrati zimni procentualni prirazku ... out("dta",1)=% prirazka
 n (idfa,nmsp,zp,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 s out("dta",1)=$g(^[nmsp]OI("ZIMA"))
 i +$g(arrset("arr",6,2))=1 s out("dta",1)=$g(^[nmsp]OI("ZIMA","zp",zp))
 q 0
sZiPrcPrNPHM(idfa,nmsp,zp,in,out)
 // zapise zimni procentualni prirazku ... in("dta",1)=% prirazka
 n (idfa,nmsp,zp,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 i +$g(arrset("arr",6,2))=0 s ^[nmsp]OI("ZIMA")=""  s:$g(in("dta",1)) ^[nmsp]OI("ZIMA")=$g(in("dta",1))
 i +$g(arrset("arr",6,2))=1 s ^[nmsp]OI("ZIMA","zp",zp)=""  s:$g(in("dta",1)) ^[nmsp]OI("ZIMA","zp",zp)=$g(in("dta",1))
 q 0
 // ==============
 // zimni spotreba
 // ==============
lZiSpoNPHM(idfa,nmsp,in,out)
 // vrati seznam obdobi se zimni spotrebou
 // id=hrl od
 // out("arr",1,id,"dta",1)=hrl od
 // out("arr",1,id,"dta",2)=hrl do ... pokud neni, plati stale
 // out("arr",1,id,"dta",3)=zapnuto kdy (horlog cely)
 // out("arr",1,id,"dta",4)=kdo zapnul  (jmeno)
 // out("arr",1,id,"dta",5)=vypnuto kdy (horlog cely)
 // out("arr",1,id,"dta",6)=kdo vypnul  (jmeno)
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s dz=$$gFaDz^OBapiED(idfa)
 s hrlfrom="" f  s hrlfrom=$o(^[nmsp]OI(dz,"ZIMAK",hrlfrom)) q:hrlfrom=""  d
 .s val=$g(^[nmsp]OI(dz,"ZIMAK",hrlfrom))
 .s out("arr",1,hrlfrom,"dta",1)=hrlfrom
 .s out("arr",1,hrlfrom,"dta",2)=$p(val,"#",1)
 .s out("arr",1,hrlfrom,"dta",3)=$p($p(val,"#",2),":",1)
 .s out("arr",1,hrlfrom,"dta",4)=$p($p(val,"#",2),":",2)
 .s out("arr",1,hrlfrom,"dta",5)=$p($p(val,"#",3),":",1)
 .s out("arr",1,hrlfrom,"dta",6)=$p($p(val,"#",3),":",2)
 q 0
gZiSpoNPHM(idfa,nmsp,id,in,out)
 n (idfa,nmsp,id,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(id)="" q "1~id="
 s dz=$$gFaDz^OBapiED(idfa)
 f cnt=1:1:6 s out("dta",cnt)=""
 i $d(^[nmsp]OI(dz,"ZIMAK",id)) d
 .s val=$g(^[nmsp]OI(dz,"ZIMAK",id))
 .s out("dta",1)=id
 .s out("dta",2)=$p(val,"#",1)
 .s out("dta",3)=$p($p(val,"#",2),":",1)
 .s out("dta",4)=$p($p(val,"#",2),":",2)
 .s out("dta",5)=$p($p(val,"#",3),":",1)
 .s out("dta",6)=$p($p(val,"#",3),":",2)
 q 0
sZiSpoNPHM(idfa,nmsp,in,out)
 // zapis zaznamu
 // in("dta",1)=hrl od
 // in("dta",2)=hrl do ... pokud neni, plati stale
 // in("dta",3)=zapnuto kdy (horlog cely)
 // in("dta",4)=kdo zapnul  (jmeno)
 // in("dta",5)=vypnuto kdy (horlog cely)
 // in("dta",6)=kdo vypnul  (jmeno)
 // in("idos")=mlp~loginname~fullname 
 n (idfa,nmsp,id,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(in("dta",1))="" q "1~in(""dta"",1)="
 s dz=$$gFaDz^OBapiED(idfa)
 s id=$g(in("dta",1))
 s val=$g(in("dta",2))_"#"_$g(in("dta",3))_":"_$g(in("dta",4))_"#"_$g(in("dta",5))_":"_$g(in("dta",6))
 S ^[nmsp]OI(dz,"ZIMAK",id)=val
 q 0
dZiSpoNPHM(idfa,nmsp,id,in,out)
 // zruseni zaznamu id
 n (idfa,nmsp,id,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(id)="" q "1~id="
 s dz=$$gFaDz^OBapiED(idfa)
 k ^[nmsp]OI(dz,"ZIMAK",id)
 q 0
isZiSpoNPHM(idfa,nmsp,hrl,in,out)
 // kontrola, zda je k hrl zimni spotreba
 // out("stt")=0 ne / 1 ano
 n (idfa,nmsp,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(hrl)="" q "1~hrl="
 s out("stt")=0
 s dz=$$gFaDz^OBapiED(idfa)
 s hrlfrom=$o(^[nmsp]OI(dz,"ZIMAK",hrl+.01),-1)
 i hrlfrom d
 .s hrlto=+$g(^[nmsp]OI(dz,"ZIMAK",hrlfrom))
 .i hrlto i hrlto<hrl q
 .s out("stt")=1
 q 0
err s $zt="" k out q:$g(err)'="" "1~"_$tr(err,"~","/")  q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDNPHM1" type="INT" languagemode="0" timestamp="65470,47551.21227"><![CDATA[
OBapiEDNPHM1 q
 //// ====================================
 //// phm - normovani,...
 //// ====================================
mkNormPhmOld(idfa,nmsp,in,out)
 //// napocet normovani phm
 //// err=$$mkNormPhm(idfa,nmsp,.rrmm,.in,.out)
 //// 
 //// vstupni parametry:
 ////  
 ////  in("typ",A/R)="" ..... pocitat pro R ridice / A auta   ............. povinny
 ////  in("rrmm",rrmm)="" ... obdobi (rrmm)  .............................. povinny
 ////  in("jiz","od")= ...... datum jizdy od .............................. nepovinny
 ////  in("jiz","do")= ...... datum jizdy do .............................. nepovinny
 ////  in("spz",spz)= ....... jen pro spz ................................. nepovinny
 ////  in("osc",osc)= ....... jen pro osc ................................. nepovinny
 ////  in("nospz",spz)= ..... nevsima si to spz ........................... nepovinny
 ////  in("actOBPH")=1 ...... zapis dat do nap.glb ^OBPH .................. nepovinny
 ////  
 ////  out=wrk (vysledek to vrati v globalu ^CacheTempJB(wrk))
 ////
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $o(in("rrmm",""))="" s err="rrmm=" zt "merr"
 //
 s wrk=$$gWrkJB^OBapiED() s out=wrk
 s wrkcis=$$gWrkJB^OBapiED()
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 // vypocet
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .q:(zp\100)'=dz
 .s rrmm="" f  s rrmm=$o(in("rrmm",rrmm)) q:rrmm=""  d
 ..// zapis do glb OBPH
 ..i +$g(in("actOBPH")) s typ="" f  s typ=$o(in("typ",typ)) q:typ=""  k ^[nmsp]OBPH(rrmm,typ)
 ..// =================
 ..s cdoc="" f  s cdoc=$o(^[nmsp]OBD(zp,rrmm,cdoc)) q:cdoc=""  d
 ...k arrDoc
 ...i cdoc<qsj s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) zt:+err "merr" s err=""
 ...i cdoc>qsj s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) zt:+err "merr" s err=""
 ...// predznaceny doklad nebo zruseny
 ...q:'+$g(arrDoc("dta",1))  q:+$g(arrDoc("dta",1))>2
 ...// ===============================
 ...// datum,spz ; kontrola na datum jizdy od - do a spz
 ...i cdoc<qsj s DAT=$g(arrDoc("dta",4)) s SPZ=$g(arrDoc("dta",6))
 ...i cdoc>qsj s DAT=$g(arrDoc("dta",6)) s SPZ=$g(arrDoc("dta",8))
 ...// datum
 ...i +$g(in("jiz","od")) q:in("jiz","od")>DAT
 ...i +$g(in("jiz","do")) q:in("jiz","do")<DAT
 ...// spz
 ...i $o(in("spz",""))'="" q:SPZ=""  q:'$d(in("spz",SPZ))
 ...//vyloucena vozidla
 ...i $d(in("nospz",SPZ)) q  
 ...// =======================================
 ...k KM k km k ph k nor k os k kmPH s cri=0
 ...// pocet ridicu
 ...s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ....i cdoc>qsj q:$g(arrDoc("osc",os,"dta",2))["F"
 ....s cri=cri+1
 ...s:'cri cri=1
 ...// ============
 ...// sj
 ...// ==
 ...i cdoc>qsj d
 ....s PH=$g(arrDoc("dta",22))
 ....s NS=$g(arrDoc("dta",43))
 ....s KM=$g(arrDoc("dta",16))+$g(arrDoc("dta",17))+$g(arrDoc("dta",18))
 ....s KM(8)=KM //nad
 ....s NOR=$g(arrDoc("dta",45))
 ....// stav tachometru pri tankovani, pokud neni tak vychozi stav
 ....i PH s kmPH=$g(arrDoc("dta",56)) s:'kmPH kmPH=$g(arrDoc("dta",21))
 ....// ==========================================================
 ....s cn=0 s cp=0
 ....s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 .....s km(os)=$g(arrDoc("osc",os,"dta",14))+$g(arrDoc("osc",os,"dta",15))+$g(arrDoc("osc",os,"dta",16))
 .....//pokud neni pendl, pak km delit, pokud je pendl, ne
 .....s:idfa="CB_CSADAD" km(os)=KM/cri+.5\1
 .....//<jb> 3.11.2010 - p. Malkova - delit km poctem ridicu 
 .....s:idfa="MB_TCBUS" km(os)=KM/cri+.5\1
 .....s km(os,8)=km(os)
 .....d:KM
 ......s ph(os)=km(os)/KM*PH+.005\.01/100
 ......s nor(os)=km(os)/KM*NOR+.005\.01/100
 .....d:'KM
 ......s ph(os)=PH/cri
 ......s nor(os)=NOR/cri
 .....s cn=cn+ph(os)
 .....s cp=cp+nor(os)
 ....// korekce
 ....s os=$o(arrDoc("osc","")) q:os=""
 ....s r=PH-cn s:r ph(+os)=$g(ph(+os))+r
 ....s r=NOR-cp s:r nor(+os)=$g(nor(+os))+r
 ....// =======
 ...// dzva
 ...// ====
 ...d:cdoc<qsj
 ....// zaskolovani a pruvodci ne
 ....q:$g(arrDoc("dta",7))["Z"
 ....q:$g(arrDoc("dta",7))["P"
 ....// ======================
 ....s PH=$g(arrDoc("dta",11))
 ....s NS=$g(arrDoc("dta",16))
 ....s KM=$g(arrDoc("arr","tuv",22))
 ....s KM(1)=+$g(arrDoc("arr","tuv",23)) //pad vni
 ....s KM(2)=+$g(arrDoc("arr","tuv",24)) //pad dal
 ....s KM(3)=+$g(arrDoc("arr","tuv",25)) //pad mes
 ....s KM(4)=+$g(arrDoc("arr","tuv",26)) //pad pri
 ....s KM(5)=+$g(arrDoc("arr","tuv",27)) //pad mez
 ....s KM(6)=+$g(arrDoc("arr","tuv",28)) //pad sml
 ....s KM(7)=+$g(arrDoc("arr","tuv",29)) //pad rez
 ....s NOR=$g(arrDoc("dta",15))
 ....// stav tachometru pri tankovani, pokud neni tak vychozi stav
 ....i PH s kmPH=$g(arrDoc("dta",23)) s:'kmPH kmPH=$g(arrDoc("dta",8))
 ....// ==========================================================
 ....s cn=0 s cp=0 s ck=0 s cko=0
 ....s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 .....//pendl
 .....i +$g(arrDoc("osc",os,"dta",3)) d  q
 ......s km(os)=$g(arrDoc("osc",os,"tuv",22)) s ck=ck+km(os)
 ......s km(os,1)=$g(arrDoc("osc",os,"tuv",23)) s cko=cko+km(os,1)
 ......s km(os,2)=$g(arrDoc("osc",os,"tuv",24)) s cko=cko+km(os,2)
 ......s km(os,3)=$g(arrDoc("osc",os,"tuv",25)) s cko=cko+km(os,3)
 ......s km(os,4)=$g(arrDoc("osc",os,"tuv",26)) s cko=cko+km(os,4)
 ......s km(os,5)=$g(arrDoc("osc",os,"tuv",27)) s cko=cko+km(os,5)
 ......s km(os,6)=$g(arrDoc("osc",os,"tuv",28)) s cko=cko+km(os,6)
 ......s km(os,7)=$g(arrDoc("osc",os,"tuv",29)) s cko=cko+km(os,7)
 ......i KM d
 .......s ph(os)=km(os)/KM*PH+.005\.01/100
 .......s nor(os)=km(os)/KM*NOR+.005\.01/100
 ......i 'KM d
 .......s ph(os)=PH/cri
 .......s nor(os)=NOR/cri
 ......s cn=cn+ph(os)
 ......s cp=cp+nor(os)
 .....// neni pendl
 .....s km(os)=KM/cri s ck=ck+km(os)
 .....f cnt=1:1:7 s:+($g(KM(cnt))/cri) km(os,cnt)=KM(cnt)/cri,cko=cko+km(os,cnt)
 .....s ph(os)=PH/cri s cn=cn+ph(os)
 .....s nor(os)=NOR/cri s cp=cp+nor(os)
 ....// korekce
 ....s os=$o(arrDoc("osc",""))
 ....s r=PH-cn s:r ph(+os)=$g(ph(+os))+r
 ....s r=NOR-cp s:r nor(+os)=$g(nor(+os))+r
 ....s r=KM-ck s:r km(+os)=$G(km(+os))+r
 ....s r=KM-cko i r s cnt=+$o(km(+os,"")) s km(os,cnt)=$g(km(os,cnt))+r
 ....// =======
 ...q:$g(SPZ)=""  q:'$g(NS)
 ...// udaje k spz
 ...i '$d(^CacheTempJB(wrkcis,"rz",SPZ)) d
 ....k arrSpz s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,DAT,SPZ,"",.arrSpz)
 ....m ^CacheTempJB(wrkcis,"rz",SPZ)=arrSpz
 ....k arrSpz
 ...s spzTyp=$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",5))
 ...s spzPoh=$p("N~P~B","~",+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12)))
 ...s NSRZ=+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",4))
 ...// ridici
 ...s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ....i $o(in("osc",""))'="" i '$d(in("osc",os)) q
 ....i '$d(^CacheTempJB(wrkcis,"os",os)) d
 .....k arrOs s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,DAT,os,"",.arrOs) zt:err "merr" s err=""
 .....m ^CacheTempJB(wrkcis,"os",os)=arrOs
 .....k arrOs
 ....s jm=$g(^CacheTempJB(wrkcis,"os",os,"dta",1))
 ....s NSOS=+$g(^CacheTempJB(wrkcis,"os",os,"dta",4))
 ....s km(os)=$g(km(os))+.0005\.001/1000
 ....s cnt="" f  s cnt=$o(km(os,cnt)) q:cnt=""  s km(os,cnt)=$g(km(os,cnt))+.0005\.001/1000
 ....s nor(os)=$g(nor(os))+.0005\.001/1000
 ....s ph(os)=$g(ph(os))+.0005\.001/1000
 ....// vystupni data
 ....s ^CacheTempJB(wrk,rrmm,"O",os)=jm_"~"_NSOS
 ....s ^CacheTempJB(wrk,rrmm,"S",SPZ)=spzTyp_"~"_spzPoh_"~"_NSRZ
 ....s ^CacheTempJB(wrk,rrmm,"R",NSOS,+os,SPZ,zp,cdoc)=km(os)_"~"_ph(os)_"~"_nor(os)_"~"_DAT_"~"_$g(kmPH)
 ....f cnt=1:1:8 s:+$g(km(os,cnt)) $p(^CacheTempJB(wrk,rrmm,"R",NSOS,+os,SPZ,zp,cdoc,"kmDrh"),"~",cnt)=km(os,cnt)
 ....s ^CacheTempJB(wrk,rrmm,"A",NS,SPZ,+os,zp,cdoc)=km(os)_"~"_ph(os)_"~"_nor(os)_"~"_DAT_"~"_$g(kmPH)
 ....f cnt=1:1:8 s:+$g(km(os,cnt)) $p(^CacheTempJB(wrk,rrmm,"A",NS,SPZ,+os,zp,cdoc,"kmDrh"),"~",cnt)=km(os,cnt)
 ....// aktualizace napoctu 
 ....i +$g(in("actOBPH")) i $d(in("typ","R")) d
 .....s ^[nmsp]OBPH(rrmm,"R",NSOS,+os,spzTyp_"|"_SPZ,cdoc)=km(os)_":"_ph(os)_":"_nor(os)_":"_DAT
 ....i +$g(in("actOBPH")) i $d(in("typ","A")) d
 .....s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ)=spzPoh
 .....s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,os,cdoc)=km(os)_":"_ph(os)_":"_nor(os)_":"_DAT
 .....s val=$g(^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,"d",DAT_"|"_cdoc_"|"_zp))
 .....s $p(val,":",1)=$p(val,":",1)+km(os)
 .....s $p(val,":",2)=$p(val,":",2)+ph(os)
 .....s $p(val,":",3)=$p(val,":",3)+nor(os)
 .....s $p(val,":",4)=$p(val,":",4)_os_"/"
 .....s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,"d",DAT_"|"_cdoc_"|"_zp)=val
 k ^CacheTempJB(wrkcis)
 q 0
 //
npNormPhm(idfa,nmsp,in,out)
 //// napocet normovani phm
 //// err=$$npNormPhm(idfa,nmsp,.rrmm,.in,.out)
 //// 
 //// vstupni parametry:
 ////  in("rrmm",rrmm)=""
 ////  in("typ",A/R)="" ..... pocitat pro R ridice / A auta   .. poviny
 ////  
 s $zt="err" s err=""
 //
 //
 i $g(idfa)="" s err="idfa=" g err
 i $g(nmsp)="" s err="nmsp=" g err
 i $o(in("rrmm",""))="" s err="rrmm=" g err
 i $o(in("typ",""))="" s err="in(typ)=" g err
 //
 n (idfa,nmsp,in,out)
 //
 //napocet 
 s D=":"
 s rrmm="" f  s rrmm=$o(rrmm(rrmm)) q:rrmm=""  d
 .s typ="" f  s typ=$o(in("typ",typ)) q:typ=""  d
 ..s ns="" f  s ns=$o(^[nmsp]OBPH(rrmm,typ,ns)) q:ns=""  d
 ...s i1="" f  s i1=$o(^[nmsp]OBPH(rrmm,typ,ns,i1)) q:i1=""  d
 ....i typ["A" s NAPL=$g(^[nmsp]OBPH(rrmm,typ,ns,i1))
 ....s i2="" f  s i2=$o(^[nmsp]OBPH(rrmm,typ,ns,i1,i2)) q:i2=""!(i2="d")  d
 .....s (r,i3,rn,rp)=""
 .....f  s i3=$o(^[nmsp]OBPH(rrmm,typ,ns,i1,i2,i3)) q:i3=""  d
 ......s x=$g(^(i3)) f i=1:1:3 s $p(r,D,i)=$p(r,D,i)+$p(x,D,i)
 .....i typ["A" d  s r=r_D_rn_D_rp
 ......i NAPL="P" s rp=r,rn="::" q
 ......s rn=r,rp="::"
 .....s ^[nmsp]OBPH(rrmm,typ,ns,i1,i2)=r
 ..s ns="" f  s ns=$o(^[nmsp]OBPH(rrmm,typ,ns)) q:ns=""  d
 ...s i1="" f  s i1=$o(^[nmsp]OBPH(rrmm,typ,ns,i1)) q:i1=""  d
 ....s r="",i2="" f  s i2=$o(^[nmsp]OBPH(rrmm,typ,ns,i1,i2)) q:i2=""!(i2="d")  d
 .....s x=$g(^(i2))
 .....S coli=3 s:typ["A" coli=9
 .....f i=1:1:coli s $p(r,D,i)=$p(r,D,i)+$p(x,D,i)
 ....s ^[nmsp]OBPH(rrmm,typ,ns,i1)=r
 ..s ns="" f  s ns=$o(^[nmsp]OBPH(rrmm,typ,ns)) q:ns=""  d
 ...s r="",i1="" f  s i1=$o(^[nmsp]OBPH(rrmm,typ,ns,i1)) q:i1=""  d
 ....s x=$g(^(i1))
 ....S coli=3 s:typ["A" coli=9
 ....f i=1:1:coli s $p(r,D,i)=$p(r,D,i)+$p(x,D,i)
 ...s ^[nmsp]OBPH(rrmm,typ,ns)=r
 ..s ^[nmsp]OBPH(rrmm,typ)=$h
 ..s ns="",r="" f  s ns=$o(^[nmsp]OBPH(rrmm,typ,ns)) q:ns=""  d
 ...s x=$g(^(ns))
 ...S coli=3 s:typ["A" coli=9
 ...f i=1:1:coli s $p(r,D,i)=$p(r,D,i)+$p(x,D,i)
 ..I typ["A" s ^[nmsp]OBPH(rrmm)=r
 ..E  S $P(^[nmsp]OBPH(rrmm),D,1,3)=r
 q 0
 //
mkNormPhm(idfa,nmsp,in,out)
 //// napocet normovani phm
 //// err=$$mkNormPhm(idfa,nmsp,.rrmm,.in,.out)
 //// 
 //// vstupni parametry:
 ////  
 ////  in("typ",A/R)="" ..... pocitat pro R ridice / A auta   ............. povinny
 ////  in("rrmm",rrmm)="" ... obdobi (rrmm)  .............................. povinny
 ////  in("jiz","od")= ...... datum jizdy od .............................. nepovinny
 ////  in("jiz","do")= ...... datum jizdy do .............................. nepovinny
 ////  in("spz",spz)= ....... jen pro spz ................................. nepovinny
 ////  in("osc",osc)= ....... jen pro osc ................................. nepovinny
 ////  in("nospz",spz)= ..... nevsima si to spz ........................... nepovinny
 ////  in("par",1)= ......... 0/1 rozpocitavani dat cerpaneho phm na doc .. nepovinny
 ////  in("par",2)= ......... 0/1 pri rozpoc. dat cerp. phm uvazovat presah dokladu .. nepovinny
 ////  in("par",3)= ......... 0/1 korekce PHM pri presahu tankovani pres hranu mesice (VTVC) 
 ////  in("par",4)= ..........0/1 jak pocitat km ridici na SJ 0 podle dat na SJ / 1 vzdy celkove km delit poctem ridicu
 ////  in("actOBPH")=1 ...... zapis dat do nap.glb ^OBPH .................. nepovinny
 ////  
 ////  out=wrk (vysledek to vrati v globalu ^CacheTempJB(wrk))
 ////  ^CacheTempJB(wrk,rrmm,"O",os)=jm~nsos
 ////  ^CacheTempJB(wrk,rrmm,"S",rz)=typ~pohon~nsrz
 ////  ^CacheTempJB(wrk,rrmm,"R",nsos,os,rz,zp,cdoc)=km(os)~ph(os)~nor(os)~hrl~kmphm
 ////  ^CacheTempJB(wrk,rrmm,"R",nsos,os,rz,zp,cdoc,"kmDrh")=km1~km2~km3~km4~km5~km6~km7~km8
 ////  ^CacheTempJB(wrk,rrmm,"A",nsrz,rz,os,zp,cdoc)=km(os)~ph(os)~nor(os)~DAT~kmphm
 ////  ^CacheTempJB(wrk,rrmm,"A",nsrz,rz,os,zp,cdoc,"kmDrh")=km1~km2~km3~km4~km5~km6~km7~km8
 ////  je-li "par",1)=1 
 ////  ^CacheTempJB(wrk,rrmm,"X",rz,hrl,selpar,$lb(zp,rrmm,cdoc))=$lb(nor,tankph,rozph,stav)
 ////    selpar=(konec tachometru*10000)+zacatek(mm)
 ////    stav=-2 ... není / -1 ... norma / 1 rozpocteno
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 //==================
 //kontrola parametru
 //==================
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $o(in("rrmm",""))="" s err="rrmm=" zt "merr"
 // ===============
 // def. promennych
 // ===============
 s wrk=$$gWrkJB^OBapiED() k ^CacheTempJB(wrk) s out=wrk
 s mywrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(mywrk)
 s owrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(owrk) s out("par",1)=owrk
 s wrkcis=$$gWrkJB^OBapiED()
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 //============================
 //konverze RZ na aktualni stav
 //============================
 s wrkarz=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkarz)
 s nmsprz=$$GetSystemDB^ALVAVOZIDLAapiC()
 //==================
 //nastaveni programu
 //==================
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // ===============================
 // datum pro nacteni udaju os a rz
 // ===============================
 // z posledniho obdobi
 s hrlOs="" s hrlRz=""
 s rrmm="" f  s rrmm=$o(in("rrmm",rrmm)) q:rrmm=""  d
 .i $$gmaxhrlrrmm^OBapiED(rrmm)>hrlOs s hrlOs=$$gmaxhrlrrmm^OBapiED(rrmm)
 s hrlRz=hrlOs
 // ===========================
 // vyhledani dokladu a vypocet
 // ===========================
 // vypocet
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .q:(zp\100)'=dz
 .s rrmm="" f  s rrmm=$o(in("rrmm",rrmm)) q:rrmm=""  d
 ..// =================
 ..// zapis do glb OBPH
 ..// =================
 ..i +$g(in("actOBPH")) s typ="" f  s typ=$o(in("typ",typ)) q:typ=""  k ^[nmsp]OBPH(rrmm,typ)
 ..// =================
 ..s cdoc="" f  s cdoc=$o(^[nmsp]OBD(zp,rrmm,cdoc)) q:cdoc=""  d
 ...k arrDoc
 ...i cdoc<qsj s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) zt:+err "merr" s err=""
 ...i cdoc>qsj s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) zt:+err "merr" s err=""
 ...// ===============================
 ...// predznaceny doklad nebo zruseny
 ...// ===============================
 ...q:'+$g(arrDoc("dta",1))  q:+$g(arrDoc("dta",1))>2
 ...// ================================
 ...// dzva - zaskolovani a pruvodci ne
 ...// ================================
 ...i cdoc<qsj q:$g(arrDoc("dta",7))["Z"
 ...i cdoc<qsj q:$g(arrDoc("dta",7))["P"
 ...// ======================================
 ...// kontrola na vstupni filtr - datum, spz
 ...// ======================================
 ...i cdoc<qsj s DAT=$g(arrDoc("dta",4)) s SPZ=$g(arrDoc("dta",6))
 ...i cdoc>qsj s DAT=$g(arrDoc("dta",6)) s SPZ=$g(arrDoc("dta",8))
 ...i SPZ="" q
 ...// ========================
 ...// konverze SPZ na aktualni
 ...// ========================
 ...i '$d(^||wrk.ALVA.AD(wrkarz,SPZ)) d
 ....s newspz=$$VehicleGetRz^ALVAVOZIDLAapiC(nmsprz,SPZ,+$h)
 ....i (newspz="")!(newspz=-1)!(newspz=-2) s newspz=SPZ
 ....s ^||wrk.ALVA.AD(wrkarz,SPZ)=newspz
 ...s SPZ=$g(^||wrk.ALVA.AD(wrkarz,SPZ))
 ...//
 ...i +$g(in("jiz","od")) q:in("jiz","od")>DAT
 ...i +$g(in("jiz","do")) q:in("jiz","do")<DAT
 ...i $o(in("spz",""))'="" q:SPZ=""  q:'$d(in("spz",SPZ))
 ...//=========
 ...// data SPZ
 ...//=========
 ...i '$d(^CacheTempJB(wrkcis,"rz",SPZ)) d
 ....k arrSpz s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrlRz,SPZ,"",.arrSpz)
 ....m ^CacheTempJB(wrkcis,"rz",SPZ)=arrSpz
 ....k arrSpz
 ...//=================
 ...//vyloucena vozidla
 ...//=================
 ...i $d(in("nospz",SPZ)) q
 ...//========================
 ...//zapis dokladu do globalu
 ...//========================
 ...k KM k km k ph k nor k os k kmPH s cri=0 s criall=0 s crif=0
 ...//============
 ...//pocet ridicu
 ...//============
 ...k arros s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ....s criall=criall+1
 ....i (cdoc>qsj)&($g(arrDoc("osc",os,"dta",2))["F") s crif=crif+1 q
 ....s cri=cri+1
 ...s:'cri cri=1
 ...//====
 ...//dzva
 ...//====
 ...i cdoc<qsj d
 ....//parametr pro razeni
 ....s selpar=(($g(arrDoc("dta",7))*10000)+$o(arrDoc("arr","tur","")))
 ....s PHM=$g(arrDoc("dta",11))		//phm
 ....s PHF=$g(arrDoc("dta",24))		//phm fame/B100
 ....s PHT=$g(arrDoc("dta",19))		//phm topeni
 ....s PHB30=$g(arrDoc("dta",27))	//phm B30
 ....s PH=PHM+PHF+PHB30				//celkove ph = ph+fame
 ....// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 ....i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 ....s NS=$g(arrDoc("dta",16))
 ....s KM=$g(arrDoc("arr","tuv",22))
 ....s KM(1)=+$g(arrDoc("arr","tuv",23)) //pad vni
 ....s KM(2)=+$g(arrDoc("arr","tuv",24)) //pad dal
 ....s KM(3)=+$g(arrDoc("arr","tuv",25)) //pad mes
 ....s KM(4)=+$g(arrDoc("arr","tuv",26)) //pad pri
 ....s KM(5)=+$g(arrDoc("arr","tuv",27)) //pad mez
 ....s KM(6)=+$g(arrDoc("arr","tuv",28)) //pad sml
 ....s KM(7)=+$g(arrDoc("arr","tuv",29)) //pad rez
 ....s NOR=$g(arrDoc("dta",15))
 ....s kmTAZ=$g(arrDoc("dta",8))		// pocatecni stav tachometru
 ....s kmTAK=$g(arrDoc("dta",7))		// koncovy stav tachometru
 ....// ==========================================================
 ....// stav tachometru pri tankovani, pokud neni tak vychozi stav
 ....// ==========================================================
 ....i PH s kmPH=+$g(arrDoc("dta",23)) s:'kmPH kmPH=+kmTAZ //s:'kmPH kmPH=kmTAZ+((kmTAK-kmTAZ)/2)
 ....// ==========================================================
 ....k arros s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  s arros(os)=1
 ....k tmparr0 i KM s tmparr0=KM s err=$$rzpArr^OBapiED(.tmparr0,.arros,1)
 ....k tmparr1 i KM(1) s tmparr1=KM(1) s err=$$rzpArr^OBapiED(.tmparr1,.arros,1)
 ....k tmparr2 i KM(2) s tmparr2=KM(2) s err=$$rzpArr^OBapiED(.tmparr2,.arros,1)
 ....k tmparr3 i KM(3) s tmparr3=KM(3) s err=$$rzpArr^OBapiED(.tmparr3,.arros,1)
 ....k tmparr4 i KM(4) s tmparr4=KM(4) s err=$$rzpArr^OBapiED(.tmparr4,.arros,1)
 ....k tmparr5 i KM(5) s tmparr5=KM(5) s err=$$rzpArr^OBapiED(.tmparr5,.arros,1)
 ....k tmparr6 i KM(6) s tmparr6=KM(6) s err=$$rzpArr^OBapiED(.tmparr6,.arros,1)
 ....k tmparr7 i KM(7) s tmparr7=KM(7) s err=$$rzpArr^OBapiED(.tmparr7,.arros,1)
 ....s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 .....//=====
 .....//pendl
 .....//=====
 .....i +$g(arrDoc("osc",os,"dta",3)) d  q
 ......s km(os)=$g(arrDoc("osc",os,"tuv",22))
 ......s km(os,1)=$g(arrDoc("osc",os,"tuv",23))
 ......s km(os,2)=$g(arrDoc("osc",os,"tuv",24))
 ......s km(os,3)=$g(arrDoc("osc",os,"tuv",25))
 ......s km(os,4)=$g(arrDoc("osc",os,"tuv",26))
 ......s km(os,5)=$g(arrDoc("osc",os,"tuv",27))
 ......s km(os,6)=$g(arrDoc("osc",os,"tuv",28))
 ......s km(os,7)=$g(arrDoc("osc",os,"tuv",29))
 .....// ==========
 .....// neni pendl
 .....// ==========
 .....s km(os)=$g(tmparr0(os))
 .....s km(os,1)=$g(tmparr1(os))
 .....s km(os,2)=$g(tmparr2(os))
 .....s km(os,3)=$g(tmparr3(os))
 .....s km(os,4)=$g(tmparr4(os))
 .....s km(os,5)=$g(tmparr5(os))
 .....s km(os,6)=$g(tmparr6(os))
 .....s km(os,7)=$g(tmparr7(os))
 ...//sj
 ...i cdoc>qsj d
 ....s selpar=(($g(arrDoc("dta",20))*10000)+$g(arrDoc("dta",57)))
 ....s PHM=$g(arrDoc("dta",22))		//phm
 ....s PHF=$g(arrDoc("dta",73))		//phm fame/B100
 ....s PHT=$g(arrDoc("dta",72))		//phm topeni
 ....s PHB30=$g(arrDoc("dta",78))	//phm B30
 ....s PH=PHM+PHF+PHB30					//celkove ph = ph+fame
 ....// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 ....i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 ....s NS=$g(arrDoc("dta",43))
 ....s KM=$g(arrDoc("dta",16))+$g(arrDoc("dta",17))+$g(arrDoc("dta",18)) s KM(8)=KM
 ....s NOR=$g(arrDoc("dta",45))
 ....s kmTAZ=$g(arrDoc("dta",21))		// pocatecni stav tachometru
 ....s kmTAK=$g(arrDoc("dta",20))		// koncovy stav tachometru
 ....//==========================================================
 ....//stav tachometru pri tankovani, pokud neni tak vychozi stav
 ....//==========================================================
 ....i PH s kmPH=+$g(arrDoc("dta",56)) s:'kmPH kmPH=+kmTAZ //s:'kmPH kmPH=kmTAZ+((kmTAK-kmTAZ)/2)
 ....s cn=0 s cp=0
 ....//km podle dokladu
 ....i '$g(in("par",4)) d
 .....s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ......s km(os)=($g(arrDoc("osc",os,"dta",14))+$g(arrDoc("osc",os,"dta",15))+$g(arrDoc("osc",os,"dta",16)))
 ......s km(os,8)=km(os)
 ....//km rozdelene pomerem
 ....i +$g(in("par",4)) d
 .....k arros s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ......i $g(arrDoc("osc",os,"dta",2))="F" q
 ......s arros(os)=1
 .....k tmparr8
 .....i ($g(arrDoc("dta",16))+$g(arrDoc("dta",17))+$g(arrDoc("dta",18))) d
 ......s tmparr8=($g(arrDoc("dta",16))+$g(arrDoc("dta",17))+$g(arrDoc("dta",18)))
 ......s err=$$rzpArr^OBapiED(.tmparr8,.arros,1)
 .....s os="" f  s os=$o(arrDoc("osc",os)) q:os=""  d
 ......i $g(arrDoc("osc",os,"dta",2))="F" q
 ......s km(os)=$g(tmparr8(os))
 ......s km(os,8)=km(os)
 ....//<jb 1.4.2020 uprava pro pripad, ze je na dokladu jen jeden fiktivni ridic, pak dostane dokladove km ARRIVA>
 ....i (crif=criall)&(crif=1) s os=+$o(arrDoc("osc","")) k km s km(os)=KM s km(os,8)=km(os)
 ....//================
 ...s ^||wrk.ALVA.AD(mywrk,1,$lb(zp,rrmm,cdoc))=$lb(DAT,SPZ,NS,KM,NOR,PH,kmPH,PHM,PHF,PHT,kmTAZ,kmTAK,PHB30)
 ...s os="" f  s os=$o(km(os)) q:os=""  d
 ....s val=$lb($g(km(os)),$g(km(os,1)),$g(km(os,2)),$g(km(os,3)),$g(km(os,4)),$g(km(os,5)),$g(km(os,6)),$g(km(os,7)),$g(km(os,8)))
 ....s ^||wrk.ALVA.AD(mywrk,1,$lb(zp,rrmm,cdoc),os)=val
 ...s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,$lb(zp,rrmm,cdoc))=$lb(NOR,PH,0,0) 		   //ph a norm ph
 ...i PH s ^||wrk.ALVA.AD(mywrk,3,SPZ,DAT,kmPH,$lb(zp,rrmm,cdoc))=""				   //doklad s tankovanim
 //=========================
 //rozpocitani cerpaneho phm
 //=========================
 i $g(in("par",1)) d
 .s SPZ="" f  s SPZ=$o(^||wrk.ALVA.AD(mywrk,2,SPZ)) q:SPZ=""  d
 ..//================================================================
 ..//dohledam doklady pred prvnim tankovanim a po poslednim tankovani
 ..//================================================================
 ..i $g(in("par",2)) d
 ...f par=1,-1 d
 ....s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,""),par) q:DAT=""
 ....s memDAT=DAT
 ....s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,""),par)
 ....s val="" s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,""),par,val)
 ....//je-li tankovani na poslednim doklade ... OK
 ....i par=-1 i $lg(val,2) q
 ....s fndph=0 s cntdoc=0 f  s DAT=$o(^[nmsp]XA(dz,SPZ,DAT),-par) q:(DAT="")!(fndph)!(cntdoc>10)  d
 .....s cdoc="" f  s cdoc=$o(^[nmsp]XA(dz,SPZ,DAT,cdoc)) q:(cdoc="")!(cdoc?.a)!(cntdoc>10)  d
 ......k arr s err=$$gGrfRz^OBapiED(idfa,nmsp,SPZ,DAT,cdoc,"",.arr) zt:+err "merr"
 ......s rrmm=$g(arr("dta",6)) s zp=$g(arr("dta",7))
 ......k arrDoc
 ......i cdoc<qsj s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) //zt:+err "merr"
 ......i cdoc>qsj s err=$$gSjRzDta^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) //zt:+err "merr"
 ......// ===============================
 ......// predznaceny doklad nebo zruseny
 ......// ===============================
 ......q:'+$g(arrDoc("dta",1))  q:+$g(arrDoc("dta",1))>2
 ......// ================================
 ......// dzva - zaskolovani a pruvodci ne
 ......// ================================
 ......i cdoc<qsj q:$g(arrDoc("dta",7))["Z"
 ......i cdoc<qsj q:$g(arrDoc("dta",7))["P"
 ......s cntdoc=cntdoc+1
 ......//data
 ......i cdoc<qsj d
 .......//parametr pro razeni
 .......s selpar=(($g(arrDoc("dta",7))*10000)+$o(arrDoc("arr","tur","")))
 .......s PHM=$g(arrDoc("dta",11))
 .......s PHF=$g(arrDoc("dta",24))
 .......s PHT=$g(arrDoc("dta",19))
 .......s PHB30=$g(arrDoc("dta",27))
 .......s PH=PHM+PHF+PHB30	//celkove ph = ph+fame+b30
 .......// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 .......i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 .......s NOR=$g(arrDoc("dta",15))
 ......i cdoc>qsj d
 .......//parametr pro razeni
 .......s selpar=(($g(arrDoc("dta",20))*10000)+$g(arrDoc("dta",57)))
 .......s PHM=$g(arrDoc("dta",22))
 .......s PHF=$g(arrDoc("dta",73))
 .......s PHT=$g(arrDoc("dta",72))
 .......s PHB30=$g(arrDoc("dta",78))
 .......s PH=PHM+PHF+PHB30	//celkove ph = ph+fame+b30
 .......// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 .......i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 .......s NOR=$g(arrDoc("dta",45))
 ......s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,$lb(zp,rrmm,cdoc))=$lb(NOR,PH,0,0) //ph a norm ph
 ......i PH s fndph=1
 ....//projedu doklady do/od memDAT a vsechny pred/po prvnim tankovanim vymazu
 ....s fndph=0 s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT),par) q:(DAT="")!(DAT=memDAT)!(fndph)  d
 .....s selpar="" f  s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar),par) q:(selpar="")!(fndph)  d
 ......s iddoc="" f  s val="" s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc),par,val) q:(iddoc="")!(fndph)  d
 .......i $lg(val,2) s fndPH=1 q
 .......k ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)
 ...//na doklady do prvniho tankovani (vcetne) dame jako PH NPH
 ...//na doklady od posledniho tankovani dame jako PH NPH
 ...f par=1,-1 d
 ....s fndph=0
 ....s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT),par) q:(DAT="")!(fndph)  d
 .....s selpar="" f  s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar),par) q:(selpar="")!(fndph)  d
 ......s iddoc="" f  s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc),par) q:(iddoc="")!(fndph)  d
 .......s val=$g(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc))
 .......i $lg(val,2) d  q
 ........s fndph=1
 ........i par=1 d
 .........s $li(val,3)=$lg(val,1) //ph=nph
 .........s $li(val,4)=-1         //stav
 .........s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)=val
 .......s $li(val,3)=$lg(val,1)   //ph=nph
 .......s $li(val,4)=-1           //stav
 .......s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)=val
 ..//v pripade, ze neuvazuju presah dokladu, dam na doklady po poslednim tankovani jako PH 0 a stav -2
 ..i '$g(in("par",2)) d
 ...s par=-1
 ...s fndph=0
 ...s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT),par) q:(DAT="")!(fndph)  d
 ....s selpar="" f  s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar),par) q:(selpar="")!(fndph)  d
 .....s iddoc="" f  s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc),par) q:(iddoc="")!(fndph)  d
 ......s val=$g(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc))
 ......i $lg(val,2) d  q
 .......s fndph=1
 ......s $li(val,3)=""			 //ph=0
 ......s $li(val,4)=-2           //stav
 ......s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)=val
 ..//na ostatnich dokladech rozpocitam ph podle pomeru normovane ph
 ..k arrsrc
 ..s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT)) q:(DAT="")  d
 ...s selpar="" f  s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar)) q:(selpar="")  d
 ....s iddoc="" f  s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)) q:(iddoc="")  d
 .....s val=$g(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc))
 .....//uz je doplnena normovana spotreba
 .....i $lg(val,4) q
 .....//zapisu do pole
 .....s arrsrc($lb(DAT,selpar,iddoc))=+$lg(val,1)
 .....//je ph
 .....i $lg(val,2) d  q
 ......k arrres s arrres=$lg(val,2)
 ......s err=$$rzpArr^OBapiED(.arrres,.arrsrc,1)
 ......s id="" f  s id=$o(arrres(id)) q:id=""  d
 .......s DAT=$lg(id,1) s selpar=$lg(id,2) s iddoc=$lg(id,3)
 .......s val=$g(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc))
 .......s $li(val,3)=$g(arrres(id))
 .......s $li(val,4)=1
 .......s ^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc)=val
 ......k arrsrc k arrres
 ..//====================
 ..//zapis phm na doklady
 ..//====================
 ..s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT),par) q:(DAT="")  d
 ...s selpar="" f  s selpar=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar)) q:(selpar="")  d
 ....s iddoc="" f  s val="" s iddoc=$o(^||wrk.ALVA.AD(mywrk,2,SPZ,DAT,selpar,iddoc),1,val) q:(iddoc="")  d
 .....q:'$d(^||wrk.ALVA.AD(mywrk,1,iddoc))
 .....s $li(^||wrk.ALVA.AD(mywrk,1,iddoc),6)=$lg(val,3)
 .m ^CacheTempJB(wrk,$o(in("rrmm","")),"X")=^||wrk.ALVA.AD(mywrk,2)
 // =================================
 // korekce PHM pri presahu tankovani
 // =================================
 //^||wrk.ALVA.AD(mywrk,3,SPZ,DAT,kmPH,$lb(zp,rrmm,cdoc))=""
 i $g(in("par",3)) d
 .s SPZ="" f  s SPZ=$o(^||wrk.ALVA.AD(mywrk,3,SPZ)) q:SPZ=""  d
 ..//=========================================================================================
 ..//dohledam doklad s tankovanim pred prvnim tankovani a stav km na konci predchoziho mesice
 ..//=========================================================================================
 ..s par=1
 ..s DAT=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,""),par) q:DAT=""
 ..s tachpor=0
 ..s fndph=0 s fndiddoc="" s cntdoc=0
 ..f  s DAT=$o(^[nmsp]XA(dz,SPZ,DAT),(-par)) q:(DAT="")!(fndph)!(cntdoc>20)  d
 ...s cdoc="" f  s cdoc=$o(^[nmsp]XA(dz,SPZ,DAT,cdoc)) q:(cdoc="")!(fndph)!(cdoc?.a)!(cntdoc>20)  d
 ....k arr s err=$$gGrfRz^OBapiED(idfa,nmsp,SPZ,DAT,cdoc,"",.arr) zt:+err "merr"
 ....s rrmm=$g(arr("dta",6)) s zp=$g(arr("dta",7))
 ....k arrDoc
 ....i cdoc<qsj s err=$$gDzRzDta^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) //zt:+err "merr"
 ....i cdoc>qsj s err=$$gSjRzDta^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrDoc) //zt:+err "merr"
 ....// ===============================
 ....// predznaceny doklad nebo zruseny
 ....// ===============================
 ....q:'+$g(arrDoc("dta",1))  q:+$g(arrDoc("dta",1))>2
 ....// ================================
 ....// dzva - zaskolovani a pruvodci ne
 ....// ================================
 ....i cdoc<qsj q:$g(arrDoc("dta",7))["Z"
 ....i cdoc<qsj q:$g(arrDoc("dta",7))["P"
 ....//==================
 ....//porucha tachomeru
 ....//==================
 ....i cdoc<qsj i $g(arrDoc("dta",7))="" s tachpor=1
 ....i cdoc>qsj i $g(arrDoc("dta",20))="" s tachpor=1
 ....s cntdoc=cntdoc+1
 ....//data
 ....i cdoc<qsj d
 .....s PHM=$g(arrDoc("dta",11))
 .....s PHF=$g(arrDoc("dta",24))
 .....s PHT=$g(arrDoc("dta",19))
 .....s PHB30=$g(arrDoc("dta",27))
 .....s PH=PHM+PHF+PHB30	//celkove ph = ph+fame+b30
 .....// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 .....i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 .....s kmPH=$g(arrDoc("dta",23)) s:'kmPH kmPH=+$g(arrDoc("dta",8)) //s:'kmPH kmPH=$g(arrDoc("dta",8))+(($g(arrDoc("dta",7))-$g(arrDoc("dta",8)))/2)
 .....s NOR=$g(arrDoc("dta",15))
 ....i cdoc>qsj d
 .....s PHM=$g(arrDoc("dta",22))
 .....s PHF=$g(arrDoc("dta",73))
 .....s PHT=$g(arrDoc("dta",72))
 .....s PHB30=$g(arrDoc("dta",78))
 .....s PH=PHM+PHF+PHB30	//celkove ph = ph+fame+b30
 .....// pro pohon=nafta podle nastaveni pripoctu do celkoveho ph naftu do topeni
 .....i (+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12))=1)&(+$g(arrset("arr",6,28))) s PH=PH+PHT
 .....s kmPH=$g(arrDoc("dta",56)) s:'kmPH kmPH=$g(arrDoc("dta",21)) //s:'kmPH kmPH=$g(arrDoc("dta",21))+(($g(arrDoc("dta",20))-$g(arrDoc("dta",21)))/2)
 .....s NOR=$g(arrDoc("dta",45))
 ....i PH s fndph=1 s fndiddoc=$lb(zp,rrmm,cdoc)
 ....//hrana mesice
 ..// nasel jsem predchozi tankovani
 ..i fndph d
 ...//prvni tankovani
 ...s DATEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,""),par) q:DATEdge=""
 ...s kmPHEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,""),par) q:kmPHEdge=""
 ...s iddocEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,kmPHEdge,""),par) q:iddocEdge=""
 ...s val=$g(^||wrk.ALVA.AD(mywrk,1,iddocEdge)) //$lb(DAT,SPZ,NS,KM,NOR,PH,kmPH,PHM,PHF,PHT,kmTAZ,kmTAK,PHB30)
 ...//stav km ke konci minuleho obdobi + norma phm na vozidlo
 ...k tmparr s err=$$gLastSttTachObd(idfa,nmsp,SPZ,$$addmmtorrrrmm^OBapiED($$grrrrmmfromhrl^OBapiED(DATEdge),-1),"",.tmparr) zt:+err "merr" s err=""
 ...s phminus="" i $g(tmparr("dta",1)) s phminus=$$round^OBapiED(($g(tmparr("dta",1))-kmPH)*$g(tmparr("dta",2))/100,2)
 ...//pri hledani jsem nasel poruchu tachometru
 ...i $g(tmparr("dta",4)) s tachpor=1
 ...i tachpor s phminus=""
 ...s ^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,kmPHEdge,iddocEdge)=$lb(phminus,0,kmPH,$g(tmparr("dta",1)),$g(tmparr("dta",2)),$g(tachpor))
 ..//======================================================================
 ..//dohledam doklad s tankovanim na konci mesice a stav km na konci mesice
 ..//======================================================================
 ..//posledni tankovani
 ..s par=-1 d
 ...s DATEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,""),par) q:DATEdge=""
 ...s kmPHEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,""),par)  q:kmPHEdge=""
 ...s iddocEdge=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,kmPHEdge,""),par) q:iddocEdge=""
 ...s val=$g(^||wrk.ALVA.AD(mywrk,1,iddocEdge)) s kmPH=$lg(val,7)
 ...//stav km ke konci aktualniho obdobi + norma phm na vozidlo
 ...k tmparr s err=$$gLastSttTachObd(idfa,nmsp,SPZ,$$grrrrmmfromhrl^OBapiED(DATEdge),"",.tmparr) zt:+err "merr" s err=""
 ...s phplus="" i $g(tmparr("dta",1)) s phplus=$$round^OBapiED(($g(tmparr("dta",1))-kmPH)*$g(tmparr("dta",2))/100,2)
 ...s tachpor=+$g(tmparr("dta",4))
 ...i tachpor s phplus=""
 ...s ^||wrk.ALVA.AD(mywrk,3,SPZ,DATEdge,kmPHEdge,iddocEdge)=$lb(0,phplus,kmPH,$g(tmparr("dta",1)),$g(tmparr("dta",2)),$g(tachpor))
 ..//====================
 ..//zapis phm na doklady
 ..//====================
 ..s DAT="" f  s DAT=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DAT)) q:(DAT="")  d
 ...s kmPH="" f  s kmPH=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DAT,kmPH)) q:(kmPH="")  d
 ....s iddoc="" f  s val="" s iddoc=$o(^||wrk.ALVA.AD(mywrk,3,SPZ,DAT,kmPH,iddoc),1,val) q:(iddoc="")  d
 .....i ('$lg(val,1))&('$lg(val,2)) q
 .....q:'$d(^||wrk.ALVA.AD(mywrk,1,iddoc))
 .....s $li(^||wrk.ALVA.AD(mywrk,1,iddoc),6)=$lg(^||wrk.ALVA.AD(mywrk,1,iddoc),6)-$lg(val,1)
 .....s $li(^||wrk.ALVA.AD(mywrk,1,iddoc),6)=$lg(^||wrk.ALVA.AD(mywrk,1,iddoc),6)+$lg(val,2)
 .m ^||wrk.ALVA.AD(owrk,3)=^||wrk.ALVA.AD(mywrk,3)
 //================
 //rozpocet dokladu
 //================
 //^||wrk.ALVA.AD(mywrk,1,$lb(zp,rrmm,cdoc))=$lb(DAT,SPZ,NS,KM,NOR,PH,kmPH,PHM,PHF,PHT,kmTAZ,kmTAK,PHB30)
 //^||wrk.ALVA.AD(mywrk,1,$lb(zp,rrmm,cdoc,os))=$lb($g(km(os)),$g(km(os,1)),$g(km(os,2)),$g(km(os,3)),$g(km(os,4)),$g(km(os,5)),$g(km(os,6)),$g(km(os,7)),$g(km(os,8)))
 s iddoc="" f  s iddoc=$o(^||wrk.ALVA.AD(mywrk,1,iddoc)) q:iddoc=""  d
 .k KM k km k ph k nor k os k kmPH k phm k phf k pht k phb30 s cri=0
 .s zp=$lg(iddoc,1) s rrmm=$lg(iddoc,2) s cdoc=$lg(iddoc,3)
 .s val=$g(^||wrk.ALVA.AD(mywrk,1,iddoc))
 .s DAT=$lg(val,1) s SPZ=$lg(val,2) s NS=$lg(val,3) s KM=$lg(val,4) s NOR=$lg(val,5) s PH=$lg(val,6) s kmPH=$lg(val,7) s PHM=$lg(val,8) s PHF=$lg(val,9) s PHT=$lg(val,10) s PHB30=$lg(val,13)
 .q:$g(SPZ)=""  q:'$g(NS)
 .s os="" f  s os=$o(^||wrk.ALVA.AD(mywrk,1,iddoc,os)) q:os=""  d
 ..s val=$g(^||wrk.ALVA.AD(mywrk,1,iddoc,os))
 ..s cri=cri+1
 ..s km(os)=$lg(val,1) f cnt=1:1:8 s km(os,cnt)=$lg(val,cnt+1)
 .s:'cri cri=1
 .k srcarr
 .i +KM s os="" f  s os=$o(^||wrk.ALVA.AD(mywrk,1,iddoc,os)) q:os=""  s srcarr(os)=$lg($g(^||wrk.ALVA.AD(mywrk,1,iddoc,os)),1)
 .i 'KM s os="" f  s os=$o(^||wrk.ALVA.AD(mywrk,1,iddoc,os)) q:os=""  s srcarr(os)=1
 .s ph=PH s err=$$rzpArr^OBapiED(.ph,.srcarr,2)
 .s nor=NOR s err=$$rzpArr^OBapiED(.nor,.srcarr,2)
 .s phm=PHM s err=$$rzpArr^OBapiED(.phm,.srcarr,2)
 .s phf=PHF s err=$$rzpArr^OBapiED(.phf,.srcarr,2)
 .s pht=PHT s err=$$rzpArr^OBapiED(.pht,.srcarr,2)
 .s phb30=PHB30 s err=$$rzpArr^OBapiED(.phb30,.srcarr,2)
 .// udaje k spz
 .i '$d(^CacheTempJB(wrkcis,"rz",SPZ)) d
 ..k arrSpz s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrlRz,SPZ,"",.arrSpz)
 ..m ^CacheTempJB(wrkcis,"rz",SPZ)=arrSpz
 ..k arrSpz
 .s spzTyp=$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",5))
 .s spzPoh=$p("N~P~B","~",+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",12)))
 .s NSRZ=+$g(^CacheTempJB(wrkcis,"rz",SPZ,"dta",4))
 .// ridici
 .s os="" f  s os=$o(^||wrk.ALVA.AD(mywrk,1,iddoc,os)) q:os=""  d
 ..i $o(in("osc",""))'="" i '$d(in("osc",os)) q
 ..i '$d(^CacheTempJB(wrkcis,"os",os)) d
 ...k arrOs s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrlOs,os,"",.arrOs) zt:err "merr" s err=""
 ...m ^CacheTempJB(wrkcis,"os",os)=arrOs
 ...k arrOs
 ..s jm=$g(^CacheTempJB(wrkcis,"os",os,"dta",1))
 ..s NSOS=+$g(^CacheTempJB(wrkcis,"os",os,"dta",4))
 ..// vystupni data
 ..s ^CacheTempJB(wrk,rrmm,"O",os)=jm_"~"_NSOS
 ..s ^CacheTempJB(wrk,rrmm,"S",SPZ)=spzTyp_"~"_spzPoh_"~"_NSRZ
 ..s ^CacheTempJB(wrk,rrmm,"R",NSOS,+os,SPZ,zp,cdoc)=km(os)_"~"_ph(os)_"~"_nor(os)_"~"_DAT_"~"_$g(kmPH)_"~"_phm(os)_"~"_phf(os)_"~"_pht(os)_"~"_phb30(os)
 ..f cnt=1:1:8 s:+$g(km(os,cnt)) $p(^CacheTempJB(wrk,rrmm,"R",NSOS,+os,SPZ,zp,cdoc,"kmDrh"),"~",cnt)=km(os,cnt)
 ..s ^CacheTempJB(wrk,rrmm,"A",NS,SPZ,+os,zp,cdoc)=km(os)_"~"_ph(os)_"~"_nor(os)_"~"_DAT_"~"_$g(kmPH)_"~"_phm(os)_"~"_phf(os)_"~"_pht(os)_"~"_phb30(os)
 ..f cnt=1:1:8 s:+$g(km(os,cnt)) $p(^CacheTempJB(wrk,rrmm,"A",NS,SPZ,+os,zp,cdoc,"kmDrh"),"~",cnt)=km(os,cnt)
 ..// aktualizace napoctu 
 ..i +$g(in("actOBPH")) i $d(in("typ","R")) d
 ...s ^[nmsp]OBPH(rrmm,"R",NSOS,+os,spzTyp_"|"_SPZ,cdoc)=km(os)_":"_ph(os)_":"_nor(os)_":"_DAT
 ..i +$g(in("actOBPH")) i $d(in("typ","A")) d
 ...s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ)=spzPoh
 ...s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,os,cdoc)=km(os)_":"_ph(os)_":"_nor(os)_":"_DAT
 ...s val=$g(^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,"d",DAT_"|"_cdoc_"|"_zp))
 ...s $p(val,":",1)=$p(val,":",1)+km(os)
 ...s $p(val,":",2)=$p(val,":",2)+ph(os)
 ...s $p(val,":",3)=$p(val,":",3)+nor(os)
 ...s $p(val,":",4)=$p(val,":",4)_os_"/"
 ...s ^[nmsp]OBPH(rrmm,"A",NS,spzTyp_"|"_SPZ,"d",DAT_"|"_cdoc_"|"_zp)=val
 k ^CacheTempJB(wrkcis)
 k ^||wrk.ALVA.AD(mywrk)
 k ^||wrk.ALVA.AD(wrkarz)
 q 0
gLastSttTachObd(idfa,nmsp,spz,rrrrmm,in,out)
 //fce vrati posledni stav tachometru v obdobi
 //out("dta",1)=stav km
 //out("dta",2)=norma phm pro rz
 //out("dta",3)=iddoc se stavem tach (zp|rrmm|cdoc)
 //out("dta",4)=porucha 0/1 ... pri hledani stavu jsem narazil na doklad s poruchou
 n (idfa,nmsp,spz,rrrrmm,in,out)
 s $zt="err" k out s err=""
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 s maxdocs=10
 s hrl=$$gmaxhrlrrmm^OBapiED(rrrrmm)
 s cntdoc=0
 s hrl=hrl+.01 f  s hrl=$o(^[nmsp]XA(dz,spz,hrl),-1) q:(hrl="")!(cntdoc>maxdocs)  d
 .s cdoc="" f  s cdoc=$o(^[nmsp]XA(dz,spz,hrl,cdoc)) q:(cdoc="")!(cdoc?.a)!(cntdoc>maxdocs)  d
 ..k arr s err=$$gGrfRz^OBapiED(idfa,nmsp,spz,hrl,cdoc,"",.arr) zt:+err "merr"
 ..s zp=$g(arr("dta",7)) s rrmm=$g(arr("dta",6))
 ..k arrdoc
 ..i cdoc<qsj s err=$$gDzRzDta^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrdoc) //zt:+err "merr"
 ..i cdoc>qsj s err=$$gSjRzDta^OBapiED(idfa,nmsp,zp,rrmm,cdoc,"",.arrdoc) //zt:+err "merr"
 ..// ===============================
 ..// predznaceny doklad nebo zruseny
 ..// ===============================
 ..q:'+$g(arrdoc("dta",1))  q:+$g(arrdoc("dta",1))>2
 ..// ================================
 ..// dzva - zaskolovani a pruvodci ne
 ..// ================================
 ..i cdoc<qsj q:$g(arrdoc("dta",7))["Z"
 ..i cdoc<qsj q:$g(arrdoc("dta",7))["P"
 ..s cntdoc=cntdoc+1
 ..//doklad s poruchou
 ..i cdoc<qsj i $g(arrdoc("dta",7))="" s out("dta",4)=1
 ..i cdoc>qsj i $g(arrdoc("dta",20))="" s out("dta",4)=1
 ..//=================
 ..i cdoc<qsj i $g(arrdoc("dta",7))>$g(out("dta",1)) s out("dta",1)=$g(arrdoc("dta",7)) s out("dta",2)=$g(arrdoc("dta",13)) s out("dta",3)=zp_"|"_rrmm_"|"_cdoc s fndhrl=1
 ..i cdoc>qsj i $g(arrdoc("dta",20))>$g(out("dta",1)) s out("dta",1)=$g(arrdoc("dta",20)) s out("dta",2)=$g(arrdoc("arr",1,"dta",10)) s out("dta",3)=zp_"|"_rrmm_"|"_cdoc s fndhrl=1
 q 0
 //
err
 s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDObj" type="INT" languagemode="0" timestamp="65512,50376.525801"><![CDATA[
OBapiEDObj q
 // ====================================
 // Objednavky, aviza, stale objednavky
 // ====================================
 //
wrapIdObj(rr,oo)
 // zabaleni cisla objednavky
 n (rr,oo)
 q:oo<10000 rr*10000+oo q rr*1000000+oo
 //
unwrapIdObj(idobj,cnt)
 // rozbaleni cisla objednavky
 // cnt=1 ... vrati rok (rr)
 // cnt=2 ... vrati poradove cislo objednavky
 n (idobj,cnt) s val=""
 i idobj<1000000 s:cnt=1 val=idobj\10000 s:cnt=2 val=idobj#10000
 i idobj'<1000000 s:cnt=1 val=idobj\1000000 s:cnt=2 val=idobj#1000000
 q val
 //
gObj(idfa,nmsp,zp,idobj,in,out)
 //
 // err=$$gObj(idfa,nmsp,zp,idobj,in,out) - vrati data objednavky
 //
 n (idfa,nmsp,zp,idobj,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 //
 k out s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 // ===============
 // data objednavky
 // ===============
 s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo))
 f cnt=1:1:$$gPcOBJ() s out("dta",cnt)=$p(val,":",cnt)
 // ===============================================
 // spedice a predkalkulace (data spedice a vykony)
 // ===============================================
 s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw"))
 f cnt=1:1:$$gPcPrpOBJ() s out("frw","dta",cnt)=$p(val,"~",cnt)
 // =================================
 // spedice a predkalkulace - poplatky
 // =================================
 s idppl="" f  s idppl=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb)) q:iddsb=""  d
 ..s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb))
 ..f cnt=1:1:$$gPcFakPplOBJ() d
 ...i cnt=1 s out("frw","arr",1,idppl,iddsb)=$p(val,"~",cnt)	//historie
 ...s out("frw","arr",1,idppl,iddsb,"dta",cnt)=$p(val,"~",cnt)
 ..// rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb,"arr",1,idstt))
 ...f cnt=1:1:1 d
 ....s out("frw","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 // ==============
 // fakturace data
 // ==============
 s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"fak"))
 f cnt=1:1:$$gPcFakOBJ() s out("fak","dta",cnt)=$p(val,"~",cnt)
 // =================
 // fakturace polozky
 // =================
 s iditm="" f  s iditm=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"fak","itm",iditm)) q:iditm=""  d
 .s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"fak","itm",iditm)) 
 .f cnt=1:1:$$gPcFakItmOBJ() d
 ..s out("fak","itm",iditm,"dta",cnt)=$p(val,"~",cnt)
 // ===================
 // ostatni data - pole
 // ===================
 // kampres
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"k")) out("arr",1)=^[nmsp]OBOBJ(zp,"O",rr,oo,"k")
 // info pro ridice
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"p")) out("arr",2)=^[nmsp]OBOBJ(zp,"O",rr,oo,"p")
 // obchodne provozni info
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"pi")) out("arr",3)=^[nmsp]OBOBJ(zp,"O",rr,oo,"pi")
 // info pro zakaznika na fakturu
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"remc")) out("arr",4)=^[nmsp]OBOBJ(zp,"O",rr,oo,"remc")
 // ridic a hodiny pro plan
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"rh")) out("arr",5)=^[nmsp]OBOBJ(zp,"O",rr,oo,"rh")
 // odkazy na fakturaci
 m:$d(^[nmsp]OBOBJ(zp,"O",rr,oo,"CFAK")) out("arr",6)=^[nmsp]OBOBJ(zp,"O",rr,oo,"CFAK") // historie fakturace
 // hlidani zmen
 s cnt=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"cop",""),-1)
 s out("arr",7,"dta",1)=cnt s out("arr",7,"dta",2)=""
 s:cnt'="" out("arr",7,"dta",2)=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"cop",cnt))
 m out("arr",7,"arr",1)=^[nmsp]OBOBJ(zp,"O",rr,oo,"cop")								//pole zmen
 // zahranicni DPH
 s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph"))
 f cnt=1:1:7 s out("arr",8,"dta",cnt)=$p(val,"~",cnt)
 s idstt="" f  s idstt=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph","arr",1,idstt)) q:idstt=""  d
 .s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph","arr",1,idstt))
 .f cnt=1:1:9 s out("arr",8,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 // dalsi komentare na fakturu
 s cnt="" f  s cnt=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"txtFak",cnt)) q:cnt=""  d
 .s out("arr",9,cnt)=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"txtFak",cnt))
 // odkazy na naplanovane doklady
 m out("arr",10)=^[nmsp]OBOBJ(zp,"O",rr,oo,"link",1)
 // odkazy na uznane doklady sj
 m out("arr",11)=^[nmsp]OBOBJ(zp,"O",rr,oo,"link",2)
 // zodpovedna osoba (osc)
 s out("arr",12)=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"ZdpOs"))
 // poznamka pro fakturaci
 s out("arr",13,1)=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"pznFak",1))
 // odkaz na zalohovou fakturu
 s cnt=0 s idzal="" f  s idzal=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"ZalohyDN",idzal)) q:idzal=""  d
 .s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"ZalohyDN",idzal))
 .s cnt=cnt+1
 .s out("arr",14,"arr",cnt,"dta",1)=$p(idzal,"^",1)
 .s out("arr",14,"arr",cnt,"dta",2)=$p(idzal,"^",2)
 .s out("arr",14,"arr",cnt,"dta",3)=$p(val,"~",1)
 .s out("arr",14,"arr",cnt,"dta",4)=+$p(val,"~",2)
 //prubeh cinnosti na OBJ
 s id="" f  s id=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"tsj",id)) q:id=""  d
 .s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo,"tsj",id))
 .f cnt=1:1:6 s out("arr",15,"arr",id,"dta",cnt)=$p(val,"~",cnt)
 // konverze datumu a casu
 d cnvDObj(0,.out)
 // ======================
 q 0
 //
sObj(idfa,nmsp,zp,idobj,in,out)
 //
 // err=$$sObj(idfa,nmsp,zp,idobj,in,out) - zapise data objednavky
 //
 n (idfa,nmsp,zp,idobj,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 //
 s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 // ===============
 // data objednavky
 // ===============
 s hrlod=$g(in("dta",2)) s hrldo=$g(in("dta",33)) s:'hrldo hrldo=hrlod
 s ^[nmsp]OBOBJ(zp,"A",$g(in("dta",2)),+idobj)=hrldo
 //
 i ('$g(in("dta",29)))&(+$g(in("dta",2))) s in("dta",29)=$g(in("dta",2))
 //
 // konverze datumu a casu
 d cnvDObj(1,.in)
 // ======================
 //
 s val="" f cnt=1:1:$$gPcOBJ() s $p(val,":",cnt)=$tr($g(in("dta",cnt)),":","_")
 s ^[nmsp]OBOBJ(zp,"O",rr,oo)=val
 // =======
 // spedice
 // =======
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"frw")
 s val="" f cnt=1:1:$$gPcPrpOBJ() s $p(val,"~",cnt)=$g(in("frw","dta",cnt))
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"frw")=val
 // ================
 // spedice poplatky
 // ================
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl")
 s idppl="" f  s idppl=$o(in("frw","arr",1,idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(in("frw","arr",1,idppl,iddsb)) q:iddsb=""  d
 ..s val=""
 ..f cnt=1:1:$$gPcFakPplOBJ() d
 ...s $p(val,"~",cnt)=$g(in("frw","arr",1,idppl,iddsb,"dta",cnt))
 ..s ^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb)=val
 ..//  rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(in("frw","arr",1,idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=""
 ...f cnt=1:1:1 d
 ....s $p(val,"~",cnt)=$g(in("frw","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt))
 ...s ^[nmsp]OBOBJ(zp,"O",rr,oo,"frw","ppl",idppl,iddsb,"arr",1,idstt)=val
 // ==============
 // fakturace data
 // ==============
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"fak")
 s val="" f cnt=1:1:$$gPcFakOBJ() s $p(val,"~",cnt)=$g(in("fak","dta",cnt))
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"fak")=val
 // =================
 // fakturace polozky
 // =================
 s iditm="" f  s iditm=$o(in("fak","itm",iditm)) q:iditm=""  d
 .s val="" f cnt=1:1:$$gPcFakItmOBJ() s $p(val,"~",cnt)=$g(in("fak","itm",iditm,"dta",cnt))
 .s ^[nmsp]OBOBJ(zp,"O",rr,oo,"fak","itm",iditm)=val
 // ============
 // ostatni data
 // ============
 // kampres
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"k")
 m:$d(in("arr",1)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"k")=in("arr",1)
 // info pro ridice
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"p")
 m:$d(in("arr",2)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"p")=in("arr",2)
 // obchodne provozni info
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"pi")
 m:$d(in("arr",3)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"pi")=in("arr",3)
 // info pro zakaznika na fakturu
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"remc")
 m:$d(in("arr",4)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"remc")=in("arr",4)
 // ridic a hodiny pro plan
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"rh")
 m:$d(in("arr",5)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"rh")=in("arr",5)
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"CFAK")
 // odkazy na fakturaci
 m:$d(in("arr",6)) ^[nmsp]OBOBJ(zp,"O",rr,oo,"CFAK")=in("arr",6)
 // hlidani zmen
 s cnt=$g(in("arr",7,"dta",1)) s:'cnt cnt=$h
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"cop",cnt)=$g(in("arr",7,"dta",2))
 // zahranicni DPH
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph")
 s val=""
 f cnt=1:1:7 s $p(val,"~",cnt)=$g(in("arr",8,"dta",cnt))
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph")=val
 s idstt="" f  s idstt=$o(in("arr",8,"arr",1,idstt)) q:idstt=""  d
 .s val=""
 .f cnt=1:1:9 s $p(val,"~",cnt)=$g(in("arr",8,"arr",1,idstt,"dta",cnt))
 .s ^[nmsp]OBOBJ(zp,"O",rr,oo,"zhrDph","arr",1,idstt)=val
 s err=$$actHd(idfa,nmsp,zp,hrlod) zt:+err "merr" s err=""
 // dalsi komentare na fakturu
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"txtFak")
 s cnt="" f  s cnt=$o(in("arr",9,cnt)) q:cnt=""  d
 .s ^[nmsp]OBOBJ(zp,"O",rr,oo,"txtFak",cnt)=$g(in("arr",9,cnt))
 // odkazy na naplanovane doklady
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",1)
 m ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",1)=in("arr",10)
 // odkazy na uznane doklady
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",2)
 m ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",2)=in("arr",11)
 // zodpovedna osoba (osc)
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"ZdpOs")=$g(in("arr",12))
 // poznamka pro fakturaci
 s ^[nmsp]OBOBJ(zp,"O",rr,oo,"pznFak",1)=$g(in("arr",13,1))
 // odkaz na zalohovou fakturu
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"ZalohyDN")
 s cnt="" f  s cnt=$o(in("arr",14,"arr",cnt)) q:cnt=""  d
 .s idzal="" s val=""
 .s $p(idzal,"^",1)=$g(in("arr",14,"arr",cnt,"dta",1))
 .s $p(idzal,"^",2)=$g(in("arr",14,"arr",cnt,"dta",2))
 .s $p(val,"~",1)=$g(in("arr",14,"arr",cnt,"dta",3))
 .s $p(val,"~",2)=$g(in("arr",14,"arr",cnt,"dta",4))
 .s ^[nmsp]OBOBJ(zp,"O",rr,oo,"ZalohyDN",idzal)=val
 //prubeh cinnosti na OBJ
 k ^[nmsp]OBOBJ(zp,"O",rr,oo,"tsj")
 s id="" f  s id=$o(in("arr",15,"arr",id)) q:id=""  d
 .f cnt=1:1:6 d
 ..s $p(^[nmsp]OBOBJ(zp,"O",rr,oo,"tsj",id),"~",cnt)=$g(in("arr",15,"arr",id,"dta",cnt))
 //
 q 0
 //
dObj(idfa,nmsp,zp,idobj,in,out)
 //
 // err=$$dObj(idfa,nmsp,zp,idobj,in,out) - zruseni objednavky
 // in("fullname")=fullname uzivatele
 //
 n (idfa,nmsp,zp,idobj,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 //
 // test, zda objednavka existuje
 k arr s err=$$isObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr) zt:+err "merr" s err=""
 i '$g(arr) q "1~"_zp_"/"_idobj_"neexistujici objednavka"
 // =============================
 s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt "merr"
 s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 k arr
 s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr) zt:+err "merr" s err=""
 // zapis do kose
 s err=$$sKos^OBapiED(idfa,nmsp,1,(zp_"|"_idobj),$g(in("fullname")),($g(idprv)_"/"_idobj),"",.arr,"") zt:+err "merr" s err=""
 s arr("dta",1)=1
 s err=$$sObj^OBapiED(idfa,nmsp,zp,idobj,.arr,"") zt:+err "merr" s err=""
 //
 q 0
 //
sSttObj(idfa,nmsp,zp,idobj,idstt,in,out)
 //
 // s err=$$sSttObj(idfa,nmsp,zp,idobj,idstt,.in,.out)
 // in:
 // in("dta",1)=iddoc (idenfifikator faktury (rok~fstr~cislo~namespace)
 // in("dta",2)=hrl   (hrl prevodu do fakturace)
 // in("par",1)=nefaksj (nastavit nevystavovat fakturu pro doklad 0 ne / 1 ano)
 //
 n (idfa,nmsp,zp,idobj,idstt,in,out)
 s $zt="err" s err="" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 i $g(idstt)="" q "1~idstt="
 // neprisel horlog zmeny, doplnim aktualni
 i '$g(in("dta",2)) s in("dta",2)=$h
 // =======================================
 // ===============
 s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 // ===============
 // data objednavky
 // ===============
 k arr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr) zt:+err "merr" s err=""
 s arr("dta",1)=idstt
 s arr("dta",67)="" s:idstt=4 arr("dta",67)=$g(in("dta",2))
 s arr("arr",6)=""
 s:((idstt=3)!(idstt=4)) arr("arr",6)=$g(in("dta",1))
 s arr("arr",6,$o(arr("arr",6,""),-1)+1)=$g(in("dta",1))_"|"_$g(in("dta",2))
 //nastaveni priznaku nevystavovat fakturu
 i +$g(in("par",1)) s arr("dta",8)=9
 //=======================================
 s err=$$sObj^OBapiED(idfa,nmsp,zp,idobj,.arr,"")
 q 0
 //
actLinkObj(idfa,nmsp,zp,idobj,in,out)
 // aktualizace odkazu na doklady v objednavce 
 // err=$$actLinkObj(idfa,nmsp,zp,idobj,in,out) - zapise odkaz na doklad do objednavky
 // in("par",1)=0/1 0 pridat odkaz / 1 zrusit odkaz
 // in("arr",10,id)=""  - pole s naplanovanymi doklady (id=idprac~hrl~rz~cnt)
 // in("arr",11,id))="" - pole s uznanymi doklady (id=zp~rrmm~iddoc)
 n (idfa,nmsp,zp,idobj,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 //
 s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 //
 i $d(^[nmsp]OBOBJ(zp,"O",rr,oo)) d
 .//odkazy na doklady
 .f idt=10,11 d
 ..s:idt=10 myidt=1
 ..s:idt=11 myidt=2
 ..s idd="" f  s idd=$o(in("arr",idt,idd)) q:idd=""  d
 ...//pridat odkaz
 ...i '$g(in("par",1)) m ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",myidt,idd)=in("arr",idt,idd)
 ...i +$g(in("par",1)) k ^[nmsp]OBOBJ(zp,"O",rr,oo,"link",myidt,idd)
 .//aktualizace stavu objednavky
 .s val=$g(^[nmsp]OBOBJ(zp,"O",rr,oo))
 .k arr f cnt=1:1:$$gPcOBJ() s arr("dta",cnt)=$p(val,":",cnt)
 .s oldstt=$g(arr("dta",1))		//puvodni stav
 .//
 .i oldstt=1 q   				//!!! zruseno ne !!!!!!!!!
 .i oldstt=4 q   				//!!! vyfakturovano ne !!! (preprodej)
 .i $g(arr("dta",64))=1 q  		//!!! preprodano ne !!!!!!
 .//
 .s numrz=$g(arr("dta",37))		//pocet rz
 .s:'numrz numrz=1
 .s numpl=0 s idd="" f  s idd=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"link",1,idd)) q:idd=""  s numpl=numpl+1
 .s numsj=0 s idd="" f  s idd=$o(^[nmsp]OBOBJ(zp,"O",rr,oo,"link",2,idd)) q:idd=""  s numsj=numsj+1
 .s newstt=0					//objednano
 .i numpl'<numrz s newstt=2		//naplanovano
 .i numsj'<numrz s newstt=3		//odjeto
 .i oldstt=newstt q				//stav se nezmenil
 .s $p(^[nmsp]OBOBJ(zp,"O",rr,oo),":",1)=newstt
 // 
 q 0
 //
lObj(idfa,nmsp,in,out)
 // err=$$lObj(idfa,nmsp,in,out) - seznam objednavek
 // 
 // in("zp",zp)="" je-li def, pak zobrazim obj pro def zp
 // in("prv",prv)="" je-li def, pak zobrazim obj pro def prv
 // in("prac",idprac)="" je-li def, pak zobrazim obj pro def idprac 
 // in("hrlod")=+$h - objednavky od
 // in("hrldo")=+$h - objednavky do
 // in("ico")=ico   - objednavky pro zakaznika, jehoz ico obsahuje ico
 // in("tdp",id)="" - typ dopravy je-li def, pak 0 vlastni doprava / 1 cizi doprava
 // in("sta",id)="" - stav dokladu je-li def, pak 0 objednano / 1 zruseno /2 naplanovano / 3 odjeto / 4 vyfakturovano)
 // in("glb")=0/1 = pokud je 1, vysledek se zapise do globalu ^CacheTempJB(wrk) a v out=wrk
 // in("cis","od")=cisobjod	- cislo objednavky od
 // in("cis","do")=cisobjdo - cislo objednavky do
 // in("dzj",dzj)=""		- druh zajezdu
 // in("pre")=tx prepravce	- nazev prepravce
 //
 n (idfa,nmsp,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 s dz=$$gFaDz^OBapiED(idfa) s prv="" f  s prv=$o(in("prv",prv)) q:prv=""  s in("zp",(dz*100+prv))=""
 //
 i +$g(in("glb")) s wrk=$i(^CacheTempJB) s out=wrk
 s od=$$nd^OBapiED(+$g(in("hrlod")),0) s do=$$nd^OBapiED(+$g(in("hrldo")),0)
 k rr f rr=$p(od,".",3):1:$p(do,".",3) s rr(rr#100)=""
 s od=$$dn^OBapiED(od) s do=$$dn^OBapiED(do)
 //
 // konverze prepravce na vse velkyma a bez diakritiky
 s in("pre")=$$cnvBezDiaUp^OBapiED($g(in("pre")))
 // ==================================================
 //
 s zp="" f  s zp=$o(^[nmsp]OBOBJ(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .s rr="" f  s rr=$o(rr(rr)) q:rr=""  d
 ..s idobj="" f  s val="" s idobj=$o(^[nmsp]OBOBJ(zp,"O",rr,idobj),1,val) q:idobj=""  d
 ...// kontrola cisla od
 ...i $g(in("cis","od")) i $$wrapIdObj^OBapiED(rr,idobj)<$g(in("cis","od")) q
 ...// kontrola cisla do
 ...i $g(in("cis","do")) i $$wrapIdObj^OBapiED(rr,idobj)>$g(in("cis","do")) q
 ...// kontrola planovaciho pracoviste
 ...i $d(in("prac")) q:$p(val,":",76)=""  q:'$d(in("prac",$p(val,":",76)))
 ...// kontrola stavu - projit stare programy o osetrit !!!
 ...i $d(in("sta")) q:'$d(in("sta",+val))
 ...// --------------
 ...// kontrola typu dopravy
 ...i $d(in("tdp")) q:'$d(in("tdp",+$p(val,":",64)))
 ...// ---------------------
 ...// kontrola datumu
 ...q:($p(val,":",2)<od)!($p(val,":",2)>do)
 ...// ---------------
 ...// kontrola nazvu dopravce
 ...i $g(in("pre"))'="" i $$cnvBezDiaUp^OBapiED($p(val,":",4))'[in("pre") q
 ...// -----------------------
 ...// kontrola ico
 ...i $g(in("ico"))'="" q:$p(val,":",13)'[in("ico")
 ...// ------------
 ...// druh zajezdu
 ...i $d(in("dzj")) i $p(val,":",35)'="" i '$d(in("dzj",$p(val,":",35))) q
 ...// ------------
 ...s:'+$g(in("glb")) out("arr",zp,rr,idobj)=$$wrapIdObj^OBapiED(rr,idobj)
 ...s:+$g(in("glb")) ^CacheTempJB(wrk,"arr",zp,rr,idobj)=$$wrapIdObj^OBapiED(rr,idobj)
 //
 q 0
isObj(idfa,nmsp,zp,idobj,in,out)
 //
 // err=$$isObj(idfa,nmsp,zp,idobj,in,out) - test na existenci objednavky
 // out=0 neexistuje / >0 existuje
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(idobj)="" q "1~idobj="
 //
 n (idfa,nmsp,zp,idobj,in,out)
 s $zt="err" s err="" k out
 s rr=$$unwrapIdObj^OBapiED(idobj,1) s oo=$$unwrapIdObj^OBapiED(idobj,2)
 // data objednavky
 s out=$d(^[nmsp]OBOBJ(zp,"O",rr,oo))
 q 0
 //
gCObj(idfa,nmsp,zp,hrl,in,out)
 n (idfa,nmsp,zp,hrl,in,out)
 s $ze="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 //
 s rr=+$p($$nd^OBapiED(hrl,1),".",3)
 l +^[nmsp]OBOBJ(zp,"O",rr):1 e  q 0
 // neni pocatecni stav
 s:'$g(^[nmsp]OBOBJ(zp,"O",rr)) ^[nmsp]OBOBJ(zp,"O",rr)=1
 s out=$$wrapIdObj^OBapiED(rr,$g(^[nmsp]OBOBJ(zp,"O",rr)))
 s ^[nmsp]OBOBJ(zp,"O",rr)=$g(^[nmsp]OBOBJ(zp,"O",rr))+1
 l -^[nmsp]OBOBJ(zp,"O",rr)
 q 0
 //
gPcObjDD(idfa,nmsp,zp,idobj)
 //
 // err=$$gPcObjDD(idfa,nmsp,zp,idobj) - vrati pocet dni zajezdu podle objednavky
 //
 n (idfa,nmsp,zp,idobj)
 s $zt="err" s err=""
 k in,out s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,.in,.out)
 s hrlod=+$g(out("dta",2)) s hrldo=$g(out("dta",33)) s:'hrldo hrldo=hrlod
 i 'hrlod q 0
 q (hrldo-hrlod)
 //
lStlObj(idfa,nmsp,in,out)
 // err=$$lStlObj(idfa,nmsp,in,out) - seznam stalych objednavek
 // 
 // in("zp",zp)="" je-li def, pak zobrazim obj pro def zp
 // in("ico")=ico   - objednavky pro zakaznika, jehoz ico obsahuje ico
 // in("pre")=prepravce textove   - objednavky pro zakaznika, jehoz nazev prepravce obsahuje text
 // in("glb")=0/1 = pokud je 1, vysledek se zapise do globalu ^CacheTempJB(wrk) a v out=wrk
 // 
 // out("arr",zp,id)="" (id je id stale objednavky)
 //
 n (idfa,nmsp,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // konverze prepravce na vse velkyma a bez diakritiky
 s in("pre")=$$cnvBezDiaUp^OBapiED($g(in("pre")))
 //
 i +$g(in("glb")) s wrk=$i(^CacheTempJB) s out=wrk
 //
 s zp="" f  s zp=$o(^[nmsp]OBJS(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .s id="" f  s id=$o(^[nmsp]OBJS(zp,id)) q:id=""  d
 ..k arr s err=$$gStlObj(idfa,nmsp,zp,id,"",.arr) zt:+err "merr" s err=""
 ..q:+$g(arr("dta",1))
 ..s pre=$$cnvBezDiaUp^OBapiED($g(arr("dta",4)))
 ..s ico=$g(arr("dta",13))
 ..// kontrola na ico
 ..i $g(in("ico"))'="" q:ico'[in("ico")
 ..// ===============
 ..// kontrola na prepravce
 ..i $g(in("pre"))'="" q:pre'[in("pre")
 ..// =====================
 ..s:'+$g(in("glb")) out("arr",zp,id)=""
 ..s:+$g(in("glb")) ^CacheTempJB(wrk,"arr",zp,id)=""
 //
 q 0
gStlObj(idfa,nmsp,zp,id,in,out)
 //
 // err=$$gStlObj(idfa,nmsp,zp,id,in,out) - vrati data stale objednavky
 // struktura dat je totozna s objednavkou
 //
 n (idfa,nmsp,zp,id,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(id)="" q "1~id="
 //
 // data stale objednavky
 s val=$g(^[nmsp]OBJS(zp,id))
 f cnt=1:1:$$gPcOBJ() s out("dta",cnt)=$p(val,":",cnt)
 // ostatni data
 // kampres
 m:$d(^[nmsp]OBJS(zp,id,"k")) out("arr",1)=^[nmsp]OBJS(zp,id,"k")
 // info pro ridice
 m:$d(^[nmsp]OBJS(zp,id,"p")) out("arr",2)=^[nmsp]OBJS(zp,id,"p")
 // obchodne provozni info
 m:$d(^[nmsp]OBJS(zp,id,"pi")) out("arr",3)=^[nmsp]OBJS(zp,id,"pi")
 // info pro zakaznika na fakturu
 m:$d(^[nmsp]OBJS(zp,id,"remc")) out("arr",4)=^[nmsp]OBJS(zp,id,"remc")
 // ridic a hodiny pro plan
 m:$d(^[nmsp]OBJS(zp,id,"rh")) out("arr",5)=^[nmsp]OBJS(zp,id,"rh")
 // ==============
 // zahranicni DPH
 // ==============
 s val=$g(^[nmsp]OBJS(zp,id,"zhrDph"))
 f cnt=1:1:7 s out("arr",8,"dta",cnt)=$p(val,"~",cnt)
 s idstt="" f  s idstt=$o(^[nmsp]OBJS(zp,id,"zhrDph","arr",1,idstt)) q:idstt=""  d
 .s val=$g(^[nmsp]OBJS(zp,id,"zhrDph","arr",1,idstt))
 .f cnt=1:1:9 s out("arr",8,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 // ===============================================
 // spedice a predkalkulace (data spedice a vykony)
 // ===============================================
 s val=$g(^[nmsp]OBJS(zp,id,"frw"))
 f cnt=1:1:$$gPcPrpOBJ() s out("frw","dta",cnt)=$p(val,"~",cnt)
 // ==================================
 // spedice a predkalkulace - poplatky
 // ==================================
 s idppl="" f  s idppl=$o(^[nmsp]OBJS(zp,id,"frw","ppl",idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb)) q:iddsb=""  d
 ..s val=$g(^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb))
 ..f cnt=1:1:$$gPcFakPplOBJ() d
 ...i cnt=1 s out("frw","arr",1,idppl,iddsb)=$p(val,"~",cnt)	//historie
 ...s out("frw","arr",1,idppl,iddsb,"dta",cnt)=$p(val,"~",cnt)
 ..// rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=$g(^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb,"arr",1,idstt))
 ...f cnt=1:1:1 d
 ....s out("frw","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 //prubeh cinnosti na OBJ
 s row="" f  s row=$o(^[nmsp]OBJS(zp,id,"tsj",row)) q:row=""  d
 .s val=$g(^[nmsp]OBJS(zp,id,"tsj",row))
 .f cnt=1:1:6 s out("arr",15,"arr",row,"dta",cnt)=$p(val,"~",cnt)
 // konverze datumu a casu
 d cnvDObj(0,.out)
 // ======================
 //
 q 0
 //
sStlObj(idfa,nmsp,zp,id,in,out)
 //
 // err=$$sStlObj(idfa,nmsp,zp,id,in,out) - zapise data stale objednavky
 // struktura dat je totozna s objednavkou
 //
 n (idfa,nmsp,zp,id,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(id)="" q "1~id="
 //
 // konverze datumu a casu
 d cnvDObj(1,.in)
 // ======================
 //
 // data stale objednavky
 s val="" f cnt=1:1:$$gPcOBJ() s $p(val,":",cnt)=$tr($g(in("dta",cnt)),":","_")
 s ^[nmsp]OBJS(zp,id)=val
 // ostatni data
 k ^[nmsp]OBJS(zp,id,"k")
 m:$d(in("arr",1)) ^[nmsp]OBJS(zp,id,"k")=in("arr",1)
 k ^[nmsp]OBJS(zp,id,"p")
 m:$d(in("arr",2)) ^[nmsp]OBJS(zp,id,"p")=in("arr",2)
 k ^[nmsp]OBJS(zp,id,"pi")
 m:$d(in("arr",3)) ^[nmsp]OBJS(zp,id,"pi")=in("arr",3)
 k ^[nmsp]OBJS(zp,id,"remc")
 m:$d(in("arr",4)) ^[nmsp]OBJS(zp,id,"remc")=in("arr",4)
 k ^[nmsp]OBJS(zp,id,"rh")
 m:$d(in("arr",5)) ^[nmsp]OBJS(zp,id,"rh")=in("arr",5)
 // ==============
 // zahranicni DPH
 // ==============
 s val=""
 f cnt=1:1:7 s $p(val,"~",cnt)=$g(in("arr",8,"dta",cnt))
 s ^[nmsp]OBJS(zp,id,"zhrDph")=val
 s idstt="" f  s idstt=$o(in("arr",8,"arr",1,idstt)) q:idstt=""  d
 .s val=""
 .f cnt=1:1:9 s $p(val,"~",cnt)=$g(in("arr",8,"arr",1,idstt,"dta",cnt))
 .s ^[nmsp]OBJS(zp,id,"zhrDph","arr",1,idstt)=val
 // ===============================================
 // spedice a predkalkulace (data spedice a vykony)
 // ===============================================
 k ^[nmsp]OBJS(zp,id,"frw")
 s val="" f cnt=1:1:$$gPcPrpOBJ() s $p(val,"~",cnt)=$g(in("frw","dta",cnt))
 s ^[nmsp]OBJS(zp,id,"frw")=val
 // ==================================
 // spedice a predkalkulace - poplatky
 // ==================================
 k ^[nmsp]OBJS(zp,id,"frw","ppl")
 s idppl="" f  s idppl=$o(in("frw","arr",1,idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(in("frw","arr",1,idppl,iddsb)) q:iddsb=""  d
 ..s val=""
 ..f cnt=1:1:$$gPcFakPplOBJ() d
 ...s $p(val,"~",cnt)=$g(in("frw","arr",1,idppl,iddsb,"dta",cnt))
 ..s ^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb)=val
 ..//  rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(in("frw","arr",1,idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=""
 ...f cnt=1:1:1 d
 ....s $p(val,"~",cnt)=$g(in("frw","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt))
 ...s ^[nmsp]OBJS(zp,id,"frw","ppl",idppl,iddsb,"arr",1,idstt)=val
 //prubeh cinnosti na OBJ
 k ^[nmsp]OBJS(zp,id,"tsj")
 s row="" f  s row=$o(in("arr",15,"arr",row)) q:row=""  d
 .f cnt=1:1:6 d
 ..s $p(^[nmsp]OBJS(zp,id,"tsj",row),"~",cnt)=$g(in("arr",15,"arr",row,"dta",cnt))
 //
 q 0
 //
isStlObj(idfa,nmsp,zp,id,in,out)
 //
 // err=$$isStlObj(idfa,nmsp,zp,id,in,out) - text na existenci stale objednavky
 // id = id stale objednavky
 //
 // out=0 neexistuje / >0 existuje 
 //
 n (idfa,nmsp,zp,id,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(id)="" q "1~id="
 //
 s out=$d(^[nmsp]OBJS(zp,id))
 //
 q 0
 //
dStlObj(idfa,nmsp,zp,id,in,out)
 //
 // err=$$dStlObj(idfa,nmsp,zp,id,in,out) - vymaze stalou objednavku
 // in("fullname")=fullname
 //
 n (idfa,nmsp,zp,id,in,out)
 s $zt="err"  s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(id)="" q "1~id="
 //
 s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) i +err zt "merr"
 // zapis do kose
 k arr s err=$$gStlObj^OBapiED(idfa,nmsp,zp,id,"",.arr) zt:+err "merr" s err=""
 s err=$$sKos^OBapiED(idfa,nmsp,2,(zp_"|"_id),$g(in("fullname")),($g(idprv)_"/"_id),"",.arr,"") zt:+err "merr" s err=""
 //zruseni objednavky
 k ^[nmsp]OBJS(zp,id)
 //
 q 0
 //
gAvi(idfa,nmsp,zp,hrl,idavi,in,out)
 // err=$$gAvi(idfa,nmsp,zp,hrl,idavi,in,out) - vrati data aviza
 // idavi=prepravce|kam
 //
 n (idfa,nmsp,zp,hrl,idavi,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 i $g(idavi)="" q "1~idavi="
 //
 s val=$g(^[nmsp]OBOBJ(zp,"A",hrl,idavi))
 f cnt=1:1:15 s out("dta",cnt)=$p(val,":",cnt)
 // konverze hh.mm na mm
 f cnt=1 d
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$hm^OBapiED($g(out("dta",cnt))) q
 .s out("dta",cnt)=""
 // ====================
 // konverze dd.mm.rr na horlog
 f cnt=13 d 
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$dn^OBapiED($g(out("dta",cnt))) q
 .s out("dta",cnt)=""
 // ====================
 // ostatni data
 s cnt="" f  s cnt=$o(^[nmsp]OBOBJ(zp,"A",hrl,idavi,cnt)) q:(cnt="")!(cnt?.A)  d
 .s out("arr",1,cnt)=$g(^[nmsp]OBOBJ(zp,"A",hrl,idavi,cnt)) // poznamka
 // hlidani zmen
 s cnt=$o(^[nmsp]OBOBJ(zp,"A",hrl,idavi,"cop",""),-1)
 s out("arr",2,"dta",1)=cnt s out("arr",2,"dta",2)=""
 s:cnt'="" out("arr",2,"dta",2)=$g(^[nmsp]OBOBJ(zp,"A",hrl,idavi,"cop",cnt))
 //
 q 0
 //
 // popis pole s daty aviza out("dta",cnt)=...
 // ------------------------------------
 // cnt - pocitadlo
 // 01 - cas (mm od pulnoci)
 // 02 - misto
 // 03 - dnu
 // 04 - lidi
 // 05 - typ auta
 // 06 - km
 // 07 - kc
 // 08 - vyrizuje
 // 09 - tel
 // 10 - fax
 // 11 - pocet busu
 // 12 - vyb
 // 13 - rezervace do data (horlog)
 // 14 - mena pro kc, prevadi se na objednávku do FAKMENA (CZK,EUR)
 // 15 - email,pro odeslani informace o zmene stavu
 //
 // popis pole s daty aviza out("arr",cnt,...)=...
 // out("arr",1,cnt)=poznamka (cnt=1-3)
 // out("arr",2,...)=... - historie zmen
 // 			2,"dta",1)= - horlog posledni zmeny
 // 			2,"dta",2)= - uzivatel posledni zmeny
 //
sAvi(idfa,nmsp,zp,hrl,idavi,in,out)
 // err=$$sAvi(idfa,nmsp,zp,hrl,idavi,in,out) - zapis aviza do db
 // idavi=prepravce|kam
 // in("oidavi")=stary identifikator aviza, pokud je definovano, vymaze se (projit prg, zrusit fci, edison to maze pres dAvi)
 n (idfa,nmsp,zp,hrl,idavi,in,out)
 s $zt="err" s err="" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 i $g(idavi)="" q "1~idavi="
 //
 // je li definovano in("oidavi") stare cislo aviza pak se vymaze 
 i $g(in("oidavi"))'="" k ^[nmsp]OBOBJ(zp,"A",hrl,in("oidavi")) k:$o(^[nmsp]OBOBJ(zp,"A",hrl,""))="" ^[nmsp]OBOBJ(zp,"A",hrl)
 //
 // konverze mm na hh.mm
 f cnt=1 d
 .i +$g(in("dta",cnt)) s in("dta",cnt)=$$mh^OBapiED($g(in("dta",cnt))) q
 .s in("dta",cnt)=""
 // ====================
 // konverze hrl - dd.mm.rr
 f cnt=13 d 
 .i +$g(in("dta",cnt)) s in("dta",cnt)=$$nd^OBapiED(+$g(in("dta",cnt)),1) q
 .s in("dta",cnt)=""
 // =======================
 s val="" f cnt=1:1:15 s $p(val,":",cnt)=$tr($g(in("dta",cnt)),":","_")
 s ^[nmsp]OBOBJ(zp,"A",hrl,idavi)=val
 // ostatni data
 // poznamka
 s cnt="" f  s cnt=$o(^[nmsp]OBOBJ(zp,"A",hrl,idavi,cnt)) q:(cnt="")!(cnt?.A)  k ^[nmsp]OBOBJ(zp,"A",hrl,idavi,cnt)
 s inc=1 s cnt="" f  s cnt=$o(in("arr",1,cnt)) q:cnt=""  d
 .i $g(in("arr",1,cnt))'="" s ^[nmsp]OBOBJ(zp,"A",hrl,idavi,inc)=in("arr",1,cnt) s inc=inc+1
 // hlidani zmen zmenu
 s cnt=$g(in("arr",2,"dta",1)) s:'cnt cnt=$h
 s ^[nmsp]OBOBJ(zp,"A",hrl,idavi,"cop",cnt)=$g(in("arr",2,"dta",2))
 //
 s err=$$actHd(idfa,nmsp,zp,hrl) zt:+err "merr" s err=""
 //
 q 0
 //
dAvi(idfa,nmsp,zp,hrl,idavi,in,out)
 //
 // err=$$dAvi(idfa,nmsp,zp,hrl,idavi,in,out) - zruseni aviza
 // idavi=prepravce|kam
 //
 n (idfa,nmsp,zp,hrl,idavi,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 i $g(idavi)="" q "1~idavi="
 // 
 k ^[nmsp]OBOBJ(zp,"A",hrl,idavi)
 //
 s err=$$actHd(idfa,nmsp,zp,hrl) zt:+err "merr" s err=""
 //
 q 0
 //
lAvi(idfa,nmsp,in,out)
 // err=$$lAvi(idfa,nmsp,in,out) - seznam aviz
 // 
 // in("zp",zp)="" je-li def, pak zobrazim aviza pro def zp
 // in("prv",prv)="" je-li def, pak zobrazim aviza pro def prv
 // in("hrlod")=+$h - aviza od
 // in("hrldo")=+$h - aviza do
 // in("glb")=0/1 = pokud je 1, vysledek se zapise do globalu ^CacheTempJB(wrk) a v out=wrk
 // 
 // out("arr",zp,hrl,id)="" (id je id aviza)
 //
 n (idfa,nmsp,in,out)
 s $zt="err" s err="" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i '(+$g(in("hrlod"))) q "1~hrlod="
 i '(+$g(in("hrldo"))) q "1~hrldo="
 //
 s dz=$$gFaDz^OBapiED(idfa) s prv="" f  s prv=$o(in("prv",prv)) q:prv=""  s in("zp",(dz*100+prv))=""
 //
 i +$g(in("glb")) s wrk=$i(^CacheTempJB) s out=wrk
 s od=+$g(in("hrlod")) s do=+$g(in("hrldo"))
 // 
 s zp="" f  s zp=$o(^[nmsp]OBOBJ(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .f hrl=od:1:do d
 ..s cdok="" f  s cdok=$o(^[nmsp]OBOBJ(zp,"A",hrl,cdok)) q:cdok=""  d
 ...q:(cdok'["|")
 ...// ===============
 ...s:'+$g(in("glb")) out("arr",zp,hrl,cdok)=""
 ...s:+$g(in("glb")) ^CacheTempJB(wrk,"arr",zp,hrl,cdok)=""
 //
 q 0
 //
isAvi(idfa,nmsp,zp,hrl,idavi,in,out)
 //
 // err=$$isAvi(idfa,nmsp,zp,hrl,idavi,in,out) - test na existenci aviza
 // idavi=prepravce|kam
 // 
 // out=0 neexistuje / >0 existuje
 //
 n (idfa,nmsp,zp,hrl,idavi,in,out)
 s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 i $g(idavi)="" q "1~idavi="
 // 
 s out=$d(^[nmsp]OBOBJ(zp,"A",hrl,idavi))
 //
 q 0
 //
actHd(idfa,nmsp,zp,hrl)
 // err=$$actHd(idfa,nmsp,zp,hrl) - aktualizace hlavicky dne v globalu ^[nmsp]OBOBJ(zp,hrl)
 n (idfa,nmsp,zp,hrl)
 s $zt="err" s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 //
 n cnt1,cnt2,ind
 s cnt1=0 s cnt2=0
 s ind="" f  s ind=$o(^[nmsp]OBOBJ(zp,"A",hrl,ind)) q:ind=""  d
 .i ind?.N s cnt1=cnt1+1 q
 .s cnt2=cnt2+1
 i 'cnt1,'cnt2 k ^[nmsp]OBOBJ(zp,"A",hrl) q 0
 s ^[nmsp]OBOBJ(zp,"A",hrl)=$$nd^OBapiED(hrl,1)_":"_$P("Po:Út:St:Čt:Pá:So:Ne",":",hrl+3#7+1)_":"_cnt1_":"_cnt2
 q 0
 //
gPcOBJ()
 // pocet udaju ve vete objednavky
 q 80
 //
gPcPrpOBJ()
 // pocet udaju ve vete objednavky - preprodej dopravy
 q 13
gPcFakOBJ()
 // pocet udaju ve vete objednavky - fakturace data
 q 3
gPcFakPplOBJ()
 // pocet udaju ve vete poplatku
 q 7
gPcFakItmOBJ()
 // pocet udaju ve vete objednavky - fakturacni polozka
 q 3
 //
cnvDObj(par,arr)
 // konverze dat na objednavce dd.mm.rr na hrl a hh.mm na mm
 // par=0 - load objednavky dd.mm.rr na hrl a hh.mm na mm
 // par=1 - save objednavky hrl na dd.mm.rr a mm na hh.mm 
 // 
 n (par,arr)
 i par=0 d
 .// dd.mm.rr - hrl
 .f cnt=29,33,67 d 
 ..i +$g(arr("dta",cnt)) s arr("dta",cnt)=$$dn^OBapiED($g(arr("dta",cnt))) q
 ..s arr("dta",cnt)=""
 .// hh.mm - mm
 .f cnt=30,34 d
 ..i +$g(arr("dta",cnt)) s arr("dta",cnt)=$$hm^OBapiED($g(arr("dta",cnt))) q
 ..s arr("dta",cnt)=""
 .f cnt=8,9 d
 ..i +$g(arr("frw","dta",cnt)) s arr("frw","dta",cnt)=$$hm^OBapiED($g(arr("frw","dta",cnt))) q
 ..s arr("frw","dta",cnt)=""
 .s osc="" f  s osc=$o(arr("arr",5,osc)) q:osc=""  d
 ..s $p(arr("arr",5,osc),"~",1)=$$hm^OBapiED($p($g(arr("arr",5,osc)),"~",1))
 .// ==============
 i par=1 d
 .// hrl - dd.mm.rr
 .f cnt=29,33,67 d 
 ..i +$g(arr("dta",cnt)) s arr("dta",cnt)=$$nd^OBapiED(+$g(arr("dta",cnt)),1) q
 ..s arr("dta",cnt)=""
 .// mm - hh.mm
 .f cnt=30,34 d
 ..i +$g(arr("dta",cnt)) s arr("dta",cnt)=$$mh^OBapiED($g(arr("dta",cnt))) q
 ..s arr("dta",cnt)=""
 .f cnt=8,9 d
 ..i +$g(arr("frw","dta",cnt)) s arr("frw","dta",cnt)=$$mh^OBapiED($g(arr("frw","dta",cnt))) q
 ..s arr("frw","dta",cnt)=""
 .s osc="" f  s osc=$o(arr("arr",5,osc)) q:osc=""  d
 ..s $p(arr("arr",5,osc),"~",1)=$$mh^OBapiED($p($g(arr("arr",5,osc)),"~",1))
 .// ==============
 q
 //
err s $zt="" k out q:$g(err)'="" "1~"_$tr($g(err),"~","/") q "1~"_$ze
 //
]]></Routine>


<Routine name="OBapiEDObj1" type="INT" languagemode="0" timestamp="64791,37630.152205"><![CDATA[
OBapiEDObj1 q
mkFakDtaObj(idfa,nmsp,arr)
 // in
 // arr("par",1)=0/1 ... mod vypoctu 0 pro fakturaci preprodane objednavky (nepocita se zahranicni DPH)/ 1 informace o trzbe (vcetne zahranicniho DPH)
 // doplni do pole arr udaje o fakturaci za objednavku
 n (idfa,nmsp,arr)
 s $zt="err" s err=""
 // =========
 // vyfakturovano, uz fakturacni udaje nepocitam
 i $g(arr("dta",1))=4 q 0
 // ============================================
 // kill fakturacnich udaju
 k arr("fak","dta") k arr("fak","itm")
 // ==========
 // kontrola na stav (preprodano a odjeto)
 i $g(arr("dta",64))'=1 q 0  // musi byt preprodano
 i $g(arr("dta",1))'=3 q 0   // musi byt odjeto
 // ======================================
 // kontrola na zpusob fakturace
 i $g(arr("dta",65))=4 q 0   // nefakturovat
 // =========================
 // nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 s fcek15=0 s:+$g(arrset("arr",3,1)) fcek15=14 // zaokrouhleni cekani
 s zvzdph=+$g(arrset("arr",3,10))
 k arrset
 // =========
 // ciselnik druhu zajezdu
 k arrcdza s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arrcdza) zt:+err "merr" s err=""
 // ======================
 // vypocet fakturacnich udaju
 s zf=$g(arr("dta",65)) s dan=$g(arr("dta",66)) s slvprc=$g(arr("dta",27))
 k arrsa s slvval=""
 // ==========================
 // nastaveni sazeb
 s arrsa(1)=$p($g(arr("dta",49)),"/",1)    // km
 s arrsa(1.1)=$p($g(arr("dta",49)),"/",2)  // km neobsazeny
 s arrsa(2)=$g(arr("dta",50))              // 15 minut cekani
 s arrsa(3)=$g(arr("dta",51))              // 15 minut jizdy
 s arrsa(4)=$g(arr("dta",52))              // hod/km vleku
 s arrsa(6)=$g(arr("dta",80))			   // cyklus
 // ==============
 // =========================
 // fakturace za vykon dle km
 // =========================
 i zf=1 d
 .// km obsazene
 .i +$g(arr("frw","dta",10)) d
 ..s arr("fak","itm",10,"dta",1)=($g(arr("frw","dta",10))*arrsa(1))
 ..s arr("fak","itm",10,"dta",2)=arrsa(1)
 ..s arr("fak","itm",10,"dta",3)=($g(arr("frw","dta",10)))
 .// km neobsazene
 .i +$g(arr("frw","dta",11)) d 
 ..s arr("fak","itm",11,"dta",1)=($g(arr("frw","dta",11))*arrsa(1.1))
 ..s arr("fak","itm",11,"dta",2)=arrsa(1.1)
 ..s arr("fak","itm",11,"dta",3)=($g(arr("frw","dta",11)))
 .// km privesu
 .i +$g(arr("frw","dta",12)) d
 ..s arr("fak","itm",20,"dta",1)=($g(arr("frw","dta",12))*arrsa(4))
 ..s arr("fak","itm",20,"dta",2)=arrsa(4)
 ..s arr("fak","itm",20,"dta",3)=$g(arr("frw","dta",12))
 .// cekani
 .s mm=(+$g(arr("frw","dta",9))+fcek15)\15
 .i mm d 
 ..s arr("fak","itm",30,"dta",1)=(mm*arrsa(2))
 ..s arr("fak","itm",30,"dta",2)=arrsa(2)
 ..s arr("fak","itm",30,"dta",3)=mm
 .// cyklus
 .i +$g(arr("frw","dta",13)) d
 ..s arr("fak","itm",60,"dta",1)=($g(arr("frw","dta",13))*arrsa(6))
 ..s arr("fak","itm",60,"dta",2)=arrsa(6)
 ..s arr("fak","itm",60,"dta",3)=$g(arr("frw","dta",13))
 // ---------------------------
 // fakturace za vykon dle casu
 // ---------------------------
 i zf=2 d  // vykon, dle casu
 .s mm=$g(arr("frw","dta",8))+$g(arr("frw","dta",9))+fcek15\15
 .i mm d
 ..s arr("fak","itm",40,"dta",1)=(mm*arrsa(3))
 ..s arr("fak","itm",40,"dta",2)=arrsa(3)
 ..s arr("fak","itm",40,"dta",3)=mm
 .// cyklus
 .i +$g(arr("frw","dta",13)) d
 ..s arr("fak","itm",60,"dta",1)=($g(arr("frw","dta",13))*arrsa(6))
 ..s arr("fak","itm",60,"dta",2)=arrsa(6)
 ..s arr("fak","itm",60,"dta",3)=$g(arr("frw","dta",13))
 // -----------------------
 // fakturace smluvni cenou
 // -----------------------
 i zf=3 d
 .// smluvni cena s dani
 .i +$g(arr("dta",18)) d
 ..s arr("fak","itm",50,"dta",1)=($g(arr("dta",18))-$$gDanVal^OBapiED(arr("dta",18),dan))
 ..s arr("fak","itm",50,"dta",2)=""
 ..s arr("fak","itm",50,"dta",3)=""
 .// smluvni cena bez dane
 .i +$g(arr("dta",68)) d
 ..s arr("fak","itm",50,"dta",1)=$g(arr("dta",68))
 ..s arr("fak","itm",50,"dta",2)=""
 ..s arr("fak","itm",50,"dta",3)=""
 // -------------
 // vypocet slevy
 // -------------
 s slvval="" i ((zf=1)!(zf=2))&(slvprc) d
 .//celkova cena za dopravu
 .s val=""  s id="" f  s id=$o(arr("fak","itm",id)) q:(id="")  s val=val+$g(arr("fak","itm",id,"dta",1))
 .s c=.05,fl=0 s:val<0 c=-.05,fl=1,val=-val
 .s val=val+c\.1/10 s:fl val=-val
 .s slvval=slvprc/100*val,c=.5 s:slvval<0 c=-.5 s slvval=slvval+c\1
 // ----------------------
 // dalsi fakturacni udaje
 // ----------------------
 s arr("fak","dta",1)=-slvval // sleva kc
 s arr("fak","dta",2)=""      // koncovy stat id
 s:$g(arr("dta",35))'="" arr("fak","dta",2)=$p($g(arrcdza("arr",$g(arr("dta",35)))),"~",4)
 s arr("fak","dta",3)=""      // koncovy stat popis
 s:$g(arr("dta",35))'="" arr("fak","dta",3)=$p($g(arrcdza("arr",$g(arr("dta",35)))),"~",5)
 // --------------
 // zahranicni DPH
 // --------------
 // arr("arr",8,"dta",1)=vychozi misto popis
 // arr("arr",8,"dta",2)=vychozi misto stat (idstat)
 // arr("arr",8,"dta",3)=koncove misto popis
 // arr("arr",8,"dta",4)=koncove misto stat (idstat)
 // arr("arr",8,"dta",5)=celkovy pocet km (vypocet)
 // arr("arr",8,"dta",6)=celkova cena za prepravu osob (netto cena celkem) (vypocet)
 // arr("arr",8,"dta",7)=kurzEUR pro vypocet dph EUR
 // arr("arr",8,"arr",1,idstat,"dta",1)=km statem
 // arr("arr",8,"arr",1,idstat,"dta",2)=danova povinost 0 vlastni / 1 zakaznik / 2 odvedeme za zakaznika 
 // arr("arr",8,"arr",1,idstat,"dta",3)=fakturovat 0 ne / 1 ano 
 // arr("arr",8,"arr",1,idstat,"dta",4)=sazba DPH (výše %) (vypocet, prepis z ciselniku)
 // arr("arr",8,"arr",1,idstat,"dta",5)=limit km pro výpočet (vypocet, prepis z ciselniku)
 // arr("arr",8,"arr",1,idstat,"dta",6)=cena za prepravu osob v prislusnem state (vypocet)
 // arr("arr",8,"arr",1,idstat,"dta",7)=dph (vypocet)
 // arr("arr",8,"arr",1,idstat,"dta",8)=dph EUR (vypocet)
 // arr("arr",8,"arr",1,idstat,"dta",9)=prujezd zemi (0 tranzit / 1 tam a zpet, limit km pro vypocet x 2)
 // =========================
 // ===============================
 // zpusob vypoctu zahranicniho DPH
 // ===============================
 // zvzdph=0/1
 // zvzdph=0 :
 //  cenastat=celkovacena*(kmstat/celkovekm)
 //  dph nezapoctene v cene=cenastat*(dansazba/100)
 //  dph zapoctene v cene=cenastat*$j(dansazba/(100+dansazba),0,4)
 // zvzdph=1 :
 //  cenakm=(km1*sazba+km2*sazba2+...+kmN*sazbaN)/cenacelkem, kde sazba=(1+(dansazba/100)), km se nasobi sazbou v pripade, ze je dph zapoctene v cene 
 //  cenastat=cenakm*kmstat
 //  dphstat=cenakm*kmstat*sazbastat kde sazbastat=dansazba/100
 // ========================================================
 // datumova promenna pro zmeny
 s hrlch131001=1 i $g(arr("dta",29)) i $g(arr("dta",29))<$$dn^OBapiED("1.10.2013") s hrlch131001=0  //obj po 01.10.2013, zmena v zahranicnim DPH
 // vymazani udaju
 s idstat="" f  s idstat=$o(arr("arr",8,"arr",1,idstat)) q:idstat=""  d
 .i '$g(arr("arr",8,"arr",1,idstat,"dta",1)) k arr("arr",8,"arr",1,idstat) q
 .f cnt=4:1:8 k arr("arr",8,"arr",1,idstat,"dta",cnt)
 // vymazani poplatku se zahranicnim DPH
 k arr("frw","arr",1,1300)
 // kontrola na dph z DZA (musi byt nulove, zahranicni zajezd)
 // ==============================
 // vypocet dph pokud se fakturuje
 // ==============================
 i zf'=4 d
 .// pro OBJ po 01.10.2013 zahranicni DPH odvadi ten, co zajezd odjel, nepocitame ho
 .// (pocita se v pripade predkalkulace arr("par",1)=1)
 .// (na objednavkach se nebude evidovat (faktura s dani jako priloha) LT)
 .i ('$g(arr("par",1)))&($g(arr("dta",29))'<$$dn^OBapiED("1.10.2013")) q
 .// ===============================================================================
 .i $o(arr("arr",8,"arr",1,""))'="" d
 ..//ciselnik s dph pro jednotlive staty
 ..k arrcis12 s err=$$gCis^OBapiED(idfa,nmsp,12,"",.arrcis12) zt:+err "merr"
 ..// stanoveni kurzu EUR z pokladny
 ..s kurzEUR=""
 ..k arro s err=##class(ALVA.POKLADNA.MLAPI).ExchangeRateRead(idfa,nmsp,$g(arr("dta",2)),"EUR",1,.arro)
 ..i 'err i $g(arro("Mena","EUR","Mnoz")) s kurzEUR=($g(arro("Mena","EUR","Kurz"))/$g(arro("Mena","EUR","Mnoz")))
 ..s arr("arr",8,"dta",7)=kurzEUR
 ..// km pro vypocet zhr.DPH = obsazene+neobsazene
 ..s kmc=0
 ..s kmc=kmc+$g(arr("frw","dta",10))	//obsazene
 ..s kmc=kmc+$g(arr("frw","dta",11))	//neobsazene
 ..s arr("arr",8,"dta",5)=kmc
 ..// trzba pro vypocet zhr.DPH
 ..s trz=0
 ..s idpol="" f  s idpol=$o(arr("fak","itm",idpol)) q:idpol=""  d
 ...s trz=trz+$g(arr("fak","itm",idpol,"dta",1))
 ..// + poplatky ktere souvisi s dopravou
 ..k arrcis11 s err=$$gCis^OBapiED(idfa,nmsp,11,"",.arrcis11) zt:+err "merr"
 ..s idppl="" f  s idppl=$o(arr("frw","arr",1,idppl)) q:idppl=""  d
 ...s iddsb="" f  s iddsb=$o(arr("frw","arr",1,idppl,iddsb)) q:iddsb=""  d
 ....// nezapocitavam myto CZ a SK 29.2.2012 LT, neni to poplatek pro vypocet zahr.DPH
 ....// myto CZ, do zakladu nenapocitavam (stav do 1.10.2013)
 ....// od 01.10.2013 myto CZ a SK do zakladu zapocitavam
 ....// (dotaz PL do Chemnitzu - zapocitavaji se vsechny poplatky, ktere jsou soucasti dopravy)
 ....i 'hrlch131001 i idppl=1600 d  q
 .....// poplatek se nefakturuje (je soucasti ceny), odectu ho z trzby
 .....i +$g(arr("frw","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 ....// myto SK, do zakladu nenapocitavam
 ....i 'hrlch131001 i idppl=2000 d  q
 .....// poplatek se nefakturuje (je soucasti ceny), odectu ho z trzby
 .....i +$g(arr("frw","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 ....// poplatek nesouvisi s dopravou
 ....i '$p($g(arrcis11("arr",idppl)),"~",4) d  q
 .....// poplatek se nefakturuje se (je soucasti ceny), odectu ho z trzby
 .....i +$g(arr("frw","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 ....// poplatek souvisi s dopravou
 ....i +$p($g(arrcis11("arr",idppl)),"~",4) d  q
 .....// poplatek se nefakturuje (je soucasti ceny), nenacitat, ! ma-li rozpis podle statu, odectu ho !
 .....i +$g(arr("frw","arr",1,idppl,iddsb,"dta",6)) d  q
 ......// poplatek ma rozpis podle statu, odectu ho, nactu cast pri vypoctu zahr.dph
 ......i +$g(arr("frw","arr",1,idppl,iddsb,"dta",7)) s trz=trz-$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 .....// poplatek ma rozpis podle statu, nenacitat, nactu cast pri vypoctu zahr.dph
 .....i +$g(arr("frw","arr",1,idppl,iddsb,"dta",7)) q
 .....s trz=trz+$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 ..//sleva
 ..s trz=trz+$g(arr("fak","dta",1))
 ..s arr("arr",8,"dta",6)=trz
 ..i 'kmc q
 ..//================================================
 ..//aktualizace vyse DPH a limitu km pro vypocet dph
 ..//================================================
 ..s idstat="" f  s idstat=$o(arr("arr",8,"arr",1,idstat)) q:idstat=""  d
 ...//danova sazba
 ...s arr("arr",8,"arr",1,idstat,"dta",4)=+$p($g(arrcis12("arr",idstat)),"~",3)
 ...//limit km
 ...s arr("arr",8,"arr",1,idstat,"dta",5)=+$p($g(arrcis12("arr",idstat)),"~",4)
 ...//je-li jizda tam a zpet, zvysuje se limit x 2
 ...i arr("arr",8,"arr",1,idstat,"dta",9)=1 s arr("arr",8,"arr",1,idstat,"dta",5)=($g(arr("arr",8,"arr",1,idstat,"dta",5))*2)
 ..//=========================================================
 ..//vypocet ceny za km pro druhy typ vypoctu zahranicniho dph
 ..//=========================================================
 ..s rzdkm=0 s cenakm=0 s smkoefstatdph=0
 ..s idstat="" f  s idstat=$o(arr("arr",8,"arr",1,idstat)) q:idstat=""  d
 ...//koeficient dph pro stat = km
 ...s koefstatdph=$g(arr("arr",8,"arr",1,idstat,"dta",1))
 ...//koeficient dph pro stat v pripade dph zahrnuteho v cene a vlastni dan. povinnosti = kmstat*(1+dphstat/100)
 ...i ('$g(arr("arr",8,"arr",1,idstat,"dta",3)))&($g(arr("arr",8,"arr",1,idstat,"dta",2))'=1) d
 ....s koefstatdph=$g(arr("arr",8,"arr",1,idstat,"dta",1))*(1+($g(arr("arr",8,"arr",1,idstat,"dta",4))/100))
 ...//km<limit km ... koeficient =kmstat
 ...i $g(arr("arr",8,"arr",1,idstat,"dta",5)) i $g(arr("arr",8,"arr",1,idstat,"dta",1))'>$g(arr("arr",8,"arr",1,idstat,"dta",5)) d
 ....s koefstatdph=$g(arr("arr",8,"arr",1,idstat,"dta",1))
 ...s smkoefstatdph=smkoefstatdph+koefstatdph
 ...//suma zadanych km
 ...s rzdkm=rzdkm+$g(arr("arr",8,"arr",1,idstat,"dta",1))
 ..//rozdil km ... bez sazby koeficient =kmstat
 ..s rzdkm=(kmc-rzdkm)
 ..s smkoefstatdph=smkoefstatdph+rzdkm
 ..s cenakm=0
 ..i smkoefstatdph s cenakm=trz/smkoefstatdph
 ..//=====================
 ..//vypocet dph pro staty
 ..//=====================
 ..s idstat="" f  s idstat=$o(arr("arr",8,"arr",1,idstat)) q:idstat=""  d
 ...//km<limit km
 ...i $g(arr("arr",8,"arr",1,idstat,"dta",5)) i $g(arr("arr",8,"arr",1,idstat,"dta",1))'>$g(arr("arr",8,"arr",1,idstat,"dta",5)) q
 ...//cena za prepravu osob v prislusnem state
 ...i 'zvzdph s arr("arr",8,"arr",1,idstat,"dta",6)=$$round^OBapiED(($g(arr("arr",8,"arr",1,idstat,"dta",1))/kmc*trz),2)
 ...i +zvzdph s arr("arr",8,"arr",1,idstat,"dta",6)=$$round^OBapiED(($g(arr("arr",8,"arr",1,idstat,"dta",1))*cenakm),2)
 ...//pro idstat=SK k cene za prepravu osob pripoctu mytne SK
 ...//od 01.10.2013 myto SK do zakladu zapocitavam vzdy, uz napocteno
 ...i 'hrlch131001 i idstat="SK" d
 ....s idppl=2000 s iddsb="" f  s iddsb=$o(arr("frw","arr",1,idppl,iddsb)) q:iddsb=""  d
 .....s arr("arr",8,"arr",1,idstat,"dta",6)=$g(arr("arr",8,"arr",1,idstat,"dta",6))+$g(arr("frw","arr",1,idppl,iddsb,"dta",1))
 ...//projdu poplatky a pokud je rozepsan podle statu, prictu prislusnou cast
 ...//na obj od 01.10.2013 blokovano ve VB, promena neni naplnena
 ...s idppl="" f  s idppl=$o(arr("frw","arr",1,idppl)) q:idppl=""  d
 ....i 'hrlch131001 q:idppl=1600
 ....i 'hrlch131001 q:idppl=2000
 ....s iddsb="" f  s iddsb=$o(arr("frw","arr",1,idppl,iddsb)) q:iddsb=""  d
 .....// poplatek souvisi s dopravou
 .....i +$p($g(arrcis11("arr",idppl)),"~",4) d
 ......// poplatek ma rozpis podle statu, nactu cast pro stat
 ......i +$g(arr("frw","arr",1,idppl,iddsb,"dta",7)) d
 .......s arr("arr",8,"arr",1,idstat,"dta",6)=$g(arr("arr",8,"arr",1,idstat,"dta",6))+$g(arr("frw","arr",1,idppl,iddsb,"arr",1,idstat,"dta",1))
 ...//====================================================================================
 ...//nulova sazba 26.11.2014, presunuto sem, aby se pocital zaklad i pri nulove sazbe DPH 
 ...i '$g(arr("arr",8,"arr",1,idstat,"dta",4)) q
 ...//====================================================================================
 ...//cena za prepravu je zaklad (dph se fakturuje, neni zapocitane v cene za prepravu ; nebo ma danovou povinnost zakaznik (12.4.2012 LT + VTCR LACINOVA)
 ...s arr("arr",8,"arr",1,idstat,"dta",7)=$$round^OBapiED(($g(arr("arr",8,"arr",1,idstat,"dta",6))*$g(arr("arr",8,"arr",1,idstat,"dta",4))/100),2)
 ...//dph se nefakturuje a odvadime ho my, je zapocitane v cene za prepravu
 ...i ('$g(arr("arr",8,"arr",1,idstat,"dta",3)))&($g(arr("arr",8,"arr",1,idstat,"dta",2))'=1) d
 ....//prvni varianta vypoctu
 ....i 'zvzdph s arr("arr",8,"arr",1,idstat,"dta",7)=$$gDanVal^OBapiED($g(arr("arr",8,"arr",1,idstat,"dta",6)),$g(arr("arr",8,"arr",1,idstat,"dta",4)))
 ....//druha varianta vypoctu
 ....i +zvzdph d
 .....s arr("arr",8,"arr",1,idstat,"dta",7)=$$round^OBapiED(($g(arr("arr",8,"arr",1,idstat,"dta",6))*$g(arr("arr",8,"arr",1,idstat,"dta",4))/100),2)
 .....//do zakladu pripoctu dan, aby odpovídala struktura, stejne u sj.
 .....s arr("arr",8,"arr",1,idstat,"dta",6)=$g(arr("arr",8,"arr",1,idstat,"dta",6))+$g(arr("arr",8,"arr",1,idstat,"dta",7))
 ...////dph se nefakturuje a druha varianta vypoctu, pak k cene pro stat pripoctu dph, aby odpovidala struktura
 ...//i ('$g(arr("arr",8,"arr",1,idstat,"dta",3)))&(+zvzdph) d
 ...//.s arr("arr",8,"arr",1,idstat,"dta",6)=$g(arr("arr",8,"arr",1,idstat,"dta",6))+$g(arr("arr",8,"arr",1,idstat,"dta",7))
 ...//zaokrouhleni + prevod na EUR
 ...i $g(arr("dta",69))="CZK" d
 ....s arr("arr",8,"arr",1,idstat,"dta",7)=$$round^OBapiED($g(arr("arr",8,"arr",1,idstat,"dta",7)),0)
 ....s arr("arr",8,"arr",1,idstat,"dta",8)=""
 ....i kurzEUR d
 .....s arr("arr",8,"arr",1,idstat,"dta",8)=$$round^OBapiED(($g(arr("arr",8,"arr",1,idstat,"dta",7))/kurzEUR),2)
 ...i $g(arr("dta",69))="EUR" d
 ....s arr("arr",8,"arr",1,idstat,"dta",7)=$$round^OBapiED($g(arr("arr",8,"arr",1,idstat,"dta",7)),2)
 ....s arr("arr",8,"arr",1,idstat,"dta",8)=$g(arr("arr",8,"arr",1,idstat,"dta",7))
 ...//poplatek se fakturuje, napoctu ho do 1300
 ...i $g(arr("arr",8,"arr",1,idstat,"dta",3))=1 d
 ....s arr("frw","arr",1,1300,1,"dta",1)=$g(arr("frw","arr",1,1300,1,"dta",1))+$g(arr("arr",8,"arr",1,idstat,"dta",7))
 ....s arr("frw","arr",1,1300,1,"dta",2)=$g(arr("frw","arr",1,1300,1,"dta",2))+$g(arr("arr",8,"arr",1,idstat,"dta",7))
 ....s arr("frw","arr",1,1300,1,"dta",3)=0
 ....s arr("frw","arr",1,1300,1,"dta",4)=0
 ....s arr("frw","arr",1,1300,1,"dta",5)=""
 ....s arr("frw","arr",1,1300,1,"dta",6)=0
 .i $d(arr("frw","arr",1,1300,1)) d
 ..k arrcisitm s err=$$gCisItm^OBapiED(idfa,nmsp,11,1300,"",.arrcisitm) zt:+err "merr" s err=""
 ..s arr("frw","arr",1,1300,1,"dta",5)=$p($g(arrcisitm("arr",1300,1)),"~",1)
 ..k arrcisitm
 q 0
 //
err s $zt="" k out q "1~"_$ze_"~"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDObjInfo" type="INT" languagemode="0" timestamp="64817,56855.271588"><![CDATA[
OBapiEDObjInfo q
 // popis pole s daty objednavky out("dta",cnt)=...
 // ------------------------------------
 // cnt - pocitadlo; [---] nepouziva se
 // 01 - stav (stav 0 objednano / 1 zruseno /2 naplanovano / 3 odjeto / 4 vyfakturovano)
 // 02 - HDAPR - horlog data pristaveni (povinny !)
 // 03 - PRE - kod prepravce [---]
 // 04 - NAZ - nazev prepravce 
 // 05 - ULC - ulice
 // 06 - OBEC - obec
 // 07 - PSC - psc
 // 08 - ZPPL - zpusob platby
 // 09 - BAN - kod banky
 // 10 - UCE - ucet
 // 11 - DIC1 - dic - 1.cast
 // 12 - DIC2 - dic - 2.cast
 // 13 - ICO - ico
 // 14 - SJEDNAL - kdo zajezd sjednal
 // 15 - TEL - telefon
 // 16 - FAX - fax
 // 17 - VEDOUCI - vedouci zajezdu
 // 18 - SMLUV -  smluvni cena s dani
 // 19 - CEPR  - predbezna cena
 // 20 - ZALO - nedanova zaloha [---]
 // 21 - DOKZAL - p.doklad      [---]
 // 22 - DNEZAL - zaloha ze dne [---]
 // 23 - UPZAL - uprava nedanove zalohy [---]
 // 24 - DOUPZ - p.doklad [---]
 // 25 - DNEUP - uprava nedanove zalohy ze dne [---]
 // 26 - TYPP - typ prepravce (číselnik tpr)
 // 27 - SLEP - sleva v procentech
 // 28 - PRIST - misto pristaveni
 // 29 - DAPR - datum pristaveni (horlog)
 // 30 - CASPRI - cas pristaveni (mm od pulnoci)
 // 31 - OSOB - pocet osob
 // 32 - ODST - misto odstaveni
 // 33 - DAKO - datum odstaveni  (horlog)
 // 34 - CASPR - cas odstaveni   (mm od pulnoci)
 // 35 - DZA - druh zajezdu (ciselnik id=1)
 // 36 - TYPV - typ autobusu
 // 37 - POCAUT - pocet autobusu
 // 38 - TYPVL - typ vleku
 // 39 - POCVL - pocet vleku
 // 40 - POCRI - pocet ridicu
 // 41 - R [---] pocet noclehu v rezii prepravce
 // 42 - R [---] pocet snidani v rezii prepravce
 // 43 - R [---] pocet obedu v rezii prepravce
 // 44 - R [---] pocet veceri v rezii prepravce
 // 45 - R [---] pocet noclehu v rezii dopravce
 // 46 - R [---] pocet snidani v rezii dopravce
 // 47 - R [---] pocet obedu v rezii dopravce
 // 48 - R [---] pocet veceri v rezii dopravce
 // 49 - KKM - sazba za km
 // 50 - KCEK - sazba za 15 min.cekani
 // 51 - KCAS - sazba za 15 min.jizdy
 // 52 - KMVL - sazba za hod/km vleku
 // 53 - LIMKM - limit pristavnych km
 // 54 - upres - upresneni nazvu
 // 55 - PULC - postovni ulice
 // 56 - POBEC - postovni adresa obec
 // 57 - PPSC - postovni adresa psc
 // 58 - CizObj - cislo zakaznikovy objednavky
 // 59 - IdZak - identifikátor zákaznika (prepravce)
 // 60 - PRS - prepravni system
 // 61 - OBJPZN - poznamka k objednavce
 // 62 - PREKM - předběžné km
 // 63 - VEDOUCIKNT - kontakt na vedouciho zajezdu
 // 64 - TYP_DOPRAVY - 0 vlastni / 1 cizi (preprodej zajezdu)
 // 65 - ZPFAK - způsob fakturace (dle ciselniku) (1=fakturovat za km,2=fakturovat za cas 3=smluvni cena, 4=nefakturovat)
 // 66 - DAN - vyse dane %
 // 67 - DAT_FAKT - datum prevedeni do fakturace (horlog)
 // 68 - SMLUVBD -  smluvni cena bez dane
 // 69 - FAKMENA - fakturacni mena (CZK,EUR)
 // 70 - VNIFANS - stredisko odberatele pro vnitrofakturu
 // 71 - VSF - vystaveni faktury (S/samostatne, T/tydne, M/mesicne)
 // 72 - PREHVYK - predbezne hodiny vykonu (min)
 // 73 - SLEDUVOD - textova informace ke sleve (duvod)
 // 74 - fakPrv - idprv pro fakturaci (kde se bude fakturovat), muze byt ""
 // 75 - sortfak - radici index pro fakturaci
 // 76 - id planovaciho pracoviste, kam objednavka patri (nemusi byt zadano)
 // 77 - RZ vozidla pro plan
 // 78 - RZ privesu pro plan
 // 79 - OS ridice pro plan
 // 80 - KCYKL - sazba za cyklus
 // ==========================================================================
 // popis pole s daty objednavky preprodej out("frw","dta",cnt)=...
 // ponovu soucasti predkalkulace, lze vyplnit i vykony (JI,CE,KMO,KMNE,KMPRI)
 // ==========================================================================
 // 01 - ODJETO 0/1
 // 02 - CNAKP - cena nakupu bezDPH (co se bude fakturovat objednateli)
 // 03 - CPROD - cena prodeje bezDPH (za kolik se zajezd proda cizimu dopravci)
 // 04 - IDZAK - identifikator zakaznika - dopravce (komu to bylo prodano)
 // 05 - DOSLA_FAKTURA - muze jich byt vic, oddelovac #
 // 06 - SPZ - spz auta, ktere zajezd odjelo
 // 07 - NS - NS pro fakturaci
 // 08 - JI - jizda (mm)
 // 09 - CE - cekani (mm)
 // 10 - KMO - km obsazene
 // 11 - KMNE - km neobsazene
 // 12 - KMPRI -km s privesem
 // 13 - CYKL - pocet cyklu
 // ============================================================================
 // popis pole s daty objednavky preprodej - poplatky
 // ponovu soucasti predkalkulace, lze vyplnit i v pripade standardni objednavky
 // ============================================================================
 // out("frw","arr",1,idppl,iddsb)=zaklad kc (historicka kompatibilita)
 // out("frw","arr",1,idppl,iddsb,"dta",1)=zaklad kc
 // out("frw","arr",1,idppl,iddsb,"dta",2)=celkem kc
 // out("frw","arr",1,idppl,iddsb,"dta",3)=dan kc
 // out("frw","arr",1,idppl,iddsb,"dta",4)=porizeno (0 zaklad / 1 celkem)
 // out("frw","arr",1,idppl,iddsb,"dta",5)=vlastni popis pro idppl= ...
 // out("frw","arr",1,idppl,iddsb,"dta",6)=je soucast ceny, nefakturuje se (0 ne / 1 ano)
 // out("frw","arr",1,idppl,iddsb,"dta",7)=je rozpis po státech pro zahranicni dph (0 ne / 1 ano)
 // out("frw","arr",1,idppl,iddsb,"arr",1,idstat,"dta",1)= zaklad kc po statu 
 // idppl ... ciselnik 11
 // iddsb ... ciselnik 1=bez,2=snizena ,3=zakladni
 //
 // popis pole s daty objednavky preprodej - fakturace out("fak","dta",cnt)=
 // ------------------------------------------------------------------------
 // 01 - SLEKC  -  sleva|prirazka v Kc sleva je minus, prirazka plus
 // 02 - KAMJEL -  kod statu, kam je objednavka ID
 // 03 - KAMJEL -  kod statu, kam je objednavka POPIS
 // 
 // popis pole fakturacnich polozek out("fak","itm",...)=""
 // ----------------------------------------------------
 // out("fak","itm",idpol,"dta",cnt)=...
 // 01 - kc celkem (zaklad)
 // 02 - kc sazba
 // 03 - mnozstvi
 //
 // ------------------------------------
 // popis pole s daty objednavky out("arr",cnt,...)=...
 // cnt-pocitadlo
 // 01-kampres
 // 02,cnt-info pro ridice
 // 03,cnt-obchodne provozni info
 // 04,cnt)-info pro zakaznika na fakturu
 // 05,osc)=hod (ridic a hodiny pro plan) (mm od pulnoci)
 // 06,...)=... - historie fakturace
 // 07,...)=... - historie zmen
 // 	07,"dta",1)= - horlog posledni zmeny
 // 	07,"dta",2)= - uzivatel posledni zmeny
 //     07,"arr",1,hrl)=uzivatel posledni zmeny - pole zmen na SJ 
 // 08,...)=... - zahranicni DPH
 // 08,"dta",1)=vychozi misto popis
 // 08,"dta",2)=vychozi misto stat (idstat)
 // 08,"dta",3)=koncove misto popis
 // 08,"dta",4)=koncove misto stat (idstat)
 // 08,"dta",5)=celkovy pocet km (vypocet)
 // 08,"dta",6)=celkova cena za prepravu osob (netto cena celkem) (vypocet)
 // 08,"dta",7)=kurzEUR pro vypocet dph EUR
 // 08,"arr",1,idstat,"dta",1)=km statem
 // 08,"arr",1,idstat,"dta",2)=danova povinost 0 vlastni / 1 zakaznik / 2 odvedeme za zakaznika 
 // 08,"arr",1,idstat,"dta",3)=fakturovat 0 ne / 1 ano 
 // 08,"arr",1,idstat,"dta",4)=sazba DPH (výše %) (vypocet, prepis z ciselniku)
 // 08,"arr",1,idstat,"dta",5)=limit km pro výpočet (vypocet, prepis z ciselniku)
 // 08,"arr",1,idstat,"dta",6)=cena za prepravu osob v prislusnem state (vypocet)
 // 08,"arr",1,idstat,"dta",7)=dph (vypocet)
 // 08,"arr",1,idstat,"dta",8)=dph EUR (vypocet)
 // 08,"arr",1,idstat,"dta",9)=prujezd zemi (0 tranzit / 1 tam a zpet, limit km pro vypocet x 2)
 // 09,cnt)=dalsi komentar na fakturu
 // 10,id)="" - id dokladu, kde je objednavka naplanovana (id=idprac~hrl~rz~cnt)
 // 11,id)="" - id dokladu, kde je objednavka uznana (id=zp~rrmm~iddoc)
 // 12 - osc zodpovedne osoby pro faktuaraci (prevadi se na SJ)
 // 13,1)=poznamka pro fakturaci (pro seznam v aplikaci fakturace)
 // =========================
 // odkaz na zalohove doklady
 // =========================
 // 14,"arr",cnt,"dta",1)=id dokladu z fakturace (rok~fakstr~cislo~firma)
 // 14,"arr",cnt,"dta",2)=id (upresneni) pokladniho dokladu z fakturace (vice udaju oddeleno ~)
 // 14,"arr",cnt,"dta",3)=NZA nedanova zaloha / DZA danova zaloha
 // 14,"arr",cnt,"dta",4)=0/1 cerpani
 // =============================
 // popis pole s prubehem zajezdu
 // =============================
 // 15,"arr",tm_od(mm),"dta",cnt)=hodnota
 // cnt - pocitadlo
 // 01 = tm_to(mm)
 // 02 = id_cin		 	   (ciselnik 37)
 // 03 = km
 // 04 = doba(mm)
 // 05 = id_stat		   (ciselnik 12)
 // 06 = info
]]></Routine>


<Routine name="OBapiEDOs" type="INT" languagemode="0" timestamp="64526,76441.990106"><![CDATA[
OBapiEDOs q
 // api pro ridice
mkDtaPlan(idfa,nmsp,hrlfrom,hrlto,in,out)
 // s arri("par",1)=1 s arri("os",37857)="" w $$mkDtaPlan^OBapiEDOs("VS_CSAD","user",$$dn^OBapiED("01.06.2013"),$$dn^OBapiED("30.06.2013"),.arri,.wrk) w !,wrk
 // in("os",os)="" ... jen pro urcite os
 // in("par",1)=0/1 ... 0 data pouze z planu / 1 data ze zalohy planu, pokud nejsou, pak z planu
 //
 // out=wrk do gloalu:
 //                                       1     2     3    4      5       6
 // ^||wrk.ALVA.AD(out,1,os,hrl,mm)=$lb(idtyp,iddoc,idcin,noc,idcinpozn,iddocpozn)  //plan prace
 //								    idtyp=1 turnus,dzva / 2 objednavka/sj / 3 grafikon
 //                                 iddoc=identifikator dokladu
 //                                 noc=priznak noci
 //                                 idcinpozn=poznamka k cinnosti (linka/spoj)
 //                                 iddocpozn=poznamka k dokladu  (turnus(y))
 //
 n (idfa,nmsp,hrlfrom,hrlto,in,out)
 s $zt="err" s err="" k out
 s out=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(out)
 s mywrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(mywrk)
 s dz=$$gFaDz^OBapiED(idfa)
 //nastaveni programu
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 //mzdove nastaveni
 k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr"
 //grafikonove polozky pro plan
 k arrcis20 s err=$$gCis^OBapiED(idfa,nmsp,20,"",.arrcis20) zt:+err "merr"
 s id="" f  s val="" s id=$o(arrcis20("arr",id),1,val) q:id=""  d
 .i +$p(val,"~",11) q
 .k arrcis20("arr",id)
 // prom. pro funkci
 s qsj=$$qsj^OBapiED()
 s begnight=$$begNight^OBapiED()
 s endnight=$$endNight^OBapiED()
 //posun dne na zacatku
 s shiftday=5
 s selos=($o(in("os",""))'="")
 // ============
 // plan dopravy
 // ============
 s idprac="" f  s idprac=$o(^[nmsp]OBPL(idprac)) q:idprac=""  d
 .s zp=$g(^[nmsp]obpx(idprac))
 .s hrl=hrlfrom-shiftday-.01
 .f  s hrl=$o(^[nmsp]OBPL(idprac,hrl)) q:(hrl="")!(hrl>hrlto)  d
 ..//zpusob nacteni planu plan x zaloha planu
 ..s plnglb="^["""_nmsp_"""]OBPL("""_idprac_""","_hrl_")"
 ..i (($g(in("par",1))=1)&($d(^[nmsp]OBPL(idprac,hrl,"BCKUP")))) d
 ...s plnglb="^["""_nmsp_"""]OBPL("""_idprac_""","_hrl_",""BCKUP"",""d"")"
 ..s rz="" f  s rz=$o(@plnglb@("A",rz)) q:rz=""  d
 ...s pc="" f  s pc=$o(@plnglb@("A",rz,pc)) q:pc=""  d
 ....//
 ....k ^||wrk.ALVA.AD(mywrk) 
 ....// data dokladu
 ....s cdoc=$g(@plnglb@("A",rz,pc))										//cislo dokladu
 ....s typdoc=$d(@plnglb@("A",rz,pc,"sj"))								//typ dokladu 0 dzva / 1 sj
 ....s typpln=$d(@plnglb@("A",rz,pc,"rozpis"))							//typ planu   0 plan / 1 rozpis
 ....i typpln=1 q														//rozpis ne !
 ....// kontrola na os
 ....s isos=1
 ....i selos d
 .....s isos=0 s os="" f  s os=$o(@plnglb@("A",rz,pc,"R",os)) q:(os="")!(isos)  i $d(in("os",os)) s isos=1  
 ....i 'isos q
 ....//objednavka
 ....i +typdoc d
 .....s cobj=$g(@plnglb@("A",rz,pc,"N",1,"OBJ"))
 .....i cobj d
 ......s rr=(+$p($tr($zd(+hrl,4),"/","."),".",3)#100)
 ......s idobj=$$wrapIdObj^OBapiED(rr,cobj)
 ......s iddoc=zp_"|"_idobj
 ......s val=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj))
 ......s hrlobjfrom=hrl
 ......s hrlobjto=hrl s tmp=$p(val,":",33) s:tmp'="" hrlobjto=$$dn^OBapiED(tmp)
 ......s mmobjfrom=$$hm^OBapiED($p(val,":",30))
 ......s mmobjto=mmobjfrom s tmp=$p(val,":",34) i tmp'="" s mmobjto=$$hm^OBapiED(tmp)
 ......s mmobjto=mmobjto+((hrlobjto-hrlobjfrom)*1440)
 ......s val=$lb(2,iddoc,"","","",idobj)
 ......//zapis pro ridice
 ......f mm=mmobjfrom:1:mmobjto d
 .......s ^||wrk.ALVA.AD(mywrk,(hrl+(mm\1440)),(mm#1440))=val //plan prace z objednavky
 .....//turnusy
 ....i 'typdoc d
 .....//ls+, ls-
 .....k arrls
 .....s ls="" f  s ls=$o(@plnglb@("A",rz,pc,"S",ls)) q:ls=""  d
 ......i ls>0 d
 .......i ls["." s arrls(1,$p(ls,".",1),$p(ls,".",2))=""			//spoje plus
 .......i ls["^" s arrls(1,$p(ls,"^",1),$p(ls,"^",2))=""			//spoje plus
 ......i ls<0 d
 .......i ls["." s arrls(-1,($p(ls,".",1))*(-1),$p(ls,".",2))=""	//spoje minus
 .......i ls["^" s arrls(-1,($p(ls,"^",1))*(-1),$p(ls,"^",2))=""	//spoje minus
 .....s tu="" f  s tu=$o(@plnglb@("A",rz,pc,"T",tu)) q:tu=""  d
 ......s lsoddo=$g(@plnglb@("A",rz,pc,"T",tu,"oddo"))
 ......s lsod=""
 ......i ($p(lsoddo,":",1))&($p(lsoddo,":",1)[".") s lsod=($p(lsoddo,":",1)\1)_"~"_($p(lsoddo,":",1)#1*1000)
 ......i ($p(lsoddo,":",1))&($p(lsoddo,":",1)["^") s lsod=($p($p(lsoddo,":",1),"^",1))_"~"_($p($p(lsoddo,":",1),"^",2))
 ......s lsdo=""
 ......i ($p(lsoddo,":",2))&($p(lsoddo,":",2)[".") s lsdo=($p(lsoddo,":",2)\1)_"~"_($p(lsoddo,":",2)#1*1000)
 ......i ($p(lsoddo,":",2))&($p(lsoddo,":",2)["^") s lsdo=($p($p(lsoddo,":",2),"^",1))_"~"_($p($p(lsoddo,":",2),"^",2))
 ......k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) //zt:+err "merr" s err=""  //nekontroluju chyby, pada to, pokud nemaji v databazi turnus
 ......//uprava prubehu turnusu - omezeni ls od
 ......i lsod'="" d
 .......s find=0 s mm="" f  s mm=$o(arrtu("arr","tur",mm)) q:(mm="")!(find)  d
 ........i ($g(arrtu("arr","tur",mm,"dta",2))=3)&($g(arrtu("arr","tur",mm,"dta",5))=$p(lsod,"~",1))&($g(arrtu("arr","tur",mm,"dta",6))=$p(lsod,"~",2)) s find=1 q
 ........k arrtu("arr","tur",mm)
 ......//uprava prubehu turnusu - omezeni ls do
 ......i lsdo'="" d
 .......s find=0 s mm="" f  s mm=$o(arrtu("arr","tur",mm),-1) q:(mm="")!(find)  d
 ........i ($g(arrtu("arr","tur",mm,"dta",2))=3)&($g(arrtu("arr","tur",mm,"dta",5))=$p(lsdo,"~",1))&($g(arrtu("arr","tur",mm,"dta",6))=$p(lsdo,"~",2)) s find=1 q
 ........k arrtu("arr","tur",mm)
 ......//uprava prubehu turnusu -ls
 ......i $d(arrls(-1)) d
 .......s mm="" f  s mm=$o(arrtu("arr","tur",mm)) q:(mm="")  d
 ........i ($g(arrtu("arr","tur",mm,"dta",2))=3) d
 .........s li=$g(arrtu("arr","tur",mm,"dta",5))
 .........s sp=$g(arrtu("arr","tur",mm,"dta",6))
 .........i $d(arrls(-1,li,sp)) k arrtu("arr","tur",mm)
 ......//uprava prubehu turnusu +ls
 ......s li="" f  s li=$o(arrls(1,li)) q:li=""  d
 .......s sp="" f  s sp=$o(arrls(1,li,sp)) q:sp=""  d
 ........k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr"
 ........s mm=+$g(arrsp("dta",1))
 ........s arrtu("arr","tur",mm,"dta",1)=$g(arrsp("dta",2))+(($g(arrsp("dta",20))-1)*1440)			//tmTo
 ........s arrtu("arr","tur",mm,"dta",2)=3															//id
 ........s arrtu("arr","tur",mm,"dta",3)=$g(arrsp("dta",5))											//km
 ........s arrtu("arr","tur",mm,"dta",4)=$g(arrsp("dta",3))											//tm
 ........s arrtu("arr","tur",mm,"dta",5)=li															//li
 ........s arrtu("arr","tur",mm,"dta",6)=sp															//sp
 ........s arrtu("arr","tur",mm,"dta",7)="*"														//maBe
 ........s arrtu("arr","tur",mm,"dta",8)="*"														//maAf
 ........k arrls(1,li,sp)
 ......//vypocet prubehu turnusu
 ......k arri,wrkptu s arri("par",1)=zp s arri("par",2)=hrl s arri("par",12)=1
 ......s err=$$calcTur^OBapiED(idfa,nmsp,.arrtu,"",.arri,.wrkptu,.arrset,.arrmzd) zt:+err "merr"
 ......k arrtu
 ......s iddoc=zp_"|"_hrl_"|"_tu
 ......s mm="" f  s dta="" s mm=$o(^||wrk.ALVA.AD(wrkptu,mm),1,dta) q:mm=""  d
 .......s idcin=+$p(dta,"~",2)
 .......i idcin=8 q	 	//info
 .......s noc=+$p(dta,"~",6)
 .......s idcinpozn=""
 .......i idcin=3 s idcinpozn=$p(dta,"~",9)_"/"_$p(dta,"~",10)
 .......s val=$lb(1,iddoc,idcin,noc,idcinpozn,tu)
 .......s ^||wrk.ALVA.AD(mywrk,(hrl+(mm\1440)),(mm#1440))=val //plan prace
 ......k ^||wrk.ALVA.AD(wrkptu)
 ....//zapis pro os
 ....s os="" f  s os=$o(@plnglb@("A",rz,pc,"R",os)) q:(os="")  d
 .....i selos q:'$d(in("os",os))  
 .....m ^||wrk.ALVA.AD(out,1,os)=^||wrk.ALVA.AD(mywrk)
 ....k ^||wrk.ALVA.AD(mywrk)
 //grafikon, polozky ktere se zapocitavaji do planu
 i $o(arrcis20("arr",""))'="" d
 .k arri k wrk
 .m arri("osc")=in("os") s arri("par",1)=0
 .s err=$$lGrfOs^OBapiED(idfa,nmsp,hrlfrom,hrlto,.arri,.wrk) zt:+err "merr" s err=""
 .s os="" f  s os=$o(^CacheTempJB(wrk,dz,os)) q:os=""  d
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,os,hrl)) q:hrl=""  d
 ...s idgrf="" f  s idgrf=$o(^CacheTempJB(wrk,dz,os,hrl,idgrf)) q:idgrf=""  d
 ....i '$d(arrcis20("arr",idgrf)) q
 ....k arrgrf s err=$$gGrfOs^OBapiED(idfa,nmsp,os,hrl,idgrf,"",.arrgrf) zt:+err "merr" s err=""
 ....s val=$lb(3,(os_"|"_hrl_"|"_idgrf),idgrf,"","","")
 ....s mmgrffrom=$g(arrgrf("dta",9))
 ....s mmgrfto=$g(arrgrf("dta",10))
 ....i (mmgrffrom!mmgrfto) f mm=mmgrffrom:1:mmgrfto s ^||wrk.ALVA.AD(out,1,os,hrl,mm)=val
 ....s mmgrffrom=$g(arrgrf("dta",11))
 ....s mmgrfto=$g(arrgrf("dta",12))
 ....i (mmgrffrom!mmgrfto) f mm=mmgrffrom:1:mmgrfto s ^||wrk.ALVA.AD(out,1,os,hrl,mm)=val
 .k ^CacheTempJB(wrk)
 q 0
 //
err s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDOs1" type="INT" languagemode="0" timestamp="64425,39736.754527"><![CDATA[
OBapiEDOs1
 q
rnOs(idfa,nmsp,oldos,newos,in,out)
 n (idfa,nmsp,oldos,newos,in,out) s $zt="err" k out s err=""
 //zaloha idfa namespace global: OBOBJ,OBJS,OBD,OM,XL,OBjbn,OBPREM,OBPREMn,OBPREMa,OBPHMeOs,obpx,OBPL,OBPXSC
 //zaloha sys  namespace global: MlMzJBN
 //
 i $g(oldos)="" q "1~není zadáno os, které se bude přečíslovávat"
 i $g(newos)="" q "1~není zadáno os, na které se bude přečíslovávat"
 //
 i oldos=newos q 0
 //
 //systemovy namespace
 s sysnmsp=$$gSystemNmsp^OBapiED()
 //odvozeni dz
 s dz=$$gFaDz^OBapiED(idfa) i dz="" q "1~pro idfa "_idfa_" není nastaveno dz"
 //qsj
 s qsj=$$qsj^OBapiED()
 //=======
 //doklady
 //=======
 //objednavky
 s zp="" f {
	s zp=$o(^[nmsp]OBOBJ(zp)) i zp="" q
	i ((zp\100)'=dz) continue
	s rr="" f {
		s rr=$o(^[nmsp]OBOBJ(zp,"O",rr)) i rr="" q
		s idoo="" f {
			s idoo=$o(^[nmsp]OBOBJ(zp,"O",rr,idoo)) i idoo="" q
			//planovany ridic
			i $p($g(^[nmsp]OBOBJ(zp,"O",rr,idoo)),":",79)=oldos s $p(^[nmsp]OBOBJ(zp,"O",rr,idoo),":",79)=newos
			//zodpovedna osoba
			i $g(^[nmsp]OBOBJ(zp,"O",rr,idoo,"ZdpOs"))=oldos s ^[nmsp]OBOBJ(zp,"O",rr,idoo,"ZdpOs")=newos
		}
	}	 
 }
 //stale objednavky
 s zp="" f {
	s zp=$o(^[nmsp]OBJS(zp)) i zp="" q
	i ((zp\100)'=dz) continue
	s id="" f {
		s id=$o(^[nmsp]OBJS(zp,id)) i id="" q
		//planovany ridic
		i $p($g(^[nmsp]OBJS(zp,id)),":",79)=oldos s $p(^[nmsp]OBJS(zp,id),":",79)=newos
		//zodpovedna osoba
		i $g(^[nmsp]OBJS(zp,id,"ZdpOs"))=oldos s ^[nmsp]OBJS(zp,id,"ZdpOs")=newos	
	}
 }
 //doklady DZVA a SJ
 s zp="" f {
	 s zp=$o(^[nmsp]OBD(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OBD(zp,rrmm)) i rrmm="" q
		 s iddoc="" f {
			 s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) i iddoc="" q
			 i $d(^[nmsp]OBD(zp,rrmm,iddoc,oldos)) {
				 k ^[nmsp]OBD(zp,rrmm,iddoc,newos)
				 m ^[nmsp]OBD(zp,rrmm,iddoc,newos)=^[nmsp]OBD(zp,rrmm,iddoc,oldos)
				 k ^[nmsp]OBD(zp,rrmm,iddoc,oldos)
			 }
			 //pro sj jeste zodpovednou osobu
			 i iddoc>qsj {
				 i $g(^[nmsp]OBD(zp,rrmm,iddoc,"ZdpOs"))=oldos {
					 s ^[nmsp]OBD(zp,rrmm,iddoc,"ZdpOs")=newos
				 }
			 }
		 } 
	 }
 } 
 //archiv mzdovych udaju
 s zp="" f {
	 s zp=$o(^[nmsp]OM(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OM(zp,rrmm)) i rrmm="" q
		 i $d(^[nmsp]OM(zp,rrmm,oldos)) {
			 k ^[nmsp]OM(zp,rrmm,newos)
			 m ^[nmsp]OM(zp,rrmm,newos)=^[nmsp]OM(zp,rrmm,oldos)
			 k ^[nmsp]OM(zp,rrmm,oldos)
		 }
	 }
 }
 //grafikon ridicu
 i $d(^[nmsp]XL(dz,oldos)) {
	 k ^[nmsp]XL(dz,newos)
	 m ^[nmsp]XL(dz,newos)=^[nmsp]XL(dz,oldos)
	 k ^[nmsp]XL(dz,oldos)
 }
 //===============
 //jizda bez nehod
 //===============
 //stara
 i $d(^[nmsp]OBjbn(dz,oldos)) {
	 k ^[nmsp]OBjbn(dz,newos)
	 m ^[nmsp]OBjbn(dz,newos)=^[nmsp]OBjbn(dz,oldos)
	 k ^[nmsp]OBjbn(dz,oldos)
 } 
 //nova
 i $d(^[sysnmsp]MlMzJBN(idfa,oldos)) {
	 k ^[sysnmsp]MlMzJBN(idfa,newos)
	 m ^[sysnmsp]MlMzJBN(idfa,newos)=^[sysnmsp]MlMzJBN(idfa,oldos)
	 k ^[sysnmsp]MlMzJBN(idfa,oldos)
 }
 //======
 //premie
 //======
 //pravidelna
  s zp="" f {
	 s zp=$o(^[nmsp]OBPREM(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OBPREM(zp,rrmm)) i rrmm="" q
		 i $d(^[nmsp]OBPREM(zp,rrmm,oldos)) {
			 k ^[nmsp]OBPREM(zp,rrmm,newos)
			 m ^[nmsp]OBPREM(zp,rrmm,newos)=^[nmsp]OBPREM(zp,rrmm,oldos)
			 k ^[nmsp]OBPREM(zp,rrmm,oldos)
		 }
	 }
  }
 //nepravidelna
  s zp="" f {
	 s zp=$o(^[nmsp]OBPREMn(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OBPREMn(zp,rrmm)) i rrmm="" q
		 i $d(^[nmsp]OBPREMn(zp,rrmm,oldos)) {
			 k ^[nmsp]OBPREMn(zp,rrmm,newos)
			 m ^[nmsp]OBPREMn(zp,rrmm,newos)=^[nmsp]OBPREMn(zp,rrmm,oldos)
			 k ^[nmsp]OBPREMn(zp,rrmm,oldos)
		 }
	 }
  } 
 //spolecne
  s zp="" f {
	 s zp=$o(^[nmsp]OBPREMa(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OBPREMa(zp,rrmm)) i rrmm="" q
		 i $d(^[nmsp]OBPREMa(zp,rrmm,oldos)) {
			 k ^[nmsp]OBPREMa(zp,rrmm,newos)
			 m ^[nmsp]OBPREMa(zp,rrmm,newos)=^[nmsp]OBPREMa(zp,rrmm,oldos)
			 k ^[nmsp]OBPREMa(zp,rrmm,oldos)
		 }
	 }
  }
 //==========
 //phm pro os
 //==========
 s zp="" f {
	 s zp=$o(^[nmsp]OBPHMeOs(zp)) i zp="" q
	 i ((zp\100)'=dz) continue
	 s rrmm="" f {
		 s rrmm=$o(^[nmsp]OBPHMeOs(zp,rrmm)) i rrmm="" q
		 i $d(^[nmsp]OBPHMeOs(zp,rrmm,oldos)) {
			 k ^[nmsp]OBPHMeOs(zp,rrmm,newos)
			 m ^[nmsp]OBPHMeOs(zp,rrmm,newos)=^[nmsp]OBPHMeOs(zp,rrmm,oldos)
			 k ^[nmsp]OBPHMeOs(zp,rrmm,oldos)
		 }
	 }
  }
 //====
 //plan
 //====
 //udaje pro pracoviste
 s idprac="" f {
	 s idprac=$o(^[nmsp]obpx(idprac)) i idprac="" q
	 //definice lidi pro pracoviste
	 i $d(^[nmsp]obpx(idprac,"L","S",oldos)) {
		 k ^[nmsp]obpx(idprac,"L","S",newos)
		 m ^[nmsp]obpx(idprac,"L","S",newos)=^[nmsp]obpx(idprac,"L","S",oldos)
		 k ^[nmsp]obpx(idprac,"L","S",oldos)
	 }
	 //zapujceni ridici
	 s hrl="" f {
		 s hrl=$o(^[nmsp]obpx(idprac,"zO",hrl)) i hrl="" q
		 i $d(^[nmsp]obpx(idprac,"zO",hrl,oldos)) {
			 k ^[nmsp]obpx(idprac,"zO",hrl,newos)
			 m ^[nmsp]obpx(idprac,"zO",hrl,newos)=^[nmsp]obpx(idprac,"zO",hrl,oldos)
			 k ^[nmsp]obpx(idprac,"zO",hrl,oldos)
		 }
	 }
 }
 //planovaci doklady
 s idprac="" f {
	 s idprac=$o(^[nmsp]OBPL(idprac)) i idprac="" q
	 s hrl="" f {
		 s hrl=$o(^[nmsp]OBPL(idprac,hrl)) i hrl="" q
		 s rz="" f {
			 s rz=$o(^[nmsp]OBPL(idprac,hrl,"A",rz)) i rz="" q
			 s pc="" f {
				 s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) i pc="" q
				 i $d(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",oldos)) {
					 k ^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",newos)
					 m ^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",newos)=^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",oldos)
					 k ^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",oldos)
				 }
			 }
		 }
	 }
 }
 s idprac="" f {
	 s idprac=$o(^[nmsp]OBPXSC(idfa,idprac)) i idprac="" q
	 s ts="" f {
		 s ts=$o(^[nmsp]OBPXSC(idfa,idprac,ts)) i ts="" q
		 s hrl="" f {
			 s hrl=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)) i hrl="" q
			 s cnt="" f {
				 s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)) i cnt="" q	 
				 i $p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)),"~",1)=oldos {
					 s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt),"~",1)=newos
				 }
				 s hrlfrom="" f {
					 s hrlfrom=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom)) i hrlfrom="" q
					 i $p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom)),"~",1)=oldos {
						 s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom),"~",1)=newos
					 }
				 }
			 }
		 }
	 }
 } 
 q 0
 //
 //
 /*
rnOsOsnado
 //tabulka os pro precislovani
 k arr
 s arr(10357)=100001
 s arr(20020)=100002
 s arr(20045)=100003
 s arr(20584)=100005
 s arr(20994)=100006
 s arr(22600)=100007
 s arr(25025)=100008
 s arr(25033)=100009
 s arr(25074)=100010
 s arr(25090)=100011
 s arr(30545)=100013
 s arr(30713)=100016
 s arr(31097)=100017
 s arr(31103)=100018
 s arr(31111)=100019
 s arr(31128)=100020
 s arr(31546)=100021
 s arr(10822)=100022
 s arr(21005)=100023
 s arr(30512)=100024
 s arr(30721)=100027
 //
 s oldos="" f {
	 s oldos=$o(arr(oldos)) i oldos="" q
	 s newos=$g(arr(oldos))
	 w !,"probíhá převod os ... ",oldos," - ",newos
	 s err=$$rnOs^OBapiEDOs1("PAKA_OSNAD","PAKA_OSNAD",oldos,newos,"","")
 }
 q
 */
 /*
rnOsTeplice
	s arr(5)=200001
	s arr(20)=200002
	s arr(26)=200003
	s arr(27)=200004
	s arr(28)=200005
	s arr(36)=200006
	s arr(53)=200007
	s arr(54)=200008
	s arr(55)=200009
	s arr(59)=200010
	s arr(64)=200011
	s arr(66)=200012
	s arr(76)=200013
	s arr(78)=200014
	s arr(90)=200015
	s arr(92)=200016
	s arr(100)=200017
	s arr(104)=200018
	s arr(106)=200019
	s arr(108)=200020
	s arr(110)=200021
	s arr(116)=200022
	s arr(120)=200023
	s arr(122)=200024
	s arr(126)=200025
	s arr(136)=200026
	s arr(148)=200027
	s arr(152)=200028
	s arr(154)=200029
	s arr(157)=200030
	s arr(190)=200031
	s arr(194)=200032
	s arr(197)=200033
	s arr(198)=200034
	s arr(210)=200035
	s arr(212)=200036
	s arr(215)=200037
	s arr(218)=200038
	s arr(219)=200039
	s arr(221)=200040
	s arr(223)=200041
	s arr(299)=200042
	s arr(350)=200043
	s arr(351)=200044
	s arr(356)=200045
	s arr(357)=200046
	s arr(358)=200047
	s arr(365)=200048
	s arr(367)=200049
	s arr(386)=200050
	s arr(398)=200051
	s arr(424)=200052
	s oldos="" f {
		s oldos=$o(arr(oldos)) i oldos="" q
	 	s newos=$g(arr(oldos))
	 	w !,"probíhá převod os ... ",oldos," - ",newos
	 	s err=$$rnOs^OBapiEDOs1("TE_ARRIVA","TE_ARRIVA",oldos,newos,"","")
 	}
 q
 */
rnOsPHVTPR
	k arr
	s arr(36)=300001
	s arr(48)=300002
	s arr(398)=300003
	s arr(4945)=300004
	s arr(8842)=300005
	s arr(15490)=300006
	s arr(18820)=300007
	s arr(29137)=300008
	s arr(30244)=300009
	s arr(36666)=300010
	s arr(48145)=300011
	s arr(48240)=300012
	s arr(49267)=300013
	s arr(50048)=300014
	s arr(59645)=300015
	s arr(60488)=300016
	s arr(78934)=300017
	s arr(82521)=300018
	s arr(84060)=300019
	s arr(84372)=300020
	s arr(89522)=300021
	s arr(96437)=300022
	//
	s idfa="PH_VTPR"
	s nmsp="PH_VTPR"
	w !,"idfa="_idfa
	w !,"nmsp="_nmsp
	s oldos="" f {
		s oldos=$o(arr(oldos)) i oldos="" q
	 	s newos=+$g(arr(oldos))
	 	w !,"probíhá převod os ... ",oldos," - ",newos
	 	//s err=$$rnOs^OBapiEDOs1(idfa,nmsp,oldos,newos,"","")
 	}
 	q
 //
 //
 //
rnOsMBTCBUS
	k arr
	s arr(26)=400001
	s arr(36)=400002
	s arr(37)=400003
	s arr(417)=400004
	s arr(3409)=400005
	s arr(7782)=400006
	s arr(8066)=400007
	s arr(13344)=400008
	s arr(15533)=400009
	s arr(18718)=400010
	s arr(30318)=400011
	s arr(41649)=400012
	s arr(42020)=400013
	s arr(42909)=400014
	s arr(44774)=400015
	s arr(46444)=400016
	s arr(49850)=400017
	s arr(56334)=400018
	s arr(56446)=400019
	s arr(56533)=400020
	s arr(56541)=400021
	s arr(59214)=400022
	s arr(59238)=400023
	s arr(59400)=400024
	s arr(63063)=400025
	s arr(76002)=400026
	s arr(77555)=400027
	s arr(78327)=400028
	s arr(82552)=400029
	s arr(83717)=400030
	s arr(84134)=400031
	s arr(84284)=400032
	s arr(91920)=400033
	//
	//
	s idfa="MB_TCBUS"
	s nmsp="MB_TCBUS"
	w !,"idfa="_idfa
	w !,"nmsp="_nmsp
	s oldos="" f {
		s oldos=$o(arr(oldos)) i oldos="" q
	 	s newos=+$g(arr(oldos))
	 	w !,"probíhá převod os ... ",oldos," - ",newos
	 	//s err=$$rnOs^OBapiEDOs1(idfa,nmsp,oldos,newos,"","")
 	}
 q
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDOsExport" type="INT" languagemode="0" timestamp="64917,75708.767003"><![CDATA[
OBapiEDOsExport
 //$$gDscOsExport^OBapiEDOsExport("VS_CSAD","user",.in,.out)
 //$$gValOsExport^OBapiEDOsExport("VS_CSAD","user",1305,"^w",.i,.o)
 //$$gValOsExport^OBapiEDOsExport("MB_TCBUS","AD_V",1006,"^w",.i,.o)
gDscOsExport(idfa,nmsp,in,out)
 // out("arr",id)=nazev~typ~jednotky
 //
 // typ=
 // 1 pravidelka
 // 2 nepravidelka
 // 3 grafikon
 //
 // jednotky=
 // 1 Minuty
 // 2 Kč 
 // 3 Počet
 // 4 Km
 //
 n (idfa,nmsp,in,out)
 s $zt="err" k out
 k arr d gTurDsc^OBapiED(.arr)
 f cnt=1:1:$$gPcPDU^OBapiEDTur d
 .i cnt'=19 d
 ..s val=$g(arr("dsc","tuv",cnt))
 ..s unit=1 s:$p(val,"~",2)=2 unit=3 s:$p(val,"~",2)=3 unit=2 s:$p(val,"~",2)=4 unit=4
 ..s out("arr",$$gidItm(1,cnt,""))=$j(cnt,3)_" "_$p(val,"~",3)_"~"_1_"~"_unit
 .i cnt=19 d
 ..f cntmzd=1:1:$$gPcPMU^OBapiEDTur d
 ...s val=$g(arr("dsc","tuv",cnt,cntmzd))
 ...s unit=1 s:$p(val,"~",2)=2 unit=3 s:$p(val,"~",2)=3 unit=2 s:$p(val,"~",2)=4 unit=4
 ...s out("arr",$$gidItm(1,cnt,cntmzd))=$j(cnt,3)_" /"_$j(cntmzd,3)_" "_$p(val,"~",3)_"~"_1_"~"_unit
 k arr d gSjDsc^OBapiED(.arr)
 f cnt=1:1:($$gPcNMU^OBapiEDSj()-2) d
 .s val=$g(arr("dsc","osc","dta",cnt+2)) s unit=1 s:$p(val,"~",2)=2 unit=3 s:$p(val,"~",2)=3 unit=2 s:$p(val,"~",2)=4 unit=4
 .s out("arr",$$gidItm(2,cnt,""))=$j(cnt,3)_" "_$p(val,"~",3)_"~"_2_"~"_unit
 k arr s err=$$gCis^OBapiED(idfa,nmsp,20,"",.arr) zt:+err "merr" s err=""
 s cnt="" f  s cnt=$o(arr("arr",cnt)) q:cnt=""  d
 .s val=$g(arr("arr",cnt)) // popis~jedn~odpr~fond~plac~kdy
 .q:$p(val,"~",2)=3
 .// pouze kc
 .i $p(val,"~",2)=2 d
 ..s out("arr",$$gidItm(3,cnt,2))=$j(cnt,3)_" "_"kč "_$p(val,"~",1)_"~"_3_"~"_2  
 .// hodiny i kc
 .i $p(val,"~",2)=1 d
 ..s out("arr",$$gidItm(3,cnt,1))=$j(cnt,3)_" "_"hodiny "_$p(val,"~",1)_"~"_3_"~"_1
 ..s out("arr",$$gidItm(3,cnt,2))=$j(cnt,3)_" "_"kč "_$p(val,"~",1)_"~"_3_"~"_2  
 // ostatni
 s out("arr",$$gidItm(4,1,""))=$j("",3)_" "_"zálohové hodiny akt.měsíc"_"~"_3_"~"_1
 s out("arr",$$gidItm(4,2,""))=$j("",3)_" "_"zálohové hodiny akt.měsíc Kč"_"~"_3_"~"_2
 s out("arr",$$gidItm(4,3,""))=$j("",3)_" "_"zálohové hodiny min.měsíc"_"~"_3_"~"_1
 s out("arr",$$gidItm(4,4,""))=$j("",3)_" "_"zálohové hodiny min.měsíc Kč"_"~"_3_"~"_2
 s out("arr",$$gidItm(4,5,""))=$j("",3)_" "_"prémie pravidelná doprava (modul prémie)"_"~"_1_"~"_2
 s out("arr",$$gidItm(4,6,""))=$j("",3)_" "_"prémie nepravidelná doprava (modul prémie)"_"~"_2_"~"_2
 s out("arr",$$gidItm(4,7,""))=$j("",3)_" "_"prémie společný výpočet (modul prémie)"_"~"_3_"~"_2
 s out("arr",$$gidItm(4,8,""))=$j("",3)_" "_"diety z pravidelné dopravy do limitu"_"~"_1_"~"_2
 s out("arr",$$gidItm(4,9,""))=$j("",3)_" "_"diety z pravidelné dopravy nad limit"_"~"_1_"~"_2
 //s out("arr",$$gidItm(4,10,""))=$j("",3)_" "_"počet stravenek"_"~"_3_"~"_3
 q 0
gValOsExport(idfa,nmsp,rrrrmm,glb,in,out)
 // out("KA",ka)=""
 // @glb@("arr",osc,rrrrmm,id)=val
 // @glb@("arr",osc,rrrrmm,id,"d",hrl)=val ... zatim pro grafikon
 // @glb@("hrd",osc,rrrrmm,hrl)=""   	   ... rozpis dnu (hrl) ridice v praci podle dokladu DZVA a SJ , ne grafikon !, ten je samostatne
 // napocet z dokladu predelat na fci $$mkSumDtaOs !
 n (idfa,nmsp,rrrrmm,glb,in,out) s $zt="err" k out s err=""
 // chyby
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(rrrrmm)="" s err="rrrrmm=" zt "merr"
 i $g(glb)="" s err="glb=" zt "merr"
 //
 s out("KA",$$gCatR^OBapiED(nmsp))=""
 s out("KA",$$gCatP^OBapiED(nmsp))=""
 //
 // mzdove nastaveni ================================================================
 k arrmzdset s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzdset) zt:+err "merr" s err=""
 // =================================================================================
 i idfa="MB_TCBUS" s out("KA",12)=""
 //
 s dz=$$gFaDz^OBapiED(idfa)
 s rrmm=(rrrrmm#10000)
 s wglb="^CacheTempJB("_$$gWrkJB^OBapiED()_")" k @wglb
 //=================================
 //napocet dat do pracovniho globalu
 //=================================
 // dzva
 k arrin,arrout s arrin("rrmm",rrmm)="" s arrin("sta",1)="" s arrin("sta",2)="" s typdoc=1
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...//pocet ridicu
 ...s cntosc=0 s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  s cntosc=cntosc+1
 ...//zacatek a konec dokladu
 ...s beghrl=$g(arrout("dta",4))
 ...s tmpmm=$o(arrout("arr","tur",""),-1) i tmpmm'="" s tmpmm=$j($g(arrout("arr","tur",tmpmm,"dta",1)),0,0)
 ...s endhrl=(beghrl+(tmpmm\1440))
 ...//napocet pro ridice
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....//kraceni hodnot pri vice ridicich, provoz,km
 ....i cntosc>1 f cnt=1:1:$$gPcPDU^OBapiEDTur i cnt=17!(cnt>21&(cnt<30)) s arrout("osc",osc,"tuv",cnt)=($g(arrout("osc",osc,"tuv",cnt)))/cntosc+.05\.1/10
 ....//pracovni global
 ....s val=$g(@wglb@(osc,typdoc)) k arrsm d qvTuV^OBapiEDTur(val,.arrsm)
 ....k arr m arr=arrout("osc",osc,"tuv")
 ....d smArrDzva(.arrsm,.arr)
 ....//zabalit a ulozit
 ....k val d svTuV^OBapiEDTur(.val,.arrsm)
 ....s @wglb@(osc,typdoc)=val
 ....//doklad
 ....k arr m arr=arrout("osc",osc,"tuv")
 ....k val d svTuV^OBapiEDTur(.val,.arr)
 ....s @wglb@(osc,typdoc,"d",zp,rrmm,doc)=val
 ....//zacatek a konec dokladu
 ....s @wglb@(osc,typdoc,"d",zp,rrmm,doc,1)=beghrl_"~"_endhrl
 .k ^CacheTempJB(wrk)
 //sj
 k arrin,arrout s arrin("rrmm",rrmm)="" s arrin("sta",1)="" s arrin("sta",2)="" s typdoc=2
 s err=$$lSj^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 ..s doc="" f  s doc=$o(^CacheTempJB(wrk,zp,rrmm,doc)) q:doc=""  d
 ...k arrin,arrout s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arrin,.arrout) zt:+err "merr" s err=""
 ...//zacatek a konec dokladu
 ...s beghrl=$g(arrout("dta",6))
 ...s endhrl=$g(arrout("dta",7)) i 'endhrl s endhrl=beghrl
 ...s osc="" f  s osc=$o(arrout("osc",osc)) q:osc=""  d
 ....s val=$g(@wglb@(osc,typdoc))
 ....f cnt=1:1:($$gPcNMU^OBapiEDSj()-2) s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("osc",osc,"dta",(cnt+2)))
 ....s @wglb@(osc,typdoc)=val
 ....s val="" f cnt=1:1:($$gPcNMU^OBapiEDSj()-2) s $p(val,":",cnt)=$g(arrout("osc",osc,"dta",(cnt+2)))
 ....s @wglb@(osc,typdoc,"d",zp,rrmm,doc)=val
 ....s @wglb@(osc,typdoc,"d",zp,rrmm,doc,1)=beghrl_"~"_endhrl
 .k ^CacheTempJB(wrk)
 // napocet grafikonu
 k arrin,arrout s arrin("par",1)=0 s typdoc=3
 s err=$$lGrfOs^OBapiED(idfa,nmsp,$$gminhrlrrmm^OBapiED(rrmm),$$gmaxhrlrrmm^OBapiED(rrmm),.arrin,.arrout) zt:+err "merr" s err=""
 s wrk=$g(arrout) d:wrk
 .s osc="" f  s osc=$o(^CacheTempJB(wrk,dz,osc)) q:osc=""  d
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,osc,hrl)) q:hrl=""  d
 ...s grf="" f  s grf=$o(^CacheTempJB(wrk,dz,osc,hrl,grf)) q:grf=""  d
 ....k arrout s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,hrl,grf,"",.arrout) zt:+err "merr" s err=""
 ....s val=$g(@wglb@(osc,typdoc,grf))
 ....f cnt=1:1:4 s $p(val,":",cnt)=$p(val,":",cnt)+$g(arrout("dta",cnt))
 ....s @wglb@(osc,typdoc,grf)=val
 ....s val=""
 ....f cnt=1:1:4,9:1:12 s $p(val,":",cnt)=$g(arrout("dta",cnt))
 ....s @wglb@(osc,typdoc,grf,"d",hrl)=val
 .k ^CacheTempJB(wrk)
 // zalohove hodiny - automaticke odecteni z predchoziho mesice
 i +$g(arrmzdset("arr",3,4))=1 d
 .s mrr=rrmm\100 s mmm=rrmm#100-1
 .i 'mmm s mmm=12 s mrr=mrr-1
 .s mrrmm=mrr*100+mmm
 .k arrin,arrout s arrin("par",1)=0 s typdoc=3
 .s err=$$lGrfOs^OBapiED(idfa,nmsp,$$gminhrlrrmm^OBapiED(mrrmm),$$gmaxhrlrrmm^OBapiED(mrrmm),.arrin,.arrout) zt:+err "merr" s err=""
 .s wrk=$g(arrout) d:wrk
 ..s osc="" f  s osc=$o(^CacheTempJB(wrk,dz,osc)) q:osc=""  d
 ...s hrl="" f  s hrl=$o(^CacheTempJB(wrk,dz,osc,hrl)) q:hrl=""  d
 ....i $d(^CacheTempJB(wrk,dz,osc,hrl,"ZAH")) d
 .....k arrout s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,hrl,"ZAH","",.arrout) zt:+err "merr" s err=""
 .....s val=$g(@wglb@(osc,typdoc,"ZAH"))
 .....f cnt=1:1:4 s $p(val,":",cnt)=$p(val,":",cnt)-$g(arrout("dta",cnt))
 .....s @wglb@(osc,typdoc,"ZAH")=val
 .....s val=""
 .....f cnt=1:1:4 s $p(val,":",cnt)=-$g(arrout("dta",cnt))
 .....s @wglb@(osc,typdoc,"ZAH","d",hrl)=val
 ..k ^CacheTempJB(wrk)
 // ============================================================
 // ostatni
 s typdoc=4
 // ostatni - zalohove hodiny aktualni
 s osc="" f  s osc=$o(^[nmsp]OBzalhod(idfa,osc)) q:osc=""  d
 .q:'$d(^[nmsp]OBzalhod(idfa,osc,rrmm))
 .s val=$g(^[nmsp]OBzalhod(idfa,osc,rrmm))
 .s @wglb@(osc,typdoc,1)=$$hm^OBapiED($p(val,":",2))
 .s @wglb@(osc,typdoc,2)=$p(val,":",3)
 // ostatni - zalohove hodiny min.mesic
 s mrr=rrmm\100 s mmm=rrmm#100-1
 i 'mmm s mmm=12 s mrr=mrr-1
 s mrrmm=mrr*100+mmm
 s osc="" f  s osc=$o(^[nmsp]OBzalhod(idfa,osc)) q:osc=""  d
 .q:'$d(^[nmsp]OBzalhod(idfa,osc,mrrmm))
 .s val=$g(^[nmsp]OBzalhod(idfa,osc,mrrmm))
 .s @wglb@(osc,typdoc,3)=-$$hm^OBapiED($p(val,":",2))
 .s @wglb@(osc,typdoc,4)=-$p(val,":",3)
 // ostatni - premie pravidelna
 s zp="" f  s zp=$o(^[nmsp]OBPREM(zp)) q:zp=""  d
 .s osc="" f  s osc=$o(^[nmsp]OBPREM(zp,rrmm,osc)) q:osc=""  d
 ..s val=$g(^[nmsp]OBPREM(zp,rrmm,osc))
 ..s from=3 s:idfa="VS_CSAD" from=5
 ..q:('$p(val,":",from))
 ..s @wglb@(osc,typdoc,5)=$p(val,":",from)
 // ostatni - premie nepravidelna
 s zp="" f  s zp=$o(^[nmsp]OBPREMn(zp)) q:zp=""  d
 .s osc="" f  s osc=$o(^[nmsp]OBPREMn(zp,rrmm,osc)) q:osc=""  d
 ..s val=$g(^[nmsp]OBPREMn(zp,rrmm,osc))
 ..s from=3 s:idfa="VS_CSAD" from=5
 ..q:('$p(val,":",from))
 ..s @wglb@(osc,typdoc,6)=$p(val,":",from)
 // ostatni - premie - spolecny vypocet
 s zp="" f  s zp=$o(^[nmsp]OBPREMa(zp)) q:zp=""  d
 .s osc="" f  s osc=$o(^[nmsp]OBPREMa(zp,rrmm,osc)) q:osc=""  d
 ..s val=$g(^[nmsp]OBPREMa(zp,rrmm,osc))
 ..s from=3
 ..q:('$p(val,"~",from))
 ..s @wglb@(osc,typdoc,7)=$p(val,"~",from)
 // ostatni - diety, pravidelna, nad limit a pod limit
 k arrin s arrin("rrmm",rrmm)=""
 s wrk=$$gWrkALVAAD^OBapiED()
 k ^||wrk.ALVA.AD(wrk)
 s glbdta="^||wrk.ALVA.AD("_wrk_")"
 s err=$$mkNdmlDieOs^OBapiED(idfa,nmsp,glbdta,.arrin,"") zt:+err "merr" s err=""
 s osc="" f  s osc=$o(@glbdta@("arr",1,osc)) q:osc=""  d
 .s hrl="" f  s hrl=$o(@glbdta@("arr",1,osc,hrl)) q:hrl=""  d
 ..s @wglb@(osc,typdoc,8)=$g(@wglb@(osc,typdoc,8))+$g(@glbdta@("arr",1,osc,hrl,"dta",4))  //do limitu
 ..s @wglb@(osc,typdoc,9)=$g(@wglb@(osc,typdoc,9))+$g(@glbdta@("arr",1,osc,hrl,"dta",5))  //nad limit
 k @glbdta
 /*
 // =========================
 // ostatni - pocet stravenek
 // =========================
 k arrstrvset s err=$$gStrvSet^OBapiED(idfa,nmsp,"",.arrstrvset) zt:+err "merr" s err=""
 //arrstrvset("dta",1)= vyhodnocovat stravenky pro ridice 0/1
 //arrstrvset("dta",2)= algoritmus 0 - podle hodnin grafikonove polozky
 //arrstrvset("dta",3)= id grafikonove polozky
 //arrstrvset("arr",0,"dta",1)=mmlimit1~pocet1
 //arrstrvset("arr",0,"dta",2)=mmlimit2~pocet2
 //je zapnuto
 i +$g(arrstrvset("dta",1)) {
	 //algoritmus pro teplice, podle grafikonove polozky
	 i +$g(arrstrvset("dta",2))=0 {
		 s grf=$g(arrstrvset("dta",3))
		 i grf'="" {
			 s mmlim1=$p($g(arrstrvset("arr",0,"dta",1)),"~",1)
			 s cntlim1=$p($g(arrstrvset("arr",0,"dta",1)),"~",2)
			 s mmlim2=$p($g(arrstrvset("arr",0,"dta",2)),"~",1)
			 s cntlim2=$p($g(arrstrvset("arr",0,"dta",2)),"~",2)
			 s osc="" f {
				 s osc=$o(@wglb@(osc)) i osc="" q
				 s hrl="" f {
					 s hrl=$o(@wglb@(osc,3,grf,"d",hrl)) i hrl="" q
					 s val=$g(@wglb@(osc,3,grf,"d",hrl))
					 s mm=($p(val,":",2)+$p(val,":",4))
					 i (mmlim2'="")&(mm'<mmlim2) s @wglb@(osc,typdoc,10)=$g(@wglb@(osc,typdoc,10))+cntlim2 continue
					 i (mmlim1'="")&(mm'<mmlim1) s @wglb@(osc,typdoc,10)=$g(@wglb@(osc,typdoc,10))+cntlim1
				 }
			 }
		 }
	 }
 }
 */
 // ===========================
 // zapis do vysledneho globalu
 // ===========================
 k dscgr s err=$$gCis^OBapiED(idfa,nmsp,20,"",.dscgr) zt:+err "merr" s err=""
 //
 k @glb
 //
 s osc="" f  s osc=$o(@wglb@(osc)) q:osc=""  d
 .// pravidelna doprava
 .s val=$g(@wglb@(osc,1))
 .// rozbalim vetu
 .k arr d qvTuV^OBapiEDTur(val,.arr)
 .// napocet vety do globalu
 .f cnt=1:1:$$gPcPDU^OBapiEDTur d
 ..i cnt=19 f cntmzd=1:1:$$gPcPMU^OBapiEDTur d
 ...s @glb@("arr",osc,rrrrmm,$$gidItm(1,cnt,cntmzd))=$g(@glb@("arr",osc,rrrrmm,$$gidItm(1,cnt,cntmzd)))+$g(arr(cnt,cntmzd))
 ..i cnt'=19 d
 ...s @glb@("arr",osc,rrrrmm,$$gidItm(1,cnt,""))=$g(@glb@("arr",osc,rrrrmm,$$gidItm(1,cnt,"")))+$g(arr(cnt))
 .//doplatek pro DP TEPLICE, napocet dat a zapis do prevodoveho globalu
 .i ($g(arrmzdset("arr",1,0,31,"dta",1))=1)&($g(arrmzdset("arr",1,0,31,"dta",3))=1) d
 ..k myarr
 ..s err=$$gOsTPDoplMz^OBapiEDOsExportF1(idfa,nmsp,(rrrrmm#10000),osc,.arrmzdset,"",.myarr)
 ..s @glb@("arr",osc,rrrrmm,$$gidItm(1,19,42))=$g(myarr("dta",1))
 ..k myarr
 .//===================================================================
 .//nepravidelna doprava
 .s val=$g(@wglb@(osc,2))
 .f cnt=1:1:($$gPcNMU^OBapiEDSj()-2) d
 ..s @glb@("arr",osc,rrrrmm,$$gidItm(2,cnt,""))=$g(@glb@("arr",osc,rrrrmm,$$gidItm(2,cnt,"")))+$p(val,":",cnt)
 ..d:+$p(val,":",cnt)
 .//grafikon 
 .s grf="" f  s grf=$o(@wglb@(osc,3,grf)) q:grf=""  d
 ..q:$p($g(dscgr("arr",grf)),"~",2)=3
 ..s val=$g(@wglb@(osc,3,grf))
 ..//hodiny
 ..s valgr=$p(val,":",2) s:'valgr valgr=$p(val,":",4)
 ..s @glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1))=$g(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1)))+valgr
 ..//kc
 ..s valgr=$p(val,":",1) s:(grf="DIE") valgr=$p(val,":",3)
 ..s @glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2))=$g(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2)))+valgr
 ..//=========================
 ..//rozpis grafikonu po dnech
 ..//=========================
 ..s hrl="" f  s hrl=$o(@wglb@(osc,3,grf,"d",hrl)) q:hrl=""  d
 ...s val=$g(@wglb@(osc,3,grf,"d",hrl))
 ...//hodiny
 ...s valgr=$p(val,":",2) s:'valgr valgr=$p(val,":",4)
 ...s @glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl)=$g(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl))+valgr
 ...//od-do
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl),":",2)=$p(val,":",9)	 //od
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl),":",3)=$p(val,":",10) //do
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl),":",4)=$p(val,":",11) //od
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,1),"d",hrl),":",5)=$p(val,":",12) //do
 ...//kc
 ...s valgr=$p(val,":",1) s:(grf="DIE") valgr=$p(val,":",3)
 ...s @glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl)=$g(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl))+valgr
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl),":",2)=$p(val,":",9)	 //od
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl),":",3)=$p(val,":",10) //do
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl),":",4)=$p(val,":",11) //od
 ...s $p(@glb@("arr",osc,rrrrmm,$$gidItm(3,grf,2),"d",hrl),":",5)=$p(val,":",12) //do
 .//ostatni
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,1,""))=+$g(@wglb@(osc,4,1))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,2,""))=+$g(@wglb@(osc,4,2))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,3,""))=+$g(@wglb@(osc,4,3))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,4,""))=+$g(@wglb@(osc,4,4))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,5,""))=+$g(@wglb@(osc,4,5))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,6,""))=+$g(@wglb@(osc,4,6))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,7,""))=+$g(@wglb@(osc,4,7))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,8,""))=+$g(@wglb@(osc,4,8))
 .s @glb@("arr",osc,rrrrmm,$$gidItm(4,9,""))=+$g(@wglb@(osc,4,9))
 .//s @glb@("arr",osc,rrrrmm,$$gidItm(4,10,""))=+$g(@wglb@(osc,4,10))
 .//rozpis dokladu po dnech pro pravidelnou a nepravidelnou
 .f typdoc=1,2 d
 ..s zp="" f  s zp=$o(@wglb@(osc,typdoc,"d",zp)) q:zp=""  d
 ...s doc="" f  s doc=$o(@wglb@(osc,typdoc,"d",zp,rrrrmm,doc)) q:doc=""  d
 ....s val=$g(@wglb@(osc,typdoc,"d",zp,rrrrmm,doc,1))
 ....s beghrl=$p(val,"~",1)
 ....s endhrl=$p(val,"~",2)
 ....f hrl=beghrl:1:endhrl s @glb@("hrd",osc,rrrrmm,hrl)=""
 k @wglb
 q 0
gidItm(val1,val2,val3)
 q "AD"_"|"_val1_"|"_val2_"|"_val3
smArrDzva(arrsm,arr)
 ;; dzva suma udaju za ridice - pole
 ;; arrsm - pole, do ktereho to scitam
 ;; arr   - pole ktere pricitam
 n (arrsm,arr)
 f cnt=1:1:$$gPcPDU^OBapiEDTur d
 .i cnt=19 d  f cntmzd=1:1:$$gPcPMU^OBapiEDTur s arrsm(cnt,cntmzd)=$g(arrsm(cnt,cntmzd))+$g(arr(cnt,cntmzd))
 .i cnt'=19 s arrsm(cnt)=arrsm(cnt)+$g(arr(cnt))
 q
gKaOs(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" k out
 // vrati kategorie ridicu a pruvodcich
 // zatim takto, pak se to bude nastavovat v aplikaci ridici
 s out("KA",$$gCatR^OBapiED(nmsp))=""
 s out("KA",$$gCatP^OBapiED(nmsp))=""
 // vyjimky
 i idfa="MB_TCBUS" s out("KA",12)=""
 //
 q 0
err s $zt="" k out q:$g(err)'="" err q "1"_"~"_$ze
]]></Routine>


<Routine name="OBapiEDOsExportF1" type="INT" languagemode="0" timestamp="64447,79728.900226"><![CDATA[
OBapiEDOsExportF1 q
 //pomocne fce pro export dat
gOsTPDoplMz(idfa,nmsp,rrmm,os,arrmzdset,in,out)
 //w $$gOsTPDoplMz^OBapiEDOsExportF1("VS_CSAD","USER",1305,35107,"","",.arr)
 //vstup:
 //výstup:
 //out("dta",1)=kc celkový doplatek
 //out("arr",1,hrl)=$lb(mm,kc)
 n (idfa,nmsp,rrmm,os,arrmzdset,in,out) k out s $zt="err"
 //zacatek a konec mesice
 s beghrl=$$gminhrlrrmm^OBapiED(rrmm)
 s endhrl=$$gmaxhrlrrmm^OBapiED(rrmm)
 //
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 //kontrola vstupnich promennych
 i '$d(arrmzdset("arr")) {
	 s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzdset) zt:+err "merr" s err=""
 }
 // out("arr",1,0,31,"dta",1)=pocitat doplatek do mzdy 0/1
 // out("arr",1,0,31,"dta",2)=procento z castky (al=0)
 // out("arr",1,0,31,"dta",3)=algoritmus 0 KRODOS / 1 DP TEPLICE
 // out("arr",1,0,31,"dta",4)=limit(mm) (al=1)
 // out("arr",1,0,31,"dta",5)=castka(kc)(al=1)
 // out("arr",1,0,31,"dta",6)=id_provozovny, kde se doplatek pocita (pro DP Teplice) ... idprv;idprv;...
 s out("dta",1)=0
 //pole provozoven pro vypocet
 k arridprv f cnt=1:1:$l($g(arrmzdset("arr",1,0,31,"dta",6)),";") {
	 i $p($g(arrmzdset("arr",1,0,31,"dta",6)),";",cnt)="" continue
	 s arridprv($p($g(arrmzdset("arr",1,0,31,"dta",6)),";",cnt))=""
 }
 i ($g(arrmzdset("arr",1,0,31,"dta",1))=1)&($g(arrmzdset("arr",1,0,31,"dta",3))=1) {
 	 k arri,wrkgrf s arri("osc",os)="" s arri("par",1)=1
 	 s err=$$lGrfOs^OBapiED(idfa,nmsp,(beghrl-2),endhrl,.arri,.wrkgrf) zt:+err "merr" s err=""
 	 s hrl="" f {
	 	 s hrl=$o(^CacheTempJB(wrkgrf,dz,os,hrl)) i hrl="" q
	 	 s idgrf="" f {
		 	 s idgrf=$o(^CacheTempJB(wrkgrf,dz,os,hrl,idgrf)) i idgrf="" q
		 	 //neni doklad
	 	 	 i '+idgrf continue
	 	 	 //sj ne
	 	 	 i +idgrf>qsj continue  //sj
	 	 	 //data grafikonove polozky
	 	 	 k garr s err=$$gGrfOs^OBapiED(idfa,nmsp,os,hrl,idgrf,"",.garr) zt:+err "merr" s err=""
	 	 	 s zp=$g(garr("dta",7))
	 	 	 s rrmm=$g(garr("dta",6))
	 	 	 //doklad neni z provozovny
	 	 	 i '$d(arridprv(zp#100)) continue
	 	 	 //=======================
	 	 	 i zp&rrmm {
				k darr s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,idgrf,"",.darr)
				s beghrld=$g(darr("dta",4))
				s tmf=$o(darr("arr","tur",""))
				s tmt=tmf
				i tmf'="" {
					s tmt=$o(darr("arr","tur",""),-1)
					s tmt=$g(darr("arr","tur",tmt,"dta",1))
				}
				s tmf=$j(tmf,0,0)
				s tmt=$j(tmt,0,0)
				s endhrld=(beghrld+(tmt\1440))
				//jeden den
				i beghrld=endhrld {
					i (beghrld'<beghrl)&(beghrl'>endhrl) {
						s mm=(tmt-tmf)
						s val=$g(out("arr",1,beghrld))
						s $li(val,1)=$lg(val,1)+mm
						s out("arr",1,beghrld)=val
						s out("arr",1,beghrld,zp_"|"_rrmm_"|"_idgrf)=$lb(tmf,tmt,mm)
					}
				}
				//vice dni
				i beghrld<endhrld {
					f myhrl=beghrld:1:endhrld {
						i (beghrld'<beghrl)&(beghrl'>endhrl) {
							s mytmf=0 s mytmt=1440
							i (myhrl=beghrld) {
								s mytmf=tmf
							}
							i (myhrl=endhrld) {
								s mytmt=tmt#1440
							}
							s mm=(mytmt-mytmf)
							s val=$g(out("arr",1,myhrl))
							s $li(val,1)=$lg(val,1)+mm
							s out("arr",1,myhrl)=val
							s out("arr",1,myhrl,zp_"|"_rrmm_"|"_idgrf)=$lb(mytmf,mytmt,mm)
						}
					}				
				}
	 	 	}
	 	}
 	}
 	//dopocet kc
 	s hrl="" f {
	 	s hrl=$o(out("arr",1,hrl)) i hrl="" q
	 	s val=$g(out("arr",1,hrl))
	 	s mm=$lg(val,1)
	 	i (mm'<$g(arrmzdset("arr",1,0,31,"dta",4))) {
		 	s $li(val,2)=$g(arrmzdset("arr",1,0,31,"dta",5))
		 	s out("dta",1)=$g(out("dta",1))+$g(arrmzdset("arr",1,0,31,"dta",5))
	 	}
	 	s out("arr",1,hrl)=val
 	}
 }
 q 0
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")


]]></Routine>


<Routine name="OBapiEDPHMOs" type="INT" languagemode="0" timestamp="63789,48989"><![CDATA[
OBapiEDPHMOs q
 // ===========================================================================================================
 // ^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd))=$lb(stav,km,phm,norphm,poznamka,hrlzmena,usrzmena))
 // ^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd,1))=$lb(iddoc,...)
 // idd - identifikator zaznamu
 // stav (0 aktivni / 1 neaktivni)
 // ===========================================================================================================
lPHMOs(idfa,nmsp,in,out)
 //	   seznam ridicu se spotrebou 
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",os)=""           - hleda jen ridice
 //    out=wrk					 - odkaz do globalu ^||wrk.ALVA.AD(wrk,zp,rrmm,os,rz,hrl,idd)=""
 n (idfa,nmsp,in,out) s $zt="err" k out s out=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(out) 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 s zp="" f  {
	 s zp=$o(^[nmsp]OBPHMeOs(zp)) i zp="" q
 	 i $d(in("zp")) i '$d(in("zp",zp)) continue
     i $d(in("prv")) i '$d(in("prv",(zp#100))) continue
 	 s rrmm="" f {
	 	 s rrmm=$o(^[nmsp]OBPHMeOs(zp,rrmm)) i rrmm="" q
 	 	 i $d(in("rrmm")) i '$d(in("rrmm",rrmm)) continue
 	 	 s os="" f {
	 	 	s os=$o(^[nmsp]OBPHMeOs(zp,rrmm,os)) i os="" q
 	 	 	i $d(in("osc")) i '$d(in("osc",os)) continue
 	 	 	s ^||wrk.ALVA.AD(out,zp,rrmm,os)=""
 	 	 	s rz="" f {
	 	 	 	s rz=$o(^[nmsp]OBPHMeOs(zp,rrmm,os,rz)) i rz="" q
	 	 	 	s hrl="" f {
		 	 	 	s hrl=$o(^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl)) i hrl="" q
		 	 	 	s idd="" f {
	 	 	 			s idd=$o(^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd)) i idd="" q
	 	 	 			s ^||wrk.ALVA.AD(out,zp,rrmm,os,rz,hrl,idd)=""
 	 	 			}
	 	 	 	}
 	 	 	}
 	 	 }
 	 }
 }
 q 0
gPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out)
 //out:
 //out("dta",1)=stav zaznamu (0 aktivni / 1 neaktivni)
 //out("dta",2)=km
 //out("dta",3)=phm
 //out("dta",4)=norma
 //out("dta",5)=poznamka
 //out("dta",6)=hrl zmena
 //out("dta",7)=usr zmena
 //out("dta",8)=rucni zasah 0/1
 //out("arr",1,iddoc)="" 	iddoc=zp|rrmm|doc
 //
 n (idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(os)="" q "1~os="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(idd)="" q "1~idd="
 s val=$g(^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd))
 f cnt=1:1:$ll(val) s out("dta",cnt)=$lg(val,cnt)
 s val=$g(^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd,1))
 f cnt=1:1:$ll(val) s out("arr",1,$lg(val,cnt))=""
 q 0
sPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out)
 n (idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(os)="" q "1~os="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(idd)="" q "1~idd="
 s val=""
 f cnt=1:1:8 s $li(val,cnt)=$g(in("dta",cnt))
 s ^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd)=val
 s val="" s cnt=0
 s iddoc="" f {
	 s iddoc=$o(in("arr",1,iddoc)) i iddoc="" q
	 s cnt=cnt+1 s $li(val,cnt)=iddoc
 }
 s ^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd,1)=val
 q 0
 //
gPHMHe(idfa,nmsp,zp,rrmm,in,out)
 //zahlavi PHM pod zp a rrmm
 //out("dta",1)=hrlfrom
 //out("dta",2)=hrlto
 n (idfa,nmsp,zp,rrmm,in,out) s $zt="err" k out 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 s val=$g(^[nmsp]OBPHMeOs(zp,rrmm))
 f cnt=1:1:$ll(val) s out("dta",cnt)=$lg(val,cnt)
 q 0
 //
sPHMHe(idfa,nmsp,zp,rrmm,in,out)
 //zahlavi PHM pod zp a rrmm
 //in("dta",1)=hrlfrom
 //in("dta",2)=hrlto
 n (idfa,nmsp,zp,rrmm,in,out) s $zt="err" k out 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 s val="" f cnt=1:1:2 s $li(val,cnt)=$g(in("dta",cnt))
 s ^[nmsp]OBPHMeOs(zp,rrmm)=val
 q 0
dPHMOs(idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out)
 //vymazani jednoho zaznamu 
 n (idfa,nmsp,zp,rrmm,os,rz,hrl,idd,in,out) s $zt="err" k out 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(os)="" q "1~os="
 i $g(rz)="" q "1~rz="
 i $g(hrl)="" q "1~hrl="
 i $g(idd)="" q "1~idd="
 k ^[nmsp]OBPHMeOs(zp,rrmm,os,rz,hrl,idd)
 q 0
dPHMPO(idfa,nmsp,zp,rrmm,in,out)
 //vymazani udaju cele provozovny a obdobi
 n (idfa,nmsp,zp,rrmm,in,out) s $zt="err" k out 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 k ^[nmsp]OBPHMeOs(zp,rrmm)
 q 0
 //
err s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDPatch1" type="INT" languagemode="0" timestamp="62881,39093"><![CDATA[
OBapiEDPatch1 q
goCekZap
 // program projde SJ, u SJ pro jednoho ridice prekontroluje cekani zapoctene do odp. doby, kde neni, doplni
 s idfa="VS_CSAD" s nmsp="user" s dz=13 s rrmm=1108
 k arr s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arr)
 s prc=$g(arr("arr",2,0,6))
 w !,"%="_prc r a
 s zp="" f  s zp=$o(^OBD(zp)) q:zp=""  d
 .i (zp\100)'=dz q
 .s doc=$$qsj^OBapiED() f  s doc=$o(^OBD(zp,rrmm,doc)) q:doc=""  d
 ..k arr s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arr)
 ..q:$g(arr("dta",1))=0 //predznaceno
 ..q:$g(arr("dta",1))=3 //zruseno
 ..s cntrid=0 s osc="" f  s osc=$o(arr("osc",osc)) q:osc=""  s cntrid=cntrid+1
 ..i cntrid'=1 q		//jen pro jednoto ridice
 ..s osc=$o(arr("osc",osc))
 ..s mmcek=$g(arr("dta",13)) s mmcekodp=$g(arr("osc",osc,"dta",4))
 ..i $$round^OBapiED((mmcek/100)*prc,0)=mmcekodp q
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,osc),":",4)=$$mh^OBapiED($$round^OBapiED((mmcek/100)*prc,0))
 ..w !,zp_"|"_rrmm_"|"_doc," osc="_osc," cček= "_$$mh^OBapiED(mmcek)_" oldčeko= "_$$mh^OBapiED(mmcekodp)_" newčeko= "_$$mh^OBapiED($$round^OBapiED((mmcek/100)*prc,0))
 q
cnvZAH
 // konverze zalohovych hodin pro rrmm do grafikonu
 k ^wwwzh
 s idfa="VS_CSAD" s nmsp="user" s dz=13 s rrmm=1203 s hrl=$$gmaxhrlrrmm^OBapiED(rrmm)
 s err=$$gPosDtaGrfOs^OBapiED(idfa,nmsp,"ZAH","",.phZAH) i +err w err q
 s os="" f  s os=$o(^[nmsp]OBzalhod(idfa,os)) q:os=""  d
 .k arr s err=$$gZalHodOsc^OBapi(idfa,nmsp,rrmm,os,"",.arr) i +err w err q
 .i ($g(arr("dta",2)))!($g(arr("dta",3))) d
 ..w !,os," ","hod="_($g(arr("dta",2))*60)," / KC=",$g(arr("dta",3))
 ..k arrgrf
 ..s arrgrf("dta",phZAH)=($g(arr("dta",2))*60)
 ..s arrgrf("dta",1)=$g(arr("dta",3))
 ..s err=$$sGrfOs^OBapiED(idfa,nmsp,os,hrl,"ZAH",.arrgrf,) i +err w err q
 ..s ^wwwzh(os,rrmm)=$g(arr("dta",2))_"~"_$g(arr("dta",3))
 ..//zruseni zalohovych hodin v evidenci
 ..k arri s arri("mlp")=1 s err=$$sZalHodOsc^OBapi(idfa,nmsp,rrmm,os,.arri,"") i +err w err q
 q
]]></Routine>


<Routine name="OBapiEDPlan" type="INT" languagemode="0" timestamp="65777,52950.293049"><![CDATA[
OBapiEDPlan q
gPln(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 // s err=$$gPlnDoc(idfa,nmsp,idprac,hrl,spz,pc,in,out) - vrati data planovaciho dokladu
 // popis pole s daty planovaciho dokladu  out("dta",cnt)=...
 // ---------------------------------------------------------
 // cnt - pocitadlo
 // 01 - cislo vystaveneho dokladu
 // 02 - objednavka
 // 03 - stanoviste
 // 04 - misto pristaveni
 // 05 - priznak dokladu 0 je to doklad, lze predtisknout a předznačit / 1 nejedna se o doklad
 // 06 - priznak typu dokladu 0 dzva / 1 sj
 // 07 - priznak typu planu 0 plan / 1 rozpis
 // 08 - DODK pro nepravidelnou (min)
 // 09 - kontrola bus
 // 10 - kontrola tchg
 // 11 - RZ privesu
 // 12 - priznak zaskolovani pro doklad (0/1)
 // 13 - priznak smeny z volna (0/1)
 // 14 - dopocet diet 0 nic/ 1 od pulnoci / 2 do pulnoci / 3 od pulnoci do pulnoci
 // 15 - posilový 0/1
 // 16 - subdodane vozidlo 0/1
 // 17 - IC spolecnosti, ktera subdodala vozidlo
 // -----------------------------------------------------------------
 // popis dalsich poli s daty planovaciho dokladu  out("arr",...)=...
 // -----------------------------------------------------------------
 // out("arr",1,os,"dta",1)=poznamka_k_ridici
 // out("arr",1,os,"dta",2)=poradi_ridice
 // out("arr",1,os,"dta",3)=subdodany ridic 0/1
 // out("arr",1,os,"dta",4)=IC spolecnosti, ktera subdodala ridice
 // out("arr",2,tu,"dta",1)=liod~spod
 // out("arr",2,tu,"dta",2)=lido~spdo
 // out("arr",3,cnt,"dta",1)=li~sp (plus)
 // out("arr",4,cnt,"dta",1)=li~sp (minus)
 // out("arr",5,cnt)=poznamka
 // out("arr",6,hrl)="" ... horlog predtisku
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out)
 s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(spz)="" s err="spz=" zt "merr"
 i $g(pc)="" s err="pc=" zt "merr"
 //
 s out("dta",1)=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc))                   				// cislo dokladu
 s idobj="" s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))
 i cobj s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(hrl,1),".",3),cobj)
 s out("dta",2)=idobj                                                    				//objednavka
 s out("dta",3)=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"M"))               				//stanoviste
 s out("dta",4)=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"MPRST"))           				//misto pristaveni
 s out("dta",5)=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"nodoc"))           				//priznak dokladu
 s out("dta",6)=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj"))              				//priznak typu dokladu 0 dzva / 1 sj
 s out("dta",7)=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"rozpis"))          				//priznak typu planu 0 plan / 1 rozpis
 s out("dta",8)=$$hm^OBapiED($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"DODK")))   	//DODK pro nepravidelnou
 s out("dta",9)=+$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt")),"~",1)  				//kontrola bus
 s out("dta",10)=+$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt")),"~",2) 				//kontrola tchg
 s out("dta",11)=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"RZP"))			 				//RZ privesu
 s out("dta",12)=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"ZSK"))			 				//priznak zaskolovani 0/1
 s out("dta",13)=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SZV"))			 				//priznak smeny z volna 0/1
 s out("dta",14)=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"DDI"))			 				//priznak pro dopocet diet 0 nic/ 1 od pulnoci / 2 od pulnoci / 3 od pulnoci do pulnoci
 s out("dta",15)=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"POS"))			 				//priznak posilovy
 s out("dta",16)=+$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SUB")),"~",1) 				//priznak subdodaneho vozidla
 s out("dta",17)=$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SUB")),"~",2)  				//IC spolecnosti, ktera subdodala vozidlo
 // osobni cisla
 s osc="" f {
	 s val="" s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc),1,val) i osc="" q
 	 s out("arr",1,osc,"dta",1)=$p($g(val),"~",1)										//poznamka_k_ridici
 	 s out("arr",1,osc,"dta",2)=$p($g(val),"~",2)										//poradi_ridice
 	 s out("arr",1,osc,"dta",3)=+$p($g(val),"~",3)										//subdodany ridic 0/1
 	 s out("arr",1,osc,"dta",4)=$p($g(val),"~",4)										//IC spolecnosti, ktera subdodala ridice
 }
 // turnusy
 s tu="" f {
	  s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu)) i tu="" q
 	  s val=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu,"oddo"))
 	  s out("arr",2,tu,"dta",1)=""
 	  i $p(val,":",1) {
	 	  i $p(val,":",1)["." s out("arr",2,tu,"dta",1)=($p(val,":",1)\1)_"~"_($p(val,":",1)#1*1000)
 	  	  i $p(val,":",1)["^" s out("arr",2,tu,"dta",1)=($p($p(val,":",1),"^",1)_"~"_($p($p(val,":",1),"^",2)))
 	  }
 	  s out("arr",2,tu,"dta",2)=""
 	  i $p(val,":",2) {
	 	  i $p(val,":",2)["." s out("arr",2,tu,"dta",2)=($p(val,":",2)\1)_"~"_($p(val,":",2)#1*1000)
 	  	  i $p(val,":",2)["^" s out("arr",2,tu,"dta",2)=($p($p(val,":",2),"^",1)_"~"_($p($p(val,":",2),"^",2)))
 	  }
 }
 // linky, spoje
 s ls="" f {
	 s ls=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"S",ls)) i ls="" q
 	 i ls>0 {
	 	 i ls["." s out("arr",3,$i(out("arr",3)),"dta",1)=$p(ls,".",1)_"~"_$p(ls,".",2) 
 	 	 i ls["^" s out("arr",3,$i(out("arr",3)),"dta",1)=$p(ls,"^",1)_"~"_$p(ls,"^",2) 
 	 }
 	 i ls<0 {
	 	 i ls["." s out("arr",4,$i(out("arr",4)),"dta",1)=($p(ls,".",1)*(-1))_"~"_$p(ls,".",2) 
 	 	 i ls["^" s out("arr",4,$i(out("arr",4)),"dta",1)=($p(ls,"^",1)*(-1))_"~"_$p(ls,"^",2) 
 	 }
 }
 // poznamky
 s cnt="" f {
	 s val="" s cnt=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"P",cnt),1,val) i cnt="" q
 	 s out("arr",5,cnt)=$g(val)
 }
 // predtisk
 i $g(out("dta",1))'="" {
	 // dzva
 	 i '$g(out("dta",6)) {
	 	 s prthrl="" f {
		 	  s prthrl=$o(^[nmsp]obpy(idprac,hrl,$g(out("dta",1)),prthrl)) i prthrl="" q
 	 	 	  s out("arr",6,prthrl)=""
	 	 }
 	 }
 	 // sj
 	 i $g(out("dta",6)) {
	 	 s prthrl="" f {
		 	  s prthrl=$o(^[nmsp]obpz(idprac,hrl,$g(out("dta",1)),prthrl)) i prthrl="" q
 	 		  s out("arr",6,prthrl)=""
	 	 }
 	 }
 }
 //
 q 0
 //
sPln(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 // s err=$$sPlnDoc(idfa,nmsp,idprac,hrl,spz,pc,in,out) - ulozi data planovaciho dokladu
 // je-li pc="" jedná se o novy doklad
 // in:
 //    in("dta",xx)=data
 //    in("arr",xx)=data
 //    in("idos")=mlp~loginname~fullname
 // out:
 //    out("pc")=pc ... poradove cislo, pod ktere se doklad ulozil
 //
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out)
 s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(spz)="" s err="spz=" zt "merr"
 //nove pc
 i $g(pc)="" s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,""),-1)+1
 //planovaci pracoviste - data
 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 //zp
 s err=$$mkZP^OBapiED(idfa,(+$g(arrprac("dta",1))),"","",.zp) zt:+err "merr" s err=""
 //existuje-li doklad, vymazani odkazu na objednavku, vicedenni jizdy od vozidla a rz
 i $d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc)) {
	 //nepravidelna
	 i $d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")){
		 //je cislo objednavky
		 i $g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))'="" {
			 s idobj=""
			 s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))
 			 i cobj {
	 			 s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(hrl,1),".",3),cobj)
 			 }
 			 i +idobj {
	 			 //vymazu odkaz u objednavky (pro pripad zmeny objednavky), aktualizace stavu
 				 k tmparr s tmparr("par",1)=1 s tmparr("arr",10,(idprac_"~"_hrl_"~"_spz_"~"_pc))=""
 				 s err=$$actLinkObj^OBapiED(idfa,nmsp,zp,idobj,.tmparr,"")
 				 //uprava VIC v grafikonu
 				 k arrobj s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj)
 				 s hrlobjfrom=+$g(arrobj("dta",2))
 				 s hrlobjto=+$g(arrobj("dta",33))
 				 i 'hrlobjto s hrlobjto=hrlobjfrom
	 			 f hrlvic=(hrlobjfrom+1):1:hrlobjto {
		 			 //delete VIC pro vozidlo
 				 	 i spz'="-" s err=$$dGrfRz^OBapiED(idfa,nmsp,spz,hrlvic,"VIC","","")
 				 	 //delete VIC pro ridice
 				 	 s osc="" f {
	 				 	 s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) i osc="" q
	 				     i osc'="-" s err=$$dGrfOs^OBapiED(idfa,nmsp,osc,hrlvic,"VIC","","")
 				 	 }
	 			 }
 			 }
 		 } 
	 }
 }
 //vymazani z indexovych globalu
 s err=$$mkIdx(idfa,nmsp,idprac,hrl,spz,pc,0)
 // vymazu doklad v db
 k ^[nmsp]OBPL(idprac,hrl,"A",spz,pc)
 // zapis dokladu
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc)=$g(in("dta",1))                      				// cislo dokladu
 s cobj="" s idobj=$g(in("dta",2)) i idobj s cobj=$$unwrapIdObj^OBapiED(idobj,2)
 i cobj'="" s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ")=cobj          				// objednavka
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"M")=$g(in("dta",3))                  				// stanoviste
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"MPRST")=$g(in("dta",4))              				// misto pristaveni
 i $g(in("dta",5)) s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"nodoc")=1            			// priznak dokladu
 i $g(in("dta",6)) s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")=""              			// priznak typu dokladu 0 dzva / 1 sj
 i $g(in("dta",7)) s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"rozpis")=""          			// priznak typu planu 0 plan / 1 rozpis
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"DODK")=$$mh^OBapiED($g(in("dta",8)))    	// DODK pro nepravidelnou
 s $p(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt"),"~",1)=+$g(in("dta",9))     				// kontrola bus
 s $p(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt"),"~",2)=+$g(in("dta",10))    				// kontrola tchg
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"RZP")=$g(in("dta",11))			   				// RZ privesu
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"ZSK")=$g(in("dta",12))			   				// priznak zaskolovani 0/1
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SZV")=$g(in("dta",13))			   				// priznak smeny z volna 
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"DDI")=$g(in("dta",14))			   				// priznak pro dopocet diet 0 nic/ 1 od pulnoci / 2 od pulnoci / 3 od pulnoci do pulnoci				
 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"POS")=$g(in("dta",15))			   				// priznak posilovy 
 s $p(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SUB"),"~",1)=+$g(in("dta",16))    				// priznak subdodaneho vozidla
 s $p(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"SUB"),"~",2)=$g(in("dta",17))					// IC spolecnosti, ktera subdodala vozidlo
 // ridici
 s osc="" f {
	 s osc=$o(in("arr",1,osc)) i osc="" q
	 s val=""
	 s $p(val,"~",1)=$g(in("arr",1,osc,"dta",1))										//poznamka_k_ridici
	 s $p(val,"~",2)=$g(in("arr",1,osc,"dta",2))    									//poradi_ridice
	 s $p(val,"~",3)=+$g(in("arr",1,osc,"dta",3))										//subdodany ridic 0/1
	 s $p(val,"~",4)=$g(in("arr",1,osc,"dta",4))										//IC spolecnosti, ktera subdodala ridice
 	 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)=val
 }
 // turnusy
 s tu="" f {
	 s tu=$o(in("arr",2,tu)) i tu="" q
 	 s val=""
 	 i $g(in("arr",2,tu,"dta",1)) s $p(val,":",1)=$p($g(in("arr",2,tu,"dta",1)),"~",1)_"^"_($p($g(in("arr",2,tu,"dta",1)),"~",2))
 	 i $g(in("arr",2,tu,"dta",2)) s $p(val,":",2)=$p($g(in("arr",2,tu,"dta",2)),"~",1)_"^"_($p($g(in("arr",2,tu,"dta",2)),"~",2))
 	 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu,"oddo")=val
 }
 // linky, spoje +
 s cnt="" f {
	 s cnt=$o(in("arr",3,cnt)) i cnt="" q 
 	 s val=$tr($g(in("arr",3,cnt,"dta",1)),"~","^")
 	 i val="" continue
 	 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"S",val)=""
 }
 // linky, spoje -
 s cnt="" f {
	 s cnt=$o(in("arr",4,cnt)) i cnt="" q 
 	 s val=$tr($g(in("arr",4,cnt,"dta",1)),"~","^")
 	 i val="" continue
 	 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"S","-"_val)=""
 }
 // poznamky
 s cnt="" f {
	 s cnt=$o(in("arr",5,cnt)) i cnt="" q 
 	 s ^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"P",cnt)=$g(in("arr",5,cnt))
 }
 // vratim pc pod kterym je doklad ulozen 
 s out("pc")=pc
 //zapis do indexovych globalu
 s err=$$mkIdx(idfa,nmsp,idprac,hrl,spz,pc,1)
 // pokud je obj a vicedenni zajezd doplnim cinnosti VIC a odkaz na planovaci doklad
 i $g(in("dta",6))&($g(in("dta",2))'="") {
	 k arrobj s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj)
 	 s hrlobjfrom=+$g(arrobj("dta",2))
 	 s hrlobjto=+$g(arrobj("dta",33))
 	 i 'hrlobjto s hrlobjto=hrlobjfrom
 	 f hrlvic=(hrlobjfrom+1):1:hrlobjto {
	 	 //zapis VIC pro vozidlo
 	 	 i spz'="-" {
	 	 	 //pokud neni nenabizet
 	 	 	 k myarr s err=$$gCisItm^OBapiED(idfa,nmsp,21,"VIC","",.myarr)
 	 	 	 //pokud neni nenabizet
 	 	 	 i $p($g(myarr("arr","VIC")),"~",3)'=4 {
	 	 	 	 k arrgrf
	 	 	 	 s arrgrf("dta",5)=hrlobjto
	 	 	 	 s err=$$sGrfRz^OBapiED(idfa,nmsp,spz,hrlvic,"VIC",.arrgrf,"")
	 	 	 	 k arrgrf
 	 	 	 }
 	 	 }
 	 	 //zapis VIC pro ridice
 	 	 //pokud neni nenabizet
 	 	 k myarr s err=$$gCisItm^OBapiED(idfa,nmsp,20,"VIC","",.myarr)
 	 	 //pokud neni nenabizet
 	 	 i $p($g(myarr("arr","VIC")),"~",6)'=4 {
	 	 	 s osc="" f {
		 	 	 s osc=$o(in("arr",1,osc)) i osc="" q
 	 	 	  	 i osc'="-" {
	 	 	 	  	 k arrgrf
	 	 	 	 	 s arrgrf("dta",5)=hrlobjto
	 	 	 	  	 s arrgrf("dta",8)=hrlobjfrom
	 	 	 	  	 s err=$$sGrfOs^OBapiED(idfa,nmsp,osc,hrlvic,"VIC",.arrgrf,"")
	 	 	 	  	 k arrgrf
 	 	 	  	 }
 	 	 	 }
 	 	 }
 	 }
 	 k tmparr s tmparr("par",1)=0 s tmparr("arr",10,(idprac_"~"_hrl_"~"_spz_"~"_pc))=""
 	 //pridani odkazu na pln na objednavce a aktualizace stavu objednavky
 	 s err=$$actLinkObj^OBapiED(idfa,nmsp,zp,idobj,.tmparr,"")	 
 }
 // pokud ma doklad pridelene cislo, aktualizuji tiskovy odkaz (^obpy,^obpz - podle globalu se pri tisku se nacita doklad) 
 i +$g(in("dta",1)) {
	 // jedna se o doklad
 	 i '$g(in("dta",5)) {
	 	 // dzva
	 	 i ('$g(in("dta",6))) {
		 	 s val=""
		 	 s $p(val,":",1)=idprac
		 	 s $p(val,":",2)=spz
		 	 s $p(val,":",3)=pc
		 	 s $p(val,":",4)=""
		 	 s $p(val,":",5)=$h
		 	 s ^[nmsp]obpy(idprac,hrl,(+$g(in("dta",1))))=val
	 	 }
 	 	 // sj 
 	 	 i (+$g(in("dta",6))) {
	 	 	 s val=""
	 	 	 s $p(val,":",1)=idprac
	 	 	 s $p(val,":",2)=spz 
	 	 	 s $p(val,":",3)=pc	
	 	 	 s $p(val,":",4)=""
	 	 	 s $p(val,":",5)=$h
	 	 	 s ^[nmsp]obpz(idprac,hrl,+$g(in("dta",1)))=val
 	 	 }
 	 }
 }
 // pokud ma doklad prideleno cislo, predznacim jej
 i +$g(in("dta",1)) {
	 // jedna se o doklad
 	 i '$g(in("dta",5)) {
	 	 k arri m arri("idos")=in("idos")
 	 	 // dzva
 	 	 i ('$g(in("dta",6)))&($g(arrprac("dta",10))) {
	 	 	  s err=$$przPlnDZ^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,.arri,"") zt:+err "merr" s err=""
 	 	 }
 	 	 // sj a je povoleno predznaceni
 	 	 i (+$g(in("dta",6)))&($g(arrprac("dta",15))) {
	 	 	 	s err=$$przPlnSJ^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,.arri,"") zt:+err "merr" s err=""
 	 	 }
 	 }
 }
 //
 q 0
mkIdx(idfa,nmsp,idprac,hrl,rz,pc,par)
 //obsluha indexovych globalu
 // par=0 vymazani / 1 zapis dokladu do indexovych globalu
 //^[nmsp]OBPL(idprac,hrl,"L",os)=jmeno:ns:idprv:kmenrz (pro predtisk dokladu zatim pro zpetnou kompatibilitu) 
 //^[nmsp]OBPL(idprac,hrl,"L",os,rz,pc)=""
 //^[nmsp]OBPL(idprac,hrl,"T",tu,rz,pc)=""
 //^[nmsp]OBPL(idprac,hrl,"O",idobj,rz,pc)=""
 //ridici
 s os="" f {
	 s os=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",os)) i os="" q
	 i 'par k ^[nmsp]OBPL(idprac,hrl,"L",os,rz,pc)
	 i +par s ^[nmsp]OBPL(idprac,hrl,"L",os,rz,pc)=""
 } 
 //turnusy
 s tu="" f {
	 s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"T",tu)) i tu="" q
	 i 'par k ^[nmsp]OBPL(idprac,hrl,"T",tu,rz,pc)
	 i +par s ^[nmsp]OBPL(idprac,hrl,"T",tu,rz,pc)=""
 }
 //objednavky
 s idobj=""
 s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"N",1,"OBJ"))
 i cobj s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(hrl,1),".",3),cobj)
 i idobj'="" {
	 i 'par k ^[nmsp]OBPL(idprac,hrl,"O",idobj,rz,pc)
	 i +par s ^[nmsp]OBPL(idprac,hrl,"O",idobj,rz,pc)=""
 }
 q 0
 //
isPln(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 // s err=$$isPlnDoc(idfa,nmsp,idprac,hrl,spz,pc,in,out) - test na existenci dokladu
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out)
 s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(spz)="" s err="spz=" zt "merr"
 i $g(pc)="" s err="pc=" zt "merr"
 //
 s out=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc))
 q 0
dPln(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 // s err=$$dPlnDoc(idfa,nmsp,idprac,hrl,spz,pc,in,out) - vymazani dokladu
 // in("fullname")=fullname - jmeno, kdo maze pro zapis do kose
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out)
 s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(spz)="" s err="spz=" zt "merr"
 i $g(pc)="" s err="pc=" zt "merr"
 //========
 //promenne
 //========
 s qsj=$$qsj^OBapiED()
 //==========
 //provozovna
 //==========
 k arrset s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrset) zt:+err "merr" s err=""
 s idprv=$g(arrset("dta",1))
 //==
 //zp
 //==
 s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 //==================
 //nastaveni programu
 //==================
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 s tpdel=$g(arrset("arr",6,44)) 	//jak vymazat dz,sj - 0 odstranit z databaze / 1 priznakem
 k arrset
 //============
 //data dokladu
 //============
 k arr s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arr) zt:+err "merr" s err=""
 //===============
 //data objednavky
 //===============
 k arrobj  i $g(arr("dta",6))&($g(arr("dta",2))'="") s err=$$gObj^OBapiED(idfa,nmsp,zp,$g(arr("dta",2)),"",.arrobj)
 //=====================================
 //rrmm zapisu dokladu vychozi podle hrl
 //=====================================
 s dat=$$nd^OBapiED(hrl,0) s rrmm=$p(dat,".",3)#100*100+$p(dat,".",2)
 //===========================================================================
 //uprava rrmm pro sj v pripade, ze je nastaveno cislovani podle data prijezdu
 //===========================================================================
 i ($g(arr("dta",6)))&($g(arr("dta",2))'="")&('(+$g(^[nmsp]OI(idfa,"jb","sj","setobd")))) d
 .i $g(arrobj("dta",33)) s dat=$$nd^OBapiED(arrobj("dta",33),0) s rrmm=$p(dat,".",3)#100*100+$p(dat,".",2)
 //====================
 //doklad je ocislovany
 //====================
 i $g(arr("dta",1))'="" d
 .//====
 .//dzva
 .//====
 .i '$g(arr("dta",6)) d
 ..// kontrola na zablokovane porizovani DZVA
 ..k arrblck
 ..s err=$$gBlockApp^OBapiED(idfa,nmsp,zp,rrmm,"",.arrblck) zt:+err "merr" s err=""
 ..i +$g(arrblck("arr",1,1))=1 k arrblck q
 ..k arrblck
 ..// =======================================
 ..k ^[nmsp]obpy(idprac,hrl,$g(arr("dta",1)))
 ..//predznacene dzva ! nahradit api fci
 ..i $d(^[nmsp]OBD(zp,rrmm,$g(arr("dta",1)))) d
 ...//vymazani z databaze - predznaceny doklad 
 ...i 'tpdel i '+$g(^[nmsp]OBD(zp,rrmm,$g(arr("dta",1)))) d
 ....s inxhrl=$h
 ....s ^[nmsp]OBrusd(zp,rrmm,inxhrl,$g(arr("dta",1)))="pln"
 ....m ^[nmsp]OBrusd(zp,rrmm,inxhrl,$g(arr("dta",1)),"dta")=^[nmsp]OBD(zp,rrmm,$g(arr("dta",1)))
 ....k ^[nmsp]OBD(zp,rrmm,$g(arr("dta",1)))
 ...//zruseni priznakem 
 ...i +tpdel i '+$g(^[nmsp]OBD(zp,rrmm,$g(arr("dta",1)))) s $p(^[nmsp]OBD(zp,rrmm,$g(arr("dta",1))),":",1)=3
 .//==
 .//sj
 .//==
 .i $g(arr("dta",6)) d
 ..// kontrola na zablokovane porizovani SJ
 ..k arrblck
 ..s err=$$gBlockApp^OBapiED(idfa,nmsp,zp,rrmm,"",.arrblck) zt:+err "merr" s err=""
 ..i +$g(arrblck("arr",1,2))=1 k arrblck q
 ..k arrblck
 ..// =====================================
 ..k ^[nmsp]obpz(idprac,hrl,$g(arr("dta",1)))
 ..//predznacene sj ! nahradit api fci
 ..i $d(^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj))) d
 ...i 'tpdel i '+$g(^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj))) d
 ....s inxhrl=$h
 ....s ^[nmsp]OBrusd(zp,rrmm,inxhrl,($g(arr("dta",1))+qsj))="pln"
 ....m ^[nmsp]OBrusd(zp,rrmm,inxhrl,($g(arr("dta",1))+qsj),"dta")=^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj))
 ....k ^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj))
 ...i +tpdel i '+$g(^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj))) s $p(^[nmsp]OBD(zp,rrmm,($g(arr("dta",1))+qsj)),":",1)=3
 // vymazani pripadne vicedenni jizdy
 i $g(arr("dta",6))&($g(arr("dta",2))'="") d
 .s hrlobjfrom=+$g(arrobj("dta",2))
 .s hrlobjto=+$g(arrobj("dta",33)) s:'hrlobjto hrlobjto=hrlobjfrom
 .i hrlobjfrom=hrlobjto q
 .f hrlvic=(hrlobjfrom+1):1:hrlobjto d
 ..//delete VIC pro vozidlo
 ..i spz'="-" s err=$$dGrfRz^OBapiED(idfa,nmsp,spz,hrlvic,"VIC","","")
 ..//delete VIC pro ridice
 ..s osc="" f  s osc=$o(arr("arr",1,osc)) q:osc=""  d
 ...i osc'="-" s err=$$dGrfOs^OBapiED(idfa,nmsp,osc,hrlvic,"VIC","","")
 // vymazani odkazu na planovaci doklad v objednavce
 i $g(arr("dta",6))&($g(arr("dta",2))'="") d
 .k tmparr s tmparr("par",1)=1 s tmparr("arr",10,(idprac_"~"_hrl_"~"_spz_"~"_pc))=""
 .//zruseni odkazu na pln na objednavce a aktualizace stavu objednavky
 .s err=$$actLinkObj^OBapiED(idfa,nmsp,zp,$g(arr("dta",2)),.tmparr,"")
 //vymazani z indexovych globalu
 s err=$$mkIdx(idfa,nmsp,idprac,hrl,spz,pc,0)
 //zapis do kose
 s err=$$sKos^OBapiED(idfa,nmsp,5,(idprac_"|"_hrl_"|"_spz_"|"_pc),$g(in("fullname")),($g(idprac)_"/"_spz_"/"_$$nd^OBapiED(hrl,0)),"",.arr,"") i +err zt
 //vymazani z databaze 
 k ^[nmsp]OBPL(idprac,hrl,"A",spz,pc)
 // 
 s out("stt")=1
 q 0
 //
lPln(idfa,nmsp,in,out)
 // s err=$$lPln(idfa,nmsp,in,out) - vrati data z planovani - podklady pro doklady
 // - in:
 //    in("prv",prv)=""         - hleda jen v provozovne
 //    in("zp",zp)=""           - hleda jen v zp
 //    in("idprac",idprac)=""   - hleda jen v pracovistich
 //    in("osc",osc)=""         - hleda v planech data s ridicem
 //    in("spz",spz)=""         - hleda v planech data s spz
 //    in("jiz","od")           - hleda v planech data s datem jizdy od ... (horlog)
 //    in("jiz","do")           - hleda v planech data s datem jizdy do ... (horlog)
 //    in("tur",tur)            - hleda v planech data s turnusem
 //    in("li",linka)	        - hleda v planech data s turnusem, ktery obsahuje linku
 //    in("ls",linka,spoj)      - hleda v planech data s turnusem, ktery obsahuje linku a spoj
 //    in("obj",idobj)=""		- hleda v planech data s objednavkou
 //    in("tpd")=0/1/2			- hleda podle typu dokladu 0 nebo "" vse / 1 pravidelna (DZVA) / 2 nepravidelna (SJ)
 //    in("glb")=glb 			- je-li definovano, pak je vysledek v @glb
 // - out
 //	   je-li in("glb") vysledek je v @glb@("p",idprac,hrl,spz,pc)=""
 //	   neni-li in("glb") je out=wrk a naplni global ^CacheTempJB(wrk,"p",idprac,hrl,spz,pc)=""
 n (idfa,nmsp,in,out)
 s $zt="err" s out=""
 s myglb=$g(in("glb"))
 i myglb="" s out=$$gWrkJB^OBapiED() s myglb="^CacheTempJB("_out_")"
 k @myglb
 s idprac="" f  s idprac=$o(^[nmsp]OBPL(idprac)) q:idprac=""  d
 .i $d(in("idprac")) q:'$d(in("idprac",idprac))
 .k arrset s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrset) zt:+err "merr" s err=""
 .s prv=$g(arrset("dta",1))
 .s err=$$mkZP^OBapiED(idfa,prv,"","",.zp) zt:+err "merr" s err=""
 .i $g(zp)="" q
 .i $d(in("prv")) q:'$d(in("prv",prv))
 .i $d(in("zp"))  q:'$d(in("zp",zp))
 .s hrl="" s:+$g(in("jiz","od")) hrl=$g(in("jiz","od"))-.1
 .f  s hrl=$o(^[nmsp]OBPL(idprac,hrl)) q:hrl=""  d
 ..i +$g(in("jiz","do")) q:hrl>+$g(in("jiz","do"))
 ..s spz="" f  s spz=$o(^[nmsp]OBPL(idprac,hrl,"A",spz)) q:spz=""  d
 ...i $d(in("spz")) q:'$d(in("spz",spz))
 ...s pc="" f  s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc)) q:pc=""  d
 ....//omezeni na typ dokladu (vse / dzva / sj)
 ....//dzva
 ....i ($g(in("tpd"))=1)&(+$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj"))) q
 ....//sj
 ....i ($g(in("tpd"))=2)&('$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj"))) q
 ....i $d(in("osc")) s isok=0 d  q:isok=0
 .....s osc="" f  s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) q:(osc="")!(isok)  s:$d(in("osc",osc)) isok=1
 .....//bez osc
 .....i $d(in("osc","-")) i $o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",""))="" s isok=1
 ....i $d(in("tur")) s isok=0 d  q:isok=0
 .....s tur="" f  s tur=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tur)) q:(tur="")!(isok)  s:$d(in("tur",tur)) isok=1
 ....i ($d(in("ls"))!$d(in("li"))) k isok s isok=0 d  q:isok=0
 .....//kontrola turnusu
 .....s tur="" f  s tur=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tur)) q:(tur="")!(isok)  d
 ......k arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tur,hrl,"",.arrtur)
 ......s cnt="" f  s cnt=$o(arrtur("arr","tur",cnt)) q:(cnt="")  d
 .......q:($g(arrtur("arr","tur",cnt,"dta",2))'=3)
 .......s li=$g(arrtur("arr","tur",cnt,"dta",5)) q:li=""
 .......s sp=$g(arrtur("arr","tur",cnt,"dta",6)) q:sp=""
 .......i $d(in("ls")) i $d(in("ls",li,sp)) s isok=1 s isok(li,sp)=""
 .......i $d(in("li")) i $d(in("li",li)) s isok=1 s isok(li,sp)=""
 ......k arrtur
 .....//kontrola -+ ls
 .....s ls="" f  s ls=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"S",ls)) q:ls=""  d
 ......i ls>0 d
 .......i ls["." s li=$p(ls,".",1) s sp=$p(ls,".",2)
 .......i ls["^" s li=$p(ls,"^",1) s sp=$p(ls,"^",2)
 .......i (li'="")&(sp'="") i $d(in("ls",li,sp)) s isok=1 s isok(li,sp)=""
 ......i ls<0 d
 .......i ls["." s li=($p(ls,".",1)*(-1)) s sp=$p(ls,".",2)
 .......i ls["^" s li=($p(ls,"^",1)*(-1)) s sp=$p(ls,"^",2)
 .......i (li'="")&(sp'="") i $d(in("ls",li,sp)) k isok(li,sp)
 .....i $o(isok(""))="" s isok=0
 ....//kontrola objednavky
 ....i $d(in("obj")) k isok s isok=0 d  q:isok=0
 .....s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))
 .....i cobj d
 ......s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(hrl,1),".",3),cobj)
 ......i $d(in("obj",idobj)) s isok=1
 ....s @myglb@("p",idprac,hrl,spz,pc)=""
 q 0
tstCPL
 k arrpln
 s err=$$gPln^OBapiED("VS_CSAD","USER","LUHACOVICE",$$dn^OBapiED("20.3.2012"),"3Z08518",1,"",.arrpln)
 s err=$$chckPln("VS_CSAD","USER","LUHACOVICE",$$dn^OBapiED("20.3.2012"),"3Z08518",3,.arrpln,.out)
 zw out
 //zw @(out("dta",1))
 q
chckPln(idfa,nmsp,idprac,hrl,rz,pc,in,out)
 // s err=$$chckPln(idfa,nmsp,idprac,hrl,rz,pc,in,out) - kontrola plan. dokladu na obsazeni
 // in(data plan.dokladu) ve strukture get/save
 // in("oldiddoc")=idprac~hrl~rz~id ... puvodni id dokladu (pokud se meni - prepis RZ)
 // out("arr",1,rz,"msg",cnt)=err~popis
 // out("arr",2,os,"msg",cnt)=err~popis
 // out("arr",3,iddoc)=prRz~prOs id dokladu (iddoc=idprac|hrl|rz|pc), které se prekryvaji prOs=0/1 prekryv os, prRz=0/1 prekryv rz
 n (idfa,nmsp,idprac,hrl,rz,pc,in,out) s $zt="err" k out
 s dz=$$gFaDz^OBapiED(idfa) 
 s wrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrk)
 s wrkch=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkch)
 // vyhledam na doklade os a rz, pro ktere budu kontrolovat obsah
 i (rz'="")&(rz'="-") s ^||wrk.ALVA.AD(wrk,1,rz)=""
 // nekontroluji prekryti vozidel - na nastaveni
 i $$gMainSetOne^OBapiED(idfa,nmsp,7,7)=1 k ^||wrk.ALVA.AD(wrk,1)
 // ============================================
 s os="" f  s os=$o(in("arr",1,os)) q:os=""  s:(os'="-") ^||wrk.ALVA.AD(wrk,2,os)=""
 // neni rz a os, neni co kontrolovat
 i ($o(^||wrk.ALVA.AD(wrk,1,""))="")&($o(^||wrk.ALVA.AD(wrk,2,""))="") q 0
 // projdu plan pro hrl a vyhledam pro os a rz naplanovane doklady
 s tmpidprac="" f  s tmpidprac=$o(^[nmsp]OBPL(tmpidprac)) q:tmpidprac=""  d
 .s tmprz="" f  s tmprz=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",tmprz)) q:tmprz=""  d
 ..s tmppc="" f  s tmppc=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",tmprz,tmppc)) q:tmppc=""  d
 ...s zask=+$g(^[nmsp]OBPL(tmpidprac,hrl,"A",tmprz,tmppc,"ZSK"))
 ...i $d(^||wrk.ALVA.AD(wrk,1,tmprz)) s:'zask ^||wrk.ALVA.AD(wrk,1,tmprz,(tmpidprac_"|"_hrl_"|"_tmprz_"|"_tmppc))=""
 ...s tmpos="" f  s tmpos=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",tmprz,tmppc,"R",tmpos)) q:tmpos=""  d
 ....i $d(^||wrk.ALVA.AD(wrk,2,tmpos)) s ^||wrk.ALVA.AD(wrk,2,tmpos,(tmpidprac_"|"_hrl_"|"_tmprz_"|"_tmppc))=""
 // vymazu puvodni (editovanej) doklad a aktualni doklad
 s val=$g(in("oldiddoc"))
 s tmprz="" f  s tmprz=$o(^||wrk.ALVA.AD(wrk,1,tmprz)) q:tmprz=""  d
 .k ^||wrk.ALVA.AD(wrk,1,tmprz,($p(val,"~",1)_"|"_$p(val,"~",2)_"|"_$p(val,"~",3)_"|"_$p(val,"~",4)))
 .k ^||wrk.ALVA.AD(wrk,1,tmprz,(idprac_"|"_hrl_"|"_rz_"|"_pc))
 s os="" f  s os=$o(^||wrk.ALVA.AD(wrk,2,os)) q:os=""  d
 .k ^||wrk.ALVA.AD(wrk,2,os,($p(val,"~",1)_"|"_$p(val,"~",2)_"|"_$p(val,"~",3)_"|"_$p(val,"~",4)))
 .k ^||wrk.ALVA.AD(wrk,2,os,(idprac_"|"_hrl_"|"_rz_"|"_pc))
 // projdu rz a os a provedu kontrolu, zda se neco casove nekrizi
 f idtyp=1,2 d
 .//pro zaskolovani nekontroluju vozidla
 .i ((+$g(in("dta",12)))&(idtyp=1)) q
 .s idpol="" f  s idpol=$o(^||wrk.ALVA.AD(wrk,idtyp,idpol)) q:idpol=""  d
 ..k ^||wrk.ALVA.AD(wrkch)
 ..s iddoc="" f  s iddoc=$o(^||wrk.ALVA.AD(wrk,idtyp,idpol,iddoc)) q:iddoc=""  d
 ...s tmpidprac=$p(iddoc,"|",1) s tmprz=$p(iddoc,"|",3) s tmppc=$p(iddoc,"|",4)
 ...//rozbaleni planu do pole
 ...k arro s err=$$mkPlnTimeArr(idfa,nmsp,tmpidprac,hrl,tmprz,tmppc,idtyp,"",.arro)
 ...i +err d  q
 ....s out("arr",idtyp,idpol,"msg",$i(out("arr",idtyp,idpol,"msg")))="chyba při kontrole plánu: "_$tr(err,"~","/")
 ....s err=""
 ...s glb=$g(arro("dta",1))
 ...//kontrola polozky
 ...s mm="" f  s val="" s mm=$o(@glb@(mm),1,val) q:mm=""  d
 ....//do zaznamu doplnim iddoc
 ....s $li(val,100)=iddoc 
 ....i $d(^||wrk.ALVA.AD(wrkch,0,mm)) d
 .....s ^||wrk.ALVA.AD(wrkch,1,mm,0)=^||wrk.ALVA.AD(wrkch,0,mm) //puvodni
 .....s ^||wrk.ALVA.AD(wrkch,1,mm,1)=val						//nova
 ....s ^||wrk.ALVA.AD(wrkch,0,mm)=val
 ...k @glb
 ..//aktualni doklad
 ..k arro s err=$$mkPlnTimeArr(idfa,nmsp,idprac,hrl,rz,pc,idtyp,.in,.arro) zt:+err "merr" s err=""
 ..s glb=$g(arro("dta",1))
 ..//kontrola polozky
 ..s mm="" f  s val="" s mm=$o(@glb@(mm),1,val) q:mm=""  d
 ...i $d(^||wrk.ALVA.AD(wrkch,0,mm)) d
 ....s ^||wrk.ALVA.AD(wrkch,1,mm,0)=^||wrk.ALVA.AD(wrkch,0,mm) //puvodni
 ....s ^||wrk.ALVA.AD(wrkch,1,mm,1)=val						   //nova
 ...s ^||wrk.ALVA.AD(wrkch,0,mm)=val
 ..k @glb
 ..//vypis hlaseni
 ..s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkch,1,mm)) q:mm=""  d
 ...f tmpmm=mm:1 q:'$d(^||wrk.ALVA.AD(wrkch,1,tmpmm))  d
 ....s tmp0=^||wrk.ALVA.AD(wrkch,1,tmpmm,0) //puvodni
 ....s tmp1=^||wrk.ALVA.AD(wrkch,1,tmpmm,1) //nova
 ....//cislo prekryvajiciho se dokladu
 ....s iddoc=""
 ....i $lg(tmp0,100)'="" s iddoc=$lg(tmp0,100)
 ....i $lg(tmp1,100)'="" s iddoc=$lg(tmp1,100)
 ....//^||wrk.ALVA.AD(wrkm,mm)=lb(idtyp,idcin,tmod,tmto,li,sp,idtu,idobj,idpln)
 ....s idtyp0=$lg(tmp0,1) s idpln0=$lg(tmp0,9) s idtu0=$lg(tmp0,7) s idobj0=$lg(tmp0,8)
 ....s idtyp1=$lg(tmp1,1) s idpln1=$lg(tmp1,9) s idtu1=$lg(tmp1,7) s idobj1=$lg(tmp1,8)
 ....i idtyp0=0 s dsc0=$lg(idpln0,1)_"/"_$lg(idpln0,3)_", T"_$lg(idtu0,2)
 ....i idtyp0=1 s dsc0=$lg(idpln0,1)_"/"_$lg(idpln0,3)_", O"_$lg(idobj0,2)
 ....i idtyp1=0 s dsc1=$lg(idpln1,1)_"/"_$lg(idpln1,3)_", T"_$lg(idtu1,2)
 ....i idtyp1=1 s dsc1=$lg(idpln1,1)_"/"_$lg(idpln1,3)_", O"_$lg(idobj1,2)
 ....s ^||wrk.ALVA.AD(wrkch,2,mm,tmpmm)=dsc0_" x "_dsc1
 ....i iddoc'="" s ^||wrk.ALVA.AD(wrkch,2,mm,tmpmm,"d")=iddoc
 ....k ^||wrk.ALVA.AD(wrkch,1,tmpmm)
 ..s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkch,2,mm)) q:mm=""  d
 ...k dsc s dsc=""
 ...s mmto="" f  s mmto=$o(^||wrk.ALVA.AD(wrkch,2,mm,mmto)) q:mmto=""  d
 ....i $g(^||wrk.ALVA.AD(wrkch,2,mm,mmto))'="" d
 .....s iddoc=$g(^||wrk.ALVA.AD(wrkch,2,mm,mmto,"d"))
 .....i iddoc'="" s $p(out("arr",3,iddoc),"~",idtyp)=1
 .....i $d(dsc(^||wrk.ALVA.AD(wrkch,2,mm,mmto))) q
 .....i dsc'="" s dsc=dsc_";"
 .....s dsc=dsc_$g(^||wrk.ALVA.AD(wrkch,2,mm,mmto))
 .....s dsc($g(^||wrk.ALVA.AD(wrkch,2,mm,mmto)))=""
 ...s mmto=$o(^||wrk.ALVA.AD(wrkch,2,mm,""),-1)
 ...s out("arr",idtyp,idpol,"msg",$i(out("arr",idtyp,idpol,"msg")))="překrytí v "_$j($$mh^OBapiED(mm),5,2)_" - "_$j($$mh^OBapiED(mmto),5,2)_" - "_dsc
 ..k ^||wrk.ALVA.AD(wrkch)
 ..//kontrola na grafikon
 ..//rz
 ..i idtyp=1 d
 ...k arri,arro s arri("rz",idpol)="" s arri("par",1)=0
 ...s err=$$lGrfRz^OBapiED(idfa,nmsp,hrl,hrl,.arri,.arro) zt:+err "merr"
 ...//arro=wrk, vysledek je v ^CacheTempJB(wrk,dz,rz,hrl,grf)=""
 ...i $g(arro) d
 ....s val=""
 ....s idgrf="" f  s idgrf=$o(^CacheTempJB(arro,dz,idpol,hrl,idgrf)) q:idgrf=""  d
 .....s val=val_idgrf_";"
 ....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 ....i val'="" s out("arr",idtyp,idpol,"msg",$i(out("arr",idtyp,idpol,"msg")))="grafikon: "_val
 ..//os
 ..i idtyp=2 d
 ...k arri,arro s arri("os",idpol)="" s arri("par",1)=0
 ...s err=$$lGrfOs^OBapiED(idfa,nmsp,hrl,hrl,.arri,.arro) zt:+err "merr"
 ...//arro=wrk, vysledek je v ^CacheTempJB(wrk,dz,osc,hrl,grf)=""
 ...i $g(arro) d
 ....s val=""
 ....s idgrf="" f  s idgrf=$o(^CacheTempJB(arro,dz,idpol,hrl,idgrf)) q:idgrf=""  d
 .....s val=val_idgrf_";"
 ....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 ....i val'="" s out("arr",idtyp,idpol,"msg",$i(out("arr",idtyp,idpol,"msg")))="grafikon: "_val
 q 0
mkPlnTimeArr(idfa,nmsp,idprac,hrl,rz,pc,idtyp,in,out)
 // idtyp=1 kontrola pro vozidla/ 2 kontrola pro ridice
 // out=global s vysledkem
 // ^||wrk.ALVA.AD(wrkm,mm)=lb(idtyp,idcin,tmod,tmto,li,sp,idtu,idobj,idpln)
 n (idfa,nmsp,idprac,hrl,rz,pc,idtyp,in,out) s $zt="err" k out
 s wrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrk)
 k out s out("dta",1)="^||wrk.ALVA.AD("_wrk_")" s out("dta",2)=wrk
 s dz=$$gFaDz^OBapiED(idfa) s qsj=$$qsj^OBapiED()
 //zp
 s zp=$g(^[nmsp]obpx(idprac))
 //plan.doklad z databaze
 i $o(in(""))="" k arr s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,rz,pc,"",.arr) zt:+err "merr" s err=""
 //plan doklad z in
 i $o(in(""))'="" k arr m arr=in
 //turnusy
 //arr("dta",6)= priznak typu dokladu 0 dzva
 //arr("arr",2,tu,"dta",1)=liod~spod
 //arr("arr",2,tu,"dta",2)=lido~spdo
 //arr("arr",3,cnt,"dta",1)=li~sp (plus)
 //arr("arr",4,cnt,"dta",1)=li~sp (minus)
 s idtu="" f  s idtu=$o(arr("arr",2,idtu)) q:idtu=""  d
 .s lsfr=$g(arr("arr",2,idtu,"dta",1)) s lifr=$p(lsfr,"~",1) s spfr=$p(lsfr,"~",2)
 .s lsto=$g(arr("arr",2,idtu,"dta",2)) s lito=$p(lsto,"~",1) s spto=$p(lsto,"~",2)
 .k ver s err=$$gTimeVariantTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.ver) s err=""
 .i '$g(ver) q
 .k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,ver,"",.arrtu) zt:+err "merr" s err=""
 .//vymazu spoje -
 .s cnt="" f  s cnt=$o(arr("arr",4,cnt)) q:cnt=""  d
 ..s li=$p($g(arr("arr",4,cnt,"dta",1)),"~",1) s sp=$p($g(arr("arr",4,cnt,"dta",1)),"~",2)
 ..s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:(tm="")  d
 ...q:$g(arrtu("arr","tur",tm,"dta",2))'=3
 ...i (li=+$g(arrtu("arr","tur",tm,"dta",5)))&(sp=+$g(arrtu("arr","tur",tm,"dta",6))) k arrtur("arr","tur",tm)
 .//uprava lsod - lsdo
 .s tmfr=$o(arrtu("arr","tur",""))
 .s tmto=$o(arrtu("arr","tur",""),-1)
 .i (lifr'="")!(lito'="") d
 ..// je-li nastavena linka.spoj fr,to, dohledam tmfr,tmto
 ..s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:(tm="")  d
 ...q:$g(arrtu("arr","tur",tm,"dta",2))'=3
 ...i (lifr=+$g(arrtu("arr","tur",tm,"dta",5)))&(spfr=+$g(arrtu("arr","tur",tm,"dta",6))) s tmfr=tm
 ...i (lito=+$g(arrtu("arr","tur",tm,"dta",5)))&(spto=+$g(arrtu("arr","tur",tm,"dta",6))) s tmto=tm
 ..//oriznuti turnusu
 ..s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:(tm="")  d
 ...i tm<tmfr k arrtu("arr","tur",tm)
 ...i tm>tmto k arrtu("arr","tur",tm)
 .//rozbaleni do casoveho pole
 .//^||wrk.ALVA.AD(wrkm,mm)=lb(idtyp,idcin,tmod,tmto,li,sp,idtu,idobj,idpln)
 .s mmbeg="" f  s mmbeg=$o(arrtu("arr","tur",mmbeg)) q:mmbeg=""  d
 ..s acthrl=(hrl+(mmbeg\1440))
 ..s mmend=$g(arrtu("arr","tur",mmbeg,"dta",1))
 ..s idcin=$g(arrtu("arr","tur",mmbeg,"dta",2))
 ..i idcin=1 q
 ..i idcin=2 q
 ..i idcin=8 q
 ..s li="" s sp=""
 ..i idcin=3 s li=$g(arrtu("arr","tur",mmbeg,"dta",5)) s sp=$g(arrtu("arr","tur",mmbeg,"dta",6))
 ..// rozbaleni cinnosti do minutoveho pole
 ..f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 ...s ^||wrk.ALVA.AD(wrk,mm)=$lb(0,idcin,mmbeg,mmend,li,sp,$lb(zp,idtu,ver),"",$lb(idprac,hrl,rz,pc))
 ..//pro spoj vnitrni pauzy
 ..i idcin=3 d
 ...s mapr=$g(arrtu("arr","tur",mmbeg,"dta",7))
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) zt:+err "merr" s err=""
 ....//pauza
 ....s relmmpbeg="" f  s relmmpbeg=$o(arrsp("arr","pau",relmmpbeg)) q:relmmpbeg=""  d
 .....s mmp=+$g(arrsp("arr","pau",relmmpbeg))
 .....// aktualni zacatek a konec pauzy
 .....s mmpbeg=mmbeg+mapr+relmmpbeg		//pauzu beru od zacatku spoje v prubehu, muze byt posunut
 .....s mmpend=mmpbeg+mmp				//konec pauzy 
 .....// vytvoreni okna pro pauzu
 .....f mm=($j(mmpbeg,0,0)+1):1:$j(mmpend,0,0) d
 ......k ^||wrk.ALVA.AD(wrk,mm)
 //====================================================================
 //kontrola vozidla, z prubehu vymazu cinnosti pred a po posledni jizde
 //====================================================================
 i idtyp=1 {
	 f par=1,-1 {
		s quit=0
	 	s mm="" f {
		 	s mm=$o(^||wrk.ALVA.AD(wrk,mm),par) i (mm="")!(quit) q
		 	s val=$g(^||wrk.ALVA.AD(wrk,mm))
		 	s idcin=$lg(val,2)
		 	//  sp        prist     odst      prej      rezij  
		 	i (idcin=3)!(idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) s quit=1 continue
		 	k ^||wrk.ALVA.AD(wrk,mm)
	 	}
	 } 
 }
 //sj
 //arr("dta",6)= priznak typu dokladu 1 sj
 //arr("dta",2)=obj
 i $g(arr("dta",2))'="" d
 .s idobj=$g(arr("dta",2))
 .k arrobj s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj) zt:+err "merr" s err=""
 .s mmbeg=$g(arrobj("dta",30))
 .s hrlto=$g(arrobj("dta",33)) s:'hrlto hrlto=hrl
 .s mmend=$g(arrobj("dta",34)) s:'mmend mmend=mmbeg+1
 .s mmend=mmend+((hrlto-hrl)*1440)
 .f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 ..s ^||wrk.ALVA.AD(wrk,mm)=$lb(1,1,mmbeg,mmend,"","","",$lb(zp,idobj),$lb(idprac,hrl,rz,pc))
 q 0
goTST()
 s tm=$ZTIMESTAMP
 f i=1:1:100000 d
 .s a=""
 .f j=1:1:100 d
 ..//s $li(a,j)=j
 ..s $p(a,"~",j)=j
 .f j=1:1:100 d
 ..//s b=$lg(a,j)
 ..s b=$p(a,"~",j)
 w !,$ZABS($p($ZTIMESTAMP,",",2)-$p(tm,",",2))
 q 0
goMPD()
 s tm=$ZTIMESTAMP
 f i=1:1:1 w $$mkPlnData("VS_CSAD","USER",$$dn^OBapiED("1.8.2011"),$$dn^OBapiED("30.8.2011"),.in,.out) //zw @out("dta",1)
 w !,$ZABS($p($ZTIMESTAMP,",",2)-$p(tm,",",2))
 q 0
mkPlnResr(idfa,nmsp,idprac,hrl,in,out)
 //in:
 //in("par",1)="" ... 0 seznam aut / 1 seznam lidi
 //in(1,os)="" ... os pro plan. pracoviste (vyhledane)
 //in(2,rz)="" ... rz pro plan. pracoviste (vyhledane)
 //in(3,tu)="" ... turnusy pro plan.pracoviste (vyhledane)
 //in(4,io)="" ... objednavky pro plan.pracoviste (vyhledane)
 //out:
 //^||wrk.ALVA.AD(wrk,1,os,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 //^||wrk.ALVA.AD(wrk,2,rz,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 //^||wrk.ALVA.AD(wrk,3,tu)=$lb(cntos,cntrz,dsc1,dsc2,idtu,posila,neobsazovat)
 //^||wrk.ALVA.AD(wrk,3,tu,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc,zask)
 //^||wrk.ALVA.AD(wrk,4,idobj)=$lb(cntos,cntrz,dsc1,dsc2,idobj,nuzal,typbus)
 //^||wrk.ALVA.AD(wrk,4,idobj,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc)
 //
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err"
 s wrk=$$gWrkALVAAD^OBapiED() k out s out("dta",1)="^||wrk.ALVA.AD("_wrk_")" s out("dta",2)=wrk
 s dz=$$gFaDz^OBapiED(idfa) s qsj=$$qsj^OBapiED()
 //zp
 s zp=$g(^[nmsp]obpx(idprac))
 //prepis zdroju
 f cnt=1:1:4 m ^||wrk.ALVA.AD(wrk,cnt)=in(cnt)
 //aktualni pracoviste, oznaceni pouziteho
 s rz="" f  s rz=$o(^[nmsp]OBPL(idprac,hrl,"A",rz)) q:rz=""  d
 .s pc="" f  s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) q:pc=""  d
 ..//typ dokladu 0 dzva / 1 sj
 ..s typdoc=$d(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"sj"))
 ..//zaskolovani
 ..s zask=+$g(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"ZSK"))
 ..s dsc1="" s dsc2="" s posiltu="" s neobstu=""
 ..// pole os
 ..s lbosc="" s cntos=0 s os="" f  s os=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",os)) q:os=""  d
 ...s cntos=cntos+1 s $li(lbosc,cntos)=os
 ..//zapis pouzitych turnusu - dzva
 ..i 'typdoc d
 ...s tu="" f  s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"T",tu)) q:tu=""  d
 ....s ^||wrk.ALVA.AD(wrk,3,tu,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc,zask)
 ....s hrltu=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1)
 ....i hrltu d
 .....s val=$g(^[nmsp]OBT(zp,tu,hrltu))
 .....s dsc1=dsc1_$tr($j($p(val,":",5),0,2),".",":")_"-"_$tr($j($p(val,":",6),0,2),".",":")_","
 .....s dsc2=dsc2_tu_","
 ..//zapis pouzitych objednavek
 ..i +typdoc d
 ...s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"N",1,"OBJ"))
 ...i cobj d
 ....s rr=+$p($$nd^OBapiED(hrl,1),".",3)
 ....s idobj=$$wrapIdObj^OBapiED(rr,cobj)
 ....s ^||wrk.ALVA.AD(wrk,4,idobj,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc)
 ....i cobj d
 .....s val=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj))
 .....s dsc1=dsc1_$tr($j($p(val,":",30),0,2),".",":")_"-"_$tr($j($p(val,":",34),0,2),".",":")_","
 .....s dsc2=dsc2_"o"_idobj_","
 ..i $e(dsc1,$l(dsc1))="," s dsc1=$e(dsc1,1,$l(dsc1)-1)
 ..i $e(dsc2,$l(dsc2))="," s dsc2=$e(dsc2,1,$l(dsc2)-1)
 ..//zapis pouzitych rz 
 ..i rz'="-" s ^||wrk.ALVA.AD(wrk,2,rz,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 ..//zapis pouzitych os
 ..s os="" f  s os=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",os)) q:os=""  d
 ...s ^||wrk.ALVA.AD(wrk,1,os,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 // ostatni pracoviste
 // pracoviste z aktualni provozovny - kontrola, zda neni nekde naplanovan turnus/objednavka
 // pracoviste z ostatnich pracovist - kontrola, zda neni nekde pouzit os,rz 
 s tmpidprac="" f  s tmpidprac=$o(^[nmsp]OBPL(tmpidprac)) q:tmpidprac=""  d
 .i tmpidprac=idprac q								//ne vlastni pracoviste
 .s tmpzp=$g(^[nmsp]obpx(tmpidprac))				//zp
 .s rz="" f  s rz=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",rz)) q:rz=""  d
 ..s pc="" f  s pc=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc)) q:pc=""  d
 ...//typ dokladu 0 dzva / 1 sj
 ...s typdoc=$d(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"sj"))
 ...//zaskolovani
 ...s zask=+$g(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"ZSK"))
 ...s dsc1=tmpidprac s dsc2=tmpidprac
 ...// pole os
 ...s lbosc="" s cntos=0
 ...s os="" f  s os=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"R",os)) q:os=""  d
 ....s cntos=cntos+1 s $li(lbosc,cntos)=os
 ...// je rz, zapisu praci
 ...i $d(^||wrk.ALVA.AD(wrk,2,rz)) s ^||wrk.ALVA.AD(wrk,2,rz,tmpidprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 ...//ridici
 ...s os="" f  s os=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"R",os)) q:os=""
 ....//je os, zapisu praci
 ....i $d(^||wrk.ALVA.AD(wrk,1,os)) s ^||wrk.ALVA.AD(wrk,1,os,tmpidprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(dsc1,dsc2)
 ...//dal pouze vlastni provoz
 ...i (zp#100)'=(tmpzp#100) q
 ...//turnusy 
 ...i 'typdoc d
 ....s tu="" f  s tu=$o(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"T",tu)) q:tu=""  d
 .....i '$d(^||wrk.ALVA.AD(wrk,3,tu)) q
 .....s ^||wrk.ALVA.AD(wrk,3,tu,tmpidprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc,zask)
 ...//zapis pouzitych objednavek
 ...i +typdoc d
 ....s cobj=$g(^[nmsp]OBPL(tmpidprac,hrl,"A",rz,pc,"N",1,"OBJ"))
 ....i cobj d
 .....s idobj=$$wrapIdObj^OBapiED(+$p($$nd^OBapiED(hrl,1),".",3),cobj)
 .....i '$d(^||wrk.ALVA.AD(wrk,4,idobj)) q
 .....s ^||wrk.ALVA.AD(wrk,4,idobj,idprac_"|"_hrl_"|"_rz_"|"_pc)=$lb(cntos,lbosc)
 // doplneni udaju k turnusum
 s tu="" f  s tu=$o(^||wrk.ALVA.AD(wrk,3,tu)) q:tu=""  d
 .s cntos=1 s cntrz=1 s dsc1="" s dsc2="" s myidtu="" s posiltu="" s neobstu=""
 .s hrltu=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1)
 .i hrltu d
 ..s myidtu=zp_"|"_tu_"|"_hrltu
 ..s val=$g(^[nmsp]OBT(zp,tu,hrltu))
 ..s cntos=+$g(^[nmsp]OBT(zp,tu,hrltu,"pocrid")) s:'cntos cntos =1
 ..s cntrz=1
 ..s dsc1=$$fhm^OBapiED($p(val,":",5))
 ..s mmf="" f  s valtu="" s mmf=$o(^[nmsp]OBT(zp,tu,hrltu,mmf),1,valtu) q:(mmf="")!(mmf?.a)  d
 ...// preruseni odpocinek  delena smena
 ...i ($p(valtu,":",2)=12)!($p(valtu,":",2)=15)!($p(valtu,":",2)=16) d
 ....s dsc1=dsc1_"-"_$$fhm^OBapiED($$mh^OBapiED(mmf#1440))
 ....s dsc1=dsc1_","_$$fhm^OBapiED($$mh^OBapiED(($p(valtu,":",1)#1440)))
 ..s dsc1=dsc1_"-"_$$fhm^OBapiED($p(val,":",6))
 ..s cnt="" f  s tmpval="" s cnt=$o(^[nmsp]OBT(zp,tu,hrltu,"CH",cnt),1,tmpval) q:cnt=""  d
 ...s dsc2=dsc2_$g(tmpval)_"/"
 ..s posiltu=+$p(val,":",3)
 ..s neobstu=+$p(val,":",64)
 .i $e(dsc2,$l(dsc2))="/" s dsc2=$e(dsc2,1,$l(dsc2)-1) 
 .s ^||wrk.ALVA.AD(wrk,3,tu)=$lb(cntos,cntrz,dsc1,dsc2,myidtu,+posiltu,+neobstu)
 // je inicializovana pokladna (kontrola zaplacenych zaloh)
 s ispokl=($$InitPOKL^ALVAPOKLADNAapi(idfa,nmsp)=1)
 // doplneni udaju k objednavkam
 s idobj="" f  s idobj=$o(^||wrk.ALVA.AD(wrk,4,idobj)) q:idobj=""  d
 .s cntos=1 s cntrz=1 s dsc1="" s dsc2="" s idsta="" s idtpd="" s hrloj="" s myidobj="" s nuzal=0 s typbus=""
 .s rr=$$unwrapIdObj^OBapiED(idobj,1) s cobj=$$unwrapIdObj^OBapiED(idobj,2)
 .i cobj d
 ..s myidobj=(zp_"|o|"_rr_"|"_cobj)
 ..s val=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj))
 ..s idsta=$p(val,":",1)
 ..s hrloj=$p(val,":",2)
 ..s hrlpr=$p(val,":",33) s:+hrlpr hrlpr=$$dn^OBapiED(hrlpr) s:'hrlpr hrlpr=hrloj
 ..s idtpd=$p(val,":",64)
 ..s cntos=$p(val,":",40) s:'cntos cntos=1
 ..s cntrz=$p(val,":",37) s:'cntrz cntrz=1
 ..s dsc1=$$fhm^OBapiED($p(val,":",30))_"-"_$$fhm^OBapiED($p(val,":",34))
 ..i hrloj'=hrlpr s $p(dsc1,"-",2)=$p($$nd^OBapiED(hrlpr,0),".",1,2)_"."_$p(dsc1,"-",2)							//datum do pro vicedenni
 ..s:$g(^[nmsp]OBOBJ(zp,"O",rr,cobj,"k"))'="" $p(dsc2,"/",1)=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj,"k"))				// kam
 ..s:$p(val,":",28)'="" $p(dsc2,"/",2)=$tr($j($p(val,":",30),0,2),".",":")_" "_$p(val,":",28)  					// pristaveni
 ..s:$p(val,":",4)'="" $p(dsc2,"/",3)=$p(val,":",4) 															// prepravce
 ..s:$p(val,":",31) $p(dsc2,"/",4)=$p(val,":",31)																// osob
 ..//do popisu pocet ridicu
 ..i cntos>1 s dsc2=+cntos_"Ř! "_dsc2
 ..s typbus=$tr($p(val,":",36),"#",",")
 ..i (ispokl) d
 ...s idzal="" f  s idzal=$o(^[nmsp]OBOBJ(zp,"O",rr,cobj,"ZalohyDN",idzal)) q:idzal=""  d
 ....s idfak=$tr($p(idzal,"^",1),"~","#") q:idfak=""
 ....k arri,arro s arri("IdFak",idfak)=""
 ....s err=$$AdvInvPaidList^ALVAPOKLADNAapi(idfa,nmsp,.arri,.arro) s err=""
 ....i $g(arro("IdFak",idfak))="" s nuzal=1
 .//kontrola, zda objednavku zobrazit
 .i +idsta=1 k ^||wrk.ALVA.AD(wrk,4,idobj) q         // stav zruseno
 .i +idsta=4 k ^||wrk.ALVA.AD(wrk,4,idobj) q         // stav vyfakturovano (preprodano)
 .i +idtpd k ^||wrk.ALVA.AD(wrk,4,idobj) q           // typ dopravy = cizi - preprodano
 .i +hrloj'=+hrl k ^||wrk.ALVA.AD(wrk,4,idobj) q     // neni totozny datum
 .s ^||wrk.ALVA.AD(wrk,4,idobj)=$lb(cntos,cntrz,dsc1,dsc2,myidobj,nuzal,typbus,hrlpr)
 //historie + vicedenni jizda
 q 0
mkPlnData(idfa,nmsp,hrlfrom,hrlto,in,out)
 //in("os",os)=""		... jen os (filtr)
 //in("rz",rz)="" 		... jen rz (filtr)
 //in("par",1)=0/1 		... prohledavani planu 0 ne / 1 ano (neni-li def, pak 1 ano)
 //in("par",2)=0/1 		... prohledavani gr.os 0 ne / 1 ano (neni-li def, pak 1 ano)
 //in("par",3)=0/1 		... prohledavani gr.rz 0 ne / 1 ano (neni-li def, pak 1 ano)
 //in("par",4,hrl)=""	... pro hrl vratim rozpis turnusu
 // podle RZ
 // plan                                                1     2   3  4      5      6            7        8        9   10   11 12  13  14  15        16  17         18          19              20     21
 //^||wrk.ALVA.AD(wrk,1,rz,hrl,1,idprac|hrl|spz|pc)=$lb(hrlto,min,km,typpln,typdoc,zp|rrmm|cdoc,kontrbus,kontrtch,osc,pozn,tu,sp+,sp-,obj,prepravce,kam,stanoviste,zaskolovani,flgtpos|flgtobj,tmfrom,tmto)
 // pro hrl je v poli in("par",4,hrl) vratim prubeh
 //^||wrk.ALVA.AD(wrk,1,rz,hrl,1,idprac|hrl|spz|pc,"arr",1,mm)=$lb(typ,li,sp)
 // doklad                                        1     2   3  4   5  6   7      8
 //^||wrk.ALVA.AD(wrk,1,rz,hrl,2,zp|rrmm|doc)=$lb(hrlto,min,km,osc,tu,obj,tmfrom,tmto)
 //	grafikon		                                1     2   3  4      5 
 //^||wrk.ALVA.AD(wrk,1,rz,hrl,3,dz|rz|hrl|grf)=$lb(hrlto,min,km,tmfrom,tmto)
 //	podle OSC
 // plan                                                 1     2   3  4      5      6            7        8        9   10   11 12  13  14  15        16  17         18          19              20     21                                                												
 //^||wrk.ALVA.AD(wrk,2,osc,hrl,1,idprac|hrl|spz|pc)=$lb(hrlto,min,km,typpln,typdoc,zp|rrmm|cdoc,kontrbus,kontrtch,osc,pozn,tu,sp+,sp-,obj,prepravce,kam,stanoviste,zaskolovani,flgtpos|flgtobj,tmfrom,tmto)
 // pro hrl je v poli in("par",4,hrl) vratim prubeh
 //^||wrk.ALVA.AD(wrk,2,osc,hrl,1,idprac|hrl|spz|pc,"arr",1,mm)=$lb(typ,li,sp)
 // doklad
 //^||wrk.ALVA.AD(wrk,2,osc,hrl,2,zp|rrmm|cdoc)=$lb(hrlto,min,km,rz,tu,obj,tmfrom,tmto)
 // grafikon
 //^||wrk.ALVA.AD(wrk,2,osc,hrl,3,dz|osc|hrl|grf))=$lb(hrlto,min,km,tmfrom,tmto)
 // obsazene turnusy
 //^||wrk.ALVA.AD(wrk,3,zp|tur,hrl,1,idprac|hrl|spz|pc)=$lb(min,km,zp,hrltu)
 // obsazene objednavky
 //^||wrk.ALVA.AD(wrk,4,zp|rr|cobj,hrl,1,idprac|hrl|spz|pc)=$lb(hrlto,min,km)
 // pole vsech rz, ktere se vyskytly 
 //^||wrk.ALVA.AD(wrk,-1,rz)=""
 // pole vsech os, ktere se vyskytly
 //^||wrk.ALVA.AD(wrk,-2,os)=""
 //
 //s a=$lg(prom,pozice) ..... get
 //s $li(prom,pozice)=val ... set
 //s prom=$lb(val1,val2,...)
 //s lng=$ll(prom)
 //
 n (idfa,nmsp,hrlfrom,hrlto,in,out)
 s $zt="err"
 s wrk=$$gWrkALVAAD^OBapiED() k out s out("dta",1)="^||wrk.ALVA.AD("_wrk_")" s out("dta",2)=wrk
 s dz=$$gFaDz^OBapiED(idfa) s qsj=$$qsj^OBapiED()
 k arrcis20 s err=$$gCis^OBapiED(idfa,nmsp,20,"",.arrcis20) //graf.lidi
 k arrcis21 s err=$$gCis^OBapiED(idfa,nmsp,21,"",.arrcis21) //graf.aut
 s selrz=($o(in("rz",""))'="")
 s selos=($o(in("os",""))'="")
 i '$d(in("par",1)) s in("par",1)=1
 i '$d(in("par",2)) s in("par",2)=1
 i '$d(in("par",3)) s in("par",3)=1
 //====
 //plan
 //====
 i $g(in("par",1))=1 d
 .s idprac="" f  s idprac=$o(^[nmsp]OBPL(idprac)) q:idprac=""  d
 ..s zp=$g(^[nmsp]obpx(idprac))
 ..s hrl=hrlfrom-.01 f  s hrl=$o(^[nmsp]OBPL(idprac,hrl)) q:(hrl="")!(hrl>hrlto)  d
 ...//s dat=$tr($zd(+hrl,4),"/",".") s rrrr=+$p(dat,".",3) s mm=+$p(dat,".",2) s rr=(rrrr#100) s rrmm=(rr*100+mm)
 ...s spz="" f  s spz=$o(^[nmsp]OBPL(idprac,hrl,"A",spz)) q:spz=""  d
 ....i selrz q:'$d(in("rz",spz))
 ....s ^||wrk.ALVA.AD(wrk,-1,spz)=""
 ....s pc="" f  s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc)) q:pc=""  d
 .....//kontrola na os, pokud jsou ve vstupnim poli
 .....i selos s fndos=0 d  q:'fndos
 ......s osc="" f  s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) q:(osc="")!(fndos)  d
 .......i (osc="-")!($d(in("os",osc))) s fndos=1
 .....//obdobi u kazdeho dokladu, muze to zmenit objednavka !!! 
 .....s dat=$tr($zd(+hrl,4),"/",".") s rrrr=+$p(dat,".",3) s mm=+$p(dat,".",2) s rr=(rrrr#100) s rrmm=(rr*100+mm)
 .....//=======================================================
 .....s cdoc=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc))						//cislo dokladu
 .....s typdoc=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj"))				//typ dokladu 0 dzva / 1 sj
 .....s typpln=$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"rozpis"))			//typ planu 0 plan   / 1 rozpis
 .....i 'typpln&cdoc s typpln=2 
 .....s kontrbus=+$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt")),"~",1) //kontrola bus
 .....s kontrtch=+$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"knt")),"~",2) //kontrola tach
 .....s stanoviste=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"M"))			 //stanoviste
 .....s zaskolovani=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"ZSK"))		 //zaskolovani
 .....s flgtpos=""														 //priznak posiloveho turnusu
 .....s flgtobj=""														 //priznak objizdkoveho turnusu
 .....s pozn="" s icnt=""												 //poznamka
 .....s tmfrom=""														 //cas od
 .....s tmto=""															 //cas do
 .....s cnt="" f  s ival="" s cnt=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"P",cnt),1,ival) q:cnt=""  d
 ......s $li(pozn,$i(icnt))=$g(ival)
 .....s spp="" s spm="" s prepravce="" s kam="" s stanoviste="" s allkm=0 s allmin=0 s allminprv=0
 .....s hrldocto=hrl
 .....k arrtu s arrtu="" k arrprcs
 .....i +typdoc d
 ......//objednavka
 ......s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))
 ......i cobj d
 .......s val=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj))
 .......s km=$p(val,":",62) s min=$p(val,":",72) // predpokladany vykon //$g(^[nmsp]OBOBJ(zp,"O",rr,cobj,"rh"))
 .......s prepravce=$p(val,":",4) s kam=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj,"k"))
 .......s datdocto=$p(val,":",33) s:datdocto'="" hrldocto=$$dn^OBapiED(datdocto)
 .......s tmfrom=$p(val,":",30) i tmfrom s tmfrom=$$hm^OBapiED(tmfrom)
 .......s tmto=$p(val,":",34) i tmto s tmto=$$hm^OBapiED(tmto)
 .......s allkm=allkm+km s allmin=allmin+min s allminprv=allminprv+min
 .......//uprava cisla pro zobrazeni
 .......s cobj=$$wrapIdObj^OBapiED((+$p($tr($zd(+hrl,4),"/","."),".",3)#100),cobj)
 .......//obdobi podle konce jizdy
 .......i '(+$g(^[nmsp]OI(idfa,"jb","sj","setobd"))) d
 ........s datdocto=$tr($zd(+hrldocto,4),"/",".")
 ........s rrmm=(($p(datdocto,".",3)#100)*100)+$p(datdocto,".",2)
 .......s ^||wrk.ALVA.AD(wrk,4,(zp_"|"_rr_"|"_cobj),hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc))=$lb(hrldocto,min,km)
 .....//doklad je jiz uznan (uznan, vymazan, vyfakturovan), pokud je predznacen, je videt i plan
 .....//dzva
 .....i (cdoc&('typdoc)) i +$g(^[nmsp]OBD(zp,rrmm,cdoc)) q
 .....//sj
 .....i (cdoc&(+typdoc)) i +$g(^[nmsp]OBD(zp,rrmm,(cdoc+qsj))) q
 .....//===================
 .....i 'typdoc d
 ......//spoje + a -
 ......s icnt=""
 ......//sp+,sp-
 ......s icntp="" s icntm=""
 ......s ls="" f  s ls=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"S",ls)) q:ls=""  d
 .......//spoje +
 .......i ls>0 d
 ........i ls["." s $li(spp,$i(icntp))=$lb($p(ls,".",1),$p(ls,".",2)) s arrprcs("arr",2,(+$p(ls,".",1)),+$p(ls,".",2))=""
 ........i ls["^" s $li(spp,$i(icntp))=$lb($p(ls,"^",1),$p(ls,"^",2)) s arrprcs("arr",2,(+$p(ls,"^",1)),+$p(ls,"^",2))=""
 .......//spoje -
 .......i ls<0 d
 ........i ls["." s $li(spm,$i(icntm))=$lb(($p(ls,".",1))*(-1),$p(ls,".",2)) s arrprcs("arr",3,(+$p(ls,".",1)*(-1)),+$p(ls,".",2))=""
 ........i ls["^" s $li(spm,$i(icntm))=$lb(($p(ls,"^",1))*(-1),$p(ls,"^",2)) s arrprcs("arr",3,(+$p(ls,"^",1)*(-1)),+$p(ls,"^",2))=""
 ......s icntp="" s icntm=""
 ......//turnusy
 ......s icnt=""
 ......s tu="" f  s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu)) q:tu=""  d
 .......s oddo=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu,"oddo"))
 .......s liod="" s spod="" i $p(oddo,":",1) d
 ........i $p(oddo,":",1)["." s liod=($p(oddo,":",1)\1) s spod=($p(oddo,":",1)#1*1000)
 ........i $p(oddo,":",1)["^" s liod=($p($p(oddo,":",1),"^",1)) s spod=($p($p(oddo,":",1),"^",2))
 .......s lido="" s spdo="" i $p(oddo,":",2) d
 ........i $p(oddo,":",2)["." s lido=($p(oddo,":",2)\1) s spdo=($p(oddo,":",2)#1*1000)
 ........i $p(oddo,":",2)["^" s lido=($p($p(oddo,":",2),"^",1)) s spdo=($p($p(oddo,":",2),"^",2))
 .......s od="" i (liod*spod) s od=$lb(liod,spod)
 .......s do="" i (lido*spdo) s do=$lb(lido,spdo)
 .......s arrtu(tu)=""
 .......s kurs=""
 .......s hrltu=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1)
 .......i hrltu d
 ........s val=$g(^[nmsp]OBT(zp,tu,hrltu))
 ........s ispos=$p(val,":",3) s isobj=$p(val,":",36)
 ........i ispos s flgtpos=1 
 ........i isobj s flgtobj=1
 ........s tmptm=$p(val,":",5) i tmptm s tmptm=$$hm^OBapiED(tmptm)
 ........i tmptm i (tmfrom="")!(tmfrom>tmptm) s tmfrom=tmptm
 ........s tmptm=$p(val,":",6) i tmptm s tmptm=$$hm^OBapiED(tmptm)
 ........i tmptm i (tmto="")!(tmto<tmptm) s tmto=tmptm
 ........s kurs=$p(val,":",70)
 ........s val=$g(^[nmsp]OBT(zp,tu,hrltu,"T"))
 ........s min=$p(val,":",11) s km=$p(val,":",22) s minprv=$p(val,":",17)
 ........s allkm=allkm+km s allmin=allmin+min s allminprv=allminprv+minprv
 ........s arrtu(tu)=$lb(min,km,zp,hrltu)
 ........//prubeh turnusu
 ........i $d(in("par",4,hrl)) d
 .........s fndod=1 i (liod*spod) s fndod=0
 .........s fnddo=0
 .........s mm="" f  s val="" s mm=$o(^[nmsp]OBT(zp,tu,hrltu,mm),1,val) q:(mm="")!(mm?.a)!(fnddo)  d
 ..........i (liod*spod)&(fndod=0) i ($p(val,":",2)=3) d
 ...........i ($p(val,":",5)[".")&(liod=($p(val,":",5)\1))&(spod=($p(val,":",5)#1*1000)) s fndod=1
 ...........i ($p(val,":",5)["^")&(liod=($p($p(val,":",5),"^",1)))&(spod=($p($p(val,":",5),"^",2))) s fndod=1
 ..........i fndod=0 q
 ..........i (lido*spdo)&(fnddo=0) i ($p(val,":",2)=3) d
 ...........i ($p(val,":",5)[".")&(lido=($p(val,":",5)\1))&(spdo=($p(val,":",5)#1*1000)) s fnddo=1
 ...........i ($p(val,":",5)["^")&(lido=($p($p(val,":",5),"^",1)))&(spdo=($p($p(val,":",5),"^",2))) s fnddo=1
 ..........//spoj -
 ..........i ($p(val,":",2)=3)&($p(val,":",5)[".") i $d(arrprcs("arr",3,($p(val,":",5)\1),($p(val,":",5)#1*1000))) q
 ..........i ($p(val,":",2)=3)&($p(val,":",5)["^") i $d(arrprcs("arr",3,($p($p(val,":",5),"^",1)),($p($p(val,":",5),"^",2)))) q
 ..........//                                          typ linka            spoj
 ..........i ($p(val,":",2)=3)&($p(val,":",5)[".") s arrprcs("arr",1,mm)=$lb(3,($p(val,":",5)\1),($p(val,":",5)#1*1000))
 ..........i ($p(val,":",2)=3)&($p(val,":",5)["^") s arrprcs("arr",1,mm)=$lb(3,($p($p(val,":",5),"^",1)),($p($p(val,":",5),"^",2)))
 .......//pro zobrazeni ========================
 .......s $li(arrtu,$i(icnt))=$lb(tu,od,do,kurs)
 .......//======================================
 ......//vymazu spoje -
 ......k arrprcs("arr",3)
 ......//doplnim spoje +
 ......s li="" f  s li=$o(arrprcs("arr",2,li)) q:li=""  d
 .......s sp="" f  s sp=$o(arrprcs("arr",2,li,sp)) q:sp=""  d
 ........k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
 ........i $g(arrsp("dta",1))'="" s arrprcs("arr",1,$g(arrsp("dta",1)))=$lb(3,li,sp)
 ........k arrsp
 ......k arrprcs("arr",2)
 .....//ridici
 .....s icnt=""
 .....k arros s arros="" s arros("-")=""
 .....s osc="" f  s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) q:(osc="")  d
 ......s ^||wrk.ALVA.AD(wrk,-2,osc)=""
 ......k arros("-") s arros(osc)=""
 ......s $li(arros,$i(icnt))=$lb(osc,$p($g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)),"~",1))
 .....i 'icnt s $li(arros,$i(icnt))=$lb("-","")
 .....s icnt=""
 .....//spz
 .....s ^||wrk.ALVA.AD(wrk,1,spz,hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc))=$lb(hrldocto,allminprv,allkm,typpln,typdoc,$lb(zp,rrmm,cdoc),kontrbus,kontrtch,arros,pozn,arrtu,spp,spm,cobj,prepravce,kam,stanoviste,zaskolovani,$lb(flgtpos,flgtobj),tmfrom,tmto)
 .....m ^||wrk.ALVA.AD(wrk,1,spz,hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc),"arr",1)=arrprcs("arr",1)
 .....//ridici
 .....s osc="" f  s osc=$o(arros(osc)) q:osc=""  d
 ......i selos q:'$d(in("os",osc))
 ......s ^||wrk.ALVA.AD(wrk,2,osc,hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc))=$lb(hrldocto,allmin,allkm,typpln,typdoc,$lb(zp,rrmm,cdoc),kontrbus,kontrtch,arros,pozn,arrtu,spp,spm,cobj,prepravce,kam,stanoviste,zaskolovani,$lb(flgtpos,flgtobj),tmfrom,tmto)
 ......m ^||wrk.ALVA.AD(wrk,2,osc,hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc),"arr",1)=arrprcs("arr",1)
 .....//turnusy
 .....s tu="" f  s val="" s tu=$o(arrtu(tu),1,val) q:tu=""  d
 ......s ^||wrk.ALVA.AD(wrk,3,(zp_"|"_tu),hrl,1,(idprac_"|"_hrl_"|"_spz_"|"_pc))=val
 //=============
 //grafikon lidi
 //=============
 i $g(in("par",2))=1 d
 .s osc="" f  s osc=$o(^[nmsp]XL(dz,osc)) q:osc=""  d
 ..i selos q:'$d(in("os",osc))
 ..s ^||wrk.ALVA.AD(wrk,-2,osc)=""
 ..s hrl=hrlfrom-.01 f  s hrl=$o(^[nmsp]XL(dz,osc,hrl)) q:(hrl="")!(hrl>hrlto)!(hrl?.a)  d
 ...s grf="" f  s val="" s grf=$o(^[nmsp]XL(dz,osc,hrl,grf),1,val) q:grf=""  d
 ....//doklad
 ....i '$d(arrcis20("arr",grf)) d
 .....s zp=$p(val,":",7) s rrmm=$p(val,":",6) s hrldocto=$p(val,":",5) s min=(($p(val,":",2))+($p(val,":",4))) s km=0
 .....s tu="" s obj="" s rz=""
 .....i grf<qsj d
 ......s icnt=""
 ......s hrlcin="" f  s hrlcin=$o(^[nmsp]OBD(zp,rrmm,grf,"D",hrlcin)) q:hrlcin=""  d
 .......s idtu="" f  s idtu=$o(^[nmsp]OBD(zp,rrmm,grf,"D",hrlcin,1,idtu)) q:idtu=""  d
 ........s $li(tu,$i(icnt))=$p(idtu,":",1)
 ......s icnt=""
 ......s rz=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",6) i rz'="" s ^||wrk.ALVA.AD(wrk,-1,rz)=""
 ......s tmfrom=$o(^[nmsp]OBD(zp,rrmm,grf,"Zspoje","")) i tmfrom s tmfrom=$j(tmfrom,0,0)
 ......s tmto=$o(^[nmsp]OBD(zp,rrmm,grf,"Zspoje",""),-1) i tmto s tmto=($p($g(^[nmsp]OBD(zp,rrmm,grf,"Zspoje",tmto)),":",1)#1440)
 .....i grf>qsj d
 ......s obj=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",4)
 ......s rz=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",8) i rz'="" s ^||wrk.ALVA.AD(wrk,-1,rz)=""
 ......s tmfrom=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",57) i tmfrom s tmfrom=$$hm^OBapiED(tmfrom)
 ......s tmto=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",58) i tmto s tmto=$$hm^OBapiED(tmto)
 .....s ^||wrk.ALVA.AD(wrk,2,osc,hrl,2,(zp_"|"_rrmm_"|"_grf))=$lb(hrldocto,min,km,rz,tu,obj,tmfrom,tmto)
 ....//grafikon
 ....i +$d(arrcis20("arr",grf)) d
 .....//ne korunove polozky
 .....//i $p($g(arrcis20("arr",grf)),"~",2)=2 q
 .....s min=0 s km=0 s tmfrom="" s tmto=""
 .....i $p($g(arrcis20("arr",grf)),"~",3)!($p($g(arrcis20("arr",grf)),"~",4)) d
 ......s min=($$hm^OBapiED(($p(val,":",2)))+$$hm^OBapiED(($p(val,":",4))))
 .....s ^||wrk.ALVA.AD(wrk,2,osc,hrl,3,(dz_"|"_osc_"|"_hrl_"|"_grf))=$lb(hrl,min,km,tmfrom,tmto)
 //============
 //grafikon aut
 //============
 i $g(in("par",3))=1 d
 .s spz="" f  s spz=$o(^[nmsp]XA(dz,spz)) q:spz=""  d
 ..i selrz q:'$d(in("rz",spz))
 ..s ^||wrk.ALVA.AD(wrk,-1,spz)=""
 ..s hrl=hrlfrom-.01 f  s hrl=$o(^[nmsp]XA(dz,spz,hrl)) q:(hrl="")!(hrl>hrlto)!(hrl?.a)  d
 ...s grf="" s val="" f  s grf=$o(^[nmsp]XA(dz,spz,hrl,grf),1,val) q:grf=""  d
 ....//doklad
 ....i '$d(arrcis21("arr",grf)) d
 .....i (grf?.a) q  //stalo se, ze v grafikonu maji zkratku, ktera neni v ciselniku
 .....s zp=$p(val,":",7) s rrmm=$p(val,":",6) s hrldocto=$p(val,":",5) s min=($p(val,":",2)) s km=($p(val,":",3))
 .....s tu="" s obj="" s arros=""
 .....i grf<qsj d
 ......s icnt=""
 ......s hrlcin="" f  s hrlcin=$o(^[nmsp]OBD(zp,rrmm,grf,"D",hrlcin)) q:hrlcin=""  d
 .......s idtu="" f  s idtu=$o(^[nmsp]OBD(zp,rrmm,grf,"D",hrlcin,1,idtu)) q:idtu=""  d
 ........s $li(tu,$i(icnt))=$p(idtu,":",1)
 ......s icnt=""
 ......s tmfrom=$o(^[nmsp]OBD(zp,rrmm,grf,"Zspoje","")) i tmfrom s tmfrom=$j(tmfrom,0,0)
 ......s tmto=$o(^[nmsp]OBD(zp,rrmm,grf,"Zspoje",""),-1) i tmto s tmto=($p($g(^[nmsp]OBD(zp,rrmm,grf,"Zspoje",tmto)),":",1)#1440)
 .....i grf>qsj d
 ......s obj=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",4)
 ......s tmfrom=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",57) i tmfrom s tmfrom=$$hm^OBapiED(tmfrom)
 ......s tmto=$p($g(^[nmsp]OBD(zp,rrmm,grf)),":",58) i tmto s tmto=$$hm^OBapiED(tmto)
 .....s icnt="" s os="" f  s os=$o(^[nmsp]OBD(zp,rrmm,grf,os)) q:(os="")!(os?.a)  s $li(arros,$i(icnt))=os s ^||wrk.ALVA.AD(wrk,-2,os)=""
 .....s ^||wrk.ALVA.AD(wrk,1,spz,hrl,2,(zp_"|"_rrmm_"|"_grf))=$lb(hrldocto,min,km,arros,tu,obj,tmfrom,tmto)
 ....//grafikon
 ....i +$d(arrcis21("arr",grf))!(grf?.a) d
 .....s tmfrom="" s tmto=""
 .....s ^||wrk.ALVA.AD(wrk,1,spz,hrl,3,(dz_"|"_spz_"|"_hrl_"|"_grf))=$lb(hrl,0,0,tmfrom,tmto)
 q 0
 //
lPlnZapRZ(idfa,nmsp,idprac,hrl,in,out)
 // s err=$$lPlnZapRZ(idfa,nmsp,idprac,hrl,.in,.out)
 // vrati seznam zapujcenych aut pro den
 // in:
 // out:
 //		out("arr",1,rz,"dta",1)=hrl			(kdy zadano)
 //		out("arr",1,rz,"dta",2)=fullname	(kdo zadal)
 n (idfa,nmsp,idprac,hrl,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 //
 s rz="" f  s val="" s rz=$o(^[nmsp]obpx(idprac,"zA",hrl,rz),1,val) q:rz=""  d
 .f cnt=1:1:2 s out("arr",1,rz,"dta",cnt)=$p(val,"~",cnt)
 q 0
sPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out)
 // s err=$$sPlnZapRZ(idfa,nmsp,idprac,hrl,rz,.in,.out) zapis zapujcene rz pro pracoviste 
 // in(idos)=identifikator osoby (mlp~loginname~fullname)
 n (idfa,nmsp,idprac,hrl,rz,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(rz)="" s err="rz=" zt "merr"
 //
 s $p(^[nmsp]obpx(idprac,"zA",hrl,rz),"~",1)=$h
 s $p(^[nmsp]obpx(idprac,"zA",hrl,rz),"~",2)=$p($g(in("idos")),"~",3)
 //
 q 0
dPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out)
 // s err=$$dPlnZapRZ(idfa,nmsp,idprac,hrl,rz,.in,.out) zruseni zapujcene rz pro pracoviste 
 n (idfa,nmsp,idprac,hrl,rz,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(rz)="" s err="rz=" zt "merr"
 //
 k ^[nmsp]obpx(idprac,"zA",hrl,rz)
 q 0
isPlnZapRZ(idfa,nmsp,idprac,hrl,rz,in,out)
 // s err=$$isPlnZapRZ(idfa,nmsp,idprac,hrl,rz,.in,.out) test zapujcenou rz pro pracoviste  out=0 neni zapujcena / out>0 zapujcena
 n (idfa,nmsp,idprac,hrl,rz,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(rz)="" s err="rz=" zt "merr"
 //
 s out=$d(^[nmsp]obpx(idprac,"zA",hrl,rz))
 q 0
lPlnZapOS(idfa,nmsp,idprac,hrl,in,out)
 // s err=$$lPlnZapOS(idfa,nmsp,idprac,hrl,.in,.out)
 // vrati seznam zapujcenych ridicu pro den
 // in:
 // out:
 //		out("arr",1,os,"dta",1)=hrl 		(kdy zadano)
 //		out("arr",1,os,"dta",2)=fullname	(kdo zadal)
 n (idfa,nmsp,idprac,hrl,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 //
 s os="" f  s val="" s os=$o(^[nmsp]obpx(idprac,"zO",hrl,os),1,val) q:os=""  d
 .f cnt=1:1:2 s out("arr",1,os,"dta",cnt)=$p(val,"~",cnt)
 q 0
sPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out)
 // s err=$$sPlnZapOS(idfa,nmsp,idprac,hrl,os,.in,.out) zapis zapujceneho ridice pro pracoviste 
 // in(idos)=identifikator osoby (mlp~loginname~fullname)
 n (idfa,nmsp,idprac,hrl,os,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(os)="" s err="os=" zt "merr"
 //
 s $p(^[nmsp]obpx(idprac,"zO",hrl,os),"~",1)=$h
 s $p(^[nmsp]obpx(idprac,"zO",hrl,os),"~",2)=$p($g(in("idos")),"~",3)
 //
 q 0
dPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out)
 // s err=$$dPlnZapOS(idfa,nmsp,idprac,hrl,os,.in,.out) zruseni zapujceneho ridice pro pracoviste 
 n (idfa,nmsp,idprac,hrl,os,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(os)="" s err="os=" zt "merr"
 //
 k ^[nmsp]obpx(idprac,"zO",hrl,os)
 q 0
 //
isPlnZapOS(idfa,nmsp,idprac,hrl,os,in,out)
 // s err=$$isPlnZapOS(idfa,nmsp,idprac,hrl,os,.in,.out) test zapujceneho ridice pro pracoviste  out=0 neni zapujcen / out>0 zapujcen
 n (idfa,nmsp,idprac,hrl,os,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(os)="" s err="os=" zt "merr"
 //
 s out=$d(^[nmsp]obpx(idprac,"zO",hrl,os))
 q 0
 //
err s $zt="" k out q "1~"_$ze_"~"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDPlan1" type="INT" languagemode="0" timestamp="65724,38265.132221"><![CDATA[
OBapiEDPlan1 q
 // plan dopravy, planovaci pracoviste
lPlnPrac(idfa,nmsp,in,out)
 // s err=$$fndPlnPrac(idfa,nmsp,in,out) - vrati seznam planovacich pracovist
 //   - in
 //       je li def in("zp",zp)="" vraci pracoviste jen z prislusnych zp
 //       je li def in("prv",prv)="" vraci pracoviste jen z prislusnych prv
 //   - out
 //       out("dta",idpracoviste)=zp 			... postaru, uz nepouzivat
 //       out("arr",idpracoviste,"dta",1)=zp 	... ponovu
 //       out("arr",idpracoviste,"dta",2)=idprv ... ponovu
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // transformace "prv" na "zp"
 s prv="" f  s prv=$o(in("prv",prv)) q:prv=""  d
 .s err=$$mkZP^OBapiED(idfa,prv,"","",.zp) zt:+err "merr"
 .s in("zp",zp)=""
 // -------------------------
 s idprac="" f  s idprac=$o(^[nmsp]obpx(idprac)) q:idprac=""  d
 .s zpprac=$g(^[nmsp]obpx(idprac)) q:zpprac=""
 .i $d(in("zp")) q:'$d(in("zp",zpprac))
 .k prvprac s err=$$mkPRV^OBapiED(idfa,zpprac,"",.prvprac) zt:+err "merr"
 .s out("dta",idprac)=zpprac
 .s out("arr",idprac,"dta",1)=zpprac
 .s out("arr",idprac,"dta",2)=$g(prvprac)
 q 0
gPlnPrac(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPrac(idfa,nmsp,id,.in,.out) - nacte data(popis) planovaciho pracoviste s id
 // -in:
 // -out:
 // 	popis pole s daty planovaciho pracoviste  out("dta",cnt)=...
 // 	---------------------------------------------------------
 // 	cnt - pocitadlo
 //   01 - provozovna
 //	  02 - vedouci pracovnik
 //   03 - pozice ve firmě
 //	  04 - vychozi stanoviste
 //   05 - planovat pravidelnou dopravu 0 ne / 1 ano
 //   06 - planovat nepravidelnou dopravu 0 ne / 1 ano
 //   07 - predtisk DZVA 0 ne / 1 ano
 //   08 - predtisk DZVA, cislovani od
 //   09 - predtisk DZVA, cislovani do
 //   10 - predtisk DZVA, predznacovat DZVA  0 ne / 1 ano
 //   11 - predtisk DZVA, prázdné doklady, v předtisku a předznačení uvést datum 0 ne / 1 ano
 //   12 - predtik SJ 0 ne / 1 ano
 //   13 - predtik SJ, cislovani od
 //   14 - predtik SJ, cislovani do
 //   15 - predtik SJ, predznacovat SJ 0 ne / 1 ano
 //   16 - okruh lidi pro pracoviste (0 provoz / 1 seznam lidi / 2 dle ns)
 //   17 - id seznamu lidi
 //   18 - okruh aut pro pracoviste (0 provoz / 1 seznam aut / 2 dle ns)
 //   19 - id seznamu aut
 //   20 - okruh turnusu pro pracoviste (0 provoz / 1 seznam turnusu)
 //   21 - id seznamu turnusu
 //   22 - tisk - reportgen id formulare pro tisk DZVA
 //   23 - tisk - reportgen jak radit dzva a sj 0 dle cisla / 1 dle turnusu / 2 dle jmena / 3 dle turnusovych skupin / 4 ev.c.vozu 
 //   24 - tisk - reportgen id formulare pro tisk den.planu
 //   25 - tisk - reportgen jak radit denni plan 0 dle spz / 1 dle turnusu / 2 dle jmena / 3 dle turnusovych skupin
 //   26 - casovy horizont pro odmazani dat planu (je li zadan, maze se)
 //   27 - casovy horizont pro odmazani dat evidence dokladu (je li zadan, maze se)
 //   28 - tisk - reportgen id formulare pro tisk potvrzeni o cinnostech
 //   29 - tisk - reportgen id formulare pro tisk predavaciho protokolu
 //   30 - predtisk - formular - id sestavy pro tisk DZVA	(0VS)
 //   31 - predtisk - formular - id sestavy pro tisk SJ		(0VS/1PL)
 //   32 - predznaceni pravidelne ze SC - 0 seskupit turnusy na doklad / 1 doklad pro kazdy turnus
 //   33 - tisk - reportgen id formulare pro tisk SJ
 //   34 - tisk - reportgen id formulare pro plan ridice
 //   35 - tisk - reportgen id formulare pro tisk souhrneho DZVA
 //   36 - tisk - reportgen, predavaci protokol, jak radit doklady 0 dle jmena / 1 dle turnusu a objednavky (zatim nepouzito)
 //   37 - tisk - reportgen - tisk den.planu - volny ridic pro tabulku s planem je: 0/ridic bez pridelené prace 1/ridic bez pridelene prace v TS bez PD
 //   38 - predtisk DZVA, SJ - tisk fiktivniho ridice na doklad 0 ne / 1 ano
 //   39 - predtisk DZVA - v průběhu turnusu tisknout pouze spoje 0 ne / 1 ano
 //   40 - tisk - reportgen - denni plan - tisk zkraceneho jmena ridice 0 ne / 1 ano 
 //   41 - pocet dni pro vypis predchozi prace
 //  out("arr",1,cnt)=dalsi stanoviste
 //
 //   out("arr",2,idgrf)=mr ... povolene grafikonove cinnosti pro lidi (zadavani v planu) / mr - mazat rozpisy pri zadani 0/1
 //   out("arr",3,idgrf)="" ... povolene grafikonove cinnosti pro auta (zadavani v planu)
 //
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 // "dta"
 s out("dta",1)=$g(^[nmsp]obpx(idprac))#100
 s out("dta",2)=$p($g(^[nmsp]obpx(idprac,"desc")),"~",1)
 s out("dta",3)=$p($g(^[nmsp]obpx(idprac,"desc")),"~",2)
 s out("dta",4)=$g(^[nmsp]obpx(idprac,"STANOVISTE"))
 s out("dta",5)=+$p($g(^[nmsp]obpx(idprac,"desc")),"~",3)=0
 s out("dta",6)=+$p($g(^[nmsp]obpx(idprac,"desc")),"~",4)=0
 s out("dta",7)=$d(^[nmsp]obpx(idprac,"TISKAT"))>0
 s out("dta",8)=+$p($g(^[nmsp]obpx(idprac,"TISKAT","N")),":",1)
 s out("dta",9)=+$p($g(^[nmsp]obpx(idprac,"TISKAT","N")),":",2)
 s out("dta",10)=$d(^[nmsp]obpx(idprac,"TISKAT","PREDZNAC"))>0
 s out("dta",11)=+$g(^[nmsp]obpx(idprac,"TISKAT","BIANCO","BDAT"))=0
 s out("dta",12)=$d(^[nmsp]obpx(idprac,"TISKATSJ"))>0
 s out("dta",13)=+$p($g(^[nmsp]obpx(idprac,"TISKATSJ","N")),":",1)
 s out("dta",14)=+$p($g(^[nmsp]obpx(idprac,"TISKATSJ","N")),":",2)
 s out("dta",15)=$d(^[nmsp]obpx(idprac,"TISKATSJ","PREDZNAC"))>0
 s val=0 s:(+$g(^[nmsp]obpx(idprac,"L"))=2) val=1 s:(+$g(^[nmsp]obpx(idprac,"L"))=3) val=2
 s out("dta",16)=val
 s out("dta",17)=$g(^[nmsp]obpx(idprac,"L","idS"))
 s val=0 s:(+$g(^[nmsp]obpx(idprac,"A"))=2) val=1 s:(+$g(^[nmsp]obpx(idprac,"A"))=3) val=2
 s out("dta",18)=val
 s out("dta",19)=$g(^[nmsp]obpx(idprac,"A","idS"))
 s val=0 s:(+$g(^[nmsp]obpx(idprac,"T"))=2) val=1
 s out("dta",20)=val
 s out("dta",21)=$g(^[nmsp]obpx(idprac,"T","idS"))
 s out("dta",22)=$g(^[nmsp]obpx(idprac,"reportgenId",1))
 s out("dta",23)=$g(^[nmsp]obpx(idprac,"reportgenSort",1))
 s out("dta",24)=$g(^[nmsp]obpx(idprac,"reportgenId",2))
 s out("dta",25)=$g(^[nmsp]obpx(idprac,"reportgenSort",2))
 s out("dta",26)=$g(^[nmsp]obpx(idprac,"HORIZRUS"))
 s out("dta",27)=$g(^[nmsp]obpx(idprac,"HORIZRUDOK"))
 s out("dta",28)=$g(^[nmsp]obpx(idprac,"reportgenId",3))
 s out("dta",29)=$g(^[nmsp]obpx(idprac,"reportgenId",4))
 s out("dta",30)=+$g(^[nmsp]obpx(idprac,"formId",1))
 s out("dta",31)=+$g(^[nmsp]obpx(idprac,"formId",2))
 s out("dta",32)=+$g(^[nmsp]obpx(idprac,"mpl","CinNewDoc"))
 s out("dta",33)=$g(^[nmsp]obpx(idprac,"reportgenId",5))
 s out("dta",34)=$g(^[nmsp]obpx(idprac,"reportgenId",6))
 s out("dta",35)=$g(^[nmsp]obpx(idprac,"reportgenId",7))
 s out("dta",36)=+$g(^[nmsp]obpx(idprac,"reportgenSort",4))
 s out("dta",37)=+$g(^[nmsp]obpx(idprac,"par",1))
 s out("dta",38)=+$g(^[nmsp]obpx(idprac,"par",2))
 s out("dta",39)=+$g(^[nmsp]obpx(idprac,"par",3))
 s out("dta",40)=+$g(^[nmsp]obpx(idprac,"par",4))
 s out("dta",41)=$g(^[nmsp]obpx(idprac,"par",5))
 //neni-li formular pro SJ, dam DZVA - zpetna kompatibilita pro prechod, pozdeji odstranit 
 i ($g(out("dta",33))="") s out("dta",33)=$g(out("dta",22))
 //=======================================================================================
 // "arr",1 - stanoviste
 s id="" f  s id=$o(^[nmsp]obpx(idprac,"STANOVISTE",id)) q:id=""  s out("arr",1,id)=$g(^[nmsp]obpx(idprac,"STANOVISTE",id))
 // "arr",2 - graf. cinnosti lidi
 s id="" f  s id=$o(^[nmsp]obpx(idprac,"grfOS",id)) q:id=""  d
 .s out("arr",2,id)=$g(^[nmsp]obpx(idprac,"grfOS",id))
 // "arr",3 - graf. cinnosti auta
 s id="" f  s id=$o(^[nmsp]obpx(idprac,"grfRZ",id)) q:id=""  d
 .s out("arr",3,id)=""
 q 0
 //
sPlnPrac(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPrac(idfa,nmsp,id,.in,.out) - ulozi data planovaciho pracoviste s id
 // -in:
 //   data planovaciho pracoviste (popis v gPlnPrac)
 // -out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 // "dta"
 s err=$$mkZP^OBapiED(idfa,$g(in("dta",1)),"","",.zp) zt:+err "merr" s err=""
 s ^[nmsp]obpx(idprac)=zp
 s $p(^[nmsp]obpx(idprac,"desc"),"~",1)=$g(in("dta",2))
 s $p(^[nmsp]obpx(idprac,"desc"),"~",2)=$g(in("dta",3))
 s ^[nmsp]obpx(idprac,"STANOVISTE")=$g(in("dta",4))
 s $p(^[nmsp]obpx(idprac,"desc"),"~",3)=$g(in("dta",5))=0
 s $p(^[nmsp]obpx(idprac,"desc"),"~",4)=$g(in("dta",6))=0
 i '$g(in("dta",7)) k ^[nmsp]obpx(idprac,"TISKAT")
 i +$g(in("dta",7)) d
 .s ^[nmsp]obpx(idprac,"TISKAT")=$h
 .s $p(^[nmsp]obpx(idprac,"TISKAT","N"),":",1)=$g(in("dta",8))
 .s $p(^[nmsp]obpx(idprac,"TISKAT","N"),":",2)=$g(in("dta",9))
 i '$g(in("dta",10)) k ^[nmsp]obpx(idprac,"TISKAT","PREDZNAC")
 i +$g(in("dta",10)) s ^[nmsp]obpx(idprac,"TISKAT","PREDZNAC")=$h
 k ^[nmsp]obpx(idprac,"TISKAT","BIANCO","BDAT")
 i '$g(in("dta",11)) s ^[nmsp]obpx(idprac,"TISKAT","BIANCO","BDAT")=$h
 i '$g(in("dta",12)) k ^[nmsp]obpx(idprac,"TISKATSJ")
 i +$g(in("dta",12)) d
 .s ^[nmsp]obpx(idprac,"TISKATSJ")=$h
 .s $p(^[nmsp]obpx(idprac,"TISKATSJ","N"),":",1)=$g(in("dta",13))
 .s $p(^[nmsp]obpx(idprac,"TISKATSJ","N"),":",2)=$g(in("dta",14))
 i '$g(in("dta",15)) k ^[nmsp]obpx(idprac,"TISKATSJ","PREDZNAC")
 i +$g(in("dta",15)) s ^[nmsp]obpx(idprac,"TISKATSJ","PREDZNAC")=$h
 s val=1 s:(+$g(in("dta",16))=1) val=2 s:(+$g(in("dta",16))=2) val=3
 s ^[nmsp]obpx(idprac,"L")=val
 s ^[nmsp]obpx(idprac,"L","idS")=$g(in("dta",17))
 s val=1 s:(+$g(in("dta",18))=1) val=2 s:(+$g(in("dta",18))=2) val=3
 s ^[nmsp]obpx(idprac,"A")=val
 s ^[nmsp]obpx(idprac,"A","idS")=$g(in("dta",19))
 s val=1 s:(+$g(in("dta",20))=1) val=2
 s ^[nmsp]obpx(idprac,"T")=val
 s ^[nmsp]obpx(idprac,"T","idS")=$g(in("dta",21))
 s ^[nmsp]obpx(idprac,"reportgenId",1)=$g(in("dta",22))
 s ^[nmsp]obpx(idprac,"reportgenSort",1)=$g(in("dta",23))
 s ^[nmsp]obpx(idprac,"reportgenId",2)=$g(in("dta",24))
 s ^[nmsp]obpx(idprac,"reportgenSort",2)=$g(in("dta",25))
 k ^[nmsp]obpx(idprac,"HORIZRUS") s:+$g(in("dta",26)) ^[nmsp]obpx(idprac,"HORIZRUS")=+$g(in("dta",26))
 k ^[nmsp]obpx(idprac,"HORIZRUDOK") s:+$g(in("dta",27)) ^[nmsp]obpx(idprac,"HORIZRUDOK")=+$g(in("dta",27))
 s ^[nmsp]obpx(idprac,"reportgenId",3)=$g(in("dta",28))
 s ^[nmsp]obpx(idprac,"reportgenId",4)=$g(in("dta",29))
 s ^[nmsp]obpx(idprac,"formId",1)=$g(in("dta",30))
 s ^[nmsp]obpx(idprac,"formId",2)=$g(in("dta",31))
 s ^[nmsp]obpx(idprac,"mpl","CinNewDoc")=$g(in("dta",32))
 s ^[nmsp]obpx(idprac,"reportgenId",5)=$g(in("dta",33))
 s ^[nmsp]obpx(idprac,"reportgenId",6)=$g(in("dta",34))
 s ^[nmsp]obpx(idprac,"reportgenId",7)=$g(in("dta",35))
 s ^[nmsp]obpx(idprac,"reportgenSort",4)=$g(in("dta",36))
 s ^[nmsp]obpx(idprac,"par",1)=$g(in("dta",37))
 s ^[nmsp]obpx(idprac,"par",2)=$g(in("dta",38))
 s ^[nmsp]obpx(idprac,"par",3)=$g(in("dta",39))
 s ^[nmsp]obpx(idprac,"par",4)=$g(in("dta",40))
 s ^[nmsp]obpx(idprac,"par",5)=$g(in("dta",41))
 // "arr",1 - stanoviste
 s id="" f  s id=$o(^[nmsp]obpx(idprac,"STANOVISTE",id)) q:id=""  k ^[nmsp]obpx(idprac,"STANOVISTE",id) 
 s id="" f  s id=$o(in("arr",1,id)) q:id=""  d
 .q:$g(in("arr",1,id))=""
 .s ^[nmsp]obpx(idprac,"STANOVISTE",($o(^[nmsp]obpx(idprac,"STANOVISTE",""),-1)+1))=$g(in("arr",1,id))
 // "arr",2 - graf. cinnosti lidi
 k ^[nmsp]obpx(idprac,"grfOS")
 s id="" f  s id=$o(in("arr",2,id)) q:id=""  d
 .s ^[nmsp]obpx(idprac,"grfOS",id)=$g(in("arr",2,id))
 // "arr",3 - graf. cinnosti auta
 k ^[nmsp]obpx(idprac,"grfRZ")
 s id="" f  s id=$o(in("arr",3,id)) q:id=""  d
 .s ^[nmsp]obpx(idprac,"grfRZ",id)=""
 q 0
 //
addPlnPracStanoviste(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracPracoviste(idfa,nmsp,id,.in,.out) - prida do planovaciho pracoviste stanoviste
 // -in:
 //  in("dta",1)=stanoviste
 //  in("dta",2)=vychozi 0/1
 // -out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s val=$g(in("dta",1)) s par=$g(in("dta",2))
 //vychozi
 i (val'="")&(+par) {
	 //je jine vychozi 
	 i ($g(^[nmsp]obpx(idprac,"STANOVISTE"))'="")&($g(^[nmsp]obpx(idprac,"STANOVISTE"))'=val) {
		s fnd=0 s id="" f {
		 s id=$o(^[nmsp]obpx(idprac,"STANOVISTE",id)) i id="" q
		 i $g(^[nmsp]obpx(idprac,"STANOVISTE",id))=$g(^[nmsp]obpx(idprac,"STANOVISTE")) s fnd=1
	 	}
	 	i 'fnd	s ^[nmsp]obpx(idprac,"STANOVISTE",($o(^[nmsp]obpx(idprac,"STANOVISTE",""),-1)+1))=$g(^[nmsp]obpx(idprac,"STANOVISTE"))
	 }
	 s ^[nmsp]obpx(idprac,"STANOVISTE")=val
	 s id="" f {
		 s id=$o(^[nmsp]obpx(idprac,"STANOVISTE",id)) i id="" q
		 i $g(^[nmsp]obpx(idprac,"STANOVISTE",id))=val k ^[nmsp]obpx(idprac,"STANOVISTE",id)
	 	}
	 }
 i (val'="")&('par) {
	 s fnd=0 s id="" f {
		 s id=$o(^[nmsp]obpx(idprac,"STANOVISTE",id)) i id="" q
		 i $g(^[nmsp]obpx(idprac,"STANOVISTE",id))=val s fnd=1
	 }
	 //je uz vychozi
	 i $g(^[nmsp]obpx(idprac,"STANOVISTE"))=val s fnd=1
	 //=============
	 i 'fnd {
		 s ^[nmsp]obpx(idprac,"STANOVISTE",($o(^[nmsp]obpx(idprac,"STANOVISTE",""),-1)+1))=val
	 }
 }
 q 0
 //
isPlnPrac(idfa,nmsp,idprac,in,out)
 // s err=$$isPlnPrac(idfa,nmsp,idprac,.in,.out) - kontrola na existenci planovaciho pracoviste
 // -in:
 // -out:
 //    out=0 neexistuje / >0 existuje
 //    out("dta")=0 nejsou evidovana data / 1 jsou evidovana data
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s out=$d(^[nmsp]obpx(idprac))
 s out("dta")=($o(^[nmsp]OBPL(idprac,""))'="")
 q 0
 //
dPlnPrac(idfa,nmsp,idprac,in,out)
 // s err=$$dPlnPrac(idfa,nmsp,idprac,.in,.out) - zruseni planovaciho pracoviste
 // -in:
 // -out:
 //    out("stt")=0/1 0 nepovedlo se vymazat / 1 vymazano
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s out("stt")=0
 k ^[nmsp]OBPL(idprac)
 k ^[nmsp]obpx(idprac)
 k ^[nmsp]obpy(idprac)
 k ^[nmsp]obpz(idprac)
 k ^[nmsp]OBPXSC(idfa,idprac)
 s out("stt")=1
 q 0
 //
dDocPlnPrac(idfa,nmsp,idprac,in,out)
 //=========================================================================
 //automaticke odmazani dat planu (podle nastaveni u planovaciho pracoviste)
 //=========================================================================
 //in("fullname")=fullname - jmeno, kdo maze pro zapis do kose
 n (idfa,nmsp,idprac,in,out) s $zt="err" k out
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 //
 k arr s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arr) i +err zt
 //doklady (musi byt zadan interval)
 i +$g(arr("dta",26)){
	 s hrl=+$h-$g(arr("dta",26)) f {
		 s hrl=$o(^[nmsp]OBPL(idprac,hrl),-1) i hrl="" q
		 s rz="" f {
			 s rz=$o(^[nmsp]OBPL(idprac,hrl,"A",rz)) i rz="" q
			 s pc="" f {
				 s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) i pc="" q
				 s err=$$dPln^OBapiED(idfa,nmsp,idprac,hrl,rz,pc,.in,"")
			 }
  	     }
	 }
 }
 //evidence vydanych dokladu
 i $g(arr("dta",27)){
	 s hrl=+$h-$g(arr("dta",27)) f {
		 s hrl=$o(^[nmsp]obpy(idprac,hrl),-1) i hrl="" q
		 k ^[nmsp]obpy(idprac,hrl)
	 }
	 s hrl=+$h-$g(arr("dta",27)) f {
		 s hrl=$o(^[nmsp]obpz(idprac,hrl),-1) i hrl="" q
		 k ^[nmsp]obpz(idprac,hrl)
	 }		
 }
 q 0
 //
renamePlnPrac(idfa,nmsp,oldidprac,newidprac,in,out)
 // s err=$$rnPlnPrac(idfa,nmsp,oldidprac,newidprac,.in,.out) - prejmenovani pracoviste
 // -in:
 // -out:
 n (idfa,nmsp,oldidprac,newidprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(oldidprac)="" q "1~oldidprac="
 i $g(newidprac)="" q "1~newidprac="
 i $d(^[nmsp]OBPL(newidprac)) q "1~pracoviste "_newidprac_" jiz existuje"
 i (newidprac=oldidprac) q "1~pracoviste nelze prejmenovat pod totozny nazev"
 // presun
 m ^[nmsp]OBPL(newidprac)=^[nmsp]OBPL(oldidprac)
 m ^[nmsp]obpx(newidprac)=^[nmsp]obpx(oldidprac)
 m ^[nmsp]obpy(newidprac)=^[nmsp]obpy(oldidprac)
 m ^[nmsp]obpz(newidprac)=^[nmsp]obpz(oldidprac)
 m ^[nmsp]OBPXSC(idfa,newidprac)=^[nmsp]OBPXSC(idfa,oldidprac)
 // kill
 k ^[nmsp]OBPL(oldidprac)
 k ^[nmsp]obpx(oldidprac)
 k ^[nmsp]obpy(oldidprac)
 k ^[nmsp]obpz(oldidprac)
 k ^[nmsp]OBPXSC(idfa,oldidprac)
 //k ^[nmsp]OI(DZ,"PLAN","SETUP","VYCHOZIP")
 q 0
 //
gPlnPracLstOs(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPracLstOs(idfa,nmsp,idprac,.in,.out) ... vrati seznam lidi pro pracoviste
 // in:
 // out:
 // out("arr",1,os)=""
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s os="" f  s os=$o(^[nmsp]obpx(idprac,"L","S",os)) q:os=""  s out("arr",1,os)=""
 q 0
sPlnPracLstOs(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracLstOs(idfa,nmsp,idprac,.in,.out) ... zapise seznam lidi pro pracoviste
 // in:
 // in("arr",1,os)=""
 // out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 k ^[nmsp]obpx(idprac,"L","S")
 s os="" f  s os=$o(in("arr",1,os)) q:os=""  s ^[nmsp]obpx(idprac,"L","S",os)=""
 q 0
 //
gPlnPracLstOsNs(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPracLstOsNs(idfa,nmsp,idprac,.in,.out) ... vrati seznam ns lidi pro pracoviste
 // in:
 // out:
 // out("arr",1,ns)=""
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s ns="" f  s ns=$o(^[nmsp]obpx(idprac,"L","NS",ns)) q:ns=""  s out("arr",1,ns)=""
 q 0
sPlnPracLstOsNs(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracLstOsNs(idfa,nmsp,idprac,.in,.out) ... zapise seznam ns lidi pro pracoviste
 // in:
 // in("arr",1,ns)=""
 // out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 k ^[nmsp]obpx(idprac,"L","NS")
 s ns="" f  s ns=$o(in("arr",1,ns)) q:ns=""  s ^[nmsp]obpx(idprac,"L","NS",ns)=""
 q 0
 //
gPlnPracLstRz(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPracLstRz(idfa,nmsp,idprac,.in,.out) ... vrati seznam aut pro pracoviste
 // in:
 // out:
 // out("arr",1,rz)=""
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s rz="" f  s rz=$o(^[nmsp]obpx(idprac,"A","S",rz)) q:rz=""  s out("arr",1,rz)=""
 q 0
sPlnPracLstRz(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracLstRz(idfa,nmsp,idprac,.in,.out) ... zapise seznam aut pro pracoviste
 // in:
 // in("arr",1,rz)=""
 // out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 k ^[nmsp]obpx(idprac,"A","S")
 s rz="" f  s rz=$o(in("arr",1,rz)) q:rz=""  s ^[nmsp]obpx(idprac,"A","S",rz)=""
 q 0
 //
gPlnPracLstRzNs(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPracLstRzNs(idfa,nmsp,idprac,.in,.out) ... vrati seznam ns aut pro pracoviste
 // in:
 // out:
 // out("arr",1,ns)=""
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s ns="" f  s ns=$o(^[nmsp]obpx(idprac,"A","NS",ns)) q:ns=""  s out("arr",1,ns)=""
 q 0
sPlnPracLstRzNs(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracLstRzNs(idfa,nmsp,idprac,.in,.out) ... zapise seznam ns aut pro pracoviste
 // in:
 // in("arr",1,ns)=""
 // out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 k ^[nmsp]obpx(idprac,"A","NS")
 s ns="" f  s ns=$o(in("arr",1,ns)) q:ns=""  s ^[nmsp]obpx(idprac,"A","NS",ns)=""
 q 0
gPlnPracLstTu(idfa,nmsp,idprac,in,out)
 // s err=$$gPlnPracLstTu(idfa,nmsp,idprac,.in,.out) ... vrati seznam turnusu pro pracoviste
 // in:
 // out:
 // out("arr",1,tu)=""
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 s tu="" f  s tu=$o(^[nmsp]obpx(idprac,"T","S",tu)) q:tu=""  s out("arr",1,tu)=""
 q 0
sPlnPracLstTu(idfa,nmsp,idprac,in,out)
 // s err=$$sPlnPracLstTu(idfa,nmsp,idprac,.in,.out) ... zapise seznam turnusu pro pracoviste
 // in:
 // in("arr",1,tu)=""
 // out:
 n (idfa,nmsp,idprac,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 k ^[nmsp]obpx(idprac,"T","S")
 s tu="" f  s tu=$o(in("arr",1,tu)) q:tu=""  s ^[nmsp]obpx(idprac,"T","S",tu)=""
 q 0
 //
gPlnPracCisDoc(idfa,nmsp,idprac,typdoc,rrrrmm,in,out)
 //s err=$$gPlnPracCisDoc(idfa,nmsp,idprac,typdoc,.in,.out)
 //w $$gPlnPracCisDoc^OBapiEDPlan1("VS_CSAD","USER","LUHACOVICE","d",201306,.in,.out) zw out
 //zw ^obpx("LUHACOVICE","TISKAT")
 //zw ^obpx("LUHACOVICE","TISKATSJ")
 //tydoc= "d" pravidelna doprava / "s" nepravidelna doprava
 //rrrrmm=obdobi pro zapis dokladu
 n (idfa,nmsp,idprac,typdoc,rrrrmm,in,out)
 //=========================
 s $zt="err1" k out s err=""
 //=========================
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(typdoc)="" s err="typdoc=" zt "merr"
 i $g(rrrrmm)="" s err="rrrrmm=" zt "merr"
 //
 s rrrr=(rrrrmm\100)
 //=====================================
 //global s nastavenim cislovani dokladu
 //=====================================
 i typdoc="d" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKAT"")"
 i typdoc="s" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKATSJ"")"
 //==================
 //zamek na pocitadlo
 //==================
 l +@glb@("ACT"):1 e  q 1_"~nolock"
 //==========
 //rada od-do
 //==========
 s val=$g(@glb@("N")) s cdod=+$p(val,":",1) s cddo=+$p(val,":",2) s val=""
 //=================================================================================
 //typ cislovani dokladu 0 kontinualne / 1 od nuly kazdy mesic / 2 od nuly kazdy rok
 //=================================================================================
 s typcis=+$g(@glb@("TCI"))
 //===================
 //aktualni pocitadlo
 //===================
 s ac=""
 i typcis=0 s ac=$g(@glb@("ACT"))
 i typcis=1 s ac=$g(@glb@("ACT",1,rrrrmm))
 i typcis=2 s ac=$g(@glb@("ACT",2,rrrr))
 //===============
 //prideleni cisla
 //===============
 i (ac="") s ac=(cdod-1)
 s ac=ac+1
 i (ac<cdod) s ac=cdod
 i (ac>cddo) s ac=cdod
 //==================
 //zapis cisla do glb
 //==================
 i typcis=0 s @glb@("ACT")=ac
 i typcis=1 s @glb@("ACT",1,rrrrmm)=ac
 i typcis=2 s @glb@("ACT",2,rrrr)=ac
 s out=ac
 //odemknuti pocitadla
 l -@glb@("ACT")
 q 0
 //
gPlnPracTypCisStt(idfa,nmsp,idprac,typdoc,in,out)
 //stav cislovani dokladu pro pracoviste
 //w $$gPlnPracTypCisStt^OBapiEDPlan1("VS_CASD","USER","LUHACOVICE","d","",.out) zw out
 //typdoc= "d" pravidelna doprava / "s" nepravidelna doprava
 //out("dta",1)=typcis typ cislovani dokladu 0 kontinualne / 1 kontinualne s nulovanim pri prechodu mesice / 2 kontinualne s nulovanim pri prechodu roku
 //out("dta",2)=stav pocitadla pro aktualni obdobi
 //out("arr",1,rrrrmm)=stav pocitadla pro typcis=1
 //out("arr",2,rrrr)=stav pocitadla pro typcis=2
 n (idfa,nmsp,idprac,typdoc,in,out)
 //========================================
 s $zt="err" k out s err=""
 //========================================
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(typdoc)="" s err="typdoc=" zt "merr"
 //================================
 //stav vuci aktualnimu obdobi v AD
 //================================
 k arr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.arr) i err zt "merr"
 s rrrrmm=$g(arr("act")) s rrrr=(rrrrmm\100)
 k arr
 //=====================================
 //global s nastavenim cislovani dokladu
 //=====================================
 i typdoc="d" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKAT"")"
 i typdoc="s" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKATSJ"")"
 //====
 //data
 //====
 s typcis=+$g(@glb@("TCI")) s out("dta",1)=typcis
 i typcis=0 s out("dta",2)=$g(@glb@("ACT"))
 i typcis=1 s out("dta",2)=$g(@glb@("ACT",1,rrrrmm)) m out("arr",1)=@glb@("ACT",1)
 i typcis=2 s out("dta",2)=$g(@glb@("ACT",2,rrrr)) m out("arr",2)=@glb@("ACT",2)
 q 0
 //
chngPlnPracTypCisDoc(idfa,nmsp,idprac,typdoc,newtypcis,in,out)
 // s err=$$chngPlnPracTypCisDoc(idfa,nmsp,idprac,typdoc,newtypcis,.in,.out)
 // w $$chngPlnPracTypCisDoc^OBapiEDPlan1("VS_CSAD","USER","LUHACOVICE","d",0,.in,.out)
 // typdoc= "d" pravidelna doprava / "s" nepravidelna doprava
 // zmena typu cislovani dokladu
 // newtypcis= typ cislovani dokladu:
 //	  0 = kontinualne, zmena pri dosazeni hranice do
 //	  1 = kontinualne, zmena pri dosazeni hranice do nebo zmeny rrrrmm
 //   2 = kontinualne, zmena pri dosazeni hranice do nebo zmeny rrrr
 //out("stt")=0 nezmeneno / 1 zmeneno
 //out("msg",cnt)=zprava
 n (idfa,nmsp,idprac,typdoc,newtypcis,in,out)
 //========================================
 s $zt="err1" k out s out("stt")=0 s err=""
 //========================================
 //
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(typdoc)="" s err="typdoc=" zt "merr"
 //====================================
 //kontrola vuci aktualnimu obdobi v AD
 //====================================
 k arr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.arr) i err zt "merr"
 s rrrrmm=$g(arr("act")) s rrrr=(rrrrmm\100) s maxhrl=$$gmaxhrlrrmm^OBapiED(rrrrmm)
 k arr
 //=====================================
 //global s nastavenim cislovani dokladu
 //=====================================
 i typdoc="d" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKAT"")"
 i typdoc="s" s glb="^["""_nmsp_"""]obpx("""_idprac_""",""TISKATSJ"")"
 //=================
 //stary stav 
 //=================
 s oldtypcis=+$g(@glb@("TCI"))
 //==============
 //stav se nemeni
 //==============
 i (newtypcis=oldtypcis) q 0
 //==================
 //zamek na pocitadlo
 //==================
 l +@glb@("ACT"):1 e  q 1_"~nolock"
 //============================================================
 //kontrola, zda nejsou v nasledujicim obdobi vystavene doklady
 //============================================================
 i typdoc="d" s glbdoc="^["""_nmsp_"""]obpy("""_idprac_""")"
 i typdoc="s" s glbdoc="^["""_nmsp_"""]obpz("""_idprac_""")"
 s ispossible=1
 i $o(@glbdoc@(maxhrl))'="" {
	 s ispossible=0
 }
 i oldtypcis=1 {
	 i $o(@glb@("ACT",1,rrrrmm))'="" {
		 s ispossible=0
	 }
 }
 i oldtypcis=2 {
	 i $o(@glb@("ACT",2,rrrr))'="" {
		 s ispossible=0
	 }
 }
 //=========================
 //kontrola na obdobi pro SJ
 //=========================
 //projdu vystavene doklady s odjezdem v aktualnim obdobi a kontroluju, zda nektery neni predznacen v pro nasledujici obdobi
 i typdoc="s" {
	 s hrl=($$gminhrlrrmm^OBapiED(rrrrmm)-.01)
	 f {
		 s hrl=$o(@glbdoc@(hrl)) i (hrl="")!(hrl>maxhrl)!('ispossible) q
		 s ac="" f {
			 s ac=$o(@glbdoc@(hrl,ac)) i (ac="")!('ispossible) q
			 s val=$g(@glbdoc@(hrl,ac))
			 i $p(val,":",6)>rrrrmm s ispossible=0	 
		 }
	 }
 }
 //=======
 //hlaseni
 //=======
 i ispossible=0 {
	 s out("msg",$i(out("msg")))="v období "_$$addmmtorrrrmm^OBapiED(rrrrmm,1)_" jsou již předznačené doklady, nelze !"
 }
 //zmena nastaveni
 i ispossible=1 {
	 s ac=""
	 //aktualni pocitadlo
	 i oldtypcis=0 s ac=$g(@glb@("ACT"))
 	 i oldtypcis=1 s ac=$g(@glb@("ACT",1,rrrrmm))
 	 i oldtypcis=2 s ac=$g(@glb@("ACT",2,rrrr))
 	 //vymazani puvodniho stavu
 	 k @glb@("ACT")
	 //nastaveni noveho stavu
	 s @glb@("TCI")=newtypcis
	 //prehozeni aktualniho stavu
	 i newtypcis=0 s @glb@("ACT")=ac
 	 i newtypcis=1 s @glb@("ACT",1,rrrrmm)=ac
 	 i newtypcis=2 s @glb@("ACT",2,rrrr)=ac
 	 s out("stt")=1
 }
 //===================
 //odemknuti pocitadla
 //===================
 l -@glb@("ACT")
 q 0
 //
err
 s $zt="" k out
 i $g(err)'="" s:err["~" err=$tr($p(err,"~",2,$l(err,"~")),"~","/") q "1~"_err
 q "1~"_$ze
err1
 s $zt="" k out
 i $g(glb)'="" l -@glb@("ACT")
 q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDPlan2" type="INT" languagemode="0" timestamp="65772,48483.267294"><![CDATA[
OBapiEDPlan2 q
 // plan dopravy, predtisk dokladu
fndPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,in,out)
 // s err=$$fndPlnDoc(idfa,nmsp,zp,idprac,hrl,in,out) - vyhleda doklady pro predtisk, + ocislovani
 //  - hrl(hrl)="" - moznost zavolat pro vice dni
 //  - in("dzva")=0/1 - predtisk dzva (ne/ano)
 //  - in("sj")=0/1 - predtisk sj (ne/ano)
 //  - out=wrk a naplni global
 //     - ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",cnt)=val
 //     cnt   val
 //     -----------------------
 //     1		spz
 //     2		ridic
 //     3		poznamka
 //     4       turnusova skupina
 //     5		kolikrat tisknuto
 //     6		ev.c.vozidla
 s $zt="err2"
 n cnt,spz,pc,sj,dzva,wrk,cdoc,val,horl,ri,txt,pc,ts,osc,tu,cobj
 s sj=+$g(in("sj")) s dzva=+$g(in("dzva"))
 k out
 // databaze pro vozidla
 s rznmsp=$$GetSystemDB^ALVAVOZIDLAapiC()
 // pracovni global pro cache udaju
 s cchwrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(cchwrk) 
 // projdu doklady - plan - zda je tam neco k tisku +- ocislovani
 k cnt s cnt=0
 s hrl="" f  s hrl=$o(hrl(hrl)) q:hrl=""  d
 .s spz="" f  s spz=$o(^[nmsp]OBPL(idprac,hrl,"A",spz)) q:spz=""  d
 ..s pc="" f  s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc)) q:pc=""  d
 ...// rozpis ne, jen naplanovane hodnoty
 ...q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"rozpis"))
 ...// ==================================
 ...// jen doklady
 ...q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"nodoc"))
 ...// ===========
 ...q:('sj)&($d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")))
 ...q:('dzva)&('$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")))
 ...// konec pokud neni nastaven predtisk
 ...q:(sj)&($d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")))&'$d(^[nmsp]obpx(idprac,"TISKATSJ"))
 ...q:(dzva)&('$d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"sj")))&'$d(^[nmsp]obpx(idprac,"TISKAT"))
 ...// ==================================
 ...s cnt=cnt+1
 .// kontrola, zda pro den nejsou prazdne doklady DZVA
 .s cdoc="" f  s cdoc=$o(^[nmsp]obpy(idprac,hrl,cdoc)) q:cdoc=""  d
 ..q:$d(^[nmsp]obpy(idprac,hrl,cdoc,"zruseno"))
 ..s val=$g(^[nmsp]obpy(idprac,hrl,cdoc)) s spz=$p(val,":",2)
 ..s:spz="" cnt=cnt+1
 .// kontrola, zda pro den nejsou prazdne doklady SJ
 .s cdoc="" f  s cdoc=$o(^[nmsp]obpz(idprac,hrl,cdoc)) q:cdoc=""  d
 ..q:$d(^[nmsp]obpz(idprac,hrl,cdoc,"zruseno"))
 ..s val=$g(^[nmsp]obpz(idprac,hrl,cdoc)) s spz=$p(val,":",2)
 ..s:spz="" cnt=cnt+1
 q:'cnt 0
 // ocislovani dokladu - jen pokud je nastaveno !!! u cslPlnDoc neosetrovat chyby, pokud se tiskne jen jeden typ dokladu, pada to
 s hrl="" f  s hrl=$o(hrl(hrl)) q:hrl=""  d
 .i dzva i $d(^[nmsp]obpx(idprac,"TISKAT")) s err=$$cslPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,"dzva",0,0,.in,.out) //zt:+err "merr" s err=""
 .i sj i $d(^[nmsp]obpx(idprac,"TISKATSJ")) s err=$$cslPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,"sj",0,0,.in,.out)   //zt:+err "merr" s err=""
 s err=""
 s wrk=$$gWrkJB^OBapiED() k ^CacheTempJB(wrk) s out=wrk
 i dzva d
 .// pole ts s tu
 .s wrkts=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkts)
 .s hrl="" f  s hrl=$o(hrl(hrl)) q:hrl=""  d
 ..// pole ts s tu
 ..k arri,wrkts s arri("idprac",idprac)="" s arri("tspl",1)=hrl
 ..s err=$$lScTS^OBapiED(idfa,nmsp,.arri,.wrkts) zt:+err "merr" s err=""
 ..i wrkts'="" d 
 ...s idts="" f  s idts=$o(^CacheTempJB(wrkts,idprac,idts)) q:idts=""  d
 ....s hrlts="" f  s hrlts=$o(^CacheTempJB(wrkts,idprac,idts,hrlts)) q:hrlts=""  d
 .....k arrts s err=$$gScTS^OBapiED(idfa,nmsp,idprac,idts,hrlts,"",.arrts) zt:+err "merr" s err=""
 .....s dsts=$g(arrts("dta",1))
 .....//turnusy
 .....s idpd="" f  s idpd=$o(arrts("arr",3,idpd)) q:idpd=""  d
 ......s idtu="" f  s idtu=$o(arrts("arr",3,idpd,"arr",1,idtu)) q:idtu=""  d
 .......s ^||wrk.ALVA.AD(wrkts,hrl,idtu)=dsts
 ...k ^CacheTempJB(wrkts)
 ..// ============
 ..s cdoc="" f  s cdoc=$o(^[nmsp]obpy(idprac,hrl,cdoc)) q:cdoc=""  d
 ...q:$d(^[nmsp]obpy(idprac,hrl,cdoc,"zruseno"))
 ...s val=$g(^[nmsp]obpy(idprac,hrl,cdoc)) s spz=$p(val,":",2)
 ...s cnt=0 s horl="" f  s horl=$o(^[nmsp]obpy(idprac,hrl,cdoc,horl)) q:horl=""  s cnt=cnt+1
 ...s ri="" s txt="" s ts="" d:spz'=""
 ....s pc="" s ind="" f  s ind=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) q:(ind="")!(pc)  d
 .....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))
 .....s:cdoc=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) pc=ind
 ....q:pc=""
 ....s osc="" f  s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) q:osc=""  d
 .....i $p($g(^[nmsp]OBPL(idprac,hrl,"L",osc)),":",1)="" d
 ......k arrosc s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arrosc) s err=""
 ......s $p(^[nmsp]OBPL(idprac,hrl,"L",osc),":",1)=$g(arrosc("dta",1))
 ......k arrosc
 .....s:$g(ri)'="" ri=$g(ri)_","
 .....s ri=ri_$p($g(^[nmsp]OBPL(idprac,hrl,"L",osc)),":",1)
 ....i $d(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T")) d
 .....s txt="tur="
 .....s tu="",ts="" f  s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu)) q:tu=""  d
 ......s txt=txt_tu_","
 ......s tstu=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"T",tu))		//ts postaru
 ......s:tstu="" tstu=$g(^||wrk.ALVA.AD(wrkts,hrl,tu))			//ts ponovu
 ......s ts=ts_tstu_","
 ...i $e(txt,$l(txt))="," s txt=$e(txt,1,$l(txt)-1)
 ...i $e(ts,$l(ts))="," s ts=$e(ts,1,$l(ts)-1)
 ...//evidencni cislo vozidla
 ...s evc=""
 ...i spz'="" d
 ....s:'$d(^||wrk.ALVA.AD(cchwrk,1,spz)) ^||wrk.ALVA.AD(cchwrk,1,spz)=##class(ALVA.VOZIDLA.MLAPI).VehicleGetEvc(rznmsp,spz)
 ....s evc=$g(^||wrk.ALVA.AD(cchwrk,1,spz))
 ...//=======================
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",1)=spz
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",2)=ri
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",3)=txt
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",4)=ts
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",5)=cnt
 ...s ^CacheTempJB(wrk,"d",idprac,hrl,cdoc,"dta",6)=evc
 .k ^||wrk.ALVA.AD(wrkts)
 i sj d
 .s hrl="" f  s hrl=$o(hrl(hrl)) q:hrl=""  d
 ..s cdoc="" f  s cdoc=$o(^[nmsp]obpz(idprac,hrl,cdoc)) q:cdoc=""  d
 ...q:$d(^[nmsp]obpz(idprac,hrl,cdoc,"zruseno"))
 ...s val=$g(^[nmsp]obpz(idprac,hrl,cdoc)) s spz=$p(val,":",2)
 ...s cnt=0 s horl="" f  s horl=$o(^[nmsp]obpz(idprac,hrl,cdoc,horl)) q:horl=""  s cnt=cnt+1
 ...s ri="",txt="" d:spz'=""
 ....s pc="" s ind="" f  s ind=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) q:(ind="")!(pc)  d
 .....q:'$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))
 .....s:cdoc=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) pc=ind
 ....q:pc=""
 ....s osc="" f  s osc=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc)) q:osc=""  d
 .....i $p($g(^[nmsp]OBPL(idprac,hrl,"L",osc)),":",1)="" d
 ......k arrosc s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arrosc) s err=""
 ......s $p(^[nmsp]OBPL(idprac,hrl,"L",osc),":",1)=$g(arrosc("dta",1))
 ......k arrosc
 .....s:$g(ri)'="" ri=$g(ri)_","
 .....s ri=ri_$p($g(^[nmsp]OBPL(idprac,hrl,"L",osc)),":",1)
 ....s cobj=$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"N",1,"OBJ"))
 ....q:cobj=""
 ....s rr=$p($$nd^OBapiED(hrl,0),".",3)#100
 ....s txt=$g(^[nmsp]OBOBJ(zp,"O",rr,cobj,"k"))
 ....s txt=txt_"/"_$p($g(^[nmsp]OBOBJ(zp,"O",rr,cobj)),":",4)
 ....s txt=txt_"/přist.="_$p($g(^[nmsp]OBOBJ(zp,"O",rr,cobj)),":",28)_"/čas="_$j($p($g(^[nmsp]OBOBJ(zp,"O",rr,cobj)),":",30),5,2)
 ....s txt=txt_"/do="_$p($g(^[nmsp]OBOBJ(zp,"O",rr,cobj)),":",33)
 ....s txt=cobj_" "_txt
 ...//evidencni cislo vozidla
 ...s evc=""
 ...i spz'="" d
 ....s:'$d(^||wrk.ALVA.AD(cchwrk,1,spz)) ^||wrk.ALVA.AD(cchwrk,1,spz)=##class(ALVA.VOZIDLA.MLAPI).VehicleGetEvc(rznmsp,spz)
 ....s evc=$g(^||wrk.ALVA.AD(cchwrk,1,spz))
 ...//=======================
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",1)=spz
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",2)=ri
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",3)=txt
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",4)=""
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",5)=cnt
 ...s ^CacheTempJB(wrk,"s",idprac,hrl,cdoc,"dta",6)=evc
 k ^||wrk.ALVA.AD(cchwrk) 
 q 0
 //
cslPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,typdoc,typcis,nbnc,in,out)
 // =============================== 
 // ocislovani dokladu pro uznavani
 // ===============================
 // typdoc="dzva" / typdoc="sj"
 // typcis=0 - ocisluje doklady pro dany hrl
 // typcis=1 - ocisluje prazdne doklady, v nbnc je pocet dokladu
 // in:
 //  in("arr",1,idprac,hrl,rz,pc)="" ... ocisluje pouze zadane doklady
 //
 n (idfa,nmsp,mlp,zp,idprac,hrl,typdoc,typcis,nbnc,in,out)
 s $zt="err2" k out s err=""
 //=============
 s nbnc=$g(nbnc)
 //==================
 //nastaveni programu
 //==================
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) i err zt "merr"
 //===============
 //jmeno uzivatele
 //===============
 k arri,arr s arri("mlp")=mlp
 s err=##class(ALVA.USERS.Api).GetFeatureOfUser(.arri,.arr) s err=""
 s ios=$tr($g(arr("Plné jméno")),":"," ")
 k arri,arr
 //================================
 //vychozi obdobi pro zapis dokladu
 //================================
 s rrrrmm=$$grrrrmmfromhrl^OBapiED(hrl) 
 //====================
 //doklady pro dany hrl
 //====================
 i 'typcis { 
	s spz="" f {
		s spz=$o(^[nmsp]OBPL(idprac,hrl,"A",spz)) i spz="" q
 		s ind="" f {
	 		s ind=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) i ind="" q
	 		//==========================
 			//kontrola na zadane doklady
 			//==========================
 			i ($d(in("arr",1))&('$d(in("arr",1,idprac,hrl,spz,ind)))) continue			//jen nektere, poslane v in("arr",1,...
 			i $d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"nodoc")) continue					//neni doklad
 			i $d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"rozpis")) continue					//neni plan
 			i (typdoc="dzva")&($d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))) continue	//cisluju dzva a doklad je sj
 			i (typdoc="sj")&('$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))) continue	//cisluju sj a doklad je dzva			
 			//==============
 			//cislovani DZVA
 			//==============
 			i typdoc="dzva" {
	 			//==================================
	 			//kontrola, zda neni fiktivni turnus
	 			//==================================
	 			k arr s err=$$gFktTu(idfa,nmsp,zp,idprac,hrl,spz,ind,"",.arr)
	 			i '$g(arr) {
		 			//doklad je ocislovan, kontrola, zda je odkaz do ^obpy, pripadne doplnim
 					//odkaz se maze pri del dokladu - zamena rz na doklade
 					i +$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) {
	 					s tmpac=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind))
 						i '$d(^[nmsp]obpy(idprac,hrl,tmpac)) {
	 						s ^[nmsp]obpy(idprac,hrl,tmpac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h_":"_rrrrmm
 						}
 					}
 					i '$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) {
	 					k ac
	 					s err=$$gPlnPracCisDoc^OBapiED(idfa,nmsp,idprac,"d",rrrrmm,"",.ac) i +err zt "merr"
	 					s ^[nmsp]OBPL(idprac,hrl,"A",spz,ind)=ac
	 					s ^[nmsp]obpy(idprac,hrl,ac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h_":"_rrrrmm
 					}

	 			}
 			}
 			//============
 			//cislovani SJ
 			//============
 			i typdoc="sj" {
	 			//========================
	 			//obdobi pro zapis dokladu
	 			//========================
	 			s rrrrmmsj=rrrrmm
 				// obdobi podle data prijezdu
 				i ('$g(arrset("arr",6,20))) {
 	 				k arr s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,ind,"",.arr) zt:+err "merr" s err=""
 	 				s idobj=$g(arr("dta",2))
 	 				i idobj'="" {
	 					k arr s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arr) zt:+err "merr" s err=""
	 					//============================
	 					//datum prijezdu na objednavce
	 					//============================
 						i $g(arr("dta",33)) s rrrrmmsj=$$grrrrmmfromhrl^OBapiED($g(arr("dta",33)))
 	 				}
 	 				k arr
 				}
	 			//doklad je ocislovan, kontrola, zda je odkaz do ^obpz, pripadne doplnim
 				//odkaz se maze pri del dokladu - zamena rz na doklade
 				i +$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) {
	 				s tmpac=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind))
 					i '$d(^[nmsp]obpz(idprac,hrl,tmpac)) {
	 					s ^[nmsp]obpz(idprac,hrl,tmpac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h_":"_rrrrmmsj	
 					}	
 				}
 				i '$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) {
	 				k ac
 					s err=$$gPlnPracCisDoc^OBapiED(idfa,nmsp,idprac,"s",rrrrmmsj,"",.ac) i +err zt "merr"
 					s ^[nmsp]OBPL(idprac,hrl,"A",spz,ind)=ac
 					s ^[nmsp]obpz(idprac,hrl,ac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h_":"_rrrrmmsj
 				}
 			}
 		}		
 	}	
 }
 //===============
 //prazdne doklady
 //===============
 i (typcis=1)&(nbnc) {
	 f ind=1:1:nbnc {
		//==============
 		//cislovani DZVA
 		//==============
 		i typdoc="dzva" {
	 		k ac
	 		s err=$$gPlnPracCisDoc^OBapiED(idfa,nmsp,idprac,"d",rrrrmm,"",.ac) i +err zt "merr"
	 		s ^[nmsp]obpy(idprac,hrl,ac)=idprac_":"_":"_":"_ios_":"_$h_":"_rrrrmm
 		}
 		//============
 		//cislovani SJ
 		//============
 		i typdoc="sj" {
	 		k ac
	 		s err=$$gPlnPracCisDoc^OBapiED(idfa,nmsp,idprac,"s",rrrrmm,"",.ac) i +err zt "merr"
	 		s ^[nmsp]obpz(idprac,hrl,ac)=idprac_":"_":"_":"_ios_":"_$h_":"_rrrrmm
 		}
	}
 }
 q 0
 /*
cslPlnDoc(idfa,nmsp,mlp,zp,idprac,hrl,typdoc,typcis,nbnc,in,out) 
 // ocislovani dokladu
 // typdoc="dzva" / typdoc="sj"
 // typcis=0 - ocisluje doklady pro dany hrl
 // typcis=1 - ocisluje prazdne doklady
 // ^[nmsp]obpz(idprac,$h,cdokl)=pracoviste:spz:ind:kdo:kdy
 // ^[nmsp]obpy(idprac,$h,cdokl)=pracoviste:spz:ind:kdo:kdy
 // in:
 //  in("arr",1,idprac,hrl,rz,pc)="" ... ocisluje pouze zadane doklady
 //
 s $zt="errCslDoc"
 n datt,rrmm,ios,val,cdod,cddo,ac,ind,arrftu,err
 s datt=$$nd^OBapiED(hrl,0) s rrmm=$p(datt,".",3)#100*100+$p(datt,".",2)
 s nbnc=$g(nbnc)
 //jmeno uzivatele
 k arriusr,arrousr
 s arriusr("mlp")=mlp
 s err=##class(ALVA.USERS.Api).GetFeatureOfUser(.arriusr,.arrousr) s err=""
 s ios=$tr($g(arrousr("Plné jméno")),":"," ")
 k arriusr,arrousr
 //===============
 s:typdoc="dzva" val=$g(^[nmsp]obpx(idprac,"TISKAT","N"))
 s:typdoc="sj" val=$g(^[nmsp]obpx(idprac,"TISKATSJ","N"))
 s cdod=+val s cddo=+$p(val,":",2)
 // kontola na nastaveni cislovani
 i cdod=cddo q 1_"od=do"
 i typdoc="dzva" l +^[nmsp]obpx(idprac,"TISKAT","ACT"):1 e  q 1_"l"
 i typdoc="sj" l +^[nmsp]obpx(idprac,"TISKATSJ","ACT"):1 e  q 1_"l"
 // dzva, neni li nastaveny ukazatel podiva se to do globalu dokladu a nastavi aktualni cislo 
 i (typdoc="dzva")&('$d(^[nmsp]obpx(idprac,"TISKAT","ACT"))) d
 .s ac=$o(^[nmsp]OBD(zp,rrmm,(cddo+1),-1))
 .i (ac<cdod)!(ac'<cddo) s ac=cdod-1
 .s ^[nmsp]obpx(idprac,"TISKAT","ACT")=ac
 // sj, neni li nastaveny ukazatel podiva se to do globalu dokladu a nastavi aktualni cislo 
 i (typdoc="sj")&('$d(^[nmsp]obpx(idprac,"TISKATSJ","ACT"))) d
 .s ac=$o(^[nmsp]OBD(zp,rrmm,((cddo*100000)+1)),-1) s:ac<100000 ac="" s:ac'<100000 ac=ac-100000
 .i (ac<cdod)!(ac'<cddo) s ac=cdod-1
 .s ^[nmsp]obpx(idprac,"TISKATSJ","ACT")=ac
 s:typdoc="dzva" ac=$g(^[nmsp]obpx(idprac,"TISKAT","ACT"))
 s:typdoc="sj" ac=$g(^[nmsp]obpx(idprac,"TISKATSJ","ACT"))
 s:(ac<cdod)!(ac>cddo) ac=cdod-1 s:ac<1 ac=0
 //doklady
 d:'typcis
 .s spz="" f  s spz=$o(^[nmsp]OBPL(idprac,hrl,"A",spz)) q:spz=""  d
 ..s ind="" f  s ind=$o(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) q:ind=""  d
 ...//kontrola na zadane doklady pro precidlovani
 ...i $d(in("arr",1)) q:'$d(in("arr",1,idprac,hrl,spz,ind))
 ...//===========================================
 ...i typdoc="dzva" d
 ....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"nodoc"))
 ....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"rozpis"))
 ....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))
 ....s err=$$gFktTu(idfa,nmsp,zp,idprac,hrl,spz,ind,"",.arrftu) q:+$g(arrftu)
 ....//doklad je ocislovan, kontrola, zda je odkaz do ^obpy, pripadne doplnim
 ....//odkaz se maze pri del dokladu - zamena rz na doklade
 ....i +$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) d  q
 .....s tmpac=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind))
 .....q:$d(^[nmsp]obpy(idprac,hrl,tmpac))
 .....s ^[nmsp]obpy(idprac,hrl,tmpac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h
 ....//======================================================================
 ....//<jb> 9.11.2012 - lze predtisknout doklady, na kterych neni ridic
 ....//q:'$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"R"))
 ....s ac=ac+1 s:ac>cddo ac=cdod
 ....s ^[nmsp]OBPL(idprac,hrl,"A",spz,ind)=ac
 ....s ^[nmsp]obpy(idprac,hrl,ac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h
 ....s ^[nmsp]obpx(idprac,"TISKAT","ACT")=ac
 ...i typdoc="sj" d
 ....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"nodoc"))
 ....q:$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"rozpis"))
 ....q:'$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"sj"))
 ....//<jb> 30.4.2011 povolen predtisk SJ bez objednavky
 ....//q:$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"N",1,"OBJ"))=""
 ....//doklad je ocislovan, kontrola, zda je odkaz do ^obpz, pripadne doplnim
 ....//odkaz se maze pri del dokladu - zamena rz na doklade
 ....i +$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind)) d  q
 .....s tmpac=+$g(^[nmsp]OBPL(idprac,hrl,"A",spz,ind))
 .....q:$d(^[nmsp]obpz(idprac,hrl,tmpac))
 .....s ^[nmsp]obpz(idprac,hrl,tmpac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h
 ....//======================================================================
 ....//<jb> 9.11.2012 - lze predtisknout doklady, na kterych neni ridic
 ....//q:'$d(^[nmsp]OBPL(idprac,hrl,"A",spz,ind,"R"))
 ....s ac=ac+1 s:ac>cddo ac=cdod
 ....s ^[nmsp]OBPL(idprac,hrl,"A",spz,ind)=ac
 ....s ^[nmsp]obpz(idprac,hrl,ac)=idprac_":"_spz_":"_ind_":"_ios_":"_$h
 ....s ^[nmsp]obpx(idprac,"TISKATSJ","ACT")=ac
 //prazdne dzva
 d:(typcis=1)&(nbnc)&(typdoc="dzva")
 .f ind=1:1:nbnc d
 ..s ac=ac+1 s:ac>cddo ac=cdod
 ..s ^[nmsp]obpy(idprac,hrl,ac)=idprac_":"_":"_":"_ios_":"_$h d
 ..s ^[nmsp]obpx(idprac,"TISKAT","ACT")=ac
 //prazdne sj
 d:(typcis=1)&(nbnc)&(typdoc="sj")
 .f ind=1:1:nbnc d
 ..s ac=ac+1 s:ac>cddo ac=cdod
 ..s ^[nmsp]obpz(idprac,hrl,ac)=idprac_":"_":"_":"_ios_":"_$h d
 ..s ^[nmsp]obpx(idprac,"TISKATSJ","ACT")=ac
 l:typdoc="dzva" -^[nmsp]obpx(idprac,"TISKAT","ACT")
 l:typdoc="sj" -^[nmsp]obpx(idprac,"TISKATSJ","ACT")
 q 0
errCslDoc
 s $zt=""
 i ($g(nmsp)'="")&(($g(idprac)'="")) d
 .l:$g(typdoc)="dzva" -^[nmsp]obpx(idprac,"TISKAT","ACT")
 .l:$g(typdoc)="sj" -^[nmsp]obpx(idprac,"TISKATSJ","ACT")
 q 1_$ze
 */
gFktTu(idfa,nmsp,zp,idprac,hrl,spz,ind,in,out)
 // err=$$gFikTu(idfa,nmsp,zp,idprac,hrl,spz,ind,.in,.out)
 // vyhledani fiktivnich turnusu na doklade
 // - vrati out=0 - pokud doklad neobsahuje fiktivni doklad
 // - vrati out>0 - pocet fiktivnich turnusu
 n (idfa,nmsp,zp,idprac,hrl,spz,ind,in,out)
 s $zt="err2" k out s out=0
 k arrdoc s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 s tu="" f  s tu=$o(arrdoc("arr",2,tu)) q:tu=""  d
 .s err=$$gTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.hrltu) zt:+err "merr" s err=""
 .q:'$g(hrltu)
 .k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrltu,"",.arrtu) zt:+err "merr" s err=""
 .s fikt=$g(arrtu("dta",29))
 .i fikt s out=out+1 s out("fkttu",zp,tu,hrltu)=""
 q 0
gPlnDocDta(idfa,nmsp,in,out)
 // k ^wwwq m ^wwwq=in
 // k i m i=^wwwq w $$gPlnDocDta^OBapiED("VS_CSAD","user",.i,.o)
 // s err=$$gPlnDocDta(idfa,nmsp,in,out)
 //  - vrati data k dokladum pro predtisk
 //  - predznaci doklady do globalu ^OBD
 //  - poznaci, ze byl proveden predtisk
 // in("dta","d/s",idprac,hrl,cdoc)=""
 // in("set","prt")="" - je li nadefinovan uzel, program zapise tisk
 // in("idos")=mlp~loginname~fullname 
 n (idfa,nmsp,in,out)
 s $zt="err2" k out s err=""
 s wrk=$$gWrkJB^OBapiED() k ^CacheTempJB(wrk) s out=wrk
 s typdoc="" f  s typdoc=$o(in("dta",typdoc)) q:typdoc=""  d
 .s idprac="" f  s idprac=$o(in("dta",typdoc,idprac)) q:idprac=""  d
 ..k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 ..s hrl="" f  s hrl=$o(in("dta",typdoc,idprac,hrl)) q:hrl=""  d
 ...s cdoc="" f  s cdoc=$o(in("dta",typdoc,idprac,hrl,cdoc)) q:cdoc=""  d
 ....// ==
 ....// sj
 ....// ==
 ....i typdoc="s" d
 .....k arrppdoc s err=$$gPlnPrtDoc^OBapiED(idfa,nmsp,typdoc,idprac,hrl,cdoc,"",.arrppdoc) zt:+err "merr" s err=""
 .....s spz=$g(arrppdoc("dta",2)) s pc=$g(arrppdoc("dta",3))
 .....s idobj="" k arrdoc
 .....i pc'="" s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 .....s idobj=$g(arrdoc("dta",2)) //q:idobj=""
 .....// ===================
 .....// predznaceni dokladu
 .....// ===================
 .....i ($g(arrprac("dta",15))) d
 ......k arri m arri("idos")=in("idos") i (spz="")!(pc="") s arri("dta",1)=cdoc	//pro prazdny doklad, poslu do funkce cislo dokladu sj
 ......s err=$$przPlnSJ(idfa,nmsp,idprac,hrl,spz,pc,.arri,"") zt:+err "merr" s err=""
 .....s iddoc=typdoc_"|"_idprac_"|"_hrl_"|"_cdoc
 .....k i,o s i("idobj")=idobj s err=$$gPlnDocDtaSJ(idfa,nmsp,iddoc,spz,pc,.i,.o) zt:+err "merr" s err=""
 .....s err="" m ^CacheTempJB(wrk,typdoc,idprac,hrl,cdoc)=o
 .....i $d(in("set","prt")) s err=$$tPlnPrtDoc^OBapiED(idfa,nmsp,iddoc,"","") zt:+err "merr" s err=""
 ....//======
 ....// dzva 
 ....//======
 ....i typdoc="d" d
 .....k arrppdoc s err=$$gPlnPrtDoc^OBapiED(idfa,nmsp,typdoc,idprac,hrl,cdoc,"",.arrppdoc) zt:+err "merr" s err=""
 .....s spz=$g(arrppdoc("dta",2)) s pc=$g(arrppdoc("dta",3)) s kdo=$g(arrppdoc("dta",4)) s kdy=$g(arrppdoc("dta",5))
 .....//=====================
 .....// predznaceni dokladu 
 .....//=====================
 .....i ($g(arrprac("dta",10))) d
 ......k arri m arri("idos")=in("idos") i (spz="")!(pc="") s arri("dta",1)=cdoc // pro prazdny doklad poslu do funkce cislo dokladu dzva
 ......s err=$$przPlnDZ(idfa,nmsp,idprac,hrl,spz,pc,.arri,"") zt:+err "merr" s err=""
 .....s iddoc=typdoc_"|"_idprac_"|"_hrl_"|"_cdoc
 .....k i,o s err=$$gPlnDocDtaDZ(idfa,nmsp,iddoc,spz,pc,.i,.o) zt:+err "merr" s err=""
 .....s err="" m ^CacheTempJB(wrk,typdoc,idprac,hrl,cdoc)=o
 .....i $d(in("set","prt")) s err=$$tPlnPrtDoc^OBapiED(idfa,nmsp,iddoc,"","") zt:+err "merr" s err=""
 q 0
gPlnDocDtaDZ(idfa,nmsp,iddoc,spz,pc,in,out)
 // s err=$$gPlnDocDtaDZ(idfa,nmsp,iddoc,spz,pc,in,out) - vrati data k dokladum pro predtisk - DZVA
 // - out
 //   out("dta",1)=iddoc
 //   out("dta",2)=firma1
 //   out("dta",3)=firma2
 //	  out("dta",3,1)=ulice
 //	  out("dta",3,2)=mesto
 //	  out("dta",3,3)=psc
 //	  out("dta",3,4)=ico
 //	  out("dta",3,5)=dic
 //   out("dta",4)=cdoc
 //   out("dta",4,1)=pr-rrmm-cdoc (cele cislo dokladu provoz-rokmesic-cislo)
 //   out("dta",5)=provoz
 //   out("dta",6)=spz
 //   out("dta",7)=spztyp
 //   out("dta",8,cnt)=jm~osc~poznamka
 //   out("dta",9)=spzprives
 //   out("dta",10)=misto(plan)
 //   out("dta",11)=datum pristaveni (dd.mm.rrrr/den)
 //   out("dta",12,cnt)=turnus (textove)
 //   out("dta",12,cnt,1)=turnus (textove s kmen.linkou)
 //   out("dta",12,cnt,2)=turnus (textove s cislem pro odbavovaci zarizeni)
 //   out("dta",13,cnt)=spoje +
 //   out("dta",14,cnt)=spoje -
 //   out("dta",15)=phm,norma
 //   out("dta",16,cnt)=poznamky
 //   out("dta",17)=vystaveni misto/datum (identifikator pracoviste/dd.mm.rrrr)
 //   out("dta",18)=vystaveni kdo
 //   out("dta",19)=predchozi prace(textove, pro vsechny ridice)
 //   out("dta",20)=datum, (plan-1)
 //   out("dta",21)=vychozi stanoviste (pro pracoviste)
 //   out("dta",23)=datum pristaveni (dd.mm.rrrr)
 //   out("dta",24)=spz - evidencni cislo
 //   out("dta",25)=cas pristaveni
 //   out("dta",26)=cas odstaveni
 //   out("dta",27)=spz - zakladni spotreba phm
 //   out("dta",28)=zakaznik nazev 
 //   out("dta",28,1)=zakaznik ulice
 //   out("dta",28,2)=zakaznik obec
 //   out("dta",28,3)=zakaznik psc
 //   out("dta",29)=priznak zaskolovani
 //   out("arr","osc",osc,1)=jmeno ridice
 //   out("arr","osc",osc,2)=datum narozeni ridice
 //   out("arr","osc",osc,3)=cislo OP
 //   out("arr","osc",osc,4)=cislo PAS
 //   out("arr","osc",osc,5)=cislo RP
 //   out("arr","osc",osc,6)=skupina RP
 //   out("arr","osc",osc,7)=datum nastupu
 //   out("arr","osc",osc,8,hrl,id)=doklad~cinnost~zacatek~konec~hod_celk~hod_ji~hod_noc~hod_cek (rozpis predchozi prace)
 //   out("arr","pci",1)=0/1  1 je potreba potvrzeni o cinnosti
 //   out("arr","pci",2)=datum od
 //   out("arr","pci",3)=datum do
 //   out("arr","pci",4)=vedouci pracovnik
 //   out("arr","pci",5)=pozice vedouciho pracovnika
 //   out("arr","tur",idtur)=od~do~km~hc~die~nocv~idturodb ... data turnusu pro tabulku
 //   out("arr","tur",idtur,"txh",cnt)=zahlavi
 //   out("arr","tur",idtur,"txd",cnt)=poznamky na dzva
 //   out("arr","tur",idtur,"lsod")=liod~spod
 //   out("arr","tur",idtur,"lsdo")=lido~spdo
 n (idfa,nmsp,iddoc,spz,pc,in,out)
 s $zt="err2" k out s err=""
 s nmsprz=$$GetSystemDB^ALVAVOZIDLAapiC()
 s idprac=$p(iddoc,"|",2) s hrl=$p(iddoc,"|",3) s cdoc=$p(iddoc,"|",4)
 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 k arrfios s err=##class(ALVA.ADMAIN.ApiOS).listFiktOs(idfa,nmsp,hrl,"",.arrfios) zt:+err "merr" s err=""
 s err=$$mkZP^OBapiED(idfa,$g(arrprac("dta",1)),"","",.zp) zt:+err "merr" s err=""
 s:spz="" spz="-" s:pc="" pc=" "
 k arrin s arrin("datzdpl")=hrl k arrfa s err=$$gIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),.arrin,.arrfa) zt:+err "merr" s err=""
 k arrprv s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),(zp#100),"",.arrprv) zt:+err "merr" s err=""
 k isplnd s err=$$isPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.isplnd) zt:+err "merr" s err=""
 k arrdoc s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 k isziphm s err=$$isZiSpoNPHM^OBapiED(idfa,nmsp,hrl,"",.isziphm) zt:+err "merr" s err=""
 k arrspz i spz'="-" s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,spz,"",.arrspz) zt:+err "merr" s err=""
 // konverze na aktualni spz
 s actspz=""
 i spz'="-" d
 .s actspz=$$VehicleGetRz^ALVAVOZIDLAapiC(nmsprz,spz,hrl)
 .i (actspz="")!(actspz=-1)!(actspz=-2) s actspz=spz
 // ========================
 s:spz="-" spz=" "
 // rrrrmm pro cele cislo dokladu
 s rrrrmm="" s rrrrmm=$$nd^OBapiED(hrl,0)
 s rrrrmm=($p(rrrrmm,".",3)*100)+$p(rrrrmm,".",2)
 // =============================
 s glbdzv="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @glbdzv
 s out("dta",1)=iddoc
 s out("dta",2)=$g(arrfa("dta",2))
 s txt=$g(arrfa("dta",13))
 i $g(arrfa("dta",14))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrfa("dta",14))
 i $g(arrfa("dta",15))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrfa("dta",15))
 s out("dta",3)=txt
 s out("dta",3,1)=$g(arrfa("dta",13))
 s out("dta",3,2)=$g(arrfa("dta",14))
 s out("dta",3,3)=$g(arrfa("dta",15))
 s out("dta",3,4)=$g(arrfa("dta",7))
 s mydic=$g(arrfa("dta",8))
 k myarr s err=$$gSkRegDphDic^OBapiED(idfa,hrl,"",.myarr) zt:+err "merr" s err=""
 i $g(myarr("dta",2))'="" s mydic=$g(myarr("dta",2))
 k myarr
 s out("dta",3,5)=mydic
 s out("dta",4)=cdoc
 s out("dta",4,1)=$g(arrprac("dta",1))_"-"_rrrrmm_"-"_cdoc
 s txt=$g(arrprv("dta",1))
 s out("dta",5)=txt												// provoz
 s out("dta",6)=actspz											// spz
 s out("dta",7)=$g(arrspz("dta",5))_" "_$g(arrspz("dta",6))     // typ auta
 s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d			// ridici
 .s cnt=$g(arrdoc("arr",1,osc,"dta",2)) s:'cnt cnt=osc
 .k arrosc s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arrosc) s err=""
 .//fiktivni ridic
 .s ptosc=osc
 .i ('$g(arrprac("dta",38)))&($d(arrfios("arr",osc))) k arrosc s ptosc="-"
 .s out("dta",8,cnt)=$g(arrosc("dta",1))_"~"_ptosc_"~"_$g(arrdoc("arr",1,osc,"dta",1))
 .s out("arr","osc",ptosc,1)=$g(arrosc("dta",1))                    //jm
 .s out("arr","osc",ptosc,2)=$$nd^OBapiED($g(arrosc("dta",2)),0)    //datnar
 .s out("arr","osc",ptosc,3)=$g(arrosc("dta",18))                   //op
 .s out("arr","osc",ptosc,4)=$g(arrosc("dta",19))                   //pas
 .s out("arr","osc",ptosc,5)=$g(arrosc("dta",17))      	            //rp
 .s out("arr","osc",ptosc,6)=$g(arrosc("dta",16))					//skupina rp
 .s out("arr","osc",ptosc,7)=$$nd^OBapiED($g(arrosc("dta",3)),0)    //datnast
 s out("dta",9)=$g(arrdoc("dta",11))								//prives
 s out("dta",10)=$g(arrprac("dta",4))								//vychozi misto (stanoviste)
 s:$g(arrdoc("dta",3))'="" out("dta",10)=$g(arrdoc("dta",3))		//misto (stanoviste) na doklade
 s out("dta",11)=$$nd^OBapiED(hrl,0)_"/"_$p("Pondělí:Úterý:Středa:Čtvrtek:Pátek:Sobota:Neděle",":",hrl+3#7+1)
 s out("dta",23)=$$nd^OBapiED(hrl,0)
 s out("dta",24)=$g(arrspz("dta",41))
 s out("dta",27)=$g(arrspz("dta",15))								//spz, zakladni norma
 i +$g(isziphm("stt")) s out("dta",27)=$g(arrspz("dta",16))			//spz, zimni norma
 //prazdny doklad a je nastaveno, ze se netiskne datum ===
 i '$g(isplnd) i '$g(arrprac("dta",11)) s out("dta",11)="" s out("dta",23)=""
 //==========================================================================
 k bearr k arr s arr=""												// turnus
 s tu="" f  s tu=$o(arrdoc("arr",2,tu)) q:tu=""  d
 .s err=$$gTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.ver) s err=""
 .s odo="" d
 ..s maxspkm=0
 ..k i,o i +ver s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,ver,"",.o) zt:+err "merr" s err=""
 ..s odx=$j($o(o("arr","tur","")),0,0)
 ..s dox=$j($o(o("arr","tur",""),-1),0,0)
 ..s xkm=$g(o("arr","tuv",22))
 ..s hcl=$tr($j($$mh^OBapiED($g(o("arr","tuv",11))),0,2),".",":") 	//hodiny celkem
 ..s ncv=+$g(o("dta",26))											//nocovne
 ..s die=+$g(o("arr","tuv",18))										//diety
 ..s turodbzar=$g(o("dta",31))										//id turnusu pro odbavovaci zarizeni
 ..s kmenli=$g(o("dta",12))											//kmen.linka
 ..s nxtday=(dox\1440)												//pocet dalsich dnu v pripade vicedenniho turnusu
 ..// maximalni delka spoje
 ..s cas="" f  s cas=$o(o("arr","tur",cas)) q:(cas="")!(cas?.a)  d
 ...q:$g(o("arr","tur",cas,"dta",2))'=3
 ...s:$g(o("arr","tur",cas,"dta",3))>maxspkm maxspkm=$g(o("arr","tur",cas,"dta",3))
 ..//======================
 ..// turnus je upraven - oddo - uprava casu a km
 ..i ($g(arrdoc("arr",2,tu,"dta",1))'="")!($g(arrdoc("arr",2,tu,"dta",2))'="") d
 ...// konverze lsod:lsdo na casod:casdo:km
 ...k ot s err=$$gPlnPrtTuOdDo(idfa,nmsp,zp,tu,ver,$g(arrdoc("arr",2,tu,"dta",1)),$g(arrdoc("arr",2,tu,"dta",2)),"",.ot) zt:+err "merr" s err=""
 ...s tmp=$g(ot) s maxspkm=+$g(ot("maxspkm"))
 ...s:$p(tmp,":",1) odx=$p(tmp,":",1)
 ...s:$p(tmp,":",2) dox=$p(tmp,":",2)
 ...s:$p(tmp,":",3) xkm=$p(tmp,":",3)
 ...s nxtday=(dox\1440)												//pocet dalsich dnu v pripade vicedenniho turnusu
 ..//============================================
 ..s odo=$tr($j($$mh^OBapiED(odx#1440),0,2),".",":")_"-"_$tr($j($$mh^OBapiED(dox#1440),0,2),".",":")
 ..//v pripade vicedennich turnusu a (turnus je tridenni a vic) nebo (dvoudenni a cas prijezdu neni mensi nez cas odjezdu) tisknu datum prijezdu  
 ..i (nxtday>1)!((nxtday=1)&((dox#1440)'<(odx#1440))) d
 ...s odo=odo_"("_$p($$nd^OBapiED(hrl+nxtday,1),".",1,2)_"."_")"
 ..s tmp=$g(o("arr","txh",1))
 ..s arr(tu)=tu_" - "
 ..s:tmp'="" arr(tu)=arr(tu)_tmp_" - "
 ..s arr(tu)=arr(tu)_$g(odo)_"/"_$G(xkm)_" km"
 ..i ($g(arrdoc("arr",2,tu,"dta",1))'="")!($g(arrdoc("arr",2,tu,"dta",2))'="") s arr(tu,"oddo")=$g(arrdoc("arr",2,tu,"dta",1))_":"_$g(arrdoc("arr",2,tu,"dta",2))
 ..s arr(tu,"maxspkm")=maxspkm
 ..s arr(tu,"kmenli")=kmenli
 ..//turnus datove out("arr","tur",turid)=od~do~km~hc~die~nocv ... data turnusu pro tabulku
 ..s out("arr","tur",tu)=$tr($j($$mh^OBapiED(odx#1440),0,2),".",":")_"~"_$tr($j($$mh^OBapiED(dox#1440),0,2),".",":")_"~"_xkm_"~"_hcl_"~"_die_"~"_ncv_"~"_turodbzar
 ..m out("arr","tur",tu,"txh")=o("arr","txh")
 ..m out("arr","tur",tu,"txd")=o("arr","txd")
 ..s out("arr","tur",tu,"lsod")=$g(arrdoc("arr",2,tu,"dta",1))
 ..s out("arr","tur",tu,"lsdo")=$g(arrdoc("arr",2,tu,"dta",2))
 ..s bearr(1,(+$g(odx)))=""
 ..s bearr(2,(+$g(dox)))=""
 ..//predznaceni do glbdzv - turnus
 ..s idtu=""
 ..s $p(idtu,"~",1)=tu
 ..i $g(arrdoc("arr",2,tu,"dta",1))'="" s $p(idtu,"~",2)=$p($g(arrdoc("arr",2,tu,"dta",1)),"~",1) s $p(idtu,"~",3)=$p($g(arrdoc("arr",2,tu,"dta",1)),"~",2)
 ..i $g(arrdoc("arr",2,tu,"dta",2))'="" s $p(idtu,"~",4)=$p($g(arrdoc("arr",2,tu,"dta",2)),"~",1) s $p(idtu,"~",5)=$p($g(arrdoc("arr",2,tu,"dta",2)),"~",2)
 ..s @glbdzv@("arr","edv",hrl,"arr",1,idtu,"par",1)=$i(@glbdzv)
 ..//predznaceni do glbdzv - spoje -
 ..i $d(arrdoc("arr",4)) d
 ...s cas="" f  s cas=$o(o("arr","tur",cas)) q:(cas="")  d
 ....i $g(o("arr","tur",cas,"dta",2))'=3 q
 ....s tmp="" f  s tmp=$o(arrdoc("arr",4,tmp)) q:tmp=""  d
 .....s li=$p($g(arrdoc("arr",4,tmp,"dta",1)),"~",1)
 .....s sp=$p($g(arrdoc("arr",4,tmp,"dta",1)),"~",2)
 .....i ($g(o("arr","tur",cas,"dta",5))=li)&($g(o("arr","tur",cas,"dta",6))=sp) d
 ......s @glbdzv@("arr","edv",hrl,"arr",99,cas_"~"_$i(@glbdzv),"par",1)=$g(@glbdzv)
 ..//turnus se fakturuje, prednastavim zakaznika
 ..i $g(o("dta",38))=1 d
 ...s idzak=$g(o("dta",39))
 ...i idzak'="" d
 ....k arrzak s err=##class(ALVA.ZAKAZNICI.MLAPI).Load(idfa,$$gSystemNmsp^OBapiED(),idzak,"",.arrzak)
 ....s out("dta",28)=$g(arrzak("ObchNaz1")) 
 ....s out("dta",28,1)=$g(arrzak("Ulice"))
 ....s out("dta",28,2)=$g(arrzak("Sidlo"))
 ....s out("dta",28,3)=$g(arrzak("Psc"))
 ..//===============================
 // zaskolovani
 s out("dta",29)=+$g(arrdoc("dta",12))
 //  turnus od - do ...
 s cnt=1
 s tu="" f  s tu=$o(arr(tu)) q:tu=""  d
 .s out("dta",12,cnt)=arr(tu)
 .s out("dta",12,cnt,1)=arr(tu)
 .s:$g(kmenli)'="" out("dta",12,cnt,1)=$g(out("dta",12,cnt,1))_"/"_$g(kmenli)
 .s out("dta",12,cnt,2)=arr(tu)
 .s:$g(turodbzar)'="" out("dta",12,cnt,2)=$g(out("dta",12,cnt,2))_"/"_$g(turodbzar)
 .s cnt=cnt+1
 // pristaveni a odstaveni
 s val=$o(bearr(1,"")) s val=$tr($j($$mh^OBapiED(val#1440),0,2),".",":")
 s out("dta",25)=val
 s val=$o(bearr(2,""),-1) s val=$tr($j($$mh^OBapiED(val#1440),0,2),".",":")
 s out("dta",26)=val
 k berr
 // spoje +
 s cnt=1 s tmp="" f  s tmp=$o(arrdoc("arr",3,tmp)) q:tmp=""  d
 .s sp=$g(arrdoc("arr",3,tmp,"dta",1))
 .s out("dta",13,cnt)=$p(sp,"~")_"/"_$p(sp,"~",2) s cnt=cnt+1
 .//predznaceni do glbdzv
 .s @glbdzv@("arr","edv",hrl,"arr",2,sp,"par",1)=$i(@glbdzv)
 .//=====================
 // spoje -
 s cnt=1 s tmp="" f  s tmp=$o(arrdoc("arr",4,tmp)) q:tmp=""  d
 .s sp=$g(arrdoc("arr",4,tmp,"dta",1))
 .s out("dta",14,cnt)=$p(sp,"~")_"/"_$p(sp,"~",2) s cnt=cnt+1
 // ocekavana spotreba PHM pokud je rz
 s out("dta",15)=""
 i $tr(spz,"- ","")'="" d
 .//doplnim udaje
 .s @glbdzv@("dta",4)=hrl
 .s @glbdzv@("dta",6)=spz 											//rz
 .// aktualizace udaju u turnusu (mzd.coef,diety, nocovne,...)
 .s err=##class(ALVA.ADZPRACOVANI.DZVAData).actTurArrEdv(idfa,nmsp,zp,$g(@glbdzv@("dta",4)),glbdzv,"") s err="" //zt:+err "merr" s err=""
 .// sestaveni prubehu
 .s err=##class(ALVA.ADZPRACOVANI.DZVAData).mkArrTurFromArrEdv(idfa,nmsp,zp,$g(@glbdzv@("dta",4)),.glbdzv,"") s err="" //zt:+err "merr" s err=""
 .// aktualizace udaju norm.phm
 .s err=##class(ALVA.ADZPRACOVANI.DZVAData).updDtaNormPhm(idfa,nmsp,zp,glbdzv,"","") s err="" //zt:+err "merr" s err=""
 .// vypocet
 .s err=##class(ALVA.ADZPRACOVANI.DZVAData).updNormPhm(idfa,nmsp,glbdzv,spz,hrl,"","") s err="" //zt:+err "merr" s err=""
 .// ======================
 .s out("dta",15)=$j($g(@glbdzv@("dta",15)),0,1)
 k @glbdzv
 // ===================================
 // poznamky
 s cnt=1 s tmp="" f  s tmp=$o(arrdoc("arr",5,tmp)) q:tmp=""  d
 .s out("dta",16,cnt)=$g(arrdoc("arr",5,tmp)) s cnt=cnt+1
 // vystaveni misto/datum
 s out("dta",17)=idprac_" / "_$$nd^OBapiED($p($g(^[nmsp]obpy(idprac,hrl,cdoc)),":",5),0)
 // vystavil kdo
 s out("dta",18)=$p($g(^[nmsp]obpy(idprac,hrl,cdoc)),":",4)
 //predchozi prace - dle nove legislativy turnus do 50km 1 den, jinak 35 dni
 s maxkmsp=0 s tu="" f  s tu=$o(arr(tu)) q:tu=""  s:$g(arr(tu,"maxspkm"))>maxkmsp maxkmsp=arr(tu,"maxspkm")
 s ppdnu=0 s:maxkmsp>49 ppdnu=35
 //predchozi prace - novy pozadavek - 28 dnu
 s ppdnu=28
 //nove lze nastavit pocet dnu zpet v nastaveni planovaciho pracoviste, pokud je, pak pouziju
 i $g(arrprac("dta",41))'="" s ppdnu=arrprac("dta",41)
 s cnt=0 s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 .i $d(arrfios("arr",osc)) q
 .s cnt=cnt+1
 s val="" s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 .i $d(arrfios("arr",osc)) q
 .k i,o s err=$$gPlnPredchPrac(idfa,nmsp,osc,(hrl-1),ppdnu,.i,.o) zt:+err "merr" s err=""
 .s err="" s:cnt=1 val=o s:cnt>1 val=val_"řidič "_osc_" : "_o_" "
 .s o=""
 .m out("arr","osc",osc,8)=o							//predchozi prace pro ridice
 s out("dta",19)=val
 s out("dta",20)=$$nd^OBapiED((hrl-1),0)                // datum, plan-1
 s out("dta",21)=$g(arrprac("dta",4))   				// vychozi stanoviste (pro pracoviste)
 // tisk potvrzeni
 s out("arr","pci",1)=0 s:maxkmsp>49 out("arr","pci",1)=1
 s out("arr","pci",2)=$$nd^OBapiED((hrl-1-27),"")
 s out("arr","pci",3)=$$nd^OBapiED((hrl-1),"")
 s out("arr","pci",4)=$g(arrprac("dta",2))
 s out("arr","pci",5)=$g(arrprac("dta",3))
 q 0
gPlnDocDtaSJ(idfa,nmsp,iddoc,spz,pc,in,out)
 // s err=$$gPlnDocDtaSJ(idfa,nmsp,iddoc,spz,pc,in,out) - vrati data k dokladum pro predtisk - SJ
 // - out
 //   out("dta",1)=iddoc
 //   out("dta",2)=firma1	(nazev)
 //   out("dta",2,1)=firma1 (nazev)
 //   out("dta",3)=firma2	(ulice,mesto,psc)
 //	  out("dta",3,1)=ulice
 //	  out("dta",3,2)=mesto
 //	  out("dta",3,3)=psc
 //	  out("dta",3,4)=ico
 //	  out("dta",3,5)=dic
 //   out("dta",4)=cdoc
 //   out("dta",4,1)=pr-rrrrmm-cdoc (cele cislo dokladu provoz-rokmesic-cislo)
 //   out("dta",5)=provoz
 //   out("dta",6)=spz
 //   out("dta",7)=spztyp
 //   out("dta",8,cnt)=jm~osc~poznamka
 //   out("dta",9)=spzprives
 //   out("dta",10)=misto(plan), stanoviste
 //   out("dta",11)=idobj
 //   out("dta",12)=prepravce nazev
 //   out("dta",12,1)=prepravce nazev 1.cast (z modulu zakaznici)
 //   out("dta",12,2)=prepravce nazev 2.cast (z modulu zakaznici)
 //   out("dta",13)=prepravce adresa
 //   out("dta",13,1)=prepravce adresa ulice
 //   out("dta",13,2)=prepravce adresa obec
 //   out("dta",13,3)=prepravce adresa psc
 //   out("dta",13,4)=prepravce upresneni nazvu
 //   out("dta",13,5)=prepravce ICO
 //   out("dta",13,6)=prepravce DIC
 //   out("dta",14)=misto pristaveni
 //   out("dta",15)=datum pristaveni
 //   out("dta",16)=cas pristaveni
 //   out("dta",17)=kam,pres
 //   out("dta",18)=datum odstaveni
 //   out("dta",19)=cas odstaveni
 //   out("dta",20)=vedouci
 //   out("dta",21)=telefon
 //   out("dta",22)=predchozi prace
 //   out("dta",23)=datum, (plan-1)
 //   out("dta",24)=vychozi stanoviste (pro pracoviste)
 //   out("dta",25,cnt)=poznamka
 //   out("dta",26)=vedouci - kontakt
 //   out("dta",27)=datum pristaveni/den
 //   out("dta",28)=spz - evidencni cislo
 //   out("dta",29)=druh zajezdu id/popis
 //   out("dta",30)=pristavne km
 //   out("dta",31)=cislo zak.objednavky
 //   out("dta",32)=prepravce ucet ucet/banka
 //   out("dta",33,cnt)=poznamka z objednavky
 //   out("dta",34)=typ autobusu
 //   out("dta",35)=pocet osob
 //   out("dta",36)=pocet vleku
 //   out("dta",37)=typ prepravce id/popis
 //   out("dta",38)=zpusob platby
 //   out("dta",39)=obsaditelnost autobusu (pocet mist)
 //   out("dta",40)=stanoviste (pro rz)
 //   out("dta",41)=spz - zakladni spotreba phm
 //   out("dta",42)=posledni aktualizace objednavky - datum~cas~kdo
 //   out("dta",43)=priznak zahranicniho zajezdu (0/1)
 //   out("dta",44,cnt)=provozne obchodni info
 //   out("arr","osc",osc,1)=jmeno ridice
 //   out("arr","osc",osc,2)=datum narozeni ridice
 //   out("arr","osc",osc,3)=cislo OP
 //   out("arr","osc",osc,4)=cislo PAS
 //   out("arr","osc",osc,5)=cislo RP
 //   out("arr","osc",osc,6)=skupina RP
 //   out("arr","osc",osc,7)=datum nastupu
 //   out("arr","pci",1)=0/1  1 je potreba potvrzeni o cinnosti
 //   out("arr","pci",2)=datum od
 //   out("arr","pci",3)=datum do
 //   out("arr","pci",4)=vedouci pracovnik
 //   out("dta","pci",5)=pozice vedouciho pracovnika
 n (idfa,nmsp,iddoc,spz,pc,in,out)
 s $zt="err2" k out s err=""
 s nmsprz=$$GetSystemDB^ALVAVOZIDLAapiC()
 //
 s idprac=$p(iddoc,"|",2) s hrl=$p(iddoc,"|",3) s cdoc=$p(iddoc,"|",4) s idobj=$g(in("idobj"))
 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 k arrfios s err=##class(ALVA.ADMAIN.ApiOS).listFiktOs(idfa,nmsp,hrl,"",.arrfios) zt:+err "merr" s err=""
 s err=$$mkZP^OBapiED(idfa,$g(arrprac("dta",1)),"","",.zp) zt:+err "merr" s err=""
 s:spz="" spz="-" s:pc="" pc=" "
 k arrobj i idobj'="" s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj) d cnvDObj^OBapiEDObj(1,.arrobj)
 k arrdoc s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 k arrprv s err=$$gPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),(zp#100),"",.arrprv) zt:+err "merr" s err=""
 k arrin s arrin("datzdpl")=hrl k arrfa s err=$$gIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),.arrin,.arrfa) zt:+err "merr" s err=""
 k isziphm s err=$$isZiSpoNPHM^OBapiED(idfa,nmsp,hrl,"",.isziphm) zt:+err "merr" s err=""
 k i,arrspz i spz'="-" s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,spz,"",.arrspz) zt:+err "merr" s err=""
 // konverze na aktualni spz
 s actspz=""
 i spz'="-" d
 .s actspz=$$VehicleGetRz^ALVAVOZIDLAapiC(nmsprz,spz,hrl)
 .i (actspz="")!(actspz=-1)!(actspz=-2) s actspz=spz
 // ========================
 //je-li evidovan zakaznik, pak nactu data zakaznika 
 k arrzak i ($g(arrobj("dta",59))'="") s err=##class(ALVA.ZAKAZNICI.MLAPI).Load(idfa,$$gSystemNmsp^OBapiED(),$g(arrobj("dta",59)),"",.arrzak)
 s:spz="-" spz=" "
 // rrrrmm pro cele cislo dokladu
 s rrrrmm=""
 i +$g(^[nmsp]OI(idfa,"jb","sj","setobd")) d			//obdobi podle data pristaveni
 .s rrrrmm=$$nd^OBapiED(hrl,0)
 i '(+$g(^[nmsp]OI(idfa,"jb","sj","setobd"))) d			// obdobi podle konce jizdy
 .s:$g(arrobj("dta",33))'="" rrrrmm=$$dn^OBapiED($g(arrobj("dta",33)))
 .s:'rrrrmm rrrrmm=hrl
 .s rrrrmm=$$nd^OBapiED(rrrrmm,0)
 s rrrrmm=(($p(rrrrmm,".",3))*100)+$p(rrrrmm,".",2)
 // =============================
 s out("dta",1)=iddoc
 s out("dta",2)=$g(arrfa("dta",2))
 s out("dta",2,1)=$g(arrfa("dta",2))
 s txt=$g(arrfa("dta",13))
 i $g(arrfa("dta",14))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrfa("dta",14))
 i $g(arrfa("dta",15))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrfa("dta",15))
 s out("dta",3)=txt
 s out("dta",3,1)=$g(arrfa("dta",13))
 s out("dta",3,2)=$g(arrfa("dta",14))
 s out("dta",3,3)=$g(arrfa("dta",15))
 s out("dta",3,4)=$g(arrfa("dta",7))
 s mydic=$g(arrfa("dta",8))
 k myarr s err=$$gSkRegDphDic^OBapiED(idfa,hrl,"",.myarr) zt:+err "merr" s err=""
 i $g(myarr("dta",2))'="" s mydic=$g(myarr("dta",2))
 k myarr
 s out("dta",3,5)=mydic
 s out("dta",4)=cdoc
 s out("dta",4,1)=$g(arrprac("dta",1))_"-"_rrrrmm_"-"_cdoc
 s txt=$g(arrprv("dta",1))
 s out("dta",5)=txt 											//provoz
 s out("dta",6)=actspz											//spz
 s out("dta",7)=$g(arrspz("dta",5))_" "_$g(arrspz("dta",6))
 s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d    		//ridici
 .s cnt=$g(arrdoc("arr",1,osc,"dta",2)) s:'cnt cnt=osc
 .k arrosc s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arrosc) zt:+err "merr" s err=""
 .//fiktivni ridic
 .s ptosc=osc
 .i ('$g(arrprac("dta",38)))&($d(arrfios("arr",osc))) k arrosc s ptosc="-"
 .s out("dta",8,cnt)=$g(arrosc("dta",1))_"~"_ptosc_"~"_$g(arrdoc("arr",1,osc,"dta",1))
 .s out("arr","osc",ptosc,1)=$g(arrosc("dta",1))                  //jm
 .s out("arr","osc",ptosc,2)=$$nd^OBapiED($g(arrosc("dta",2)),0)  //datnar
 .s out("arr","osc",ptosc,3)=$g(arrosc("dta",18))                 //op
 .s out("arr","osc",ptosc,4)=$g(arrosc("dta",19))                 //pas
 .s out("arr","osc",ptosc,5)=$g(arrosc("dta",17))                 //rp
 .s out("arr","osc",ptosc,6)=$g(arrosc("dta",16))                 //rp skupina
 .s out("arr","osc",ptosc,7)=$$nd^OBapiED($g(arrosc("dta",3)),0)  //datnast
 s out("dta",9)=$g(arrdoc("dta",11))							//prives
 s out("dta",10)=$g(arrprac("dta",4))							//vychozi misto (stanoviste)
 s:$g(arrdoc("dta",3))'="" out("dta",10)=$g(arrdoc("dta",3)) 	//misto (stanoviste) z dokladu
 s out("dta",11)=$g(idobj)             							//cislo objednavky
 s out("dta",12)=$g(arrobj("dta",4))   							//nazev prepravce
 s out("dta",12,1)=$g(arrzak("ObchNaz1"))						//nazev prepravce 1.cast (mod.zakaznici)
 s out("dta",12,2)=$g(arrzak("ObchNaz2"))						//nazev prepravce 2.cast (mod.zakaznici)
 s txt=$g(arrobj("dta",5))
 i $g(arrobj("dta",6))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrobj("dta",6))
 i $g(arrobj("dta",7))'="" s:txt'="" txt=txt_", " s txt=txt_$g(arrobj("dta",7))
 s out("dta",13)=txt											// adresa
 s out("dta",13,1)=$g(arrobj("dta",5))							// adresa ulice
 s out("dta",13,2)=$g(arrobj("dta",6))							// adresa obec
 s out("dta",13,3)=$g(arrobj("dta",7))							// adresa psc
 s out("dta",13,4)=$g(arrobj("dta",54))							// adresa upresneni
 s out("dta",13,5)=$g(arrobj("dta",13))							// ico
 s out("dta",13,6)=$g(arrobj("dta",11))_$g(arrobj("dta",12))	// dic 
 s out("dta",14)=$g(arrobj("dta",28)) 							// misto pristaveni
 s out("dta",15)=$g(arrobj("dta",29)) 							// datum pristaveni
 s out("dta",27)=$g(arrobj("dta",29)) 							// datum pristaveni+den
 if $g(arrobj("dta",29))'="" s out("dta",27)=$g(arrobj("dta",29))_"/"_$p("Pondělí:Úterý:Středa:Čtvrtek:Pátek:Sobota:Neděle",":",($$dn^OBapiED($g(arrobj("dta",29)))+3#7+1))
 s txt=$g(arrobj("dta",30)) s:txt txt=$j(txt,5,2)
 s out("dta",16)=txt 											//cas pristaveni
 s out("dta",17)=$g(arrobj("arr",1))							//kam,pres
 s out("dta",18)=$g(arrobj("dta",33))							//datum odstaveni
 s txt=$g(arrobj("dta",34)) s:txt txt=$j(txt,5,2)
 s out("dta",19)=txt // cas odstaveni
 s out("dta",20)=$g(arrobj("dta",17))							//vedouci
 s out("dta",21)=$g(arrobj("dta",15))							//telefon
 //predchozi prace - dle nove legislativy
 s cnt=0 s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 .//fiktivni ridic ne
 .i $d(arrfios("arr",osc)) q
 .s cnt=cnt+1
 //pocet dni zpet pro predchozi praci
 s ppdnu=28
 //nove lze nastavit pocet dnu v nastaveni planovaciho pracoviste, pokud je, pak pouziju
 i $g(arrprac("dta",41))'="" s ppdnu=arrprac("dta",41)
 //predchozi prace pro ridice
 s val="" s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 .//fiktivni ridic ne
 .i $d(arrfios("arr",osc))
 .k i,o s err=$$gPlnPredchPrac(idfa,nmsp,osc,(hrl-1),ppdnu,.i,.o)  zt:+err "merr" s err=""
 .s err="" s:cnt=1 val=$g(o) s:cnt>1 val=val_"řidič "_osc_" : "_$g(o)_" "
 s out("dta",22)=val
 s out("dta",23)=$$nd^OBapiED((hrl-1),0)                		//datum, plan-1
 s out("dta",24)=$g(arrprac("dta",4))							//vychozi stanoviste (pro pracoviste)
 // poznamka z dokladu a z objednavky
 s cnt=1 s tmp="" f  s tmp=$o(arrdoc("arr",5,tmp)) q:tmp=""  d
 .s out("dta",25,cnt)=$g(arrdoc("arr",5,tmp)) s cnt=cnt+1
 i $g(arrobj("dta",61))'="" s out("dta",25,cnt)=$g(arrobj("dta",61)) s cnt=cnt+1
 //
 s out("dta",26)=$g(arrobj("dta",63))							//vedouci - kontakt
 s out("dta",28)=$g(arrspz("dta",41))							//spz - evidencni cislo
 s iddza=$g(arrobj("dta",35)) s valdza=""
 k tmparr
 i iddza'="" d
 .s err=$$gCisItm^OBapiED(idfa,nmsp,1,iddza,"",.tmparr)
 .s valdza=$p($g(tmparr("arr",iddza)),"~",1)
 s out("dta",29)=iddza_"/"_valdza							    //druh zajezdu id/popis
 //
 s valdza=""
 i iddza'="" d
 .s valdza=$p($g(tmparr("arr",iddza)),"~",4)
 .i valdza["CZ" s valdza=""
 s valdza=(valdza'="")
 s out("dta",43)=valdza											//priznak jizdy v zahranici
 //
 s out("dta",30)=$g(arrobj("dta",53))							//limit pristavnych km
 s out("dta",31)=$g(arrobj("dta",58))							//cislo zak.objednavky
 s out("dta",32)=$g(arrobj("dta",10))_"/"_$g(arrobj("dta",9))	//prepravce ucet
 s out("dta",33,1)=$g(arrobj("arr",2,1))						//poznamka pro ridice z obj.
 s out("dta",33,2)=$g(arrobj("arr",2,2))						//poznamka pro ridice z obj.
 s out("dta",34)=$g(arrobj("dta",36))							//typ autobusu
 s out("dta",35)=$g(arrobj("dta",31))							//pocet osob
 s out("dta",36)=$g(arrobj("dta",39))							//pocet vleku
 s idtypp=$g(arrobj("dta",26)) s valtypp=""
 i idtypp'="" k tmparr s err=$$gCisItm^OBapiED(idfa,nmsp,2,idtypp,"",.tmparr) s valtypp=$p($g(tmparr("arr",idtypp)),"~",1)
 s out("dta",37)=idtypp_"/"_valtypp								//typ prepravce id/popis
 s out("dta",38)=$g(arrobj("dta",8))							//zpusob platby
 s out("dta",39)=$g(arrspz("dta",18))							//obsaditelnost vozidla
 s out("dta",40)=$g(arrspz("dta",20))							//stanoviste vozidla
 s out("dta",41)=$g(arrspz("dta",15))							//spz - zakladni norma
 i +$g(isziphm("stt")) s out("dta",41)=$g(arrspz("dta",16))		//spz - zimni norma
 s $p(out("dta",42),"~",1)=$$nd^OBapiED(+$g(arrobj("arr",7,"dta",1)),0)										//datum posledni aktualizace objednavky
 s $p(out("dta",42),"~",2)=$tr($p($$sh^OBapiED($p($g(arrobj("arr",7,"dta",1)),",",2)),".",1,2),".",":")		//cas posledni aktualizace objednavky
 s $p(out("dta",42),"~",3)=$g(arrobj("arr",7,"dta",2))														//uzivatel posledni aktualizace objednavky
 m out("dta",44)=arrobj("arr",3)								//obchodne provozni info
 // tisk potvrzeni
 s out("arr","pci",1)=1
 s out("arr","pci",2)=$$nd^OBapiED((hrl-1-27),"")
 s out("arr","pci",3)=$$nd^OBapiED((hrl-1),"")
 s out("arr","pci",4)=$g(arrprac("dta",2))
 s out("arr","pci",5)=$g(arrprac("dta",3))
 q 0
gPlnPredchPrac(idfa,nmsp,osc,hrl,dn,in,out)
 // s err=$$gPlnPredchPrac^OBapiEDPlan2("VS_CSAD","USER",4994,$$dn^OBapiED("11.6.2013"),28,"",.arr) zw arr
 // s err=$$gPlnPredchPrac(idfa,nmsp,osc,hrl,dn,in,out) vypis predchozi prace pro ridice
 // - vstupy
 //   idfa = firma
 //   nmsp = namespace s daty
 //   osc = osc ridice
 //   hrl = den, ke kteremu to zjistuji
 //   dn = pocet dni zpatky
 //   out = pole pro vysledek
 //         vrati popis, co ridic jel od hrl do hrl-dn
 //   ========
 //   doplnit:
 //   ========
 //   tabulka s cinnosti
 //   out=txt
 //   out(hrl,id)=doklad~cinnost~zacatek(mm)~konec(mm)~hodiny celkem(mm)~hodiny jizdy(mm)~typ (1 doklad / 2 plan / 3 grafikon)~hodiny noc~hodiny čekání~hodiny preruseni nezapoctene 
 // 
 s $zt="err2" k out
 n dz,qsj,hrldo,horlog,ind,typ,val,rrmm,zp,tu,ihr,itu,idprac,spz,pck,ival,dat,err
 s err="" s dz=$$gFaDz^OBapiED(idfa) s qsj=$$qsj^OBapiED() s hrldo=(hrl-dn+1)
 f horlog=hrl:-1:hrldo d
 .i $d(^[nmsp]XL(dz,osc,horlog))
 .s ind="" f  s ind=$o(^[nmsp]XL(dz,osc,horlog,ind)) q:ind=""  d
 ..k arrgrf s err=$$gGrfOs^OBapiED(idfa,nmsp,osc,horlog,ind,"",.arrgrf)
 ..// grafikon
 ..i ind?.a d
 ...// jen hodinove
 ...s typ=$p($g(^[nmsp]OI(idfa,"GRAO",ind)),":",2) q:typ'=1
 ...// DOV, NEMOC - volno
 ...q:ind="DOV"
 ...q:ind="NEM"
 ...// ==================
 ...//doklad~cinnost~zacatek(mm)~konec(mm)~hodiny celkem(mm)~hodiny jizdy(mm)~typ (1 doklad / 2 plan / 3 grafikon)~hodiny noc~hodiny čekání~hodiny preruseni nezapoctene
 ...s $p(mydta,"~",1)=""
 ...s $p(mydta,"~",2)=$g(ind)
 ...s $p(mydta,"~",3)=$g(arrgrf("dta",9))
 ...s $p(mydta,"~",4)=$g(arrgrf("dta",10)) s:$g(arrgrf("dta",12))'="" $p(mydta,"~",4)=$g(arrgrf("dta",12))
 ...s $p(mydta,"~",5)=($g(arrgrf("dta",2))+$g(arrgrf("dta",4)))
 ...s $p(mydta,"~",6)=""
 ...s $p(mydta,"~",7)=3
 ...s $p(mydta,"~",8)=""
 ...s $p(mydta,"~",9)=""
 ...s $p(mydta,"~",10)=""
 ...s out(horlog,ind)=mydta
 ..// porizene doklady dzva nebo sj
 ..i +ind d
 ...s rrmm=$g(arrgrf("dta",6))
 ...s zp=$g(arrgrf("dta",7))
 ...s val=$g(^[nmsp]OBD(zp,rrmm,ind)) q:'+val  q:+val=3
 ...i ind<qsj d
 ....k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,rrmm,ind,"",.arrdoc)
 ....s mydta=""
 ....s $p(mydta,"~",1)="DZ"_ind
 ....s txt="" s ihrl="" f  s ihrl=$o(arrdoc("arr","edv",ihrl)) q:ihrl=""  d
 .....s iedv="" f  s iedv=$o(arrdoc("arr","edv",ihrl,"arr",1,iedv)) q:iedv=""  d
 ......s tu=$p(iedv,"~",1)
 ......i tu'="" d
 .......i txt'="" s txt=txt_";"
 .......s txt=txt_tu
 ....s $p(mydta,"~",2)=txt
 ....s txt=$o(arrdoc("arr","tur",""))	
 ....s $p(mydta,"~",3)=$j($o(arrdoc("arr","tur","")),0,0)
 ....s txt=$o(arrdoc("arr","tur",""),-1) i txt'="" s txt=$j($g(arrdoc("arr","tur",txt,"dta",1)),0,0)
 ....s $p(mydta,"~",4)=txt
 ....s $p(mydta,"~",5)=$g(arrdoc("osc",osc,"tuv",11))	//hodiny celkem
 ....s $p(mydta,"~",6)=$g(arrdoc("osc",osc,"tuv",1))	//hodiny jizdy
 ....s $p(mydta,"~",7)=1
 ....s $p(mydta,"~",8)=$g(arrdoc("osc",osc,"tuv",15))	//hodiny noc
 ....s $p(mydta,"~",9)=$g(arrdoc("osc",osc,"tuv",14))	//hodiny cekani
 ....s $p(mydta,"~",10)=$g(arrdoc("osc",osc,"tuv",99))	//hodiny preruseni nezapoctene
 ....s out(horlog,ind)=mydta
 ....k arrdoc
 ...i ind'<qsj d
 ....k arrdoc s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,ind,"",.arrdoc)
 ....s mydta=""
 ....s $p(mydta,"~",1)="SJ"_(ind-qsj)
 ....s $p(mydta,"~",2)="zájezd"
 ....s $p(mydta,"~",3)=$g(arrdoc("dta",57))
 ....s $p(mydta,"~",4)=$g(arrdoc("dta",58))
 ....s $p(mydta,"~",5)=$g(arrdoc("osc",osc,"dta",21))	//hodiny celkem
 ....s $p(mydta,"~",6)=$g(arrdoc("osc",osc,"dta",13))	//hodiny jizdy
 ....s $p(mydta,"~",7)=1
 ....s $p(mydta,"~",8)=$g(arrdoc("osc",osc,"dta",7))	//hodiny noc
 ....s $p(mydta,"~",9)=$g(arrdoc("osc",osc,"dta",12))	//hodiny cekani
 ....s $p(mydta,"~",10)=""								//hodiny preruseni nezapoctene
 ....s out(horlog,ind)=mydta
 ....k arrdoc
 .// neni-li prace, kouknu do planu
 .i '$d(out(horlog)) d
 ..s idprac="" f  s idprac=$o(^[nmsp]OBPL(idprac)) q:idprac=""  d
 ...k tmparr
 ...s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.tmparr)
 ...s idprov=+$g(tmparr("dta",1))
 ...k tmparr
 ...s err=$$mkZP^OBapiED(idfa,idprov,"","",.zp)
 ...q:'$d(^[nmsp]OBPL(idprac,horlog))
 ...s spz="" f  s spz=$o(^[nmsp]OBPL(idprac,horlog,"A",spz)) q:spz=""  d
 ....s pck="" f  s pck=$o(^[nmsp]OBPL(idprac,horlog,"A",spz,pck)) q:pck=""  d
 .....q:'$d(^[nmsp]OBPL(idprac,horlog,"A",spz,pck,"R",osc))
 .....k arrdoc s err=$$gPln^OBapiED(idfa,nmsp,idprac,horlog,spz,pck,"",.arrdoc)
 .....i +$g(arrdoc("dta",5)) q	//neni doklad
 .....//sj
 .....i +$g(arrdoc("dta",6))=1 d
 ......s mydta=""
 ......s $p(mydta,"~",1)="P"
 ......s $p(mydta,"~",2)="pl.zájezd"
 ......s $p(mydta,"~",3)=""
 ......s $p(mydta,"~",4)=""
 ......s $p(mydta,"~",5)=""
 ......s $p(mydta,"~",6)=""
 ......s $p(mydta,"~",7)=2
 ......s $p(mydta,"~",8)=""
 ......s $p(mydta,"~",9)=""
 ......s $p(mydta,"~",10)=""
 ......s out(horlog,(idprac_"|"_hrl_"|"_spz_"|"_pck))=mydta
 .....// pravidelna
 .....i +$g(arrdoc("dta",6))=0 d
 ......s tu="" f  s tu=$o(arrdoc("arr",2,tu)) q:tu=""  d
 .......k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,horlog,"",.arrtu)
 .......s mydta=""
 .......s $p(mydta,"~",1)="P"
 .......s $p(mydta,"~",2)=tu
 .......s $p(mydta,"~",3)=$$hm^OBapiED($g(arrtu("dta",5)))
 .......s $p(mydta,"~",4)=$$hm^OBapiED($g(arrtu("dta",6)))
 .......s $p(mydta,"~",5)=$g(arrtu("arr","tuv",11))
 .......s $p(mydta,"~",6)=$g(arrtu("arr","tuv",1))
 .......s $p(mydta,"~",7)=2
 .......s $p(mydta,"~",8)=$g(arrtu("arr","tuv",15))
 .......s $p(mydta,"~",9)=$g(arrtu("arr","tuv",14))
 .......s $p(mydta,"~",10)=$g(arrtu("arr","tuv",99))
 .......s out(horlog,(idprac_"|"_horlog_"|"_spz_"|"_pck_"|"_tu))=mydta
 ......i $o(arrdoc("arr",2,""))="" d
 .......s mydta=""
 .......s $p(mydta,"~",1)=""
 .......s $p(mydta,"~",2)="bez tur."
 .......s $p(mydta,"~",7)=2
 .......s out(horlog,(idprac_"|"_horlog_"|"_spz_"|"_pck))=mydta
 // vysledny popis
 s out=""
 f horlog=hrl:-1:hrldo d
 .s dat=$$nd^OBapiED(horlog,1)
 .s val=""
 .s id="" f  s id=$o(out(horlog,id)) q:id=""  d
 ..s val=val_$p($g(out(horlog,id)),"~",2)_","
 .i $e(val,$l(val))="," s val=$e(val,1,$l(val)-1)
 .s:val="" val="volno"
 .s out=out_dat_" "_val_"// "
 i $e(out,($l(out)-1),$l(out))="// " s out=$e(out,1,$l(out)-2)
 q 0
gPlnTuOdDo(idfa,nmsp,zp,tu,hrl,tuod,tudo,in,out)
 // s err=$$gPlnTuOdDo(idfa,nmsp,zp,tu,hrl,oddo,in,out) 
 // konverze  tuod=li~spod tudo=li~spdo na out=liod~spod|caso:lido~spdo|casd
 n i,o,err,liod,spod,lido,spdo,clso,clsd
 s $zt="err2" k out s err=""
 //nactu turnus
 k i,o s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,.i,.o)  zt:+err "merr" s err=""
 //
 s liod=$p(tuod,"~",1) s spod=$p(tuod,"~",2)
 s lido=$p(tudo,"~",1) s spdo=$p(tudo,"~",2)
 s clso="" s clsd="" s tuoddo=":"
 i (liod'="")!(lido'="") d
 .// je-li nastavena linka.spoj od,do, dohledam cas, kontrola
 .s ind="" f  s ind=$o(o("arr","tur",ind)) q:(ind="")  d
 ..q:$g(o("arr","tur",ind,"dta",2))'=3
 ..i (liod=+$g(o("arr","tur",ind,"dta",5)))&(spod=+$g(o("arr","tur",ind,"dta",6))) s clso=ind
 ..i (lido=+$g(o("arr","tur",ind,"dta",5)))&(spdo=+$g(o("arr","tur",ind,"dta",6))) s clsd=ind
 // nedohledal jsem cas, je to chybne
 i (liod'="")&(clso="") s liod="" s spod=""
 i (lido'="")&(clsd="") s lido="" s spdo=""
 // kontrola od<do
 i (liod'="")&(lido'="") s:clso>clsd (liod,spod,lido,spdo)=""
 s:liod'="" $p(tuoddo,":",1)=liod_"~"_spod_"|"_(clso-.01)
 s:lido'="" $p(tuoddo,":",2)=lido_"~"_spdo_"|"_(clsd-.01)
 s out=tuoddo
 q 0
gPlnPrtTuOdDo(idfa,nmsp,zp,tu,hrl,tuod,tudo,in,out)
 // s err=$$gPlnPrtTuOdDo(idfa,nmsp,zp,tu,hrl,tuod,tudo,in,out)
 // konverze tuod=li~spod tudo=li~spdo na out=caso:casd:km pro tisk
 // casd - konec cinnosti
 // km - jsou km po uprave
 n i,o,err,cod,cdo,tod,tdo,val,ind,co,km,maxspkm
 s $zt="err2" k out s err=""
 s maxkmsp=0
 k i,o s err=$$gPlnTuOdDo(idfa,nmsp,zp,tu,hrl,tuod,tudo,.i,.o) zt:+err "merr" s err=""
 s err=""
 // v tuoddo je lispod|caso:lispdo|casd
 s tuoddo=$g(o)
 // projdu turnus, vypoctu upravu casu a km
 k i,o s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,.i,.o) i +err zt:+err "merr" s err=""
 s err="" 
 s cod=$p($p(tuoddo,":",1),"|",2) s cdo=$p($p(tuoddo,":",2),"|",2)
 s tod="" s tdo=""
 s:cod cod=$o(o("arr","tur",cod))
 s:cdo cdo=$o(o("arr","tur",cdo))
 // skutecny zacatek a konec
 i cod s tod=cod i $g(o("arr","tur",cod,"dta",7))["*" s tod=tod-$tr($g(o("arr","tur",cod,"dta",7)),"*","")
 i cdo s tdo=($g(o("arr","tur",cdo,"dta",1))) i $g(o("arr","tur",cdo,"dta",8))["*" s tdo=tdo+$tr($g(o("arr","tur",cdo,"dta",8)),"*","")
 // aktualizace km
 s maxspkm=0 s km=0 s ind="" f  s ind=$o(o("arr","tur",ind)) q:(ind="")!(ind?.a)  d
 .q:cod&(ind<cod)  q:cdo&(ind>cdo)
 .s co=$g(o("arr","tur",ind,"dta",2)) q:(co<3)!(co>7)
 .s km=km+$g(o("arr","tur",ind,"dta",3))
 .i co=3 s:$g(o("arr","tur",ind,"dta",3))>maxspkm maxspkm=$g(o("arr","tur",ind,"dta",3))
 s out=tod_":"_tdo_":"_km
 s out("maxspkm")=maxspkm
 q 0
lPlnPrtDoc(idfa,nmsp,in,out)
 //    in("idprac",idprac)=""   - hleda jen v pracovistich
 //    in("typdoc",id)=""       - id ="d" ... hleda v dzva / "s" ... hleda v sj
 //    in("jiz","od")           - hleda v planech data s datem jizdy od ... (horlog)
 //    in("jiz","do")           - hleda v planech data s datem jizdy do ... (horlog)
 //    in("sta",iddel)=""	    - iddel=0 doklady aktivni / 1 zrusene  (pokud neni uzel tak vse !)
 n (idfa,nmsp,in,out) s $zt="err2" k out
 s out=$$gWrkJB^OBapiED()
 f typdoc="d","s" d
 .i $d(in("typdoc")) q:'$d(in("typdoc",typdoc))
 .s:typdoc="d" glb="^[nmsp]obpy" s:typdoc="s" glb="^[nmsp]obpz"
 .s idprac="" f  s idprac=$o(@glb@(idprac)) q:idprac=""  d
 ..i $d(in("idprac")) q:'$d(in("idprac",idprac))
 ..s hrl="" s:+$g(in("jiz","od")) hrl=$g(in("jiz","od"))-.1
 ..f  s hrl=$o(@glb@(idprac,hrl)) q:hrl=""  d
 ...i +$g(in("jiz","do")) q:hrl>+$g(in("jiz","do"))
 ...s cdoc="" f  s cdoc=$o(@glb@(idprac,hrl,cdoc)) q:cdoc=""  d
 ....i $d(in("sta")) q:($d(in("sta",0)))&($d(@glb@("zrusene")))  q:($d(in("sta",1)))&('$d(@glb@("zrusene")))
 ....s ^CacheTempJB(out,typdoc,idprac,hrl,cdoc)=""
 q 0
gPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out)
 // s err=$$gPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,.in,.out) - vrati data z evidence predtistenych dokladu
 // typdoc ... typ dokladu "d" dzva / "s" sj
 // idprac ... identifikator plan. pracoviste
 // hrl....... horlog dne
 // cdoc ..... cislo dokladu
 //
 // out("dta",1)=idprac (id planovaciho pracoviste)
 // out("dta",2)=rz
 // out("dta",3)=id dokladu v planu (^[nmsp]OBPL(idprac,hrl,"A",spz,id)=...)
 // out("dta",4)=idos (osoba, ktera tiskla doklad)
 // out("dta",5)=horlog
 // out("arr",1,$h)="" ... horlog tisku
 //
 n (idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) s $zt="err2" k out
 //
 s:typdoc="d" glb="^[nmsp]obpy(idprac,hrl,cdoc)"
 s:typdoc="s" glb="^[nmsp]obpz(idprac,hrl,cdoc)"
 f cnt=1:1:5 s out("dta",cnt)=$p($g(@glb),":",cnt)
 s prthrl="" f  s prthrl=$o(@glb@(prthrl)) q:prthrl=""  s out("arr",1,prthrl)="" 
 q 0
sPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out)
 // s err=$$sPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,.in,.out) - zapise data do evidence predtistenych dokladu
 // in ... jako out v $$gPlnPrtDoc(
 n (idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) s $zt="err2" k out
 //
 s:typdoc="d" glb="^[nmsp]obpy(idprac,hrl,cdoc)"
 s:typdoc="s" glb="^[nmsp]obpz(idprac,hrl,cdoc)"
 k iddel m iddel=@glb@("zruseno")
 k @glb
 f cnt=1:1:5 s $p(@glb,":",cnt)=$g(in("dta",cnt))
 s prthrl="" f  s prthrl=$o(in("arr",1,prthrl)) q:prthrl=""  d
 .s @glb@(prthrl)=""
 m @glb@("zruseno")=iddel
 q 0
dPlnPrtDoc(idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out)
 // s err=$$dPlnPrtDoc(idfa,nmsp,iddoc,.in,.out) - vymaze data v evidence predtistenych dokladu
 // in("dta",1)= identifikace osoby (jmeno~idos)
 n (idfa,nmsp,typdoc,idprac,hrl,cdoc,in,out) s $zt="err2" k out
 //
 s ios=$g(in("dta",1))
 //
 s:typdoc="d" glb="^[nmsp]obpy(idprac,hrl,cdoc)"
 s:typdoc="s" glb="^[nmsp]obpz(idprac,hrl,cdoc)"
 i $d(@glb) {
	 s val=$g(@glb) s rz=$p(val,":",2) s pc=$p(val,":",3)
	 //odstraneni odkazu na doklad z planovaciho dokladu, aby se nabizel na planovani
	 i (rz'="")&(pc'="") {
		 i $d(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) s ^[nmsp]OBPL(idprac,hrl,"A",rz,pc)=""
	 }
	 //poznaceni zruseni 
	 s @glb@("zruseno")=ios_":"_$h
 }
 q 0
tPlnPrtDoc(idfa,nmsp,iddoc,in,out)
 // s err=$$tPlnPrtDoc(idfa,nmsp,iddoc,.in,.out) - poznaceni predtisku dokladu
 n (idfa,nmsp,iddoc,in,out)
 s $zt="err2" k out
 s err=""
 s typdoc=$p(iddoc,"|",1)
 s idprac=$p(iddoc,"|",2)
 s hrl=$p(iddoc,"|",3)
 s cdoc=$p(iddoc,"|",4)
 // sj
 s:typdoc="s" ^[nmsp]obpz(idprac,hrl,cdoc,$h)=""
 // dzva
 s:typdoc="d" ^[nmsp]obpy(idprac,hrl,cdoc,$h)=""
 q 0
 //
przPlnSJ(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 //============================================
 //pri upravach nahradit gPlnPrzDta^OBapiED !!!
 //============================================
 // s err=$$przPlnSj(idfa,nmsp,idprac,hrl,spz,pc,.in,.out) - predznaceni sj do ^OBD
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out) s $zt="err2" k out
 // pozor, spz a pc muze prijit prazdny (v pripade predznaceni prazdneho dokladu) 
 // dalsi vstupni parametry
 // in("dta",1)=cdoc prazdneho dokladu
 // in("idos")=mlp~loginname~fullname
 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 k arrfios s err=##class(ALVA.ADMAIN.ApiOS).listFiktOs(idfa,nmsp,hrl,"",.arrfios) zt:+err "merr" s err=""
 s err=$$mkZP^OBapiED(idfa,$g(arrprac("dta",1)),"","",.zp) zt:+err "merr" s err=""
 k arrdoc i (spz'="")&(pc'="") s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 s cdoc=$g(arrdoc("dta",1)) s idobj=$g(arrdoc("dta",2))
 // cislo dokladu pro prazdny doklad
 i ('cdoc)&($g(in("dta",1))) s cdoc=$g(in("dta",1))
 i 'cdoc q 0
 // ================================
 s cisjd=cdoc+$$qsj^OBapiED()
 s dato=""
 // obdobi podle zacatku jizdy
 i +$g(^[nmsp]OI(idfa,"jb","sj","setobd")) d
 .s dato=$$nd^OBapiED(hrl,1)
 // obdobi podle konce jizdy
 i '(+$g(^[nmsp]OI(idfa,"jb","sj","setobd"))) d
 .i idobj'="" d
 ..k arrobj
 ..s err=$$gObj^OBapiED(idfa,nmsp,zp,idobj,"",.arrobj) zt:+err "merr" s err=""
 ..s dato=$g(arrobj("dta",33))
 ..k arrobj
 .i 'dato s dato=hrl
 .s dato=$$nd^OBapiED(dato,1)
 s rrmm=(($p(dato,".",3)#100)*100)+$p(dato,".",2)
 // kontrola na zablokovane porizeni
 k arrblck
 s err=$$gBlockApp^OBapiED(idfa,nmsp,zp,rrmm,"",.arrblck) zt:+err "merr" s err=""
 i +$g(arrblck("arr",1,2))=1 q 0
 k arrblck
 // ================================
 //predznaceny nebo vymazany doklad
 d:('(+$g(^[nmsp]OBD(zp,rrmm,cisjd))))!((+$g(^[nmsp]OBD(zp,rrmm,cisjd)))=3)
 .k ^[nmsp]OBD(zp,rrmm,cisjd)
 .s ^[nmsp]OBD(zp,rrmm,cisjd)=0_":"_+$h_":"_":"_idobj_":"_":"_$$nd^OBapiED(hrl,1)_":"_":"_spz_":"_$g(arrdoc("dta",11))
 .//subdodane vozidlo
 .i +$g(arrdoc("dta",16)) d
 ..s $p(^[nmsp]OBD(zp,rrmm,cisjd),":",83)=1
 ..s $p(^[nmsp]OBD(zp,rrmm,cisjd),":",84)=$g(arrdoc("dta",17))
 .s ^[nmsp]OBD(zp,rrmm,cisjd,"cop",$h)=$p($g(in("idos")),"~",3)
 .s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 ..//ne fiktivni ridic 
 ..i $d(arrfios("arr",osc)) q
 ..s ^[nmsp]OBD(zp,rrmm,cisjd,osc)=""
 ..//subdodany ridic
 ..i +$g(arrdoc("arr",1,osc,"dta",3)) d
 ...s $p(^[nmsp]OBD(zp,rrmm,cisjd,"P",osc),"~",4)=1
 ...s $p(^[nmsp]OBD(zp,rrmm,cisjd,"P",osc),"~",5)=$g(arrdoc("arr",1,osc,"dta",4))
 q 0
 //
przPlnDZ(idfa,nmsp,idprac,hrl,spz,pc,in,out)
 //============================================
 //pri upravach nahradit gPlnPrzDta^OBapiED !!!
 //============================================
 // s err=$$przPlnDZ(idfa,nmsp,idprac,hrl,spz,pc,.in,.out) - predznaceni dzva do ^OBD
 n (idfa,nmsp,idprac,hrl,spz,pc,in,out) s $zt="err2" k out s err=""
 // pozor, spz a pc muze prijit prazdny (v pripade predznaceni prazdneho dokladu) 
 // dalsi vstupni parametry
 // in("dta",1)=cdoc prazdneho dokladu
 // in("idos")=mlp~loginname~fullname
 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac) zt:+err "merr" s err=""
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 k arrfios s err=##class(ALVA.ADMAIN.ApiOS).listFiktOs(idfa,nmsp,hrl,"",.arrfios) zt:+err "merr" s err=""
 s err=$$mkZP^OBapiED(idfa,$g(arrprac("dta",1)),"","",.zp) zt:+err "merr" s err=""
 s rr=$p($$nd^OBapiED(hrl,0),".",3)#100
 s dato=$$nd^OBapiED(hrl,1) s $p(dato,".",3)=($e("00",1,2-$l(rr))_rr)
 s rrmm=(($p(dato,".",3)#100)*100)+$p(dato,".",2)
 // kontrola na zablokovane porizovani
 k arrblck
 s err=$$gBlockApp^OBapiED(idfa,nmsp,zp,rrmm,"",.arrblck) zt:+err "merr" s err=""
 i +$g(arrblck("arr",1,1))=1 q 0
 k arrblck
 // ================================
 s kmc=0
 k arrdoc i (spz'="")&(pc'="") s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,spz,pc,"",.arrdoc) zt:+err "merr" s err=""
 s cdoc=$g(arrdoc("dta",1))
 // cislo dokladu pro prazdny doklad
 i ('cdoc)&($g(in("dta",1))) s cdoc=$g(in("dta",1))
 i 'cdoc q 0
 // ================================
 //predznaceny nebo vymazany doklad
 d:('(+$g(^[nmsp]OBD(zp,rrmm,cdoc))))!((+$g(^[nmsp]OBD(zp,rrmm,cdoc)))=3)
 .s cntedv=0 //pocitadlo cinnosti
 .k ^[nmsp]OBD(zp,rrmm,cdoc)
 .s val="0:"_+$h_":"_":"_dato_":"_":"_$g(spz)
 .i +$g(arrdoc("dta",12)) s $p(val,":",7)="Z"						//zaskolovani
 .i $g(arrdoc("dta",11))'="" s $p(val,":",21)=$g(arrdoc("dta",11))	//prives
 .s $p(val,":",30)=$g(arrdoc("dta",14))								//dopocet diet
 .s $p(val,":",31)=$g(arrdoc("dta",15))								//posila
 .i +$g(arrdoc("dta",16)) d											//subdodane vozidlo
 ..s $p(val,":",32)=1
 ..s $p(val,":",33)=$g(arrdoc("dta",17))
 .s $p(val,":",34)=+$g(arrdoc("dta",13))							//smena z volna
 .s ^[nmsp]OBD(zp,rrmm,cdoc)=val
 .s ^[nmsp]OBD(zp,rrmm,cdoc,"cop",$h)=$p($g(in("idos")),"~",3)
 .s tu="" f  s tu=$o(arrdoc("arr",2,tu)) q:tu=""  d
 ..s err=$$gTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.hort) zt:+err "merr" s err=""
 ..q:'hort
 ..k i,arrtur s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hort,"",.arrtur) zt:+err "merr" s err=""
 ..s did=$g(arrtur("dta",15))		//dodk
 ..s coeffm=$g(arrtur("dta",16))	//koeficient mzdy
 ..s die=$g(arrtur("dta",21))		//diety
 ..s orl=$g(arrtur("dta",24))		//% cekani do odp.doby
 ..s nocpr=$g(arrtur("dta",26))		//nocovne
 ..s km=$g(arrtur("arr","tuv",22))	//km
 ..s kmc=kmc+km
 ..s vyrdo=$g(arrtur("dta",25))		//hodiny do vyrovnavaci doby
 ..s fxkcm=$g(arrtur("dta",22))		//fixni kc do mzdy
 ..s fxkcc=$g(arrtur("dta",34))		//fixni kc do cekani
 ..s dodnc=$g(arrtur("dta",20))		//% dodk v noci
 ..s nodie=$g(arrtur("dta",35))		//priznak pro nevyplaceni diet 
 ..k i,o s err=$$gPlnTuOdDo(idfa,nmsp,zp,tu,hrl,$g(arrdoc("arr",2,tu,"dta",1)),$g(arrdoc("arr",2,tu,"dta",2)),.i,.o) zt:+err "merr" s err=""
 ..// v tuoddo je liod~spod|caso:lido~spdo|casd
 ..s tmp=$p(tuoddo,":",1) s ls=$p($p(tmp,"|",1),"~",1)_"^"_($p($p(tmp,"|",1),"~",2))
 ..i ls s $p(tmp,"|",1)=ls s $p(tuoddo,":",1)=tmp
 ..s tmp=$p(tuoddo,":",2) s ls=$p($p(tmp,"|",1),"~",1)_"^"_($p($p(tmp,"|",1),"~",2))
 ..i ls s $p(tmp,"|",1)=ls s $p(tuoddo,":",2)=tmp
 ..i $tr(tuoddo,"|:","")'="" d
 ...i '$p($g(arrset("arr",7,1)),"~",1) s die=""
 ...i '$p($g(arrset("arr",7,1)),"~",2) s did=""
 ...i '$p($g(arrset("arr",7,1)),"~",3) s nocpr=""
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",1)=coeffm
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",2)=did
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",3)=nocpr
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",4)=die
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",5)=km
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",6)=orl
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",7)=vyrdo
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",8)=fxkcm
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",9)=fxkcc
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",10)=dodnc
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),":",11)=nodie
 ..s $p(^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,1,tu_":"_tuoddo),"@",2)=$i(cntedv)
 ..//spoje -, spoj vyhledam v turnusu a nastavim odecteni (muzou byt pevne manipulace)
 ..//arrdoc("arr",4,cnt,"dta",1)=li~sp (minus)
 ..i $d(arrdoc("arr",4)) d
 ...s tm="" f  s tm=$o(arrtur("arr","tur",tm)) q:tm=""  d
 ....i $g(arrtur("arr","tur",tm,"dta",2))'=3 q
 ....s tmp="" f  s tmp=$o(arrdoc("arr",4,tmp)) q:tmp=""  d
 .....s li=$p($g(arrdoc("arr",4,tmp,"dta",1)),"~",1)
 .....s sp=$p($g(arrdoc("arr",4,tmp,"dta",1)),"~",2)
 .....i ($g(arrtur("arr","tur",tm,"dta",5))=li)&($g(arrtur("arr","tur",tm,"dta",6))=sp) d
 ......s val=""
 ......s $p(val,":",1)=$g(arrtur("arr","tur",tm,"dta",1))	//tmTo
 ......s $p(val,":",2)=$g(arrtur("arr","tur",tm,"dta",2))	//id
 ......s $p(val,":",3)=$g(arrtur("arr","tur",tm,"dta",3))	//km
 ......s $p(val,":",4)=$g(arrtur("arr","tur",tm,"dta",4))	//tm
 ......s $p(val,":",5)=(li_"^"_sp)							//li,sp
 ......s $p(val,":",6)=$g(arrtur("arr","tur",tm,"dta",7))	//mapr
 ......s $p(val,":",7)=$g(arrtur("arr","tur",tm,"dta",8))	//mapo
 ......s $p(val,":",9)=$g(arrtur("arr","tur",tm,"dta",13))	//kmt
 ......s $p(val,"~",2)=$g(arrtur("arr","tur",tm,"dta",15))	//prs
 ......s $p(val,"~",3)=$g(arrtur("arr","tur",tm,"dta",14))	//dsp
 ......s $p(val,"@",2)=$i(cntedv)
 ......s ^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,99,(tm_":"_cntedv))=val
 ......k arrdoc("arr",4,tmp)
 ......s kmc=kmc-$g(arrtur("arr","tur",tm,"dta",3))
 ..k arrtur
 .// spoje +
 .s tmp="" f  s tmp=$o(arrdoc("arr",3,tmp)) q:tmp=""  d
 ..s sp=$g(arrdoc("arr",3,tmp,"dta",1))
 ..k i,o s err=$$gPlnLiSpOpl(idfa,nmsp,$p(sp,"~",1),$p(sp,"~",2),hrl,.i,.o) zt:+err "merr" s err=""
 ..s val=$g(o) s $p(val,"@",2)=$i(cntedv)
 ..s ^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,2,($p(sp,"~",1)_"^"_($p(sp,"~",2))))=val
 ..s kmc=kmc+$p(val,":",4)
 .// spoje - (neco zbylo, nebylo to v turnusu)
 .s tmp="" f  s tmp=$o(arrdoc("arr",4,tmp)) q:tmp=""  d
 ..s sp=$g(arrdoc("arr",4,tmp,"dta",1))
 ..k i,o s err=$$gPlnLiSpOpl(idfa,nmsp,(-1*$p(sp,"~",1)),$p(sp,"~",2),hrl,.i,.o) zt:+err "merr" s err=""
 ..s o=$g(o)
 ..s tm=$p(o,":",2) s cntedv=$i(cntedv)
 ..s val=""
 ..s $p(val,":",1)=$p(o,":",3)
 ..s $p(val,":",2)=3
 ..s $p(val,":",3)=$p(o,":",5)
 ..s $p(val,":",5)=($p(sp,"~",1)_"^"_($p(sp,"~",2)))
 ..s $p(val,"@",2)=cntedv
 ..s ^[nmsp]OBD(zp,rrmm,cdoc,"D",hrl,99,(tm_":"_cntedv))=val
 ..s kmc=kmc-$p(o,":",5)
 .s osc="" f  s osc=$o(arrdoc("arr",1,osc)) q:osc=""  d
 ..//ne fiktivni ridic 
 ..i $d(arrfios("arr",osc)) q
 ..s ^[nmsp]OBD(zp,rrmm,cdoc,osc)="" //$p($g(^[nmsp]OBPL(idprac,hrl,"L",osc)),":",1)_":"_$g(^[nmsp]OBPL(idprac,hrl,"A",spz,pc,"R",osc))
 ..i +$g(arrdoc("arr",1,osc,"dta",3)) d				//subdodany ridic
 ...s $p(^[nmsp]OBD(zp,rrmm,cdoc,osc,"p"),"~",4)=1
 ...s $p(^[nmsp]OBD(zp,rrmm,cdoc,osc,"p"),"~",5)=$g(arrdoc("arr",1,osc,"dta",4))
 q 0
gPlnLiSpOpl(idfa,nmsp,li,sp,hrl,in,out)
 // s err=gPlnLiSpOpl(idfa,nmsp,li,sp,hrl,.in,.out) - predznaceni linek a spoju - hodnota pro ^OBD 
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err2" s err="" k out
 s fl=0 s:li<0 fl=1,li=-li
 k i,o s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,.i,.o)
 s orj=$g(o("dta",1))
 s prj=$g(o("dta",2))
 s ji=$g(o("dta",3))
 s drkm=$g(o("dta",4))
 s kmsp=$g(o("dta",5))
 s pla=$g(o("dta",8))
 s phmm=$g(o("dta",9))
 s ps=$g(o("dta",12))
 s:prj<orj prj=24*60+prj
 s:ji>(24*60) prj=24*60+prj
 i 'fl s out=($$mh^OBapiED(ji))_":"_":"_drkm_":"_kmsp_":"_"+"_":~"_$g(ps)
 i +fl s out=-1_":"_orj_":"_prj_":"_":"_kmsp
 q 0
err1 
 s $zt="" q ""
err2
 s $zt="" k out q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDPlan3" type="INT" languagemode="0" timestamp="65748,85400.138165"><![CDATA[
OBapiEDPlan3 q
mkAllPlnData(idfa,nmsp,hrlfrom,hrlto,in,out)
 // ================================================================
 // fce pro DM ... sledovani vozidel
 // in("dta",1)=   global do ktereho se ulozi data
 // in("rz",rz)="" jen rz (filtr)
 // in("linka",linka)="" jen linky (filtr)
 // vystup:
 // s @glb@(rz,hrlp)=$lb(typ,li,sp,hrlp,hrlo,czst,nzst,blo,gpsn,gpse,$lb(os),czstcil,nzstcil,blocil)
 // typ=1 ... spoj
 // hrlp ... horlog prijezdu
 // hrlo ... horlog odjezdu ... prijezd + ceka
 // czst ... cislo zastavky (EDISON)
 // nzst ... nazev zastavky (EDISON)
 // out:
 // out("arr",1,li,hrl)="" ... linky ktere se nenasly v archivu linek
 // out("arr",2,li,hrl,sp)="" ... spoje, ktere se nenasly v archivu linek
 // ================================================================
 //
 n (idfa,nmsp,hrlfrom,hrlto,in,out)
 s $zt="err"
 //kontrola parametru
 i $g(hrlfrom)="" s err="hrlfrom=" zt "merr"
 i $g(hrlto)="" s hrlto=hrlfrom
 i $g(in("dta",1))="" s err="glb=" zt "merr" 
 //==================
 s glb=$g(in("dta",1))
 s wrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrk)
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 s selrz=($o(in("rz",""))'="")
 s selli=($o(in("linka",""))'="")
 //====
 //plan
 //====
 s icnt="" 																	//pocitadlo pro zapis do globalu 
 s idprac="" f  s idprac=$o(^[nmsp]OBPL(idprac)) q:idprac=""  d
 .s zp=$g(^[nmsp]obpx(idprac))
 .s hrl=hrlfrom-.01 f  s hrl=$o(^[nmsp]OBPL(idprac,hrl)) q:(hrl="")!(hrl>hrlto)  d
 ..s rz="" f  s rz=$o(^[nmsp]OBPL(idprac,hrl,"A",rz)) q:rz=""  d
 ...i selrz i '$d(in("rz",rz)) q
 ...s pc="" f  s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) q:pc=""  d
 ....s typdoc=$d(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"sj"))					//typ dokladu 0 dzva / 1 sj
 ....q:typdoc=1																//sj ne
 ....s typpln=$d(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"rozpis"))				//typ planu 0 plan   / 1 rozpis
 ....q:typpln=1																//rozpisy ne
 ....//ridici
 ....s icntos="" k arros s arros("-")=""
 ....s os="" f  s os=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"R",os)) q:(os="")  d
 .....k arros("-") s arros(os)=""
 ....s os="" f  s os=$o(arros(os)) q:os=""  s $li(arros,$i(icntos))=os
 ....//
 ....k arrdoc
 ....//ls + , ls -
 ....s ls="" f  s ls=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"S",ls)) q:ls=""  d
 .....i ls>0 d
 ......i ls["." s arrdoc(1,$p(ls,".",1),$p(ls,".",2))=""
 ......i ls["^" s arrdoc(1,$p(ls,"^",1),$p(ls,"^",2))=""
 .....i ls<0 d
 ......i ls["." s arrdoc(2,$p(ls,".",1),$p(ls,".",2))=""
 ......i ls["^" s arrdoc(2,$p(ls,"^",1),$p(ls,"^",2))=""
 ....//turnusy
 ....s tu="" f  s tu=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"T",tu)) q:tu=""  d
 .....k arrtutm
 .....s oddo=$g(^[nmsp]OBPL(idprac,hrl,"A",rz,pc,"T",tu,"oddo"))
 .....s liod="" s spod=""
 .....i ($p(oddo,":",1)&($p(oddo,":",1)[".")) s liod=($p(oddo,":",1)\1) s spod=($p(oddo,":",1)#1*1000)
 .....i ($p(oddo,":",1)&($p(oddo,":",1)["^")) s liod=($p($p(oddo,":",1),"^",1)) s spod=($p($p(oddo,":",1),"^",2))
 .....s lido="" s spdo=""
 .....i ($p(oddo,":",2)&($p(oddo,":",2)[".")) s lido=($p(oddo,":",2)\1) s spdo=($p(oddo,":",2)#1*1000)
 .....i ($p(oddo,":",2)&($p(oddo,":",2)["^")) s lido=($p($p(oddo,":",2),"^",1)) s spdo=($p($p(oddo,":",2),"^",2))
 .....s hrltu=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1)
 .....i hrltu d
 ......s tm="" f  s tm=$o(^[nmsp]OBT(zp,tu,hrltu,tm)) q:(tm="")!(tm?.a)  d
 .......// casovy prubeh ponovu EDISON
 .......s val=$g(^[nmsp]OBT(zp,tu,hrltu,tm))
 .......s idcin=+$p(val,":",2) q:idcin'=3
 .......i idcin=3 d
 ........s val=$p(val,"~",1)
 ........i $p(val,":",5)["." s li=($p(val,":",5)\1)	s sp=($p(val,":",5)#1*1000)					//li a sp
 ........i $p(val,":",5)["^" s li=($p($p(val,":",5),"^",1))	s sp=($p($p(val,":",5),"^",2))		//li a sp
 ........//filtr na ls -
 ........i $d(arrdoc(2,li,sp)) q
 ........//=============
 ........s arrtutm(3,tm)=li_"~"_sp
 .....//u turnusu zadano od
 .....i (liod&spod) d
 ......s quit=0
 ......s tm="" f  s tm=$o(arrtutm(3,tm)) q:(tm="")!(quit)  d
 .......s val=$g(arrtutm(3,tm)) s li=$p(val,"~",1) s sp=$p(val,"~",2)
 .......i (liod=li)&(spod=sp) s quit=1 q
 .......k arrtutm(3,tm)
 .....//u turnusu zadano do
 .....i (lido&spdo) d
 ......s quit=0
 ......s tm="" f  s tm=$o(arrtutm(3,tm),-1) q:(tm="")!(quit)  d
 .......s val=$g(arrtutm(3,tm)) s li=$p(val,"~",1) s sp=$p(val,"~",2)
 .......i (lido=li)&(spdo=sp) s quit=1 q
 .......k arrtutm(3,tm)
 .....m arrdoc=arrtutm k arrtutm
 ....//zapis do globalu - prubeh turnusu
 ....s tm="" f  s tm=$o(arrdoc(3,tm)) q:(tm="")  d
 .....s val=$g(arrdoc(3,tm)) s li=$p(val,"~",1) s sp=$p(val,"~",2)
 .....//filtr na linky v in
 .....i selli i '$d(in("linka",li)) q
 .....//===================
 .....s ^||wrk.ALVA.AD(wrk,1,hrl,rz,1,$i(icnt))=$lb(li,sp,arros)
 .....s ^||wrk.ALVA.AD(wrk,2,li,1,hrl)=""
 .....s ^||wrk.ALVA.AD(wrk,2,li,2,(hrl+(tm\1440)))=""
 ....//zapis do globalu - spoje +
 ....s li="" f  s li=$o(arrdoc(1,li)) q:li=""  d
 .....//filtr na linky v in
 .....i selli i '$d(in("linka",li)) q
 .....//===================
 .....s sp="" f  s sp=$o(arrdoc(1,li,sp)) q:sp=""  d
 ......s ^||wrk.ALVA.AD(wrk,1,hrl,rz,1,$i(icnt))=$lb(li,sp,arros)
 ......s ^||wrk.ALVA.AD(wrk,2,li,1,hrl)=""
 ......s ^||wrk.ALVA.AD(wrk,2,li,2,hrl)=""
 // casove varianty linek
 s li="" f  {
	s li=$o(^||wrk.ALVA.AD(wrk,2,li)) i li="" q
 	s hrlod=$o(^||wrk.ALVA.AD(wrk,2,li,1,""))
 	s hrldo=$o(^||wrk.ALVA.AD(wrk,2,li,2,""),-1)
 	k arro s err=##class(ALVA.JRMAIN.MLAPI).gLinPltAPL(nmsp,hrlod,hrldo,li,.arro) i +err zt "merr"
 	m ^||wrk.ALVA.AD(wrk,2,li,3)=arro
 	s err=""
 }
 // detailni probeh spoju - casove varianty linek
 s hrl="" f {
	 s hrl=$o(^||wrk.ALVA.AD(wrk,1,hrl)) i hrl="" q
	 s rz="" f {
		  s rz=$o(^||wrk.ALVA.AD(wrk,1,hrl,rz)) i rz="" q
		  //casovy prubeh
		  s icnt="" f {
			  s icnt=$o(^||wrk.ALVA.AD(wrk,1,hrl,rz,1,icnt)) i icnt="" q
			  s val=$g(^||wrk.ALVA.AD(wrk,1,hrl,rz,1,icnt))
			  s li=$lg(val,1)
			  s sp=$lg(val,2)
			  s os=$lg(val,3)
			  //casova varianta linky z APL
 			  s tmpl1="" s tmpl2=""
 			  s tmpl1=$o(^||wrk.ALVA.AD(wrk,2,li,3,(hrl+(tm\1440)+.01)),-1)
 			  i tmpl1 s tmpl2=$o(^||wrk.ALVA.AD(wrk,2,li,3,tmpl1,(hrl+tm\1440-.01)))
 			  s hrlliAPL="" i (tmpl1&tmpl2) s hrlliAPL=$g(^||wrk.ALVA.AD(wrk,2,li,3,tmpl1,tmpl2))
 			  i 'hrlliAPL s out("arr",1,li,(hrl+(tm\1440)))="" continue
 			  s err=$$insSpToGlb(idfa,nmsp,glb,wrk,hrl,rz,li,hrlliAPL,sp,os,.out) i +err zt "merr"
 			  s err=""
		 }
	 }
 }
 k ^||wrk.ALVA.AD(wrk)
 q 0
insSpToGlb(idfa,nmsp,glb,wrk,hrl,rz,li,hrlliAPL,sp,os,out)
 //zapis spoje do db
 n (idfa,nmsp,glb,wrk,hrl,rz,li,hrlliAPL,sp,os,out)
 s $zt="err" s err=""
 //trasa linky
 i '$d(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,1)) {
 	k arro
 	s err=##class(ALVA.JRMAIN.MLAPI).gTrsLinAPL(idfa,nmsp,hrlliAPL,li,"",.arro)
 	m ^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,1)=arro
 }
 //prubeh spoje
 i '$d(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp)) {
 	k arro s sm="Z" i sp#2 s sm="T"
	s err=##class(ALVA.JRMAIN.MLAPI).gSpLinAPL(idfa,nmsp,hrlliAPL,li,sm,sp,"",.arro)
	m ^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp)=arro
	//neni prubeh spoje, poznacim do out
	i $o(arro("trs",""))="" s out("arr",2,li,hrlliAPL,sp)=""
	//==================================
 }
 s tcod=+$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp,"dta",1))
 s tcdo=+$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp,"dta",2))
 s czstdo=+$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,1,"arr",tcdo,"dta",1))
 i '$d(^||wrk.ALVA.AD(wrk,101,czstdo)) {
	k arro s err=##class(ALVA.JRMAIN.MLAPI).gZst(idfa,nmsp,czstdo,"",.arro)
	m ^||wrk.ALVA.AD(wrk,101,czstdo)=arro 
 }
 //
 s nzstdo=$g(^||wrk.ALVA.AD(wrk,101,czstdo,"dta",1))_","_$g(^||wrk.ALVA.AD(wrk,101,czstdo,"dta",2))_","_$g(^||wrk.ALVA.AD(wrk,101,czstdo,"dta",3))
 s blodo=$g(^||wrk.ALVA.AD(wrk,101,czstdo,"dta",4))
 //
 s tmod=$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp,"dta",4))
 s par=1 i tcod>tcdo s par=-1
 f tc=tcod:par:tcdo {
 	s tmsp=$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp,"trs",tc,2))
	i (tmsp="<")!(tmsp="|") continue
	s tmce=$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,2,sp,"trs",tc,3))
	s czst=+$g(^||wrk.ALVA.AD(wrk,100,hrlliAPL,li,1,"arr",tc,"dta",1))
	i '$d(^||wrk.ALVA.AD(wrk,101,czst)) {
		k arro s err=##class(ALVA.JRMAIN.MLAPI).gZst(idfa,nmsp,czst,"",.arro)
		m ^||wrk.ALVA.AD(wrk,101,czst)=arro 
    }
 	s nzst=$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",1))_","_$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",2))_","_$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",3))
 	s blo=$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",4))
 	s gpsn=$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",19))
 	s gpse=$g(^||wrk.ALVA.AD(wrk,101,czst,"dta",20))
 	s hrlp=(hrl+((tmod+tmsp)\1440))_","_$tr($j(((tmod+tmsp)#1440*60),5)," ","0")
 	s hrlo=(hrl+((tmod+tmsp+tmce)\1440))_","_$tr($j(((tmod+tmsp+tmce)#1440*60),5)," ","0")
 	s @glb@(rz,hrlp)=$lb(1,li,sp,hrlp,hrlo,czst,nzst,blo,gpsn,gpse,os,czstdo,nzstdo,blodo)
 }
 q 0
test
 s idfa="VS_CSAD" s nmsp="user" s idprac="VSETIN" s hrl=$$dn^OBapiED("22.11.2019")
 s rz="5Z36520" s pc=1
 k arri,arro
 //s err=$$gPlnPrzDta(idfa,nmsp,idprac,hrl,rz,pc,.arri,.arro)
 //s err=$$gPlnVykDta(idfa,nmsp,idprac,hrl,rz,pc,.arri,.arro)
 s err=##class(ALVA.ADPLANDOPRAVY.PlanData1).gPlnVykDta(idfa,nmsp,idprac,hrl,rz,pc,"",.arro)
 w !,err,!,idprac,"-",hrl,"-",rz,"-",pc,"-",! zw arro r a
 /*
 s rz="" f {
	 s rz=$o(^[nmsp]OBPL(idprac,hrl,"A",rz)) i rz="" q
	 s pc="" f {
		 s pc=$o(^[nmsp]OBPL(idprac,hrl,"A",rz,pc)) i pc="" q
		 k arri,arro
		 //s err=$$gPlnPrzDta(idfa,nmsp,idprac,hrl,rz,pc,.arri,.arro)
		 s err=$$gPlnVykDta(idfa,nmsp,idprac,hrl,rz,pc,.arri,.arro)
		 w !,err,!,idprac,"-",hrl,"-",rz,"-",pc,"-" zw arro r a
	 }
 }
 */
 q
gPlnPrzDta(idfa,nmsp,idprac,hrl,rz,pc,in,out)
 //ze zadaneho planovaciho dokladu vytvori data pro predznaceni dokladu a vrati v out("arr",1,...) data DZVA, v out("arr",2,...) data sj
 //data planovaciho dokladu v in("arr",1,...) nebo je definovano idprac,hrl,rz,pc a data se nactou z databaze 
 //in("fullname")=fullname
 //in("arr",1,...)=data planovaciho dokladu
 //in("arr",2,...)=nastaveni programu gMainSet^OBapiED
 //in("arr",3,...)=fiktivni ridici
 //out("arr",1,..)=data pro predznaceni DZVA
 //out("arr",2,..)=data pro predznaceni SJ
 n (idfa,nmsp,idprac,hrl,rz,pc,in,out)
 s $zt="err" k out
 //pracovni global
 s mywrkglb=$$gWrkALVAADGlb^OBapiED($$gWrkALVAAD^OBapiED()) k @mywrkglb
 //zakladni promene
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(rz)="" s err="rz=" zt "merr"
 //idprv a zp
 k myarr s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.myarr) i +err zt
 s idprv=$g(myarr("dta",1)) k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
 //nacteni dokladu
 i '$d(in("arr",1)) {
 	 i $g(pc)="" s err="pc=" zt "merr"
	 k myarr s err=$$gPln^OBapiED(idfa,nmsp,idprac,hrl,rz,pc,"",.myarr) i +err zt
	 m in("arr",1)=myarr
	 k myarr
 }
 //nacteni nastaveni programu
 i '$d(in("arr",2)) {
	 k myarr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.myarr) i +err zt
	 m in("arr",2)=myarr
	 k myarr
 }
 //nacteni fiktivnich ridicu
 i '$d(in("arr",3)) {
	  k myarr s err=##class(ALVA.ADMAIN.ApiOS).listFiktOs(idfa,nmsp,hrl,"",.myarr) i +err zt
	  m in("arr",3)=myarr
	  k myarr
 } 
 //pravidelna
 i '$g(in("arr",1,"dta",6)) {
	 k @mywrkglb	 
	 s @mywrkglb@("dta",1)=0
	 s @mywrkglb@("dta",2)=+$h
	 s @mywrkglb@("dta",4)=hrl
	 s @mywrkglb@("dta",6)=rz
	 i +$g(in("arr",1,"dta",12)) s @mywrkglb@("dta",7)="Z"			//zaskolovani
 	 s @mywrkglb@("dta",21)=$g(in("arr",1,"dta",11))				//prives
 	 s @mywrkglb@("dta",30)=$g(in("arr",1,"dta",14))				//dopocet diet
 	 s @mywrkglb@("dta",31)=$g(in("arr",1,"dta",15))				//posila
 	 i +$g(in("arr",1,"dta",16)) {									//subdodane vozidlo
	 	 s @mywrkglb@("dta",32)=1
 		 s @mywrkglb@("dta",33)=$g(in("arr",1,"dta",17))
 	 }
 	 s @mywrkglb@("arr",7,"cop","dta",1)=$h
 	 s @mywrkglb@("arr",7,"cop","dta",2)=$g(in("fullname"))
 	 //
 	 s cntedv=0
 	 //turnusy
 	 s tu="" f {
	 	 s tu=$o(in("arr",1,"arr",2,tu)) i tu="" q
	 	 s tuod=$g(in("arr",1,"arr",2,tu,"dta",1))
 		 s tudo=$g(in("arr",1,"arr",2,tu,"dta",2))
         k myarr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.myarr) i +err zt
 		 s did=$g(myarr("dta",15))			//dodk
 		 s coeffm=$g(myarr("dta",16))		//koeficient mzdy
 		 s die=$g(myarr("dta",21))			//diety
 		 s orl=$g(myarr("dta",24))			//% cekani do odp.doby
 		 s nocpr=$g(myarr("dta",26))		//nocovne
 		 s km=$g(myarr("arr","tuv",22))		//km
 		 s vyrdo=$g(myarr("dta",25))		//hodiny do vyrovnavaci doby
 		 s fxkcm=$g(myarr("dta",22))		//fixni kc do mzdy
 		 s fxkcc=$g(myarr("dta",34))		//fixni kc do cekani
 		 s dodnc=$g(myarr("dta",20))		//% dodk v noci
 		 s nodie=$g(myarr("dta",35))		//priznak pro nevyplaceni diet 
		 //
		 s liod=$p(tuod,"~",1) s spod=$p(tuod,"~",2)
 		 s lido=$p(tudo,"~",1) s spdo=$p(tudo,"~",2)
 		 s minlso="" s minlsd="" s tuoddo=":"
 		 // je-li nastavena linka.spoj od,do, dohledam cas, kontrola
 		 i (liod'="")!(lido'="") {
	 		 s min="" f {
		 		 s min=$o(myarr("arr","tur",min)) i min="" q
 			 	 i $g(myarr("arr","tur",min,"dta",2))=3 {
	 			 	 i (liod=+$g(myarr("arr","tur",min,"dta",5)))&(spod=+$g(myarr("arr","tur",min,"dta",6))) s minlso=min
	 			 	 i (lido=+$g(myarr("arr","tur",min,"dta",5)))&(spdo=+$g(myarr("arr","tur",min,"dta",6))) s minlsd=min
 			 	 }
	 		 }
 		 }
 		// nedohledal jsem cas, je to chybne
		i (liod'="")&(minlso="") s liod="" s spod=""
		i (lido'="")&(minlsd="") s lido="" s spdo=""
		// kontrola od<do
 		i (liod'="")&(lido'="") {
	 		i minlso>minlsd s (liod,spod,lido,spdo)=""
 		}
 		s idtu=tu
 		i liod'="" s $p(idtu,"~",2)=liod s $p(idtu,"~",3)=spod
 		i lido'="" s $p(idtu,"~",4)=lido s $p(idtu,"~",5)=spdo
 		i (liod'="")!(lido'="") {
	 		i '$p($g(in("arr",2,"arr",7,1)),"~",1) s die=""
 			i '$p($g(in("arr",2,"arr",7,1)),"~",2) s did=""
 			i '$p($g(in("arr",2,"arr",7,1)),"~",3) s nocpr=""
 		}
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"par",1)=$i(cntedv)
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",2)=coeffm
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",3)=did
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",4)=nocpr
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",5)=die
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",6)=km
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",7)=orl
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",8)=vyrdo
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",9)=fxkcm
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",10)=fxkcc
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",11)=dodnc
 		s @mywrkglb@("arr","edv",hrl,"arr",1,idtu,"dta",12)=nodie
 		//
 		//spoje -, spoj vyhledam v turnusu a nastavim odecteni (muzou byt pevne manipulace)
 		//arrdoc("arr",4,cnt,"dta",1)=li~sp (minus)
 		i $d(in("arr",1,"arr",4)) {
	 		s min="" f {
		 		s min=$o(myarr("arr","tur",min)) i min="" q
		 		i $g(myarr("arr","tur",min,"dta",2))'=3 continue
 				s mycnt="" f {
	 				s mycnt=$o(in("arr",1,"arr",4,mycnt)) i mycnt="" q
	 				s myval=$g(in("arr",1,"arr",4,mycnt,"dta",1))
 					s li=$p(myval,"~",1)
 					s sp=$p(myval,"~",2)
 					i ($g(myarr("arr","tur",min,"dta",5))=li)&($g(myarr("arr","tur",min,"dta",6))=sp) {
	 					s myid=min_"~"_$i(cntedv)
	 					s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"par",1)=cntedv
	 					s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",1)=$g(myarr("arr","tur",min,"dta",1))			//tmTo
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",2)=$g(myarr("arr","tur",min,"dta",2))			//id
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",3)=$g(myarr("arr","tur",min,"dta",3))			//km
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",4)=$g(myarr("arr","tur",min,"dta",4))			//tm
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",5)=$g(myarr("arr","tur",min,"dta",5))			//li
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",6)=$g(myarr("arr","tur",min,"dta",6))			//sp
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",7)=$g(myarr("arr","tur",min,"dta",7))			//mapr
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",8)=$g(myarr("arr","tur",min,"dta",8))			//mapo
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",13)=$g(myarr("arr","tur",min,"dta",13))		//kmt
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",15)=$g(myarr("arr","tur",min,"dta",15))		//prs
 						s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",14)=$g(myarr("arr","tur",min,"dta",14))		//dsp
 						k in("arr",1,"arr",4,mycnt)
 					}
 		 		}
	 		}
 		}
 		k myarr
 	 }
 	 // spoje +
 	 s mycnt="" f {
	 	 s mycnt=$o(in("arr",1,"arr",3,mycnt)) i mycnt="" q
	 	 s myval=$g(in("arr",1,"arr",3,mycnt,"dta",1))
	 	 s li=$p(myval,"~",1)
 		 s sp=$p(myval,"~",2)
 		 k myarr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.myarr) i +err zt
 		 s myid=li_"~"_sp
	 	 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"par",1)=$i(cntedv)
	 	 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"dta",1)=$g(myarr("dta",3))		//doba jizdy (min)
	 	 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"dta",3)=$g(myarr("dta",5))		//km
 		 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"dta",4)=$g(myarr("dta",4))		//druh spoje
 		 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"dta",5)="+"
 		 s @mywrkglb@("arr","edv",hrl,"arr",2,myid,"dta",6)=$g(myarr("dta",13))		//prs
 	 }	 
 	 // spoje - (neco zbylo, nebylo to v turnusu)
 	 s mycnt="" f {
	 	 s mycnt=$o(in("arr",1,"arr",4,mycnt)) i mycnt="" q
	 	 s myval=$g(in("arr",1,"arr",4,mycnt,"dta",1))
 		 s li=$p(myval,"~",1)
 		 s sp=$p(myval,"~",2)
 		 k myarr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.myarr) i +err zt
 		 s myid=$g(myarr("dta",1))_"~"_$i(cntedv)
	 	 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"par",1)=cntedv
	 	 i $g(myarr("dta",2))<$g(myarr("dta",1)) s myarr("dta",2)=(1440+$g(myarr("dta",1)))
	 	 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",1)=$g(myarr("dta",2))		//tmTo
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",2)=3						//id
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",3)=$g(myarr("dta",5))		//km
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",4)=$g(myarr("dta",3))		//tm
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",5)=li						//li
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",6)=sp						//sp
 		 s @mywrkglb@("arr","edv",hrl,"arr",99,myid,"dta",14)=$g(myarr("dta",4))	//dsp
 	}
 	//ridici
 	s os="" f {
	 	s os=$o(in("arr",1,"arr",1,os)) i os="" q
	 	//ne fiktivni ridic 
 		i $d(in("arr",3,"arr",os)) continue
 		//poradi
 		s @mywrkglb@("osc",os,"par",1)=$g(in("arr",1,"arr",1,os,"dta",2))
 		//subdodany ridic
 		i +$g(in("arr",1,"arr",1,os,"dta",3)) {
	 		s @mywrkglb@("osc",os,"par",4)=1
	 		s @mywrkglb@("osc",os,"par",5)=$g(in("arr",1,"arr",1,os,"dta",4)) 	
 		}
 	}
 	k out("arr",1) m out("arr",1)=@mywrkglb
 }
 //nepravidelna
 i +$g(in("arr",1,"dta",6)) {
	 s @mywrkglb@("dta",1)=0
	 s @mywrkglb@("dta",2)=+$h
	 s @mywrkglb@("dta",4)=$g(in("arr",1,"dta",2)) //objednavka
	 s @mywrkglb@("dta",6)=hrl
	 s @mywrkglb@("dta",8)=rz
	 s @mywrkglb@("dta",9)=$g(in("arr",1,"dta",11))	//prives
	 //subdodane vozidlo
	 i +$g(in("arr",1,"dta",16)) {
	 	 s @mywrkglb@("dta",83)=1
 		 s @mywrkglb@("dta",84)=$g(in("arr",1,"dta",17))
 	 }
 	 s @mywrkglb@("arr",7,"cop","dta",1)=$h
 	 s @mywrkglb@("arr",7,"cop","dta",2)=$g(in("fullname"))
	 //ridici
	 s os="" f {
	 	s os=$o(in("arr",1,"arr",1,os)) i os="" q
	 	//ne fiktivni ridic 
 		i $d(in("arr",3,"arr",os)) continue
 		//poradi
 		s @mywrkglb@("osc",os,"par",1)=$g(in("arr",1,"arr",1,os,"dta",2))
 		//subdodany ridic
 		i +$g(in("arr",1,"arr",1,os,"dta",3)) {
	 		s @mywrkglb@("osc",os,"par",4)=1
	 		s @mywrkglb@("osc",os,"par",5)=$g(in("arr",1,"arr",1,os,"dta",4)) 	
	    }
 	 }
 	 k out("arr",2) m out("arr",2)=@mywrkglb
 }
 k @mywrkglb
 //
 q 0
 //
err
 s $zt="" k out
 q "1~"_$ze_"~"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDPlan4" type="INT" languagemode="0" timestamp="63708,44484"><![CDATA[
OBapiEDPlan4 q
 //================
 //poznamky k planu
 //================
gPlnNote(idfa,nmsp,idprac,hrl,in,out)
 // out("arr",1,cnt)=txnote
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 s cnt="" f {
	 s cnt=$o(^[nmsp]OBPL(idprac,hrl,"NT",cnt)) i cnt="" q
	 s out("arr",1,cnt)=$g(^[nmsp]OBPL(idprac,hrl,"NT",cnt))
 }
 q 0
sPlnNote(idfa,nmsp,idprac,hrl,in,out)
 // in("arr",1,cnt)=txnote
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 k ^[nmsp]OBPL(idprac,hrl,"NT")
 s cnt="" f {
	 s cnt=$o(in("arr",1,cnt)) i cnt="" q
	 s ^[nmsp]OBPL(idprac,hrl,"NT",cnt)=$g(in("arr",1,cnt))
 }
 q 0
isPlnNote(idfa,nmsp,idprac,hrl,in,out)
 // out=0/1
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 s out=$d(^[nmsp]OBPL(idprac,hrl,"NT"))
 q 0
 //====================
 //zaloha planu dopravy
 //====================
sDayBckUpPln(idfa,nmsp,idprac,hrl,in,out)
 // in("usr")=mlp_"~"_name
 // out=0/1
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 k ^[nmsp]OBPL(idprac,hrl,"BCKUP")
 i $o(^[nmsp]OBPL(idprac,hrl,"A",""))'="" {
	s ^[nmsp]OBPL(idprac,hrl,"BCKUP","i")=$h_"~"_$p($g(in("usr")),"~",1)_"~"_$p($g(in("usr")),"~",2)
 	m ^[nmsp]OBPL(idprac,hrl,"BCKUP","d","A")=^[nmsp]OBPL(idprac,hrl,"A")
 	m ^[nmsp]OBPL(idprac,hrl,"BCKUP","d","L")=^[nmsp]OBPL(idprac,hrl,"L")
 }
 q 0
isDayBckUpPln(idfa,nmsp,idprac,hrl,in,out)
 // out=0/>0
 n (idfa,nmsp,idprac,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(idprac)="" s err="idprac=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 s out=$d(^[nmsp]OBPL(idprac,hrl,"BCKUP"))
 q 0

err s $zt="" k out q "1~"_$ze_"~"_$tr($g(err),"~","/") 
]]></Routine>


<Routine name="OBapiEDPrm" type="INT" languagemode="0" timestamp="62837,42500"><![CDATA[
OBapiEDPrm q
 // =========================
 // ridici, premie pravidelna
 // =========================
lPrmPOs(idfa,nmsp,in,out)
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",os)=""           - hleda jen v dokladech s ridicem
 //    out=wrk					 - odkaz do globalu ^CacheTempJB(wrk,zp,rrmm,osc)=""
 n (idfa,nmsp,in,out) s $zt="err" k out s out=$$gWrkJB^OBapiED()
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 s zp="" f  s zp=$o(^[nmsp]OBPREM(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .i $d(in("prv")) q:'$d(in("prv",(zp#100)))
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBPREM(zp,rrmm)) q:rrmm=""  d
 ..i $d(in("rrmm")) q:'$d(in("rrmm",rrmm))
 ..s os="" f  s os=$o(^[nmsp]OBPREM(zp,rrmm,os)) q:os=""  d
 ...i $d(in("osc")) q:'$d(in("osc",os))
 ...s ^CacheTempJB(out,zp,rrmm,os)=""
 q 0
gPrmPOs(idfa,nmsp,zp,rrmm,os,in,out)
 //out:
 //out("dta",1)=jim.........doba jizdy + manipulace (minuty)
 //out("dta",2)=% ..........% premii
 //out("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //out("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //out("dta",5)=kcUprava....premie uprava
 //out("dta",6)=kcZaklad....zaklad, z ceho se pocitaji premie
 //out("dta",7)=Poznamka....poznamka
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 f cnt=1:1:7 s out("dta",cnt)=$p($g(^[nmsp]OBPREM(zp,rrmm,os)),":",cnt)
 //konverze hh.mm na mm
 i out("dta",1) s out("dta",1)=$$hm^OBapiED($g(out("dta",1)))
 q 0
sPrmPOs(idfa,nmsp,zp,rrmm,os,in,out)
 //in:
 //in("dta",1)=jim.........doba jizdy + manipulace (minuty)
 //in("dta",2)=% ..........% premii
 //in("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //in("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //in("dta",5)=kcUprava....premie uprava
 //in("dta",6)=kcZaklad....zaklad, z ceho se pocitaji premie
 //in("dta",7)=Poznamka....poznamka
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREM(zp,rrmm,os)
 f cnt=1:1:7 d
 .s $p(^[nmsp]OBPREM(zp,rrmm,os),":",cnt)=$g(in("dta",cnt))
 .i cnt=1 s $p(^[nmsp]OBPREM(zp,rrmm,os),":",cnt)=$$mh^OBapiED($g(in("dta",cnt)))
 q 0
dPrmPOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREM(zp,rrmm,os)
 q 0
isPrmPOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 s out=$d(^[nmsp]OBPREM(zp,rrmm,os))
 q 0
 // ===========================
 // ridici, premie nepravidelna
 // ===========================
lPrmNOs(idfa,nmsp,in,out)
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",os)=""           - hleda jen v dokladech s ridicem
 //    out=wrk					 - odkaz do globalu ^CacheTempJB(wrk,zp,rrmm,osc)=""
 n (idfa,nmsp,in,out) s $zt="err" k out s out=$$gWrkJB^OBapiED()
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 s zp="" f  s zp=$o(^[nmsp]OBPREMn(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .i $d(in("prv")) q:'$d(in("prv",(zp#100)))
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBPREMn(zp,rrmm)) q:rrmm=""  d
 ..i $d(in("rrmm")) q:'$d(in("rrmm",rrmm))
 ..s os="" f  s os=$o(^[nmsp]OBPREMn(zp,rrmm,os)) q:os=""  d
 ...i $d(in("osc")) q:'$d(in("osc",os))
 ...s ^CacheTempJB(out,zp,rrmm,os)=""
 q 0
gPrmNOs(idfa,nmsp,zp,rrmm,os,in,out)
 //out:
 //out("dta",1)=ji..........doba jizdy (minuty)
 //out("dta",2)=% ..........% premii
 //out("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //out("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //out("dta",5)=kcUprava....premie uprava
 //out("dta",6)=kcZaklad....zaklad, z ceho se pocitaji premie
 //out("dta",7)=Poznamka....poznamka
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 f cnt=1:1:7 s out("dta",cnt)=$p($g(^[nmsp]OBPREMn(zp,rrmm,os)),":",cnt)
 //konverze hh.mm na mm
 i out("dta",1) s out("dta",1)=$$hm^OBapiED($g(out("dta",1)))
 q 0
sPrmNOs(idfa,nmsp,zp,rrmm,os,in,out)
 //in:
 //in("dta",1)=ji..........doba jizdy (minuty)
 //in("dta",2)=% ..........% premii
 //in("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //in("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //in("dta",5)=kcUprava....premie uprava
 //in("dta",6)=kcZaklad....zaklad, z ceho se pocitaji premie
 //in("dta",7)=Poznamka....poznamka
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREMn(zp,rrmm,os)
 f cnt=1:1:7 d
 .s $p(^[nmsp]OBPREMn(zp,rrmm,os),":",cnt)=$g(in("dta",cnt))
 .i cnt=1 s $p(^[nmsp]OBPREMn(zp,rrmm,os),":",cnt)=$$mh^OBapiED($g(in("dta",cnt)))
 q 0
dPrmNOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREMn(zp,rrmm,os)
 q 0
isPrmNOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 s out=$d(^[nmsp]OBPREMn(zp,rrmm,os))
 q 0
 // ===================================================
 // ridici, premie pravidelna + nepravidelna + grafikon
 // ===================================================
lPrmAOs(idfa,nmsp,in,out)
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",os)=""           - hleda jen v dokladech s ridicem
 //    out=wrk					 - odkaz do globalu ^CacheTempJB(wrk,zp,rrmm,osc)=""
 n (idfa,nmsp,in,out)
 s $zt="err" k out s out=$$gWrkJB^OBapiED()
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 s zp="" f  s zp=$o(^[nmsp]OBPREMa(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .i $d(in("prv")) q:'$d(in("prv",(zp#100)))
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBPREMa(zp,rrmm)) q:rrmm=""  d
 ..i $d(in("rrmm")) q:'$d(in("rrmm",rrmm))
 ..s os="" f  s os=$o(^[nmsp]OBPREMa(zp,rrmm,os)) q:os=""  d
 ...i $d(in("osc")) q:'$d(in("osc",os))
 ...s ^CacheTempJB(out,zp,rrmm,os)=""
 q 0
gPrmAOs(idfa,nmsp,zp,rrmm,os,in,out)
 //out:
 //out("dta",1)=mmCelk......celkova doba (minuty)
 //out("dta",2)=% ..........% premii
 //out("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //out("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //out("dta",5)=kcUprava....premie uprava
 //out("dta",6)=kcZaklad....zaklad celkem, z ceho se pocitaji premie
 //out("dta",7)=Poznamka....poznamka
 //out("arr",1,dsp,"dta",1)=mmCelkDsp - celkova doba podle druhu dopravy (minuty)
 //out("arr",1,dsp,"dta",2)=kcZakladDsp - zaklad podle druhu dopravy (kc)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 f cnt=1:1:7 s out("dta",cnt)=$p($g(^[nmsp]OBPREMa(zp,rrmm,os)),"~",cnt)
 s idd="" f  s idd=$o(^[nmsp]OBPREMa(zp,rrmm,os,1,idd)) q:idd=""  d
 .f cnt=1:1:2 s out("arr",1,idd,"dta",cnt)=$p($g(^[nmsp]OBPREMa(zp,rrmm,os,1,idd)),"~",cnt)
 q 0
sPrmAOs(idfa,nmsp,zp,rrmm,os,in,out)
 //in:
 //in("dta",1)=mmCelk......doba jizdy + manipulace (minuty)
 //in("dta",2)=% ..........% premii
 //in("dta",3)=kcPremCelk..premie celkem = (kcPrem% + kcUprava)
 //in("dta",4)=kcPrem%.....premie procento =(kcZaklad*%)
 //in("dta",5)=kcUprava....premie uprava
 //in("dta",6)=kcZaklad....zaklad, z ceho se pocitaji premie
 //in("dta",7)=Poznamka....poznamka
 //in("arr",1,dsp,"dta",1)=mmCelkDsp - celkova doba podle druhu dopravy (minuty)
 //in("arr",1,dsp,"dta",2)=kcZakladDsp - zaklad podle druhu dopravy (kc)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREMa(zp,rrmm,os)
 f cnt=1:1:7 d
 .s $p(^[nmsp]OBPREMa(zp,rrmm,os),"~",cnt)=$g(in("dta",cnt))
 s idd="" f  s idd=$o(in("arr",1,idd)) q:idd=""  d
 .f cnt=1:1:2 s $p(^[nmsp]OBPREMa(zp,rrmm,os,1,idd),"~",cnt)=$g(in("arr",1,idd,"dta",cnt))
 q 0
dPrmAOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 k ^[nmsp]OBPREMa(zp,rrmm,os)
 q 0
isPrmAOs(idfa,nmsp,zp,rrmm,os,in,out)
 n (idfa,nmsp,zp,rrmm,os,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~hrl="
 i $g(os)="" q "1~os="
 s out=$d(^[nmsp]OBPREMa(zp,rrmm,os))
 q 0
 //
err s $zt="" q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDSAP" type="INT" languagemode="0" timestamp="64547,84443.599555"><![CDATA[
OBapiEDSAP
 q
gSAPFiktObj(idfa,nmsp,arr)
 //vrati fiktivni cislo objednavky pro SAP
 q ($i(^[nmsp]OI(idfa,"jb","SAP","par",1))+90000000)
gSAPNumFile(idfa,nmsp,arr)
 //vrati cislo souboru pro SAP
 q $i(^[nmsp]OI(idfa,"jb","SAP","par",2))
 
]]></Routine>


<Routine name="OBapiEDSC" type="INT" languagemode="0" timestamp="65696,40058.719409"><![CDATA[
OBapiEDSC q
 // stridaci cykly
cnvScDta(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // ========
 i $d(^[nmsp]OBPXSC(idfa)) s out("msg",$i(out("msg")))="Konverze střídacích cyklů již proběhla !" q 0
 k ^[nmsp]OBPXSC(idfa)
 // presun do novho globalu ^OBPXSC a datova konverze
 i ('$d(^[nmsp]OBPXSC(idfa)))&($d(^[nmsp]OBPXo(idfa))) d
 .s hrl=$$dn^OBapiED("1.1.2009")
 .s zp="" f  s zp=$o(^[nmsp]OBPXo(idfa,zp)) q:zp=""  d
 ..s ots="" f  s ots=$o(^[nmsp]OBPXo(idfa,zp,ots)) q:ots=""  d
 ...// pro ts odvodim pracoviste, kam patri
 ...k idprac s idprac="" f  s idprac=$o(^[nmsp]obpx(idprac)) q:idprac=""  d
 ....q:$g(^[nmsp]obpx(idprac))'=zp
 ....// pracoviste, kde je povoleno planovat pravidelnou dopravu
 ....q:+$p($g(^[nmsp]obpx(idprac,"desc")),"~",3)'=0
 ....s osok=0
 ....// lidi
 ....i ($g(^[nmsp]obpx(idprac,"L"))=0)!($g(^[nmsp]obpx(idprac,"L"))=1) s osok=1
 ....i ($g(^[nmsp]obpx(idprac,"L"))=2) d
 .....s osok=1 s cnt="" f  s cnt=$o(^[nmsp]OBPXo(idfa,zp,ots,"L",cnt)) q:cnt=""  d
 ......s os=+$g(^[nmsp]OBPXo(idfa,zp,ots,"L",cnt))
 ......i '$d(^[nmsp]obpx(idprac,"L","S",os)) s osok=0
 ....s rzok=0
 ....// auta
 ....i ($g(^[nmsp]obpx(idprac,"A"))=0)!($g(^[nmsp]obpx(idprac,"A"))=1) s rzok=1
 ....i ($g(^[nmsp]obpx(idprac,"A"))=2) d
 .....s rzok=1 s cnt="" f  s cnt=$o(^[nmsp]OBPXo(idfa,zp,ots,"A",cnt)) q:cnt=""  d
 ......s rz=$g(^[nmsp]OBPXo(idfa,zp,ots,"A",cnt))
 ......i '$d(^[nmsp]obpx(idprac,"A","S",rz)) s rzok=0
 ....i osok&rzok s idprac(idprac)=""
 ...i $o(idprac(""))="" s out("msg",$i(out("msg")))="ZP: "_zp_" pro TS: "_ots_" nelze urcit pracovistě !" q
 ...s cnt=0 s idprac="" f  s idprac=$o(idprac(idprac)) q:idprac=""  s cnt=cnt+1
 ...i cnt>1 s out("msg",$i(out("msg")))="ZP: "_zp_" pro TS: "_ots_" nelze urcit jednoznačně pracovistě !" q
 ...s idprac=$o(idprac("")) 
 ...// 
 ...s ts=$i(^[nmsp]OBPXSC(idfa,idprac))
 ...m ^[nmsp]OBPXSC(idfa,idprac,ts,hrl)=^[nmsp]OBPXo(idfa,zp,ots)
 ...s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl),"~",1)=ots
 ...// konverze stridacu
 ...s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)) q:cnt=""  d
 ....s hrlfrom="" f  s hrlfrom=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom)) q:hrlfrom=""  d
 .....q:hrlfrom="SL"
 .....s val=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom))
 .....s val=$tr(val,":","~")
 .....s ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,"SL",hrlfrom)=val
 ...// konverze ridicu
 ...k arr
 ...s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)) q:cnt=""  d
 ....m arr($tr(cnt,"123456789ABCDEF","ABCDEFGHIJKLMNO"))=^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)
 ...k ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L") m ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L")=arr
 ...// konverze aut
 ...k arr
 ...s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A",cnt)) q:cnt=""  d
 ....m arr($tr(cnt,"123456789ABCDEF","ABCDEFGHIJKLMNO"))=^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A",cnt)
 ...k ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A") m ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A")=arr
 ...k arr
 ...// uprava data zacatku stridani na horlog
 ...s idpd="" f  s idpd=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd)) q:idpd=""  d
 ....s idd=$i(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D"))
 ....s val=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd))
 ....s newval=""
 ....s $p(newval,"~",1)=idpd
 ....s $p(newval,"~",2)=$$dn^OBapiED($p(val,"~",1))
 ....// cyklus lidi
 ....s cy="" s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd,"CL",cnt)) q:cnt=""  d
 .....s $e(cy,cnt)=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd,"CL",cnt))
 ....s cy=$tr(cy,"123456789ABCDEF","ABCDEFGHIJKLMNO")
 ....s $p(newval,"~",3)=cy
 ....// cyklus aut
 ....s cy="" s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd,"CA",cnt)) q:cnt=""  d
 .....s $e(cy,cnt)=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd,"CA",cnt))
 ....s cy=$tr(cy,"123456789ABCDEF","ABCDEFGHIJKLMNO")
 ....s $p(newval,"~",4)=cy
 ....s ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idd)=newval
 ....// turnusy
 ....s idtu="" f  s idtu=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD",idpd,"T",idtu)) q:idtu=""  d
 .....s ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idd,"T",idtu)=""
 ...k ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"PD")
 ...s out("msg",$i(out("msg")))="ZP: "_zp_" turnusova skupina: "_ots_" byla přesunuta do pracoviště: "_idprac_"."
 q 0
lScTS(idfa,nmsp,in,out)
 // s i("par",1)="TU" w $$lScTS^OBapiED("PAKA_OSNAD","ad_v",.i,.wrk) w ! zw ^CacheTempJB(wrk)
 // err=$$lScTS(idfa,nmsp,in,out) - vrati seznam turnusovych skupin(ts) pro stridaci cykly
 //  - in
 //     in("idprac",idprac)="" je-li def, pak vratim ts pro def idprac
 //     in("tspl",1)=$h = je-li def, pak vratim cas.var.ts platnou k datu (jeden)
 //     in("tspl",2)=$h = je-li def, pak vratim cas.var.ts platne k datu a dalsi (muze jich byt vice)
 //     in("tspl",3)=$h = je-li def, pak vratim cas.var.ts od data(vcetne) dale (muze jich byt vice)
 //     in("tspl",4)=1 = je-li def, pak vratim cas.var.ts s datem ukonceni (muze jich byt vice)
 //     in("par",1)=cast_nazvu_turnusove_skupiny, pak vratim ts, jejichz nazev zacina na ...
 //     in("glb")=glb = je-li definovano, pak je vysledek v @glb@(idprac,ts,hrl,"dta",1)=nazev ts
 //     neni li definovan in("glb") vysledek se zapise do globalu ^CacheTempJB(wrk,idprac,ts,hrl,"dta",1)=nazev ts a out=wrk
 //
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // ========
 s dz=$$gFaDz^OBapiED(idfa)
 //
 s myglb=$g(in("glb")) s out=""
 i myglb="" s out=$$gWrkJB^OBapiED() s myglb="^CacheTempJB("_out_")"
 k @myglb
 //
 s idprac="" f  s idprac=$o(^[nmsp]OBPXSC(idfa,idprac)) q:idprac=""  d
 .i $d(in("idprac")) q:'$d(in("idprac",idprac))
 .s ts="" f  s ts=$o(^[nmsp]OBPXSC(idfa,idprac,ts)) q:ts=""  d
 ..s hrl="" f  s hrl=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)) q:hrl=""  d
 ...s name=$p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)),"~",1)
 ...s hrltsdo=$p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)),"~",2)
 ...// filtr na casovou variantu ts
 ...s isok=1
 ...i +$g(in("tspl",1)) d
 ....s isok=0 i (+$o(^[nmsp]OBPXSC(idfa,idprac,ts,in("tspl",1)+.01),-1))=hrl s isok=1 i hrltsdo&(hrltsdo<in("tspl",1)) s isok=0
 ...i +$g(in("tspl",2)) d
 ....s isok=0 i (+$o(^[nmsp]OBPXSC(idfa,idprac,ts,in("tspl",2)+.01),-1)=hrl)!(hrl'<in("tspl",2)) s isok=1 i hrltsdo&(hrltsdo<in("tspl",2)) s isok=0
 ...i +$g(in("tspl",3)) d
 ....s isok=0 i (hrl'<in("tspl",3)) s isok=1
 ...i +$g(in("tspl",4)) d
 ....s isok=0 i $p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)),"~",2) s isok=1 
 ...q:'isok
 ...// =================================
 ...// filtr na nazev ts (zadana je cast nazvu)
 ...i $g(in("par",1))'="" s:$e(name,1,$l(in("par",1)))'=in("par",1) isok=0
 ...q:'isok
 ...// proslo to
 ...s @myglb@(idprac,ts,hrl,"dta",1)=$p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl)),"~",1)
 //
 q 0
gScTS(idfa,nmsp,idprac,ts,hrl,in,out)
 // w $$gScTS^OBapiED("PAKA_OSNAD","AD_V",1002,21,61362,"",.out) w ! zw out
 // err=$$gScTS(idfa,nmsp,idprac,ts,hrl,.in,.out) - vrati data ts
 // idprac - idprac, ts - turnusova skupina, hrl - horlog casove varianty ts
 // in:
 // out:
 // zakladni udaje:
 // out("dta",1)=popis ts
 // out("dta",2)=hrl dokdy plati ts
 // ridici:
 // out("arr",1,cnt,"dta",1)=os  ... cnt je poradi os ve skupine, vaze na cyklus
 // out("arr",1,cnt,"dta",2)=priznak kmenove TS ... 0/1
 // ridici - nahradnici
 // out("arr",1,cnt,"arr",1,hrl,"dta",1)=os  ... ridic s os nahrazuje od hrl do hrl_do(neni-li hrl_do, pak stale)
 // out("arr",1,cnt,"arr",1,hrl,"dta",2)=hrl_do
 // auta:
 // out("arr",2,cnt,"dta",1)=rz  ... cnt je poradi rz ve skupine, vaze na cyklus
 // provozni dny zakladni udaje(idpd je identifikator pd):
 // out("arr",3,idpd,"dta",1)=popis pd
 // out("arr",3,idpd,"dta",2)=horlog zacatku cyklovani
 // out("arr",3,idpd,"dta",3)=cyklus ridice
 // out("arr",3,idpd,"dta",4)=cyklus aut
 // out("arr",3,idpd,"dta",5)=cyklus 2.ridice
 // out("arr",3,idpd,"dta",6)=auto do cyklu pro svatek
 // out("arr",3,idpd,"dta",7)=cyklus dopoctu diet
 // provozni dny turnusy:
 // out("arr",3,idpd,"arr",1,idtu)="" ... idtu je identifikator turnusu
 n (idfa,nmsp,idprac,ts,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(hrl)="" q "1~hrl="
 i $g(ts)="" q "1~ts="
 // zakladni udaje k ts
 s val=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl))
 f cnt=1:1:2 s out("dta",cnt)=$p(val,"~",cnt)
 // seznam ridicu k ts
 s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)) q:cnt=""  d
 .s out("arr",1,cnt,"dta",1)=$p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)),"~",1) //os
 .s out("arr",1,cnt,"dta",2)=$p($g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt)),"~",2) //priznak kmenove TS
 .s hrlfrom="" f  s hrlfrom=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom)) q:hrlfrom=""  d
 ..s val=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom))
 ..s out("arr",1,cnt,"arr",1,hrlfrom,"dta",1)=$p(val,"~",1)
 ..s out("arr",1,cnt,"arr",1,hrlfrom,"dta",2)=$p(val,"~",2)
 // seznam aut k ts
 s cnt="" f  s cnt=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A",cnt)) q:cnt=""  d
 .s rz=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A",cnt))
 .s out("arr",2,cnt,"dta",1)=rz
 // provozni dny
 s idpd="" f  s idpd=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idpd)) q:idpd=""  d
 .//zakladni udaje
 .s val=$g(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idpd))
 .f cnt=1:1:7 d
 ..s out("arr",3,idpd,"dta",cnt)=$p(val,"~",cnt)
 .//turnusy k pd
 .s idtu="" f  s idtu=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idpd,"T",idtu)) q:idtu=""  d
 ..s out("arr",3,idpd,"arr",1,idtu)=""
 q 0
sScTS(idfa,nmsp,idprac,ts,hrl,in,out)
 // w $$gScTS^OBapiED("PAKA_OSNAD","AD_V",1002,22,61362,"",.arr) w ! zw arr
 // w $$sScTS^OBapiED("PAKA_OSNAD","AD_V",1002,"",61362,.arr,.o) w ! zw o
 // w $$gScTS^OBapiED("PAKA_OSNAD","AD_V",1002,o("ts"),61362,"",.arr1) w ! zw arr1
 // err=$$sScTS(idfa,nmsp,idprac,ts,hrl,.in,.out) - zapise data ts
 // idprac - idprac, ts - turnusova skupina (pokud neni, jedna se o novou ts), hrl - horlog casove varianty ts
 // in - data ts
 n (idfa,nmsp,idprac,ts,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(hrl)="" q "1~hrl="
 // nova ts
 i $g(ts)="" s ts=$i(^[nmsp]OBPXSC(idfa,idprac))
 s out("ts")=ts
 // zruseni ts
 s err=$$dScTS^OBapiED(idfa,nmsp,idprac,ts,hrl,"","")
 // zakladni udaje k ts
 f cnt=1:1:2 s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl),"~",cnt)=$g(in("dta",cnt))
 // seznam ridicu k ts
 s cnt="" f  s cnt=$o(in("arr",1,cnt)) q:cnt=""  d
 .s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt),"~",1)=$g(in("arr",1,cnt,"dta",1))		//os
 .s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt),"~",2)=+$g(in("arr",1,cnt,"dta",2))	//priznak kmenove TS
 .s hrlfrom="" f  s hrlfrom=$o(in("arr",1,cnt,"arr",1,hrlfrom)) q:hrlfrom=""  d
 ..s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom),"~",1)=$g(in("arr",1,cnt,"arr",1,hrlfrom,"dta",1))
 ..s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"L",cnt,hrlfrom),"~",2)=$g(in("arr",1,cnt,"arr",1,hrlfrom,"dta",2))
 // seznam aut k ts
 s cnt="" f  s cnt=$o(in("arr",2,cnt)) q:cnt=""  d
 .s rz=$g(in("arr",2,cnt,"dta",1))
 .s ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"A",cnt)=rz
 // provozni dny
 s idpd="" f  s idpd=$o(in("arr",3,idpd)) q:idpd=""  d
 .//zakladni udaje
 .f cnt=1:1:7 d
 ..s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idpd),"~",cnt)=$g(in("arr",3,idpd,"dta",cnt))
 .//turnusy k pd
 .s idtu="" f  s idtu=$o(in("arr",3,idpd,"arr",1,idtu)) q:idtu=""  d
 ..s ^[nmsp]OBPXSC(idfa,idprac,ts,hrl,"D",idpd,"T",idtu)=""
 // aktualizace nazvu ts u vsech casovych variant
 s hrlTS="" f  s hrlTS=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrlTS)) q:hrlTS=""  d
 .s $p(^[nmsp]OBPXSC(idfa,idprac,ts,hrlTS),"~",1)=$g(in("dta",1))
 q 0
isScTS(idfa,nmsp,idprac,ts,hrl,in,out)
 // w $$isScTS^OBapiED("PAKA_OSNAD","AD_V",1002,21,61362,"",.out) w ! zw out
 // err=$$isScTS(idfa,nmsp,idprac,ts,hrl,.in,.out) - test na existenci ts
 // idprac - idprac, ts - turnusova skupina, hrl - horlog casove varianty ts, neni-li, test na existenci ts
 //
 // in
 // ==
 // out
 // ===
 // out=0 neexistuje / >0 existuje
 //
 n (idfa,nmsp,idprac,ts,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(ts)="" q "1~ts="
 //
 s:'$g(hrl) out=$d(^[nmsp]OBPXSC(idfa,idprac,ts))
 s:+$g(hrl) out=$d(^[nmsp]OBPXSC(idfa,idprac,ts,hrl))
 q 0
 //
dScTS(idfa,nmsp,idprac,ts,hrl,in,out)
 //w $$dScTS^OBapiED("PAKA_OSNAD","AD_V",1002,21,61362,"",.out) w ! zw out
 // err=$$dScTS(idfa,nmsp,idprac,ts,hrl,in,out) - zruseni ts v db
 s $zt="err"
 n (idfa,nmsp,idprac,ts,hrl,in,out)
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(ts)="" q "1~ts="
 i $g(hrl)="" q "1~hrl="
 k out s out("stt","del")=0
 // test na existenci ts
 k ists s err=$$isScTS^OBapiED(idfa,nmsp,idprac,ts,hrl,"",.ists) zt:+err "merr" s err="" q:'+$g(ists) 0
 // ===========================
 // vymazani ts
 k ^[nmsp]OBPXSC(idfa,idprac,ts,hrl) s out("stt","del")=1
 //=================
 q 0
gTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,in,out)
 // err=$$gTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,in,out) - vrati hrl casove varianty ts platne k hrl
 // out=hrl casove varianty
 // out("stt")= 0 ts neexistuje / >0 ts existuje
 s $zt="err"
 n (idfa,nmsp,idprac,ts,hrl,in,out) k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(ts)="" q "1~ts="
 i $g(hrl)="" q "1~hrl="
 //
 s out="" s out("stt")=0
 // existence ts
 k arr s err=$$isScTS^OBapiED(idfa,nmsp,idprac,ts,"","",.arr) zt:+err "merr" s err=""
 i '(+$g(arr)) q 0
 // ts existuje
 s out("stt")=1
 // dohledani hrl
 s hrlts=$o(^[nmsp]OBPXSC(idfa,idprac,ts,(hrl+.01)),-1) i hrlts="" q 0
 k arr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,ts,hrlts,"",.arr) zt:+err "merr" s err=""
 // je datum ukonceni
 i $g(arr("dta",2)) i $g(arr("dta",2))<hrl s hrlts=""
 s out=hrlts
 q 0
newTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,newhrl,in,out)
 //w $$newTimeVariantScTS^OBapiED("PAKA_OSNAD","AD_V",1002,22,61362,61363,"",.out) w ! zw out
 // err=$$newTimeVariantScTS(idfa,nmsp,idprac,ts,hrl,newhrl,.in,.out) - vytvoreni nove casove varianty ts
 s $zt="err" s err=""
 n (idfa,nmsp,idprac,ts,hrl,newhrl,in,out)
 k out s out("stt","newtimevariant")=0
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 i $g(ts)="" q "1~ts="
 i $g(hrl)="" q "1~hrl="
 i $g(newhrl)="" q "1~newhrl="
 //
 k ists s err=$$isScTS^OBapiED(idfa,nmsp,idprac,ts,hrl,"",.ists) zt:+err "merr" s err="" q:'+$g(ists) 0
 k ^[nmsp]OBPXSC(idfa,idprac,ts,newhrl)
 m ^[nmsp]OBPXSC(idfa,idprac,ts,newhrl)=^[nmsp]OBPXSC(idfa,idprac,ts,hrl)
 s out("stt","newtimevariant")=1
 q 0
 //tstgScDta
 //d cnvDta("PAKA_OSNAD","AD_V")
 //s wrk=$$gWrkJB^OBapiED()
 //s ^CacheTempJB(wrk,"dta",1)=$$dn^OBapiED("1.6.2010")
 //s ^CacheTempJB(wrk,"dta",2)=$$dn^OBapiED("5.6.2010")
 //s ^CacheTempJB(wrk,"arr",1,5)=""
 //w $$gScDta("PAKA_OSNAD","AD_V",1002,wrk,"","")
 //zw ^CacheTempJB(wrk,"arr",1) r a
 //zw ^CacheTempJB(wrk,"arr",2)
 //k ^CacheTempJB(wrk)
 //q
gScDta(idfa,nmsp,idprac,wrk,in,out)
 // err=$$gScDta(idfa,nmsp,idprac,wrk,.in,.out) - vytvori data pro planovani
 // bud je definovano wrk, pak v ^CacheTempJB(wrk,...
 // nebo je definovano in("glb"), pak v tomto globalu
 n (idfa,nmsp,idprac,wrk,in,out) k out
 s $zt="err" s err=""
 //kontrola promenych
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(idprac)="" q "1~idprac="
 // global s daty
 s wrk=$g(wrk)
 s myglb=$g(in("glb")) s out("glb")=myglb
 i myglb="" {
	 s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
	 s out("glb")=myglb
 }
 i wrk k @myglb m @myglb=^CacheTempJB(wrk)
 //dalsi global (pro statistiku turnusu)
 s mywrk=$$gWrkALVAAD^OBapiED() s myglb1="^||wrk.ALVA.AD("_mywrk_")" k @myglb1
 //vstupni data v @myglb@(...
 // ===================================
 // @myglb@("dta",1)=hrlOd (od kdy vytvorit plan)
 // @myglb@("dta",2)=hrlDo (do kdy vytvorit plan)
 // definice ts bez casove varianty, program si je automaticky odvodi a data ts nacte z db
 // @myglb@("arr",1,ts)="" turnusova skupina vypocet stridani
 // ====================================
 // definice ts s casovou variantou, datumem a daty ts (musi byt casova varianta a od - do)
 // @myglb@("arr",1,ts,hrl,"dta",1)=hrlOd
 // @myglb@("arr",1,ts,hrl,"dta",2)=hrlDo
 // @myglb@("arr",1,ts,hrl,"arr",1,...)=... datova struktura ts (totozna s $$gScTS(...))
 // pak se pocita stridani z teto struktury (EDISON)
 // =========================================================================
 // vystupni data
 // =============
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",1)=idts
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",2)=popis ts
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",3)=idpd
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",4)=popis pd
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",5)=mm
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",6)=km			  1   2    3      4       5      6      7
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",7)=km dle druhu (vni~dalk~mesto~primesto~mezin~smluvni~rezijni)
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",8)=os2
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",9)=mzda(orientacne)
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",10)=diety
 // @myglb@("arr",2,hrl,"arr",1,os,spz,idprac,tu,"dta",11)=zpusob dopoctu diet 0 nic/ 1 od pulnoci / 2 od pulnoci / 3 od pulnoci do pulnoci
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",1)=idts
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",2)=popis ts
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",3)=idpd
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",4)=popis pd
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",5)=mm
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",6)=km
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",7)=km dle druhu (vni~dalk~mesto~primesto~mezin~smluvni~rezijni)
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",8)=os2
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",9)=mzda(orientacne)
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",10)=diety
 // @myglb@("arr",2,hrl,"arr",2,spz,os,idprac,tu,"dta",11)=zpusob dopoctu diet 0 nic/ 1 od pulnoci / 2 od pulnoci / 3 od pulnoci do pulnoci
 //
 // nmsp pro vozidla
 s nmsprz=$$GetSystemDB^ALVAVOZIDLAapiC()
 // def zp
 k arr s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arr) i +err zt
 // provozovna
 s idprv=$g(arr("dta",1))
 // zp
 s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
 k arr
 // projdu global @myglb@("arr",1,ts a doplnim pripadne cas.varianty + od - do pro vypocet
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) i +err zt
 // okres
 s blo=$g(arr("arr",5,1)) i $g(arr("arr",5,1,"prv",idprv))'="" s blo=$g(arr("arr",5,1,"prv",idprv))
 // jak pocitat svatek - 0 podle dne, na ktery pripadne / 1 podle posledni nedele	
 s calsv=+$g(arr("arr",7,4))
 k arr
 s ts="" f {
	 s ts=$o(@myglb@("arr",1,ts)) i ts="" q
	 s hrlf=+$g(@myglb@("dta",1))
 	 s hrlt=+$g(@myglb@("dta",2))
 	 // vyhledani casovych variant ts (pokud neni jiz nadefinovano) 
 	 i $o(@myglb@("arr",1,ts,""))="" {
	 	 s fndall=0
		 s hrl=hrlt+.01 f {
			 s hrl=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl),-1) i (hrl="")!(fndall) q
		 	 s @myglb@("arr",1,ts,hrl)=""
		 	 i hrl'>hrlf s fndall=1
		 }
		 // doplneni od - do k casovym variantam ts pro vypocet
		 s hrl="" f {
			 s hrl=$o(@myglb@("arr",1,ts,hrl),-1) i hrl="" q
		 	 k arr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,ts,hrl,"",.arr) i +err zt
		 	 // od
		 	 s @myglb@("arr",1,ts,hrl,"dta",1)=hrl
		 	 i hrl<hrlf s @myglb@("arr",1,ts,hrl,"dta",1)=hrlf
		 	 // do
		 	 s @myglb@("arr",1,ts,hrl,"dta",2)=hrlt
		 	 // je datum ukonceni
		 	 i $g(arr("dta",2)) {
			 	 i $g(arr("dta",2))<hrlt {
				 	 s hrlt=$g(arr("dta",2))  
		 	 		 s @myglb@("arr",1,ts,hrl,"dta",2)=hrlt
		 	 	 }
		 	 }
		 	 //
			 s hrlt=(hrl-1)
			 i hrlt<hrlf s hrlt=hrlf
		 	 // data turnusove skupiny pro vypocet 
		 	 i '$d(@myglb@("arr",1,ts,hrl,"arr",1)) m @myglb@("arr",1,ts,hrl,"arr",1)=arr
		 }	 
 	 }
 	 // vypocet stridani
 	 s hrl="" f {
	 	 s hrl=$o(@myglb@("arr",1,ts,hrl)) i hrl="" q
		 //od
	 	 s hrlf=$g(@myglb@("arr",1,ts,hrl,"dta",1))
	 	 //do
	 	 s hrlt=$g(@myglb@("arr",1,ts,hrl,"dta",2))
	 	 // data ts
	 	 k arr m arr=@myglb@("arr",1,ts,hrl,"arr",1)
	 	 // vypocet planu turnusu
	 	 k @myglb1
	 	 s @myglb1@("dta",1)=hrlf
	  	 s @myglb1@("dta",2)=hrlt
	 	 s @myglb1@("dta",3)=blo
	 	 s idpd="" f {
		 	 s idpd=$o(arr("arr",3,idpd)) i idpd="" q
	 	 	 s idtu="" f {
		 	 	 s idtu=$o(arr("arr",3,idpd,"arr",1,idtu)) i idtu="" q
	 	 		 s @myglb1@("arr",1,idtu)=""
	 	 	 }
	 	 }
	 	 k arri s arri("glb")=myglb1
	 	 s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,"") i +err zt
	 	 // data v @myglb1@("arr",2,tu,"arr",2,hrl)="" horlog, kdy jede
	 	 s idpd="" f {
		 	 s idpd=$o(arr("arr",3,idpd)) i idpd="" q
		 	 s hrlc=$g(arr("arr",3,idpd,"dta",2))
		 	 s cyos=$g(arr("arr",3,idpd,"dta",3)) s dcyos=$l(cyos)
		 	 s cyrz=$g(arr("arr",3,idpd,"dta",4)) s dcyrz=$l(cyrz)
		 	 //cyklus druheho ridice
		 	 s cyos2=$g(arr("arr",3,idpd,"dta",5))
		 	 i cyos2="" s cyos2="0"
		 	 s dcyos2=$l(cyos2)
		 	 //cyklus pro dopocet diet
		 	 s cydi=$g(arr("arr",3,idpd,"dta",7))
		 	 i cydi="" s cydi="0"
		 	 s dcydi=$l(cydi)
		 	 i ('hrlc!'dcyos!'dcyrz) continue
		 	 f hrl=hrlf:1:hrlt {
			 	 s hrlsc=hrl
			 	 //kontrola na svatek podle nedele a nebo vozidlo ve svatek, zjisteni, co je za den
			 	 k arrday
			 	 i (calsv)!($g(arr("arr",3,idpd,"dta",6))'="") {
				 	 k tmparri
			 	 	 s tmparri("par",1)=+$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
			 	 	 s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.tmparri,.arrday)
			 	 	 k tmparri
			 	 }
			 	 //kontrola na svatek podle nedele
			 	 i (calsv) {
				 	 //je svatek a neni nedele, posun hrl
			 	 	 i (+$g(arrday("dta",2)))&($g(arrday("dta",1))'=7) s hrlsc=(hrl-$g(arrday("dta",1)))
			 	 }
			 	 //pozice v cyklu
			 	 s poscyos=(hrlsc-hrlc+1)#dcyos
			 	 i 'poscyos s poscyos=dcyos
			 	 s dtcyos=$e(cyos,poscyos)
			 	 //
			 	 s poscyrz=(hrlsc-hrlc+1)#dcyrz
			 	 i 'poscyrz s poscyrz=dcyrz
			 	 s dtcyrz=$e(cyrz,poscyrz)
			 	 //
			 	 s poscyos2=(hrlsc-hrlc+1)#dcyos2
			 	 i 'poscyos2 s poscyos2=dcyos2
			 	 s dtcyos2=$e(cyos2,poscyos2)
			 	 //
			 	 s poscydi=(hrlsc-hrlc+1)#dcydi
			 	 i 'poscydi s poscydi=dcydi
			 	 s dtcydi=$e(cydi,poscydi)
			 	 //specialni vozidlo pro svatek
				 i ($g(arr("arr",3,idpd,"dta",6))'="") {
					 //je svatek
			 	 	 i (+$g(arrday("dta",2))) {
				 	 	 s dtcyrz=$g(arr("arr",3,idpd,"dta",6))
			 	 	 }
				 }
			 	 //ridic pro den
			 	 s os=-1
			 	 i (dtcyos'="0") {
				 	 s os=$g(arr("arr",1,dtcyos,"dta",1))
			 	 }
			 	 i os="" s os=-1
			 	 //2. ridic pro den
			 	 s os2=""
			 	 i (dtcyos2'="0") {
				 	 s os2=$g(arr("arr",1,dtcyos2,"dta",1))
			 	 }
			 	 //stridaci dodelat
			 	 s hrlstros=$o(arr("arr",1,dtcyos,"arr",1,(hrl+.01)),-1)
			 	 i hrlstros'="" {
				 	 // je os
			 	 	 i $g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",1))'="" {
				 	 	 //neni do
				 	 	 i '$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",2)) {
					 	 	 s os=$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",1))
				 	 	 }
				 	 	 //je do a neni prosle
			 	 	     i +$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",2)) {
				 	 	      i hrl'>$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",2)) {
					 	 	      s os=$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",1))
				 	 	      } 
			 	 	     }
			 	 	 }
			 	 
			 	 }
			 	 //auto pro den, konverze rz k hrl
			 	 s rz=-1
			 	 i (dtcyrz'="0") {
				 	 s rz=$g(arr("arr",2,dtcyrz,"dta",1))
			 	 	 s tmprz=$$VehicleGetRz^ALVAVOZIDLAapiC(nmsprz,rz,hrl)
				 	 i (tmprz="")!(tmprz=-1)!(tmprz=-2) s tmprz=rz
			 	 	 s rz=tmprz
			 	 }
			 	 s idtu="" f {
				 	 s idtu=$o(arr("arr",3,idpd,"arr",1,idtu)) i idtu="" q
				 	 // turnus nejede
			 	 	 i '$d(@myglb1@("arr",2,idtu,"arr",2,hrl)) continue
				 	 // turnus jede
				 	 k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.arrtu) i +err zt
				 	 s kmdsp=""
				 	 s $p(kmdsp,"~",1)=$g(arrtu("arr","tuv",23))
				 	 s $p(kmdsp,"~",2)=$g(arrtu("arr","tuv",24))
				 	 s $p(kmdsp,"~",3)=$g(arrtu("arr","tuv",25))
				 	 s $p(kmdsp,"~",4)=$g(arrtu("arr","tuv",26))
				 	 s $p(kmdsp,"~",5)=$g(arrtu("arr","tuv",27))
				 	 s $p(kmdsp,"~",6)=$g(arrtu("arr","tuv",28))
				 	 s $p(kmdsp,"~",7)=$g(arrtu("arr","tuv",29))
				 	 s mzd="" f cnt=1:1:4,12,15,26,28,34,38,40,41,42 s mzd=mzd+$g(arrtu("arr","tuv",19,cnt))
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",1)=ts
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",2)=$g(arr("dta",1))
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",3)=idpd
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",4)=$g(arr("arr",3,idpd,"dta",1))
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",5)=$g(arrtu("arr","tuv",11))-$g(arrtu("arr","drv","arr",1,"dta",1)) //hodiny-spolujizda
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",6)=$g(arrtu("arr","tuv",22))
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",7)=kmdsp
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",8)=os2
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",9)=mzd
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",10)=$g(arrtu("arr","tuv",18))
				 	 s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",11)=+$tr(dtcydi,"0ABC","0123")
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",1)=ts
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",2)=$g(arr("dta",1))
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",3)=idpd
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",4)=$g(arr("arr",3,idpd,"dta",1))
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",5)=$g(arrtu("arr","tuv",11))-$g(arrtu("arr","drv","arr",1,"dta",1)) //hodiny-spolujizda
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",6)=$g(arrtu("arr","tuv",22))
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",7)=kmdsp
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",8)=os2
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",9)=mzd
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",10)=$g(arrtu("arr","tuv",18))
				 	 s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",11)=+$tr(dtcydi,"0ABC","0123")	 
			 	 }
		 	 }		 	 
	 	 }
 	 }
 }
 // 
 k @myglb1
 i wrk k ^CacheTempJB(wrk) m ^CacheTempJB(wrk)=@myglb
 /*
 s ts="" f  s ts=$o(@myglb@("arr",1,ts)) q:ts=""  d
 .s hrlf=+$g(@myglb@("dta",1))
 .s hrlt=+$g(@myglb@("dta",2))
 .q:$o(@myglb@("arr",1,ts,""))'=""
 .// vyhledani casovych variant ts
 .s hrl=hrlt+.01 s fndall=0 f  s hrl=$o(^[nmsp]OBPXSC(idfa,idprac,ts,hrl),-1) q:(hrl="")!(fndall)  d
 ..s @myglb@("arr",1,ts,hrl)=""
 ..s:hrl'>hrlf fndall=1
 .// doplneni od - do k casovym variantam ts pro vypocet
 .s hrl="" f  s hrl=$o(@myglb@("arr",1,ts,hrl),-1) q:hrl=""  d
 ..k arr s err=$$gScTS^OBapiED(idfa,nmsp,idprac,ts,hrl,"",.arr) zt:+err "merr" s err=""
 ..;; od
 ..s @myglb@("arr",1,ts,hrl,"dta",1)=hrl s:hrl<hrlf @myglb@("arr",1,ts,hrl,"dta",1)=hrlf
 ..;; do
 ..s @myglb@("arr",1,ts,hrl,"dta",2)=hrlt
 ..// je datum ukonceni
 ..i $g(arr("dta",2)) i $g(arr("dta",2))<hrlt d
 ...s hrlt=$g(arr("dta",2))  
 ...s @myglb@("arr",1,ts,hrl,"dta",2)=hrlt
 ..//
 ..s hrlt=(hrl-1) s:hrlt<hrlf hrlt=hrlf
 ..// data turnusove skupiny pro vypocet 
 ..i '$d(@myglb@("arr",1,ts,hrl,"arr",1)) m @myglb@("arr",1,ts,hrl,"arr",1)=arr
 .// vypocet stridani
 .s hrl="" f  s hrl=$o(@myglb@("arr",1,ts,hrl)) q:hrl=""  d
 ..//od
 ..s hrlf=$g(@myglb@("arr",1,ts,hrl,"dta",1))
 ..//do
 ..s hrlt=$g(@myglb@("arr",1,ts,hrl,"dta",2))
 ..// data ts
 ..k arr m arr=@myglb@("arr",1,ts,hrl,"arr",1)
 ..// vypocet planu turnusu
 ..k @myglb1
 ..s @myglb1@("dta",1)=hrlf
 ..s @myglb1@("dta",2)=hrlt
 ..s @myglb1@("dta",3)=blo
 ..s idpd="" f  s idpd=$o(arr("arr",3,idpd)) q:idpd=""  d
 ...s idtu="" f  s idtu=$o(arr("arr",3,idpd,"arr",1,idtu)) q:idtu=""  d
 ....s @myglb1@("arr",1,idtu)=""
 ..k arri s arri("glb")=myglb1
 ..s err=$$mkStaTur^OBapiED(idfa,nmsp,zp,"",.arri,"") zt:+err "merr" s err=""
 ..// data v @myglb1@("arr",2,tu,"arr",2,hrl)="" horlog, kdy jede
 ..s idpd="" f  s idpd=$o(arr("arr",3,idpd)) q:idpd=""  d
 ...s hrlc=$g(arr("arr",3,idpd,"dta",2))
 ...s cyos=$g(arr("arr",3,idpd,"dta",3)) s dcyos=$l(cyos)
 ...s cyrz=$g(arr("arr",3,idpd,"dta",4)) s dcyrz=$l(cyrz)
 ...s cyos2=$g(arr("arr",3,idpd,"dta",5)) s:cyos2="" cyos2="0" s dcyos2=$l(cyos2)	//cyklus druheho ridice
 ...s cydi=$g(arr("arr",3,idpd,"dta",7)) s:cydi="" cydi="0" s dcydi=$l(cydi)		//cyklus pro dopocet diet
 ...q:'hrlc!'dcyos!'dcyrz
 ...f hrl=hrlf:1:hrlt d
 ....s hrlsc=hrl
 ....//kontrola na svatek podle nedele a nebo vozidlo ve svatek, zjisteni, co je za den
 ....k arrday
 ....i (calsv)!($g(arr("arr",3,idpd,"dta",6))'="") d
 .....k tmparri
 .....s tmparri("par",1)=+$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
 .....s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.tmparri,.arrday)
 .....k tmparri
 ....//kontrola na svatek podle nedele
 ....i (calsv) d
 .....//je svatek a neni nedele, posun hrl
 .....i (+$g(arrday("dta",2)))&($g(arrday("dta",1))'=7) s hrlsc=(hrl-$g(arrday("dta",1)))
 ....//pozice v cyklu
 ....s poscyos=(hrlsc-hrlc+1)#dcyos s:'poscyos poscyos=dcyos s dtcyos=$e(cyos,poscyos)
 ....s poscyrz=(hrlsc-hrlc+1)#dcyrz s:'poscyrz poscyrz=dcyrz s dtcyrz=$e(cyrz,poscyrz)
 ....s poscyos2=(hrlsc-hrlc+1)#dcyos2 s:'poscyos2 poscyos2=dcyos2 s dtcyos2=$e(cyos2,poscyos2)
 ....s poscydi=(hrlsc-hrlc+1)#dcydi s:'poscydi poscydi=dcydi s dtcydi=$e(cydi,poscydi)
 ....//specialni vozidlo pro svatek
 ....i ($g(arr("arr",3,idpd,"dta",6))'="") d
 .....//je svatek
 .....i (+$g(arrday("dta",2))) s dtcyrz=$g(arr("arr",3,idpd,"dta",6))
 ....//============================ 
 ....//ridic pro den
 ....s os=-1 s:(dtcyos'="0") os=$g(arr("arr",1,dtcyos,"dta",1)) s:os="" os=-1
 ....//2. ridic pro den
 ....s os2="" s:(dtcyos2'="0") os2=$g(arr("arr",1,dtcyos2,"dta",1))
 ....//stridaci dodelat
 ....s hrlstros=$o(arr("arr",1,dtcyos,"arr",1,(hrl+.01)),-1) d
 .....q:hrlstros=""
 .....// neni os
 .....q:$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",1))=""
 .....// prosle do
 .....i $g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",2)) i hrl>$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",2)) q 
 .....s os=$g(arr("arr",1,dtcyos,"arr",1,hrlstros,"dta",1))=""
 ....//auto pro den, konverze rz k hrl
 ....s rz=-1
 ....i (dtcyrz'="0") d
 .....s rz=$g(arr("arr",2,dtcyrz,"dta",1))
 .....s tmprz=$$VehicleGetRz^ALVAVOZIDLAapiC(nmsprz,rz,hrl)
 .....i (tmprz="")!(tmprz=-1)!(tmprz=-2) s tmprz=rz
 .....s rz=tmprz
 ....s idtu="" f  s idtu=$o(arr("arr",3,idpd,"arr",1,idtu)) q:idtu=""  d
 .....// turnus nejede
 .....q:'$d(@myglb1@("arr",2,idtu,"arr",2,hrl))
 .....// turnus jede
 .....k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,idtu,hrl,"",.arrtu) zt:+err "merr" s err=""
 .....s kmdsp=""
 .....s $p(kmdsp,"~",1)=$g(arrtu("arr","tuv",23))
 .....s $p(kmdsp,"~",2)=$g(arrtu("arr","tuv",24))
 .....s $p(kmdsp,"~",3)=$g(arrtu("arr","tuv",25))
 .....s $p(kmdsp,"~",4)=$g(arrtu("arr","tuv",26))
 .....s $p(kmdsp,"~",5)=$g(arrtu("arr","tuv",27))
 .....s $p(kmdsp,"~",6)=$g(arrtu("arr","tuv",28))
 .....s $p(kmdsp,"~",7)=$g(arrtu("arr","tuv",29))
 .....s mzd="" f cnt=1:1:4,12,15,26,28,34,38,40,41,42 s mzd=mzd+$g(arrtu("arr","tuv",19,cnt))
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",1)=ts
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",2)=$g(arr("dta",1))
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",3)=idpd
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",4)=$g(arr("arr",3,idpd,"dta",1))
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",5)=$g(arrtu("arr","tuv",11))-$g(arrtu("arr","drv","arr",1,"dta",1)) //hodiny-spolujizda
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",6)=$g(arrtu("arr","tuv",22))
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",7)=kmdsp
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",8)=os2
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",9)=mzd
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",10)=$g(arrtu("arr","tuv",18))
 .....s @myglb@("arr",2,hrl,"arr",1,os,rz,idprac,idtu,"dta",11)=+$tr(dtcydi,"0ABC","0123")
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",1)=ts
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",2)=$g(arr("dta",1))
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",3)=idpd
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",4)=$g(arr("arr",3,idpd,"dta",1))
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",5)=$g(arrtu("arr","tuv",11))-$g(arrtu("arr","drv","arr",1,"dta",1)) //hodiny-spolujizda
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",6)=$g(arrtu("arr","tuv",22))
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",7)=kmdsp
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",8)=os2
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",9)=mzd
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",10)=$g(arrtu("arr","tuv",18))
 .....s @myglb@("arr",2,hrl,"arr",2,rz,os,idprac,idtu,"dta",11)=+$tr(dtcydi,"0ABC","0123")
 */
 q 0
 //
err s $zt="" k out q:$g(err)'="" "1"_"~"_$tr(err,"~","/")_"/"_$ze q "1"_"~"_$ze
]]></Routine>


<Routine name="OBapiEDSet" type="INT" languagemode="0" timestamp="65486,52369.186375"><![CDATA[
OBapiEDSet q
 // =============================================================================================================================
 // POZOR, v metode = class(ALVA.ADSETTINGS.Settings).getPrvMainSet = se z nastaveni nacitaji mozne provozovny pro seznamy v okne
 //        bude-li se provozovna doplnovat, do dat, kontrola teto metody !
 // =============================================================================================================================
gMainSet(idfa,nmsp,in,out)
 // err = $$gMainSet(idfa,nmsp,in,out) - vrati nastaveni programu
 // out("arr",id,key)=val   ...  ad parametry (spolecne)
 // ---------------------
 // id  key		popis
 // 1   01       parametry pro import spoju: default skupina s JR
 // 1   02       parametry pro import spoju: minSpCek1~minSpCek2~minSpCekKm (limitMm1~limitMm2~limitMmKm)
 // 1   03       parametry pro import spoju: minSpMhdCek1
 // 1   04       parametry pro import spoju: dopravceFa
 // 1   05       posilovy spoj, minimalni cislo spoje
 // 1   06       parametry pro import spoju: provozFa
 // 1   07       parametry pro import spoju: default skupinu v 1,1 pri importu neumoznit menit 0/1 
 // =============
 // 2   01       objednavky - kolik radek vynechat pred tiskem
 // 2   02       objednavky - osvedceni pro novy modul (EDISON)
 // 2   03       objednavky - vychozi odstavné místo (dle provozoven) "prv",idprv)=val
 // 2   04       objednavky - vychozi ns pro spedici (dle provozoven) "prv",idprv)=val
 // 2   05       objednavky - tisk - reportgen id formulare pro tisk objednavky
 // 2   06       objednavky - tisk - reportgen id formulare pro tisk potvrzeni k objednavce
 // 2   07       objednavky - kontrolovat zakaznika na pohledavky 0/1
 // 2   08		 objednavky - vychozi zpusob platby (id ciselniku=8)
 // 2   09		 objednavky - vychozi zpusob fakturace
 // 2   10		 objednavky - vychozi typ prepravce
 // 2   11		 objednavky - zadat objednavku pouze s dopravcem z ciselniku 0 ne / 1 ano
 // 2   12		 objednavky - zadávat povinně od-do (datum a čas) 0 ne / 1 ano
 // 2   13       objednavky - tisk - reportgen id formulare pro tisk objednavky (dle provozoven) "prv",idprv)=iddoc
 // =============
 // 3   01       fakturace - jak fakturovat (zaokrouhlovat) ctvrthodiny cekani 0 dolu / 1 nahoru
 // 3   02       fakturace - jak odvodit vypocet sazeb val1~val2~val3~val4  valx= 0 ne / 1 ano
 //							  val1=1 z RZ
 //							  val2=1 z TYPu PREPRAVCE
 //							  val3=1 ze ZAKAZNIKA 
 //							  val4=1 z OBJEDNAVKY (vzdy 1, nezadava se)
 // 3   03       fakturace - tisk počtu osob na fakturu 0 ne / 1 ano
 // 3   04		 ,idfakt)=id ucetniho pripadu (idfakt=1 tuzemska,2 zahranicni,3 vnitrofaktura tuzemska,4 spedice,5 dobropis,6 tuzemska pro EU,7 zahranicni pro EU,8 z pravidelné dopravy,9 zalohova faktura,10 vnitrofaktura zahranici)
 // 3   05       "prv",idprv)=fakt.rada|fakt.rada|...~fakt.rada vnitrofakt.|fakt.rada vnitrofakt.|...~stredisko pro zalohove fakt.
 // 3   06		 fakturace - zahrnout zodpovednou osobu do klice pro souhrnou fakturu (0 ano/ 1 ne)
 // 3   07       fakturace - jak určit predkontaci a ucetni pripad pro zahraniční fakturu (0 podle státu z druhu zájezdu / 1 podle fakturační měny)
 // 3   08       fakturace - vkladat mezi doklady na souhrnne faktury mezeru: 0 ne / 1 ano
 // 3   09       fakturace - zobrazit pred sestavenim faktury okno s upresnujicimi texty 0 ne / 1 ano
 // 3   10       fakturace - způsob výpočtu zahraničního DPH v případě DPH započteného v ceně (0 varianta 1 / 1 varianta 2) 
 // 3   11       fakturace - pro dobropis použít účetní případ 0 podle nastavené tabulky / 1 podle dobropisované faktury  
 // 3   12       "prv",idprv)=definice ucetnich pripadu pro prov. jednotlive ucetni pripady oddelene ~, pozice 1 tuzemska,2 zahranicni,3 vnitrofaktura tuzemsko,4 spedice,5 dobropis,6 tuzemska pro EU,7 zahranicni pro EU,8 z pravidelné dopravy,9 zalohova faktura,10 vnitrofaktura zahranici
 // 3   13		 fakturace - pravidelná doprava - nabizet k fakturaci doklady na kterých je na spojich prepravni system ktery ma nastaveno, ze se fakturuje 0 ne / 1 ano       
 // 3   14		 fakturace - faktury vystavovat do cizích firem podle provozovny, do které je zařazeno vozidlo (0 ne / 1 ano)
 // 3   15		 fakturace - SAP - způsob odvozeni depa pro fakturu 0 podle provozovny, kde je vozidlo zařazeno / 1 podle přepravního systemu
 // =============
 // 4   01       pravidlena - turnusy - oprava cas.variantu turnusu z uzavrenych obdobi (0 ano / 1 ne)
 // 4   02       pravidlena - turnusy - parametry pro vypocet BP val1~val2~val3~val4~val5~val6~val7~val8~val9~val10
 //				val1 = 0 man je cekani / 1 jizda
 //				val2 = 0 ost.prace jsou cekani / 1 jizda
 //				val3 = delka jednorazove pauzy, ktera prerusuje vykon 
 //				val4 = 0 suma pauz neprerusuje rizeni / 1 prerusuje
 //				val5 = tur.do 50, pokud je pauza < mp0, je to jizda
 //				val6 = tur.nad 50, pokud je pauza < mp1, je to jizda
 //				val7 = po prideleni BP 0 doba rizeni se napocitava od prekroceni doby rizeni / 1 doba rizeni se napocitava od posledni BP
 //             val8 = 0 bp se prideluje nejprve na ukor pauz, pokud se to nepovede pak se prideluje na ukor manipulaci / 1 bp se prideluje ihned na ukor manipulaci
 //				val9 = 0 man tesne za jizdou se nepripocitava k jizde / 1 man tesne za jizdou se pripocitava k jizde (funguje to jen v pripade, ze man je jizda)
 //             val10= jak umistit BP do pauzy (0 centrovat / 1 na začátek)
 // 4   03       pravidlena - spoje - oprava cas.variant spoju z uzavrenych obdobi (0 ano / 1 ne)
 // 4   04       pravidlena - turnusy - tisk  - komentare pro spoje nad a do 50 km val1~val2~val3~val4
 //              val1=zahlavi pro turnusy se spoji do 50km a MHD spoji
 //              val2=zahlavi pro turnusy se spoji nad 50km
 //              val3=zahlavi pro turnusy s mezinárodními linkami
 //              val4=zahlavi pro turnusy s pouze MHD linkami
 // 4   05       pravidlena - turnusy - tisk  - indikovat v pauzach odpocinek, pokud je pauza > nez val
 // 4   06       pravidlena - turnusy - tisk  - jak tisknout zastavky 0 JR / 1 20znk / 2 32znk / 3 28znk / 4 MHD
 // 4   07       pravidelna - turnusy - tisk  - formular pro predtisk turnusu (dle provozoven) "prv",idprv)=iddoc
 // 4   08       turnusy - osvedceni pro novy modul (EDISON)
 // 4   09       pravidlena - turnusy - parametry pro vypocet manipulaci val1~val2~val3
 //				 val1 = 0 prideli se plna manipulace před a po, je-li dost mista / 1 prideluje se pred spoj manipulace pred, nevejde-li se pak se zbytek přideluje za spoj (nemusí se nastavovat man.po)
 //				 val2 = 0 manipulace se nedopocitavaji na maximum / 1 manipulace se dopocitavaji na maximum hodinove a korunove / 2 manipulace se dopocitavaji na maximum korunove / 3 manipulace se dopocitavaji na maximum hodinove a korunove jen do vyse cekani/PPN
 //              val3 = 0/1, pro dopoctene hodiny manipulaci se budou vyhodnocovat hodiny v So,Ne a Sv podle data výjezdu
 //	*			 ,"prv",idprv)=val1~val2
 //              val1 = 0 nezadáno / 1 prideli se plna manipulace před a po, je-li dost mista / 2 prideluje se pred spoj manipulace pred, nevejde-li se pak se zbytek přideluje za spoj (nemusí se nastavovat man.po)
 //              val2 = 0 nezadáno / 1 manipulace se nedopocitavaji na maximum / 2 manipulace se dopocitavaji na maximum hodinove a korunove / 3 manipulace se dopocitavaji na maximum korunove / 4 manipulace se dopocitavaji na maximum hodinove a korunove jen do vyse cekani/PPN
 // 4	10		 ,iddsp)=manipulacePred(mm)~manipulacePo(mm)~manipulacePocet(ks)
 //				 ,iddsp,"prv",idprv)=manipulacePred(mm)~manipulacePo(mm)~manipulacePocet(ks) (nastaveni dle provozoven)
 //				 ... iddsp ... ciselnik 4
 // 4   11       ,iddsp)=vyrovnavaciDobaMeziSpoji(mm)~vyrovnavaciDobaPauzySp(mm)
 //              ,iddsp,"prv",idprv)=vyrovnavaciDobaMeziSpoji(mm)~vyrovnavaciDobaPauzySp(mm) (nastaveni dle provozoven)
 // 4   12		 pravidelna - turnusy - parametry pro delenou smenu=val1~val2~val3~val4
 //				 val1=jak zadavat delenou smenu (0 rucne / 1 pocitat automaticky podle parametru/ 2 automaticky mezi mestske spoje a do mestskych turnusu) 
 //				 val2=delka pauz pro vypocet x (min) (alg.1)
 //				 val3=suma doby pro vypocet y (min)  (alg.1) ... (dosahne-li suma cekani (o delce nejmene x minut) alespon y minut, jedna se o dělenou smenu
 //              val4=delka pauzy pro prevod na rozdelenou smenu (alg.2)
 // *			 ,"prv",idprv)=val1~val2~val3~val4
 //				 val1=jak zadavat delenou smenu (0 nezadano / 1 rucne / 2 pocitat automaticky podle parametru/ 3 automaticky mezi mestske spoje a do mestskych turnusu) 
 //              val2=delka pauz pro vypocet x (min) (alg.2)
 //				 val3=suma doby pro vypocet y (min)  (alg.2) ... (dosahne-li suma cekani (o delce nejmene x minut) alespon y minut, jedna se o dělenou smenu
 //              val4=delka pauzy pro prevod na delenou smenu (alg.3)
 //
 //
 // 4   13       turnusy - tisk poznamek ze spoju (0 ne / 1 ano)
 // 4   14		 způsob výpočtu vyrovnavací doby (0 celková doba mezi spoji / 1 velikost každé pauzy mezy spoji / 2 každá pauza v průběhu / 3 suma pauz mezi spoji)
 // 			 "prv",idprv)=val nastaveni pro provoz (0 dle nastaveni programu / 1 celková doba mezi spoji / 2 velikost každé pauzy mezy spoji / 3 každá pauza v průběhu / 4 suma pauz mezi spoji)
 // 4   15       turnusy - tisk navaznosti spoj vycka v TC (0 ne / 1 ano)
 // 4   16       turnusy - tisk navaznosti na spoj navazuje(0 ne / 1 ano)
 // 4   17       turnusy - tisk navaznosti spoj pokracuje (0 ne / 1 ano)
 // 4   18       turnusy - tisk - pro ostatni prace tisk jen upresneni cinnosti (0 ne / 1 ano)
 // 4   19       turnusy - jak urcit druh jizdy (spoje) pro pristaveni, prejezd a odstaveni (0 vzdy rezijni / 1 podle druhu nasledujiciho (predchoziho spoje))  
 // 4   20       turnusy - netisknout zacatek a konec turnusu (cinnost)
 // 4   21		 pravidelna - turnusy - parametry pro vypocet preruseni prace
 //				 val1=vypocet preruseni prace (0 ne / 1 ano)  
 //				 val2=zpusob vypoctu preruseni prace (0 podle turnusu / 1 podle spoju) 
 //				 val3=limit pro zapoctne cekani (min)
 // =============
 // 5   01       system - vychozi okresy = okresProFirmu, dle provozoven ... "prv",idprv)=okresProProvoz
 // 5   02       system - nastaveni sdileni aut pro provozovny (0 vlastni provoz / 1 cela firma neupozornovat / 2 cela firma upozornovat)
 // 5   03       plan dopravy - osvedceni pro novy modul (EDISON)
 // 5   04       system - nastaveni sdileni ridicu pro provozovny (0 cela firma neupozornovat / 1 cela firma upozornovat)
 // 5   05		 system - id oblasti stromu pro vybery vozidel  
 // 5   06		 system - id oblasti stromu pro vybery prs
 // 5   07       system - vychozi kalendar = kalendarProFirmu, dle provozoven ... "prv",idprv)=kalendarProProvoz 0 hlavni / 1 vedlejsi
 // =============
 // 6   01       doklady obecne - zpusob zadavani PHM = val1~val2~val3
 //              val1= 0 pocet tank.lt / 1 konc. a poc.stav+tank
 //              val2= 0 nenabizet vychozi stav nadrze/ 1 nabizet vychozi stav nadrze (pouze pro val1=1)
 //              val3= 0 nesledovat stav tchm pri tankovani /1 sledovat stav tchm pri tankovani (pouze pro val1=0)
 // 6   02       doklady obecne - normovani PH - 0 zimni % prirazkou pro celou firmu /1 zimni % prirazkou pro kazdy provoz /2 zimni zakladni spotrebou / 3 zakladni spotrebou po mesicich
 // 6   03       doklady dzva - tolerance rozdilu km proti tachometru = val1~val2~val3
 //              val1 = tolerance (%), kdy se rozdil automaticky zapise do rezijnich km a neupozornuje se
 //              val2 = tolerance (%), kdy se rozdil toleruje a neoznamuje
 //              val3 = 0 po prekroceni varovat a umoznit zapis dokladu/ 1 po prekroceni varovat a NEumoznit zapis dokladu
 // 6   04       doklady dzva - prumerna rychlost u objizdek a rez.km (km/h)
 // 6   05       doklady dzva - limit diet
 // 6   06       doklady dzva - porizovat aktualni prirazku phm na dzva 0 ne / 1 ano
 // 6   07       doklady obecne - nabizet vychozi stav tachometru 0 ne / 1 ano
 // 6   08       doklady dzva - limit PH na doklade pro kontrolu
 // 6   09       doklady dzva - limit dnu na porizeni dokladu
 // 6   10       doklady dzva - prednastavit zaporne cekani u neprepravniho vykonu mimo norm. udrzbu 0 ne / 1 ano
 // 6   11       doklady dzva - spoje(-) prevest odeb.vykon do nepreprav.cinnosti 0 ne / 1 ano,ze spoju / 2 ano, ze spoju a rez.jizd
 // 6   12		 doklady dzva - spoje(+) prednastavit hod. take do cek 0 ne / 1 ano
 // 6   13		 doklady dzva - sledovat stav vozidel, kontrola 0 ne / 1 ano
 // 6   14		 doklady dzva - neprepr.vykon - vychozi hodnota pro 82 pMytBus
 // 6   15       doklady sj - tolerance rozdilu km proti tachometru = val1~val2
 //              val1 = tolerance (%), kdy se rozdil toleruje a neoznamuje
 //              val2 = 0 po prekroceni varovat a umoznit zapis dokladu/ 1 po prekroceni varovat a NEumoznit zapis dokladu
 // 6   16       doklady sj - kdy indikovat nadmernou rychlost - limit rychlosti
 // 6   17       doklady sj - limit diet
 // 6   18       doklady sj - vychozi zpusob platby (id ciselniku=8)
 // !!! zruseno  6   19       doklady sj - nabizet cast placeneho cekani do odpracovane doby 0  nenabizet / 1 nabidnout polovinu cekani
 // 6   20       doklady sj - jak urcit obdobi pro zapis dokladu 0 dle data prijezdu / 1 dle data odjezdu
 // 6   21       doklady sj - konvertovat NS pro trzby podle prs 0 ne / 1 ano
 // 6   22       doklady sj - sledovat stav vozidel, kontrola 0 ne / 1 ano
 // 6   23       doklady dzva - normovana udrzba - jak porizovat 0 minuty / 1 kc / 2 minuty, neplatit 
 // 6   24       doklady, zpracovani - reportgen id formulare pro tisk mzdovych parametru pro ridice
 // 6   25       doklady obecne - osvedceni pro novy modul (EDISON)
 // 6   26       doklady obecne - evidovat FAME (0/1)
 // 6   27       doklady obecne - evidovat OLEJ (0/1)
 // 6   28       doklady obecne - do celkove spotreby pro porovnani s normovanou zapocitat naftu do topeni (0/1)
 // 6   29       doklady dzva - porizovat pro casti spoju bez casove pozice linku a spoj (0/1)
 // 6   30       doklady sj - vychozi zpusob fakturace
 // 6   31       doklady obecne - evidovat naftu do topeni (0/1)
 // 6   32       doklady dzva - evidovat prives (0/1)
 // 6   33       doklady sj - evidovat prives (0/1)
 // 6   34       doklady obecne - evidovat adblue (0/1)
 // 6   35       doklady, zpracovani - reportgen id formulare pro tisk sumarnich mzdovych parametru pro ridice
 // 6   36		 doklady sj - vychozi typ prepravce
 // 6   37		 doklady sj - zadat sj pouze s dopravcem z ciselniku 0 ne / 1 ano
 // 6   38		 doklady sj - zadat sj pouze s objednavkou 0 ne / 1 ano
 // 6   39		 doklady obecne - evidovat hodiny topeni 0 ne / 1 ano
 // 6   40       doklady obecne - nabizet pri uznavani automaticky dalsi cislo dokladu 0 ne / 1 ano
 // 6   41       doklady obecne - evidovat PHM Bio30 (B30) 0 ne / 1 ano
 // 6   42       doklady DZVA - výchozí zastávka pro přejezdy
 // 6   43       doklady SJ - skrýt sloupce v evidenci udaju ridice (0/1 oddelene ~) kcPaus~hNepl~hMyti~hNakl~ztíž.prostř.
 // 6   44       doklady obecne - jak mazat doklady (0 odstranit z databáze / 1 příznakem) 
 // 6   45       doklady obecne - tankovani je povinny udaj (0 ne / 1 ano)
 // 6   46       doklady dzva - pri vkladani turnusu s omezenim od-do nevkladat zacatky a konce (0 vkladat / 1 nevkladat)
 // 6   47       doklady dzva - umoznit zadat doklady do budoucnosti (pro testovani) (0 ne / 1 ano)
 // 6   48       doklady, zpracovani - reportgen id formulare pro tisk dovolenky pro ridice
 // 6   49       doklady SJ - diety je povinny udaj (0 ne / 1 ano)
 // 6   50       doklady obecne - jake km pouzit pro sledovani udrzby vozidel 0 km vypočtené na dokladu / 1 km podle stavu tachometru 
 // 6   51       doklady, zpracovani - reportgen, id formulare pro tisk spotreby ridicu
 // 6   52       doklady, zpracovani - reportgen tisk mzdovych parametru pro ridice - parametr, zda v tabulce tisknout vsechny dny 0 ne / 1 ano
 // 6   53       doklady obecne - vychozi stav comba pro sledovani stavu tachomteru 0  stav.tach. / 1 porucha tach.
 // 6   54       doklady obecne - zobrazovat u ridicu prescasy z mezd 0 ne / 1 ano
 // 6   55       doklady zpracovani - zprava  pro email se mzdovymi podklady
 // 6   56       doklady obecne - evidovat kalibraci tachometru 0 ne / 1 ano 
 // 6   57       doklady dzva - prednastavit zaporne cekani u neprepravniho vykonu - norm.udrzba 0 ne / 1 ano
 // 6   58       doklady obecne - algoritmus pro vypocet normovane spotreby 0 podle km na dokladu / 1 podle km na dokladu + korekce na stav tachometru  
 // 6   59       doklady obecne - jakym zpusobem vyhodnotit pripad, kdy je u vozidla evidovana dotace a na dokladu se vyskytne zakazany PRS 0 chyba / 1 varovani
 // 6   60       doklady sj - vychozi typ dokladu (id ciselniku=47)
 // 6   61		 doklady DZVA - casove prekryti povazovat za chybu a neumoznit zapis dokladu 0 ne / 1 ano
 // 6   62       doklady SJ - casove prekryti povazovat za chybu a neumoznit zapis dokladu 0 ne / 1 ano
 // 6   63       doklady dzva - evidovat poznamku u neprepravniho vykonu 0 ne / 1 ano
 // =============
 // 7   01       plan dopravy - jak prenaset pri omezenem turnusu (od nebo do spoje) na dzva = val1~val2~val3
 //              val1=diety		- 0 neprenaset / 1 prenaset
 //              val2=dodk		- 0 neprenaset / 1 prenaset
 //              val3=nocovne	- 0 neprenaset / 1 prenaset
 // 7   02		 plan dopravy - zapujcky vozidel - max.pocet dnu pro zapujcku
 // 7   03		 plan dopravy - zapujcky ridicu  - max.pocet dnu pro zapujcku
 // 7   04		 plan dopravy, SC - jak pocitat svatek, ktery neni nedele 0 - podle dne, na ktery pripadne(default) / 1 - podle predchozi nedele
 // 7   05		 plan dopravy, zobrazovat v planu evidencni cisla vozidel 0 - RZ / 1 EVC / 2 RZ/EVC
 // 7   06       plan dopravy, SC - aktualizovat kmenova vozidla ridicu podle SC 0 - NE / 1 ANO
 // 7   07       plan dopravy, kontrolovat prekryvani vozidel pri zadavani dokladu 0 kontrolovat / 1 nekontrolovat
 // 7   08       plan dopravy, při zadaném atributu "směna z volna" automaticky zapsat do grafikonu řidiče položku s kč val1~val2
 // 			 val1=id graf. položky
 //              val2=kč graf. položky
 // =============
 // 8   01       grafikon ridici - neumoznit zadat vyssi DOV nez je narok (podle Mezd) 0/1 
 // ---------------------
 s $zt="err" k out
 n key,val,idprv,id,cnt,zp
 // ======================================
 s $p(out("arr",1,1),"~",1)=$g(^[nmsp]OI("JR"))
 s $p(out("arr",1,2),"~",1)=+$p($g(^[nmsp]OI("MZP","LIMIN")),"~",1) s $p(out("arr",1,2),"~",2)=+$p(($g(^[nmsp]OI("MZP","LIMIN"))),"~",2) s $p(out("arr",1,2),"~",3)=+$p(($g(^[nmsp]OI("MZP","LIMIN"))),"~",3)
 s $p(out("arr",1,3),"~",1)=+$g(^[nmsp]OI("MZP","LIMMHD"))
 s out("arr",1,4)=$g(^[nmsp]OI(idfa,"jb","impSp","dop"))
 s out("arr",1,5)=200 s:idfa="VS_CSAD" out("arr",1,5)=500
 s out("arr",1,6)=$g(^[nmsp]OI(idfa,"jb","impSp","dop","prv"))
 s out("arr",1,7)=+$g(^[nmsp]OI(idfa,"jb","impSp","par","1"))
 // =====
 s out("arr",2,1)=+$g(^[nmsp]OI("KOLIKRADEKPREDOBJEDNAVKOU"))
 s out("arr",2,2)=+$g(^[nmsp]OI(idfa,"jb","objednavky","EDISON"))
 m out("arr",2,3,"prv")=^[nmsp]OI(idfa,"jb","objednavky","odstavMisto")
 m out("arr",2,4,"prv")=^[nmsp]OI(idfa,"jb","objednavky","nsSpedice")
 s out("arr",2,5)=$g(^[nmsp]OI(idfa,"jb","objednavky","reportgenId",1))
 s out("arr",2,6)=$g(^[nmsp]OI(idfa,"jb","objednavky","reportgenId",2))
 s out("arr",2,7)=+$g(^[nmsp]OI(idfa,"jb","objednavky","kntrPohledavky"))
 s out("arr",2,8)=$g(^[nmsp]OI(idfa,"jb","objednavky","dlftzpsplt"))
 s out("arr",2,9)=$g(^[nmsp]OI(idfa,"jb","objednavky","dlftzpsfak"))
 s out("arr",2,10)=$g(^[nmsp]OI(idfa,"jb","objednavky","dlfttypprep"))
 s out("arr",2,11)=$g(^[nmsp]OI(idfa,"jb","objednavky","dopciszak"))
 s out("arr",2,12)=+$g(^[nmsp]OI(idfa,"jb","objednavky","oddoPovinny"))
 m out("arr",2,13,"prv")=^[nmsp]OI(idfa,"jb","objednavky","reportgenId",3)
 // =====
 s out("arr",3,1)=+$g(^[nmsp]OI("SJ15"))
 s out("arr",3,2)=$g(^[nmsp]OI(idfa,"jb","sj","setszb")) s $p(out("arr",3,2),"~",4)=1
 s out("arr",3,3)=$g(^[nmsp]OI(idfa,"jb","fak","par",1))
 s out("arr",3,4,1)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",1))
 s out("arr",3,4,2)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",2))
 s out("arr",3,4,3)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",3))
 s out("arr",3,4,4)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",4))
 s out("arr",3,4,5)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",5))
 s out("arr",3,4,6)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",6))
 s out("arr",3,4,7)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",7))
 s out("arr",3,4,8)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",8))
 s out("arr",3,4,9)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",9))
 s out("arr",3,4,10)=$g(^[nmsp]OI(idfa,"jb","fak","ucp",10))
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","fak","far","zp",zp)) q:zp=""  d
 .s idprv=zp#100
 .s out("arr",3,5,"prv",idprv)=$g(^[nmsp]OI(idfa,"jb","fak","far","zp",zp))
 s out("arr",3,6)=+$g(^[nmsp]OI(idfa,"jb","fak","par",2))
 s out("arr",3,7)=+$g(^[nmsp]OI(idfa,"jb","fak","par",3))
 s out("arr",3,8)=+$g(^[nmsp]OI(idfa,"jb","fak","par",4))
 s out("arr",3,9)=+$g(^[nmsp]OI(idfa,"jb","fak","par",5))
 s out("arr",3,10)=+$g(^[nmsp]OI(idfa,"jb","fak","par",6))
 s out("arr",3,11)=+$g(^[nmsp]OI(idfa,"jb","fak","par",7))
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","fak","ucpp","zp",zp)) q:zp=""  d
 .s idprv=zp#100
 .s out("arr",3,12,"prv",idprv)=$g(^[nmsp]OI(idfa,"jb","fak","ucpp","zp",zp))
 s out("arr",3,13)=+$g(^[nmsp]OI(idfa,"jb","fak","par",8))
 s out("arr",3,14)=+$g(^[nmsp]OI(idfa,"jb","fak","par",9))
 s out("arr",3,15)=+$g(^[nmsp]OI(idfa,"jb","fak","par",10))
 // =====
 s out("arr",4,1)=+$g(^[nmsp]OI("TURNUSY","NEDITVUZO"))
 s out("arr",4,2)=$g(^[nmsp]OI(idfa,"jb","bp","set"))
 s out("arr",4,3)=+$g(^[nmsp]OI(idfa,"jb","sp","noEditUzObd"))
 s out("arr",4,4)=$g(^[nmsp]OI("TURNUSY","ZAHLAVI","TXT50"))
 s out("arr",4,5)=$g(^[nmsp]OI("TURNUSY","ODPOCINEK"))
 s out("arr",4,6)=+$g(^[nmsp]OI("TURNUSY","TISKATZST"))
 m out("arr",4,7,"prv")=^[nmsp]OI(idfa,"jb","tu","reportgenId",1)
 s out("arr",4,8)=+$g(^[nmsp]OI(idfa,"jb","turnusy","EDISON"))
 //manipulace
 s $p(out("arr",4,9),"~",1)=(+$g(^[nmsp]OI("MZP","CALMAN")))
 s $p(out("arr",4,9),"~",2)=($d(^[nmsp]OI("MZP","DRMAN"))>0)
 i $g(^[nmsp]OI("MZP","DRMAN")) s $p(out("arr",4,9),"~",2)=$g(^[nmsp]OI("MZP","DRMAN"))
 s $p(out("arr",4,9),"~",3)=+$g(^[nmsp]OI("MZP","DRMAN_SONESV"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP","DRMAN_PAR","zp",zp)) q:zp=""  d
 .s idprv=zp#100
 .s $p(out("arr",4,9,"prv",idprv),"~",1)=+$g(^[nmsp]OI("MZP","CALMAN_PAR","zp",zp))
 .s $p(out("arr",4,9,"prv",idprv),"~",2)=$g(^[nmsp]OI("MZP","DRMAN_PAR","zp",zp))
 f id=1:1:7 d
 .f cnt=1:1:3 s $p(out("arr",4,10,id),"~",cnt)=$p($g(^[nmsp]OI("MZP","MAN",id)),":",cnt)
 .s zp="" f  s zp=$o(^[nmsp]OI("MZP","MAN",id,"zp",zp)) q:zp=""  d
 ..s idprv=zp#100
 ..f cnt=1:1:3 s $p(out("arr",4,10,id,"prv",idprv),"~",cnt)=$p($g(^[nmsp]OI("MZP","MAN",id,"zp",zp)),":",cnt)
 //vyrovnavaci doba
 f id=1:1:7 d
 .s $p(out("arr",4,11,id),"~",1)=$g(^[nmsp]OI("MZP","VYR",id))
 .s $p(out("arr",4,11,id),"~",2)=$g(^[nmsp]OI("MZP","VYRS",id))
 .s zp="" f  s zp=$o(^[nmsp]OI("MZP","VYR",id,"zp",zp)) q:zp=""  d
 ..s idprv=zp#100
 ..s $p(out("arr",4,11,id,"prv",idprv),"~",1)=$g(^[nmsp]OI("MZP","VYR",id,"zp",zp))
 .s zp="" f  s zp=$o(^[nmsp]OI("MZP","VYRS",id,"zp",zp)) q:zp=""  d
 ..s idprv=zp#100
 ..s $p(out("arr",4,11,id,"prv",idprv),"~",2)=$g(^[nmsp]OI("MZP","VYRS",id,"zp",zp))
 //delena smena
 s $p(out("arr",4,12),"~",1)=+$p($g(^[nmsp]OI("MZP","SETDSM")),"~",1)
 s $p(out("arr",4,12),"~",2)=$p($g(^[nmsp]OI("MZP","SETDSM")),"~",2)
 s $p(out("arr",4,12),"~",3)=$p($g(^[nmsp]OI("MZP","SETDSM")),"~",3)
 s $p(out("arr",4,12),"~",4)=$p($g(^[nmsp]OI("MZP","SETDSM")),"~",4)
 s zp="" f  s zp=$o(^[nmsp]OI("MZP","SETDSM","zp",zp)) q:zp=""  d
 .s idprv=zp#100
 .s $p(out("arr",4,12,"prv",idprv),"~",1)=+$p($g(^[nmsp]OI("MZP","SETDSM","zp",zp)),"~",1)
 .s $p(out("arr",4,12,"prv",idprv),"~",2)=$p($g(^[nmsp]OI("MZP","SETDSM","zp",zp)),"~",2)
 .s $p(out("arr",4,12,"prv",idprv),"~",3)=$p($g(^[nmsp]OI("MZP","SETDSM","zp",zp)),"~",3)
 .s $p(out("arr",4,12,"prv",idprv),"~",4)=$p($g(^[nmsp]OI("MZP","SETDSM","zp",zp)),"~",4)
 //tisk poznamek ze spoju na turnusy
 s out("arr",4,13)=+$g(^[nmsp]OI(idfa,"jb","tu","set",1))
 //zpusob vypoctu manipulaci + podle provozovny
 s out("arr",4,14)=+$g(^[nmsp]OI("MZP","VYRA"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP","VYRA","zp",zp)) q:zp=""  d
 .s idprv=zp#100
 .s out("arr",4,14,"prv",idprv)=+$g(^[nmsp]OI("MZP","VYRA","zp",zp))
 //tisk navaznosti - spoj vycka
 s out("arr",4,15)=+$g(^[nmsp]OI(idfa,"jb","tu","set",2))
 //tisk navaznosti - na spoj navazuje
 s out("arr",4,16)=+$g(^[nmsp]OI(idfa,"jb","tu","set",3))
 //tisk navaznosti - spoj pokracuje
 s out("arr",4,17)=+$g(^[nmsp]OI(idfa,"jb","tu","set",4))
 //tisk turnusu - pro ostatni prace tisknout jen upresneni cinnosti
 s out("arr",4,18)=+$g(^[nmsp]OI(idfa,"jb","tu","set",5))
 //jak urcit druh jizdy pro pristaveni, prejezd a odstaveni (0 vzdy rezijni / 1 podle druhu nasledujiciho (predchoziho spoje))
 s out("arr",4,19)=+$g(^[nmsp]OI(idfa,"jb","tu","set",6))
 //tisk turnusu,netisknout zacatek a konec turnusu (cinnost)
 s out("arr",4,20)=+$g(^[nmsp]OI(idfa,"jb","tu","set",7))
 //preruseni prace
 s $p(out("arr",4,21),"~",1)=+$p($g(^[nmsp]OI("MZP","SETPPR")),"~",1)
 s $p(out("arr",4,21),"~",2)=+$p($g(^[nmsp]OI("MZP","SETPPR")),"~",2)
 s $p(out("arr",4,21),"~",3)=$p($g(^[nmsp]OI("MZP","SETPPR")),"~",3)
 // =====
 s out("arr",5,1)=$p($g(^[nmsp]OI("OKRES")),"$",1)
 s idprv="" f  s idprv=$o(^[nmsp]OI("OKRES",idprv)) q:idprv=""  s out("arr",5,1,"prv",idprv)=$g(^[nmsp]OI("OKRES",idprv))
 s out("arr",5,2)=0 s:$d(^[nmsp]OI("CHAOSAUT")) out("arr",5,2)=1 s:$d(^[nmsp]OI("CHAOSAUT","WARNING")) out("arr",5,2)=2
 s out("arr",5,3)=+$g(^[nmsp]OI(idfa,"jb","planDopravy","EDISON"))
 s out("arr",5,4)=+$g(^[nmsp]OI(idfa,"jb","system","set",1))
 s out("arr",5,5)=$g(^[nmsp]OI(idfa,"jb","system","set",2))
 s out("arr",5,6)=$g(^[nmsp]OI(idfa,"jb","system","set",3))
 s out("arr",5,7)=+$g(^[nmsp]OI("jb","system","set",4))
 s zp="" f  s zp=$o(^[nmsp]OI("jb","system","set",4,zp)) q:zp=""  d
 .s idprv=zp#100
 .s out("arr",5,7,"prv",idprv)=+$g(^[nmsp]OI("jb","system","set",4,zp))
 // ======
 s $p(out("arr",6,1),"~",1)=($d(^[nmsp]OI("PHSTAVY"))>0)
 s $p(out("arr",6,1),"~",2)=0 i +$p(out("arr",6,1),"~",1)=1 s $p(out("arr",6,1),"~",2)=('($d(^[nmsp]OI("PHSTAVY","NE"))>0))
 s $p(out("arr",6,1),"~",3)=0 i +$p(out("arr",6,1),"~",1)=0 s $p(out("arr",6,1),"~",3)=($d(^[nmsp]OI(idfa,"jb","doc","kmtankph"))>0)
 s val=0 s:+$g(^[nmsp]OI("ZIMA","zp")) val=1 s:$d(^[nmsp]OI("LEZIPHM")) val=2 s:$d(^[nmsp]OI(idfa,"jb","doc","normaphm")) val=$g(^[nmsp]OI(idfa,"jb","doc","normaphm"))
 s out("arr",6,2)=val
 s out("arr",6,3)=$g(^[nmsp]OI(idfa,"jb","dzva","set","TachDifRezKm",1))_"~"_$g(^[nmsp]OI("TACH",1))_"~"_($d(^[nmsp]OI("TACHDIFZAKAZ"))>0)
 s out("arr",6,4)=$g(^[nmsp]OI("DFLT","RYCH"))
 s out("arr",6,5)=$g(^[nmsp]OI("LIMITDIET","DZVA"))
 s out("arr",6,6)=($d(^[nmsp]OI("POCASI"))>0)
 s out("arr",6,7)=('$g(^[nmsp]OI("TACHM")))
 s out("arr",6,8)=$g(^[nmsp]OI(idfa,"jb","dzva","set","ktan"))
 s out("arr",6,9)=$g(^[nmsp]OI(idfa,"jb","dzva","set","daybck")) s:'out("arr",6,9) out("arr",6,9)=90
 s out("arr",6,10)=($d(^[nmsp]OI(idfa,"jb","dzva","set","npvcek"))>0)
 s out("arr",6,11)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","ospvyk"))
 s out("arr",6,12)=($d(^[nmsp]OI(idfa,"jb","dzva","set","psphod2cek"))>0)
 s out("arr",6,13)=($d(^[nmsp]OI(idfa,"jb","dzva","set","kntbus"))>0)
 s out("arr",6,14)=$g(^[nmsp]OI(idfa,"jb","dzva","set","initval",82))
 s out("arr",6,15)=$g(^[nmsp]OI("TACH",2))_"~"_($d(^[nmsp]OI("TACHDIFZAKAZSJ"))>0)
 s out("arr",6,16)=$g(^[nmsp]OI("RYCHLOSTSJ"))
 s out("arr",6,17)=$g(^[nmsp]OI("LIMITDIET","SJ"))
 s out("arr",6,18)=$g(^[nmsp]OI("DFLT","PL"))
 //s out("arr",6,19)='($d(^[nmsp]OI("SJ","NEPUL"))>0)
 s out("arr",6,20)=+$g(^[nmsp]OI(idfa,"jb","sj","setobd"))
 s out("arr",6,21)=+$g(^[nmsp]OI(idfa,"jb","sj","cnvnsprs"))
 s out("arr",6,22)=+$g(^[nmsp]OI(idfa,"jb","sj","set","kntbus"))
 s val=$g(^[nmsp]OI("NEPH")) s val=$s('val:0,$p(val,":",3):2,1:1) s out("arr",6,23)=val
 s out("arr",6,24)=$g(^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",1))
 s out("arr",6,25)=+$g(^[nmsp]OI(idfa,"jb","zpracovani","EDISON"))
 s out("arr",6,26)=+$g(^[nmsp]OI(idfa,"jb","doc","fame"))
 s out("arr",6,27)=+$g(^[nmsp]OI(idfa,"jb","doc","olej"))
 s out("arr",6,28)=+$g(^[nmsp]OI(idfa,"jb","doc","smaphtop"))
 s out("arr",6,29)=('$d(^[nmsp]OI(idfa,"jb","dzva","set","cstspnols")))
 s out("arr",6,30)=$g(^[nmsp]OI(idfa,"jb","sj","dlftzpsfak"))
 //nove dodelano, vychozi stav evidovat
 i '$d(^[nmsp]OI(idfa,"jb","doc","top")) s ^[nmsp]OI(idfa,"jb","doc","top")=1
 s out("arr",6,31)=+$g(^[nmsp]OI(idfa,"jb","doc","top"))
 //nove dodelano, vychozi stav evidovat
 i '$d(^[nmsp]OI(idfa,"jb","dzva","set","prives")) s ^[nmsp]OI(idfa,"jb","dzva","set","prives")=1
 s out("arr",6,32)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","prives"))
 //nove dodelano, vychozi stav evidovat
 i '$d(^[nmsp]OI(idfa,"jb","sj","set","prives")) s ^[nmsp]OI(idfa,"jb","sj","set","prives")=1
 s out("arr",6,33)=+$g(^[nmsp]OI(idfa,"jb","sj","set","prives"))
 //nove dodelano, vychozi stav evidovat
 i '$d(^[nmsp]OI(idfa,"jb","doc","adblue")) s ^[nmsp]OI(idfa,"jb","doc","adblue")=1
 s out("arr",6,34)=+$g(^[nmsp]OI(idfa,"jb","doc","adblue"))
 s out("arr",6,35)=$g(^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",2))
 s out("arr",6,36)=$g(^[nmsp]OI(idfa,"jb","sj","dlfttypprep"))
 s out("arr",6,37)=$g(^[nmsp]OI(idfa,"jb","sj","dopciszak"))
 s out("arr",6,38)=+$g(^[nmsp]OI(idfa,"jb","sj","reqobj"))
 s out("arr",6,39)=+$g(^[nmsp]OI(idfa,"jb","doc","toptm"))
 s out("arr",6,40)=+$g(^[nmsp]OI(idfa,"jb","doc","autonext"))
 s out("arr",6,41)=+$g(^[nmsp]OI(idfa,"jb","doc","b30"))
 s out("arr",6,42)=$g(^[nmsp]OI(idfa,"jb","dzva","vzst",6))
 s out("arr",6,43)=$g(^[nmsp]OI(idfa,"jb","sj","skrytsloupceosc"))
 s out("arr",6,44)=+$g(^[nmsp]OI(idfa,"jb","doc","del"))
 s out("arr",6,45)=+$g(^[nmsp]OI(idfa,"jb","doc","povinnephm"))
 s out("arr",6,46)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","nezackonomtur"))
 s out("arr",6,47)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","futuredoc"))
 s out("arr",6,48)=$g(^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",3))
 s out("arr",6,49)=+$g(^[nmsp]OI(idfa,"jb","sj","povinnediety"))
 s out("arr",6,50)=+$g(^[nmsp]OI(idfa,"jb","doc","udrkm"))
 s out("arr",6,51)=$g(^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",4))
 s out("arr",6,52)=+$g(^[nmsp]OI(idfa,"jb","zpracovani","reportgenPar",1,1))
 s out("arr",6,53)=+$g(^[nmsp]OI(idfa,"jb","doc","dfltstavtach"))
 s out("arr",6,54)=+$g(^[nmsp]OI(idfa,"jb","doc","prescasoscmzd"))
 s out("arr",6,55)=$g(^[nmsp]OI(idfa,"jb","zpracovani","emailTx",1))
 s out("arr",6,56)=+$g(^[nmsp]OI(idfa,"jb","doc","tachkalib"))
 s out("arr",6,57)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","npvcekudr"))
 s out("arr",6,58)=+$g(^[nmsp]OI(idfa,"jb","doc","nphalgoritmus"))
 s out("arr",6,59)=+$g(^[nmsp]OI(idfa,"jb","doc","rzdotchckprs"))
 s out("arr",6,60)=$g(^[nmsp]OI(idfa,"jb","sj","dlfttypdoc"))
 s out("arr",6,61)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","nooverlap"))
 s out("arr",6,62)=+$g(^[nmsp]OI(idfa,"jb","sj","set","nooverlap"))
 s out("arr",6,63)=+$g(^[nmsp]OI(idfa,"jb","dzva","set","nepvykpozn"))
 // plan dopravy
 s val=$g(^[nmsp]OI(idfa,"jb","pln","set",1,1))
 f id=1:1:3 s $p(out("arr",7,1),"~",id)=+$p(val,"~",id)
 s val=$g(^[nmsp]OI(idfa,"jb","pln","set",1,2))
 f id=1:1:1 s $p(out("arr",7,2),"~",id)=$p(val,"~",id)
 s val=$g(^[nmsp]OI(idfa,"jb","pln","set",1,3))
 f id=1:1:1 s $p(out("arr",7,3),"~",id)=$p(val,"~",id)
 // plan dopravy - SC
 // jak pocitat svatek, ktery neni nedele
 s out("arr",7,4)=+$g(^[nmsp]OI(idfa,"jb","pln","set",2,1))
 //plan - zobrazovat v planu evidencni cisla vozidel
 s out("arr",7,5)=+$g(^[nmsp]OI(idfa,"jb","pln","set",3))
 //plan dopravy, SC - aktualizovat kmenova vozidla ridicu podle SC
 s out("arr",7,6)=+$g(^[nmsp]OI(idfa,"jb","pln","set",4))
 //plan dopravy, nekontrolovat prekryvani vozidel pri zadavani dokladu 0 kontrolovat / 1 nekontrolovat
 s out("arr",7,7)=+$g(^[nmsp]OI(idfa,"jb","pln","set",5))
 //plan dopravy, pri zadanem atributu "smena z volna" automaticky zapsat do grafikonu ridice polozku s kc idgraf~kc
 s val=$g(^[nmsp]OI(idfa,"jb","pln","set",6))
 f id=1:1:2 s $p(out("arr",7,8),"~",id)=$p(val,"~",id)
 // ========
 // grafikon
 // ========
 // grafikon ridici - neumoznit zadat dovolenou vyssi nez narok 
 s out("arr",8,1)=+$g(^[nmsp]OI(idfa,"jb","grf","set",1))
 // nadrarena nastaveni od firmy
 k arridfa
 s err=$$gIdFa^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),"",.arridfa) zt:+err "merr"
 i (+$g(arridfa("dta",52))) {
	 s out("arr",2,11)=1		//objednavka pouze se zakaznikem z registru 
	 s out("arr",6,37)=1		//objednavka pouze se zakaznikem z registru 
 }
 k arridfa
 q 0
 //===========================================
gMainSetOne(idfa,nmsp,id1,id2)
 //jednotliva nastaveni pro urychleni programu
 //vraci jen vybrana, postupne lze doplnovat
 i (id1=2)&(id2=11) q +$g(^[nmsp]OI(idfa,"jb","objednavky","dopciszak"))
 i (id1=3)&(id2=14) q +$g(^[nmsp]OI(idfa,"jb","fak","par",9))
 i (id1=6)&(id2=50) q +$g(^[nmsp]OI(idfa,"jb","doc","udrkm"))
 i (id1=6)&(id2=54) q $g(^[nmsp]OI(idfa,"jb","doc","prescasoscmzd"))
 i (id1=6)&(id2=58) q +$g(^[nmsp]OI(idfa,"jb","doc","nphalgoritmus"))
 i (id1=7)&(id2=5) q +$g(^[nmsp]OI(idfa,"jb","pln","set",3))
 i (id1=7)&(id2=7) q +$g(^[nmsp]OI(idfa,"jb","pln","set",5))
 i (id1=8)&(id2=1) q +$g(^[nmsp]OI(idfa,"jb","grf","set",1))
 q ""
 //===========================================
gMainDCal(idfa,nmsp,zp,idprv)
 //vrati typ dopravniho kalendare pro provoz
 s mycal=+$g(^[nmsp]OI("jb","system","set",4))
 i $g(idprv) s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp)
 i $g(zp) s mycal=$g(^[nmsp]OI("jb","system","set",4,zp))
 q mycal
 //
sMainSet(idfa,nmsp,in,out)
 // err = $$sMainSet(idfa,nmsp,in,out) - zapise nastaveni programu
 // in("arr",id,key)=val   ...  AD parametry (spolecne) - popis je v $$gMainSet(idfa,nmsp,in,out)
 // in("idos")=mlp~loginname~fullname
 // ---------------------
 n (idfa,nmsp,in,out)
 s err="" k out
 // =================
 // !!! transakce !!!
 // ================= 
 s $zt="errtroll" tstart
 // idos
 s idos=$g(in("idos"))
 // ====
 // kill
 // ====
 // obecne
 k ^[nmsp]OI("JR")
 k ^[nmsp]OI("MZP","LIMIN")
 k ^[nmsp]OI("MZP","LIMMHD")
 k ^[nmsp]OI(idfa,"jb","impSp","dop")
 k ^[nmsp]OI("KOLIKRADEKPREDOBJEDNAVKOU")
 k ^[nmsp]OI(idfa,"jb","objednavky","EDISON")
 k ^[nmsp]OI(idfa,"jb","turnusy","EDISON")
 k ^[nmsp]OI(idfa,"jb","planDopravy","EDISON")
 k ^[nmsp]OI("SJ15")
 k ^[nmsp]OI(idfa,"jb","objednavky","odstavMisto")
 k ^[nmsp]OI(idfa,"jb","objednavky","nsSpedice")
 k ^[nmsp]OI(idfa,"jb","objednavky","reportgenId")
 k ^[nmsp]OI(idfa,"jb","objednavky","kntrPohledavky")
 k ^[nmsp]OI(idfa,"jb","objednavky","reportgenId",3)
 k ^[nmsp]OI("TURNUSY","NEDITVUZO")
 k ^[nmsp]OI(idfa,"jb","bp","set")
 k ^[nmsp]OI(idfa,"jb","sp","noEditUzObd")
 k ^[nmsp]OI("TURNUSY","ZAHLAVI","TXT50")
 k ^[nmsp]OI("TURNUSY","ODPOCINEK")
 k ^[nmsp]OI("TURNUSY","TISKATZST")
 k ^[nmsp]OI(idfa,"jb","tu","reportgenId")
 k ^[nmsp]OI(idfa,"jb","tu","set",1)
 k ^[nmsp]OI("OKRES")
 k ^[nmsp]OI("CHAOSAUT")
 k ^[nmsp]OI("PHSTAVY")
 k ^[nmsp]OI(idfa,"jb","doc","kmtankph")
 k ^[nmsp]OI("TACHDIFZAKAZ")
 k ^[nmsp]OI("DFLT","RYCH")
 k ^[nmsp]OI("LIMITDIET","DZVA")
 k ^[nmsp]OI("LEZIPHM")
 k ^[nmsp]OI(idfa,"jb","doc","normaphm")
 k ^[nmsp]OI("POCASI")
 k ^[nmsp]OI(idfa,"jb","dzva","set","ktan")
 k ^[nmsp]OI(idfa,"jb","dzva","set","daybck")
 k ^[nmsp]OI(idfa,"jb","dzva","set","npvcek")
 k ^[nmsp]OI(idfa,"jb","dzva","set","ospvyk")
 k ^[nmsp]OI(idfa,"jb","dzva","set","psphod2cek")
 k ^[nmsp]OI(idfa,"jb","dzva","set","kntbus")
 k ^[nmsp]OI(idfa,"jb","dzva","set","initval",82)
 k ^[nmsp]OI("TACHDIFZAKAZSJ")
 k ^[nmsp]OI("RYCHLOSTSJ")
 k ^[nmsp]OI("LIMITDIET","SJ")
 k ^[nmsp]OI("DFLT","PL")
 //k ^[nmsp]OI("SJ","NEPUL")
 k ^[nmsp]OI(idfa,"jb","sj","set","kntbus")
 k ^[nmsp]OI("MZP","CALMAN")
 k ^[nmsp]OI("MZP","CALMAN_PAR")
 k ^[nmsp]OI("MZP","DRMAN")
 k ^[nmsp]OI("MZP","DRMAN_SONESV")
 k ^[nmsp]OI("MZP","DRMAN_PAR")
 k ^[nmsp]OI("MZP","MAN")
 k ^[nmsp]OI("MZP","VYR")
 k ^[nmsp]OI("MZP","VYRA")
 k ^[nmsp]OI("MZP","VYRS")
 k ^[nmsp]OI("MZP","SETDSM")
 k ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",1)
 k ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",2)
 k ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",3)
 k ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",4)
 k ^[nmsp]OI(idfa,"jb","zpracovani","EDISON")
 k ^[nmsp]OI(idfa,"jb","dzva","set","cstspnols")
 k ^[nmsp]OI(idfa,"jb","fak","far","zp")
 k ^[nmsp]OI("jb","system","set",4)
 // =====
 // zapis
 // =====
 s ^[nmsp]OI("JR")=+$p($g(in("arr",1,1)),"~",1)
 s $p(^[nmsp]OI("MZP","LIMIN"),"~",1)=+$p($g(in("arr",1,2)),"~",1)
 s $p(^[nmsp]OI("MZP","LIMIN"),"~",2)=+$p($g(in("arr",1,2)),"~",2)
 s $p(^[nmsp]OI("MZP","LIMIN"),"~",3)=+$p($g(in("arr",1,2)),"~",3)
 s ^[nmsp]OI("MZP","LIMMHD")=+$p($g(in("arr",1,3)),"~",1)
 s ^[nmsp]OI(idfa,"jb","impSp","dop")=$g(in("arr",1,4))
 //in("arr",1,5) - min. posiloveho spoje, dodelat
 s ^[nmsp]OI(idfa,"jb","impSp","dop","prv")=$g(in("arr",1,6))
 s ^[nmsp]OI(idfa,"jb","impSp","par","1")=+$g(in("arr",1,7))
 // =====
 s:+$g(in("arr",2,1)) ^[nmsp]OI("KOLIKRADEKPREDOBJEDNAVKOU")=+$g(in("arr",2,1))
 s:+$g(in("arr",2,2)) ^[nmsp]OI(idfa,"jb","objednavky","EDISON")=+$g(in("arr",2,2))
 m ^[nmsp]OI(idfa,"jb","objednavky","odstavMisto")=in("arr",2,3,"prv")
 m ^[nmsp]OI(idfa,"jb","objednavky","nsSpedice")=in("arr",2,4,"prv")
 s ^[nmsp]OI(idfa,"jb","objednavky","reportgenId",1)=$g(in("arr",2,5))
 s ^[nmsp]OI(idfa,"jb","objednavky","reportgenId",2)=$g(in("arr",2,6))
 s ^[nmsp]OI(idfa,"jb","objednavky","kntrPohledavky")=$g(in("arr",2,7))
 s ^[nmsp]OI(idfa,"jb","objednavky","dlftzpsplt")=$g(in("arr",2,8))
 s ^[nmsp]OI(idfa,"jb","objednavky","dlftzpsfak")=$g(in("arr",2,9))
 s ^[nmsp]OI(idfa,"jb","objednavky","dlfttypprep")=$g(in("arr",2,10))
 s ^[nmsp]OI(idfa,"jb","objednavky","dopciszak")=$g(in("arr",2,11))
 s ^[nmsp]OI(idfa,"jb","objednavky","oddoPovinny")=$g(in("arr",2,12))
 m ^[nmsp]OI(idfa,"jb","objednavky","reportgenId",3)=in("arr",2,13,"prv")
 // =====
 s:+$g(in("arr",3,1)) ^[nmsp]OI("SJ15")=+$g(in("arr",3,1))
 s $p(in("arr",3,2),"~",4)=1
 i $g(in("arr",3,2))'=$g(^[nmsp]OI(idfa,"jb","sj","setszb")) d
 .s ^[nmsp]OI(idfa,"jb","sj","setszb","h",$h)=$g(^[nmsp]OI(idfa,"jb","sj","setszb"))_"^"_$p(idos,"~",3)
 .s ^[nmsp]OI(idfa,"jb","sj","setszb")=$g(in("arr",3,2))
 s ^[nmsp]OI(idfa,"jb","fak","par",1)=+$g(in("arr",3,3))
 //ucetni pripad
 s ^[nmsp]OI(idfa,"jb","fak","ucp",1)=$g(in("arr",3,4,1))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",2)=$g(in("arr",3,4,2))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",3)=$g(in("arr",3,4,3))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",4)=$g(in("arr",3,4,4))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",5)=$g(in("arr",3,4,5))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",6)=$g(in("arr",3,4,6))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",7)=$g(in("arr",3,4,7))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",8)=$g(in("arr",3,4,8))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",9)=$g(in("arr",3,4,9))
 s ^[nmsp]OI(idfa,"jb","fak","ucp",10)=$g(in("arr",3,4,10))
 //fakturacni rady
 s idprv="" f  s idprv=$o(in("arr",3,5,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s ^[nmsp]OI(idfa,"jb","fak","far","zp",zp)=$g(in("arr",3,5,"prv",idprv))
 // zahrnout zodpovednou osobu do klice pro souhrnou fakturu
 s ^[nmsp]OI(idfa,"jb","fak","par",2)=$g(in("arr",3,6))
 // jak urcit zahranicni fakturu
 s ^[nmsp]OI(idfa,"jb","fak","par",3)=$g(in("arr",3,7))
 // vkladat mezi doklady na souhrnne faktury mezeru: 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","fak","par",4)=$g(in("arr",3,8))
 //fakturace - zobrazit pred sestavenim faktury okno s upresnujicimi texty 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","fak","par",5)=$g(in("arr",3,9))
 //fakturace - zpusob vypoctu zahranicniho DPH v pripade DPH zapocteneho v cene (0 varianta 1 / 1 varianta 2) 
 s ^[nmsp]OI(idfa,"jb","fak","par",6)=$g(in("arr",3,10))
 //fakturace - pro dobropis použít účetní případ 0 podle nastavené tabulky / 1 podle dobropisované faktury  
 s ^[nmsp]OI(idfa,"jb","fak","par",7)=$g(in("arr",3,11))
 //fakturace - pravidelna doprava - nabizet k fakturaci doklady na kterych je na spojich prepravni system ktery ma nastaveno, ze se fakturuje 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","fak","par",8)=$g(in("arr",3,13))
 //fakturace - faktury vystavovat do cizích firem podle provozovny, do které je zařazeno vozidlo (0 ne / 1 ano)
 s ^[nmsp]OI(idfa,"jb","fak","par",9)=$g(in("arr",3,14))
 //fakturace - SAP - způsob odvozeni depa pro fakturu 0 podle provozovny, kde je vozidlo zařazeno / 1 podle přepravního systemu
 s ^[nmsp]OI(idfa,"jb","fak","par",10)=$g(in("arr",3,15))
 //fakturace, ucetni pripady podle provozoven
 s idprv="" f  s idprv=$o(in("arr",3,12,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s ^[nmsp]OI(idfa,"jb","fak","ucpp","zp",zp)=$g(in("arr",3,12,"prv",idprv))
 // =====
 s:+$g(in("arr",4,1)) ^[nmsp]OI("TURNUSY","NEDITVUZO")=+$g(in("arr",4,1))
 s ^[nmsp]OI(idfa,"jb","bp","set")=$g(in("arr",4,2))
 s:+$g(in("arr",4,3)) ^[nmsp]OI(idfa,"jb","sp","noEditUzObd")=+$g(in("arr",4,3))
 f cnt=1:1:$l($g(in("arr",4,4)),"~") s:$p($g(in("arr",4,4)),"~",cnt)'="" $p(^[nmsp]OI("TURNUSY","ZAHLAVI","TXT50"),"~",cnt)=$p($g(in("arr",4,4)),"~",cnt)
 s:+$g(in("arr",4,5)) ^[nmsp]OI("TURNUSY","ODPOCINEK")=+$g(in("arr",4,5))
 s ^[nmsp]OI("TURNUSY","TISKATZST")=+$g(in("arr",4,6))
 m ^[nmsp]OI(idfa,"jb","tu","reportgenId",1)=in("arr",4,7,"prv")
 s:+$g(in("arr",4,8)) ^[nmsp]OI(idfa,"jb","turnusy","EDISON")=+$g(in("arr",4,8))
 //manipulace
 i +$p($g(in("arr",4,9)),"~",1) s ^[nmsp]OI("MZP","CALMAN")=1
 i +$p($g(in("arr",4,9)),"~",2)=1 s ^[nmsp]OI("MZP","DRMAN")=1
 i +$p($g(in("arr",4,9)),"~",2)=2 s ^[nmsp]OI("MZP","DRMAN")=2
 i +$p($g(in("arr",4,9)),"~",2)=3 s ^[nmsp]OI("MZP","DRMAN")=3
 i +$p($g(in("arr",4,9)),"~",3) s $p(^[nmsp]OI("MZP","DRMAN_SONESV"),"~",1)=$p($g(in("arr",4,9)),"~",3)
 s idprv="" f  s idprv=$o(in("arr",4,9,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s ^[nmsp]OI("MZP","CALMAN_PAR","zp",zp)=$p($g(in("arr",4,9,"prv",idprv)),"~",1)
 .s ^[nmsp]OI("MZP","DRMAN_PAR","zp",zp)=$p($g(in("arr",4,9,"prv",idprv)),"~",2)
 f id=1:1:7 d
 .f cnt=1:1:3 s $p(^[nmsp]OI("MZP","MAN",id),":",cnt)=$p($g(in("arr",4,10,id)),"~",cnt)
 .s idprv="" f  s idprv=$o(in("arr",4,10,id,"prv",idprv)) q:idprv=""  d
 ..s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 ..f cnt=1:1:3 s $p(^[nmsp]OI("MZP","MAN",id,"zp",zp),":",cnt)=$p($g(in("arr",4,10,id,"prv",idprv)),"~",cnt)
 //vyrovnavaci doba
 f id=1:1:7 d
 .s ^[nmsp]OI("MZP","VYR",id)=$p($g(in("arr",4,11,id)),"~",1)
 .s ^[nmsp]OI("MZP","VYRS",id)=$p($g(in("arr",4,11,id)),"~",2)
 .s idprv="" f  s idprv=$o(in("arr",4,11,id,"prv",idprv)) q:idprv=""  d
 ..s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 ..s ^[nmsp]OI("MZP","VYR",id,"zp",zp)=$p($g(in("arr",4,11,id,"prv",idprv)),"~",1)
 ..s ^[nmsp]OI("MZP","VYRS",id,"zp",zp)=$p($g(in("arr",4,11,id,"prv",idprv)),"~",2)
 //delena smena
 f cnt=1:1:4 s $p(^[nmsp]OI("MZP","SETDSM"),"~",cnt)=$p($g(in("arr",4,12)),"~",cnt)
 s idprv="" f  s idprv=$o(in("arr",4,12,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .f cnt=1:1:4 s $p(^[nmsp]OI("MZP","SETDSM","zp",zp),"~",cnt)=$p($g(in("arr",4,12,"prv",idprv)),"~",cnt)
 // =====
 // tisk poznamek ze spoju na turnusy
 s ^[nmsp]OI(idfa,"jb","tu","set",1)=+$g(in("arr",4,13))
 // =================================
 //vyrovnavavaci doba - algoritmus vypoctu + podle provozovny
 s ^[nmsp]OI("MZP","VYRA")=+$g(in("arr",4,14)) 
 s idprv="" f  s idprv=$o(in("arr",4,14,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s ^[nmsp]OI("MZP","VYRA","zp",zp)=+$g(in("arr",4,14,"prv",idprv))
 //=======================================
 //tisk navaznosti - spoj vycka
 s ^[nmsp]OI(idfa,"jb","tu","set",2)=+$g(in("arr",4,15))
 //tisk navaznosti - na spoj navazuje
 s ^[nmsp]OI(idfa,"jb","tu","set",3)=+$g(in("arr",4,16))
 //tisk navaznosti - spoj pokracuje
 s ^[nmsp]OI(idfa,"jb","tu","set",4)=+$g(in("arr",4,17))
 //tisk turnusu - pro ostatni prace tisknout jen upresneni cinnosti
 s ^[nmsp]OI(idfa,"jb","tu","set",5)=+$g(in("arr",4,18))
 //jak urcit druh jizdy pro pristaveni, prejezd a odstaveni (0 vzdy rezijni / 1 podle druhu nasledujiciho (predchoziho spoje))
 s ^[nmsp]OI(idfa,"jb","tu","set",6)=$g(in("arr",4,19))
 //tisk turnusu, netisknout zacatek a konec turnusu (cinnost)
 s ^[nmsp]OI(idfa,"jb","tu","set",7)=$g(in("arr",4,20))
 //preruseni prace
 s $p(^[nmsp]OI("MZP","SETPPR"),"~",1)=+$p(in("arr",4,21),"~",1)
 s $p(^[nmsp]OI("MZP","SETPPR"),"~",2)=+$p(in("arr",4,21),"~",2)
 s $p(^[nmsp]OI("MZP","SETPPR"),"~",3)=$p(in("arr",4,21),"~",3)
 //============================
 s $p(^[nmsp]OI("OKRES"),"$",1)=$g(in("arr",5,1))
 s idprv="" f  s idprv=$o(in("arr",5,1,"prv",idprv)) q:idprv=""  s ^[nmsp]OI("OKRES",idprv)=$g(in("arr",5,1,"prv",idprv))
 s:$g(in("arr",5,2))=1 ^[nmsp]OI("CHAOSAUT")=$h s:$g(in("arr",5,2))=2 ^[nmsp]OI("CHAOSAUT","WARNING")=$h
 s:+$g(in("arr",5,3)) ^[nmsp]OI(idfa,"jb","planDopravy","EDISON")=+$g(in("arr",5,3))
 s ^[nmsp]OI(idfa,"jb","system","set",1)=+$g(in("arr",5,4))
 s ^[nmsp]OI(idfa,"jb","system","set",2)=$g(in("arr",5,5))
 s ^[nmsp]OI(idfa,"jb","system","set",3)=$g(in("arr",5,6))
 s ^[nmsp]OI("jb","system","set",4)=0	//$g(in("arr",5,7)) //natvrdo hlavni kalendar
 s idprv="" f  s idprv=$o(in("arr",5,7,"prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s ^[nmsp]OI("jb","system","set",4,zp)=$g(in("arr",5,7,"prv",idprv))
 // ======
 // evidence PHM
 i $p($g(in("arr",6,1)),"~",1)=1 d
 .s ^[nmsp]OI("PHSTAVY")=""
 .s:$p($g(in("arr",6,1)),"~",2)=0 ^[nmsp]OI("PHSTAVY","NE")=""
 i $p($g(in("arr",6,1)),"~",1)=0 d
 .s:$p($g(in("arr",6,1)),"~",3)=1 ^[nmsp]OI(idfa,"jb","doc","kmtankph")=""
 // lz prirazka PH
 i in("arr",6,2)=0 k ^[nmsp]OI("ZIMA","zp")												// % prirazka pro celou firmu
 i in("arr",6,2)=1 s ^[nmsp]OI("ZIMA")="" s ^[nmsp]OI("ZIMA","zp")=1					// % prirazka pro kazdy provoz
 i in("arr",6,2)=2 s ^[nmsp]OI("LEZIPHM")=$h_":"_$p(idos,"~",3) k ^[nmsp]OI("ZIMA")		//zimni spotreba
 i in("arr",6,2)=3 s ^[nmsp]OI(idfa,"jb","doc","normaphm")=3 k ^[nmsp]OI("ZIMA")		//zakladni spotreba po mesicich
 // dzva diference tach
 i $p($g(in("arr",6,3)),"~",1)'=$g(^[nmsp]OI(idfa,"jb","dzva","set","TachDifRezKm",1)) d
 .s ^[nmsp]OI(idfa,"jb","dzva","set","TachDifRezKm",1,$h)=$g(^[nmsp]OI(idfa,"jb","dzva","set","TachDifRezKm",1))_":"_$p(idos,"~",3)
 .s ^[nmsp]OI(idfa,"jb","dzva","set","TachDifRezKm",1)=$p($g(in("arr",6,3)),"~",1)
 i $p($g(in("arr",6,3)),"~",2)'=$g(^[nmsp]OI("TACH",1)) d
 .s ^[nmsp]OI("TACH",1,$h)=$g(^[nmsp]OI("TACH",1))_":"_$p(idos,"~",3)
 .s ^[nmsp]OI("TACH",1)=$p($g(in("arr",6,3)),"~",2)
 i $p($g(in("arr",6,3)),"~",3)=1 s ^[nmsp]OI("TACHDIFZAKAZ")=$h_":"_$p(idos,"~",3)
 // dzva vychozi rychlost pro objizdky
 s ^[nmsp]OI("DFLT","RYCH")=$g(in("arr",6,4))
 // dzva limit diet
 s ^[nmsp]OI("LIMITDIET","DZVA")=$g(in("arr",6,5))
 // dzva - aktualni prirazka PH
 i $g(in("arr",6,6))=1 s ^[nmsp]OI("POCASI")=""
 // dzva nabizet stav tachometru
 s ^[nmsp]OI("TACHM")=('$g(in("arr",6,7)))
 // dzva limit ph na doklade pro kontrolu
 i $g(in("arr",6,8)) s ^[nmsp]OI(idfa,"jb","dzva","set","ktan")=$g(in("arr",6,8))
 // dzva limit dnu na porizeni
 i $g(in("arr",6,9)) s ^[nmsp]OI(idfa,"jb","dzva","set","daybck")=$g(in("arr",6,9))
 // dzva prednastavit zap.cek u nepr.vykonu
 i $g(in("arr",6,10)) s ^[nmsp]OI(idfa,"jb","dzva","set","npvcek")=1
 //dzva spoje(-) prevest odeb.vykon do nepreprav.cinnosti
 i $g(in("arr",6,11)) s ^[nmsp]OI(idfa,"jb","dzva","set","ospvyk")=+$g(in("arr",6,11))
 //dzva spoje(+) prednastavit hod. take do cek
 i $g(in("arr",6,12)) s ^[nmsp]OI(idfa,"jb","dzva","set","psphod2cek")=1
 // dzva sledovat stav vozidel, kontrola
 i $g(in("arr",6,13)) s ^[nmsp]OI(idfa,"jb","dzva","set","kntbus")=1
 //dzva neprepr.vykon - vychozi hodnota pro 82 pMytBus
 i $g(in("arr",6,14)) s ^[nmsp]OI(idfa,"jb","dzva","set","initval",82)=$g(in("arr",6,14))
 // sj diference tach
 i $p($g(in("arr",6,15)),"~",1)'=$g(^[nmsp]OI("TACH",2)) d
 .s ^[nmsp]OI("TACH",2,$h)=$g(^[nmsp]OI("TACH",2))_":"_$p(idos,"~",3)
 .s ^[nmsp]OI("TACH",2)=$p($g(in("arr",6,15)),"~",1)
 i $p($g(in("arr",6,15)),"~",2)=1 s ^[nmsp]OI("TACHDIFZAKAZSJ")=$h_":"_$p(idos,"~",3)
 //sj limit rychlosti
 s ^[nmsp]OI("RYCHLOSTSJ")=$g(in("arr",6,16))
 //sj limit diet 
 s ^[nmsp]OI("LIMITDIET","SJ")=$g(in("arr",6,17))
 //sj vychozi typ platby
 s ^[nmsp]OI("DFLT","PL")=$g(in("arr",6,18))
 //sj nabizet cast cekani do odp. doby
 //i '$g(in("arr",6,19)) s ^[nmsp]OI("SJ","NEPUL")=""
 //sj jak urcit obdobi zapisu dokladu
 i $g(in("arr",6,20))'=$g(^[nmsp]OI(idfa,"jb","sj","setobd"))
 .s ^[nmsp]OI(idfa,"jb","sj","setobd","h",$h)=$g(in("arr",6,20))_"~"_$p(idos,"~",3)
 s ^[nmsp]OI(idfa,"jb","sj","setobd")=$g(in("arr",6,20))
 // sj konvertovat ns pro trzby
 i $g(in("arr",6,21))'=$g(^[nmsp]OI(idfa,"jb","sj","cnvnsprs"))
 .s ^[nmsp]OI(idfa,"jb","sj","cnvnsprs","h",$h)=$g(in("arr",6,21))_"~"_$p(idos,"~",3)
 s ^[nmsp]OI(idfa,"jb","sj","cnvnsprs")=$g(in("arr",6,21))
 // sj sledovat stav vozidla
 i $g(in("arr",6,22)) s ^[nmsp]OI(idfa,"jb","sj","set","kntbus")=1
 // dzva, normovane udrzba
 i +$g(in("arr",6,23))=0 s ^[nmsp]OI("NEPH")=""
 i +$g(in("arr",6,23))=1 s ^[nmsp]OI("NEPH")=$h_":"_$p(idos,"~",3)
 i +$g(in("arr",6,23))=2 s ^[nmsp]OI("NEPH")=$h_":"_$tr($p(idos,"~",3),":"," ")_":"_1
 // doklady, id sestavy pro tisk mzdovych podkladu pro ridice pro reportgenerator
 s ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",1)=$g(in("arr",6,24))
 // prepinac na zpracovani v EDISONU
 s ^[nmsp]OI(idfa,"jb","zpracovani","EDISON")=$g(in("arr",6,25))
 // evidence tankovani FAME
 s ^[nmsp]OI(idfa,"jb","doc","fame")=$g(in("arr",6,26))
 // evidence oleje
 s ^[nmsp]OI(idfa,"jb","doc","olej")=$g(in("arr",6,27))
 // zapocitat do spotreby phm pro porovnani na normovanou sp.phm naftu do topeni
 s ^[nmsp]OI(idfa,"jb","doc","smaphtop")=$g(in("arr",6,28))
 //dzva - zadavat pro casti spoju linku a spoj
 i '$g(in("arr",6,29)) s ^[nmsp]OI(idfa,"jb","dzva","set","cstspnols")=$h_":"_$p(idos,"~",3)
 s ^[nmsp]OI(idfa,"jb","sj","dlftzpsfak")=$g(in("arr",6,30))
 //doklady obecne - evidovat naftu do topeni (0/1)
 s ^[nmsp]OI(idfa,"jb","doc","top")=+$g(in("arr",6,31))
 //doklady dzva - evidovat prives (0/1)
 s ^[nmsp]OI(idfa,"jb","dzva","set","prives")=+$g(in("arr",6,32))
 //doklady sj - evidovat prives (0/1)
 s ^[nmsp]OI(idfa,"jb","sj","set","prives")=+$g(in("arr",6,33))
 // doklady obecne - evidovat AdBlue (0/1)
 s ^[nmsp]OI(idfa,"jb","doc","adblue")=+$g(in("arr",6,34))
 // doklady, id sestavy pro tisk sumarnich mzdovych podkladu pro ridice pro reportgenerator
 s ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",2)=$g(in("arr",6,35))
 // default. typ prepravce pro sj
 s ^[nmsp]OI(idfa,"jb","sj","dlfttypprep")=$g(in("arr",6,36))
 // zadat sj pouze s dopravcem z ciselniku 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","sj","dopciszak")=$g(in("arr",6,37))
 // zadat sj pouze s objednavkou 0 ne / 1 ano (objednavka musi byt)
 s ^[nmsp]OI(idfa,"jb","sj","reqobj")=$g(in("arr",6,38))
 // doklady obecne - evidovat dobu topeni 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","doc","toptm")=$g(in("arr",6,39))
 // doklady obecne - nabidnout automaticky dalsi cislo dokladu pri porizovani
 s ^[nmsp]OI(idfa,"jb","doc","autonext")=$g(in("arr",6,40))
 // doklady obecne - evidovat PHM Bio30 (B30) 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","doc","b30")=$g(in("arr",6,41))
 // doklady dzva - vychozi zastavka pro prejezd
 s ^[nmsp]OI(idfa,"jb","dzva","vzst",6)=$g(in("arr",6,42))
 // doklady sj - skryt sloupce v evidenci udaju ridice
 s ^[nmsp]OI(idfa,"jb","sj","skrytsloupceosc")=$g(in("arr",6,43))
 // doklady obecne - zpusob mazani dokladu 0 del / 1 priznak
 s ^[nmsp]OI(idfa,"jb","doc","del")=$g(in("arr",6,44))
 // doklady obecne - tankovani je povinny udaj (0 ne / 1 ano)
 s ^[nmsp]OI(idfa,"jb","doc","povinnephm")=$g(in("arr",6,45))
 // doklady dzva - pri vkladani turnusu s omezenim od-do nevkladat zacatky a konce (0 vkladat / 1 nevkladat)  
 s ^[nmsp]OI(idfa,"jb","dzva","set","nezackonomtur")=$g(in("arr",6,46))
 // doklady dzva - porizovani do budoucnosti
 s ^[nmsp]OI(idfa,"jb","dzva","set","futuredoc")=$g(in("arr",6,47))
 //doklady, zpracovani - reportgen id formulare pro tisk dovolenky pro ridice
 s ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",3)=$g(in("arr",6,48))
 //doklady SJ - diety je povinny udaj (0 ne / 1 ano)
 s ^[nmsp]OI(idfa,"jb","sj","povinnediety")=$g(in("arr",6,49))
 //doklady obecne - jake km pouzit pro sledovani udrzby vozidel 0 km vypočtené na dokladu / 1 km podle stavu tachometru 
 s ^[nmsp]OI(idfa,"jb","doc","udrkm")=$g(in("arr",6,50))
 //doklady, zpracovani - reportgen, id formulare pro tisk spotreby ridicu
 s ^[nmsp]OI(idfa,"jb","zpracovani","reportgenId",4)=$g(in("arr",6,51))
 //doklady, zpracovani - reportgen tisk mzdovych parametru pro ridice - parametr, zda v tabulce tisknout vsechny dny 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","zpracovani","reportgenPar",1,1)=$g(in("arr",6,52))
 //doklady, obecne, dflt pro combo stav tachometru
 s ^[nmsp]OI(idfa,"jb","doc","dfltstavtach")=$g(in("arr",6,53))
 //doklady obecne - zobrazovat u ridicu prescasy z mezd
 s ^[nmsp]OI(idfa,"jb","doc","prescasoscmzd")=$g(in("arr",6,54))
 //doklady zpracovani - zprava  pro email se mzdovymi podklady
 s ^[nmsp]OI(idfa,"jb","zpracovani","emailTx",1)=$g(in("arr",6,55))
 // doklady obecne - evidovat kalibraci tachometru 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","doc","tachkalib")=$g(in("arr",6,56))
 // doklady dzva - prednastavit zaporne cekani u neprepravniho vykonu - norm.udrzba 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","dzva","set","npvcekudr")=$g(in("arr",6,57))
 // doklady obecne - zpusob vypoctu (algotirmus) pro vypocet normovane spotreby
 s ^[nmsp]OI(idfa,"jb","doc","nphalgoritmus")=$g(in("arr",6,58))
 //doklady obecne - jakym zpusobem vyhodnotit pripad, kdy je u vozidla evidovana dotace a na dokladu se vyskytne zakazany PRS 0 chyba / 1 varovani 
 s ^[nmsp]OI(idfa,"jb","doc","rzdotchckprs")=$g(in("arr",6,59))
 //doklady sj - vychozi typ dokladu (id ciselniku=47)
 s ^[nmsp]OI(idfa,"jb","sj","dlfttypdoc")=$g(in("arr",6,60))
 //doklady DZVA - casove prekryti povazovat za chybu a neumoznit zapis dokladu 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","dzva","set","nooverlap")=$g(in("arr",6,61))
 //doklady SJ - casove prekryti povazovat za chybu a neumoznit zapis dokladu 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"jb","sj","set","nooverlap")=$g(in("arr",6,62))
 //doklady DZVA - evidovat poznamku u neprepravniho vykonu
 s ^[nmsp]OI(idfa,"jb","dzva","set","nepvykpozn")=$g(in("arr",6,63))
 //============
 //plan dopravy
 //============
 s val="" f cnt=1:1:3 s $p(val,"~",cnt)=+$p($g(in("arr",7,1)),"~",cnt)
 s ^[nmsp]OI(idfa,"jb","pln","set",1,1)=val
 s val="" f cnt=1:1:1 s $p(val,"~",cnt)=$p($g(in("arr",7,2)),"~",cnt)
 s ^[nmsp]OI(idfa,"jb","pln","set",1,2)=val
 s val="" f cnt=1:1:1 s $p(val,"~",cnt)=$p($g(in("arr",7,3)),"~",cnt)
 s ^[nmsp]OI(idfa,"jb","pln","set",1,3)=val
 //plan dopravy - SC
 //jak pocitat svatek, ktery neni nedele
 s ^[nmsp]OI(idfa,"jb","pln","set",2,1)=$g(in("arr",7,4))
 //plan - zobrazovat v planu evidencni cisla vozidel
 s ^[nmsp]OI(idfa,"jb","pln","set",3)=$g(in("arr",7,5))
 //plan dopravy, SC - aktualizovat kmenova vozidla ridicu podle SC
 s ^[nmsp]OI(idfa,"jb","pln","set",4)=$g(in("arr",7,6))
 // plan dopravy, nekontrolovat prekryvani vozidel pri zadavani dokladu 0 kontrolovat / 1 nekontrolovat
 s ^[nmsp]OI(idfa,"jb","pln","set",5)=$g(in("arr",7,7))
 //plan dopravy, pri zadanem atributu "smena z volna" automaticky zapsat do grafikonu ridice polozku s kc idgraf~kc
 s ^[nmsp]OI(idfa,"jb","pln","set",6)=$g(in("arr",7,8))
 // ========
 // grafikon
 // ========
 // grafikon ridici - neumoznit zadat dovolenou vyssi nez narok 
 s ^[nmsp]OI(idfa,"jb","grf","set",1)=$g(in("arr",8,1))
 // =================
 // !!! transakce !!!
 // =================
 tcommit
 q 0
err s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
errtroll s $zt="" trollback 1 k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
 ;;
 /*
tst
 k ^www
 s err=$$gMainSet("VS_CSAD","USER","",.arr)
 m ^www(1)=arr
 s err=$$sMainSet("VS_CSAD","USER",.arr,"")
 s err=$$gMainSet("VS_CSAD","USER","",.arr)
 m ^www(2)=arr
 q
 */
]]></Routine>


<Routine name="OBapiEDSet1" type="INT" languagemode="0" timestamp="64504,78171.229004"><![CDATA[
OBapiEDSet1 q
gPrsSet(idfa,nmsp,in,out)
 // out("arr",1,1)= 0 neni /1 je zapnuto sledovani prs 
 // out("arr",1,2)= prepravni systemy, ktere se nesmi vyskytnout na (dokladech oddelene ~) , pokud je zadano, kontroluje se pri prechodu na novy mesic
 // out("arr",1,3)= 0 neni /1 je zapnuta konverze ns dle prepravnich systemu pri prevodu udaju do DS, kontrola pri prechodu na novy mesic
 //                 (zatim u nas, pozdeji predelat a nacitat to na funkci EKOS/MK)
 // out("arr",1,4)= data pro konverzi ns dle prs poskytuje 0 EKOS / 1 podilovani MK (read only)
 // out("arr",1,5)= je-li zapnuta konverze ns dle prs (ekos), lze zadat, ktere strediska se nekontroluji (oddelene ~) 
 // out("arr",1,6,"prv",idprv)= povolene prepravni systemy pro provozovnu (oddelene ~)
 // out("arr",1,7)= prepravni systemy1, na kterych se budou rozpocitavat km pri prevodu dokladu do DS (rozpocitavat na km uvedene v out("arr",1,8) (oddelene ~)
 // out("arr",1,8)= prepravni systemy1, na ktere se budou rozpocitavat km z prepravnich systemu v out("arr",1,7), pokud neni zadano budou se rozpocitavat podle vsech prs (oddelene ~)
 // out("arr",1,9)= prepravni systemy2, na kterych se budou rozpocitavat km pri prevodu dokladu do DS (rozpocitavat na km uvedene v out("arr",1,10) (oddelene ~)
 // out("arr",1,10)= prepravni systemy2, na ktere se budou rozpocitavat km z prepravnich systemu v out("arr",1,9), pokud neni zadano budou se rozpocitavat podle vsech prs (oddelene ~)
 // ==================
 // pravidelna doprava
 // ==================
 // out("arr",2,1)=vychozi prepravni system
 // out("arr",2,1,"prv",idprv)=vychozi prepravni system pro provozovnu
 // out("arr",2,1,"ns",idns)=vychozi prepravni system pro ns
 // nastaveni pro rezijni km (idrez=4 pristavne,5 odstavne,6 prejezdy,7 rezijni spoj)
 // out("arr",2,2)=0 odvodit prs podle spoje ktery nasleduje,predchazi / 1 pouzit default.prepravni systemy
 // out("arr",2,3)=jak odvodit prs podle spoje 0 prvni prs / 1 nejdelsi prs / 2 pomer prs
 // out("arr",2,4,iddsp,prs)=prs ... konverzni tabulka pro pristavne a odstavne km, (iddsp,prs muze byt i *)   
 // out("arr",2,5,iddspfrom,prsspfrom,iddspto,prsspto)=prs ... konverzni tabulka pro prejezdy  (iddspfrom,prsspfrom,iddspto,prsspto muze byt i *)   
 // out("arr",2,6,idrez,1)=vychozi prepravni system pro rezijni km
 // out("arr",2,6,idrez,1,"prv",idprv)=vychozi prepravni system pro rezijni km
 // out("arr",2,6,idrez,1,"ns",idns)=vychozi prepravni system pro rezijni km
 // out("arr",2,6,idrez,2)=konstanta pro zpresneni prs
 // nastaveni pro ostatni rezijni km (idrez= ciselnik id=22)
 // out("arr",2,7,idrez,1)=vychozi prepravni system pro rezijni km
 // out("arr",2,7,idrez,1,"prv",idprv)=vychozi prepravni system pro rezijni km
 // out("arr",2,7,idrez,1,"ns",idns)=vychozi prepravni system pro rezijni km
 // out("arr",2,7,idrez,2)=konstanta pro zpresneni prs
 // out("arr",2,7,idrez,3)=odvodit automaticky (0 ne / 1 dle nejdelsiho / 2 pomer prs / 3 vzdy vychozi / 4 podle spoje)
 // out("arr",2,7,idrez,4)=jak odvodit druh spoje pri prevodu dat do DS 0 default / 1 podle prs
 // nastaveni pro druhy spoje (iddsp= ciselnik id=4)
 // out("arr",2,8,iddsp,1)=vychozi prepravni system pro druh spoje
 // out("arr",2,8,iddsp,1,"prv",idprv)=vychozi prepravni system pro druh spoje
 // out("arr",2,8,iddsp,1,"ns",idns)=vychozi prepravni system pro druh spoje
 // out("arr",2,8,iddsp,3)=odvodit automaticky (0 ne / 1 dle nejdelsiho / 2 pomer prs)
 // out("arr",2,9)= na kolik des mist rozpocitat tarifni km podle prepravnich sytemu na dokladech (0 cele cislo / 1 jedno des. misto / 2 na dve des mista)
 // ====================
 // nepravidelna doprava
 // ====================
 // out("arr",3,1)=vychozi prepravni system
 // out("arr",3,1,"prv",idprv)=vychozi prepravni system pro provozovnu
 // out("arr",3,2,iddza,1)=vychozi prepravni system
 // out("arr",3,2,iddza,2)=povolene prepravni systemy oddelene ~
 //
 n (idfa,nmsp,in,out) s $zt="err" k out
 s dz=$$gFaDz^OBapiED(idfa)
 // obecne
 s out("arr",1,1)=($d(^[nmsp]OI(dz,"PSYS"))>0)
 s out("arr",1,2)=$tr($g(^[nmsp]OI(idfa,"jb","prs","kdcprs")),";","~")
 s out("arr",1,3)=($d(^[nmsp]OI(idfa,"jb","ds","ncnvnsprs"))=0)
 s out("arr",1,4)=##class(ALVA.DSPODILOVANI.ApiPS).IsEnabled(idfa,0)
 s out("arr",1,5)=$tr($g(^[nmsp]OI(idfa,"jb","ds","noVerifyCnvNS")),";","~")
 s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"jb","prs","prvprs",idprv)) q:idprv=""  d
 .s out("arr",1,6,"prv",idprv)=$tr($g(^[nmsp]OI(idfa,"jb","prs","prvprs",idprv)),";","~")
 s out("arr",1,7)=$tr($p($g(^[nmsp]OI(idfa,"jb","ds","rpcprs")),"~",1),";","~")
 s out("arr",1,8)=$tr($p($g(^[nmsp]OI(idfa,"jb","ds","rpcprs")),"~",2),";","~")
 s out("arr",1,9)=$tr($p($g(^[nmsp]OI(idfa,"jb","ds","rpcprs")),"~",3),";","~")
 s out("arr",1,10)=$tr($p($g(^[nmsp]OI(idfa,"jb","ds","rpcprs")),"~",4),";","~")
 // pravidelna doprava
 s out("arr",2,1)=$g(^[nmsp]OI(idfa,"DEFPSP"))
 s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"DEFPSP","P",idprv)) q:idprv=""  d
 .s out("arr",2,1,"prv",idprv)=$g(^[nmsp]OI(idfa,"DEFPSP","P",idprv))
 s idns="" f  s idns=$o(^[nmsp]OI(idfa,"DEFPSP","N",idns)) q:idns=""  d
 .s out("arr",2,1,"ns",idns)=$g(^[nmsp]OI(idfa,"DEFPSP","N",idns))
 // pravidelna doprava - rezijni km - pristavne, odstavne, prejezd, rezijni spoj
 s out("arr",2,2)=$d(^[nmsp]OI(idfa,"DEFPSP","RREKM"))>0  ;; 0 odvodit prs podle spoje ktery nasleduje,predchazi / 1 pouzit default.prepravni systemy
 s out("arr",2,3)=+$p($g(^[nmsp]OI(idfa,"DEFPSP","PSSP")),"~",2) ;; jak odvodit prs podle spoje 0 prvni prs / 1 nejdelsi prs / 2 pomer prs
 s id="" f  s id=$o(^[nmsp]OI(idfa,"jb","prs","ctblpo",id)) q:id=""  d
 .s iddsp=$p(id,"~",1) s prssp=$p(id,"~",2) s prs=$g(^[nmsp]OI(idfa,"jb","prs","ctblpo",id))
 .s out("arr",2,4,iddsp,prssp)=prs ;; konverzni abulka pro pristavne a odstavne km 
 s idf="" f  s idf=$o(^[nmsp]OI(idfa,"jb","prs","ctblpr",idf)) q:idf=""  d
 .s iddspf=$p(idf,"~",1) s prsspf=$p(idf,"~",2)
 .s idt="" f  s idt=$o(^[nmsp]OI(idfa,"jb","prs","ctblpr",idf,idt)) q:idt=""  d
 ..s iddspt=$p(idt,"~",1) s prsspt=$p(idt,"~",2)
 ..s prs=$g(^[nmsp]OI(idfa,"jb","prs","ctblpr",idf,idt))
 ..s out("arr",2,5,iddspf,prsspf,iddspt,prsspt)=prs
 f idrez=4,5,6,7 i $d(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)) d
 .s out("arr",2,6,idrez,1)=$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",1)
 .s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv)) q:idprv=""  d
 ..s out("arr",2,6,idrez,1,"prv",idprv)=$g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv))
 .s idns="" f  s idns=$o(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns)) q:idns=""  d
 ..s out("arr",2,6,idrez,1,"ns",idns)=$g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns))
 .s out("arr",2,6,idrez,2)=+$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",2)
 // pravidelna doprava - rezijni km - ostatni
 s idrez="" f  s idrez=$o(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)) q:idrez=""  d
 .k arr s err=$$isCisItm^OBapiED(idfa,nmsp,22,idrez,"",.arr) zt:+err "merr" s err=""
 .q:'$g(arr)
 .s out("arr",2,7,idrez,1)=$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",1)
 .s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv)) q:idprv=""  d
 ..s out("arr",2,7,idrez,1,"prv",idprv)=$g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv))
 .s idns="" f  s idns=$o(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns)) q:idns=""  d
 ..s out("arr",2,7,idrez,1,"ns",idns)=$g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns))
 .s out("arr",2,7,idrez,2)=$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",2)
 .s out("arr",2,7,idrez,3)=+$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",3)
 .s out("arr",2,7,idrez,4)=+$p($g(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez)),"~",4)
 // pravidelna doprava - casti spoju
 s iddsp="" f  s iddsp=$o(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp)) q:iddsp=""  d
 .s out("arr",2,8,iddsp,1)=$p($g(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp)),"~",1)
 .s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"P",idprv)) q:idprv=""  d
 ..s out("arr",2,8,iddsp,1,"prv",idprv)=$g(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"P",idprv))
 .s idns="" f  s idns=$o(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"N",idns)) q:idns=""  d
 ..s out("arr",2,8,iddsp,1,"ns",idns)=$g(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"N",idns))
 .s out("arr",2,8,iddsp,3)=+$p($g(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp)),"~",3)
 // pravidelna doprava - na kolik des mist rozpocitavat tarifni km podle prepravnich systemu
 i '$d(^[nmsp]OI(idfa,"jb","prs","dzva","par",1)) s ^[nmsp]OI(idfa,"jb","prs","dzva","par",1)=2
 s out("arr",2,9)=$g(^[nmsp]OI(idfa,"jb","prs","dzva","par",1))
 // ========================================================================================
 // nepravidelna doprava
 // ========================================================================================
 s out("arr",3,1)=$g(^[nmsp]OI(idfa,"DEFPSN"))
 s idprv="" f  s idprv=$o(^[nmsp]OI(idfa,"DEFPSN","P",idprv)) q:idprv=""  d
 .s out("arr",3,1,"prv",idprv)=$g(^[nmsp]OI(idfa,"DEFPSN","P",idprv))
 // nepravidelna doprava - druhy zajezdu, vychozi a povolene prs
 k arrcis s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arrcis)
 s iddza="" f  s iddza=$o(arrcis("arr",iddza)) q:iddza=""  d
 .s out("arr",3,2,iddza,1)=$p($g(arrcis("arr",iddza)),"~",6)
 .s out("arr",3,2,iddza,2)=$tr($p($g(arrcis("arr",iddza)),"~",11),";","~")
 k arrcis
 // ============================================================
 q 0
sPrsSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" k out
 s dz=$$gFaDz^OBapiED(idfa)
 // kill
 k ^[nmsp]OI(dz,"PSYS")
 k ^[nmsp]OI(idfa,"jb","prs","kdcprs")
 k ^[nmsp]OI(idfa,"jb","ds","ncnvnsprs")
 k ^[nmsp]OI(idfa,"jb","prs","prvprs")
 k ^[nmsp]OI(idfa,"DEFPSP")
 k ^[nmsp]OI(idfa,"DEFPSP","RKM")
 k ^[nmsp]OI(idfa,"DEFPSP","DSP")
 k ^[nmsp]OI(idfa,"DEFPSN")
 k ^[nmsp]OI(idfa,"DEFPSP","RREKM")
 k ^[nmsp]OI(idfa,"DEFPSP","PSSP")
 k ^[nmsp]OI(idfa,"jb","prs","ctblpo")
 k ^[nmsp]OI(idfa,"jb","prs","ctblpr")
 k ^[nmsp]OI(idfa,"jb","ds","rpcprs")
 // obecne
 i $g(in("arr",1,1)) s ^[nmsp]OI(dz,"PSYS")=1
 i $g(in("arr",1,2))'="" s ^[nmsp]OI(idfa,"jb","prs","kdcprs")=$tr($g(in("arr",1,2)),"~",";")
 i '$g(in("arr",1,3)) s ^[nmsp]OI(idfa,"jb","ds","ncnvnsprs")=1
 i $g(in("arr",1,5))'="" s ^[nmsp]OI(idfa,"jb","ds","noVerifyCnvNS")=$tr($g(in("arr",1,5)),"~",";")
 s idprv="" f  s idprv=$o(in("arr",1,6,"prv",idprv)) q:idprv=""  d
 .q:$g(in("arr",1,6,"prv",idprv))=""
 .s ^[nmsp]OI(idfa,"jb","prs","prvprs",idprv)=$tr($g(in("arr",1,6,"prv",idprv)),"~",";")
 i $g(in("arr",1,7))'="" s $p(^[nmsp]OI(idfa,"jb","ds","rpcprs"),"~",1)=$tr($g(in("arr",1,7)),"~",";")
 i $g(in("arr",1,8))'="" s $p(^[nmsp]OI(idfa,"jb","ds","rpcprs"),"~",2)=$tr($g(in("arr",1,8)),"~",";")
 i $g(in("arr",1,9))'="" s $p(^[nmsp]OI(idfa,"jb","ds","rpcprs"),"~",3)=$tr($g(in("arr",1,9)),"~",";")
 i $g(in("arr",1,10))'="" s $p(^[nmsp]OI(idfa,"jb","ds","rpcprs"),"~",4)=$tr($g(in("arr",1,10)),"~",";")
 // pravidelna doprava
 s ^[nmsp]OI(idfa,"DEFPSP")=$g(in("arr",2,1))
 s idprv="" f  s idprv=$o(in("arr",2,1,"prv",idprv)) q:idprv=""  d
 .q:$g(in("arr",2,1,"prv",idprv))=""
 .s ^[nmsp]OI(idfa,"DEFPSP","P",idprv)=$g(in("arr",2,1,"prv",idprv))
 s idns="" f  s idns=$o(in("arr",2,1,"ns",idns)) q:idns=""  d
 .q:$g(in("arr",2,1,"ns",idns))=""
 .s ^[nmsp]OI(idfa,"DEFPSP","N",idns)=$g(in("arr",2,1,"ns",idns))
 // pravidelna doprava - rezijni km - pristavne, odstavne, prejezd, rezijni spoj
 s:$g(in("arr",2,2)) ^[nmsp]OI(idfa,"DEFPSP","RREKM")=$h
 s:$g(in("arr",2,3)) ^[nmsp]OI(idfa,"DEFPSP","PSSP")=$h_"~"_$g(in("arr",2,3))
 s iddsp="" f  s iddsp=$o(in("arr",2,4,iddsp)) q:iddsp=""  d
 .s prssp="" f  s prssp=$o(in("arr",2,4,iddsp,prssp)) q:prssp=""  d
 ..s prs=$g(in("arr",2,4,iddsp,prssp)) q:prs=""
 ..s id=iddsp_"~"_prssp
 ..s ^[nmsp]OI(idfa,"jb","prs","ctblpo",id)=prs
 s iddspf="" f  s iddspf=$o(in("arr",2,5,iddspf)) q:iddspf=""  d
 .s prsspf="" f  s prsspf=$o(in("arr",2,5,iddspf,prsspf)) q:prsspf=""  d
 ..s iddspt="" f  s iddspt=$o(in("arr",2,5,iddspf,prsspf,iddspt)) q:iddspt=""  d
 ...s prsspt="" f  s prsspt=$o(in("arr",2,5,iddspf,prsspf,iddspt,prsspt)) q:prsspt=""  d
 ....s idf=iddspf_"~"_prsspf s idt=iddspt_"~"_prsspt
 ....s prs=$g(in("arr",2,5,iddspf,prsspf,iddspt,prsspt)) q:prs=""
 ....s ^[nmsp]OI(idfa,"jb","prs","ctblpr",idf,idt)=prs
 s idrez="" f  s idrez=$o(in("arr",2,6,idrez)) q:idrez=""  d
 .i $g(in("arr",2,6,idrez,1))'="" s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",1)=$g(in("arr",2,6,idrez,1))
 .i $g(in("arr",2,6,idrez,2))'="" s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",2)=$g(in("arr",2,6,idrez,2))
 .s idprv="" f  s idprv=$o(in("arr",2,6,idrez,1,"prv",idprv)) q:idprv=""  d
 ..q:$g(in("arr",2,6,idrez,1,"prv",idprv))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv)=$g(in("arr",2,6,idrez,1,"prv",idprv))
 .s idns="" f  s idns=$o(in("arr",2,6,idrez,1,"ns",idns)) q:idns=""  d
 ..q:$g(in("arr",2,6,idrez,1,"ns",idns))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns)=$g(in("arr",2,6,idrez,1,"ns",idns))
 // pravidelna doprava - rezijni km - ostatni
 s idrez="" f  s idrez=$o(in("arr",2,7,idrez)) q:idrez=""  d
 .i $g(in("arr",2,7,idrez,1))'="" s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",1)=$g(in("arr",2,7,idrez,1))
 .i $g(in("arr",2,7,idrez,2))'="" s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",2)=$g(in("arr",2,7,idrez,2))
 .i $g(in("arr",2,7,idrez,3)) s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",3)=$g(in("arr",2,7,idrez,3))
 .i $g(in("arr",2,7,idrez,4)) s $p(^[nmsp]OI(idfa,"DEFPSP","RKM",idrez),"~",4)=$g(in("arr",2,7,idrez,4))
 .s idprv="" f  s idprv=$o(in("arr",2,7,idrez,1,"prv",idprv)) q:idprv=""  d
 ..q:$g(in("arr",2,7,idrez,1,"prv",idprv))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"P",idprv)=$g(in("arr",2,7,idrez,1,"prv",idprv))
 .s idns="" f  s idns=$o(in("arr",2,7,idrez,1,"ns",idns)) q:idns=""  d
 ..q:$g(in("arr",2,7,idrez,1,"ns",idns))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","RKM",idrez,"N",idns)=$g(in("arr",2,7,idrez,1,"ns",idns))
 // pravidelna doprava - casti spoju
 s iddsp="" f  s iddsp=$o(in("arr",2,8,iddsp)) q:iddsp=""  d
 .i $g(in("arr",2,8,iddsp,1))'="" s $p(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp),"~",1)= $g(in("arr",2,8,iddsp,1))
 .i $g(in("arr",2,8,iddsp,3)) s $p(^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp),"~",3)=$g(in("arr",2,8,iddsp,3))
 .s idprv="" f  s idprv=$o(in("arr",2,8,iddsp,1,"prv",idprv)) q:idprv=""  d
 ..q:$g(in("arr",2,8,iddsp,1,"prv",idprv))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"P",idprv)=$g(in("arr",2,8,iddsp,1,"prv",idprv))
 .s idns="" f  s idns=$o(in("arr",2,8,iddsp,1,"ns",idns)) q:idns=""  d
 ..q:$g(in("arr",2,8,iddsp,1,"ns",idns))=""
 ..s ^[nmsp]OI(idfa,"DEFPSP","DSP",iddsp,"N",idns)=$g(in("arr",2,8,iddsp,1,"ns",idns))
 // pravidelna doprava - na kolik des mist rozpocitavat tarifni km podle prepravnich systemu
 s ^[nmsp]OI(idfa,"jb","prs","dzva","par",1)=$g(in("arr",2,9))
 // ========================================================================================
 // nepravidelna doprava
 // ========================================================================================
 s:$g(in("arr",3,1))'="" ^[nmsp]OI(idfa,"DEFPSN")=$g(in("arr",3,1))
 s idprv="" f  s idprv=$o(in("arr",3,1,"prv",idprv)) q:idprv=""  d
 .q:$g(in("arr",3,1,"prv",idprv))=""
 .s ^[nmsp]OI(idfa,"DEFPSN","P",idprv)=$g(in("arr",3,1,"prv",idprv))
 // nepravidelna doprava - druhy zajezdu
 s iddza="" f  s iddza=$o(in("arr",3,2,iddza)) q:iddza=""  d
 .k arro s err=$$isCisItm^OBapiED(idfa,nmsp,1,iddza,"",.arro) i '$g(arro) q
 .k arro s err=$$gCisItm^OBapiED(idfa,nmsp,1,iddza,"",.arro)
 .s val=$g(arro("arr",iddza))
 .s $p(val,"~",6)=$g(in("arr",3,2,iddza,1))
 .s $p(val,"~",11)=$tr($g(in("arr",3,2,iddza,2)),"~",";")
 .k arro s err=$$sCisItm^OBapiED(idfa,nmsp,1,iddza,val,"","")
 // ====================================
 q 0
err s $zt="" k out q:$g(err)'="" "1~"_$tr(err,"~","/")  q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDSet2" type="INT" languagemode="0" timestamp="65379,73043.472601"><![CDATA[
OBapiEDSet2 q
 // ========================================================================================================================
 // POZOR, v metode = class(ALVA.ADSETTINGS.Mzdy).getPrvMzdSet = se z nastaveni nacitaji mozne provozovny pro seznamy v okne
 //        bude-li se provozovna doplnovat, do dat, kontrola teto metody !
 // ========================================================================================================================  
gMzdSet(idfa,nmsp,in,out)
 // obecne
 // ======
 // out("arr",0,1)=pouzivat osobni tarify 0 ne / 1 ano
 // out("arr",0,2)=osobni tarify 0 pro vše / 1 pro jizdu a minipulaci
 //
 // out("arr",0,3,"dta",1)=fixni dodk pridelit 0 ne / 1 na dzva / 2 na sj / 3 na dzva+sj
 // out("arr",0,3,"dta",2)=fixni dodk jednotky 0 hodiny / 1 kc / 2 % z hodin / 3 nepridelit nic (pro ruzne stavy pro provozovny)
 // out("arr",0,3,"dta",3)=fixni dodk spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // out("arr",0,3,"dta",4)=fixni dodk kontrola 0 ne / 1 ano 1x denne na osc a auto / 2 ano 1x denne na os
 // out("arr",0,3,"dta",5)=fixni dodk bezny bus (min)
 // out("arr",0,3,"dta",6)=fixni dodk kloubovy bus (min)
 // out("arr",0,3,"dta",7)=fixni dodk bezny bus (kc)
 // out("arr",0,3,"dta",8)=fixni dodk kloubovy bus (kc)
 // out("arr",0,3,"dta",9)=fixni dodk pro dzva - hodiny - doplnovat do hodin sv,so,ne 0 ne / 1 ano
 // out("arr",0,3,"dta",10)=fixni dodk bezny bus (%)
 // out("arr",0,3,"dta",11)=fixni dodk kloubovy bus (%)
 // out("arr",0,3,"dta",12)=idpol~idpol~ ... hodinove polozky pro vypocet dodk % pro pravidelnou dopravu
 // out("arr",0,3,"dta",13)=idpol~idpol~ ... hodinove polozky pro vypocet dodk % pro nepravidelnou dopravu
 // out("arr",0,3,"arr",1,idprv,"dta",2)=fixni dodk jednotky 0 nezadano /1 hodiny / 2 kc / 3 % z hodin / 4 nepridelit nic (pro ruzne stavy pro provozovny)
 // out("arr",0,3,"arr",1,idprv,"dta",5)=fixni dodk bezny bus (min) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",6)=fixni dodk kloubovy bus (min) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",7)=fixni dodk bezny bus (kc) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",8)=fixni dodk kloubovy bus (kc) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",10)=fixni dodk bezny bus (%) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",11)=fixni dodk kloubovy bus (%) pro provoz
 //
 // out("arr",0,4,"dta",1)=fixni kc na doklad  pridelit 0 ne / 1 na dzva / 2 na sj / 3 na dzva+sj
 // out("arr",0,4,"dta",2)=fixni kc na doklad spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // out("arr",0,4,"dta",3)=fixni kc na doklad kontrola 0 ne / 1 ano 1x denne na osc a auto/ 2 ano 1x denne na os
 // out("arr",0,4,"dta",4)=fixni kc na doklad bezny bus (kc)
 // out("arr",0,4,"dta",5)=fixni kc na doklad kloubovy bus (kc)
 // out("arr",0,4,"arr",1,idprv,"dta",4)=fixni kc na doklad bezny bus (kc) pro provoz
 // out("arr",0,4,"arr",1,idprv,"dta",5)=fixni kc na doklad kloubovy bus (kc) pro provoz
 //
 // out("arr",0,5,"dta",1)=fixni hodiny na doklad  pridelit 0 ne / 1 na dzva
 // out("arr",0,5,"dta",2)=fixni hodiny na doklad spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // out("arr",0,5,"dta",3)=fixni hodiny na doklad kontrola 0 ne / 1 ano 1x denne na osc a auto/ 2 ano 1x denne na os
 // out("arr",0,5,"dta",4)=fixni hodiny na doklad bezny bus (min)
 // out("arr",0,5,"dta",5)=fixni hodiny na doklad kloubovy bus (min)
 // out("arr",0,5,"arr",1,idprv,"dta",4)=fixni hodiny na doklad bezny bus (min) pro provoz
 // out("arr",0,5,"arr",1,idprv,"dta",5)=fixni hodiny na doklad kloubovy bus (min) pro provoz
 // out("arr",0,5,"dta",6)=fixni hodiny pro dzva - doplnovat do hodin sv,so,ne 0 ne / 1 ano
 //
 // out("arr",0,6)=zpusob vypoctu premii 0 zvlast pro pravidelnou a nepravidelnou / 1 pravidelna,nepravidelna, grafikon dohromady / 2 dohromady, % zakladu nacitat z mezd
 //
 // out("arr",0,7,"dta",1)=sledovat dny s dokladem 0 ne / 1 z dzva+sj
 // out("arr",0,7,"dta",2)=jak sledovat dny s dokladem při spolujízdě  0 pro všechny řidiče / 1 pro prvního řidiče
 //
 // out("arr",0,8)=obdobi pro vypocet premii 0 aktualni / 1 minule (aktualni-1 mesic)
 // out("arr",0,9)=jak pocitat mesicni fond 0 zakladni uvazek x pocet pracovnich dni / 1 zakladni uvazek x pocet kalendarnich dni   
 //
 // pravidelna doprava - obecne
 // ===========================
 // out("arr",1,0,1)=1 / 2  / 3 vypocet mzdy 1 casova / 2 vykonova / 3 casova UH
 // out("arr",1,0,2)=sazba za zastavku (kc/kus)
 // out("arr",1,0,3)=sazba za spoj (kc/kus)
 // out("arr",1,0,4)=priplatek za plyn.autobus (kc/km)
 // out("arr",1,0,5)=maximalni doba cekani v turnusu/dzva (min)
 // out("arr",1,0,6)=zpusob zaokrouhleni cekani v turnusu/dzva (0 ne / 1 na cele hodiny dolu)
 // out("arr",1,0,7)=praci v noci se rozumi prac vykonod 22.00 do 6.00 (0 ne, je v jine sazbe / 1 ano, bude se pocitat)
 // out("arr",1,0,8)=prace v noci, limit, po kterem se bude pocitat (za dzva) (min)
 // out("arr",1,0,9)=soubeh svatek + so,ne, priplatek (0 svatek + so,ne / 1 svatek)
 // out("arr",1,0,10)=priplatek za zaskolovani (kc/hod)
 // out("arr",1,0,11)=sazba za zasilky (kc/ks)
 // out("arr",1,0,12)=jaky koeficient mzdy v pripade, kdy je na doklade vice turnusu (0-od posledniho turnusu / 1 zadny / 2 nejmensi / 3 nejvetsi)
 // out("arr",1,0,13)=vicesmenny provoz (kc/hod)
 // out("arr",1,0,14,"dta",1)=kam napocitat kc za km nebo hod dle spoju,druhu 0 do premii / 1 do priplatku
 // out("arr",1,0,14,"dta",2)=do doby pro hodinovy priplatek na linku/spoj zahrnout i dobu manipulace pred a po spoji (0 ne / 1 ano)
 // out("arr",1,0,14,"dta",3)=do doby pro priplatek na linku/spoj zahrnout i vyrovnavaci dobu pred, ve a po spoji (0 ne / 1 ano)
 // out("arr",1,0,14,"dta",4)=do hodin pro priplatek na linku/spoj zahrnout i dobu bezpecnostni prestavky po spoji (0 ne / 1 ano)
 // out("arr",1,0,14,"arr",1,li,"dta",1)=priplatek/premie za 1km pro celou linku
 // out("arr",1,0,14,"arr",1,li,"dta",2)=priplatek/premie za 1hod pro celou linku
 // out("arr",1,0,14,"arr",1,li,"arr",sp,"dta",1)=priplatek/premie za 1km pro spoj linky
 // out("arr",1,0,14,"arr",1,li,"arr",sp,"dta",2)=priplatek/premie za 1 hod pro spoj linky
 // out("arr",1,0,14,"arr",2,"dta",1)=priplatek/premie za 1km rezijni
 // out("arr",1,0,14,"arr",2,"arr",3,"dta",1)=priplatek/premie za km 1rezijni dle druhu, zatim pro 3=mhd (ciselnik id=4)
 // out("arr",1,0,15)... volné  presunuto do fixniho dodk , obecne , zrusit !!!!!!!!!!!!!!!
 // out("arr",1,0,15)=fixni dodk na DZVA 0 ne / 1 ano hodiny / 2 ano v kc
 // out("arr",1,0,15,"arr",1,"dta",1)=fixni dodk bezny bus (min)
 // out("arr",1,0,15,"arr",1,"dta",2)=fixni dodk kloubovy bus (min)
 // out("arr",1,0,15,"arr",1,"dta",3)=kontrola prideleneho dodk 0 ne / 1 ano 1x denne na provoz a auto
 // out("arr",1,0,15,"arr",2,"dta",1)=fixni dodk bezny bus (kc)
 // out("arr",1,0,15,"arr",2,"dta",2)=fixni dodk kloubovy bus (kc)
 // out("arr",1,0,15,"arr",2,"dta",3)=kontrola prideleneho dodk 0 ne / 1 ano 1x denne na provoz a auto
 // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 // out("arr",1,0,15)=zpusob vypoctu diet 0 zadano u turnusu / 1 sazba die na hod provozu / 2 dle tabulky pro tuzemske die na hod provozu  / 3 nevyplacet
 // out("arr",1,0,15,"prv",idprv)=zpusob vypoctu diet 0 nenastaveno / 1 zadano u turnusu / 2 sazba die na hod provozu / 3 dle tabulky pro tuzemske die na hod provozu  / 4 nevyplacet
 // out("arr",1,0,16)=sazba die/hodProv pro pripad vypoctu diet koeficientem
 // out("arr",1,0,17,"prv",idprv,"arr",idzst)=id zastavky, ktera rozdeluje dobu pro vypocet diet (diety se pocitaji podle rabulky z turnusu)
 // out("arr",1,0,18, ... automatické krácení doby jízdy řidiče v případě spolujízdy více řidičů
 // out("arr",1,0,18,"dta",1)=0 automaticky nekrátit / 1 automaticky krátit
 // out("arr",1,0,18,"dta",2)=% z celkové doby jízdy (%)
 // out("arr",1,0,19)=idpol~idpol~ ... id polozek pro vypocet hodin v noci z pravidlene
 // out("arr",1,0,20,"dta",1)=automaticky vypocet prestavky na jidlo 0/ne 1/podle vykonu (ji+ma) 2/podle doby provozu
 // out("arr",1,0,20,"dta",2)=limit1(mm), je li vykon>limit1(mm) prideluje se prestavka na jidlo
 // out("arr",1,0,20,"dta",3)=vyse prestavky na jidlo pokud vykon>limit1(mm)
 // out("arr",1,0,20,"dta",4)=limit2(mm), je li vykon>limit2(mm) prideluje se prestavka na jidlo
 // out("arr",1,0,20,"dta",5)=vyse prestavky na jidlo pokud vykon>limit2(mm)
 // out("arr",1,0,21)=dodk na turnusu bez casove pozice - odecitat z cekani 0 ne / 1 ano
 // out("arr",1,0,22)=dodk na turnusu bez casove pozice - jak vypocitat v pripade, kdy je na doklade vice turnusu (0-nejvetsi hodnota ze vsech turnusu / 1 soucet vsech hodnot z turnusu )
 // out("arr",1,0,23)=jake nocovne v pripade, kdy je na doklade vice turnusu (0-nejvetsi hodnota ze vsech turnusu / 1 soucet vsech hodnot z turnusu )
 // out("arr",1,0,24)=idpol~idpol~ ... id polozek pro vypocet diet z prubehu dokladu z pravidlene
 // out("arr",1,0,25)=zapocitat cekani do odpracovane doby + přer.pr.zap (zadava se % u turnusu) do hodin ve sv,so,ne 0 ne / 1 ano
 // out("arr",1,0,26)=zapocitat vyrovnavaci dobu zadanou nad turnusem do hodin ve sv,so,ne 0 ne / 1 ano
 // out("arr",1,0,27)=zapocitavat prestavku na jidlo do odpracovane doby 0 ne / 1 ano
 // out("arr",1,0,27,"prv",idprv)=zapocitavat prestavku na jidlo do odpracovane doby 0 nenastaveno / 1 ne / 2 ano
 // out("arr",1,0,28)=jak evidovat zadane zpozdeni 0 prodlouzit dobu jizdy spoje tak, aby nebyl narušen následující spoj / 1 pouze evidovat dobu zpozdeni
 // out("arr",1,0,29)=minimalni uznana doba zpozdeni na DZVA v min
 // out("arr",1,0,30,sazba)=idtyp~idtyp~ ... sazby (kc\hodjizdy) pro priplatek za hodinu jizdy podle typu vozidla
 // out("arr",1,0,30,sazba,"dta",1)=typ hodin pro vypocet priplatku 0 doba jizdy / 1 odpracovane hodiny celkem
 // out("arr",1,0,31,"dta",1)=pocitat doplatek do mzdy 0/1
 // out("arr",1,0,31,"dta",2)=procento z castky (al=0)
 // out("arr",1,0,31,"dta",3)=algoritmus 0 KRODOS / 1 DP TEPLICE
 // out("arr",1,0,31,"dta",4)=limit(mm) (al=1)
 // out("arr",1,0,31,"dta",5)=castka(kc)(al=1)
 // out("arr",1,0,31,"dta",6)=id_provozovny, kde se doplatek pocita (pro DP Teplice) ... idprv;idprv;...
 // out("arr",1,0,32)=jak pocitat hodiny v SoNe,Sv v pripade pendlu 0 automaticky / 1 rucne zadavat
 // out("arr",1,0,33)=dopocitavat diety od půlnoci/do pulnoci 0 ne / 1 ano (pro vypocet dle ciselníku tuz. diet)
 // out("arr",1,0,34)=v pripade pendlu nepouzivat diety zadane pro pendl 0 pouzit / 1 nepouzit (SA - pendl pouzivaji pro zahranicni cesty a maji zahranicni diety) 
 // out("arr",1,0,35,sazba)=idtyp~idtyp~ ... sazby (kc\km) pro priplatek za hodinu jizdy podle typu vozidla
 // out("arr",1,0,36)=sledovat samostatne zpozdeni na DZVA nad minutovy limit (xx min na dokladu)
 // out("arr",1,0,37)=napocitat celkovou dobu zpozdeni do odpracovane doby(pouze v pripade, kdy se doba zpozdeni sleduje ,1,0,28)=1 
 // pravidelna doprava casova
 // =========================
 // out("arr",1,1,1)=RIDIC zakladni hod.tarif (kc/hod)
 // out("arr",1,1,1,"prv",idprv)=RIDIC zakladni hod.tarif pro provoz(kc/hod)
 // out("arr",1,1,1,"arr",1,idpol)="" id hodinovych polozek, ktere se pocitaji zakladnim hodinovym tarifem (ciselnik 33)
 // out("arr",1,1,2)=RIDIC zakladni vykonovy tarif (jizda+manipulace) (kc/km)
 // out("arr",1,1,2,"prv",idprv)=RIDIC zakladni vykonovy tarif (jizda+manipulace) pro provoz (kc/km)
 // out("arr",1,1,2,"arr",1,idpol)="" id hodinovych polozek, ktere se pocitaji zakladnim vykonovym tarifem (ciselnik 33)
 // out("arr",1,1,3)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - vnitro % ze sazby
 // out("arr",1,1,3,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu pro provoz - vnitro % ze sazby
 // out("arr",1,1,4)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - dalkova % ze sazby
 // out("arr",1,1,4,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu  pro provoz - dalkova % ze sazby
 // out("arr",1,1,5)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - mestska % ze sazby
 // out("arr",1,1,5,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu pro provoz - mestska % ze sazby
 // out("arr",1,1,6)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - primestska % ze sazby
 // out("arr",1,1,6,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu pro provoz - primestska % ze sazby
 // out("arr",1,1,7)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - mezinarodni % ze sazby
 // out("arr",1,1,7,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu pro provoz - mezinarodni % ze sazby
 // out("arr",1,1,8)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu - smluvni % ze sazby
 // out("arr",1,1,8,"prv",idprv)=RIDIC prirazka k sazbe za hodinu vykonu podle druhu provozu pro provoz - smluvni % ze sazby
 // out("arr",1,1,9)=RIDIC sazba za hodinu cekani (kc/hod)
 // out("arr",1,1,9,"prv",idprv)=RIDIC sazba za hodinu cekani pro provozovnu
 // out("arr",1,1,10)=RIDIC limit cekani (min) pro dalsi sazbu
 // out("arr",1,1,10,"prv",idprv)=RIDIC limit cekani (min) pro dalsi sazbu pro provozovnu
 // out("arr",1,1,11)=RIDIC dalsi sazba pro cekani (po limitu v out("arr",1,1,10)) (kc/hod)
 // out("arr",1,1,11,"prv",idprv)=RIDIC dalsi sazba pro cekani (po limitu v out("arr",1,1,10)) pro provozovnu (kc/hod)
 // out("arr",1,1,12)=RIDIC sazba za hodinu cekani v MHD (kc/hod)
 // out("arr",1,1,12,"prv",idprv)=RIDIC sazba za hodinu cekani v MHD (kc/hod) pro provoz
 // out("arr",1,1,13)=RIDIC priplatek za kloubovy autobus (kc/km)
 // out("arr",1,1,13,"prv",idprv)=RIDIC priplatek za kloubovy autobus pro provoz(kc/km)
 // out("arr",1,1,14)=RIDIC priplatek za prives (kc/km)
 // out("arr",1,1,15)=RIDIC priplatek za praci v noci (kc/hod)
 // out("arr",1,1,15,"prv",idprv)=RIDIC priplatek za praci v noci pro provoz (kc/hod)
 // out("arr",1,1,16)=RIDIC priplatek za km mesto (kc/km)
 // out("arr",1,1,17)=RIDIC inkaso (brasna, příplatek za odbavení) bezny bus (kc/hod)
 // out("arr",1,1,18)=RIDIC inkaso (brasna, příplatek za odbavení) kloubovy bus (kc/hod)
 // out("arr",1,1,19)=RIDIC inkaso (brasna, příplatek za odbavení) mesto bezny bus (kc/hod)
 // out("arr",1,1,20)=RIDIC inkaso (brasna, příplatek za odbavení) mesto kloubovy bus (kc/hod)
 // out("arr",1,1,21)=RIDIC priplatek za invalidni plosinu (kc/den)
 // out("arr",1,1,22)=RIDIC sazba za pohotovost spolujizda (kc/hod)
 // out("arr",1,1,22,"prv",idprv)=RIDIC sazba za pohotovost spolujizda (kc/hod) pro provozovnu
 // out("arr",1,1,23)=RIDIC sazba za odpocinek (kc/hod)
 // out("arr",1,1,23,"prv",idprv)=RIDIC sazba za odpocinek (kc/hod) pro provozovnu
 // out("arr",1,1,24)=RIDIC sazba za delenou smenu (kc/hod)
 // out("arr",1,1,24,"prv",idprv)=RIDIC sazba za delenou smenu (kc/hod) pro provozovnu
 // out("arr",1,1,25)=PRUVODCI zakladni hod.tarif (kc/hod)
 // out("arr",1,1,25,"prv",idprv)=PRUVODCI zakladni hod.tarif (kc/hod) pro provozovnu
 // out("arr",1,1,26)=PRUVODCI sazba za hodinu vykonu jizda+manipulace (kc/hod)
 // out("arr",1,1,26,"prv",idprv)=PRUVODCI sazba za hodinu vykonu jizda+manipulace (kc/hod) pro provozovnu
 // out("arr",1,1,27)=PRUVODCI sazba za hodinu cekani (kc/hod)
 // out("arr",1,1,27,"prv",idprv)=PRUVODCI sazba za hodinu cekani (kc/hod) pro provozovnu
 // out("arr",1,1,28)=PRUVODCI priplatek za kloubovy autobus (kc/hod)
 // out("arr",1,1,28,"prv",idprv)=PRUVODCI priplatek za kloubovy autobus (kc/hod) pro provozovnu
 // out("arr",1,1,29)=PRUVODCI priplatek za praci v noci (kc/hod)
 // out("arr",1,1,29,"prv",idprv)=PRUVODCI priplatek za praci v noci (kc/hod) pro provozovnu
 // out("arr",1,1,30)=PRUVODCI inkaso (brasna) bezny bus (kc/hod)
 // out("arr",1,1,31)=PRUVODCI inkaso (brasna) kloubovy bus (kc/hod)
 // out("arr",1,1,32)=zpusob vypoctu mzdy za cekani 1 jedna sazba / 2 dve sazby podle delky cekani / 3 2 sazby podle toho zda turnus obsahuje a nebo neobsahuje spoje do 50 km
 // out("arr",1,1,32,"prv",idprv)=zpusob vypoctu mzdy za cekani 0 nezadano / 1 jedna sazba / 2 dve sazby podle delky cekani / 3 2 sazby podle toho zda turnus obsahuje a nebo neobsahuje spoje do 50 km pro provoz
 // out("arr",1,1,33,1)=RIDIC priplatek za odbaveni vnitro (kc/hod)
 // out("arr",1,1,33,1,"prv",idprv)=RIDIC priplatek za odbaveni vnitro (kc/hod) pro provozovnu
 // out("arr",1,1,33,2)=RIDIC priplatek za odbaveni dalkovy (kc/hod)
 // out("arr",1,1,33,2,"prv",idprv)=RIDIC priplatek za odbaveni dalkovy (kc/hod) pro provozovnu
 // out("arr",1,1,33,3)=RIDIC priplatek za odbaveni mestsky (kc/hod)
 // out("arr",1,1,33,3,"prv",idprv)=RIDIC priplatek za odbaveni mestsky (kc/hod) pro provozovnu
 // out("arr",1,1,33,4)=RIDIC priplatek za odbaveni primestsky (kc/hod)
 // out("arr",1,1,33,4,"prv",idprv)=RIDIC priplatek za odbaveni primestsky (kc/hod) pro provozovnu
 // out("arr",1,1,33,5)=RIDIC priplatek za odbaveni mezinarodni (kc/hod)
 // out("arr",1,1,33,5,"prv",idprv)=RIDIC priplatek za odbaveni mezinarodni (kc/hod) pro provozovnu
 // out("arr",1,1,33,6)=RIDIC priplatek za odbaveni smluvni (kc/hod)
 // out("arr",1,1,33,6,"prv",idprv)=RIDIC priplatek za odbaveni smluvni (kc/hod) pro provozovnu
 // out("arr",1,1,33,7)=RIDIC priplatek za odbaveni rezijni (kc/hod)
 // out("arr",1,1,33,7,"prv",idprv)=RIDIC priplatek za odbaveni rezijni (kc/hod) pro provozovnu
 // out("arr",1,1,34)=RIDIC sazba za pauzu na obed (kc/hod)
 // out("arr",1,1,34,"prv",idprv)=RIDIC sazba za pauzu na obed (kc/hod)
 // out("arr",1,1,35)=RIDIC sazba za nocovani (kc/hod)
 // out("arr",1,1,35,"prv",idprv)=RIDIC sazba za nocovani (kc/hod)
 // out("arr",1,1,36)=RIDIC sazba za přerušení práce nezapočtené (kc/hod)
 // out("arr",1,1,36,"prv",idprv)=RIDIC sazba za přerušení práce nezapočtené (kc/hod)
 // out("arr",1,1,37)=RIDIC sazba za přerušení práce nezapočtené v MHD (kc/hod)
 // out("arr",1,1,37,"prv",idprv)=RIDIC sazba za přerušení práce nezapočtené v MHD (kc/hod) pro provozovnu
 // out("arr",1,1,38)=RIDIC priplatek za odpracované hodiny na turnuse sazba 1(kc/hod)
 // out("arr",1,1,39)=RIDIC priplatek za odpracované hodiny na turnuse sazba 2(kc/hod)
 // out("arr",1,1,40)=RIDIC priplatek za odpracované hodiny ve ztíženém prostředí (kc/hod)
 // out("arr",1,1,41)=RIDIC sazba za hodiny vlozeneho vykonu (kc/hod)
 // out("arr",1,1,42)=RIDIC priplatek za trolejbus (kc/km)
 // out("arr",1,1,42,"prv",idprv)=RIDIC priplatek za trolejbus pro provoz(kc/km)
 // pravidelna doprava vykonova
 // ===========================
 // out("arr",1,2,1)=RIDIC zakladni hod.tarif (kc/hod)
 // out("arr",1,2,1,"arr",1,idpol)=idpol id hodinovych polozek, ktere se pocitaji zakladnim hodinovym tarifem (ciselnik 34)
 // out("arr",1,2,2)=RIDIC sazba za manipulace (kc/man)
 // out("arr",1,2,3)=RIDIC sazba za manipulace kloub.autobus (kc/man)
 // out("arr",1,2,4)=RIDIC sazba za hodinu cekani (kc/hod)
 // out("arr",1,2,5)=RIDIC priplatek za kloubovy autobus(kc/km)
 // out("arr",1,2,6)=RIDIC priplatek za prives(kc/km)
 // out("arr",1,2,7)=RIDIC priplatek za praci v noci(kc/hod)
 // out("arr",1,2,8)=RIDIC inkaso, bezny autobus (kc/hod)
 // out("arr",1,2,9)=RIDIC inkaso, kloubovy autobus (kc/hod)
 // out("arr",1,2,10)=RIDIC priplatek za invalidni plosinu (kc/den)
 // out("arr",1,2,11)=RIDIC sazba za pohotovost spolujizda (kc/hod)
 // out("arr",1,2,12)=RIDIC sazba za odpocinek (kc/hod)
 // out("arr",1,2,13)=RIDIC sazba za delenou smenu (kc/hod)
 // out("arr",1,2,14)=RIDIC sazba za km vnitro (kc/km)
 // out("arr",1,2,15)=RIDIC sazba za km dalkovy (kc/km)
 // out("arr",1,2,16)=RIDIC sazba za km mestsky (kc/km)
 // out("arr",1,2,17)=RIDIC sazba za km primestsky (kc/km)
 // out("arr",1,2,18)=RIDIC sazba za km mezinarodni (kc/km)
 // out("arr",1,2,19)=RIDIC sazba za km smluvni (kc/km)
 // out("arr",1,2,20)=RIDIC sazba za km rezijni (kc/km)
 // out("arr",1,2,21)=RIDIC priplatek za km objizdky (kc/km)
 // out("arr",1,2,22)=km pro vypocet mzdy kratit poctem ridicu (0 ne / 1 ano)
 // out("arr",1,2,23)=v případě jízdy více řidičů připočítat ke mzdě za výkon 0 nic / 1 celk.doba jizdy (ji+spj)/pocet ridicu x zakladni tarif
 // out("arr",1,2,24)=RIDIC sazba za přerušení práce nezapočtené (kc/hod)
 // nepravidelna doprava - obecne
 // =============================
 // out("arr",2,0,1)=1 / 2 / 3 - vypocet mzdy 1 casova / 2 vykonova / 3 casova UH
 // out("arr",2,0,1,"prv",idprv)=vypocet mzdy pro provozovnu 0 nenastaveno / 1 casova / 2 vykonova / 3 pausalni (UH)
 // out("arr",2,0,1,"ns",idns)=vypocet mzdy pro ns ridice 0 nenastaveno / 1 casova / 2 vykonova / 3 pausalni (UH)
 // out("arr",2,0,2)=praci se rozumi prac vykonod 22.00 do 6.00 (0 ne, je v jine sazbe / 1 ano, bude se pocitat)
 // out("arr",2,0,3)=prace v noci, limit, po kterem se bude pocitat (za SJ) (min)
 // out("arr",2,0,4)=soubeh svatek + so,ne, priplatek (0 svatek + so,ne / 1 svatek) (zadavani)
 // out("arr",2,0,5)=přednastavit KčPau:
 //                  0 ne
 //                  1 ano, částku xx v případě jízdy v so a ne v případě že km nejsou vetsi nez yy (jsou-li zadány)
 //                  2 ano, částku sazba xx x celk.km pro řidiče z ns yy (více stredisek)
 // out("arr",2,0,5,"arr",1,"dta",1)=xx částka (kc) pro out("arr",2,0,5)=1
 // out("arr",2,0,5,"arr",1,"dta",2)=yy limit km (km) pro out("arr",2,0,5)=1
 // out("arr",2,0,5,"arr",2,"dta",1)=xx sazba (kc) pro out("arr",2,0,5)=2
 // out("arr",2,0,5,"arr",2,"dta",2)=yy seznam ns (ns~ns~...) pro out("arr",2,0,5)=2
 // out("arr",2,0,6)=jakou část čekání přednastavit pro uznání do odpracované doby (%)
 // out("arr",2,0,6,"prv",idprv)=jakou část čekání přednastavit pro uznání do odpracované doby (%) pro provozovnu
 // out("arr",2,0,7)=způsob zadání a práce s BP:
 //					 0 nezadávat
 //					 1 zadat
 // nastavení pro out("arr",2,0,7)=1:
 // out("arr",2,0,7,"arr",1,"dta",1)=0 nedělit / 1 dělit počtem řidičů
 // out("arr",2,0,7,"arr",1,"dta",2)=0 nezapočítat / 1 započítat do odpracované doby
 // out("arr",2,0,7,"arr",1,"dta",3)=0 neplatit / 1 platit tarifem
 // out("arr",2,0,7,"arr",1,"dta",4)=0 nezapocitavat do so,ne,sv / 1 zapocitavat do so,ne,sv 
 // out("arr",2,0,8)=prednastavit dodk na SJ 0 ne / 1 ano hodiny (hodnota se prednastavi do formulare)
 // out("arr",2,0,8,"arr",1,"dta",1)=dodk bezny bus (min)
 // out("arr",2,0,8,"arr",1,"dta",2)=dodk kloubovy bus (min)
 // out("arr",2,0,9, ... automatické krácení doby jízdy řidiče v případě spolujízdy více řidičů
 // out("arr",2,0,9,"dta",1)=0 automaticky nekrátit / 1 automaticky krátit
 // out("arr",2,0,9,"dta",2)=% z celkové doby jízdy (%)
 // out("arr",2,0,9,"prv",idprv,"dta",1)=0 nenastaveni / 1 automaticky nekrátit / 2 automaticky krátit - pro provozovnu
 // out("arr",2,0,9,"prv",idprv,"dta",2)=% z celkové doby jízdy (%) pro provozovnu
 // out("arr",2,0,10, ...koeficient kraceni mzdy pri spolujizde vice ridicu
 // out("arr",2,0,10,"dta",1)=0 automaticky nekrátit / 1 automaticky krátit
 // out("arr",2,0,10,"dta",2)=% z celkové mzdy za vykon jízdy (%)
 // out("arr",2,0,11)=idpol~idpol~ ... id polozek pro vypocet hodin v noci z nepravidelne
 // nepravidelna doprava casova
 // ===========================
 // out("arr",2,1,1)=RIDIC zakladni hod.tarif (kc/hod)
 // out("arr",2,1,1,"prv",idprv)=RIDIC zakladni hod.tarif (kc/hod) pro provozovnu
 // out("arr",2,1,2)=RIDIC zakladni vykonovy tarif (jizda) (kc/hod)
 // out("arr",2,1,2,"prv",idprv)=RIDIC zakladni vykonovy tarif (jizda) (kc/hod) pro provozovnu
 // out("arr",2,1,3)=jednotky pro sazbu za cekani (1 kc / 2 % os.tarif) 
 // out("arr",2,1,4)=RIDIC sazba za cekani pro vnitro do limitu (kc/hod)
 // out("arr",2,1,4,"prv",idprv)=RIDIC sazba za cekani pro vnitro do limitu (kc/hod) pro provozovnu
 // out("arr",2,1,5)=RIDIC sazba za cekani pro zahranici do limitu (kc/hod)
 // out("arr",2,1,5,"prv",idprv)=RIDIC sazba za cekani pro zahranici do limitu (kc/hod) pro provozovnu
 // out("arr",2,1,6)=RIDIC sazba za cekani do limitu (%zakl.os.tarifu)
 // out("arr",2,1,6,"prv",idprv)=RIDIC sazba za cekani do limitu (%zakl.os.tarifu) pro provozovnu
 // out("arr",2,1,7)=RIDIC limit cekani (min) pro dalsi sazbu
 // out("arr",2,1,8)=RIDIC sazba za cekani pro vnitro po limitu (kc/hod)
 // out("arr",2,1,8,"prv",idprv)=RIDIC sazba za cekani pro vnitro po limitu (kc/hod) pro provozovnu
 // out("arr",2,1,9)=RIDIC sazba za cekani pro zahranici po limitu (kc/hod)
 // out("arr",2,1,9,"prv",idprv)=RIDIC sazba za cekani pro zahranici po limitu (kc/hod) pro provozovnu
 // out("arr",2,1,10)=RIDIC sazba za cekani po limitu (%zakl.os.tarifu)
 // out("arr",2,1,10,"prv",idprv)=RIDIC sazba za cekani po limitu (%zakl.os.tarifu) pro provozovnu
 // out("arr",2,1,11)=RIDIC sazba za pohotovost pri spolujizde (kc/hod)
 // out("arr",2,1,11,"prv",idprv)=RIDIC sazba za pohotovost pri spolujizde (kc/hod) pro provozovnu
 // out("arr",2,1,12)=RIDIC priplatek za kloubovy autobus (kc/km)
 // out("arr",2,1,12,"prv",idprv)=RIDIC priplatek za kloubovy autobus (kc/km)
 // out("arr",2,1,13)=RIDIC priplatek za vlek (kc/km)
 // out("arr",2,1,13,"prv",idprv)=RIDIC priplatek za vlek (kc/km)
 // out("arr",2,1,14)=RIDIC priplatek za praci v noci (kc/hod)
 // out("arr",2,1,14,"prv",idprv)=RIDIC priplatek za praci v noci (kc/hod)
 // out("arr",2,1,15)=jednotky pro sazbu za pohotovost spolujizda (1 kc / 2 % os.tarif)
 // out("arr",2,1,16)=RIDIC sazba za pohotovost pri spolujizde (%zakl.os.tarifu)
 // out("arr",2,1,16,"prv",idprv)=RIDIC sazba za pohotovost pri spolujizde (%zakl.os.tarifu) pro provozovnu
 // out("arr",2,1,17)=RIDIC priplatek za ztížené prostředí (kc/hod)
 // out("arr",2,1,18)=RIDIC sazba za cekani pri vlozenem vykonu (kc/hod)
 // out("arr",2,1,18,"prv",idprv)=RIDIC sazba za cekani pri vlozenem vykonu (kc/hod) pro provozovnu
 // nepravidelna doprava vykonova
 // =============================
 // out("arr",2,2,1)=RIDIC zakladni hod.tarif (kc/hod)
 // out("arr",2,2,2)=jednotky pro sazbu za cekani (1 kc / 2 % os.tarif)
 // out("arr",2,2,3)=RIDIC sazba za cekani pro vnitro do limitu (kc/hod)
 // out("arr",2,2,4)=RIDIC sazba za cekani pro zahranici do limitu (kc/hod)
 // out("arr",2,2,5)=RIDIC sazba za cekani do limitu (%zakl.os.tarifu)
 // out("arr",2,2,6)=RIDIC limit cekani (min) pro dalsi sazbu
 // out("arr",2,2,7)=RIDIC sazba za cekani pro vnitro po limitu (kc/hod)
 // out("arr",2,2,8)=RIDIC sazba za cekani pro zahranici po limitu (kc/hod)
 // out("arr",2,2,9)=RIDIC sazba za cekani po limitu (%zakl.os.tarifu)
 // out("arr",2,2,10)=RIDIC sazba za pohotovost pri spolujizde (kc/hod)
 // out("arr",2,2,11)=RIDIC priplatek za kloubovy autobus (kc/km)
 // out("arr",2,2,11,"prv",idprv)=RIDIC priplatek za kloubovy autobus (kc/km) pro provozovnu
 // out("arr",2,2,12)=RIDIC priplatek za vlek (kc/km)
 // out("arr",2,2,12,"prv",idprv)=RIDIC priplatek za vlek (kc/km) pro provozovnu
 // out("arr",2,2,13)=RIDIC priplatek za praci v noci (kc/hod)
 // out("arr",2,2,13,"prv",idprv)=RIDIC priplatek za praci v noci (kc/hod) pro provozovnu)
 // out("arr",2,2,14)=RIDIC zakladni sazba za km obsazený (kc/km)
 // out("arr",2,2,14,"prv",idprv)=RIDIC zakladni sazba za km obsazený (kc/km) pro provozovnu
 // out("arr",2,2,14,"tpa",typa)=RIDIC zakladni sazba za km obsazený dle typu auta (kc/km)
 // out("arr",2,2,15)=RIDIC zakladni sazba za km neobsazený (kc/km)
 // out("arr",2,2,16)=RIDIC zakladni sazba za km režijní (kc/km)
 // out("arr",2,2,17)=limitKm1 km pro jinou sazbu za km - platí pokud jsou km menší (km)
 // out("arr",2,2,18)=RIDIC sazba za km obsazený (kc/km) (pokud jsou celk.km do limitKm1)
 // out("arr",2,2,18,"prv",idprv)=RIDIC sazba za km obsazený (kc/km) (pokud jsou celk.km do limitKm1) pro provozovnu
 // out("arr",2,2,19)=RIDIC sazba za km neobsazený (kc/km) (pokud jsou celk.km do limitKm1)
 // out("arr",2,2,20)=RIDIC sazba za km režijní (kc/km) (pokud jsou celk.km do limitKm1)
 // out("arr",2,2,21)=limitKm2 km pro jinou sazbu za Km - platí pokud jsou km vetší (km)
 // out("arr",2,2,22)=RIDIC sazba za km obsazený (kc/km) (pokud jsou celk.km větší než limitKm2)
 // out("arr",2,2,22,"prv",idprv)=RIDIC sazba za km obsazený (kc/km) (pokud jsou celk.km větší než limitKm2)
 // out("arr",2,2,23)=RIDIC sazba za km neobsazený (kc/km) (pokud jsou celk.km větší než limitKm2)
 // out("arr",2,2,24)=RIDIC sazba za km režijní (kc/km) (pokud jsou celk.km větší než limitKm2)
 // out("arr",2,2,25)=v případě, že po výpočtu mzdové složky za km nedosáhne zákl.tarifu pak:
 //                   0 nechat to tak
 //                   1 prepocitat jako doba jizdy x zakladni tarif
 //                   2 prepocitat jako doba jizdy+cekani x zakladni tarif
 // out("arr",2,2,26)=limitKm3 přepočet mzdové složky (out("arr",2,2,25)>0) v případě, že jsou km do limitKm3
 // out("arr",2,2,27)=v případě jízdy více řidičů připočítat ke mzdě za výkon 0 nic / 1 doba jizdy řidiče (ji-spj)  x zakladni tarif / 2 celkova doba jízdy / počet řidiču x zakladni tarif 
 // out("arr",2,2,28)=v případě jízdy v so a ne:
 //					 0 nic
 //					 1 sazby za km násobit hodnotou xx - out("arr",2,2,28,"arr",1,"dta",1) v případě že km nejsou vetsi nez yy - out("arr",2,2,28,"arr",1,"dta",2) (jsou-li zadány)
 // out("arr",2,2,28,"arr",1,"dta",1)=xx (koeficient pro násobení)
 // out("arr",2,2,28,"arr",1,"dta",2)=yy (limit km)
 // out("arr",2,2,29)=v případě jízdy více řidičů mzdu za km počítat 0 z celkových km / 1 z celkovych km ridice (ne pendl)¨
 // out("arr",2,2,30)=RIDIC priplatek za ztížené prostředí (kc/hod)
 // out("arr",2,2,31)=v případě, že km jsou menší než limit:
 //                   0 nic
 //					  1 sazby za km násobit hodnotou xx - out("arr",2,2,31,"arr",1,"dta",1) v případě že km nejsou vetsi nez yy - out("arr",2,2,31,"arr",1,"dta",2) (jsou-li zadány) a druh zájezdu není out("arr",2,2,31,"arr",1,"arr",1,iddza)=""
 // out("arr",2,2,31,"arr",1,"dta",1)=xx (koeficient pro násobení)
 // out("arr",2,2,31,"arr",1,"dta",2)=yy (limit km)
 // out("arr",2,2,31,"arr",1,"arr",1,iddza)="" (druhy zájezdů, pro které to neplatí)
 // out("arr",2,2,32)=id_provozovny, kde neplatí přepočet mzdové složky (pro out("arr",2,2,25)>0))... idprv;idprv;...
 // grafikon
 // ========
 // out("arr",3,1)= snizena hodinova sazba (HSA)
 // out("arr",3,2)= specialní hodinova sazba (UOP)
 // out("arr",3,3)= sazba pro zalohove hodiny
 // out("arr",3,4)= zpusob prace se zalohovymi hodinami 0 ruční evidence, sledování od začátku roku / 1 automatická evidence přes jeden měsíc
 // premie pravidelna
 // =================
 // out("arr",4,1)=idpol~idpol~ ... premie pravidelna doprava, idpol je id polozky, ktera se zapocitava do vykonu (ciselnik 31)
 // premie nepravidelna
 // ===================
 // out("arr",5,1)=idpol~idpol~ ... premie nepravidelna doprava, idpol je id polozky, ktera se zapocitava do vykonu (ciselnik 32) (zatim natvrdo bez nastaveni)
 // out("arr",5,2)=jak platit premie 0 zakladnim tarifem / 1 vykonovym tarifem
 // premie pravidelna,nepravidelna,grafikon dohromady
 // =================================================
 // out("arr",6,1)=idpol~idpol~ ... hodinove polozky pro vypocet premii z pravidelne dopravy, idpol je id polozky, ktera se zapocitava do vykonu (ciselnik 31)
 // out("arr",6,2)=idpol~idpol~ ... hodinove polozky pro vypocet premii z nepravidelne dopravy, idpol je id polozky, ktera se zapocitava do vykonu (ciselnik 32)
 // out("arr",6,3)=idpol~idpol~ ... hodinove polozky pro vypocet premii z grafikonu, idpol je id polozky, ktera se zapocitava do vykonu (ciselnik 20)
 // out("arr",6,4)=zakladni sazba za hod premii (kc/hod)
 // out("arr",6,4,"prv",idprv)=zakladni sazba za hod premii pro provozovnu (kc/hod)
 // out("arr",6,5,3)=zakladni sazba za hod premii pro mestskou dopravu (kc/hod)
 // out("arr",6,5,3,"prv",idprv)=zakladni sazba za hod premii pro mestskou dopravu pro provozovnu (kc/hod)
 n (idfa,nmsp,in,out)
 s $zt="err" s err="" k out
 // ======
 // obecne
 // ======
 s out("arr",0,1)=($d(^[nmsp]OI("TOS"))>0)
 s out("arr",0,2)=($d(^[nmsp]OI("TOS","JIM"))>0)
 // fixni dodk
 s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixdodk"))
 f cnt=1:1:13 d
 .s out("arr",0,3,"dta",cnt)=$p(val,"~",cnt)
 .s:(cnt<5)!(cnt=9) out("arr",0,3,"dta",cnt)=+out("arr",0,3,"dta",cnt)					//nastaveni, ne sazby
 .s:(cnt=12)!(cnt=13) out("arr",0,3,"dta",cnt)=$tr(out("arr",0,3,"dta",cnt),"|","~")	//id hod. polozek
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","docs","set","fixdodk","zp",zp)) q:zp=""  d
 .s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixdodk","zp",zp))
 .f cnt=2,5,6,7,8,10,11 d
 ..s out("arr",0,3,"arr",1,(zp#100),"dta",cnt)=$p(val,"~",cnt)
 ..s:(cnt<5)!(cnt=9) out("arr",0,3,"arr",1,(zp#100),"dta",cnt)=+out("arr",0,3,"arr",1,(zp#100),"dta",cnt)
 // fixni kc
 s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixkc"))
 f cnt=1:1:5 s out("arr",0,4,"dta",cnt)=$p(val,"~",cnt) s:cnt<4 out("arr",0,4,"dta",cnt)=+out("arr",0,4,"dta",cnt)
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","docs","set","fixkc","zp",zp)) q:zp=""  d
 .s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixkc","zp",zp))
 .f cnt=4,5 s out("arr",0,4,"arr",1,(zp#100),"dta",cnt)=$p(val,"~",cnt)
 // fixni hod
 s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixhod"))
 f cnt=1:1:6 s out("arr",0,5,"dta",cnt)=$p(val,"~",cnt) s:cnt<4 out("arr",0,5,"dta",cnt)=+out("arr",0,5,"dta",cnt)
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","docs","set","fixhod","zp",zp)) q:zp=""  d
 .s val=$g(^[nmsp]OI(idfa,"jb","docs","set","fixhod","zp",zp))
 .f cnt=4,5 s out("arr",0,5,"arr",1,(zp#100),"dta",cnt)=$p(val,"~",cnt)
 // jak pocitat premie
 s out("arr",0,6)=+$g(^[nmsp]OI(idfa,"jb","premie","mode"))
 // sledovani odpracovanych dnu
 s val=$g(^[nmsp]OI(idfa,"jb","docs","set","dokldny"))
 f cnt=1:1:2 d
 .s out("arr",0,7,"dta",cnt)=+$p(val,"~",cnt)
 // z jakeho obdobi pocitat premie
 s out("arr",0,8)=+$g(^[nmsp]OI(idfa,"jb","premie","obdobi"))
 // jak pocitat mesicni fond ridice
 s out("arr",0,9)=+$g(^[nmsp]OI(idfa,"jb","fond","mode"))
 // ===========================
 // pravidelna doprava - obecne
 // ===========================
 s out("arr",1,0,1)=+$g(^[nmsp]OI("MZP")) s:'out("arr",1,0,1) out("arr",1,0,1)=1
 s out("arr",1,0,2)=$g(^[nmsp]OI("MZP","zastavkaJR"))
 s out("arr",1,0,3)=$g(^[nmsp]OI("MZP","SazbaZaSpoj"))
 s out("arr",1,0,4)=$g(^[nmsp]OI("MZP","PLYN"))
 s out("arr",1,0,5)=""
 i $g(^[nmsp]OI("MZP","CEK","MAX"))'="" s out("arr",1,0,5)=$$hm^OBapiED($g(^[nmsp]OI("MZP","CEK","MAX")))
 s out("arr",1,0,6)=+$g(^[nmsp]OI("MZP","CEK","ZAO"))
 s out("arr",1,0,7)='($d(^[nmsp]OI("MZP","NOC","NEN"))>0)
 s out("arr",1,0,8)="" 
 i $g(^[nmsp]OI("MZP","NOC","NOD"))'="" s out("arr",1,0,8)=$$hm^OBapiED($g(^[nmsp]OI("MZP","NOC","NOD")))
 s out("arr",1,0,9)=+$g(^[nmsp]OI("MZP","SVA"))
 s out("arr",1,0,10)=$g(^[nmsp]OI("MZP","SKO"))
 s out("arr",1,0,11)=$g(^[nmsp]OI("MZP","ZASILKY"))
 s out("arr",1,0,12)=+$g(^[nmsp]OI("MZP","SETKOEFMZ"))
 s out("arr",1,0,13)=$g(^[nmsp]OI("MZP","2SMENA"))
 //priplatky za linky a spoje, zakladni nastaveni
 s val=$g(^[nmsp]OBlin)
 f cnt=1:1:4 d
 .s out("arr",1,0,14,"dta",cnt)=$p(val,"~",cnt)
 s li="" f  s li=$o(^[nmsp]OBlin(li)) q:li=""  d
 .q:'li
 .s val=$g(^[nmsp]OBlin(li)) //q:'val
 .f cnt=1:1:2 d
 ..s out("arr",1,0,14,"arr",1,li,"dta",cnt)=$p(val,"~",cnt)
 .s sp="" f  s sp=$o(^[nmsp]OBlin(li,sp)) q:sp=""  d
 ..s val=$g(^[nmsp]OBlin(li,sp)) //q:'val
 ..f cnt=1:1:2 d
 ...s out("arr",1,0,14,"arr",1,li,"arr",sp,"dta",cnt)=$p(val,"~",cnt)
 s out("arr",1,0,14,"arr",2,"dta",1)=$g(^[nmsp]OBlin("rez"))
 f id=1:1:6 s out("arr",1,0,14,"arr",2,"arr",id,"dta",1)=$g(^[nmsp]OBlin("rez",id))
 //s out("arr",1,0,15)=0
 //s val=$g(^[nmsp]OI("MZP","FIXDODK"))
 //i (+$p(val,":",1))&(+$p(val,":",2)) d
 //.s out("arr",1,0,15)=1
 //.s out("arr",1,0,15,"arr",1,"dta",1)=$$hm^OBapiED($p(val,":",1))
 //.s out("arr",1,0,15,"arr",1,"dta",2)=$$hm^OBapiED($p(val,":",2))
 //.s out("arr",1,0,15,"arr",1,"dta",3)=$p(val,":",5)
 //s val=$g(^[nmsp]OI("MZP","FKCDODK"))
 //i (+$p(val,":",1))&(+$p(val,":",2)) d
 //.s out("arr",1,0,15)=2
 //.s out("arr",1,0,15,"arr",2,"dta",1)=$p(val,":",1)
 //.s out("arr",1,0,15,"arr",2,"dta",2)=$p(val,":",2)
 //.s out("arr",1,0,15,"arr",2,"dta",3)=$p(val,":",5)
 //
 // diety - způsob, prednastaveni podle provozu
 i ('$d(^[nmsp]OI("MZP","DIE","MODE")))&(+$g(^[nmsp]OI("MZP","DIE","KOEF"))) s ^[nmsp]OI("MZP","DIE","MODE")=1
 // zpusob vypoctu diet
 s out("arr",1,0,15)=+$g(^[nmsp]OI("MZP","DIE","MODE"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP","DIE","MODE","zp",zp)) q:zp=""  s out("arr",1,0,15,"prv",(zp#100))=$g(^[nmsp]OI("MZP","DIE","MODE","zp",zp))
 // sazba za diety podle doby provozu
 s out("arr",1,0,16)=$g(^[nmsp]OI("MZP","DIE","KOEF"))
 // lokalni zastavky pro vypocet diet - misto vykonu prace - preruseni pro vypocet diet
 s zp="" f  s zp=$o(^[nmsp]OI("MZP","DIE","IDZST","zp",zp)) q:zp=""  d
 .s id="" f  s id=$o(^[nmsp]OI("MZP","DIE","IDZST","zp",zp,"arr",id)) q:id=""  d
 ..s out("arr",1,0,17,"prv",(zp#100),"arr",id)=""
 // automaticke kraceni doby jizdy pri spolujizde
 s out("arr",1,0,18,"dta",1)=+$p($g(^[nmsp]OI("MZP","AKJ")),"~",1)
 s out("arr",1,0,18,"dta",2)=$p($g(^[nmsp]OI("MZP","AKJ")),"~",2)
 // id polozek pro vypocet hodin v noci
 i '$d(^[nmsp]OI(idfa,"MZP","IDNC")) d
 .s ^[nmsp]OI(idfa,"MZP","IDNC")="-1~3~4~5~6~7~9~10~11~13~14~15~16~0"
 .i idfa="VS_CSAD" s ^[nmsp]OI(idfa,"MZP","IDNC")="-1~3~4~5~6~7~9~10~13~14"
 s out("arr",1,0,19)=$g(^[nmsp]OI(idfa,"MZP","IDNC"))
 //automaticky vypocet prestavky na jidlo
 s val=$g(^[nmsp]OI(idfa,"MZP","AOB"))
 f id=1:1:5 s out("arr",1,0,20,"dta",id)=$p(val,"~",id)
 //odecitat dodk nad turnusem (bez casove pozice)
 s out("arr",1,0,21)=+$g(^[nmsp]OI(idfa,"MZP","TDODKCEK"))
 //jak pocitat dodk nad turnusem na doklade s vice turnusy
 s out("arr",1,0,22)=+$g(^[nmsp]OI(idfa,"MZP","TDODKSET"))
 //jak pocitat nocovne nad turnusem na doklade s vice turnusy
 s out("arr",1,0,23)=+$g(^[nmsp]OI(idfa,"MZP","TNOCVSET"))
 // id polozek pro vypocet diet z prubehu dokladu
 i '$d(^[nmsp]OI(idfa,"MZP","IDDI")) d
 .s ^[nmsp]OI(idfa,"MZP","IDDI")="3~4~5~6~7~9~10~11~13~14~15~16"
 s out("arr",1,0,24)=$g(^[nmsp]OI(idfa,"MZP","IDDI"))
 // zapocitat cekani do odpracovane doby (zadava se % u turnusu) do hodin ve sv,so,ne 0 ne / 1 ano
 s out("arr",1,0,25)=+$g(^[nmsp]OI(idfa,"MZP","TCZSVSONE"))
 // zapocitat vyrovnavaci dobu zadanou nad trnusem do hodin ve sv,so,ne 0 ne / 1 ano
 s out("arr",1,0,26)=+$g(^[nmsp]OI(idfa,"MZP","TVYSVSONE"))
 // zapocitavat pauzu na jidlo do odpracovane doby 0 ne / 1 ano
 s out("arr",1,0,27)=+$g(^[nmsp]OI(idfa,"MZP","OBHC"))
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"MZP","OBHC","zp",zp)) q:zp=""  s out("arr",1,0,27,"prv",(zp#100))=$g(^[nmsp]OI(idfa,"MZP","OBHC","zp",zp))
 // jak evidovat zadane zpozdeni - 0 prodlouzit dobu jizdy spoje tak, aby nebyl narušen následující spoj / 1 pouze evidovat dobu zpozdeni
 s out("arr",1,0,28)=+$g(^[nmsp]OI(idfa,"MZP","ZPOZDENI","TYP"))
 // minimalni uznana doba zpozdeni na DZVA v min
 s out("arr",1,0,29)=$g(^[nmsp]OI(idfa,"MZP","ZPOZDENI","MINMM"))
 // priplatek za hodinu jizdy podle typu vozidla
 m out("arr",1,0,30)=^[nmsp]OI(idfa,"MZP","PRIHODJITYPRZ")
 // doplatek do mzdy
 s val=$g(^[nmsp]OI(idfa,"MZP","DOPLMZD"))
 f id=1:1:6 s out("arr",1,0,31,"dta",id)=$p(val,"~",id) s:(id=1)!(id=3) out("arr",1,0,31,"dta",id)=+(out("arr",1,0,31,"dta",id))
 // jak pocitat hodiny v SoNe,Sv v pripade pendlu 0 automaticky / 1 rucne zadavat
 s out("arr",1,0,32)=+$g(^[nmsp]OI(idfa,"MZP","PNDSONESV"))
 // dopocitavat diety od půlnoci/do pulnoci 0 ne / 1 ano
 s out("arr",1,0,33)=+$g(^[nmsp]OI("MZP","DIE","DOPPULNC"))
 // v pripade pendlu nepouzivat diety zadane pro pendl 0 pouzit / 1 nepouzit (SA - pendl pouzivaji pro zahranicni cesty a maji zahranicni diety) 
 s out("arr",1,0,34)=+$g(^[nmsp]OI("MZP","DIE","PENDLBEZDIET"))
 // priplatek za km podle typu vozidla
 m out("arr",1,0,35)=^[nmsp]OI(idfa,"MZP","PRIKMTYPRZ")
 // sledovat samostatne zpozdeni na DZVA nad minutovy limit (xx min na dokladu)
 s out("arr",1,0,36)=$g(^[nmsp]OI(idfa,"MZP","ZPOZDENI","SLEDOVAT_NAD_MINMM")) 
 // napocitat celkovou dobu zpozdeni do odpracovane doby 0 ne / 1 ano (pouze v pripade, kdy se doba zpozdeni sleduje ,1,0,28)=1)
 s out("arr",1,0,37)=+$g(^[nmsp]OI(idfa,"MZP","ZPOZDENI","HC")) 
 // ===================
 // pravidelna - casova
 // ===================
 // pravidelna doprava casova - prevod do nove struktury
 i '$d(^[nmsp]OI("MZP",1,"ZAK")) d
 .s ^[nmsp]OI("MZP",1,"ZAK")=$g(^[nmsp]OI("MZP",1,"TAR"))
 .f id=3,5,6,7,8,9,12 s ^[nmsp]OI("MZP",1,"ZAK","ih",id)=""
 i '$d(^[nmsp]OI("MZPP",1,"ZAK")) d
 .s ^[nmsp]OI("MZPP",1,"ZAK")=$g(^[nmsp]OI("MZPP",1,"TAR"))
 i '$d(^[nmsp]OI("MZP",1,"VYK","ih")) d
 .f id=1,2 s ^[nmsp]OI("MZP",1,"VYK","ih",id)=""
 // =============================================
 s out("arr",1,1,1)=$g(^[nmsp]OI("MZP",1,"ZAK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"ZAK","zp",zp)) q:zp=""  s out("arr",1,1,1,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"ZAK","zp",zp))
 s id="" f  s id=$o(^[nmsp]OI("MZP",1,"ZAK","ih",id)) q:id=""  s out("arr",1,1,1,"arr",1,id)=""
 s out("arr",1,1,2)=$g(^[nmsp]OI("MZP",1,"VYK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYK","zp",zp)) q:zp=""  s out("arr",1,1,2,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYK","zp",zp))
 s id="" f  s id=$o(^[nmsp]OI("MZP",1,"VYK","ih",id)) q:id=""  s out("arr",1,1,2,"arr",1,id)=""
 s out("arr",1,1,3)=$g(^[nmsp]OI("MZP",1,"VYKP1"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP1","zp",zp)) q:zp=""  s out("arr",1,1,3,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP1","zp",zp))
 s out("arr",1,1,4)=$g(^[nmsp]OI("MZP",1,"VYKP2"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP2","zp",zp)) q:zp=""  s out("arr",1,1,4,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP2","zp",zp))
 s out("arr",1,1,5)=$g(^[nmsp]OI("MZP",1,"VYKP3"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP3","zp",zp)) q:zp=""  s out("arr",1,1,5,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP3","zp",zp)) 
 s out("arr",1,1,6)=$g(^[nmsp]OI("MZP",1,"VYKP4"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP4","zp",zp)) q:zp=""  s out("arr",1,1,6,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP4","zp",zp))
 s out("arr",1,1,7)=$g(^[nmsp]OI("MZP",1,"VYKP5"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP5","zp",zp)) q:zp=""  s out("arr",1,1,7,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP5","zp",zp)) 
 s out("arr",1,1,8)=$g(^[nmsp]OI("MZP",1,"VYKP6"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"VYKP6","zp",zp)) q:zp=""  s out("arr",1,1,8,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"VYKP6","zp",zp))
 s out("arr",1,1,9)=$g(^[nmsp]OI("MZP",1,"CEK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"CEK","zp",zp)) q:zp=""  s out("arr",1,1,9,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"CEK","zp",zp))
 s out("arr",1,1,10)=$g(^[nmsp]OI("MZP",1,"CEK1MM"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"CEK1MM","zp",zp)) q:zp=""  s out("arr",1,1,10,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"CEK1MM","zp",zp))
 s out("arr",1,1,11)=$g(^[nmsp]OI("MZP",1,"CEK1"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"CEK1","zp",zp)) q:zp=""  s out("arr",1,1,11,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"CEK1","zp",zp))
 s out("arr",1,1,12)=$g(^[nmsp]OI("MZP",1,"CEKMHD"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"CEKMHD","zp",zp)) q:zp=""  s out("arr",1,1,12,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"CEKMHD","zp",zp))
 s out("arr",1,1,13)=$g(^[nmsp]OI("MZP",1,"KLO"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"KLO","zp",zp)) q:zp=""  s out("arr",1,1,13,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"KLO","zp",zp))
 s out("arr",1,1,14)=$g(^[nmsp]OI("MZP",1,"VLEK"))
 s out("arr",1,1,15)=$g(^[nmsp]OI("MZP",1,"NOC"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"NOC","zp",zp)) q:zp=""  s out("arr",1,1,15,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"NOC","zp",zp))
 s out("arr",1,1,16)=$g(^[nmsp]OI("MZP",1,"MEKM"))
 s out("arr",1,1,17)=$g(^[nmsp]OI("MZP",1,"INK"))
 s out("arr",1,1,18)=$g(^[nmsp]OI("MZP",1,"INKB"))
 s out("arr",1,1,19)=$g(^[nmsp]OI("MZP",1,"INKM"))
 s out("arr",1,1,20)=$g(^[nmsp]OI("MZP",1,"INKMB"))
 s out("arr",1,1,21)=$g(^[nmsp]OI("MZP",1,"inval"))
 s out("arr",1,1,22)=$g(^[nmsp]OI("MZP",1,"SPJ"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"SPJ","zp",zp)) q:zp=""  s out("arr",1,1,22,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"SPJ","zp",zp))
 s out("arr",1,1,23)=$g(^[nmsp]OI("MZP",1,"ODP"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"ODP","zp",zp)) q:zp=""  s out("arr",1,1,23,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"ODP","zp",zp))
 s out("arr",1,1,24)=$g(^[nmsp]OI("MZP",1,"DSM"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"DSM","zp",zp)) q:zp=""  s out("arr",1,1,24,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"DSM","zp",zp))
 s out("arr",1,1,25)=$g(^[nmsp]OI("MZPP",1,"ZAK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZPP",1,"ZAK","zp",zp)) q:zp=""  s out("arr",1,1,25,"prv",(zp#100))=$g(^[nmsp]OI("MZPP",1,"ZAK","zp",zp))
 s out("arr",1,1,26)=$g(^[nmsp]OI("MZPP",1,"VYK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZPP",1,"VYK","zp",zp)) q:zp=""  s out("arr",1,1,26,"prv",(zp#100))=$g(^[nmsp]OI("MZPP",1,"VYK","zp",zp))
 s out("arr",1,1,27)=$g(^[nmsp]OI("MZPP",1,"CEK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZPP",1,"CEK","zp",zp)) q:zp=""  s out("arr",1,1,27,"prv",(zp#100))=$g(^[nmsp]OI("MZPP",1,"CEK","zp",zp))
 s out("arr",1,1,28)=$g(^[nmsp]OI("MZPP",1,"KLO"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZPP",1,"KLO","zp",zp)) q:zp=""  s out("arr",1,1,28,"prv",(zp#100))=$g(^[nmsp]OI("MZPP",1,"KLO","zp",zp))
 s out("arr",1,1,29)=$g(^[nmsp]OI("MZPP",1,"NOC"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZPP",1,"NOC","zp",zp)) q:zp=""  s out("arr",1,1,29,"prv",(zp#100))=$g(^[nmsp]OI("MZPP",1,"NOC","zp",zp))
 s out("arr",1,1,30)=$g(^[nmsp]OI("MZPP",1,"INK"))
 s out("arr",1,1,31)=$g(^[nmsp]OI("MZPP",1,"INKB"))
 s out("arr",1,1,32)=+$g(^[nmsp]OI("MZP",1,"CEKMODE")) i 'out("arr",1,1,32) s out("arr",1,1,32)=1
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"CEKMODE","zp",zp)) q:zp=""  s out("arr",1,1,32,"prv",(zp#100))=+$g(^[nmsp]OI("MZP",1,"CEKMODE","zp",zp))
 f id=1:1:7 d
 .s out("arr",1,1,33,id)=$g(^[nmsp]OI("MZP",1,"ODBV",id))
 .s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"ODBV",id,"zp",zp)) q:zp=""  d
 ..s out("arr",1,1,33,id,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"ODBV",id,"zp",zp))
 // sazba za pauzu na obed
 s out("arr",1,1,34)=$g(^[nmsp]OI("MZP",1,"SOB"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"SOB","zp",zp)) q:zp=""  s out("arr",1,1,34,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"SOB","zp",zp))
 // sazba za nocovani
 s out("arr",1,1,35)=$g(^[nmsp]OI("MZP",1,"SNCV"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"SNCV","zp",zp)) q:zp=""  s out("arr",1,1,35,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"SNCV","zp",zp))
 // sazba za preruseni prace nezapoctene
 s out("arr",1,1,36)=$g(^[nmsp]OI("MZP",1,"PPN"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"PPN","zp",zp)) q:zp=""  s out("arr",1,1,36,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"PPN","zp",zp))
 // sazba za preruseni prace nezapoctene MHD
 s out("arr",1,1,37)=$g(^[nmsp]OI("MZP",1,"PPNMHD"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"PPNMHD","zp",zp)) q:zp=""  s out("arr",1,1,37,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"PPNMHD","zp",zp))
 // sazba - priplatek za odpracované hodiny na turnuse sazba 1(kc/hod)
 s out("arr",1,1,38)=$g(^[nmsp]OI("MZP",1,"POHTU1"))
 // sazba -  priplatek za odpracované hodiny na turnuse sazba 2(kc/hod)
 s out("arr",1,1,39)=$g(^[nmsp]OI("MZP",1,"POHTU2"))
 // sazba -  priplatek za odpracované hodiny ve ztizenem prostredi (kc/hod)
 s out("arr",1,1,40)=$g(^[nmsp]OI("MZP",1,"POHZTIPRO"))
 // sazba za hodiny vlozeneho vykonu (kc/hod)
 s out("arr",1,1,41)=$g(^[nmsp]OI("MZP",1,"VLOVYK"))
 // sazba - priplatek za km trolejbusem
 s out("arr",1,1,42)=$g(^[nmsp]OI("MZP",1,"TROLEJ"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZP",1,"TROLEJ","zp",zp)) q:zp=""  s out("arr",1,1,42,"prv",(zp#100))=$g(^[nmsp]OI("MZP",1,"TROLEJ","zp",zp))
 // ===================
 // pravidelna vykonova
 // ===================
 // ==============================================
 // pravidelna vykonova - prevod do nove struktury
 i '$d(^[nmsp]OI("MZP",2,"ZAK")) d
 .s ^[nmsp]OI("MZP",2,"ZAK")=$g(^[nmsp]OI("MZP",2,"TAR"))
 .f id=3,5,6,7,8,9,12 s ^[nmsp]OI("MZP",2,"ZAK","ih",id)=""
 // ==============================================
 s out("arr",1,2,1)=$g(^[nmsp]OI("MZP",2,"ZAK"))
 s id="" f  s id=$o(^[nmsp]OI("MZP",2,"ZAK","ih",id)) q:id=""  s out("arr",1,2,1,"arr",1,id)=""
 s out("arr",1,2,2)=$g(^[nmsp]OI("MZP",2,"MAN"))
 s out("arr",1,2,3)=$g(^[nmsp]OI("MZP",2,"MAK"))
 s out("arr",1,2,4)=$g(^[nmsp]OI("MZP",2,"CEK"))
 s out("arr",1,2,5)=$g(^[nmsp]OI("MZP",2,"KLO"))
 s out("arr",1,2,6)=$g(^[nmsp]OI("MZP",2,"VLEK"))
 s out("arr",1,2,7)=$g(^[nmsp]OI("MZP",2,"NOC"))
 s out("arr",1,2,8)=$g(^[nmsp]OI("MZP",2,"INK"))
 s out("arr",1,2,9)=$g(^[nmsp]OI("MZP",2,"INKB"))
 s out("arr",1,2,10)=$g(^[nmsp]OI("MZP",2,"inval"))
 s out("arr",1,2,11)=$g(^[nmsp]OI("MZP",2,"SPJ"))
 s out("arr",1,2,12)=$g(^[nmsp]OI("MZP",2,"ODP"))
 s out("arr",1,2,13)=$g(^[nmsp]OI("MZP",2,"DSM"))
 s out("arr",1,2,14)=$g(^[nmsp]OI("MZP",2,"VYK",1))
 s out("arr",1,2,15)=$g(^[nmsp]OI("MZP",2,"VYK",2))
 s out("arr",1,2,16)=$g(^[nmsp]OI("MZP",2,"VYK",3))
 s out("arr",1,2,17)=$g(^[nmsp]OI("MZP",2,"VYK",4))
 s out("arr",1,2,18)=$g(^[nmsp]OI("MZP",2,"VYK",5))
 s out("arr",1,2,19)=$g(^[nmsp]OI("MZP",2,"VYK",6))
 s out("arr",1,2,20)=$g(^[nmsp]OI("MZP",2,"VYK",7))
 s out("arr",1,2,21)=$g(^[nmsp]OI("MZP",2,"KMOBJ"))
 s out("arr",1,2,22)=+$g(^[nmsp]OI("MZP",2,"kratitKMMzdTyp"))
 s out("arr",1,2,23)=+$g(^[nmsp]OI("MZP",2,"pridatVRMzdTyp"))
 s out("arr",1,2,24)=+$g(^[nmsp]OI("MZP",2,"PPN"))
 // ====================
 // nepravidelna doprava
 // ====================
 // nepravidelna doprava obecne - prevod do nove struktury
 i '$d(^[nmsp]OI("MZN","prnMzdPau")) d
 .s ^[nmsp]OI("MZN","prnMzdPau")=0
 .i $d(^[nmsp]OI("JUHOSI","100SN")) d
 ..s $p(^[nmsp]OI("MZN","prnMzdPau",1),"~",1)=30
 ..s $p(^[nmsp]OI("MZN","prnMzdPau",1),"~",2)=100
 .i idfa="MB_TCBUS" d
 ..s ^[nmsp]OI("MZN","prnMzdPau")=2
 ..s $p(^[nmsp]OI("MZN","prnMzdPau",2),"~",1)=.5
 ..s $p(^[nmsp]OI("MZN","prnMzdPau",2),"~",2)="1025;1125"
 i '$d(^[nmsp]OI("MZN","calcBPTyp")) d
 .s ^[nmsp]OI("MZN","calcBPTyp")=0
 .i idfa="VS_CSAD" d
 ..s ^[nmsp]OI("MZN","calcBPTyp")=1
 ..s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",1)=0
 ..s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",2)=1
 ..s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",3)=1
 // ==================================
 // nepravidelna doprava obecne - data
 // ==================================
 s out("arr",2,0,1)=+$g(^[nmsp]OI("MZN")) s:'out("arr",2,0,1) out("arr",2,0,1)=1
 s zp="" f  s zp=$o(^[nmsp]OI("MZN","ZVM","zp",zp)) q:zp=""  s out("arr",2,0,1,"prv",(zp#100))=$g(^[nmsp]OI("MZN","ZVM","zp",zp))
 m out("arr",2,0,1,"ns")=^[nmsp]OI("MZN","ZVM","ns")
 s out("arr",2,0,2)='($d(^[nmsp]OI("MZN","NOC","NEN"))>0)
 s out("arr",2,0,3)="" 
 i $g(^[nmsp]OI("MZN","NOC","NOD"))'="" s out("arr",2,0,3)=$$hm^OBapiED($g(^[nmsp]OI("MZN","NOC","NOD")))
 s out("arr",2,0,4)=+$g(^[nmsp]OI("MZN","SVA"))
 s out("arr",2,0,5)=+$g(^[nmsp]OI("MZN","prnMzdPau"))
 s out("arr",2,0,5,"arr",1,"dta",1)=$p($g(^[nmsp]OI("MZN","prnMzdPau",1)),"~",1)
 s out("arr",2,0,5,"arr",1,"dta",2)=$p($g(^[nmsp]OI("MZN","prnMzdPau",1)),"~",2)
 s out("arr",2,0,5,"arr",2,"dta",1)=$p($g(^[nmsp]OI("MZN","prnMzdPau",2)),"~",1)
 s out("arr",2,0,5,"arr",2,"dta",2)=$tr($p($g(^[nmsp]OI("MZN","prnMzdPau",2)),"~",2),";","~")
 s out("arr",2,0,6)=$g(^[nmsp]OI("MZN","CEKZAP"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN","CEKZAP","zp",zp)) q:zp=""  s out("arr",2,0,6,"prv",(zp#100))=$g(^[nmsp]OI("MZN","CEKZAP","zp",zp))
 s out("arr",2,0,7)=+$g(^[nmsp]OI("MZN","calcBPTyp"))
 s out("arr",2,0,7,"arr",1,"dta",1)=+$p($g(^[nmsp]OI("MZN","calcBPTyp",1)),"~",1)
 s out("arr",2,0,7,"arr",1,"dta",2)=+$p($g(^[nmsp]OI("MZN","calcBPTyp",1)),"~",2)
 s out("arr",2,0,7,"arr",1,"dta",3)=+$p($g(^[nmsp]OI("MZN","calcBPTyp",1)),"~",3)
 s out("arr",2,0,7,"arr",1,"dta",4)=+$p($g(^[nmsp]OI("MZN","calcBPTyp",1)),"~",4)
 s out("arr",2,0,8)=0
 s val=$g(^[nmsp]OI("MZP","FIXDODK"))
 i (+$p(val,":",3))&(+$p(val,":",4)) d
 .s out("arr",2,0,8)=1
 .s out("arr",2,0,8,"arr",1,"dta",1)=$$hm^OBapiED($p(val,":",3))
 .s out("arr",2,0,8,"arr",1,"dta",2)=$$hm^OBapiED($p(val,":",4))
 s out("arr",2,0,9,"dta",1)=+$p($g(^[nmsp]OI("MZN","AKJ")),"~",1)
 s out("arr",2,0,9,"dta",2)=$p($g(^[nmsp]OI("MZN","AKJ")),"~",2)
 s zp="" f  s zp=$o(^[nmsp]OI("MZN","AKJ","zp",zp)) q:zp=""  d
 .s out("arr",2,0,9,"prv",(zp#100),"dta",1)=$p($g(^[nmsp]OI("MZN","AKJ","zp",zp)),"~",1)
 .s out("arr",2,0,9,"prv",(zp#100),"dta",2)=$p($g(^[nmsp]OI("MZN","AKJ","zp",zp)),"~",2)
 s out("arr",2,0,10,"dta",1)=+$p($g(^[nmsp]OI("MZN","AKM")),"~",1)
 s out("arr",2,0,10,"dta",2)=$p($g(^[nmsp]OI("MZN","AKM")),"~",2)
 // id polozek pro vypocet hodin v noci
 i '$d(^[nmsp]OI(idfa,"MZN","IDNC")) d
 .s ^[nmsp]OI(idfa,"MZN","IDNC")="1~2~3~4~5~6~0"
 s out("arr",2,0,11)=$g(^[nmsp]OI(idfa,"MZN","IDNC"))
 // ===========================
 // nepravidelna doprava casova
 // ===========================
 // nepravidelna doprava casova - prevod do nove struktury
 i '$d(^[nmsp]OI("MZN",1,"ZAK")) d
 .s ^[nmsp]OI("MZN",1,"ZAK")=$g(^[nmsp]OI("MZN",1,"TAR"))
 // ========================================================
 s out("arr",2,1,1)=$g(^[nmsp]OI("MZN",1,"ZAK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"ZAK","zp",zp)) q:zp=""  s out("arr",2,1,1,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"ZAK","zp",zp))
 s out("arr",2,1,2)=$g(^[nmsp]OI("MZN",1,"VYK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"VYK","zp",zp)) q:zp=""  s out("arr",2,1,2,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"VYK","zp",zp))
 s out("arr",2,1,3)=$g(^[nmsp]OI("MZN",1,"jakcek")) i '+out("arr",2,1,3) s out("arr",2,1,3)=1
 s out("arr",2,1,4)=$p($g(^[nmsp]OI("MZN",1,"CEK")),"|",1)
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"CEK","zp",zp)) q:zp=""  s out("arr",2,1,4,"prv",(zp#100))=$p($g(^[nmsp]OI("MZN",1,"CEK","zp",zp)),"|",1)
 s out("arr",2,1,5)=$p($g(^[nmsp]OI("MZN",1,"CEK")),"|",2)
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"CEK","zp",zp)) q:zp=""  s out("arr",2,1,5,"prv",(zp#100))=$p($g(^[nmsp]OI("MZN",1,"CEK","zp",zp)),"|",2)
 s out("arr",2,1,6)=$g(^[nmsp]OI("MZN",1,"proccek"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"proccek","zp",zp)) q:zp=""  s out("arr",2,1,6,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"proccek","zp",zp))
 s out("arr",2,1,7)=$g(^[nmsp]OI("MZN",1,"CEK1MM"))
 s out("arr",2,1,8)=$p($g(^[nmsp]OI("MZN",1,"CEK1")),"|",1)
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"CEK1","zp",zp)) q:zp=""  s out("arr",2,1,8,"prv",(zp#100))=$p($g(^[nmsp]OI("MZN",1,"CEK1","zp",zp)),"|",1)
 s out("arr",2,1,9)=$p($g(^[nmsp]OI("MZN",1,"CEK1")),"|",2)
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"CEK1","zp",zp)) q:zp=""  s out("arr",2,1,9,"prv",(zp#100))=$p($g(^[nmsp]OI("MZN",1,"CEK1","zp",zp)),"|",2)
 s out("arr",2,1,10)=$g(^[nmsp]OI("MZN",1,"proccek1"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"proccek1","zp",zp)) q:zp=""  s out("arr",2,1,10,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"proccek1","zp",zp))
 s out("arr",2,1,11)=$g(^[nmsp]OI("MZN",1,"SPJ"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"SPJ","zp",zp)) q:zp=""  s out("arr",2,1,11,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"SPJ","zp",zp))
 s out("arr",2,1,12)=$g(^[nmsp]OI("MZN",1,"KLO"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"KLO","zp",zp)) q:zp=""  s out("arr",2,1,12,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"KLO","zp",zp))
 s out("arr",2,1,13)=$g(^[nmsp]OI("MZN",1,"VLEK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"VLEK","zp",zp)) q:zp=""  s out("arr",2,1,13,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"VLEK","zp",zp))
 s out("arr",2,1,14)=$g(^[nmsp]OI("MZN",1,"NOC"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"NOC","zp",zp)) q:zp=""  s out("arr",2,1,14,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"NOC","zp",zp))
 s out("arr",2,1,15)=$g(^[nmsp]OI("MZN",1,"jakSPJ")) i '+out("arr",2,1,15) s out("arr",2,1,15)=1
 s out("arr",2,1,16)=$g(^[nmsp]OI("MZN",1,"procSPJ"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"procSPJ","zp",zp)) q:zp=""  s out("arr",2,1,16,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"procSPJ","zp",zp))
 s out("arr",2,1,17)=$g(^[nmsp]OI("MZN",1,"POHZTIPRO"))
 s out("arr",2,1,18)=$g(^[nmsp]OI("MZN",1,"CEKVV"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",1,"CEKVV","zp",zp)) q:zp=""  s out("arr",2,1,18,"prv",(zp#100))=$g(^[nmsp]OI("MZN",1,"CEKVV","zp",zp))
 // nepravidelna doprava vykonova - prevod do nove struktury
 i '$d(^[nmsp]OI("MZN",2,"ZAK")) d
 .s ^[nmsp]OI("MZN",2,"ZAK")=$g(^[nmsp]OI("MZN",2,"TAR"))
 i '$d(^[nmsp]OI("MZN",2,"VYK_LKM1")) d
 .s ^[nmsp]OI("MZN",2,"VYK_LKM1")=$g(^[nmsp]OI("MZN","LIMITKM"))
 .s ^[nmsp]OI("MZN",2,"VYK_LKM1",1)=$g(^[nmsp]OI("MZN",2,"VYK","POD200"))
 .s ^[nmsp]OI("MZN",2,"VYK_LKM1",2)=$g(^[nmsp]OI("MZN",2,"VYK","POD200"))
 .s ^[nmsp]OI("MZN",2,"VYK_LKM1",3)=$g(^[nmsp]OI("MZN",2,"VYK","POD200"))
 i '$d(^[nmsp]OI("MZN",1,"VYK_LKM2")) d
 .s val=$o(^[nmsp]OI("MZN","PRES","")) q:val=""
 .s ^[nmsp]OI("MZN",2,"VYK_LKM2")=val
 .s ^[nmsp]OI("MZN",2,"VYK_LKM2",1)=$g(^[nmsp]OI("MZN","PRES",val))
 .s ^[nmsp]OI("MZN",2,"VYK_LKM2",2)=$g(^[nmsp]OI("MZN","PRES",val))
 .s ^[nmsp]OI("MZN",2,"VYK_LKM2",3)=$g(^[nmsp]OI("MZN","PRES",val))
 i '$d(^[nmsp]OI("MZN",2,"dorovnatMzdTyp")) d
 .s ^[nmsp]OI("MZN",2,"dorovnatMzdTyp")=0
 .i $d(^[nmsp]OI("MZN",2,"DOROVNEJ")) s ^[nmsp]OI("MZN",2,"dorovnatMzdTyp")=1
 .i idfa="BK_VYDOSBUS" s ^[nmsp]OI("MZN",2,"dorovnatMzdTyp")=2
 i '$d(^[nmsp]OI("MZN",2,"dorovnatMzdKm")) d
 .s ^[nmsp]OI("MZN",2,"dorovnatMzdKm")=$g(^[nmsp]OI("MZN",2,"DOROVNEJ","KM"))
 i '$d(^[nmsp]OI("MZN",2,"pridatVRMzdTyp")) d
 .s ^[nmsp]OI("MZN",2,"pridatVRMzdTyp")=0
 .i idfa="BK_KRODOSBUS" s ^[nmsp]OI("MZN",2,"pridatVRMzdTyp")=1
 i '$d(^[nmsp]OI("MZN",2,"jizdaSoNeTyp")) d
 .s ^[nmsp]OI("MZN",2,"jizdaSoNeTyp")=0
 .i $d(^[nmsp]OI("JUHOSI","100SN")) d
 ..s ^[nmsp]OI("MZN",2,"jizdaSoNeTyp")=1
 ..s $p(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1),"~",1)=2
 ..s $p(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1),"~",2)=100
 // ====================================
 // nepravidelna doprava vykonova - data
 // ====================================
 s out("arr",2,2,1)=$g(^[nmsp]OI("MZN",2,"ZAK"))
 s out("arr",2,2,2)=$g(^[nmsp]OI("MZN",2,"jakcek")) i '+out("arr",2,2,2) s out("arr",2,2,2)=1
 s out("arr",2,2,3)=$p($g(^[nmsp]OI("MZN",2,"CEK")),"|",1)
 s out("arr",2,2,4)=$p($g(^[nmsp]OI("MZN",2,"CEK")),"|",2)
 s out("arr",2,2,5)=$g(^[nmsp]OI("MZN",2,"proccek"))
 s out("arr",2,2,6)=$g(^[nmsp]OI("MZN",2,"CEK1MM"))
 s out("arr",2,2,7)=$p($g(^[nmsp]OI("MZN",2,"CEK1")),"|",1)
 s out("arr",2,2,8)=$p($g(^[nmsp]OI("MZN",2,"CEK1")),"|",2)
 s out("arr",2,2,9)=$g(^[nmsp]OI("MZN",2,"proccek1"))
 s out("arr",2,2,10)=$g(^[nmsp]OI("MZN",2,"SPJ"))
 s out("arr",2,2,11)=$g(^[nmsp]OI("MZN",2,"KLO"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"KLO","zp",zp)) q:zp=""  s out("arr",2,2,11,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"KLO","zp",zp))
 s out("arr",2,2,12)=$g(^[nmsp]OI("MZN",2,"VLEK"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"VLEK","zp",zp)) q:zp=""  s out("arr",2,2,12,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"VLEK","zp",zp))
 s out("arr",2,2,13)=$g(^[nmsp]OI("MZN",2,"NOC"))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"NOC","zp",zp)) q:zp=""  s out("arr",2,2,13,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"NOC","zp",zp))
 s out("arr",2,2,14)=$g(^[nmsp]OI("MZN",2,"VYK",1))
 s id="" f  s id=$o(^[nmsp]OI("MZN",2,"VYK",1,"TYPA",id)) q:id=""  d
 .s val=$g(^[nmsp]OI("MZN",2,"VYK",1,"TYPA",id))
 .f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" out("arr",2,2,14,"tpa",$p(val,"~",cnt))=id
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"VYK",1,"zp",zp)) q:zp=""  s out("arr",2,2,14,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"VYK",1,"zp",zp))
 s out("arr",2,2,15)=$g(^[nmsp]OI("MZN",2,"VYK",2))
 s out("arr",2,2,16)=$g(^[nmsp]OI("MZN",2,"VYK",3))
 s out("arr",2,2,17)=$g(^[nmsp]OI("MZN",2,"VYK_LKM1"))
 s out("arr",2,2,18)=$g(^[nmsp]OI("MZN",2,"VYK_LKM1",1))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"VYK_LKM1",1,"zp",zp)) q:zp=""  s out("arr",2,2,18,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"VYK_LKM1",1,"zp",zp))
 s out("arr",2,2,19)=$g(^[nmsp]OI("MZN",2,"VYK_LKM1",2))
 s out("arr",2,2,20)=$g(^[nmsp]OI("MZN",2,"VYK_LKM1",3))
 s out("arr",2,2,21)=$g(^[nmsp]OI("MZN",2,"VYK_LKM2"))
 s out("arr",2,2,22)=$g(^[nmsp]OI("MZN",2,"VYK_LKM2",1))
 s zp="" f  s zp=$o(^[nmsp]OI("MZN",2,"VYK_LKM2",1,"zp",zp)) q:zp=""  s out("arr",2,2,22,"prv",(zp#100))=$g(^[nmsp]OI("MZN",2,"VYK_LKM2",1,"zp",zp))
 s out("arr",2,2,23)=$g(^[nmsp]OI("MZN",2,"VYK_LKM2",2))
 s out("arr",2,2,24)=$g(^[nmsp]OI("MZN",2,"VYK_LKM2",3))
 s out("arr",2,2,25)=+$g(^[nmsp]OI("MZN",2,"dorovnatMzdTyp"))
 s out("arr",2,2,26)=$g(^[nmsp]OI("MZN",2,"dorovnatMzdKm"))
 s out("arr",2,2,27)=+$g(^[nmsp]OI("MZN",2,"pridatVRMzdTyp"))
 s out("arr",2,2,28)=+$g(^[nmsp]OI("MZN",2,"jizdaSoNeTyp"))
 s out("arr",2,2,28,"arr",1,"dta",1)=$p($g(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1)),"~",1)
 s out("arr",2,2,28,"arr",1,"dta",2)=$p($g(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1)),"~",2)
 s out("arr",2,2,29)=+$g(^[nmsp]OI("MZN",2,"kratitKMMzdTyp"))
 s out("arr",2,2,30)=$g(^[nmsp]OI("MZN",2,"POHZTIPRO"))
 s out("arr",2,2,31)=+$g(^[nmsp]OI("MZN",2,"doklDoLimKm"))
 s out("arr",2,2,31,"arr",1,"dta",1)=$p($g(^[nmsp]OI("MZN",2,"doklDoLimKm",1)),"~",1)
 s out("arr",2,2,31,"arr",1,"dta",2)=$p($g(^[nmsp]OI("MZN",2,"doklDoLimKm",1)),"~",2)
 m out("arr",2,2,31,"arr",1,"arr",1)=^[nmsp]OI("MZN",2,"doklDoLimKm",1,"nDza")
 s out("arr",2,2,32)=$g(^[nmsp]OI("MZN",2,"dorovnatMzdNoPrv"))
 // ========
 // grafikon
 // ========
 s out("arr",3,1)=$g(^[nmsp]OI("MZD","SNIZENASAZBA"))
 s out("arr",3,2)=$g(^[nmsp]OI("MZD","USTI"))
 s out("arr",3,3)=$g(^[nmsp]OI(idfa,"jb","zalhod","set","tar"))
 s out("arr",3,4)=+$g(^[nmsp]OI(idfa,"jb","zalhod","set","mod"))
 // =================
 // premie pravidelna
 // =================
 s out("arr",4,1)=$g(^[nmsp]OI(idfa,"jb","premiep",1))
 // ===================
 // premie nepravidelna
 // ===================
 s out("arr",5,1)=13
 s out("arr",5,2)=+$g(^[nmsp]OI("JakPlatitPremieNepr"))
 // ==========
 // premie all
 // ==========
 s out("arr",6,1)=$g(^[nmsp]OI(idfa,"jb","premieall",1))
 s out("arr",6,2)=$g(^[nmsp]OI(idfa,"jb","premieall",2))
 s out("arr",6,3)=$g(^[nmsp]OI(idfa,"jb","premieall",3))
 s out("arr",6,4)=$g(^[nmsp]OI(idfa,"jb","premieall",4))
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","premieall",4,"zp",zp)) q:zp=""  s out("arr",6,4,"prv",(zp#100))=$g(^[nmsp]OI(idfa,"jb","premieall",4,"zp",zp))
 s out("arr",6,5,3)=$g(^[nmsp]OI(idfa,"jb","premieall",5,3))
 s zp="" f  s zp=$o(^[nmsp]OI(idfa,"jb","premieall",5,3,"zp",zp)) q:zp=""  s out("arr",6,5,3,"prv",(zp#100))=$g(^[nmsp]OI(idfa,"jb","premieall",5,3,"zp",zp))
 q 0
sMzdSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s err="" k out
 // =================
 // !!! transakce !!!
 // ================= 
 s $zt="errtroll" tstart
 //
 // in("idos")=mlp~loginname~fullname
 s idos=$g(in("idos"))
 // kill
 k ^[nmsp]OBlin
 k ^[nmsp]OI("TOS")
 k ^[nmsp]OI(idfa,"jb","docs","set","fixdodk")
 k ^[nmsp]OI(idfa,"jb","docs","set","fixkc")
 k ^[nmsp]OI(idfa,"jb","docs","set","fixhod")
 k ^[nmsp]OI(idfa,"jb","premie","mode")
 k ^[nmsp]OI(idfa,"jb","premie","obdobi")
 k ^[nmsp]OI("MZP","CEK","MAX")
 k ^[nmsp]OI("MZP","CEK","ZAO")
 k ^[nmsp]OI("MZP","NOC","NEN")
 k ^[nmsp]OI("MZP","NOC","NOD")
 k ^[nmsp]OI("MZP","AKJ")
 k ^[nmsp]OI("MZP",1,"VYK")
 k ^[nmsp]OI("MZP",1,"VYKP1")
 k ^[nmsp]OI("MZP",1,"VYKP2")
 k ^[nmsp]OI("MZP",1,"VYKP3")
 k ^[nmsp]OI("MZP",1,"VYKP4")
 k ^[nmsp]OI("MZP",1,"VYKP5")
 k ^[nmsp]OI("MZP",1,"VYKP6")
 k ^[nmsp]OI("MZP",1,"CEK")
 k ^[nmsp]OI("MZP",1,"CEKMODE")
 k ^[nmsp]OI("MZP",1,"CEK1MM")
 k ^[nmsp]OI("MZP",1,"CEK1")
 k ^[nmsp]OI("MZP",1,"CEKMHD")
 k ^[nmsp]OI("MZP",1,"SPJ")
 k ^[nmsp]OI("MZP",1,"ODP")
 k ^[nmsp]OI("MZP",1,"DSM")
 k ^[nmsp]OI("MZP",1,"ODBV")
 k ^[nmsp]OI("MZPP",1,"VYK")
 k ^[nmsp]OI("MZPP",1,"CEK")
 k ^[nmsp]OI("MZP",1,"SOB")
 k ^[nmsp]OI("MZP",1,"SNCV")
 k ^[nmsp]OI("MZP",1,"PPN")
 k ^[nmsp]OI("MZP",1,"PPNMHD")
 k ^[nmsp]OI("MZP",1,"KLO")
 k ^[nmsp]OI("MZPP",1,"KLO")
 k ^[nmsp]OI("MZP",1,"NOC")
 k ^[nmsp]OI("MZPP",1,"NOC")
 k ^[nmsp]OI("MZP",1,"TROLEJ")
 k ^[nmsp]OI("MZP","FIXDODK")
 //k ^[nmsp]OI("MZP","FKCDODK")
 //k ^[nmsp]OI("MZP","FIXODVTRZ")
 k ^[nmsp]OI("MZP","DIE","MODE")
 k ^[nmsp]OI("MZP","DIE","KOEF")
 k ^[nmsp]OI("MZP","DIE","IDZST")
 k ^[nmsp]OI("MZP","DIE","DOPPULNC")
 k ^[nmsp]OI(idfa,"MZP","OBHC")
 k ^[nmsp]OI(idfa,"MZP","PRIHODJITYPRZ")
 k ^[nmsp]OI(idfa,"MZP","PRIKMTYPRZ")
 //nepravidelna obecne
 k ^[nmsp]OI("MZN","ZVM")
 k ^[nmsp]OI("MZN","NOC","NEN")
 k ^[nmsp]OI("MZN","NOC","NOD")
 k ^[nmsp]OI("MZN","AKJ")
 k ^[nmsp]OI("MZN","AKM")
 k ^[nmsp]OI("MZN","CEKZAP")
 //nepravidelna
 k ^[nmsp]OI("MZN",1,"ZAK")
 k ^[nmsp]OI("MZN",1,"VYK")
 k ^[nmsp]OI("MZN",1,"CEK")
 k ^[nmsp]OI("MZN",1,"proccek")
 k ^[nmsp]OI("MZN",1,"CEK1")
 k ^[nmsp]OI("MZN",1,"proccek1")
 k ^[nmsp]OI("MZN",1,"SPJ")
 k ^[nmsp]OI("MZN",1,"procSPJ")
 k ^[nmsp]OI("MZN",1,"CEKVV")
 k ^[nmsp]OI("MZN",1,"KLO")
 k ^[nmsp]OI("MZN",1,"VLEK")
 k ^[nmsp]OI("MZN",1,"NOC")
 k ^[nmsp]OI("MZN",2,"doklDoLimKm")
 k ^[nmsp]OI("MZN",2,"KLO")
 k ^[nmsp]OI("MZN",2,"VLEK")
 k ^[nmsp]OI("MZN",2,"NOC")
 k ^[nmsp]OI("MZN",2,"VYK")
 k ^[nmsp]OI("MZN",2,"VYK_LKM1",1)
 k ^[nmsp]OI("MZN",2,"VYK_LKM2",1)
 // premie pravidelna
 k ^[nmsp]OI(idfa,"jb","premiep",1)
 // premie nepravidelna
 k ^[nmsp]OI("JakPlatitPremieNepr")
 // premie all
 k ^[nmsp]OI(idfa,"jb","premieall")
 // obecne
 i +$g(in("arr",0,1)) s ^[nmsp]OI("TOS")=$h_":"_$p(idos,"~",3)
 i (+$g(in("arr",0,1)))&(+$g(in("arr",0,2))) s ^[nmsp]OI("TOS","JIM")=$h_":"_$p(idos,"~",3)
 //fixni dodk
 f cnt=1:1:13 d
 .s val=$g(in("arr",0,3,"dta",cnt))
 .s:(cnt=12)!(cnt=13) val=$tr(val,"~","|")
 .s $p(^[nmsp]OI(idfa,"jb","docs","set","fixdodk"),"~",cnt)=val
 s idprv="" f  s idprv=$o(in("arr",0,3,"arr",1,idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .f cnt=2,5,6,7,8,10,11 d
 ..s $p(^[nmsp]OI(idfa,"jb","docs","set","fixdodk","zp",zp),"~",cnt)=$g(in("arr",0,3,"arr",1,idprv,"dta",cnt))
 //fixni kc
 f cnt=1:1:5 s $p(^[nmsp]OI(idfa,"jb","docs","set","fixkc"),"~",cnt)=$g(in("arr",0,4,"dta",cnt))
 s idprv="" f  s idprv=$o(in("arr",0,4,"arr",1,idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .f cnt=4,5 s $p(^[nmsp]OI(idfa,"jb","docs","set","fixkc","zp",zp),"~",cnt)=$g(in("arr",0,4,"arr",1,idprv,"dta",cnt))
 //fixni mm
 f cnt=1:1:6 s $p(^[nmsp]OI(idfa,"jb","docs","set","fixhod"),"~",cnt)=$g(in("arr",0,5,"dta",cnt))
 s idprv="" f  s idprv=$o(in("arr",0,5,"arr",1,idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .f cnt=4,5 s $p(^[nmsp]OI(idfa,"jb","docs","set","fixhod","zp",zp),"~",cnt)=$g(in("arr",0,5,"arr",1,idprv,"dta",cnt))
 //jak pocitat premie
 i +$g(in("arr",0,6)) s ^[nmsp]OI(idfa,"jb","premie","mode")=+$g(in("arr",0,6))
 // sledovani odpracovanych dnu
 f cnt=1:1:2 s $p(^[nmsp]OI(idfa,"jb","docs","set","dokldny"),"~",cnt)=$g(in("arr",0,7,"dta",cnt))
 // z jakeho obdobi pocitat premie
 i +$g(in("arr",0,8)) s ^[nmsp]OI(idfa,"jb","premie","obdobi")=+$g(in("arr",0,8))
 // jak pocitat mesicni fond ridice
 s ^[nmsp]OI(idfa,"jb","fond","mode")=$g(in("arr",0,9))
 // ===========================
 // pravidelna doprava - obecne
 // ===========================
 s ^[nmsp]OI("MZP")=+$g(in("arr",1,0,1))_":"_$h
 s ^[nmsp]OI("MZP","zastavkaJR")=$g(in("arr",1,0,2))
 s ^[nmsp]OI("MZP","SazbaZaSpoj")=$g(in("arr",1,0,3))
 s ^[nmsp]OI("MZP","PLYN")=$g(in("arr",1,0,4))
 i $g(in("arr",1,0,5)) s ^[nmsp]OI("MZP","CEK","MAX")=$$mh^OBapiED(in("arr",1,0,5))
 i $g(in("arr",1,0,6)) s ^[nmsp]OI("MZP","CEK","ZAO")=$g(in("arr",1,0,6))
 i '$g(in("arr",1,0,7)) s ^[nmsp]OI("MZP","NOC","NEN")=""
 i $g(in("arr",1,0,8)) s ^[nmsp]OI("MZP","NOC","NOD")=$$mh^OBapiED(in("arr",1,0,8))
 s ^[nmsp]OI("MZP","SVA")=+$g(in("arr",1,0,9))
 s ^[nmsp]OI("MZP","SKO")=$g(in("arr",1,0,10))
 s ^[nmsp]OI("MZP","ZASILKY")=$g(in("arr",1,0,11))
 s ^[nmsp]OI("MZP","SETKOEFMZ")=$g(in("arr",1,0,12))
 s ^[nmsp]OI("MZP","2SMENA")=$g(in("arr",1,0,13))
 //priplatky za linky a spoje, zakladni nastaveni
 f cnt=1:1:4 d
 .s $p(^[nmsp]OBlin,"~",cnt)=$g(in("arr",1,0,14,"dta",cnt))
 //priplatky za linky a spoje, sazby
 s li="" f  s li=$o(in("arr",1,0,14,"arr",1,li)) q:li=""  d
 .f cnt=1:1:2 d
 ..s val=$g(in("arr",1,0,14,"arr",1,li,"dta",cnt))
 ..s:+val $p(^[nmsp]OBlin(li),"~",cnt)=val
 .s sp="" f  s sp=$o(in("arr",1,0,14,"arr",1,li,"arr",sp)) q:sp=""  d
 ..f cnt=1:1:2 d
 ...s val=$g(in("arr",1,0,14,"arr",1,li,"arr",sp,"dta",cnt))
 ...s:+val $p(^[nmsp]OBlin(li,sp),"~",cnt)=val
 s ^[nmsp]OBlin("rez")=$g(in("arr",1,0,14,"arr",2,"dta",1))
 f id=1:1:6 s ^[nmsp]OBlin("rez",id)=$g(in("arr",1,0,14,"arr",2,"arr",id,"dta",1))
 //i $g(in("arr",1,0,15))=1 d
 //.s $p(^[nmsp]OI("MZP","FIXDODK"),":",1)=$$mh^OBapiED($g(in("arr",1,0,15,"arr",1,"dta",1)))
 //.s $p(^[nmsp]OI("MZP","FIXDODK"),":",2)=$$mh^OBapiED($g(in("arr",1,0,15,"arr",1,"dta",2)))
 //.s $p(^[nmsp]OI("MZP","FIXDODK"),":",5)=$g(in("arr",1,0,15,"arr",1,"dta",3))
 //i $g(in("arr",1,0,15))=2 d
 //.s $p(^[nmsp]OI("MZP","FKCDODK"),":",1)=$g(in("arr",1,0,15,"arr",2,"dta",1))
 //.s $p(^[nmsp]OI("MZP","FKCDODK"),":",2)=$g(in("arr",1,0,15,"arr",2,"dta",2))
 //.s $p(^[nmsp]OI("MZP","FKCDODK"),":",5)=$g(in("arr",1,0,15,"arr",2,"dta",3))
 //
 // zpusob vypoctu diet
 s ^[nmsp]OI("MZP","DIE","MODE")=+$g(in("arr",1,0,15))
 s idprv="" f  s idprv=$o(in("arr",1,0,15,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i +$g(in("arr",1,0,15,"prv",idprv)) s ^[nmsp]OI("MZP","DIE","MODE","zp",zp)=+$g(in("arr",1,0,15,"prv",idprv))
 // sazba pro vypocet diet koeficientem
 i $g(in("arr",1,0,16)) s ^[nmsp]OI("MZP","DIE","KOEF")=$g(in("arr",1,0,16))
 // lokalni zastavky pro vypocet diet - misto vykonu prace - preruseni pro vypocet diet
 s idprv="" f  s idprv=$o(in("arr",1,0,17,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s id="" f  s id=$o(in("arr",1,0,17,"prv",idprv,"arr",id)) q:id=""  d
 ..s ^[nmsp]OI("MZP","DIE","IDZST","zp",zp,"arr",id)=""
 // automaticke kraceni jizdy pri spolujizde
 s $p(^[nmsp]OI("MZP","AKJ"),"~",1)=$g(in("arr",1,0,18,"dta",1))
 s $p(^[nmsp]OI("MZP","AKJ"),"~",2)=$g(in("arr",1,0,18,"dta",2))
 // id polozek pro vypocet hodin v noci
 s ^[nmsp]OI(idfa,"MZP","IDNC")=$g(in("arr",1,0,19))
 //automaticky vypocet prestavky na jidlo
 s val="" f id=1:1:5 s $p(val,"~",id)=$g(in("arr",1,0,20,"dta",id))
 s ^[nmsp]OI(idfa,"MZP","AOB")=val
 //dodk nad turnusem (bez casove pozice) - odecitat z cekani
 s ^[nmsp]OI(idfa,"MZP","TDODKCEK")=+$g(in("arr",1,0,21))
 //jak pocitat dodk nad turnusem na doklade s vice turnusy
 s ^[nmsp]OI(idfa,"MZP","TDODKSET")=+$g(in("arr",1,0,22))
 //jak pocitat nocovne nad turnusem na doklade s vice turnusy
 s ^[nmsp]OI(idfa,"MZP","TNOCVSET")=+$g(in("arr",1,0,23))
 // id polozek pro vypocet diet z prubehu dokladu
 s ^[nmsp]OI(idfa,"MZP","IDDI")=$g(in("arr",1,0,24))
 // zapocitat cekani do odpracovane doby (zadava se % u turnusu) do hodin ve sv,so,ne 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"MZP","TCZSVSONE")=$g(in("arr",1,0,25))
 // zapocitat vyrovnavaci dobu zadanou nad trnusem do hodin ve sv,so,ne 0 ne / 1 ano
 s ^[nmsp]OI(idfa,"MZP","TVYSVSONE")=$g(in("arr",1,0,26))
 // zapocitat pauzu na jidlo do odpracovane doby
 s ^[nmsp]OI(idfa,"MZP","OBHC")=$g(in("arr",1,0,27))
 s idprv="" f  s idprv=$o(in("arr",1,0,27,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i +$g(in("arr",1,0,27,"prv",idprv)) s ^[nmsp]OI(idfa,"MZP","OBHC","zp",zp)=+$g(in("arr",1,0,27,"prv",idprv))
 // jak evidovat zadane zpozdeni - 0 prodlouzit dobu jizdy spoje tak, aby nebyl narušen následující spoj / 1 pouze evidovat dobu zpozdeni
 s ^[nmsp]OI(idfa,"MZP","ZPOZDENI","TYP")=$g(in("arr",1,0,28))
 // minimalni uznana doba zpozdeni na DZVA v min
 s ^[nmsp]OI(idfa,"MZP","ZPOZDENI","MINMM")=$g(in("arr",1,0,29))
 // priplatek za hodinu jizdy podle typu vozidla
 m ^[nmsp]OI(idfa,"MZP","PRIHODJITYPRZ")=in("arr",1,0,30)
 // doplatek do mzdy
 s val="" f id=1:1:6 s $p(val,"~",id)=$g(in("arr",1,0,31,"dta",id))
 s ^[nmsp]OI(idfa,"MZP","DOPLMZD")=val
 // jak pocitat hodiny v SoNe,Sv v pripade pendlu 0 automaticky / 1 rucne zadavat
 s ^[nmsp]OI(idfa,"MZP","PNDSONESV")=$g(in("arr",1,0,32))
 // dopocitavat diety od půlnoci/do pulnoci 0 ne / 1 ano
 s ^[nmsp]OI("MZP","DIE","DOPPULNC")=$g(in("arr",1,0,33))
 // v pripade pendlu nepouzivat diety zadane pro pendl 0 pouzit / 1 nepouzit (SA - pendl pouzivaji pro zahranicni cesty a maji zahranicni diety) 
 s ^[nmsp]OI("MZP","DIE","PENDLBEZDIET")=$g(in("arr",1,0,34))
 // priplatek za km podle typu vozidla
 m ^[nmsp]OI(idfa,"MZP","PRIKMTYPRZ")=in("arr",1,0,35)
 // sledovat samostatne zpozdeni na DZVA nad minutovy limit (xx min na dokladu)
 s ^[nmsp]OI(idfa,"MZP","ZPOZDENI","SLEDOVAT_NAD_MINMM")=$g(in("arr",1,0,36))
 // napocitat celkovou dobu zpozdeni do odpracovane doby 0 ne / 1 ano (pouze v pripade, kdy se doba zpozdeni sleduje ,1,0,28)=1)
 s ^[nmsp]OI(idfa,"MZP","ZPOZDENI","HC")=$g(in("arr",1,0,37))
 // ===================
 // pravidelna - casova
 // ===================
 s ^[nmsp]OI("MZP",1,"ZAK")=$g(in("arr",1,1,1))
 k ^[nmsp]OI("MZP",1,"ZAK","zp")
 s idprv="" f  s idprv=$o(in("arr",1,1,1,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,1,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"ZAK","zp",zp)=$g(in("arr",1,1,1,"prv",idprv))
 k ^[nmsp]OI("MZP",1,"ZAK","ih") m ^[nmsp]OI("MZP",1,"ZAK","ih")=in("arr",1,1,1,"arr",1) s ^[nmsp]OI("MZP",1,"ZAK","ih")=""
 s ^[nmsp]OI("MZP",1,"VYK")=$g(in("arr",1,1,2))
 s idprv="" f  s idprv=$o(in("arr",1,1,2,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,2,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYK","zp",zp)=$g(in("arr",1,1,2,"prv",idprv))
 k ^[nmsp]OI("MZP",1,"VYK","ih") m ^[nmsp]OI("MZP",1,"VYK","ih")=in("arr",1,1,2,"arr",1) s ^[nmsp]OI("MZP",1,"VYK","ih")=""
 s ^[nmsp]OI("MZP",1,"VYKP1")=$g(in("arr",1,1,3))
 s idprv="" f  s idprv=$o(in("arr",1,1,3,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,3,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP1","zp",zp)=$g(in("arr",1,1,3,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VYKP2")=$g(in("arr",1,1,4))
 s idprv="" f  s idprv=$o(in("arr",1,1,4,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,4,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP2","zp",zp)=$g(in("arr",1,1,4,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VYKP3")=$g(in("arr",1,1,5))
 s idprv="" f  s idprv=$o(in("arr",1,1,5,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,5,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP3","zp",zp)=$g(in("arr",1,1,5,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VYKP4")=$g(in("arr",1,1,6))
 s idprv="" f  s idprv=$o(in("arr",1,1,6,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,6,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP4","zp",zp)=$g(in("arr",1,1,6,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VYKP5")=$g(in("arr",1,1,7))
 s idprv="" f  s idprv=$o(in("arr",1,1,7,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,7,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP5","zp",zp)=$g(in("arr",1,1,7,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VYKP6")=$g(in("arr",1,1,8))
 s idprv="" f  s idprv=$o(in("arr",1,1,8,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,8,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"VYKP6","zp",zp)=$g(in("arr",1,1,8,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"CEK")=$g(in("arr",1,1,9))
 s idprv="" f  s idprv=$o(in("arr",1,1,9,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,9,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"CEK","zp",zp)=$g(in("arr",1,1,9,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"CEK1MM")=$g(in("arr",1,1,10))
 s idprv="" f  s idprv=$o(in("arr",1,1,10,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,10,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"CEK1MM","zp",zp)=$g(in("arr",1,1,10,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"CEK1")=$g(in("arr",1,1,11))
 s idprv="" f  s idprv=$o(in("arr",1,1,11,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,11,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"CEK1","zp",zp)=$g(in("arr",1,1,11,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"CEKMHD")=$g(in("arr",1,1,12))
 s idprv="" f  s idprv=$o(in("arr",1,1,12,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,12,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"CEKMHD","zp",zp)=$g(in("arr",1,1,12,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"KLO")=$g(in("arr",1,1,13))
 s idprv="" f  s idprv=$o(in("arr",1,1,13,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,13,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"KLO","zp",zp)=$g(in("arr",1,1,13,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"VLEK")=$g(in("arr",1,1,14))
 s ^[nmsp]OI("MZP",1,"NOC")=$g(in("arr",1,1,15))
 s idprv="" f  s idprv=$o(in("arr",1,1,15,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,15,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"NOC","zp",zp)=$g(in("arr",1,1,15,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"MEKM")=$g(in("arr",1,1,16))
 s ^[nmsp]OI("MZP",1,"INK")=$g(in("arr",1,1,17))
 s ^[nmsp]OI("MZP",1,"INKB")=$g(in("arr",1,1,18))
 s ^[nmsp]OI("MZP",1,"INKM")=$g(in("arr",1,1,19))
 s ^[nmsp]OI("MZP",1,"INKMB")=$g(in("arr",1,1,20))
 s ^[nmsp]OI("MZP",1,"inval")=$g(in("arr",1,1,21))
 s ^[nmsp]OI("MZP",1,"SPJ")=$g(in("arr",1,1,22))
 s idprv="" f  s idprv=$o(in("arr",1,1,22,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,22,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"SPJ","zp",zp)=$g(in("arr",1,1,22,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"ODP")=$g(in("arr",1,1,23))
 s idprv="" f  s idprv=$o(in("arr",1,1,23,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,23,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"ODP","zp",zp)=$g(in("arr",1,1,23,"prv",idprv))
 s ^[nmsp]OI("MZP",1,"DSM")=$g(in("arr",1,1,24))
 s idprv="" f  s idprv=$o(in("arr",1,1,24,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,24,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"DSM","zp",zp)=$g(in("arr",1,1,24,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"ZAK")=$g(in("arr",1,1,25))
 k ^[nmsp]OI("MZPP",1,"ZAK","zp")
 s idprv="" f  s idprv=$o(in("arr",1,1,25,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,25,"prv",idprv))'="" s ^[nmsp]OI("MZPP",1,"ZAK","zp",zp)=$g(in("arr",1,1,25,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"VYK")=$g(in("arr",1,1,26))
 s idprv="" f  s idprv=$o(in("arr",1,1,26,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,26,"prv",idprv))'="" s ^[nmsp]OI("MZPP",1,"VYK","zp",zp)=$g(in("arr",1,1,26,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"CEK")=$g(in("arr",1,1,27))
 s idprv="" f  s idprv=$o(in("arr",1,1,27,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,27,"prv",idprv))'="" s ^[nmsp]OI("MZPP",1,"CEK","zp",zp)=$g(in("arr",1,1,27,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"KLO")=$g(in("arr",1,1,28))
 s idprv="" f  s idprv=$o(in("arr",1,1,28,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,28,"prv",idprv))'="" s ^[nmsp]OI("MZPP",1,"KLO","zp",zp)=$g(in("arr",1,1,28,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"NOC")=$g(in("arr",1,1,29))
 s idprv="" f  s idprv=$o(in("arr",1,1,29,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,29,"prv",idprv))'="" s ^[nmsp]OI("MZPP",1,"NOC","zp",zp)=$g(in("arr",1,1,29,"prv",idprv))
 s ^[nmsp]OI("MZPP",1,"INK")=$g(in("arr",1,1,30))
 s ^[nmsp]OI("MZPP",1,"INKB")=$g(in("arr",1,1,31))
 s ^[nmsp]OI("MZP",1,"CEKMODE")=$g(in("arr",1,1,32))
 s idprv="" f  s idprv=$o(in("arr",1,1,32,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,32,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"CEKMODE","zp",zp)=$g(in("arr",1,1,32,"prv",idprv))
 f id=1:1:7 d
 .s ^[nmsp]OI("MZP",1,"ODBV",id)=$g(in("arr",1,1,33,id))
 .s idprv="" f  s idprv=$o(in("arr",1,1,33,id,"prv",idprv)) q:idprv=""  d
 ..k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 ..s ^[nmsp]OI("MZP",1,"ODBV",id,"zp",zp)=$g(in("arr",1,1,33,id,"prv",idprv))
 //sazba za pauzu na obed
 s ^[nmsp]OI("MZP",1,"SOB")=$g(in("arr",1,1,34))
 s idprv="" f  s idprv=$o(in("arr",1,1,34,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,34,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"SOB","zp",zp)=$g(in("arr",1,1,34,"prv",idprv))
 //sazba za nocovani
 s ^[nmsp]OI("MZP",1,"SNCV")=$g(in("arr",1,1,35))
 s idprv="" f  s idprv=$o(in("arr",1,1,35,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,35,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"SNCV","zp",zp)=$g(in("arr",1,1,35,"prv",idprv))
 //sazba za preruseni prace nezapoctene
 s ^[nmsp]OI("MZP",1,"PPN")=$g(in("arr",1,1,36))
 s idprv="" f  s idprv=$o(in("arr",1,1,36,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,36,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"PPN","zp",zp)=$g(in("arr",1,1,36,"prv",idprv))
 //sazba za preruseni prace nezapoctene MHD
 s ^[nmsp]OI("MZP",1,"PPNMHD")=$g(in("arr",1,1,37))
 s idprv="" f  s idprv=$o(in("arr",1,1,37,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,37,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"PPNMHD","zp",zp)=$g(in("arr",1,1,37,"prv",idprv))
 // sazba - priplatek za odpracované hodiny na turnuse sazba 1(kc/hod)
 s ^[nmsp]OI("MZP",1,"POHTU1")=$g(in("arr",1,1,38))
 // sazba -  priplatek za odpracované hodiny na turnuse sazba 2(kc/hod)
 s ^[nmsp]OI("MZP",1,"POHTU2")=$g(in("arr",1,1,39))
 // sazba -  priplatek za odpracované hodiny ve ztizenem prostredi (kc/hod)
 s ^[nmsp]OI("MZP",1,"POHZTIPRO")=$g(in("arr",1,1,40))
 // sazba za hodiny vlozeneho vykonu (kc/hod)
 s ^[nmsp]OI("MZP",1,"VLOVYK")=$g(in("arr",1,1,41))
 // sazba - priplatek za odjete km trolejbusem
 s ^[nmsp]OI("MZP",1,"TROLEJ")=$g(in("arr",1,1,42))
 s idprv="" f  s idprv=$o(in("arr",1,1,42,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",1,1,42,"prv",idprv))'="" s ^[nmsp]OI("MZP",1,"TROLEJ","zp",zp)=$g(in("arr",1,1,42,"prv",idprv))
 // ===================
 // pravidelna vykonova
 // ===================
 s ^[nmsp]OI("MZP",2,"ZAK")=$g(in("arr",1,2,1))
 k ^[nmsp]OI("MZP",2,"ZAK","ih") m ^[nmsp]OI("MZP",2,"ZAK","ih")=in("arr",1,2,1,"arr",1) s ^[nmsp]OI("MZP",2,"ZAK","ih")=""
 s ^[nmsp]OI("MZP",2,"MAN")=$g(in("arr",1,2,2))
 s ^[nmsp]OI("MZP",2,"MAK")=$g(in("arr",1,2,3))
 s ^[nmsp]OI("MZP",2,"CEK")=$g(in("arr",1,2,4))
 s ^[nmsp]OI("MZP",2,"KLO")=$g(in("arr",1,2,5))
 s ^[nmsp]OI("MZP",2,"VLEK")=$g(in("arr",1,2,6))
 s ^[nmsp]OI("MZP",2,"NOC")=$g(in("arr",1,2,7))
 s ^[nmsp]OI("MZP",2,"INK")=$g(in("arr",1,2,8))
 s ^[nmsp]OI("MZP",2,"INKB")=$g(in("arr",1,2,9))
 s ^[nmsp]OI("MZP",2,"inval")=$g(in("arr",1,2,10))
 s ^[nmsp]OI("MZP",2,"SPJ")=$g(in("arr",1,2,11))
 s ^[nmsp]OI("MZP",2,"ODP")=$g(in("arr",1,2,12))
 s ^[nmsp]OI("MZP",2,"DSM")=$g(in("arr",1,2,13))
 s ^[nmsp]OI("MZP",2,"VYK",1)=$g(in("arr",1,2,14))
 s ^[nmsp]OI("MZP",2,"VYK",2)=$g(in("arr",1,2,15))
 s ^[nmsp]OI("MZP",2,"VYK",3)=$g(in("arr",1,2,16))
 s ^[nmsp]OI("MZP",2,"VYK",4)=$g(in("arr",1,2,17))
 s ^[nmsp]OI("MZP",2,"VYK",5)=$g(in("arr",1,2,18))
 s ^[nmsp]OI("MZP",2,"VYK",6)=$g(in("arr",1,2,19))
 s ^[nmsp]OI("MZP",2,"VYK",7)=$g(in("arr",1,2,20))
 s ^[nmsp]OI("MZP",2,"KMOBJ")=$g(in("arr",1,2,21))
 s ^[nmsp]OI("MZP",2,"kratitKMMzdTyp")=$g(in("arr",1,2,22))
 s ^[nmsp]OI("MZP",2,"pridatVRMzdTyp")=$g(in("arr",1,2,23))
 s ^[nmsp]OI("MZP",2,"PPN")=$g(in("arr",1,2,24))
 // =============================
 // nepravidelna doprava - obecne
 // =============================
 s ^[nmsp]OI("MZN")=+$g(in("arr",2,0,1))_":"_$h
 //zpusob vypoctu mzdy podle provozoven
 s idprv="" f  s idprv=$o(in("arr",2,0,1,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i +$g(in("arr",2,0,1,"prv",idprv)) s ^[nmsp]OI("MZN","ZVM","zp",zp)=+$g(in("arr",2,0,1,"prv",idprv))
 //zpusob vypoctu mzdy podle ns
 m ^[nmsp]OI("MZN","ZVM","ns")=in("arr",2,0,1,"ns")
 //
 i '$g(in("arr",2,0,2)) s ^[nmsp]OI("MZN","NOC","NEN")=""
 i $g(in("arr",2,0,3)) s ^[nmsp]OI("MZN","NOC","NOD")=$$mh^OBapiED(in("arr",2,0,3))
 s ^[nmsp]OI("MZN","SVA")=$g(in("arr",2,0,4))
 s ^[nmsp]OI("MZN","prnMzdPau")=+$g(in("arr",2,0,5))
 s $p(^[nmsp]OI("MZN","prnMzdPau",1),"~",1)=$g(in("arr",2,0,5,"arr",1,"dta",1))
 s $p(^[nmsp]OI("MZN","prnMzdPau",1),"~",2)=$g(in("arr",2,0,5,"arr",1,"dta",2))
 s $p(^[nmsp]OI("MZN","prnMzdPau",2),"~",1)=$g(in("arr",2,0,5,"arr",2,"dta",1))
 s $p(^[nmsp]OI("MZN","prnMzdPau",2),"~",2)=$tr($g(in("arr",2,0,5,"arr",2,"dta",2)),"~",";")
 s ^[nmsp]OI("MZN","CEKZAP")=$g(in("arr",2,0,6))
 s idprv="" f  s idprv=$o(in("arr",2,0,6,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,0,6,"prv",idprv))'="" s ^[nmsp]OI("MZN","CEKZAP","zp",zp)=$g(in("arr",2,0,6,"prv",idprv))
 s ^[nmsp]OI("MZN","calcBPTyp")=+$g(in("arr",2,0,7))
 s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",1)=+$g(in("arr",2,0,7,"arr",1,"dta",1))
 s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",2)=+$g(in("arr",2,0,7,"arr",1,"dta",2))
 s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",3)=+$g(in("arr",2,0,7,"arr",1,"dta",3))
 s $p(^[nmsp]OI("MZN","calcBPTyp",1),"~",4)=+$g(in("arr",2,0,7,"arr",1,"dta",4))
 i $g(in("arr",2,0,8))=1 d
 .s $p(^[nmsp]OI("MZP","FIXDODK"),":",3)=$$mh^OBapiED($g(in("arr",2,0,8,"arr",1,"dta",1)))
 .s $p(^[nmsp]OI("MZP","FIXDODK"),":",4)=$$mh^OBapiED($g(in("arr",2,0,8,"arr",1,"dta",2)))
 s $p(^[nmsp]OI("MZN","AKJ"),"~",1)=+$g(in("arr",2,0,9,"dta",1))
 s $p(^[nmsp]OI("MZN","AKJ"),"~",2)=$g(in("arr",2,0,9,"dta",2))
 s idprv="" f  s idprv=$o(in("arr",2,0,9,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,0,9,"prv",idprv,"dta",1))'="" s $p(^[nmsp]OI("MZN","AKJ","zp",zp),"~",1)=$g(in("arr",2,0,9,"prv",idprv,"dta",1))
 .i $g(in("arr",2,0,9,"prv",idprv,"dta",2))'="" s $p(^[nmsp]OI("MZN","AKJ","zp",zp),"~",2)=$g(in("arr",2,0,9,"prv",idprv,"dta",2))
 s $p(^[nmsp]OI("MZN","AKM"),"~",1)=$g(in("arr",2,0,10,"dta",1))
 s $p(^[nmsp]OI("MZN","AKM"),"~",2)=$g(in("arr",2,0,10,"dta",2))
 // id polozek pro vypocet hodin v noci
 s ^[nmsp]OI(idfa,"MZN","IDNC")=$g(in("arr",2,0,11))
 // =============================
 // nepravidelna doprava - casova
 // =============================
 s ^[nmsp]OI("MZN",1,"ZAK")=$g(in("arr",2,1,1))
 s idprv="" f  s idprv=$o(in("arr",2,1,1,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,1,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"ZAK","zp",zp)=$g(in("arr",2,1,1,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"VYK")=$g(in("arr",2,1,2))
 s idprv="" f  s idprv=$o(in("arr",2,1,2,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,2,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"VYK","zp",zp)=$g(in("arr",2,1,2,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"jakcek")=$g(in("arr",2,1,3))
 s val="" s $p(val,"|",1)=$g(in("arr",2,1,4)) s $p(val,"|",2)=$g(in("arr",2,1,5))
 s ^[nmsp]OI("MZN",1,"CEK")=val
 s idprv="" f  s idprv=$o(in("arr",2,1,4,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s val="" s $p(val,"|",1)=$g(in("arr",2,1,4,"prv",idprv))
 .s ^[nmsp]OI("MZN",1,"CEK","zp",zp)=val
 s idprv="" f  s idprv=$o(in("arr",2,1,5,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s val=$g(^[nmsp]OI("MZN",1,"CEK","zp",zp))
 .s $p(val,"|",2)=$g(in("arr",2,1,5,"prv",idprv))
 .s ^[nmsp]OI("MZN",1,"CEK","zp",zp)=val
 s ^[nmsp]OI("MZN",1,"proccek")=$g(in("arr",2,1,6))
 s idprv="" f  s idprv=$o(in("arr",2,1,6,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,6,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"proccek","zp",zp)=$g(in("arr",2,1,6,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"CEK1MM")=$g(in("arr",2,1,7))
 s val="" s $p(val,"|",1)=$g(in("arr",2,1,8)) s $p(val,"|",2)=$g(in("arr",2,1,9))
 s ^[nmsp]OI("MZN",1,"CEK1")=val
 s idprv="" f  s idprv=$o(in("arr",2,1,8,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s val="" s $p(val,"|",1)=$g(in("arr",2,1,8,"prv",idprv))
 .s ^[nmsp]OI("MZN",1,"CEK1","zp",zp)=val
 s idprv="" f  s idprv=$o(in("arr",2,1,9,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s val=$g(^[nmsp]OI("MZN",1,"CEK1","zp",zp))
 .s $p(val,"|",2)=$g(in("arr",2,1,9,"prv",idprv))
 .s ^[nmsp]OI("MZN",1,"CEK1","zp",zp)=val
 s ^[nmsp]OI("MZN",1,"proccek1")=$g(in("arr",2,1,10))
 s idprv="" f  s idprv=$o(in("arr",2,1,10,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,10,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"proccek1","zp",zp)=$g(in("arr",2,1,10,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"SPJ")=$g(in("arr",2,1,11))
 s idprv="" f  s idprv=$o(in("arr",2,1,11,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,11,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"SPJ","zp",zp)=$g(in("arr",2,1,11,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"KLO")=$g(in("arr",2,1,12))
 s idprv="" f  s idprv=$o(in("arr",2,1,12,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,12,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"KLO","zp",zp)=$g(in("arr",2,1,12,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"VLEK")=$g(in("arr",2,1,13))
 s idprv="" f  s idprv=$o(in("arr",2,1,13,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,13,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"VLEK","zp",zp)=$g(in("arr",2,1,13,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"NOC")=$g(in("arr",2,1,14))
 s idprv="" f  s idprv=$o(in("arr",2,1,14,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,14,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"NOC","zp",zp)=$g(in("arr",2,1,14,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"jakSPJ")=$g(in("arr",2,1,15))
 s ^[nmsp]OI("MZN",1,"procSPJ")=$g(in("arr",2,1,16))
 s idprv="" f  s idprv=$o(in("arr",2,1,16,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,16,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"procSPJ","zp",zp)=$g(in("arr",2,1,16,"prv",idprv))
 s ^[nmsp]OI("MZN",1,"POHZTIPRO")=$g(in("arr",2,1,17))
 s ^[nmsp]OI("MZN",1,"CEKVV")=$g(in("arr",2,1,18))
 s idprv="" f  s idprv=$o(in("arr",2,1,18,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,1,18,"prv",idprv))'="" s ^[nmsp]OI("MZN",1,"CEKVV","zp",zp)=$g(in("arr",2,1,18,"prv",idprv))
 //nepravidelna doprava - vykonova
 s ^[nmsp]OI("MZN",2,"ZAK")=$g(in("arr",2,2,1))
 s ^[nmsp]OI("MZN",2,"jakcek")=$g(in("arr",2,2,2))
 s val="" s $p(val,"|",1)=$g(in("arr",2,2,3)) s $p(val,"|",2)=$g(in("arr",2,2,4))
 s ^[nmsp]OI("MZN",2,"CEK")=val
 s ^[nmsp]OI("MZN",2,"proccek")=$g(in("arr",2,2,5))
 s ^[nmsp]OI("MZN",2,"CEK1MM")=$g(in("arr",2,2,6))
 s val="" s $p(val,"|",1)=$g(in("arr",2,2,7)) s $p(val,"|",2)=$g(in("arr",2,2,8))
 s ^[nmsp]OI("MZN",2,"CEK1")=val
 s ^[nmsp]OI("MZN",2,"proccek1")=$g(in("arr",2,2,9))
 s ^[nmsp]OI("MZN",2,"SPJ")=$g(in("arr",2,2,10))
 s ^[nmsp]OI("MZN",2,"KLO")=$g(in("arr",2,2,11))
 s idprv="" f  s idprv=$o(in("arr",2,2,11,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,11,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"KLO","zp",zp)=$g(in("arr",2,2,11,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"VLEK")=$g(in("arr",2,2,12))
 s idprv="" f  s idprv=$o(in("arr",2,2,12,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,12,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"VLEK","zp",zp)=$g(in("arr",2,2,12,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"NOC")=$g(in("arr",2,2,13))
 s idprv="" f  s idprv=$o(in("arr",2,2,13,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,13,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"NOC","zp",zp)=$g(in("arr",2,2,13,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"VYK",1)=$g(in("arr",2,2,14))
 k ^[nmsp]OI("MZN",2,"VYK",1,"TYPA")
 s id="" f  s id=$o(in("arr",2,2,14,"tpa",id)) q:id=""  d
 .s val=$g(in("arr",2,2,14,"tpa",id)) q:val=""  s val=+val
 .s ^[nmsp]OI("MZN",2,"VYK",1,"TYPA",val)=$g(^[nmsp]OI("MZN",2,"VYK",1,"TYPA",val))_id_"~"
 s id="" f  s id=$o(^[nmsp]OI("MZN",2,"VYK",1,"TYPA",id)) q:id=""  d
 .s val=$g(^[nmsp]OI("MZN",2,"VYK",1,"TYPA",id))
 .s:$e(val,$l(val))="~" val=$e(val,1,($l(val)-1))
 .s ^[nmsp]OI("MZN",2,"VYK",1,"TYPA",id)=val
 s idprv="" f  s idprv=$o(in("arr",2,2,14,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,14,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"VYK",1,"zp",zp)=$g(in("arr",2,2,14,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"VYK",2)=$g(in("arr",2,2,15))
 s ^[nmsp]OI("MZN",2,"VYK",3)=$g(in("arr",2,2,16))
 s ^[nmsp]OI("MZN",2,"VYK_LKM1")=$g(in("arr",2,2,17))
 s ^[nmsp]OI("MZN",2,"VYK_LKM1",1)=$g(in("arr",2,2,18))
 s idprv="" f  s idprv=$o(in("arr",2,2,18,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,18,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"VYK_LKM1",1,"zp",zp)=$g(in("arr",2,2,18,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"VYK_LKM1",2)=$g(in("arr",2,2,19))
 s ^[nmsp]OI("MZN",2,"VYK_LKM1",3)=$g(in("arr",2,2,20))
 s ^[nmsp]OI("MZN",2,"VYK_LKM2")=$g(in("arr",2,2,21))
 s ^[nmsp]OI("MZN",2,"VYK_LKM2",1)=$g(in("arr",2,2,22))
 s idprv="" f  s idprv=$o(in("arr",2,2,22,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",2,2,22,"prv",idprv))'="" s ^[nmsp]OI("MZN",2,"VYK_LKM2",1,"zp",zp)=$g(in("arr",2,2,22,"prv",idprv))
 s ^[nmsp]OI("MZN",2,"VYK_LKM2",2)=$g(in("arr",2,2,23))
 s ^[nmsp]OI("MZN",2,"VYK_LKM2",3)=$g(in("arr",2,2,24))
 s ^[nmsp]OI("MZN",2,"dorovnatMzdTyp")=$g(in("arr",2,2,25))
 s ^[nmsp]OI("MZN",2,"dorovnatMzdKm")=$g(in("arr",2,2,26))
 s ^[nmsp]OI("MZN",2,"pridatVRMzdTyp")=$g(in("arr",2,2,27))
 s ^[nmsp]OI("MZN",2,"jizdaSoNeTyp")=+$g(in("arr",2,2,28))
 s $p(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1),"~",1)=$g(in("arr",2,2,28,"arr",1,"dta",1))
 s $p(^[nmsp]OI("MZN",2,"jizdaSoNeTyp",1),"~",2)=$g(in("arr",2,2,28,"arr",1,"dta",2))
 s ^[nmsp]OI("MZN",2,"kratitKMMzdTyp")=$g(in("arr",2,2,29))
 s ^[nmsp]OI("MZN",2,"POHZTIPRO")=$g(in("arr",2,2,30))
 s ^[nmsp]OI("MZN",2,"doklDoLimKm")=+$g(in("arr",2,2,31))
 s $p(^[nmsp]OI("MZN",2,"doklDoLimKm",1),"~",1)=$g(in("arr",2,2,31,"arr",1,"dta",1))
 s $p(^[nmsp]OI("MZN",2,"doklDoLimKm",1),"~",2)=$g(in("arr",2,2,31,"arr",1,"dta",2))
 m ^[nmsp]OI("MZN",2,"doklDoLimKm",1,"nDza")=in("arr",2,2,31,"arr",1,"arr",1)
 s ^[nmsp]OI("MZN",2,"dorovnatMzdNoPrv")=$g(in("arr",2,2,32))
 // ========
 // grafikon
 // ========
 s ^[nmsp]OI("MZD","SNIZENASAZBA")=$g(in("arr",3,1))
 s ^[nmsp]OI("MZD","USTI")=$g(in("arr",3,2))
 s ^[nmsp]OI(idfa,"jb","zalhod","set","tar")=$g(in("arr",3,3)) s ^[nmsp]OI(idfa,"jb","zalhod","set","tarh",$h)=$g(in("arr",3,3))_":"_$p(idos,"~",3)
 s ^[nmsp]OI(idfa,"jb","zalhod","set","mod")=$g(in("arr",3,4)) s ^[nmsp]OI(idfa,"jb","zalhod","set","modh",$h)=$g(in("arr",3,4))_":"_$p(idos,"~",3)
 // =================
 // premie pravidelna
 // =================
 s ^[nmsp]OI(idfa,"jb","premiep",1)=$g(in("arr",4,1))
 // ===================
 // premie nepravidelna
 // ===================
 s ^[nmsp]OI("JakPlatitPremieNepr")=$g(in("arr",5,2))
 // ==========
 // premie all
 // ==========
 s ^[nmsp]OI(idfa,"jb","premieall",1)=$g(in("arr",6,1))
 s ^[nmsp]OI(idfa,"jb","premieall",2)=$g(in("arr",6,2))
 s ^[nmsp]OI(idfa,"jb","premieall",3)=$g(in("arr",6,3))
 s ^[nmsp]OI(idfa,"jb","premieall",4)=$g(in("arr",6,4))
 s idprv="" f  s idprv=$o(in("arr",6,4,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",6,4,"prv",idprv))'="" s ^[nmsp]OI(idfa,"jb","premieall",4,"zp",zp)=$g(in("arr",6,4,"prv",idprv))
 s ^[nmsp]OI(idfa,"jb","premieall",5,3)=$g(in("arr",6,5,3))
 s idprv="" f  s idprv=$o(in("arr",6,5,3,"prv",idprv)) q:idprv=""  d
 .k zp s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .i $g(in("arr",6,5,3,"prv",idprv))'="" s ^[nmsp]OI(idfa,"jb","premieall",5,3,"zp",zp)=$g(in("arr",6,5,3,"prv",idprv))
 // =================
 // !!! transakce !!!
 // =================
 tcommit
 q 0
err s $zt="" k out q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
 //
errtroll s $zt="" trollback 1 k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
 //
gSAMZD(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 // out("dta",1)=RIDIC priplatek za odpracované hodiny na turnuse sazba 1(kc/hod)
 // out("dta",2)=RIDIC priplatek za odpracované hodiny na turnuse sazba 2(kc/hod)
 s out("dta",1)=+$g(^[nmsp]OI("MZP",1,"POHTU1"))
 s out("dta",2)=+$g(^[nmsp]OI("MZP",1,"POHTU2"))
 //
 q 0
gMzdSetOne2i(idfa,nmsp,id1,id2)
 n (idfa,nmsp,id1,id2)
 //jednotliva nastaveni pro urychleni programu, dvourovnove
 //vraci jen vybrana, postupne lze doplnovat
 i (id1=0)&(id2=9) q +$g(^[nmsp]OI(idfa,"jb","fond","mode"))
 q ""
gMzdSetArchiv(idfa,nmsp,id,in,out)
 //in("par",1)=info
 //in("idos")=mlp_"~"_loginname_"~"_fullname
 //in("arr",...)= data nastaveni
 //id=$h
 n (idfa,nmsp,id,in,out)
 k out i $g(id)'="" {
	 m out=^[nmsp]OI(idfa,"jb","mzdsetarchiv",id)
 }
 q 0
sMzdSetArchiv(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s id=$h
 k ^[nmsp]OI(idfa,"jb","mzdsetarchiv",id)
 m ^[nmsp]OI(idfa,"jb","mzdsetarchiv",id)=in
 q 0
lMzdSetArchiv(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s id="" f {
	 s id=$o(^[nmsp]OI(idfa,"jb","mzdsetarchiv",id)) i id="" q
	 m out(id,"par")=^[nmsp]OI(idfa,"jb","mzdsetarchiv",id,"par")
	 m out(id,"idos")=^[nmsp]OI(idfa,"jb","mzdsetarchiv",id,"idos")
 }
 q 0
dMzdSetArchiv(idfa,nmsp,id,in,out)
 n (idfa,nmsp,id,in,out)
 k out i $g(id)'="" k ^[nmsp]OI(idfa,"jb","mzdsetarchiv",id)
 q 0
]]></Routine>


<Routine name="OBapiEDSet3" type="INT" languagemode="0" timestamp="64012,51335"><![CDATA[
OBapiEDSet3 q
 //importy dat, nastaveni
gImpSet(idfa,nmsp,in,out)
 //vrati popis souboru
 //out:
 //out("arr,1,1)= oddelovac souboru
 //out("arr",1,2)= pozice rz vozu
 //out("arr",1,3)= pozice popisu mytneho useku
 //out("arr",1,4)= pozice data a času dd/mm/rrrr hh.mm.ss
 //out("arr",1,5)= pozice kategorie
 //out("arr",1,6)= pozice mytne, cislo, desetiny oddelene ,
 //out("arr",1,7)= soubor s daty
 //
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s out("arr",1,1)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",1) // oddelovac souboru
 s out("arr",1,2)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",2) // pozice rz vozu
 s out("arr",1,3)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",3) // pozice popisu mytneho useku
 s out("arr",1,4)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",4) // pozice data a času dd/mm/rrrr hh.mm.ss
 s out("arr",1,5)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",5) // pozice kategorie
 s out("arr",1,6)=$p($g(^[nmsp]OI(idfa,"jb","spz","myt_imp")),"~",6) // pozice mýtné, cislo, desetiny oddelene ,
 s out("arr",1,7)=$g(^[nmsp]OI(idfa,"jb","spz","myt_imp","file"))	 // soubor s daty
 q 0 
sImpSet(idfa,nmsp,in,out)
 //zapis nastaveni
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",1)=$g(in("arr",1,1)) // oddelovac souboru
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",2)=$g(in("arr",1,2))	// pozice rz vozu
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",3)=$g(in("arr",1,3))	// pozice popisu mytneho useku
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",4)=$g(in("arr",1,4))	// pozice data a času dd/mm/rrrr hh.mm.ss
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",5)=$g(in("arr",1,5))	// pozice kategorie
 s $p(^[nmsp]OI(idfa,"jb","spz","myt_imp"),"~",6)=$g(in("arr",1,6))	// pozice mýtné, cislo, desetiny oddelene ,
 s ^[nmsp]OI(idfa,"jb","spz","myt_imp","file")=$g(in("arr",1,7))	// soubor s daty
 q 0
 //exporty dat, nastaveni
gExpSet(idfa,nmsp,in,out)
 //vrati data pro exporty dat
 //out:
 //out("arr",1,1)= cesta pro export planu cerpani PH
 //out("arr",2,1)= cesta pro export DZVA
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s out("arr",1,1)=$p($g(^[nmsp]OI(idfa,"jb","export","set",1)),"~",1) // cesta pro export planu cerpani PH
 s out("arr",2,1)=$p($g(^[nmsp]OI(idfa,"jb","export","set",2)),"~",1) // cesta pro export DZVA
 q 0 
sExpSet(idfa,nmsp,in,out)
 //zapis nastaveni
 //in("arr",1,1)= cesta pro export planu cerpani PH
 //in("arr",2,1)= cesta pro export DZVA
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s $p(^[nmsp]OI(idfa,"jb","export","set",1),"~",1)=$g(in("arr",1,1)) // cesta pro export planu cerpani PH
 s $p(^[nmsp]OI(idfa,"jb","export","set",2),"~",1)=$g(in("arr",2,1)) // cesta pro export DZVA
 q 0
 //
gZskSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 // nastaveni pro doklady dzva se zaskolovanim (ridic instruktor)
 // out("dta",1)= jak vyhodnocovat hodinove a korunove polozky pri zaskolovani (ridic instruktor) 0 vyhodnocovat vse / 1 vyhodnocovat jen vybrane polozky
 // out("arr",1,id1,id2)="" id1,id2 polozek, ktere se pocitaji
 s out("dta",1)=+$p($g(^[nmsp]OI(idfa,"jb","dzva","set","zaskolovani")),"~",1)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","dzva","set","zaskolovani",1)
 q 0
sZskSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s $p(^[nmsp]OI(idfa,"jb","dzva","set","zaskolovani"),"~",1)=$g(in("dta",1))
 k ^[nmsp]OI(idfa,"jb","dzva","set","zaskolovani",1) m ^[nmsp]OI(idfa,"jb","dzva","set","zaskolovani",1)=in("arr",1)
 q 0
 //
err s $zt="" k out q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDSet4" type="INT" languagemode="0" timestamp="65574,80550.772542"><![CDATA[
OBapiEDSet4 q
 //plan dopravy, obecne nastaveni
 /*
gPlnSet(idfa,nmsp,in,out)
 //nastaveni pro plan
 //out:
 //out("arr",1,1,"dta",1)= predznaceny doklad, prenaset pri omezenem turnusu (od nebo do spoje) na dzva diety 0 neprenaset / 1 prenaset
 //out("arr",1,1,"dta",2)= predznaceny doklad, prenaset pri omezenem turnusu (od nebo do spoje) na dzva dodk 0 neprenaset / 1 prenaset
 //out("arr",1,1,"dta",3)= predznaceny doklad, prenaset pri omezenem turnusu (od nebo do spoje) na dzva nocovne 0 neprenaset / 1 prenaset
 //
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 // predznaceny doklad DZVA, jak prenaset udaje
 s val=$g(^[nmsp]OI(idfa,"jb","pln","set",1,1))
 f cnt=1:1:3 s out("arr",1,1,"dta",cnt)=+$p(val,"~",cnt)
 q 0
 */
 /* 
sPlnSet(idfa,nmsp,in,out)
 //zapis nastaveni
 // predznaceny doklad DZVA, jak prenaset udaje
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val="" f cnt=1:1:3 s $p(val,"~",cnt)=+$g(in("arr",1,1,"dta",cnt))
 s ^[nmsp]OI(idfa,"jb","pln","set",1,1)=val
 q 0
 */
 //stravenky
gStrvSet(idfa,nmsp,in,out)
 //arr("dta",1)= vyhodnocovat stravenky pro ridice 0/1
 //arr("dta",2)= algoritmus 0 - obecny
 //arr("dta",3)= volne, drive id grafikonove polozky (ted se nepouziva, nastaveni se bere z grafikonu polozek, mozno pouzit pro neco jineho) 
 //arr("arr",0,"dta",1)=mmlimit1~pocet1
 //arr("arr",0,"dta",2)=mmlimit2~pocet2
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val=$g(^[nmsp]OI(idfa,"jb","stravenky"))
 f cnt=1:1:3 s out("dta",cnt)=$p(val,"~",cnt) i (cnt=1)!(cnt=2) s out("dta",cnt)=+out("dta",cnt)
 s out("arr",0,"dta",1)=$g(^[nmsp]OI(idfa,"jb","stravenky",0,1))
 s out("arr",0,"dta",2)=$g(^[nmsp]OI(idfa,"jb","stravenky",0,2))
 q 0
 //
sStrvSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val="" f cnt=1:1:3 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"jb","stravenky")=val
 s ^[nmsp]OI(idfa,"jb","stravenky",0,1)=$g(in("arr",0,"dta",1))
 s ^[nmsp]OI(idfa,"jb","stravenky",0,2)=$g(in("arr",0,"dta",2))
 q 0
 //MPVNET
gMPVNETSet(idfa,nmsp,in,out)
 //arr("dta",1)= exportovat plan 0/1
 //arr("dta",2)= exportovat tel.cisla ridicu 0/1
 //arr("dta",3)= exportovat ridice 0/1
 //arr("dta",4)= exportovat turnusy 0/1
 //arr("arr",1,idprac)=""
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val=$g(^[nmsp]OI(idfa,"jb","mpvnet"))
 f cnt=1:1:4 s out("dta",cnt)=$p(val,"~",cnt) i (cnt=1)!(cnt=2)!(cnt=3)!(cnt=4) s out("dta",cnt)=+out("dta",cnt)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","mpvnet",1)
 q 0
 //
sMPVNETSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val="" f cnt=1:1:4 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"jb","mpvnet")=val
 k ^[nmsp]OI(idfa,"jb","mpvnet",1) m ^[nmsp]OI(idfa,"jb","mpvnet",1)=in("arr",1)
 q 0
 //TMAPY
gTMAPYSet(idfa,nmsp,in,out)
 //arr("dta",1)= exportovat plan 0/1
 //arr("dta",2)= exportovat ridice 0/1
 //arr("dta",3)= exportovat vozidla 0/1
 //arr("dta",4)= zpusob exportu spoju 0 vse / 1 podle nastaveni parametru "export T-MAPY" v ciselniku PRS
 //arr("arr",1,idprv)="" 	... provozovny pro plan dopravy
 //arr("arr",2,druhtypu)="" ... druh typu pro vozidla
 //arr("arr",3,ns)="" 		... ns pro vozidla
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val=$g(^[nmsp]OI(idfa,"jb","tmapy"))
 f cnt=1:1:4 s out("dta",cnt)=$p(val,"~",cnt) i (cnt=1)!(cnt=4) s out("dta",cnt)=+out("dta",cnt)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","tmapy",1)
 m out("arr",2)=^[nmsp]OI(idfa,"jb","tmapy",2)
 m out("arr",3)=^[nmsp]OI(idfa,"jb","tmapy",3)
 q 0
 //
sTMAPYSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val="" f cnt=1:1:4 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"jb","tmapy")=val
 k ^[nmsp]OI(idfa,"jb","tmapy",1) m ^[nmsp]OI(idfa,"jb","tmapy",1)=in("arr",1)
 k ^[nmsp]OI(idfa,"jb","tmapy",2) m ^[nmsp]OI(idfa,"jb","tmapy",2)=in("arr",2)
 k ^[nmsp]OI(idfa,"jb","tmapy",3) m ^[nmsp]OI(idfa,"jb","tmapy",3)=in("arr",3)
 q 0
 //EMTEST
gEMTESTSet(idfa,nmsp,in,out)
 //arr("dta",1)= exportovat plan 0/1
 //arr("dta",2)= exportovat tel.cisla ridicu 0/1
 //arr("dta",3)= exportovat ridice 0/1
 //arr("dta",4)= exportovat turnusy 0/1
 //arr("dta",5)= export pres ulohu na pozadi - jaky datum 0 aktualni / 1 nasledujici den
 //arr("dta",6)= export pres ulohu na pozadi - adresar pro export
 //arr("arr",1,idprac)=""
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val=$g(^[nmsp]OI(idfa,"jb","emtest"))
 f cnt=1:1:6 s out("dta",cnt)=$p(val,"~",cnt) i (cnt=1)!(cnt=2)!(cnt=3)!(cnt=4)!(cnt=5) s out("dta",cnt)=+out("dta",cnt)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","emtest",1)
 q 0
 //
sEMTESTSet(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val="" f cnt=1:1:6 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"jb","emtest")=val
 k ^[nmsp]OI(idfa,"jb","emtest",1) m ^[nmsp]OI(idfa,"jb","emtest",1)=in("arr",1)
 q 0
 //barevne schema turnusu
gTuRowColorSet(idfa,nmsp,in,out)
 //
 //arr("arr",-1,id)=popis
 //arr("arr",1,id)=color
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 // ciselnik moznych radku pro obarveni pri editaci turnusu   
 // 
 k arr s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arr) zt:+err "merr" s err=""
 s irow=0
 // funkce
 s out("arr",-1,-1)="Možno kopírovat"
 s out("arr",+1,-1)=$g(^[nmsp]OI(idfa,"jb","turowcolor",1,-1))
 s id="" f  {
	 s id=$o(arr("arr",id)) i id="" q
	 i id=0 continue		//cekani ne
	 s out("arr",-1,id)=$g(arr("arr",id))
 	 s out("arr",+1,id)=$g(^[nmsp]OI(idfa,"jb","turowcolor",1,id))
	 i id=3 {
		 s out("arr",-1,(id+.01))=$g(arr("arr",id))_" - radiobus"
		 s out("arr",-1,(id+.02))=$g(arr("arr",id))_" - objížďkový"
 	 	 s out("arr",+1,(id+.01))=$g(^[nmsp]OI(idfa,"jb","turowcolor",1,(id+.01)))
 	 	 s out("arr",+1,(id+.02))=$g(^[nmsp]OI(idfa,"jb","turowcolor",1,(id+.02)))
	 }
 }
 q 0
 //
sTuRowColorSet(idfa,nmsp,in,out)
 //arr("arr",1,id)=color
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 k ^[nmsp]OI(idfa,"jb","turowcolor")
 m ^[nmsp]OI(idfa,"jb","turowcolor",1)=in("arr",1)
 q 0
 //
 //pravidla pro priplatek za ztizene pracovni prostredi
 //
isZtzPracSet(idfa,nmsp,in,out)
 //out=vyhodnocovat priplatek za ztizene pracovni prostredi 0/1
 //pokud out=1 pak vraci parametry pro vypocet
 //out("dta",1)= vyhodnocovat priplatek za ztizene pracovni prostredi 0/1
 //out("dta",2)= limit minut pro cekani v turnuse, od ktereho se bude vyhodnocovat ztizene pracovni prostredi 
 //out("dta",3)= algoritmus pro vyhodnoceni 0 – cast ztizeneho cekani v nastavenem limitu preruseni / 1 – cele ztizene cekani v nastavenem limitu preruseni 
 //out("dta",4)= ztizene cekani vyhodnocovat v cinnostech 0 cekani / 1 cekani+delena smena / 2 delena smena
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s out=+$g(^[nmsp]OI(idfa,"jb","stzprac"))
 i out {
	s val=$g(^[nmsp]OI(idfa,"jb","stzprac"))
 	f cnt=1:1:4 s out("dta",cnt)=+$p(val,"~",cnt)
 }
 q 0
gZtzPracSet(idfa,nmsp,in,out)
 //arr("dta",1)= vyhodnocovat priplatek za ztizene pracovni prostredi 0/1
 //arr("dta",2)= limit minut pro cekani v turnuse, od ktereho se bude vyhodnocovat ztizene pracovni prostredi 
 //arr("dta",3)= algoritmus pro vyhodnoceni 0 – cast ztizeneho cekani v nastavenem limitu preruseni / 1 – cele ztizene cekani v nastavenem limitu preruseni 
 //arr("dta",4)= ztizene cekani vyhodnocovat v cinnostech 0 cekani / 1 cekani+delena smena / 2 delena smena
 //arr("arr",1,idzast)=""
 //arr("arr",2,osc)=idzast~idzast~...
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 s val=$g(^[nmsp]OI(idfa,"jb","stzprac"))
 f cnt=1:1:4 s out("dta",cnt)=+$p(val,"~",cnt)
 m out("arr",1)=^[nmsp]OI(idfa,"jb","stzprac",1)
 m out("arr",2)=^[nmsp]OI(idfa,"jb","stzprac",2)
 q 0
 //
sZtzPracSet(idfa,nmsp,in,out)
 //arr("dta",1)= vyhodnocovat priplatek za ztizene pracovni prostredi 0/1
 //arr("dta",2)= limit minut pro cekani v turnuse, od ktereho se bude vyhodnocovat ztizene pracovni prostredi 
 //arr("dta",3)= algoritmus pro vyhodnoceni 0 – cast ztizeneho cekani v nastavenem limitu preruseni / 1 – cele ztizene cekani v nastavenem limitu preruseni 
 //arr("dta",4)= ztizene cekani vyhodnocovat v cinnostech 0 cekani / 1 cekani+delena smena / 2 delena smena
 //arr("arr",1,idzast)=""
 //arr("arr",2,osc)=idzast~idzast~...
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 k ^[nmsp]OI(idfa,"jb","stzprac")
 s val="" f cnt=1:1:4 s $p(val,"~",cnt)=+$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"jb","stzprac")=val
 m ^[nmsp]OI(idfa,"jb","stzprac",1)=in("arr",1)
 m ^[nmsp]OI(idfa,"jb","stzprac",2)=in("arr",2)
 q 0
 //
gZtzPracZst(idfa,nmsp,os,in,out)
 //seznam zastavek s obvyklym socialnim zarizenim   
 //arr("arr",1,idzast)=""
 n (idfa,nmsp,os,in,out) s $zt="err" s err="" k out
 //obecne zastavky
 m out("arr",1)=^[nmsp]OI(idfa,"jb","stzprac",1)
 //zastavky pro ridice
 i $g(os)'="" {
	i $g(^[nmsp]OI(idfa,"jb","stzprac",2,os))'="" {
		s val=$g(^[nmsp]OI(idfa,"jb","stzprac",2,os))
		f cnt=1:1:$l(val,"~") {
			s idzst=$p(val,"~",cnt)
			i idzst'="" {
				s out("arr",1,idzst)=""
			}
		}
 	}
 }
 q 0
 //
chngZtzPracSetLocZst(idfa,nmsp,fromczs,toczs,in,out)
 //precislovani zastavky v nastaveni zastavek pro priplatek za ztizene prostredi
 n (idfa,nmsp,fromczs,toczs,in,out) s $zt="err" s err="" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(fromczs)="" q "1~fromczs="
 i $g(toczs)="" q "1~toczs="
 //
 s fromczs=fromczs_"/L"
 s toczs=toczs_"/L"
 //
 //obecne zastavky
 i $d(^[nmsp]OI(idfa,"jb","stzprac",1,fromczs)) {
	 k ^[nmsp]OI(idfa,"jb","stzprac",1,fromczs)
	 s ^[nmsp]OI(idfa,"jb","stzprac",1,toczs)=""
 }
 //
 //zastavky pro os
 s os="" f {
	 s os=$o(^[nmsp]OI(idfa,"jb","stzprac",2,os)) i os="" q
	 s val=$g(^[nmsp]OI(idfa,"jb","stzprac",2,os))
	 f cnt=1:1:$l(val,"~") i $p(val,"~",cnt)=fromczs s $p(val,"~",cnt)=toczs
	 s ^[nmsp]OI(idfa,"jb","stzprac",2,os)=val
 }
 //
 q 0
 //
isZtzPracSetLocZst(idfa,nmsp,czs,in,out)
 // err=$$isZtzPracSetLocZst(idfa,nmsp,czs,.in,.out) - kontrola na vyskyt lokalni zastavky
 // in -
 // out - počet výskytů
 // 
 n (idfa,nmsp,czs,in,out) k out
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(czs)="" q "1~czs="
 //
 s myczs="" f {
	 s myczs=$o(^[nmsp]OI(idfa,"jb","stzprac",1,myczs)) i myczs="" q
	 i (myczs["/")&(+myczs=+czs) s out=$g(out)+1
 }
 s os="" f {
	 s os=$o(^[nmsp]OI(idfa,"jb","stzprac",2,os)) i os="" q
	 s val=$g(^[nmsp]OI(idfa,"jb","stzprac",2,os))
	 f cnt=1:1:$l(val,"~") s myczs=$p(val,"~",cnt) i (myczs["/")&(+myczs=+czs) s out=$g(out)+1
 }
 q 0
 //
err s $zt="" k out q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDSet5" type="INT" languagemode="0" timestamp="64698,35039.764747"><![CDATA[
OBapiEDSet5	q
initMzdSet3(idfa,nmsp,in,out)
 k arr
 s arr("arr",1,1,0)="120~120~940"		//sazby podle doby provozu ...,mm)=jednomuzny~dvoumuzny~dvoumuzny obden
 s arr("arr",1,1,61)="220~225~940"
 s arr("arr",1,1,121)="280~295~940"
 s arr("arr",1,1,181)="340~360~940"
 s arr("arr",1,1,241)="400~410~940"
 s arr("arr",1,1,301)="460~475~940"
 s arr("arr",1,1,361)="520~720~940"
 s arr("arr",1,1,421)="580~720~940"
 s arr("arr",1,1,481)="630~720~940"
 s arr("arr",1,1,561)="680~720~940"
 s arr("arr",1,1,601)="700~720~940"
 s arr("arr",1,1,661)="730~720~940"
 s arr("arr",1,1,721)="760~720~940"
 s arr("arr",1,1,841)="790~720~940"
 s arr("arr",1,1,901)="840~720~940"
 s arr("arr",1,2)=58.6					//zakladni hodinovy tarif ridicu
 //pravidelna
 s arr("arr",2,1)=20					//+-spoje
 s arr("arr",2,2,0)=0					//priplatek za spoje podle delky
 s arr("arr",2,2,70)=50					//priplatek za spoje podle delky od 70km
 s arr("arr",2,2,150)=200				//priplatek za spoje podle delky od 150km
 s arr("arr",2,3,3)="50~50" 			//priplatek podle druhu spoje, je li pocet spoju typu MHD na dokladu vyssi nez 50%, je priplatek 50Kc (%~Kc)
 //nepravidelna
 s arr("arr",3,1)=1						//sj v ramci turnusu - kc za km
 s arr("arr",3,2)=50					//sj v ramci turnusu - kc za 1 hod čekani
 s arr("arr",3,3)="150~.5"				//priplatek za km nad 150 km je .5Kc
 s err=$$sMzdSet3(idfa,nmsp,.arr,"")	//zapis do db
 q 0
gMzdSet3(idfa,nmsp,in,out)
 //===============================================
 //mzdove nastaveni pro pausalni vypocet mezd - UH 
 //global ^[nmsp]OI(idfa,"jb","mzd1","set",...
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 m out("arr")=^[nmsp]OI(idfa,"jb","mzd1","set")
 q 0
sMzdSet3(idfa,nmsp,in,out)
 //===============================================
 //mzdove nastaveni pro pausalni vypocet mezd - UH
 //global ^[nmsp]OI(idfa,"jb","mzd1","set",...
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 k ^[nmsp]OI(idfa,"jb","mzd1","set")
 m ^[nmsp]OI(idfa,"jb","mzd1","set")=in("arr")
 q 0
 //
 //===================
 //casove sazby pro UH
 //===================
initMzdSet4(idfa,nmsp,in,out)
 k arr
 //pravidelna doprava
 s arr("arr",1,1)=98.10 	//jednosmenne turnusy (jednomuzne) - zakladni tarif , kc/hod 
 s arr("arr",1,2)=88.29		//jednosmenne turnusy (jednomuzne) - cekani, kc/hod
 s arr("arr",1,3)=6.60		//jednosmenne turnusy (jednomuzne) - priplatek za ztizene prostredi kc/hod
 s arr("arr",1,4)=101.30	//dvousmenne turnusy (dvoumuzne a dvoumuzne obden) - zakladni tarif, kc/hod
 s arr("arr",1,5)=91.17  	//dvousmenne turnusy (dvoumuzne a dvoumuzne obden) - cekani, kc/hod
 s arr("arr",1,6)=6.82  	//dvousmenne turnusy (dvoumuzne a dvoumuzne obden) - priplatek za ztizene prostredi kc/hod
 s arr("arr",1,7)=98.10  	//pohotovostni turnus - zakladni tarif , kc/hod provozu
 //nepravidelna doprava
 s arr("arr",2,1)=1  		//v ramci turnusu - sazba za vykon a cekani, kc/min
 s arr("arr",2,2)=98.10  	//mimo turnus - zakladni tarif , kc/hod
 s arr("arr",2,3)=88.29  	//mimo turnus - cekani, kc/hod
 s arr("arr",2,4)=6.60  	//mimo turnus - priplatek za ztizene prostredi kc/hod
 s err=$$sMzdSet4(idfa,nmsp,.arr,"")	//zapis do db
 q 0
gMzdSet4(idfa,nmsp,in,out)
 //===============================================
 //mzdove nastaveni pro casovy vypocet mezd - UH
 //global ^[nmsp]OI(idfa,"jb","mzd2","set",...
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 m out("arr")=^[nmsp]OI(idfa,"jb","mzd2","set")
 q 0
sMzdSet4(idfa,nmsp,in,out)
 //===============================================
 //mzdove nastaveni pro pausalni vypocet mezd - UH
 //global ^[nmsp]OI(idfa,"jb","mzd2","set",...
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 k ^[nmsp]OI(idfa,"jb","mzd2","set")
 m ^[nmsp]OI(idfa,"jb","mzd2","set")=in("arr")
 q 0
 //
 //=========================================
 //vykonove mzdy - mzda za linku a spoj - SA
 //=========================================
gMzdSetMZP2LS(idfa,nmsp,in,out)
 //===============================================
 //vykonove mzdy - mzda za linku a spoj - SA
 //out("arr",1,li,sp,1)=kc
 //prevedeno do evidence spoju - nepouziva se 
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 m out("arr",1)=^[nmsp]OI("MZP",2,"MLS")
 q 0
sMzdSetMZP2LS(idfa,nmsp,in,out)
 //===============================================
 //vykonove mzdy - mzda za linku a spoj - SA
 //in("arr",1,li,sp,1)=kc
 //prevedeno do evidence spoju - nepouziva se 
 //===============================================
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 k ^[nmsp]OI("MZP",2,"MLS")
 m ^[nmsp]OI("MZP",2,"MLS")=in("arr",1)
 q 0
 //============================================ 
 //pravidla pro tuzemske diety podle provozoven
 //============================================
gTDiePrv(idfa,nmsp,in,out)
 //arr("dta",1)=zpusob zaokrouhleni 0 na cele cislo /1 na 2 desetiny /2 bez zaokrouhleni
 //arr("arr",idprv,"dta",1)=provozovna pouziva vlastni nastaveni pravidel pro tuzemske diety 0/1
 //arr("arr",idprv,"arr",1,id)=val kde id=dobaOd(mm), val=dobaDo(mm)~dietyKc~kraceni%~dietyKcLimit(pro vypocet nadlimitnich diet)
 n (idfa,nmsp,in,out) s $zt="err" s err="" k out
 //
 s val=$g(^[nmsp]OI(idfa,"TDIESET"))
 f cnt=1:1:1 s out("dta",cnt)=$p(val,"~",cnt)
 //
 s idprv="" f {
	 s idprv=$o(^[nmsp]OI(idfa,"TDIEPRV",idprv)) i idprv="" q
	 s val=$g(^[nmsp]OI(idfa,"TDIEPRV",idprv))
	 f cnt=1:1:1 s out("arr",idprv,"dta",cnt)=$p(val,"~",cnt)
	 m out("arr",idprv,"arr",1)=^[nmsp]OI(idfa,"TDIEPRV",idprv,1)
 }
 q 0
 //
sTDiePrv(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s $zt="err" s err="" k out
 //
 s val="" f cnt=1:1:1 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OI(idfa,"TDIESET")=val
 //
 k ^[nmsp]OI(idfa,"TDIEPRV")
 s idprv="" f {
	 s idprv=$o(in("arr",idprv)) i idprv="" q
	 s val="" f cnt=1:1:1 s $p(val,"~",cnt)=$g(in("arr",idprv,"dta",cnt))
	 s ^[nmsp]OI(idfa,"TDIEPRV",idprv)=val
	 m ^[nmsp]OI(idfa,"TDIEPRV",idprv,1)=in("arr",idprv,"arr",1)
 }
 q 0
 //
err s $zt="" k out q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDSj" type="INT" languagemode="0" timestamp="65514,36450.570381"><![CDATA[
OBapiEDSj q
 // api SJ
isSj(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$isSj(idfa,nmsp,zp,rrmm,doc,in,out) - kontrola, zda existuje doklad
 // out= 0 neexistuje / >0 existuje
 // out("stt")=stav dokladu 0 predznacen / 1 porizen / 2 vyfakturovan / 3 zrusen (pokud doklad existuje)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // existence dokladu
 s out=$d(^[nmsp]OBD(zp,rrmm,doc))
 // stav dokladu
 s:$g(out) out("stt")=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",1)
 //
 q 0
 //
mvSj(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out)
 // err=$$mvSj(idfa,nmsp,zp,rrmm,doc,rrmmto,in,out) - presun predznaceneho dokladu do jineho obdobi
 // out= 0 nepresunuto / 1 presunuto
 n (idfa,nmsp,zp,rrmm,doc,rrmmto,in,out)
 s $zt="err" k out s out=0 s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(rrmmto)="" q "1~rrmm="
 // existence dokladu
 i $d(^[nmsp]OBD(zp,rrmm,doc)) {
	 // stav predznaceno
	 i '$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",1) {
		 //neexistuje v obdobi, kam prenasim
		 i '$d(^[nmsp]OBD(zp,rrmmto,doc)) {
			m ^[nmsp]OBD(zp,rrmmto,doc)=^[nmsp]OBD(zp,rrmm,doc)
		 	//doklad je jen predznaceny, lze jen kill
		 	k ^[nmsp]OBD(zp,rrmm,doc)
		 	s out=1
		 }
	 }
 }
 q 0
 //
gSj(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gSj(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data spolecne jizdenky
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)= 0/1 ... mod pro nacteni kontroly autobusu z vozidel
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 //systemovy namespace
 s sysnmsp=$$gSystemNmsp^OBapiED()
 // data sj
 s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 f cnt=1:1:$$gPcNDU() s out("dta",cnt)=$p(val,":",cnt)
 // konverze datumovych polozek na horlog
 f cnt=6,7 d
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$dn^OBapiED($g(out("dta",cnt)))
 // presun polozky doba cekani pro fakturaci z 13 do 71
 i $p($g(out("dta",13)),"/",2) d
 .i $g(out("dta",71))="" s out("dta",71)=$p($g(out("dta",13)),"/",1)
 .s out("dta",13)=$p($g(out("dta",13)),"/",2)
 // konverze hodinovych polozek na minutove
 f cnt=12,13,14,51,57,58,70,71 d
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$hm^OBapiED(out("dta",cnt))
 // mzdove udaje ridicu
 s seqosc=0
 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 .s seqosc=seqosc+1
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc))
 .f cnt=1:1:$$gPcNMU() s out("osc",osc,"dta",cnt)=$p(val,":",cnt)
 .// konverze hodinovych polozek na minutove
 .f cnt=4,5,6,7,8,9,12,13,21,27,32,33 d
 ..q:'$d(out("osc",osc,"dta",cnt))
 ..q:$g(out("osc",osc,"dta",cnt))=""
 ..s out("osc",osc,"dta",cnt)=$$hm^OBapiED($g(out("osc",osc,"dta",cnt)))
 .// dalsi parametry ridice
 .//poradi ridice pro vypis
 .i +$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)) s out("osc",osc,"par",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc))
 .i '$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)) s out("osc",osc,"par",1)=seqosc
 .//ns ridice
 .s out("osc",osc,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",2)
 .//narok na priplatek za ztizene prostredi
 .s out("osc",osc,"par",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",3)
 .//subdodany ridic 0/1
 .s out("osc",osc,"par",4)=+$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",4)
 .//IC spolecnosti, ktera subdodala ridice
 .s out("osc",osc,"par",5)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",5)
 .// pendl
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"I"))
 .s out("osc",osc,"pnd",1)=+$p(val,":",7) i ($p(val,":",7)="")&$d(^[nmsp]OBD(zp,rrmm,doc,osc,"I")) s out("osc",osc,"pnd",1)=1
 .s out("osc",osc,"pnd",2)=$p(val,":",1)
 .s out("osc",osc,"pnd",3)=$p(val,":",2)
 .s out("osc",osc,"pnd",4)=$p(val,":",3)
 .s out("osc",osc,"pnd",5)=$p(val,":",4)
 .s out("osc",osc,"pnd",6)=$p(val,":",5)
 .s out("osc",osc,"pnd",7)=$p(val,":",6)
 .s out("osc",osc,"pnd",8)=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"koef")) 
 .s out("osc",osc,"pnd",9)=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"koefM"))
 .// konverze hodinovych polozek na minutove
 .f cnt=2,3 d
 ..i +$g(out("osc",osc,"pnd",cnt)) s out("osc",osc,"pnd",cnt)=$$hm^OBapiED(out("osc",osc,"pnd",cnt))
 // fakturace data
 s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak"))
 f cnt=1:1:$$gPcFakSj() s out("fak","dta",cnt)=$p(val,"~",cnt)
 // fakturacni polozky
 s iditm="" f  s iditm=$o(^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)) q:iditm=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)) 
 .f cnt=1:1:$$gPcFakItmSj() d
 ..s out("fak","itm",iditm,"dta",cnt)=$p(val,"~",cnt)
 // fakturace poplatky
 s idppl="" f  s idppl=$o(^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb)) q:iddsb=""  d
 ..s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb))
 ..f cnt=1:1:$$gPcFakPplSj() d
 ...s out("fak","arr",1,idppl,iddsb,"dta",cnt)=$p(val,"~",cnt)
 ..// rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=$g(^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb,"arr",1,idstt))
 ...f cnt=1:1:1 d
 ....s out("fak","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 // fakturacni data postaru
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"fak")))&($d(^[nmsp]OBD(zp,rrmm,doc,"F"))) d
 .k out("fak","dta")
 .s val=$p($g(^[nmsp]OBD(zp,rrmm,doc,"F")),"#",1)
 .s out("fak","dta",1)=$p(val,":",5)				//sleva/prirazka
 .s out("fak","dta",2)=$p($p(val,":",23),"/",1) 	//kod statu
 .s out("fak","dta",3)=$p($p(val,":",23),"/",2) 	//popis statu
 .s out("fak","dta",4)=$p(val,":",20)				//ns pro fakturaci
 // fakturacni polozky postaru
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"fak")))&($d(^[nmsp]OBD(zp,rrmm,doc,"F"))) d
 .k out("fak","itm")
 .f cnt=2:1:$l($g(^[nmsp]OBD(zp,rrmm,doc,"F")),"#") d
 ..s val=$p($g(^[nmsp]OBD(zp,rrmm,doc,"F")),"#",cnt) q:val=""
 ..s iditm=$p(val,"|",1)
 ..s out("fak","itm",iditm,"dta",1)=$p($p(val,"|",2),":",1)
 ..s out("fak","itm",iditm,"dta",2)=$p($p(val,"|",2),":",2)
 ..s out("fak","itm",iditm,"dta",3)=$p($p(val,"|",2),":",3)
 // poplatky postaru
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"fak")))&($d(^[nmsp]OBD(zp,rrmm,doc,"Poplatky"))) d
 .s idppl="" f  s idppl=$o(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl)) q:idppl=""  d
 ..s iddsb="" f  s iddsb=$o(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl,iddsb)) q:iddsb=""  d
 ...i '$g(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl,iddsb)) q
 ...//vypocet dane a ceny celkem
 ...k arri,arro
 ...i ##class(%Dictionary.CompiledMethod).%Exists($lb("ALVA.FAKTURACE.ApiKM||CalcCen"))=1 d
 ....s arri("IdFa")=idfa
 ....s arri("Zaklad")=$g(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl,iddsb))
 ....s arri("Datum")=$$nd^OBapiED($g(out("dta",6)),0)
 ....s arri("Mena")=$g(out("dta",67)) s:arri("Mena")="" arri("Mena")="CZK"
 ....s:iddsb=1 arri("Sazba")="N"
 ....s:iddsb=2 arri("Sazba")="S"
 ....s:iddsb=3 arri("Sazba")="Z"
 ....s:iddsb=4 arri("Sazba")="S2"
 ....s err=##class(ALVA.FAKTURACE.ApiKM).CalcCen(.arri,.arro)
 ...s out("fak","arr",1,idppl,iddsb,"dta",1)=$g(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl,iddsb))		//zaklad
 ...s out("fak","arr",1,idppl,iddsb,"dta",2)=$g(arro("Celkem"))										//celkem kc - dopocet
 ...s out("fak","arr",1,idppl,iddsb,"dta",3)=$g(arro("Dan"))										//dan kc - dopocet
 ...s out("fak","arr",1,idppl,iddsb,"dta",4)=0														//porizeno (0 zaklad / 1 celkem)
 ...s out("fak","arr",1,idppl,iddsb,"dta",5)=$g(^[nmsp]OBD(zp,rrmm,doc,"Poplatky",idppl))			//vlastni popis
 ...s out("fak","arr",1,idppl,iddsb,"dta",6)=0														//je soucast smluvni ceny (0 ne / 1 ano)
 ...s out("fak","arr",1,idppl,iddsb,"dta",7)=0													    //je rozpis po statech pro zahranicni dph (0 ne / 1 ano)
 // poplatky - soucast smluvni ceny
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"fak")))&($d(^[nmsp]OBD(zp,rrmm,doc,"Popltxt"))) d
 .s idppl="" f  s idppl=$o(^[nmsp]OBD(zp,rrmm,doc,"Popltxt",idppl)) q:idppl=""  d
 ..//danova sazba podle dza
 ..i $g(out("dta",10))="" q
 ..k arr s err=$$gCisItm^OBapiED(idfa,nmsp,1,$g(out("dta",10)),"",.arr) zt:+err "merr" s err=""
 ..s iddsb=$p($g(arr("arr",$g(out("dta",10)))),"~",8)
 ..i iddsb="" q
 ..k arri,arro
 ..i ##class(%Dictionary.CompiledMethod).%Exists($lb("ALVA.FAKTURACE.ApiKM||CalcCen"))=1 d
 ...s arri("IdFa")=idfa
 ...s arri("Zaklad")=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Popltxt",idppl)),"~",1)
 ...s arri("Datum")=$$nd^OBapiED($g(out("dta",6)),0)
 ...s arri("Mena")=$g(out("dta",67)) s:arri("Mena")="" arri("Mena")="CZK"
 ...s:iddsb=1 arri("Sazba")="N"
 ...s:iddsb=2 arri("Sazba")="S"
 ...s:iddsb=3 arri("Sazba")="Z"
 ...s:iddsb=4 arri("Sazba")="S2"
 ...s err=##class(ALVA.FAKTURACE.ApiKM).CalcCen(.arri,.arro)
 ..s out("fak","arr",1,idppl,iddsb,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Popltxt",idppl)),"~",1)		//zaklad
 ..s out("fak","arr",1,idppl,iddsb,"dta",2)=$g(arro("Celkem"))	  										//celkem kc - dopocet
 ..s out("fak","arr",1,idppl,iddsb,"dta",3)=$g(arro("Dan"))												//dan kc - dopocet
 ..s out("fak","arr",1,idppl,iddsb,"dta",4)=0															//porizeno (0 zaklad / 1 celkem)
 ..s out("fak","arr",1,idppl,iddsb,"dta",5)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"Popltxt",idppl)),"~",2)		//vlastni popis
 ..s out("fak","arr",1,idppl,iddsb,"dta",6)=1															//je soucast smluvni ceny (0 ne / 1 ano)
 ..s out("fak","arr",1,idppl,iddsb,"dta",7)=0															//je rozpis po statech pro zahranicni dph (0 ne / 1 ano)
 // mytne v CR, soucast smluvni ceny
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"fak")))&($d(^[nmsp]OBD(zp,rrmm,doc,"MytCRSML"))) d
 .//danova sazba podle dza
 .i $g(out("dta",10))="" q
 .k arr s err=$$gCisItm^OBapiED(idfa,nmsp,1,$g(out("dta",10)),"",.arr) zt:+err "merr" s err=""
 .s iddsb=$p($g(arr("arr",$g(out("dta",10)))),"~",8)
 .i iddsb="" q
 .k arri,arro
 .i ##class(%Dictionary.CompiledMethod).%Exists($lb("ALVA.FAKTURACE.ApiKM||CalcCen"))=1 d
 ..s arri("IdFa")=idfa
 ..s arri("Zaklad")=$g(^[nmsp]OBD(zp,rrmm,doc,"MytCRSML"))
 ..s arri("Datum")=$$nd^OBapiED($g(out("dta",6)),0)
 ..s arri("Mena")=$g(out("dta",67)) s:arri("Mena")="" arri("Mena")="CZK"
 ..s:iddsb=1 arri("Sazba")="N"
 ..s:iddsb=2 arri("Sazba")="S"
 ..s:iddsb=3 arri("Sazba")="Z"
 ..s:iddsb=4 arri("Sazba")="S2"
 ..s err=##class(ALVA.FAKTURACE.ApiKM).CalcCen(.arri,.arro)
 .s out("fak","arr",1,1600,iddsb,"dta",1)=$g(^[nmsp]OBD(zp,rrmm,doc,"MytCRSML")) 						//zaklad
 .s out("fak","arr",1,1600,iddsb,"dta",2)=$g(arro("Celkem")) 											//celkem kc - dopocet
 .s out("fak","arr",1,1600,iddsb,"dta",3)=$g(arro("Dan"))												//dan kc - dopocet
 .s out("fak","arr",1,1600,iddsb,"dta",4)=0																//porizeno (0 zaklad / 1 celkem)
 .s out("fak","arr",1,1600,iddsb,"dta",5)=""															//vlastni popis
 .s out("fak","arr",1,1600,iddsb,"dta",6)=1																//je soucast smluvni ceny (0 ne / 1 ano)
 .s out("fak","arr",1,1600,iddsb,"dta",7)=0															//je rozpis po statech pro zahranicni dph (0 ne / 1 ano)
 // ostatni data SJ pod arr
 s out("arr",1,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",1)				//zacatek ph
 s out("arr",1,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",2)				//konec ph
 s out("arr",1,"dta",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"PHM")),":",3)				//lt ph
 s out("arr",1,"dta",4)=$g(^[nmsp]OBD(zp,rrmm,doc,"prs"))						//prepravni system
 s out("arr",1,"dta",5)=$g(^[nmsp]OBD(zp,rrmm,doc,"Zakaznik"))					//id zakaznika
 s out("arr",1,"dta",6)=$g(^[nmsp]OBD(zp,rrmm,doc,"Pristaveni"))				//pristaveni
 // pristaveni postaru
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"pristaveni")))&($d(^[nmsp]OBD(zp,rrmm,doc,"F"))) d
 .s out("arr",1,"dta",6)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc,"F")),"#",1),":",13)
 s out("arr",1,"dta",7)=$g(^[nmsp]OBD(zp,rrmm,doc,"KTT"))                       //koef.tachometru auta v momentu uznani SJ
 s out("arr",1,"dta",8)=$g(^[nmsp]OBD(zp,rrmm,doc,"ROT"))						//km dle tachometru
 s out("arr",1,"dta",9)=$g(^[nmsp]OBD(zp,rrmm,doc,"KPH"))						//koeficient phm
 s out("arr",1,"dta",10)=$g(^[nmsp]OBD(zp,rrmm,doc,"PH100"))					//zakladni spotreba ph
 s out("arr",1,"dta",11)=$g(^[nmsp]OBD(zp,rrmm,doc,"ZdpOs"))					//osc zodpovedne osoby pro faktuaraci
 s out("arr",1,"dta",12)=$g(^[nmsp]OBD(zp,rrmm,doc,"SPLvsi"))					//splatnost faktury
 s out("arr",1,"dta",13)=$g(^[nmsp]OBD(zp,rrmm,doc,"CilPres"))					//cil, pres
 // cil,pres postaru
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"CilPres")))&($d(^[nmsp]OBD(zp,rrmm,doc,"F"))) d
 .s out("arr",1,"dta",13)=$p($p($g(^[nmsp]OBD(zp,rrmm,doc,"F")),"#",1),":",14)
 // km v zahranici
 s out("arr",1,"dta",14)=$g(^[nmsp]OBD(zp,rrmm,doc,"KmZahr"))					//km v zahranici
 // odkaz na fakturu + historie
 s out("arr",2,"dta",1)=$g(^[nmsp]OBD(zp,rrmm,doc,"CFAK"))												//odkaz na fakturu (rok~fstr~cislo~idfa)
 s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)) q:cnt=""  d
 .s out("arr",2,"arr",cnt,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",1)						//odkaz na fakturu (rok~fstr~cislo~idfa)
 .s out("arr",2,"arr",cnt,"par",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",2)						//horlog prevodu do fakturace
 .s out("arr",2,"arr",cnt,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt)),"|",3)						//jmeno uzivatele, ktery prevedl fakturu
 // kontrola auta
 s out("arr",3,"stt",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","s"))				//kontrola stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 s out("arr",3,"dta",1)=+$p($g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d")),"~",1)		//kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt)) q:cnt=""  d
 .s out("arr",3,"dsc",cnt)=$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt))		
 //aktualizace udaju kontroly vozidel z vozidel
 i +$g(in("par",1)) d
 .//idfa,nmsp,hrl,rz,iddoc,idos,in,out
 .k arrknt
 .s err=$$gVcKntBus^OBapiEDDocKntBus(idfa,nmsp,+$g(out("dta",6)),$g(out("dta",8)),(zp_"|"_rrmm_"|"_doc),idos,"",.arrknt) s err=""
 .i +$g(arrknt("stt")) d
 ..k out("arr",3)
 ..m out("arr",3)=arrknt("arr",3)
 //============================================
 // komentare na fakturu
 s out("arr",4,"arr",1,1)=$g(^[nmsp]OBD(zp,rrmm,doc,"remc",1))					//poznamka na fakturu z objednavky 1.radek
 s out("arr",4,"arr",1,2)=$g(^[nmsp]OBD(zp,rrmm,doc,"remc",2))					//poznamka na fakturu z objednavky 2.radek
 s cnt="" f  s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"txtFak",cnt)) q:cnt=""  d			//dalsi komentar na fakturu
 .s out("arr",4,"arr",2,cnt)=$g(^[nmsp]OBD(zp,rrmm,doc,"txtFak",cnt))
 s out("arr",4,"arr",3,1)=$g(^[nmsp]OBD(zp,rrmm,doc,"pznFak",1))				//poznamka pro fakturaci (seznam faktur) 
 // zahranicni DPH - nova struktura v dokladu
 s val=$g(^[nmsp]OBD(zp,rrmm,doc,"zhrDph"))
 f cnt=1:1:7 d
 .s out("arr",5,"dta",cnt)=$p(val,"~",cnt)
 s idstt="" f  s idstt=$o(^[nmsp]OBD(zp,rrmm,doc,"zhrDph","arr",1,idstt)) q:idstt=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"zhrDph","arr",1,idstt))
 .f cnt=1:1:9 s out("arr",5,"arr",1,idstt,"dta",cnt)=$p(val,"~",cnt)
 // zahranicni DPH - stara struktura
 i ('$d(^[nmsp]OBD(zp,rrmm,doc,"zhrDph")))&($d(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED())))) d
 .k out("arr",5)
 .s out("arr",5,"dta",1)=$p($g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Vych")),"/",1)
 .s out("arr",5,"dta",2)=$p($g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Vych")),"/",2)
 .s out("arr",5,"dta",3)=$p($g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Konc")),"/",1)
 .s out("arr",5,"dta",4)=$p($g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Konc")),"/",2)
 .s out("arr",5,"dta",5)=$g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Kmc")) //cekl Km
 .s out("arr",5,"dta",6)=$g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"DanZak")) //celk Kc
 .s out("arr",5,"dta",7)=$g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"KursEU")) //kurs EUR
 .s idstt="" f  s idstt=$o(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Kmc",idstt)) q:idstt=""  d
 ..s val=$g(^[sysnmsp]Orel(idfa,"Data",zp,$$rrrrmm^OBapiED(rrmm),(doc-$$qsj^OBapiED()),"Kmc",idstt))
 ..s out("arr",5,"arr",1,idstt,"dta",1)=$p(val,":",1)
 ..s out("arr",5,"arr",1,idstt,"dta",2)="" //danova povinnost - dodelat podle nastavene informace
 ..s out("arr",5,"arr",1,idstt,"dta",3)="" //fakturovat - dodelat podle poplatku 1300
 ..s out("arr",5,"arr",1,idstt,"dta",4)=$p(val,":",2)
 ..s out("arr",5,"arr",1,idstt,"dta",5)=$p(val,":",3)
 ..s out("arr",5,"arr",1,idstt,"dta",6)=$p(val,":",4)
 ..s out("arr",5,"arr",1,idstt,"dta",7)=$p(val,":",5)
 ..s out("arr",5,"arr",1,idstt,"dta",8)=$p(val,":",6)
 ..s out("arr",5,"arr",1,idstt,"dta",9)=""
 // odkaz na zalohovou fakturu
 s cnt=0 s idzal="" f  s idzal=$o(^[nmsp]OBD(zp,rrmm,doc,"ZalohyDN",idzal)) q:idzal=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"ZalohyDN",idzal))
 .s cnt=cnt+1
 .s out("arr",6,"arr",cnt,"dta",1)=$p(idzal,"^",1)
 .s out("arr",6,"arr",cnt,"dta",2)=$p(idzal,"^",2)
 .s out("arr",6,"arr",cnt,"dta",3)=$p(val,"~",1)
 .s out("arr",6,"arr",cnt,"dta",4)=+$p(val,"~",2)
 //doklady pro cerpane phm
 i $d(^[nmsp]OBD(zp,rrmm,doc,"docphm")) d
 .s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d						//doklady pro cerpane phm
 ..s out("arr",7,"arr",id,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1)
 .s out("arr",7,"cop","dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)
 .s out("arr",7,"cop","dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)
 //prubeh cinnosti na SJ
 s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"tsj",id)) q:id=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"tsj",id))
 .f cnt=1:1:6 s out("arr",8,"arr",id,"dta",cnt)=$p(val,"~",cnt)
 // hlidani zmen
 s cnt=$o(^[nmsp]OBD(zp,rrmm,doc,"cop",""),-1)
 s out("arr","cop","dta",1)=cnt s out("arr","cop","dta",2)=""
 s:cnt'="" out("arr","cop","dta",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop",cnt))
 s out("arr","cop","dta",3)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop"))
 /*
 s out("arr",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"kdeTank"))    // kde tankoval id tankovatele=lt
 s out("arr",6)=$g(^[nmsp]OBD(zp,rrmm,doc,"LIBEREC"))    // spec.pro liberec (ZAHRANICNI DIETY PRO ROZBORY) spec. musi byt nastaveno ^OI("LIBEREC"
 s out("arr",7)=$g(^[nmsp]OBD(zp,rrmm,doc,"PHHC"))       // jaka cast cekani do pohotovosti, spec. musi byt nastaveno ^OI("CEKANIPHHSJ"
 s out("arr",11)=$g(^[nmsp]OBD(zp,rrmm,doc,"DatUhrZal")) // datum uhrazeni zalohy (jen stara fakturace)
 i $d(^[nmsp]OBD(zp,rrmm,doc,"Zalohy")) m out("arr",16)=^[nmsp]OBD(zp,rrmm,doc,"Zalohy")     // zalohy stara fakturace 
 s out("arr",22)=$g(^[nmsp]OBD(zp,rrmm,doc,"pindBRD"))  // km pres nemecko, je ve vyhodnoceni zahranicniho DPH
 s out("arr",23)=$g(^[nmsp]OBD(zp,rrmm,doc,"pindRAK"))  // km pres rakousko, je ve vyhodnoceni zahranicniho DPH
 s out("arr",24)=$g(^[nmsp]OBD(zp,rrmm,doc,"KmZahr"))   // km v zahranici, soucet ze zahranicniho DPH
 ;^[nmsp]OBD(zp,rrmm,doc,"F1") 							// evidencni vypis pro fakturaci - vykonovka u specialnich zakazniku, kde se fakturuje to, co je vetsi - dopocet
 ;^[nmsp]OBD(zp,rrmm,doc,"F2")							// evidencni vypis pro fakturaci - casovka u specialnich zakazniku, kde se fakturuje to, co je vetsi - dopocet
 */
 q 0
gSjRzDta(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gSjRzDta(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data sj zakladni a pro rz - vyhodnoceni
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 // data sj
 s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 f cnt=1:1:$$gPcNDU() s out("dta",cnt)=$p(val,":",cnt)
 // konverze datumovych polozek na horlog
 f cnt=6,7 d
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$dn^OBapiED($g(out("dta",cnt)))
 // presun polozky doba cekani pro fakturaci z 13 do 71
 i $p($g(out("dta",13)),"/",2) d
 .i $g(out("dta",71))="" s out("dta",71)=$p($g(out("dta",13)),"/",1)
 .s out("dta",13)=$p($g(out("dta",13)),"/",2)
 // konverze hodinovych polozek na minutove
 f cnt=12,13,14,51,57,58,70,71 d
 .i +$g(out("dta",cnt)) s out("dta",cnt)=$$hm^OBapiED(out("dta",cnt))
 //prepravni system
 s out("arr",1,"dta",4)=$g(^[nmsp]OBD(zp,rrmm,doc,"prs"))
 //zakladni spotreba vozidla
 s out("arr",1,"dta",10)=$g(^[nmsp]OBD(zp,rrmm,doc,"PH100"))
 q 0
 //
gSjOsDta(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gSj(idfa,nmsp,zp,rrmm,doc,in,out) - vrati data sj pro os - vyhodnoceni
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 // zakladni udaje
 s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 s out("dta",6)=$p(val,":",6)
 s out("dta",7)=$p(val,":",7)
 // konverze datumovych polozek na horlog
 i +$g(out("dta",6)) s out("dta",6)=$$dn^OBapiED($g(out("dta",6)))
 i +$g(out("dta",7)) s out("dta",7)=$$dn^OBapiED($g(out("dta",7)))
 // ridici vyhodnoceni
 s seqosc=0
 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 .s seqosc=seqosc+1
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc))
 .f cnt=1:1:$$gPcNMU() s out("osc",osc,"dta",cnt)=$p(val,":",cnt)
 .// konverze hodinovych polozek na minutove
 .f cnt=4,5,6,7,8,9,12,13,21,27,32,33 d
 ..q:'$d(out("osc",osc,"dta",cnt))
 ..q:$g(out("osc",osc,"dta",cnt))=""
 ..s out("osc",osc,"dta",cnt)=$$hm^OBapiED($g(out("osc",osc,"dta",cnt)))
 .// dalsi parametry ridice
 .//poradi ridice pro vypis
 .i +$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)) s out("osc",osc,"par",1)=+$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc))
 .i '$g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)) s out("osc",osc,"par",1)=seqosc
 .//ns ridice
 .s out("osc",osc,"par",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",2)
 .//narok na priplatek za ztizene prostredi
 .s out("osc",osc,"par",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",3)
 .//subdodany ridic 0/1
 .s out("osc",osc,"par",4)=+$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",4)
 .//IC spolecnosti, ktera subdodala ridice
 .s out("osc",osc,"par",5)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"P",osc)),"~",5)
 .// pendl
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"I"))
 .s out("osc",osc,"pnd",1)=+$p(val,":",7) i ($p(val,":",7)="")&$d(^[nmsp]OBD(zp,rrmm,doc,osc,"I")) s out("osc",osc,"pnd",1)=1
 .s out("osc",osc,"pnd",2)=$p(val,":",1)
 .s out("osc",osc,"pnd",3)=$p(val,":",2)
 .s out("osc",osc,"pnd",4)=$p(val,":",3)
 .s out("osc",osc,"pnd",5)=$p(val,":",4)
 .s out("osc",osc,"pnd",6)=$p(val,":",5)
 .s out("osc",osc,"pnd",7)=$p(val,":",6)
 .s out("osc",osc,"pnd",8)=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"koef")) 
 .s out("osc",osc,"pnd",9)=$g(^[nmsp]OBD(zp,rrmm,doc,osc,"koefM"))
 .// konverze hodinovych polozek na minutove
 .f cnt=2,3 d
 ..i +$g(out("osc",osc,"pnd",cnt)) s out("osc",osc,"pnd",cnt)=$$hm^OBapiED(out("osc",osc,"pnd",cnt))
 //
 q 0
 //
sSjOsDtaDta(idfa,nmsp,zp,rrmm,doc,os,in,out)
 // err=$$sSjOsDtaDta^OBapiED(idfa,nmsp,zp,rrmm,doc,os,.in,.out)
 // ===========================================================================================
 // zapis/aktualizace hodinovych a korunovych polozek ridice do dokladu sj
 // pouziva se pri aktualizaci (doplneni) udaju v pripade, ze ma ridic v ramci dne vice dokladu
 // ===========================================================================================
 // in("osc",os,"dta",...)
 n (idfa,nmsp,zp,rrmm,doc,os,in,out) s $zt="err" k out s err=""
 // kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(os)="" q "1~os="
 //
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q "1~neexistujici doklad"
 // save dta pro os
 s val="" f cnt=1:1:$$gPcNMU() s $p(val,":",cnt)=$g(in("osc",os,"dta",cnt))
 // konverze minutovych polozek na hodinove
 f cnt=4,5,6,7,8,9,12,13,21,27,32,33 i +$p(val,":",cnt) s $p(val,":",cnt)=$$mh^OBapiED($p(val,":",cnt))
 s ^[nmsp]OBD(zp,rrmm,doc,os)=val
 //horlog zacatku pro aktualizaco grafikonu
 s hrlbeg=$$dn^OBapiED($p($g(^[nmsp]OBD(zp,rrmm,doc)),":",6))
 //aktualizace grafikonu ridice
 k arrgrf s err=$$gGrfOs^OBapiED(idfa,nmsp,os,hrlbeg,doc,"",.arrgrf) zt:+err "merr" s err=""
 //aktualizace hodin a kc 
 s arrgrf("dta",1)=0 f cnt=19,20,23,10,11,22,24,25,28 s arrgrf("dta",1)=$g(arrgrf("dta",1))+$g(in("osc",os,"dta",cnt))
 s arrgrf("dta",2)=$g(in("osc",os,"dta",21))
 s arrgrf("dta",3)=$g(in("osc",os,"dta",3))
 s arrgrf("dta",4)=""
 s arrgrf("dta",6)=rrmm
 s arrgrf("dta",7)=zp
 s err=$$sGrfOs^OBapiED(idfa,nmsp,os,hrlbeg,doc,.arrgrf,"") zt:+err "merr"
 q 0
 //
gNxtIdSj(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gNxtIdSj(idfa,nmsp,zp,rrmm,doc,in,out) - vrati id dalsi SJ pro uznani
 // in("par",1)=idprac, pak hleda v rozsahu cisel pro pracoviste
 // out=zp~rrmm~iddoc (pozor, muze se zmenit rrmm)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 s qsj=$$qsj^OBapiED()
 s cdocbeg=qsj s cdocend=""
 // cislovani dokladu pro pracoviste
 s idprac=$g(in("par",1))
 i idprac'="" {
	 k arrprac s err=$$gPlnPrac^OBapiED(idfa,nmsp,idprac,"",.arrprac)
	 //planuje se pravidelna doprava
	 i +$g(arrprac("dta",6)) {
		 i $g(arrprac("dta",13))'="" s cdocbeg=($g(arrprac("dta",13))+qsj)
		 i $g(arrprac("dta",14))'="" s cdocend=($g(arrprac("dta",14))+qsj)
	 }
	 k arrprac
 }
 // uprava doc (cislo bez posunu)
 i doc<qsj s doc=(doc+qsj)
 // v obdobi rrmm
 s out=""
 s iddoc=doc i (+cdocbeg)&(iddoc<cdocbeg) s iddoc=cdocbeg
 f {
	 s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) i (iddoc="")!((+cdocend)&(iddoc>cdocend))!(out'="") q
	 i '+$g(^[nmsp]OBD(zp,rrmm,iddoc)) s out=zp_"~"_rrmm_"~"_iddoc
 }
 // v obdobi rrmm neni pak v rrmm+1
 i out="" {
	 s rrmm=$$addmmtorrrrmm^OBapiED($$rrrrmm^OBapiED(rrmm),1)#10000
     s iddoc=qsj i (+cdocbeg)&(iddoc<cdocbeg) s iddoc=cdocbeg
     f {
	 	s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) i (iddoc="")!((+cdocend)&(iddoc>cdocend))!(out'="") q
	 	i '+$g(^[nmsp]OBD(zp,rrmm,iddoc)) s out=zp_"~"_rrmm_"~"_iddoc
 	}	 
 }
 q 0
 //
sSj(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$sSj(idfa,nmsp,zp,rrmm,doc,in,out) - zapis SJdo db
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)= 0/1 ... mod pro zapis kontroly autobusu do vozidel
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 // vymazani dokladu
 k ^[nmsp]OBD(zp,rrmm,doc)
 // zapis dokladu zakladni data
 s val="" f cnt=1:1:$$gPcNDU() s $p(val,":",cnt)=$g(in("dta",cnt))
 // konverze horlogu na datum
 f cnt=6,7 d
 .i +$p(val,":",cnt) s $p(val,":",cnt)=$$nd^OBapiED($p(val,":",cnt),1)
 // konverze minutovych polozek na hodinove
 f cnt=12,13,14,51,57,58,70,71 d
 .i +$p(val,":",cnt) s $p(val,":",cnt)=$$mh^OBapiED($p(val,":",cnt))
 s ^[nmsp]OBD(zp,rrmm,doc)=val
 // mzdove udaje ridicu
 s osc="" f  s osc=$o(in("osc",osc)) q:osc=""  d
 .s val=""
 .f cnt=1:1:$$gPcNMU() s $p(val,":",cnt)=$g(in("osc",osc,"dta",cnt))
 .// konverze minutovych polozek na hodinove
 .f cnt=4,5,6,7,8,9,12,13,21,27,32,33 d
 ..i +$p(val,":",cnt) s $p(val,":",cnt)=$$mh^OBapiED($p(val,":",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,osc)=val
 .// poradi ridice pro vypis
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"P",osc),"~",1)=$g(in("osc",osc,"par",1))
 .// ns ridice
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"P",osc),"~",2)=$g(in("osc",osc,"par",2))
 .//narok na priplatek za ztizene prostredi
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"P",osc),"~",3)=$g(in("osc",osc,"par",3))
 .//subdodany ridic 0/1 
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"P",osc),"~",4)=(+$g(in("osc",osc,"par",4)))
 .//IC spolecnosti, ktera subdodala ridice
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"P",osc),"~",5)=$g(in("osc",osc,"par",5))
 .// pendl
 .s val="" i +$g(in("osc",osc,"pnd",1)) d
 ..s $p(val,":",7)=$g(in("osc",osc,"pnd",1))
 ..s $p(val,":",1)=$g(in("osc",osc,"pnd",2))
 ..s $p(val,":",2)=$g(in("osc",osc,"pnd",3))
 ..s $p(val,":",3)=$g(in("osc",osc,"pnd",4))
 ..s $p(val,":",4)=$g(in("osc",osc,"pnd",5))
 ..s $p(val,":",5)=$g(in("osc",osc,"pnd",6))
 ..s $p(val,":",6)=$g(in("osc",osc,"pnd",7))
 ..// konverze minutovych polozek na hodinove
 ..f cnt=1,2 d
 ...i +$p(val,":",cnt) s $p(val,":",cnt)=$$mh^OBapiED($p(val,":",cnt))
 ..s ^[nmsp]OBD(zp,rrmm,doc,osc,"I")=val
 ..s ^[nmsp]OBD(zp,rrmm,doc,osc,"koef")=$g(in("osc",osc,"pnd",8))
 ..s ^[nmsp]OBD(zp,rrmm,doc,osc,"koefM")=$g(in("osc",osc,"pnd",9))
 // fakturace data
 s val=""
 f cnt=1:1:$$gPcFakSj() s $p(val,"~",cnt)=$g(in("fak","dta",cnt))
 s ^[nmsp]OBD(zp,rrmm,doc,"fak")=val
 // fakturacni polozky
 s iditm="" f  s iditm=$o(in("fak","itm",iditm)) q:iditm=""  d
 .s val=""
 .f cnt=1:1:$$gPcFakItmSj() d
 ..s $p(val,"~",cnt)=$g(in("fak","itm",iditm,"dta",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,"fak","itm",iditm)=val
 // fakturace poplatky
 s idppl="" f  s idppl=$o(in("fak","arr",1,idppl)) q:idppl=""  d
 .s iddsb="" f  s iddsb=$o(in("fak","arr",1,idppl,iddsb)) q:iddsb=""  d
 ..s val=""
 ..f cnt=1:1:$$gPcFakPplSj() d
 ...s $p(val,"~",cnt)=$g(in("fak","arr",1,idppl,iddsb,"dta",cnt))
 ..s ^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb)=val
 ..//  rozpis poplatku na staty
 ..s idstt="" f  s idstt=$o(in("fak","arr",1,idppl,iddsb,"arr",1,idstt)) q:idstt=""  d
 ...s val=""
 ...f cnt=1:1:1 d
 ....s $p(val,"~",cnt)=$g(in("fak","arr",1,idppl,iddsb,"arr",1,idstt,"dta",cnt))
 ...s ^[nmsp]OBD(zp,rrmm,doc,"fak","ppl",idppl,iddsb,"arr",1,idstt)=val
 // ostatni data SJ pod arr
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",1)=$g(in("arr",1,"dta",1))				//zacatek ph
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",2)=$g(in("arr",1,"dta",2))				//konec ph
 s $p(^[nmsp]OBD(zp,rrmm,doc,"PHM"),":",3)=$g(in("arr",1,"dta",3))				//lt ph
 s ^[nmsp]OBD(zp,rrmm,doc,"prs")=$g(in("arr",1,"dta",4))						//prepravni system
 s ^[nmsp]OBD(zp,rrmm,doc,"Zakaznik")=$g(in("arr",1,"dta",5))					//id zakaznika
 s ^[nmsp]OBD(zp,rrmm,doc,"Pristaveni")=$g(in("arr",1,"dta",6))					//pristaveni
 s ^[nmsp]OBD(zp,rrmm,doc,"KTT")=$g(in("arr",1,"dta",7))                        //koef.tachometru auta v momentu uznani SJ
 s ^[nmsp]OBD(zp,rrmm,doc,"ROT")=$g(in("arr",1,"dta",8))						//km dle tachometru
 s ^[nmsp]OBD(zp,rrmm,doc,"KPH")=$g(in("arr",1,"dta",9))						//koeficient phm
 s ^[nmsp]OBD(zp,rrmm,doc,"PH100")=$g(in("arr",1,"dta",10))						//zakladni spotreba ph
 s ^[nmsp]OBD(zp,rrmm,doc,"ZdpOs")=$g(in("arr",1,"dta",11))						//osc zodpovedne osoby pro faktuaraci
 s ^[nmsp]OBD(zp,rrmm,doc,"SPLvsi")=$g(in("arr",1,"dta",12))					//splatnost faktury
 s ^[nmsp]OBD(zp,rrmm,doc,"CilPres")=$g(in("arr",1,"dta",13))					//cil, pres
 s ^[nmsp]OBD(zp,rrmm,doc,"KmZahr")=$g(in("arr",1,"dta",14))					//km v zahranici
 // odkaz na fakturu + historie
 s ^[nmsp]OBD(zp,rrmm,doc,"CFAK")=$g(in("arr",2,"dta",1))									//odkaz na fakturu (rok~fstr~cislo~idfa)
 s cnt="" f  s cnt=$o(in("arr",2,"arr",cnt)) q:cnt=""  d
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",1)=$g(in("arr",2,"arr",cnt,"dta",1))			//odkaz na fakturu (rok~fstr~cislo~idfa)
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",2)=$g(in("arr",2,"arr",cnt,"par",1))			//horlog prevodu do fakturace
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"CFAK",cnt),"|",3)=$g(in("arr",2,"arr",cnt,"par",2))			//jmeno uzivatele, ktery prevedl fakturu
 // kontrola auta
 s ^[nmsp]OBD(zp,rrmm,doc,"kntbus","s")=+$g(in("arr",3,"stt",1))				//kontrola stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 s $p(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d"),"~",1)=+$g(in("arr",3,"dta",1))		//kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 s cnt="" f  s cnt=$o(in("arr",3,"dsc",cnt)) q:cnt=""  d
 .s ^[nmsp]OBD(zp,rrmm,doc,"kntbus","dsc",cnt)=$g(in("arr",3,"dsc",cnt))
 //zapis kontroly do vozidel 
 i +$g(in("par",1)) d
 .k arri m arri=in
 .s err=$$sVcKntBus^OBapiEDDocKntBus(idfa,nmsp,+$g(in("dta",6)),$g(in("dta",8)),(zp_"|"_rrmm_"|"_doc),idos,.arri,"")
 .s err="" k arri
 // komentare na fakturu
 s ^[nmsp]OBD(zp,rrmm,doc,"remc",1)=$g(in("arr",4,"arr",1,1))					//poznamka na fakturu z objednavky 1.radek
 s ^[nmsp]OBD(zp,rrmm,doc,"remc",2)=$g(in("arr",4,"arr",1,2))					//poznamka na fakturu z objednavky 2.radek
 s cnt="" f  s cnt=$o(in("arr",4,"arr",2,cnt)) q:cnt=""  d						//dalsi komentar na fakturu
 .s ^[nmsp]OBD(zp,rrmm,doc,"txtFak",cnt)=$g(in("arr",4,"arr",2,cnt))
 s ^[nmsp]OBD(zp,rrmm,doc,"pznFak",1)=$g(in("arr",4,"arr",3,1))					//poznamka pro fakturaci (seznam faktur)
 // zahranicni DPH - nova struktura v dokladu
 s val=""
 f cnt=1:1:7 s $p(val,"~",cnt)=$g(in("arr",5,"dta",cnt))
 s ^[nmsp]OBD(zp,rrmm,doc,"zhrDph")=val
 s idstt="" f  s idstt=$o(in("arr",5,"arr",1,idstt)) q:idstt=""  d
 .s val=""
 .f cnt=1:1:9 s $p(val,"~",cnt)=$g(in("arr",5,"arr",1,idstt,"dta",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,"zhrDph","arr",1,idstt)=val
 // odkaz na zalohovou fakturu
 s cnt="" f  s cnt=$o(in("arr",6,"arr",cnt)) q:cnt=""  d
 .s idzal="" s val=""
 .s $p(idzal,"^",1)=$g(in("arr",6,"arr",cnt,"dta",1))
 .s $p(idzal,"^",2)=$g(in("arr",6,"arr",cnt,"dta",2))
 .s $p(val,"~",1)=$g(in("arr",6,"arr",cnt,"dta",3))
 .s $p(val,"~",2)=$g(in("arr",6,"arr",cnt,"dta",4))
 .s ^[nmsp]OBD(zp,rrmm,doc,"ZalohyDN",idzal)=val
 //doklady pro cerpane phm
 i $d(in("arr",7,"arr")) d																	//doklady pro cerpane phm
 .s id="" f  s id=$o(in("arr",7,"arr",id)) q:id=""  d												
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm",id),"~",1)=$g(in("arr",7,"arr",id,"dta",1))
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$g(in("arr",7,"cop","dta",1))
 .s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$g(in("arr",7,"cop","dta",2))
 //prubeh cinnosti na SJ
 s id="" f  s id=$o(in("arr",8,"arr",id)) q:id=""  d
 .f cnt=1:1:6 d
 ..s $p(^[nmsp]OBD(zp,rrmm,doc,"tsj",id),"~",cnt)=$g(in("arr",8,"arr",id,"dta",cnt))
 //data pro zpetnou kompatibilitu
 s ^[nmsp]OBD(zp,rrmm,doc,"Auto")=$g(in("dta",8))											//rz
 s ^[nmsp]OBD(zp,rrmm,doc,"Ns")=$g(in("dta",43))											//ns
 s ^[nmsp]OBD(zp,rrmm,doc,"Start")=$g(in("dta",6))											//hrl zacatku
 //info, kdo doklad zmenil
 s ^[nmsp]OBD(zp,rrmm,doc,"x")=$p($g(idos),"~",3)_":"_$h
 //horlog zacatku
 s hrlbeg=$g(in("dta",6))
 // zapis do evidence dokladu, ktere jsou uznany s vyraznym rozdílem proti tach. (asi nahradime vypoctem)
 // (toto ne, udelame na to sestavu)
 // zapis stavu tachometru
 i '(($g(in("dta",20))["P")!($g(in("dta",20))["p")!($g(in("dta",20))="")) d
 .k arri s arri("dta",1)=$g(in("dta",20)) s arri("dta",2)=$g(in("dta",21))
 .s err=$$sLastSttTachRZ^OBapiED(idfa,nmsp,$g(in("dta",8)),.arri,"") zt:+err "merr"
 // zapis stavu nadrze
 k arri s arri("dta",1)=$g(in("arr",1,"dta",2))
 s err=$$sLastSttTankRZ^OBapiED(idfa,nmsp,$g(in("dta",8)),hrlbeg,.arri,"")
 // zacatek a konec (mm)
 s tmbeg=$g(in("dta",57))
 s tmend=$g(in("dta",58))
 i $g(in("dta",7))>$g(in("dta",6)) s tmend=tmend+(1440*($g(in("dta",7))-$g(in("dta",6))))
 s:'tmbeg tmbeg="" s:'tmend tmend=""
 // ====================
 // zapis/aktualizace grafikonu lidi
 s osc="" f  s osc=$o(in("osc",osc)) q:osc=""  d
 .k arri
 .s arri("dta",1)=0 f cnt=19,20,23,10,11,22,24,25,28 s arri("dta",1)=$g(arri("dta",1))+$g(in("osc",osc,"dta",cnt))
 .s arri("dta",2)=$g(in("osc",osc,"dta",21))
 .s arri("dta",3)=$g(in("osc",osc,"dta",3))
 .s arri("dta",4)=""
 .s arri("dta",5)=$g(in("dta",7))
 .s arri("dta",6)=rrmm
 .s arri("dta",7)=zp
 .s arri("dta",8)=hrlbeg
 .s arri("dta",9)=tmbeg			//mm zacatku
 .s arri("dta",10)=tmend		//mm konce
 .s arri("dta",14)=($g(in("osc",osc,"dta",14))+$g(in("osc",osc,"dta",15))+$g(in("osc",osc,"dta",16)))	//celkove km ridice
 .//+HNE + PHHC
 .s err=$$sGrfOs^OBapiED(idfa,nmsp,osc,hrlbeg,doc,.arri,"") zt:+err "merr"
 // zapis/aktualizace grafikonu aut
 //i '(($g(in("dta",20))["P")!($g(in("dta",20))["p")) d
 //$G(trzba)_D_$G(PROVO)_D_$G(KC)_D_$G(JI)_D_khor_D_AO_D_DZPR_D_$g(norma)_D_$G(PHM)
 s arri("dta",1)=$$gTrzbGrafSj(.in)										    //trzba
 s arri("dta",2)=$g(in("dta",14))											//doba provozu
 s arri("dta",3)=($g(in("dta",16))+$g(in("dta",17))+$g(in("dta",18)))		//km
 s arri("dta",4)=$g(in("dta",12))											//jizda
 s arri("dta",5)=$g(in("dta",7))											//hrl konec
 s arri("dta",6)=rrmm
 s arri("dta",7)=zp
 s arri("dta",8)=$g(in("dta",45))											//norma phm
 s arri("dta",9)=$g(in("dta",22))											//phm
 s arri("dta",10)=$g(in("dta",73))											//fame
 s arri("dta",11)=$g(in("dta",74))											//olej
 s arri("dta",12)=$g(in("dta",72))											//topeni
 s arri("dta",13)=$g(in("dta",55))											//adblue
 s arri("dta",14)=tmbeg														//mm zacatku
 s arri("dta",15)=tmend														//mm konce
 s arri("dta",18)=$g(in("dta",76))											//doba topeni
 s arri("dta",19)=$g(in("dta",78))											//phm b30
 s err=$$sGrfRz^OBapiED(idfa,nmsp,$g(in("dta",8)),hrlbeg,doc,.arri,"") zt:+err "merr"
 // zapis do evidence dokladu vystavenych planem
 //
 // zapis do evidence elektromeru pro trolejbusy
 // (toto asi ne, zavolat do Chomutova)
 // zapis km do centralni udrzby a pneu, ne pro rz="-"
 i $g(in("dta",8))'="-" d 
 .i '$$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) q      //kontrola, zda je pro firmu, provoz a obdobi zapis povolen  
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC($$gFaDz^OBapiED(idfa),"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .i $$rrrrmm^OBapiED(rrmm)>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .k arri s arri("Spz",$g(in("dta",8)))="" s:($g(in("dta",9))'="")&(($g(in("dta",9))'="C")) arri("Spz",$g(in("dta",9)))=""
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri) zt:+err "merr"
 .// mozna i varianta, do udrzby zapisovat km dle tachometru
 .k arri
 .//km autobusu
 .s arri("Spz",$g(in("dta",8)))=""
 .//km podle dokladu
 .s arri("Spz",$g(in("dta",8)),hrlbeg)=($g(in("dta",16))+$g(in("dta",17))+$g(in("dta",18)))
 .//km podle tachometru a jsou-li, od km odectu km vlozeneho vykonu 
 .i ((+$$gMainSetOne^OBapiED(idfa,nmsp,6,50))&($g(in("dta",20))'="")) d
 ..s kmtach=$g(in("dta",20))-$g(in("dta",21))	//km podle tachometru
 ..i kmtach<0 s kmtach=kmtach+1000000			//km podle tachometru preslo mez
 ..s arri("Spz",$g(in("dta",8)),hrlbeg)=kmtach
 .//km pro subdodane vozidlo nezapisuju ===========
 .i +$g(in("dta",83)) k arri("Spz",$g(in("dta",8)))
 .//===============================================
 .//km privesu
 .i ($g(in("dta",9))'="")&($g(in("dta",9))'="C") s arri("Spz",$g(in("dta",9)))="" s arri("Spz",$g(in("dta",9)),hrlbeg)=$g(in("dta",19))
 .//neni vozidlo
 .i '$d(arri("Spz")) q
 .s err=$$KmWrite^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri) zt:+err "merr"
 // zapis odkazu do objednavky
 s idobj=$g(in("dta",4))
 i idobj d
 .i '$g(in("dta",1)) q									// pro predznaceny doklad ne
 .k tmparr s tmparr("par",1)=0 s tmparr("arr",11,(zp_"~"_rrmm_"~"_doc))=""
 .//pridani odkazu na sj na objednavku a update stavu objednavky
 .s err=$$actLinkObj^OBapiED(idfa,nmsp,zp,idobj,.tmparr,"")
 // hlidani zmen
 s cnt=$g(in("arr","cop","dta",1)) s:'cnt cnt=$h
 s ^[nmsp]OBD(zp,rrmm,doc,"cop",cnt)=$g(in("arr","cop","dta",2))
 s ^[nmsp]OBD(zp,rrmm,doc,"cop")=$g(in("arr","cop","dta",3))
 // je-li obj na 1 bus, oznac ji za pouzitou
 /*
 s out("arr",2)=$g(^[nmsp]OBD(zp,rrmm,doc,"kdeTank"))    // kde tankoval id tankovatele=lt
 s out("arr",6)=$g(^[nmsp]OBD(zp,rrmm,doc,"LIBEREC"))    // spec.pro liberec (ZAHRANICNI DIETY PRO ROZBORY) spec. musi byt nastaveno ^OI("LIBEREC"
 s out("arr",7)=$g(^[nmsp]OBD(zp,rrmm,doc,"PHHC"))       // jaka cast cekani do pohotovosti, spec. musi byt nastaveno ^OI("CEKANIPHHSJ"
 s out("arr",11)=$g(^[nmsp]OBD(zp,rrmm,doc,"DatUhrZal")) // datum uhrazeni zalohy (jen stara fakturace)
 i $d(^[nmsp]OBD(zp,rrmm,doc,"Zalohy")) m out("arr",16)=^[nmsp]OBD(zp,rrmm,doc,"Zalohy")     // zalohy stara fakturace 
 s out("arr",22)=$g(^[nmsp]OBD(zp,rrmm,doc,"pindBRD"))  // km pres nemecko, je ve vyhodnoceni zahranicniho DPH
 s out("arr",23)=$g(^[nmsp]OBD(zp,rrmm,doc,"pindRAK"))  // km pres rakousko, je ve vyhodnoceni zahranicniho DPH
 s out("arr",24)=$g(^[nmsp]OBD(zp,rrmm,doc,"KmZahr"))   // km v zahranici, soucet ze zahranicniho DPH
 ;^[nmsp]OBD(zp,rrmm,doc,"F1") 							// evidencni vypis pro fakturaci - vykonovka u specialnich zakazniku, kde se fakturuje to, co je vetsi - dopocet
 ;^[nmsp]OBD(zp,rrmm,doc,"F2")							// evidencni vypis pro fakturaci - casovka u specialnich zakazniku, kde se fakturuje to, co je vetsi - dopocet
 */
 q 0
gTrzbGrafSj(arr)
 n (arr) 
 // trzba pro grafikon prepravne+poplatky (ktere nejsou soucasti sml.ceny)-sleva
 s val=0
 s idpol="" f  s idpol=$o(arr("fak","itm",idpol)) q:idpol=""  d
 .s val=val+$g(arr("fak","itm",idpol,"dta",1))
 s idpol="" f  s idpol=$o(arr("fak","arr",1,idpol)) q:idpol=""  d
 .s iddsb="" f  s iddsb=$o(arr("fak","arr",1,idpol,iddsb)) q:iddsb=""  d
 ..//je soucasti ceny
 ..i +$g(arr("fak","arr",1,idpol,iddsb,"dta",6)) q
 ..s val=val+$g(arr("fak","arr",1,idpol,iddsb,"dta",1))
 s val=val+$g(arr("fak","dta",1))
 q val
 //
lSj(idfa,nmsp,in,out)
 // err=$$lSj(idfa,nmsp,in,out) - vyhleda doklady, ktere vyhovuji parametrum v in
 // a zapise je do ^CacheTempJB(wrk,zp,rrmm,doc)=""; v out vrati wrk (out=wrk)
 // in -
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("osc",osc)=""          - hleda jen v dokladech s ridicem
 //    in("spz",spz)=""          - hleda jen v dokladech s spz
 //    in("nospz",spz)=""        - vynechava doklady s spz
 //    in("cis","od")            - hleda jen v dokladech s cislem od a dal
 //    in("cis","do")            - hleda jen v dokladech s cislem do a min
 //    in("jiz","od")            - hleda jen v dokladech s datem jizdy od (horlog)
 //    in("jiz","do")            - hleda jen v dokladech s datem jizdy do (horlog)
 //    in("jiz","zac")			 - hleda jen v dokladech s datem zacatku (horlog)
 //    in("por","od")            - hleda jen v dokladech s datem porizeni od (horlog)
 //    in("por","do")            - hleda jen v dokladech s datem porizeni do (horlog)
 //    in("spj")=1,2,3           - hleda jen v dokladech se spolujizdou 1 vse 2 se spolujizdou 3 bez spolujizdy
 //    in("prs",prs)             - hleda jen v dokladech s prepravnim systemem
 //    in("ns",ns)               - hleda jen doklady s ns
 //    in("dzj",dzj)             - hleda jen v dokladech podle druhu zajezdu
 //    in("pre")                 - hleda jen v dokladech, kde prepravce obsahuje text,...
 //	   in("ico",ico)=""          - hleda jen v dokladech, kde je prepravce s ico
 //    in("fak")                 - vyfakturovano 1 vse, 2 prevedene, 3 neprevedene
 //    in("zppl",zppl)=""        - hleda jen v dokladech s nastavenym zpusobem platby (jen typ "s")
 //    in("kntbus","stt",stt)="" - hleda jen v dokladech se stavem kontroly busu 1 porizeno / 2 opraveno / 3 bez opravy
 //    in("kntbus","knt",knt)="" - hleda jen v dokladech s kontrolou busu  1 nekontrolovano / 2 bez zavady / 3 se zavadou
 //    in("sta",idsta)=""		 - hleda jen doklady se stavem 0 predznacene / 1 porizene / 2 vyfakturovane / 3 zrusene
 //                                (pokud neni def.vraci porizene idsta=1 a vyfakturovane idsta=2)
 //    in("par",1)				 - 0 pouze seznam dokladu / 1 vraci i zakladni data k dokladu:
 //		^CacheTempJB(wrk,zp,rrmm,doc,"dta",xx)=val
 //		xx		val
 //     =================================
 //     01		stav
 //     02		hrl.jizdy	
 //		03		rz
 //     04		ns
 //     05		osc, vice oddelene ~
 //		06		kam
 //		07		hrl.porizeni                                                       
 //		08		hrl.zmeny
 //		09		id.zmeny
 //     10		tach.zacatek
 //     11		tach.konec
 //     12		km celk.
 //  	13		cerpane phm ze sj
 //     14      doklady s cerpanim PHM
 //     15      hrl.zmeny pro doklad s cerpanim PHM
 //     16      id.zmeny pro doklad s cerpanim PHM
 //     17      cerpane phm ze zadanych dokladu
 //     18		hodiny celkem (min)
 //     19      normovana spotreba phm
 //     20      prepravni system
 //     21		cerpane phm FAME ze sj
 //     22		cerpane phm do topeni ze sj
 //     23      cerpane phm FAME ze zadanych dokladu
 //     24      cerpane phm do topeni ze zadanych dokladu
 //     25      id.porizeni
 //     26      cerpane phm b30 z dzva
 //     27      cerpane phm b30 ze zadanych dokladu
 //     28      prepravce
 //     29      km tach. celkem
 //     =================================
 //--------------------------------------------------------------------------------------
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // 
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // stav dokladu
 i $o(in("sta",""))="" s in("sta",1)="" s in("sta",2)=""
 k out s (wrk,out)=$$gWrkJB^OBapiED()
 s qsj=$$qsj^OBapiED
 // konverze prepravce na vse velkyma a bez diakritiky
 s in("pre")=$$cnvBezDiaUp^OBapiED($g(in("pre")))
 // ==================================================
 s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",(zp)))
 .i $d(in("prv")) q:'$d(in("prv",(zp#100)))
 .s rrmm="" f  s rrmm=$o(^[nmsp]OBD(zp,rrmm)) q:rrmm=""  d
 ..i $d(in("rrmm")) q:'$d(in("rrmm",rrmm))
 ..s doc=(qsj-.01) f  s doc=$o(^[nmsp]OBD(zp,rrmm,doc)) q:doc=""  d
 ...s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 ...// kontrola na stav dokladu
 ...q:'$d(in("sta",+val))
 ...//
 ...s fnd=1
 ...//data pro vyhodnoceni
 ...s spz=$p(val,":",8)
 ...s zac=$p(val,":",6) s zac=$$dn^OBapiED(zac)
 ...s kon=$p(val,":",7) s:kon="" kon=zac s kon=$$dn^OBapiED(kon)
 ...s por=$p(val,":",2)
 ...s dzj=$p(val,":",10) s:dzj="" dzj=" "
 ...s pre=$$cnvBezDiaUp^OBapiED($p(val,":",26))
 ...s ico=+$p(val,":",32)
 ...s zppl=+$p(val,":",39)
 ...s ns=+$p(val,":",43)
 ...//prehled prs a km
 ...k prs
 ...s prs=$g(^[nmsp]OBD(zp,rrmm,doc,"prs"))
 ...s:prs'="" prs("p",prs)=$p(val,":",16)+$p(val,":",17)+$p(val,":",18)
 ...// ridic
 ...i $d(in("osc")) s fnd=0 d  q:'fnd
 ....s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)!(fnd)  s:$d(in("osc",osc)) fnd=1
 ...// spolujizda
 ...i $g(in("spj"))>1 s fnd=0 d  q:'fnd
 ....s cnt=0 s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  s cnt=cnt+1
 ....i in("spj")=2 s:cnt>1 fnd=1
 ....i in("spj")=3 s:cnt<2 fnd=1
 ...// spz
 ...i $d(in("spz")) i spz'="" s:'$d(in("spz",spz)) fnd=0 q:'fnd
 ...// nospz
 ...i spz'="" i $d(in("nospz",spz)) s fnd=0 q:'fnd
 ...// od - do
 ...i $g(in("cis","od")) s:(doc-qsj)<$g(in("cis","od")) fnd=0 q:'fnd
 ...i $g(in("cis","do")) s:(doc-qsj)>$g(in("cis","do")) fnd=0 q:'fnd
 ...// jizda od - do
 ...i $g(in("jiz","od")) s:zac<$g(in("jiz","od")) fnd=0 q:'fnd
 ...i $g(in("jiz","do")) s:kon>$g(in("jiz","do")) fnd=0 q:'fnd
 ...// zacatek
 ...i $g(in("jiz","zac")) s:zac'=$g(in("jiz","zac")) fnd=0 q:'fnd
 ...// porizeni od - do
 ...i $g(in("por","od")) s:por<$g(in("por","od")) fnd=0 q:'fnd
 ...i $g(in("por","do")) s:por>$g(in("por","do")) fnd=0 q:'fnd
 ...// prs
 ...i $d(in("prs")) s fnd=0 d  q:'fnd
 ....s prs="" f  s prs=$o(in("prs",prs)) q:(prs="")!(fnd)  i $d(prs("p",prs)) s fnd=1
 ...// ns
 ...i $d(in("ns")) s:'$d(in("ns",ns)) fnd=0 q:'fnd
 ...// druh zajezdu
 ...i $d(in("dzj")) s:'$d(in("dzj",dzj)) fnd=0 q:'fnd
 ...// prepravce
 ...i $g(in("pre"))'="" s:pre'[in("pre") fnd=0 q:'fnd
 ...//ico
 ...i $d(in("ico")) s:'$d(in("ico",ico)) fnd=0 q:'fnd
 ...// fakturace prevedene
 ...i $g(in("fak"))=2 s:+val'=2 fnd=0 q:'fnd
 ...// fakturace neprevedene
 ...i $g(in("fak"))=3 s:+val'=1 fnd=0 q:'fnd
 ...// zpusob platby
 ...i $d(in("zppl")) s:'$d(in("zppl",zppl)) fnd=0 q:'fnd
 ...q:'fnd
 ...// kontrola vozidla - dzva a sj spolecne
 ...i $d(in("kntbus")) s fnd=0 d  q:'fnd
 ....// neni udaj o kontrole vozu
 ....i '$d(^[nmsp]OBD(zp,rrmm,doc,"kntbus")) q
 ....// kontrola stavu zaznamu
 ....i $o(in("kntbus","stt",""))'="" d  q:'fnd
 .....s fnd=0
 .....s stt=$g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","s")) q:stt=""
 .....s:$d(in("kntbus","stt",stt)) fnd=1
 ....// kontrola vysledku
 ....i $o(in("kntbus","knt",""))'="" d  q:'fnd
 .....s fnd=0
 .....s knt=$p($g(^[nmsp]OBD(zp,rrmm,doc,"kntbus","d")),"~",1) q:knt=""
 .....s:$d(in("kntbus","knt",knt)) fnd=1
 ...// ======================================
 ...i fnd d
 ....s ^CacheTempJB(wrk,zp,rrmm,doc)=""
 ....//doplneni zakladnich udaju
 ....i $g(in("par",1)) d
 .....s valdoc=$g(^[nmsp]OBD(zp,rrmm,doc))
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",1)=+$p(valdoc,":",1)						//stav
 .....s val=$p(valdoc,":",6) s:+val val=$$dn^OBapiED(val)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",2)=val									//hrl.jizdy
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",3)=$p(valdoc,":",8)						//rz
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",4)=$p(valdoc,":",43)						//ns
 .....s val="" s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 ......s val=val_osc_"~"
 .....s:$e(val,$l(val))="~" val=$e(val,1,$l(val)-1) 
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",5)=val									//osc, vice oddelene ~
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",6)=$g(^[nmsp]OBD(zp,rrmm,doc,"CilPres"))	//kam					//odkud,kam
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",7)=$p(valdoc,":",2)						//hrl.porizeni
 .....s horl=$o(^[nmsp]OBD(zp,rrmm,doc,"cop",""),-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",8)=horl									//hrl.zmeny
 .....s val="" i horl s val=$g(^[nmsp]OBD(zp,rrmm,doc,"cop",horl))
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",9)=val									//id.zmeny
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",10)=$p(valdoc,":",21)					//tach.zacatek
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",11)=$p(valdoc,":",20)					//tach.konec
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",12)=$p(valdoc,":",16)+$p(valdoc,":",17)+$p(valdoc,":",18) 	//km celk.
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",13)=$p(valdoc,":",22)					//cerpane phm ze sj
 .....s val="" s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d
 ......s val=val_id_"="_$tr($p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1,3),"~","/")_";"
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",17)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",17))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",1)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",23)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",23))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",2)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",24)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",24))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",3)
 ......s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",27)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",27))+$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)),"~",4)
 .....i $e(val,$l(val))=";" s val=$e(val,1,$l(val)-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",14)=val									//doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",15)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)	//hrl zmeny - doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",16)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)	//id zmeny - doklady pro cerpane PHM
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",17)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",17))		//cerpane phm ze zadanych dokladu
 .....s valosc=""
 .....s osc="" f  s osc=$o(^[nmsp]OBD(zp,rrmm,doc,osc)) q:(osc="")!(osc?.a)  d
 ......s valosc=valosc_$tr($j($p($g(^[nmsp]OBD(zp,rrmm,doc,osc)),":",21),0,2),".",":")_";"
 .....i $e(valosc,$l(valosc))=";" s valosc=$e(valosc,1,$l(valosc)-1)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",18)=valosc											//hodiny celkem (hh.mm)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",19)=$p(valdoc,":",45)
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",20)=$g(^[nmsp]OBD(zp,rrmm,doc,"prs"))				//prepravni system
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",21)=$p(valdoc,":",73)								//cerpane phm FAME ze sj
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",22)=$p(valdoc,":",72)								//cerpane phm do topeni ze sj
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",23)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",23))		//cerpane phm FAME ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",24)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",24))		//cerpane phm do topeni ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",25)=$g(^[nmsp]OBD(zp,rrmm,doc,"cop"))				//id.porizeni
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",26)=$p(valdoc,":",78)								//cerpane phm b30 ze sj
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",27)=$g(^CacheTempJB(wrk,zp,rrmm,doc,"dta",27))		//cerpane phm b30 ze zadanych dokladu
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",28)=($p(valdoc,":",26))								//prepravce
 .....s ^CacheTempJB(wrk,zp,rrmm,doc,"dta",29)=($p(valdoc,":",20)-$p(valdoc,":",21))			//km podle tachometru
 q 0
 // 
gPcNDU() q 84		// pocet udaju v datove vete sj (zakladni veta)
gPcNMU() q 40		// pocet udaju v mzdove vete sj (u ridice)
gPcNFU() q 27		// pocet udaju ve vete pro fakturaci
gPcFakSj() q 4		// pocet udaju ve vete pro fakturaci
gPcFakItmSj() q 3 	// pocet udaju ve vete fakturacni polozky
gPcFakPplSj() q 8	// pocet udaju ve vete poplatku
 //
gSjDsc(arr)
 // d ^gSjDsc(arr)
 // vrati popis polozek sj
 // mzda pro ridice - arr("osc","dta",cnt)=zkratka~jednotka~popis
 //     jednotka 1=min 2=ks 3=Kč 4=Km 5=hh.mm 
 s arr("dsc","osc","dta",1)="OS~~osobní číslo"
 s arr("dsc","osc","dta",2)="M~~počítat mzdu (A/N)"
 s arr("dsc","osc","dta",3)="KčDiety~3~kč diety"
 s arr("dsc","osc","dta",4)="HodČekZap~5~hodiny čekání započteného do odpracované doby"
 s arr("dsc","osc","dta",5)="HodTar~5~hodiny placené tarifem, jdou do odpracovane doby"
 s arr("dsc","osc","dta",6)="HodDodk~5~hodiny DODK (drive hodiny neplacene)"
 s arr("dsc","osc","dta",7)="HodNoc~5~hodiny v noci"
 s arr("dsc","osc","dta",8)="HodSoNe~5~hodiny v SO-NE"
 s arr("dsc","osc","dta",9)="HodSv~5~hodiny ve svátek"
 s arr("dsc","osc","dta",10)="KčPau~3~kč paušální"
 s arr("dsc","osc","dta",11)="KčPref~3~kč preference"
 s arr("dsc","osc","dta",12)="HodČekNeZap~5~hodiny čekání celkem"
 s arr("dsc","osc","dta",13)="HodJíz~5~hodiny jízdy (35+36)"
 s arr("dsc","osc","dta",14)="KmObsaz~4~km obsazené"
 s arr("dsc","osc","dta",15)="KmNeObsaz~4~km neobsazené"
 s arr("dsc","osc","dta",16)="KmRež~4~km režijní"
 s arr("dsc","osc","dta",17)="KmPřív~4~km přívěs"
 s arr("dsc","osc","dta",18)="KmKlo~4~km kloubovým autobusem"
 s arr("dsc","osc","dta",19)="KčMzdČas~3~kč - mzda časová"
 s arr("dsc","osc","dta",20)="KčMzdVýk~3~kč - mzda výkonová"
 s arr("dsc","osc","dta",21)="HodCelk~5~hodiny celkem, započítané do odpr.doby (2+3+4+11+30nst+31+33+34)"
 s arr("dsc","osc","dta",22)="KčPříplKlo~3~kč příplatek za km kloubového autobusu(16) a km přívěsu(15)"
 s arr("dsc","osc","dta",23)="KčČek~3~kč čekání"
 s arr("dsc","osc","dta",24)="KčHodTar~3~kč za hodiny tarifem (tarif(3)+dodk(4)+mytí(33)+nal.zav.(34))"
 s arr("dsc","osc","dta",25)="KčHodNoc~3~kč za hodiny v noci"
 s arr("dsc","osc","dta",26)="KčPrem~3~kč za prémie" ;!!!!!!!!!!!!!!!!!!
 s arr("dsc","osc","dta",27)="HodSpj~5~hodiny spolujízdy"
 s arr("dsc","osc","dta",28)="KčSpj~3~kč za spolujízdu(25)"
 s arr("dsc","osc","dta",29)="KčHodMzd~3~kč za  hodiny (17+22)"
 s arr("dsc","osc","dta",30)="KčFixDoc~3~kč fixní na doklad"
 s arr("dsc","osc","dta",31)="KčFixDODK~3~kč fixní za DODK"
 s arr("dsc","osc","dta",32)="HodBP~5~hodiny BP"
 s arr("dsc","osc","dta",33)="HodZap~5~hodiny započtené do odpracované doby, neplacené"
 s arr("dsc","osc","dta",34)="PočDoklDen~2~počet dní s dokladem"
 s arr("dsc","osc","dta",35)="HodMytCis~5~hodiny mytí, čištění"
 s arr("dsc","osc","dta",36)="HodNaklZav~5~hodiny nákladu zavazadel"
 s arr("dsc","osc","dta",37)="HodJíz1OS~5~hodiny jízdy při jízdě v jednom řidiči"
 s arr("dsc","osc","dta",38)="HodJízVOS~5~hodiny jízdy při jízdě ve více řidičích"
 s arr("dsc","osc","dta",39)="HodZTP~5~hodiny doba (min) pro příplatek za práci ve ztíženém prostředí"
 s arr("dsc","osc","dta",40)="KčPříplZTP~3~kč příplatek za práci ve ztíženém prostředí"
 q
dSj(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$dSj(idfa,nmsp,zp,rrmm,doc,in,out) - vymazani dokladu z db
 // in("idos")=mlp~loginname~fullname ... dostat tam idos
 // in("par",1)=zpusob vymazani dokladu 0 parametrem / 1 odstraneni dokladu z db
 // in("par",2)=zpusob vymazani sledovacich udaju 0 nemazat / 1 mazat (0 delete při přepočtech dokladu / 1 pokud jde o opravdovy delete dokladu)
 // in("par",3)=zpusob vymazani kontroly vozidla v modulu vozidla 0 nemazat / 1 mazat
 // out("stt")= 0 nevymazano / 1 vymazano
 // ! pozor, nekontroluje se, zda je doklad vyfakturovany, maze i vyfakturovane, nutno osetrit pred volanim fce !
 n (idfa,nmsp,zp,rrmm,doc,in,out) s $zt="err" k out s out("stt")=0 s err=""
 // kontrola prom.
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 // dz z idfa
 s dz=$$gFaDz^OBapiED(idfa)
 // id provozovny
 s idprv=zp#100
 // test na existenci dokladu
 k arr s err=$$isSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arr) zt:+err "merr" s err=""
 i '$g(arr) q 0
 // vymazani dokladu
 k arrdoc s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arrdoc) zt:+err "merr" s err=""
 //zruseny doklad
 i +$g(arrdoc("dta",1))=3 q 0
 //predznaceny doklad
 i '$g(arrdoc("dta",1)) d  q 0
 .// vymazani dokladu - parametr
 .i ('+$g(in("par",1))) d
 ..//zatim takto, pak predelat na $$sDz(...
 ..s $p(^[nmsp]OBD(zp,rrmm,doc),":",1,2)="3:"_+$h
 ..s ^[nmsp]OBD(zp,rrmm,doc,"KdoZrusil")=$p(idos,"~",3)
 .// vymazani dokladu - z db
 .i (+$g(in("par",1))) d
 ..//poznaceni ruseneho dokladu
 ..s inxhrl=$h
 ..s ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc)=$p(idos,"~",3)
 ..m ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc,"dta")=^[nmsp]OBD(zp,rrmm,doc)
 ..//ruseni dokladu v db
 ..k ^[nmsp]OBD(zp,rrmm,doc)
 .s out("stt")=1
 // uznany doklad (i vyfakturovany)
 // transakce !!!
 s $zt="errtroll" tstart
 s rz=$g(arrdoc("dta",8)) s rzpri=$g(arrdoc("dta",9)) s idobj=$g(arrdoc("dta",4)) s hrlbg=$g(arrdoc("dta",6)) s hrlend=$g(arrdoc("dta",7))
 // odkaz v objednavce
 i idobj d
 .k tmparr s tmparr("par",1)=1 s tmparr("arr",11,(zp_"~"_rrmm_"~"_doc))=""
 .//zruseni odkazu na sj na objednavce a aktualizace stavu objednavky
 .s err=$$actLinkObj^OBapiED(idfa,nmsp,zp,idobj,.tmparr,"")
 .//update stavu objednavky ... postaru
 .k ^[nmsp]OBOBJ(zp,"O",$$unwrapIdObj^OBapiED(idobj,1),$$unwrapIdObj^OBapiED(idobj,2),"SJ")
 .k tmparr
 // grafikon aut
 s err=$$dGrfRz^OBapiED(idfa,nmsp,rz,hrlbg,doc,"","") zt:+err "merr" s err=""
 // grafikon ridicu
 s os="" f  s os=$o(arrdoc("osc",os)) q:os=""  d
 .s err=$$dGrfOs^OBapiED(idfa,nmsp,os,hrlbg,doc,"","") zt:+err "merr" s err=""
 .// !!! nahrada gSj !!!
 .i $d(^[nmsp]OBD(zp,rrmm,doc,"PHHC")) s err=$$dGrfOs^OBapiED(idfa,nmsp,os,hrlbg,"PHH","","") zt:+err "merr" s err=""
 // ruseni sledovani fixniho dodk, fixnich kc, poctu dnu s dokladem
 i $g(in("par",2)) d
 .s err=$$dWatchDtaSj(idfa,nmsp,zp,rrmm,doc,hrlbg,hrlend,"","") zt:+err "merr" s err=""
 /*
 .f idwatch="FixDodkDoc","FixKcDoc","DenDoc" d
 ..f hrl=hrlbg:1:hrlend d
 ...s os="" f  s os=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os)) q:os=""  d
 ....s idwatchrz="" f  s idwatchrz=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)) q:idwatchrz=""  d
 .....i $g(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz))=(zp_"|"_rrmm_"|"_doc) k ^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)
 */
 // ruseni v evidenci prepravcu
 /*
 ..S PUC=$P(w,D,25) D:PUC'=""  ;zkr prepravce
 ...s x=$zp(^OBPRE(DZPR,PUC,"ZAL",999999)) Q:x=""
 ...s ZB=$P($G(^OBPRE(DZPR,PUC,"ZAL",x)),D,4)
 ...s z=bg_"|"_(sj-qsj) i $D(^OBPRE(DZPR,PUC,"ZAL",x,z)) d
 ....s q=+$g(^(z)),ZB=ZB+q k ^(z) s $p(^OBPRE(DZPR,PUC,"ZAL",x),D,4)=ZB
 ..;S kodzak=$g(^OBD(DZPR,AO,sj,"Zakaznik"))
 ..S kodzak=PUC_"@"_provo i $g(idfi)'="" i $d(^OBSJFAZ(idfi,kodzak)) d
 ...q:+$g(^OBSJFAZ(idfi,kodzak))
 ...;ruseni sj ve specialnich zakaznicich
 ...k ^OBSJFAZ(idfi,kodzak,"Data",DZPR#100,$$^OBROK(AO\100),(AO#100),sj-qsj)
 */
 //ruseni v zahranicnm DPH !!! fce
 /*
 K ^[sy]Orel(idfi,"Data",DZPR,$$^OBROK(AO\100)*100+(AO#100),sj-qsj)
 */
 //ruseni km v centralni evidenci km (nova vozidla)
 i rz'="-" d												// ne pro rz="-"
 .i '$$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) q      //kontrola, zda je pro firmu, provoz a obdobi zapis povolen  
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(dz,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .i $$rrrrmm^OBapiED(rrmm)>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,$$rrrrmm^OBapiED(rrmm),doc)
 .k arri s arri("Spz",rz)="" s:($g(rzpri)'="")&($g(rzpri)'="C") arri("Spz",rzpri)=""
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),($p(idos,"~",1)_"|"_$p(idos,"~",2)_"|"_$p(idos,"~",3)),iddok,.arri)
 // vymazani zapisu o kontrole ve vozidlech
 i (+$g(in("par",3))) s err=$$dVcKntBus^OBapiEDDocKntBus(idfa,nmsp,hrlbg,rz,(zp_"|"_rrmm_"|"_doc),$tr(idos,"~","|"),"","") s err=""
 // =======================================
 // zruseni dokladu
 // vymazani dokladu - parametr
 i ('+$g(in("par",1))) d
 .//zatim takto, pak predelat na $$sDz(...
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",1,2)="3:"_+$h
 .s ^[nmsp]OBD(zp,rrmm,doc,"KdoZrusil")=$p(idos,"~",3)
 // vymazani dokladu - z db
 i (+$g(in("par",1))) d
 .//poznaceni ruseneho dokladu
 .s inxhrl=$h
 .s ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc)=$p(idos,"~",3)
 .m ^[nmsp]OBrusd(zp,rrmm,inxhrl,doc,"dta")=^[nmsp]OBD(zp,rrmm,doc)
 .//ruseni dokladu v db
 .k ^[nmsp]OBD(zp,rrmm,doc)
 //
 s out("stt")=1
 tcommit
 q 0
dWatchDtaSj(idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out)
 n (idfa,nmsp,zp,rrmm,doc,hrlbeg,hrlend,in,out) k out s $zt="err"
 f idwatch="FixDodkDoc","FixKcDoc","DenDoc" d
 .f hrl=hrlbeg:1:hrlend d
 ..s os="" f  s os=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os)) q:os=""  d
 ...s idwatchrz="" f  s idwatchrz=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)) q:idwatchrz=""  d
 ....i $g(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz))=(zp_"|"_rrmm_"|"_doc) k ^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)
 q 0
dWatchObdDtaSj(idfa,nmsp,rrmm,in,out)
 n (idfa,nmsp,rrmm,in,out) k out s $zt="err"
 //in("zp",zp)=""
 //in("prv",prv)=""
 i $g(rrmm)="" s err="rrmm=" zt "merr"
 s rrmm=rrmm#10000
 //konstanta qsj
 s qsj=$$qsj^OBapiED()
 //konverze prv na zp
 s idprv="" f  s idprv=$o(in("prv",idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr"
 .i zp s in("zp",zp)=""
 s iszp=($o(in("zp",""))'="")
 s hrlbeg=$$gminhrlrrmm^OBapiED(rrmm)-15
 s hrlend=$$gmaxhrlrrmm^OBapiED(rrmm)+15
 f idwatch="FixDodkDoc","FixKcDoc","DenDoc" d
 .f hrl=hrlbeg:1:hrlend d
 ..s os="" f  s os=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os)) q:os=""  d
 ...s idwatchrz="" f  s idwatchrz=$o(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)) q:idwatchrz=""  d
 ....s val=$g(^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz))
 ....//nesedi obdobi
 ....i $p(val,"|",2)'=rrmm q
 ....//nesedi typ dokladu
 ....i $p(val,"|",3)<qsj q
 ....//nesedi provoz
 ....i iszp i $p(val,"|",1)'="" i '$d(in("zp",$p(val,"|",1))) q  
 ....k ^[nmsp]OBwatch(idfa,idwatch,hrl,os,idwatchrz)
 //
 q 0
sSttSj(idfa,nmsp,zp,rrmm,doc,idstt,in,out)
 // s err=$$sSttSj(idfa,nmsp,zp,rrmm,doc,.in,.out)
 // in:
 // in("dta",1)=iddoc (idenfifikator faktury (rok~fstr~cislo)
 // in("dta",2)=hrl   (hrl prevodu do fakturace)
 // in("par",1)=nefaksj (nastavit nevystavovat fakturu pro doklad 0 ne / 1 ano)
 // in("idos")=mlp~loginname~fullname
 //
 n (idfa,nmsp,zp,rrmm,doc,idstt,in,out)
 s $zt="err" s err="" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(idstt)="" q "1~idstt="
 // neprisel horlog zmeny, doplnim aktualni
 i '$g(in("dta",2)) s in("dta",2)=$h
 // =======================================
 // zmena stavu na SJ 
 // ===============
 k arr s err=$$gSj^OBapiED(idfa,nmsp,zp,rrmm,doc,"",.arr) zt:+err "merr" s err=""
 s arr("dta",1)=idstt
 // horlog prevodu do fakturace
 s arr("dta",3)=""
 // odkaz na fakturu
 s arr("arr",2,"dta",1)=""  						//id faktury (rok~fstr~cislo~idfa)
 // prevod do fakturace
 i idstt=2 d
 .s arr("dta",3)=$g(in("dta",2))
 .s arr("arr",2,"dta",1)=$g(in("dta",1))			//id faktury (rok~fstr~cislo~idfa)
 .s cnt=($o(arr("arr",2,"arr",""),-1)+1)
 .s arr("arr",2,"arr",cnt,"dta",1)=$g(in("dta",1)) 	//id faktury (rok~fstr~cislo~idfa)
 .s arr("arr",2,"arr",cnt,"par",1)=$g(in("dta",2))
 .s arr("arr",2,"arr",cnt,"par",2)=$p($g(in("idos")),"~",3)
 s arr("idos")=$g(in("idos"))
 //nastaveni priznaku nevystavovat fakturu
 i +$g(in("par",1)) s arr("dta",39)=9
 //=======================================
 s err=$$sSj^OBapiED(idfa,nmsp,zp,rrmm,doc,.arr,"") zt:+err "merr" s err=""
 q 0
gSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // vrati doklady pro cerpane phm na SJ
 // err=$$gSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // 
 // in
 // out
 //     out("dta",1)=phm na doklade
 //     out("dta",2)=phm FAME na doklade
 //     out("dta",3)=phm topeni na doklade
 //		out("dta",4)=phm b30 na doklade
 //		out("arr",1,"arr",idDoc,"dta",1)=phm
 //		out("arr",1,"arr",idDoc,"dta",2)=phm FAME
 //		out("arr",1,"arr",idDoc,"dta",3)=phm topeni
 //		out("arr",1,"arr",idDoc,"dta",4)=phm b30
 //		out("arr",1,"arr",idDoc,"dta",5)=dodavatel phm
 //     out("arr",1,"cop","dta",1)=horlog
 //     out("arr",1,"cop","dta",2)=jmeno uzivatele
 //
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 s out("dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",22)
 s out("dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",73)
 s out("dta",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",72)
 s out("dta",4)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",78)
 s id="" f  s id=$o(^[nmsp]OBD(zp,rrmm,doc,"docphm",id)) q:id=""  d
 .s val=$g(^[nmsp]OBD(zp,rrmm,doc,"docphm",id))
 .f cnt=1:1:5 s out("arr",1,"arr",id,"dta",cnt)=$p(val,"~",cnt)
 s out("arr",1,"cop","dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",1)
 s out("arr",1,"cop","dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc,"docphm")),"~",2)
 q 0
sSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // zapise doklady pro cerpane phm na SJ
 // err=$$sSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // 
 // in
 //     in("par",1)=0/1/-1 ... 0 nic / 1 phm se aktualizuje podle dokladu na SJ / -1 phm se aktualizuje na dokladu podle SJ
 //		in("arr",1,"arr",idDoc,"dta",1)=phm
 //		in("arr",1,"arr",idDoc,"dta",2)=phm FAME
 //		in("arr",1,"arr",idDoc,"dta",3)=phm topeni
 //		in("arr",1,"arr",idDoc,"dta",4)=phm b30
 //		in("arr",1,"arr",idDoc,"dta",5)=dodavatel phm
 //     in("idos")=mlp~loginname~fullname
 // out
 //
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 k ^[nmsp]OBD(zp,rrmm,doc,"docphm")
 //aktualizace phm z dokladu
 i $g(in("par",1))=-1 d
 .s id="" f  s id=$o(in("arr",1,"arr",id)) q:id=""  d
 ..s in("arr",1,"arr",id,"dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",22) //phm
 ..s in("arr",1,"arr",id,"dta",2)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",73) //fame
 ..s in("arr",1,"arr",id,"dta",3)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",72) //topeni
 ..s in("arr",1,"arr",id,"dta",4)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",78) //b30
 //zapis do dokladu
 s phm="" s phmF="" s phmT="" s phmB30=""
 s id="" f  s id=$o(in("arr",1,"arr",id)) q:id=""  d
 .s val="" f cnt=1:1:5 s $p(val,"~",cnt)=$g(in("arr",1,"arr",id,"dta",cnt))
 .s ^[nmsp]OBD(zp,rrmm,doc,"docphm",id)=val s val=""
 .s phm=phm+$g(in("arr",1,"arr",id,"dta",1))
 .s phmF=phmF+$g(in("arr",1,"arr",id,"dta",2))
 .s phmT=phmT+$g(in("arr",1,"arr",id,"dta",3))
 .s phmB30=phmB30+$g(in("arr",1,"arr",id,"dta",4))
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$h
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$p($g(in("idos")),"~",3)
 //aktualizace phm na dokladech a v grafikonu
 i $g(in("par",1))=1 d
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",22)=phm
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",73)=phmF
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",72)=phmT
 .s $p(^[nmsp]OBD(zp,rrmm,doc),":",78)=phmB30
 .s rz=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",8)
 .s hrlbeg=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",6) i hrlbeg s hrlbeg=$$dn^OBapiED(hrlbeg)
 .//grafikon aut
 .s dz=$$gFaDz^OBapiED(idfa)
 .i (rz'="")&(hrlbeg'="") d
 ..i $d(^[nmsp]XA(dz,rz,hrlbeg,doc)) d
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",9)=phm
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",10)=phmF
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",12)=phmT
 ...s $p(^[nmsp]XA(dz,rz,hrlbeg,doc),":",19)=phmB30
 q 0
dSjDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // vymaze doklady pro cerpane phm na SJ
 // err=$$dDzDocPhm(idfa,nmsp,zp,rrmm,doc,in,out)
 // in
 //     in("idos")=mlp~loginname~fullname
 // out
 n (idfa,nmsp,zp,rrmm,doc,in,out) k out s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 k ^[nmsp]OBD(zp,rrmm,doc,"docphm")
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",1)=$h
 s $p(^[nmsp]OBD(zp,rrmm,doc,"docphm"),"~",2)=$p($g(in("idos")),"~",3)
 q 0
 //
gSjSttTach(idfa,nmsp,zp,rrmm,doc,in,out)
 // err=$$gSjSttTach(idfa,nmsp,zp,rrmm,doc,in,out) - vrati stav tachometru z vozidla
 // out("dta",1)= konecny stav tachometru
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err="" s out=0
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 //
 s out("dta",1)=$p($g(^[nmsp]OBD(zp,rrmm,doc)),":",20)
 q 0
err s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
errtroll s $zt="" trollback 1 k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDSj1" type="INT" languagemode="0" timestamp="63011,77953"><![CDATA[
OBapiEDSj1 q
 // api SJ
sSjPartPrs(idfa,nmsp,zp,rrmm,doc,in,out)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 // in("idos")=idos
 // in("arr",1,"dta",4)=prs (prepravni system)
 // ==========================================
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 // idos
 s idos=$g(in("idos"))
 // zapis prepravniho systemu do dokladu
 s ^[nmsp]OBD(zp,rrmm,doc,"prs")=$g(in("arr",1,"dta",4))						//prepravni system 
 // poznaceni o zmene
 k arr m arr(zp,rrmm,doc)=in
 s err=$$sHistory^OBapiED(idfa,nmsp,"CHNGPRS|"_rrmm,"",.arr,"") zt:+err "merr" s err=""
 // poznaceni obdobi pro plneni DS
 k arr s arr("arr",1,rrmm)=""
 s err=$$sRMForFillDS^OBapiED(idfa,nmsp,.arr,"") zt:+err "merr" s err=""
 q 0
sSjPartNs(idfa,nmsp,zp,rrmm,doc,in,out)
 n (idfa,nmsp,zp,rrmm,doc,in,out)
 s $zt="err" k out s err=""
 // in("idos")=idos
 // in("dta",43)=ns
 // ==========================================
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(doc)="" q "1~doc="
 i $g(in("dta",43))="" q "1~ns="
 // idos
 s idos=$g(in("idos"))
 //doklad neexistuje
 i '$d(^[nmsp]OBD(zp,rrmm,doc)) q 0
 //doklad je predznaceny
 i '$g(^[nmsp]OBD(zp,rrmm,doc)) q 0
 // zapis ns do dokladu 
 s val=$g(^[nmsp]OBD(zp,rrmm,doc))
 s $p(val,":",43)=$tr($g(in("dta",43)),":","")
 s ^[nmsp]OBD(zp,rrmm,doc)=val
 s ^[nmsp]OBD(zp,rrmm,doc,"Ns")=$tr($g(in("dta",43)),":","")
 // poznaceni o zmene
 k arr m arr(zp,rrmm,doc)=in
 s err=$$sHistory^OBapiED(idfa,nmsp,"CHNGNS|"_rrmm,"",.arr,"") zt:+err "merr" s err=""
 // poznaceni obdobi pro plneni DS
 k arr s arr("arr",1,rrmm)=""
 s err=$$sRMForFillDS^OBapiED(idfa,nmsp,.arr,"") zt:+err "merr" s err=""
 q 0
convPHTSJ(idfa,nmsp)
 n (idfa,nmsp)
 s dz=$$gFaDz^OBapiED(idfa)
 s qsj=$$qsj^OBapiED()
 w #
 w "konverze evidovaného PHM na dokladech SJ",!
 w "program od evidovaného phm odečte ph pro topení",!
 w "idfa="_idfa,!
 w "namespace="_nmsp,!
 w "dz="_dz,!
 w "pokračovat ? (a)" r key
 i (key="a")!(key="a") d
 .s zp="" f  s zp=$o(^[nmsp]OBD(zp)) q:zp=""  d
 ..i zp\100'=dz q
 ..s rrmm="" f  s rrmm=$o(^[nmsp]OBD(zp,rrmm)) q:rrmm=""  d
 ...s iddoc=qsj f  s iddoc=$o(^[nmsp]OBD(zp,rrmm,iddoc)) q:(iddoc="")  d
 ....s val=$g(^[nmsp]OBD(zp,rrmm,iddoc))
 ....//je topeni
 ....i +$p(val,":",72) d
 .....w !,zp,"  ",rrmm,"  ",(iddoc-qsj),"  ",+$p(val,":",22),"/",+$p(val,":",72),"->"
 .....s $p(val,":",22)=($p(val,":",22)-$p(val,":",72))
 .....w +$p(val,":",22),"/",+$p(val,":",72)
 .....s ^[nmsp]OBD(zp,rrmm,iddoc)=val
 q ""
 //
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
 
]]></Routine>


<Routine name="OBapiEDSjCal" type="INT" languagemode="0" timestamp="64940,43156.792459"><![CDATA[
OBapiEDSjCal q
 // vypocet SJ
mkMzdDtaSj(idfa,nmsp,zp,arrdoc,in,out)
 // mzdovy vypocet
 // in("par",1)=rrmmdoc dokladu SJ
 // in("par",2)=iddoc dokladu SJ
 n (idfa,nmsp,zp,arrdoc,in,out) s $zt="err" k out s err=""
 // identifikace dokladu
 s rrmmdoc=$g(in("par",1))		//rrmm dokladu sj
 s iddoc=$g(in("par",2))		//iddoc dokladu sj
 s idprv=zp#100
 //nacteni ciselniku druhu zajezdu pro pripadny typ sazeb (vnitro / zahranicni)
 k arr s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arr) zt:+err "merr"
 s iszahr=0 i $g(arrdoc("dta",10))'="" i $p($g(arr("arr",$g(arrdoc("dta",10)))),"~",4)'="*CZ" S iszahr=1
 k arr
 //============================================================================
 //nacteni ciselniku typu prepravcu pro pripadnou mzdovou preferenci
 k arr s err=$$gCis^OBapiED(idfa,nmsp,2,"",.arr) zt:+err "merr"
 s mzdpref=0 i $g(arrdoc("dta",11))'="" s mzdpref=$p($g(arr("arr",$g(arrdoc("dta",11)))),"~",7)
 k arr
 //=================================================================
 //nacteni informaci pro auto pro parametr kloubak a typ auta
 s hrl=$g(arrdoc("dta",6)) s rz=$g(arrdoc("dta",8))
 k arr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,rz,"",.arr) zt:+err "merr"
 s idtypa=$g(arr("dta",5)) s iskloub=+$g(arr("dta",8))
 k arr
 //==========================================================
 // nacteni mzdovych parametru - obecne
 k arrmzdset s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzdset) zt:+err "merr"
 // nacteni mzdovych parametru - casove pro UH
 k arrmzdset4 s err=$$gMzdSet4^OBapiED(idfa,nmsp,"",.arrmzdset4) zt:+err "merr"
 // ===================================
 // pocet dni
 s cntday=($g(arrdoc("dta",7))-$g(arrdoc("dta",6))+1)
 // pocet ridicu
 s cntosc=0  s osc="" f  s osc=$o(arrdoc("osc",osc)) q:osc=""  d
 .//fiktivni osc ne
 .i $g(arrdoc("osc",osc,"dta",2))="F" q
 .s cntosc=cntosc+1
 // rozdeleni km pro ridice (nastavi km kloubakem, uvazuje pendly)
 k arrkm s err=$$mkKmOscSj(idfa,nmsp,iskloub,.arrkm,.arrdoc) zt:+err "merr"
 // celkove km pro limity, dorovnani,...
 s allsjkm=($g(arrdoc("dta",16))+$g(arrdoc("dta",17))+$g(arrdoc("dta",18)))
 // =======================
 // vypocet mzdy pro ridice
 // =======================
 s osc="" f  s osc=$o(arrdoc("osc",osc)) q:osc=""  d
 .//ns ridice
 .s nsos=+$g(arrdoc("osc",osc,"par",2))
 .//zpusob vypoctu mzdy pro ridice - obecne
 .s dmz=$g(arrmzdset("arr",2,0,1)) s:'dmz dmz=1
 .// druh vypoctu mzdy pro provozovnu
 .i +$g(arrmzdset("arr",2,0,1,"prv",idprv)) s dmz=+$g(arrmzdset("arr",2,0,1,"prv",idprv))
 .// druh vypoctu mzdy pro ns ridice
 .i +$g(arrmzdset("arr",2,0,1,"ns",nsos)) s dmz=+$g(arrmzdset("arr",2,0,1,"ns",nsos))
 .//koeficient kraceni mzdy
 .s koefkracmzd=1 
 .// koeficient kraceni mzdy pri spolujizde vice ridicu - nastaveno ve mzdovych parametrech
 .i +$g(arrmzdset("arr",2,0,10,"dta",1)) i cntosc>1 s koefkracmzd=($g(arrmzdset("arr",2,0,10,"dta",2))/100) s:'koefkracmzd koefkracmzd=1
 .// koeficient kraceni mzdy pri spolujizde vice ridicu z pendlu - zadano u pendlu
 .i +$g(arrdoc("osc",osc,"pnd",1)) s koefkracmzd=($g(arrdoc("osc",osc,"pnd",9))/100) s:'koefkracmzd koefkracmzd=1
 .//=======================
 .//vymazani mzdovych udaju
 .//=======================
 .f cnt=11:1:26,28,29,30,31,32,34,37,38,39,40 s arrdoc("osc",osc,"dta",cnt)=""
 .// =================================================================================================
 .// automaticke kraceni jizdy pri spolujizde na doklade (o co se ma pokratit jizda dam do spolujizdy)
 .// =================================================================================================
 .i ((+$g(arrmzdset("arr",2,0,9,"dta",1))=1)!(+$g(arrmzdset("arr",2,0,9,"prv",idprv,"dta",1))=2)) d
 ..//firma ano, na provoz ne
 ..i (+$g(arrmzdset("arr",2,0,9,"prv",idprv,"dta",1))=1) q
 ..// je-li pendl, ne
 ..i +$g(arrdoc("osc",osc,"pnd",1)) q
 ..//vymazu udaje o spolujizde
 ..s arrdoc("osc",osc,"dta",27)=""
 ..//automaticke nastaveni spolujizdy v pripade vice ridicu
 ..i (cntosc>1) d
 ...// vypocet spolujizdy
 ...s szb=""
 ...//centralni sazba
 ...i +$g(arrmzdset("arr",2,0,9,"dta",1))=1 s szb=$g(arrmzdset("arr",2,0,9,"dta",2))
 ...//sazba pro provozovnu
 ...i +$g(arrmzdset("arr",2,0,9,"prv",idprv,"dta",1))=2 s szb=$g(arrmzdset("arr",2,0,9,"prv",idprv,"dta",2))
 ...s arrdoc("osc",osc,"dta",27)=($g(arrdoc("dta",12))-$$round^OBapiED(($g(arrdoc("dta",12))/100*szb),0)) 
 .//====================================
 .//vypocet mzdove preference pro ridice
 .//====================================
 .s arrdoc("osc",osc,"dta",11)=(mzdpref*cntday)
 .//vypocet doby jizdy a cekani pro ridice standard
 .i '$g(arrdoc("osc",osc,"pnd",1)) d
 ..s arrdoc("osc",osc,"dta",12)=$g(arrdoc("dta",13))								//cekani
 ..s arrdoc("osc",osc,"dta",13)=$g(arrdoc("dta",12))-$g(arrdoc("osc",osc,"dta",27))	//jizda=jizda-spolujizda
 .//vypocet doby jizdy a cekani pro ridice pendl
 .i +$g(arrdoc("osc",osc,"pnd",1)) d
 ..s arrdoc("osc",osc,"dta",12)=+$g(arrdoc("osc",osc,"pnd",3))						//cekani
 ..s arrdoc("osc",osc,"dta",13)=+$g(arrdoc("osc",osc,"pnd",2))						//jizda
 .//rozdeleni jizdy podle poctu ridicu
 .i cntosc=1 s arrdoc("osc",osc,"dta",37)=$g(arrdoc("osc",osc,"dta",13))			//jizda v jednom ridici
 .i cntosc>1 s arrdoc("osc",osc,"dta",38)=$g(arrdoc("osc",osc,"dta",13))			//jizda ve vice ridicich
 .//km pro ridice
 .s arrdoc("osc",osc,"dta",14)=$p($g(arrkm(osc)),"~",1)
 .s arrdoc("osc",osc,"dta",15)=$p($g(arrkm(osc)),"~",2)
 .s arrdoc("osc",osc,"dta",16)=$p($g(arrkm(osc)),"~",3)
 .s arrdoc("osc",osc,"dta",17)=$p($g(arrkm(osc)),"~",4)
 .s arrdoc("osc",osc,"dta",18)=$p($g(arrkm(osc)),"~",5)
 .// ============================================
 .// automaticke prideleni fixniho DODK na doklad
 .// ============================================
 .i ($g(arrmzdset("arr",0,3,"dta",1))=2)!($g(arrmzdset("arr",0,3,"dta",1))=3) d
 ..//vymazani dat
 ..s arrdoc("osc",osc,"dta",6)=""	//hodiny
 ..s arrdoc("osc",osc,"dta",31)=""	//kc
 ..//nic se neprideluje na provoz
 ..i +$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2))=4 q
 ..//nic se neprideluje na firmu
 ..i ((+$g(arrmzdset("arr",0,3,"dta",2))=3)&(($g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2))=0))) q
 ..//kontrola prideleni hodnoty
 ..//pouze prvni ridic
 ..i ($g(arrmzdset("arr",0,3,"dta",3))=1)&(cntosc>1)&($g(arrdoc("osc",osc,"par",1))'=1) q
 ..f hrl=$g(arrdoc("dta",6)):1:$g(arrdoc("dta",7)) d
 ...s allocate=0 d
 ....//pridelit vzdy
 ....i $g(arrmzdset("arr",0,3,"dta",4))=0 s allocate=1 q
 ....//pridelit denne na osc a rz
 ....i $g(arrmzdset("arr",0,3,"dta",4))=1 d  q
 .....i '$d(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz)) s ^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz)=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 .....i $g(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ....//pridelit denne na osc
 ....i $g(arrmzdset("arr",0,3,"dta",4))=2 d  q
 .....i '$d(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 .....i $g(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ...i allocate d
 ....//=========================================
 ....//zpusob prideleni dodk + hodnota pro firmu
 ....//=========================================
 ....s valfxmm="" s valfxkc="" s valfxpr="" s jdndodk=""
 ....i +$g(arrmzdset("arr",0,3,"dta",2))=0 d
 .....s jdndodk=0
 .....s valfxmm=$g(arrmzdset("arr",0,3,"dta",5))						//DODK bezny bus
 .....s:iskloub valfxmm=$g(arrmzdset("arr",0,3,"dta",6))				//DODK kloubovy bus (min)
 ....i +$g(arrmzdset("arr",0,3,"dta",2))=1 d
 .....s jdndodk=1
 .....s valfxkc=$g(arrmzdset("arr",0,3,"dta",7))						//DODK bus (kc)
 .....s:iskloub valfxkc=$g(arrmzdset("arr",0,3,"dta",8))				//DODK kloubovy bus (kc)
 ....i +$g(arrmzdset("arr",0,3,"dta",2))=2 d
 .....s jdndodk=2
 .....s valfxpr=$g(arrmzdset("arr",0,3,"dta",10))						//DODK bus (%)
 .....s:iskloub valfxpr=$g(arrmzdset("arr",0,3,"dta",11))				//DODK kloubovy bus (%)
 ....//==========================================
 ....//zpusob prideleni dodk + hodnota pro provoz
 ....//==========================================
 ....i +$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2)) s valfxmm="" s valfxkc="" s valfxpr="" s jdndodk=""
 ....i +$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2))=1 d
 .....s jdndodk=0
 .....s valfxmm=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",5))				//DODK bezny bus
 .....s:iskloub valfxmm=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",6))		//DODK kloubovy bus (min)
 ....i +$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2))=2 d
 .....s jdndodk=1
 .....s valfxkc=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",7))				//DODK bezny bus (kc)
 .....s:iskloub valfxkc=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",8))		//DODK kloubovy bus (kc)
 ....i +$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",2))=3 d
 .....s jdndodk=2
 .....s valfxpr=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",10))				//DODK bezny bus (%)
 .....s:iskloub valfxpr=$g(arrmzdset("arr",0,3,"arr",1,idprv,"dta",11))		//DODK kloubovy bus (%)
 ....//hodiny
 ....i jdndodk=0 d
 .....s arrdoc("osc",osc,"dta",6)=$g(arrdoc("osc",osc,"dta",6))+valfxmm
 ....//kc
 ....i jdndodk=1 d
 .....s arrdoc("osc",osc,"dta",31)=$g(arrdoc("osc",osc,"dta",31))+valfxkc
 ....//%
 ....i jdndodk=2 d
 .....s valfxmm=0
 .....s valcaspol=$g(arrmzdset("arr",0,3,"dta",13))							//polozky, ze kterych se to pocita
 .....f cnt=1:1:$l(valcaspol) d
 ......s idcaspol=$p(valcaspol,"~",cnt)
 ......i idcaspol s valfxmm=valfxmm+$g(arrdoc("osc",osc,"dta",idcaspol))
 .....s valfxmm=valfxmm*valfxpr/100											//vypocet %
 .....s valfxmm=$$round^OBapiED(valfxmm,0)	
 .....s arrdoc("osc",osc,"dta",6)=valfxmm									//nescitat, pocita se z celkove doby jizdy
 .// ==========================================
 .// automaticke prideleni fixnich kc na doklad
 .// ==========================================
 .i ($g(arrmzdset("arr",0,4,"dta",1))=2)!($g(arrmzdset("arr",0,4,"dta",1))=3) d
 ..//vymazani hodnoty
 ..s arrdoc("osc",osc,"dta",30)=""
 ..//hodnota kc
 ..s valfxkc=$g(arrmzdset("arr",0,4,"dta",4)) 																		//fixni kc pro normalni bus
 ..i $g(arrmzdset("arr",0,4,"arr",1,idprv,"dta",4))'="" s valfxkc=$g(arrmzdset("arr",0,4,"arr",1,idprv,"dta",4))	//fixni kc pro normalni bus a provoz
 ..i iskloub d														
 ...s valfxkc=$g(arrmzdset("arr",0,4,"dta",5))																		//fixni kc pro kloubak
 ...i $g(arrmzdset("arr",0,4,"arr",1,idprv,"dta",5))'="" s valfxkc=$g(arrmzdset("arr",0,4,"arr",1,idprv,"dta",5)) 	//fixni kc pro kloubak a provoz
 ..//===============================================================================================
 ..//nejsou-li fixni kc konec, aby se nepoznacil doklad, kde doslo k prideleni (kc lze zadat nulove) 
 ..//===============================================================================================
 ..i 'valfxkc q
 ..//prideleni hodnoty
 ..//pouze prvni ridic
 ..i ($g(arrmzdset("arr",0,4,"dta",2))=1)&(cntosc>1)&($g(arrdoc("osc",osc,"par",1))'=1) q
 ..f hrl=$g(arrdoc("dta",6)):1:$g(arrdoc("dta",7)) d
 ...s allocate=0 d
 ....//pridelit vzdy
 ....i $g(arrmzdset("arr",0,4,"dta",3))=0 s allocate=1 q
 ....//pridelit denne na osc a rz
 ....i $g(arrmzdset("arr",0,4,"dta",3))=1 d  q
 .....i '$d(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz)) s ^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz)=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 .....i $g(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ....//pridelit denne na osc
 ....i $g(arrmzdset("arr",0,4,"dta",3))=2 d  q
 .....i '$d(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 .....i $g(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ...i allocate s arrdoc("osc",osc,"dta",30)=$g(arrdoc("osc",osc,"dta",30))+valfxkc
 .// ========================================
 .// automaticky napocet poctu dnu s dokladem
 .// ========================================
 .i ($g(arrmzdset("arr",0,7,"dta",1))=1) d
 ..//vymazani hodnoty
 ..s arrdoc("osc",osc,"dta",34)=""
 ..//prideleni hodnoty
 ..//pouze prvni ridic
 ..i ($g(arrmzdset("arr",0,7,"dta",2))=1)&(cntosc>1)&($g(arrdoc("osc",osc,"par",1))'=1) q
 ..f hrl=$g(arrdoc("dta",6)):1:$g(arrdoc("dta",7)) d
 ...s allocate=0 d
 ....//pridelit denne na osc
 ....i '$d(^[nmsp]OBwatch(idfa,"DenDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"DenDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ....i $g(^[nmsp]OBwatch(idfa,"DenDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ...i allocate s arrdoc("osc",osc,"dta",34)=$g(arrdoc("osc",osc,"dta",34))+1
 .//vynulovani tarifu
 .s szbtar=0
 .//=================
 .//== casova mzda ==
 .//=================
 .i dmz=1 d
 ..//hodinovy tarif
 ..s szbtar=$g(arrmzdset("arr",2,1,1))
 ..i $g(arrmzdset("arr",2,1,1,"prv",idprv))'="" s szbtar=$g(arrmzdset("arr",2,1,1,"prv",idprv))
 ..//osobni tarify
 ..i $g(arrmzdset("arr",0,1)) d
 ...k arr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arr) s:$g(arr("dta",6)) szbtar=$g(arr("dta",6)) k arr
 ..//vykonovy tarif
 ..s szbvyk=$g(arrmzdset("arr",2,1,2))
 ..i $g(arrmzdset("arr",2,1,2,"prv",idprv))'="" s szbvyk=$g(arrmzdset("arr",2,1,2,"prv",idprv)) 
 ..//jizda - nejsou osobni tarify mzda=jizda*vykonovy tarif
 ..i '$g(arrmzdset("arr",0,1)) d
 ...s arrdoc("osc",osc,"dta",19)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",13)))*szbvyk*koefkracmzd),2)
 ..//jizda - v pripade osobnich tarifu mzda=jizda*osobni tarif
 ..i +$g(arrmzdset("arr",0,1)) d
 ...s arrdoc("osc",osc,"dta",19)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",13)))*szbtar*koefkracmzd),2)
 ..//cekani
 ..s szbcek=$$gszbhodcek(.arrmzdset,$g(arrdoc("osc",osc,"dta",12)),iszahr,szbtar,$g(arrdoc("dta",80)),idprv)
 ..s arrdoc("osc",osc,"dta",23)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",12)))*szbcek),2)
 ..//priplatek za kloubovy autobus a prives
 ..s szb=$g(arrmzdset("arr",2,1,12)) i $g(arrmzdset("arr",2,1,12,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,12,"prv",idprv))
 ..s arrdoc("osc",osc,"dta",22)=$g(arrdoc("osc",osc,"dta",22))+$$round^OBapiED(($g(arrdoc("osc",osc,"dta",18))*szb),2) //kloub.bus
 ..s szb=$g(arrmzdset("arr",2,1,13)) i $g(arrmzdset("arr",2,1,13,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,13,"prv",idprv))
 ..s arrdoc("osc",osc,"dta",22)=$g(arrdoc("osc",osc,"dta",22))+$$round^OBapiED(($g(arrdoc("osc",osc,"dta",17))*szb),2) //vlek
 ..//spolujizda
 ..s szbspj=$$gszbhodspj(.arrmzdset,szbtar,idprv)
 ..s arrdoc("osc",osc,"dta",28)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",27)))*szbspj),2)
 ..//kc za hodiny tarifem
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",5)))*szbtar),2)  //hodiny tarifem
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",6)))*szbtar),2)  //hodiny dodk
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",35)))*szbtar),2) //hodiny myti, cisteni
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",36)))*szbtar),2) //hodiny nakladu zavazadel
 ..//hodiny v noci
 ..i $g(arrmzdset("arr",2,0,2)) d
 ...i $g(arrmzdset("arr",2,0,3)) i $g(arrdoc("osc",osc,"dta",7))<$g(arrmzdset("arr",2,0,3)) q //hodiny v noci jsou mensi nez limit
 ...s szb=$g(arrmzdset("arr",2,1,14)) i $g(arrmzdset("arr",2,1,14,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,14,"prv",idprv))
 ...s arrdoc("osc",osc,"dta",25)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",7)))*szb),2)
 .//===================
 .//== vykonova mzda ==
 .//===================
 .i dmz=2 d
 ..//hodinovy tarif
 ..s szbtar=$g(arrmzdset("arr",2,2,1))
 ..//osobni tarify
 ..i $g(arrmzdset("arr",0,1)) d
 ...k arr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arr) s:$g(arr("dta",6)) szbtar=$g(arr("dta",6)) k arr
 ..//odvozeni sazeb za km
 ..s szbkmo=$$gszbvykkmo(.arrmzdset,allsjkm,idtypa,idprv)
 ..s szbkmn=$$gszbvykkmn(.arrmzdset,allsjkm,idtypa)
 ..s szbkmr=$$gszbvykkmr(.arrmzdset,allsjkm,idtypa)
 ..//jizda v sobotu a v nedeli - nasobeni sazeb koeficientem (dle nastaveni mezd)
 ..s szbkoef=$$gszbvykkoef(.arrmzdset,hrl,allsjkm)
 ..s szbkmo=szbkmo*szbkoef
 ..s szbkmn=szbkmn*szbkoef
 ..s szbkmr=szbkmr*szbkoef
 ..//pro km mensi nez limit - nasobit sazby koeficientem (dle nastaveni mezd)
 ..s szbkoef=$$gszbvykkoef1(.arrmzdset,$g(arrdoc("dta",10)),allsjkm)
 ..s szbkmo=szbkmo*szbkoef
 ..s szbkmn=szbkmn*szbkoef
 ..s szbkmr=szbkmr*szbkoef 
 ..// mzda za vykon
 ..// = neni pendl =
 ..i ('$g(arrdoc("osc",osc,"pnd",1))) d 
 ...// mzda za cele km 1 ridic a nebo kazdemu ridici cele km (nastaveni 2,2,29)
 ...i (cntosc=1)!((cntosc>1)&($g(arrmzdset("arr",2,2,29))=0)) d
 ....s arrdoc("osc",osc,"dta",20)=$$round^OBapiED(((szbkmo*$g(arrdoc("dta",16)))+(szbkmn*$g(arrdoc("dta",17)))+(szbkmr*$g(arrdoc("dta",18)))*koefkracmzd),2)
 ...// pro vice ridicu je mzda za km ridice (nastaveni 2,2,29)
 ...i ((cntosc>1)&($g(arrmzdset("arr",2,2,29))=1)) d
 ....s arrdoc("osc",osc,"dta",20)=$$round^OBapiED(((szbkmo*$g(arrdoc("osc",osc,"dta",14)))+(szbkmn*$g(arrdoc("osc",osc,"dta",15)))+(szbkmr*$g(arrdoc("osc",osc,"dta",16)))*koefkracmzd),2)
 ..// = je pendl =
 ..// mzda za jeho km
 ..i +$g(arrdoc("osc",osc,"pnd",1)) d
 ...s arrdoc("osc",osc,"dta",20)=$$round^OBapiED(((szbkmo*$g(arrdoc("osc",osc,"dta",14)))+(szbkmn*$g(arrdoc("osc",osc,"dta",15)))+(szbkmr*$g(arrdoc("osc",osc,"dta",16)))*koefkracmzd),2)
 ..// jizda vice ridicu - pripocitat ke mzde za vykon 0 nic / 1 celkova doba jizdy / pocet ridicu x zakladni tarif
 ..i $g(arrmzdset("arr",2,2,27))=1 i cntosc>1 d
 ...s arrdoc("osc",osc,"dta",20)=$g(arrdoc("osc",osc,"dta",20))+$$round^OBapiED(($$mc^OBapiED(($g(arrdoc("dta",12))/cntosc))*$g(arrmzdset("arr",2,2,1))),2)
 ..// ===================================================================
 ..// dorovnani mzdy
 ..s iszapcek=0
 ..i +$g(arrmzdset("arr",2,2,25)) d
 ...// kontrola na limit km
 ...i $g(arrmzdset("arr",2,2,26))'="" q:allsjkm>$g(arrmzdset("arr",2,2,26))
 ...//pole provozoven kde nepocitat
 ...k arridprv f cnt=1:1:$l($g(arrmzdset("arr",2,2,32)),";") d
 ....i $p($g(arrmzdset("arr",2,2,32)),";",cnt)="" q
 ....s arridprv($p($g(arrmzdset("arr",2,2,32)),";",cnt))=""
 ...//na provozovne nepocitat
 ...i $d(arridprv(idprv)) q
 ...// vypocet zakladniho tarifu pro porovnani dorovnani mzdy
 ...s mzdc=0
 ...i +$g(arrmzdset("arr",2,2,25))=1 d  //prepocitat jako doba jizdy x zakladni tarif
 ....s mzdc=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",13)))*szbtar*koefkracmzd),2)
 ...i +$g(arrmzdset("arr",2,2,25))=2 d  //prepocitat jako doba jizdy+cekani x zakladni tarif
 ....s mzdc=$$round^OBapiED((($$mc^OBapiED($g(arrdoc("osc",osc,"dta",13)))+$$mc^OBapiED($g(arrdoc("osc",osc,"dta",14))))*szbtar*koefkracmzd),2)
 ...i mzdc>$g(arrdoc("osc",osc,"dta",20)) d
 ....s arrdoc("osc",osc,"dta",20)=""
 ....s arrdoc("osc",osc,"dta",19)=mzdc
 ....i +$g(arrmzdset("arr",2,2,25))=2 s iszapcek=1 //cekani je zapoctene, nebude se pocitat
 ..//cekani
 ..s szbcek=$$gszbvykcek(.arrmzdset,$g(arrdoc("osc",osc,"dta",12)),iszahr,szbtar)
 ..s arrdoc("osc",osc,"dta",23)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",12)))*szbcek),2)
 ..//cekani je jiz zapocteno (dorovnani mzdy), vynuluje se
 ..i iszapcek s arrdoc("osc",osc,"dta",23)=0
 ..//priplatek za kloubovy autobus a prives
 ..s szb=$g(arrmzdset("arr",2,2,11)) i $g(arrmzdset("arr",2,2,11,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,11,"prv",idprv))
 ..s arrdoc("osc",osc,"dta",22)=$g(arrdoc("osc",osc,"dta",22))+$$round^OBapiED(($g(arrdoc("osc",osc,"dta",18))*szb),2) //kloub.bus
 ..s szb=$g(arrmzdset("arr",2,2,12)) i $g(arrmzdset("arr",2,2,12,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,12,"prv",idprv))
 ..s arrdoc("osc",osc,"dta",22)=$g(arrdoc("osc",osc,"dta",22))+$$round^OBapiED(($g(arrdoc("osc",osc,"dta",17))*szb),2) //vlek
 ..//spolujizda
 ..s arrdoc("osc",osc,"dta",28)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",27)))*$g(arrmzdset("arr",2,2,10))),2)
 ..//hodiny tarifem
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",5)))*szbtar),2)  //hodiny tarifem
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",6)))*szbtar),2)  //hodiny dodk
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",35)))*szbtar),2) //hodiny myti, cisteni
 ..s arrdoc("osc",osc,"dta",24)=$g(arrdoc("osc",osc,"dta",24))+$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",36)))*szbtar),2) //hodiny nakladu zavazadel
 ..//hodiny v noci
 ..i $g(arrmzdset("arr",2,0,2)) d
 ...i $g(arrmzdset("arr",2,0,3)) i $g(arrdoc("osc",osc,"dta",7))<$g(arrmzdset("arr",2,0,3)) q //hodiny v noci jsou mensi nez limit
 ...s szb=$g(arrmzdset("arr",2,2,13)) i $g(arrmzdset("arr",2,2,13,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,13,"prv",idprv))
 ...s arrdoc("osc",osc,"dta",25)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",7)))*szb),2)
 .//==============
 .//== mzda UH  ==
 .//==============
 .i dmz=3 d
 ..//sj v ramci turnusu - minutova sazba za vykon a cekani
 ..i ($g(arrdoc("dta",80))=1) d
 ...//vykon
 ...s mmval="" f cnt=5,6,13,35,36 s mmval=mmval+$g(arrdoc("osc",osc,"dta",cnt))
 ...s arrdoc("osc",osc,"dta",19)=($g(arrmzdset4("arr",2,1))*(mmval))
 ...//cekani
 ...s mmval="" f cnt=12 s mmval=mmval+arrdoc("osc",osc,"dta",cnt)
 ...s arrdoc("osc",osc,"dta",23)=($g(arrmzdset4("arr",2,1))*(mmval))
 ..//sj mimo turnus - vykon * sazba +cekani * sazba + ztizene obdobi 
 ..i ($g(arrdoc("dta",80))=2) d
 ...//vykon
 ...s mmval="" f cnt=5,6,13,35,36 s mmval=mmval+arrdoc("osc",osc,"dta",cnt)
 ...s arrdoc("osc",osc,"dta",19)=$$round^OBapiED(($$mc^OBapiED(mmval)*($g(arrmzdset4("arr",2,2)))),2)
 ...//cekani
 ...s mmval="" f cnt=12 s mmval=mmval+arrdoc("osc",osc,"dta",cnt)
 ...s arrdoc("osc",osc,"dta",23)=$$round^OBapiED(($$mc^OBapiED(mmval)*($g(arrmzdset4("arr",2,3)))),2)
 ..//hodiny v noci = stavajicim zpusobem
 ..i $g(arrmzdset("arr",2,0,2)) d
 ...i $g(arrmzdset("arr",2,0,3)) i $g(arrdoc("osc",osc,"dta",7))<$g(arrmzdset("arr",2,0,3)) q //hodiny v noci jsou mensi nez limit
 ...s arrdoc("osc",osc,"dta",25)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",7)))*$g(arrmzdset("arr",2,1,14))),2)
 .//=============
 .//hodiny celkem
 .///=============
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",13))	//hodiny jizdy
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",4))		//cekani do odp.doby
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",5))		//hodiny tarifem
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",6))		//hodiny dodk
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",33))	//hodiny neplacene
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",35))	//hodiny myti, cisteni
 .s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+$g(arrdoc("osc",osc,"dta",36))	//hodiny nalozeni zavazadel
 .//=================
 .//ztizene prostredi
 .//=================
 .i +$g(arrdoc("osc",osc,"par",3)) d
 ..s arrdoc("osc",osc,"dta",39)=$g(arrdoc("osc",osc,"dta",21))
 ..//casova mzda
 ..i dmz=1 d
 ...s arrdoc("osc",osc,"dta",40)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",39)))*($g(arrmzdset("arr",2,1,17)))),2)
 ..//vykonova mzda
 ..i dmz=2 d
 ...s arrdoc("osc",osc,"dta",40)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",39)))*($g(arrmzdset("arr",2,2,30)))),2)
 ..//uh
 ..i dmz=3 d
 ...//v ramci turnusu neni
 ...i ($g(arrdoc("dta",80))=1) s arrdoc("osc",osc,"dta",39)="" s arrdoc("osc",osc,"dta",40)=""
 ...//mimo turnus je
 ...i ($g(arrdoc("dta",80))=2) s arrdoc("osc",osc,"dta",40)=$$round^OBapiED(($$mc^OBapiED($g(arrdoc("osc",osc,"dta",39)))*($g(arrmzdset4("arr",2,4)))),2)
 .// ======================================================================================================================
 .// vymazani mzdy za vykon pocitat mzdu = "B" (transcentrum) ,pozor, jeste v (ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl
 .// ======================================================================================================================
 .//ridici se nepocita mzda za vykon - vymazani casove a vykonove mzdy 
 .i $g(arrdoc("osc",osc,"dta",2))="B" f cnt=19,20 s arrdoc("osc",osc,"dta",cnt)=""
 .//mzda za hodiny (jizda + tarifem)
 .s arrdoc("osc",osc,"dta",29)=$g(arrdoc("osc",osc,"dta",19))+$g(arrdoc("osc",osc,"dta",24))
 .//bezpecnostni prestavky (zadavaji se a jsou zadane)
 .i $g(arrmzdset("arr",2,0,7)) i $g(arrdoc("dta",51)) d 
 ..//nedelit/delit poctem ridicu 
 ..s minbposc=$g(arrdoc("dta",51)) i arrmzdset("arr",2,0,7,"arr",1,"dta",1)=1 s minbposc=$$round^OBapiED(minbposc/cntosc,0)
 ..//zapis do vety ridice
 ..s arrdoc("osc",osc,"dta",32)=minbposc
 ..//nezapocitat/zapocitat do odpracovane doby
 ..i +$g(arrmzdset("arr",2,0,7,"arr",1,"dta",2)) d
 ...s arrdoc("osc",osc,"dta",21)=$g(arrdoc("osc",osc,"dta",21))+minbposc
 ..//neplatit/platit tarifem
 ..i +$g(arrmzdset("arr",2,0,7,"arr",1,"dta",3)) d 
 ...s mzdbp=$$round^OBapiED(($$mc^OBapiED(minbposc)*szbtar),2)
 ...//uh
 ...i dmz=3 d
 ....//v ramci turnusu
 ....i ($g(arrdoc("dta",80))=1) s mzdbp=$$round^OBapiED(minbposc*$g(arrmzdset4("arr",2,1)),2)
 ....//mimo turnus
 ....i ($g(arrdoc("dta",80))=2) s mzdbp=$$round^OBapiED(($$mc^OBapiED(minbposc)*$g(arrmzdset4("arr",2,2))),2)
 ...//napocteni do mzdy
 ...d
 ....// napoctu to do mzdy - casova
 ....i (dmz=1)&(+$g(arrdoc("osc",osc,"dta",19))) s arrdoc("osc",osc,"dta",19)=+$g(arrdoc("osc",osc,"dta",19))+mzdbp q
 ....// napoctu to do mzdy - vykonova
 ....i (dmz=2)&(+$g(arrdoc("osc",osc,"dta",20))) s arrdoc("osc",osc,"dta",20)=+$g(arrdoc("osc",osc,"dta",20))+mzdbp q
 ....// napoctu to do mzdy - casova UH
 ....i (dmz=3)&(+$g(arrdoc("osc",osc,"dta",19))) s arrdoc("osc",osc,"dta",19)=+$g(arrdoc("osc",osc,"dta",19))+mzdbp q
 ....// pokud se to nenacetlo, zjistim, kde co ma a tam to napoctu
 ....i +$g(arrdoc("osc",osc,"dta",19)) s arrdoc("osc",osc,"dta",19)=$g(arrdoc("osc",osc,"dta",19))+mzdbp q
 ....s arrdoc("osc",osc,"dta",20)=$g(arrdoc("osc",osc,"dta",20))+mzdbp
 .// ======================================================================================
 .// vymazani udaju pro ridice, pozor, jeste v (ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl
 .// ======================================================================================
 .//ridici se nepocita mzda - vymazani mzdovych udaju, ne hodinovych
 .i $g(arrdoc("osc",osc,"dta",2))="N" f cnt=19,20,22:1:26,28,29,30,31,40 s arrdoc("osc",osc,"dta",cnt)=""
 .//fiktivni ridic - vymazani vsech udaju
 .i $g(arrdoc("osc",osc,"dta",2))="F" f cnt=3:1:40 s arrdoc("osc",osc,"dta",cnt)=""
 q 0
gszbhodcek(arrmzdset,mmcek,iszahr,tar,typdoc,idprv)
 //sazba za cekani
 n (arrmzdset,mmcek,iszahr,tar,typdoc,idprv)
 s szb=0
 //za cekani, tarifem
 i $g(arrmzdset("arr",2,1,3))=1 d
 .//vypocet sazby
 .s szb=$g(arrmzdset("arr",2,1,4)) i $g(arrmzdset("arr",2,1,4,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,4,"prv",idprv))			//vnitro do limitu
 .i iszahr s szb=$g(arrmzdset("arr",2,1,5))	i $g(arrmzdset("arr",2,1,5,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,5,"prv",idprv))	//zahranici do limitu
 .//sazba po limitu cekani (min)
 .i ($g(arrmzdset("arr",2,1,7)))&(mmcek>$g(arrmzdset("arr",2,1,7))) d
 ..s szb=$g(arrmzdset("arr",2,1,8)) i $g(arrmzdset("arr",2,1,8,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,8,"prv",idprv))			//vnitro po limitu
 ..i iszahr s szb=$g(arrmzdset("arr",2,1,9)) i $g(arrmzdset("arr",2,1,9,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,9,"prv",idprv))	//zahranici po limitu
 //za cekani, sazba je % z tarifu
 i $g(arrmzdset("arr",2,1,3))=2 d
 .//vypocet sazby do limitu
 .s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,6))/100),2)
 .i $g(arrmzdset("arr",2,1,6,"prv",idprv))'="" s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,6,"prv",idprv))/100),2) 
 .//vypocet sazby po limitu
 .i ($g(arrmzdset("arr",2,1,7)))&(mmcek>$g(arrmzdset("arr",2,1,7))) d
 ..s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,10))/100),2)
 ..i $g(arrmzdset("arr",2,1,10,"prv",idprv))'="" s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,10,"prv",idprv))/100),2) 
 //je sazba pro cekani ve vlozenem vykonu a vlozeny vykon  
 i ($g(arrmzdset("arr",2,1,18))'="")&($g(typdoc)=1) s szb=$g(arrmzdset("arr",2,1,18))
 i ($g(arrmzdset("arr",2,1,18,"prv",idprv))'="")&($g(typdoc)=1) s szb=$g(arrmzdset("arr",2,1,18,"prv",idprv))
 q szb
gszbhodspj(arrmzdset,tar,idprv)
 //sazba za spolujizdu
 n (arrmzdset,tar,idprv)
 s szb=0
 //za spolujizdu, sazbou
 i $g(arrmzdset("arr",2,1,15))=1 {
	 s szb=$g(arrmzdset("arr",2,1,11))
	 i $g(arrmzdset("arr",2,1,11,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,1,11,"prv",idprv))
 }
 //za spolujizdu, sazba je % z tarifu
 i $g(arrmzdset("arr",2,1,15))=2 {
	 s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,16))/100),2)
	 i $g(arrmzdset("arr",2,1,16,"prv",idprv))'="" s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,1,16,"prv",idprv))/100),2) 
 }
 q szb
gszbvykcek(arrmzdset,mmcek,iszahr,tar)
 //sazba za cekani
 //kontrola ... ok
 n (arrmzdset,mmcek,iszahr,tar)
 s szb=0
 // procento z tarifu
 i $g(arrmzdset("arr",2,2,2))=1 d
 .//vypocet sazby
 .s szb=$g(arrmzdset("arr",2,2,3)) 					//vnitro do limitu
 .i iszahr s szb=$g(arrmzdset("arr",2,2,4)) 		//zahranici do limitu
 .//sazba po limitu cekani (min)
 .i ($g(arrmzdset("arr",2,2,6)))&(mmcek>$g(arrmzdset("arr",2,2,6))) d
 ..s szb=$g(arrmzdset("arr",2,2,7)) 				//vnitro do limitu
 ..i iszahr s szb=$g(arrmzdset("arr",2,2,8)) 		//vnitro do limitu
 //za cekani, sazba je % z tarifu
 i $g(arrmzdset("arr",2,2,2))=2 d
 .//vypocet sazby do limitu
 .s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,2,5))/100),2)
 .//vypocet sazby po limitu
 .i ($g(arrmzdset("arr",2,2,6)))&(mmcek>$g(arrmzdset("arr",2,2,6))) d
 ..s szb=$$round^OBapiED(tar*($g(arrmzdset("arr",2,2,9))/100),2)  
 q szb
gszbvykkmo(arrmzdset,allsjkm,idtypa,idprv)
 //kontrola ... ok
 //sazba pro km obsazene
 n (arrmzdset,allsjkm,idtypa,idprv)
 //zakladni sazba
 s szb=$g(arrmzdset("arr",2,2,14))
 //zakladni sazba podle provozovny
 i $g(arrmzdset("arr",2,2,14,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,14,"prv",idprv))
 //sazba podle typu auta
 i idtypa'="" d
 .i $g(arrmzdset("arr",2,2,14,"tpa",idtypa))'="" s szb=$g(arrmzdset("arr",2,2,14,"tpa",idtypa))
 //sazba do limitu km
 i (allsjkm<$g(arrmzdset("arr",2,2,17))) d
 .i $g(arrmzdset("arr",2,2,18))'="" s szb=$g(arrmzdset("arr",2,2,18))
 .i $g(arrmzdset("arr",2,2,18,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,18,"prv",idprv))
 //sazba po limitu km
 i (allsjkm>$g(arrmzdset("arr",2,2,21))) d
 .i $g(arrmzdset("arr",2,2,22))'="" s szb=$g(arrmzdset("arr",2,2,22))
 .i $g(arrmzdset("arr",2,2,22,"prv",idprv))'="" s szb=$g(arrmzdset("arr",2,2,22,"prv",idprv))
 q szb
gszbvykkmn(arrmzdset,allsjkm,idtypa)
 //sazba pro km neobsazene
 //kontrola ... ok
 n (arrmzdset,allsjkm,idtypa)
 //zakladni sazba
 s szb=$g(arrmzdset("arr",2,2,15))
 //sazba podle typu auta
 i idtypa'="" d
 .i $g(arrmzdset("arr",2,2,15,"tpa",idtypa))'="" s szb=$g(arrmzdset("arr",2,2,15,"tpa",idtypa))
 //sazba do limitu km
 i (allsjkm<$g(arrmzdset("arr",2,2,17))) d
 .i $g(arrmzdset("arr",2,2,19))'="" s szb=$g(arrmzdset("arr",2,2,19))
 //sazba po limitu km
 i (allsjkm>$g(arrmzdset("arr",2,2,21))) d
 .i $g(arrmzdset("arr",2,2,23))'="" s szb=$g(arrmzdset("arr",2,2,23))
 q szb
gszbvykkmr(arrmzdset,allsjkm,idtypa)
 //kontrola ... ok
 n (arrmzdset,allsjkm,idtypa)
 //sazba pro km rezijni
 //zakladni sazba
 s szb=$g(arrmzdset("arr",2,2,16))
 //sazba podle typu auta
 i idtypa'="" d
 .i $g(arrmzdset("arr",2,2,16,"tpa",idtypa))'="" s szb=$g(arrmzdset("arr",2,2,16,"tpa",idtypa))
 //sazba do limitu km
 i (allsjkm<$g(arrmzdset("arr",2,2,17))) d
 .i $g(arrmzdset("arr",2,2,20))'="" s szb=$g(arrmzdset("arr",2,2,20))
 //sazba po limitu km
 i (allsjkm>$g(arrmzdset("arr",2,2,21))) d
 .i $g(arrmzdset("arr",2,2,24))'="" s szb=$g(arrmzdset("arr",2,2,24))
 q szb
 //
gszbvykkoef(arrmzdset,hrl,allsjkm)
 //kontrola ... ok
 n (arrmzdset,hrl,allsjkm)
 //koeficient pro nasobeni sazeb za km  
 s szbkoef=1
 //nasobeni tarifu v pripade jizdy v sobotu a v nedeli
 i $g(arrmzdset("arr",2,2,28)) d
 .i ($$ntd^OBapiED(hrl)="So")!($$ntd^OBapiED(hrl)="Ne") d
 ..//kontrola na limit km
 ..i $g(arrmzdset("arr",2,2,28,"arr",1,"dta",2))'="" q:(allsjkm'<($g(arrmzdset("arr",2,2,28,"arr",1,"dta",2))))
 ..s szbkoef=$g(arrmzdset("arr",2,2,28,"arr",1,"dta",1))
 q szbkoef
gszbvykkoef1(arrmzdset,iddza,allsjkm)
 //kontrola ... ok
 n (arrmzdset,iddza,allsjkm)
 //koeficient pro nasobeni sazeb za km  
 s szbkoef=1
 //nasobeni tarifu v pripade jizdy v sobotu a v nedeli
 i $g(arrmzdset("arr",2,2,31)) d
 .//pro urcite druhy zajezdu ne !
 .i $g(iddza)'="" q:$d(arrmzdset("arr",2,2,31,"arr",1,"arr",1,iddza))
 .//kontrola na limit km
 .i $g(arrmzdset("arr",2,2,31,"arr",1,"dta",2))'="" q:(allsjkm'<($g(arrmzdset("arr",2,2,31,"arr",1,"dta",2))))
 .s szbkoef=$g(arrmzdset("arr",2,2,31,"arr",1,"dta",1))
 q szbkoef
mkKmOscSj(idfa,nmsp,iskloub,out,arrdoc)
 //kontrola ... ok
 n (idfa,nmsp,iskloub,out,arrdoc) s $zt="err" k out s err=""
 // vypocet km pro ridice
 // arr=pole s daty SJ
 // out=kmObsazene~kmNeobsazene~kmRezijni~kmPrives~kmKloubak			... km celkem
 // out(osc)=kmObsazene~kmNeobsazene~kmRezijni~kmPrives~kmKloubak		... km pro ridice
 // nactu udaje o rz
 s $p(out,"~",1)=$g(arrdoc("dta",16))
 s $p(out,"~",2)=$g(arrdoc("dta",17))
 s $p(out,"~",3)=$g(arrdoc("dta",18))
 s $p(out,"~",4)=$g(arrdoc("dta",19))
 s $p(out,"~",5)=0 i iskloub s $p(out,"~",5)=($g(arrdoc("dta",16))+$g(arrdoc("dta",17))+$g(arrdoc("dta",18)))
 s memkm=out
 // projedu ridice a vypocitam jim prislusne km
 k cntos s cntos=0
 s osc="" f  s osc=$o(arrdoc("osc",osc)) q:osc=""  d
 .//fiktivni ne
 .i $g(arrdoc("osc",osc,"dta",2))="F" q
 .//je-li pendl, km dle pendlu
 .i +$g(arrdoc("osc",osc,"pnd",1)) d  q
 ..s $p(out(osc),"~",1)=$g(arrdoc("osc",osc,"pnd",4))
 ..s $p(out(osc),"~",2)=$g(arrdoc("osc",osc,"pnd",5))
 ..s $p(out(osc),"~",3)=$g(arrdoc("osc",osc,"pnd",6))
 ..s $p(out(osc),"~",4)=$g(arrdoc("osc",osc,"pnd",7))
 ..s $p(out(osc),"~",5)=0 i iskloub s $p(out(osc),"~",5)=($g(arrdoc("osc",osc,"pnd",4))+$g(arrdoc("osc",osc,"pnd",5))+$g(arrdoc("osc",osc,"pnd",6)))
 ..// odectu km z celkovych
 ..f cnt=1:1:5 s $p(memkm,"~",cnt)=$p(memkm,"~",cnt)-$p($g(out(osc)),"~",cnt)
 .//neni pendl, pocet ridicu
 .s cntos=cntos+1 s cntos(osc)=""
 // jsou-li ridici bez pendlu, pak km pomerem
 i cntos d
 .s osc="" f  s osc=$o(arrdoc("osc",osc)) q:osc=""  d
 ..//fiktivni ne
 ..i $g(arrdoc("osc",osc,"dta",2))="F" q
 ..//pendl ne
 ..i +$g(arrdoc("osc",osc,"pnd",1)) q
 ..// km pomerem
 ..f cnt=1:1:5  s $p(out(osc),"~",cnt)=$$round^OBapiED(($p($g(memkm),"~",cnt)/cntos),2)
 // jsou-li ridici bez pendlu, pak korekce na ceklove km
 i cntos d
 .//napocet km od vsech ridicu
 .s memkm=""
 .s osc="" f  s osc=$o(out(osc)) q:osc=""  d
 ..f cnt=1:1:5 s $p(memkm,"~",cnt)=$p(memkm,"~",cnt)+$p($g(out(osc)),"~",cnt)
 .//korekce pro prvniho ridice bez pendlu
 .s osc=$o(cntos("")) i osc="" q
 .f cnt=1:1:5 s $p(out(osc),"~",cnt)=$p(out(osc),"~",cnt)+(($p(out,"~",cnt)-$p(memkm,"~",cnt)))
 q 0
mkFakDtaSj(idfa,nmsp,zp,arrdoc,in,out)
 //fakturacni vypocet
 n (idfa,nmsp,zp,arrdoc,in,out) s $zt="err" k out s err=""
 //vymazani fakturacni vety a fakturacnich polozek
 k arrdoc("fak","dta") k arrdoc("fak","itm")
 //vnitrostatni doprava
 s arrdoc("dta",48)=0
 //nactu ciselnik druhu zajezdu a nastaveni statu do fakturacni vety
 s iddsb=""
 k arr s err=$$gCis^OBapiED(idfa,nmsp,1,"",.arr) zt:+err "merr"
 i $g(arrdoc("dta",10))'="" d
 .s arrdoc("fak","dta",2)=$p($g(arr("arr",$g(arrdoc("dta",10)))),"~",4)
 .s arrdoc("fak","dta",3)=$p($g(arr("arr",$g(arrdoc("dta",10)))),"~",5)
 .s iddsb=$p($g(arr("arr",$g(arrdoc("dta",10)))),"~",8)
 .//zahranicni doprava
 .i ($p($g(arr("arr",$g(arrdoc("dta",10)))),"~",4)'="")&($p($g(arr("arr",$g(arrdoc("dta",10)))),"~",4)'["CZ") s arrdoc("dta",48)=1
 k arr
 //nastaveni
 // - jak zaokrouhlit cekani
 // - konverze strediska
 // - zpusob vypoctu zahr DPH v pripade, ze je DPH soucasti ceny
 s fcek15=0 s cnvfns=0 s zvzdph=0
 k arr s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err=""
 s:+$g(arr("arr",3,1)) fcek15=14
 s cnvfns=+$g(arr("arr",6,21))
 s zvzdph=+$g(arr("arr",3,10))
 k arr
 //vypocet fakturacnich udaju
 s zf=$g(arrdoc("dta",24))					  //zpusob fakturace
 s slvprc=$g(arrdoc("dta",37))				  //sleva %
 s dan=$g(arrdoc("dta",38))					  //dan %
 //nastaveni sazeb
 s arrsa(1)=$p($g(arrdoc("dta",63)),"/",1)    // km
 s arrsa(1.1)=$p($g(arrdoc("dta",63)),"/",2)  // km neobsazeny
 s arrsa(2)=$g(arrdoc("dta",64))              // 15 minut cekani
 s arrsa(3)=$g(arrdoc("dta",65))              // 15 minut jizdy
 s arrsa(4)=$g(arrdoc("dta",66))              // hod/km vleku
 s arrsa(6)=$g(arrdoc("dta",81))			  // cyklus
 //kontrola, zda je ve specialnim systemu fakturace, zmena zpusobu fakturace a zpusobu zaokrouhleni cekani
 i $$isspecfak() d
 .//nastaveni zaokrouhleni casu
 .//dodelat !!!
 .s fcek15=fcek15
 .//nastaveni jak fakturovat
 .//dodelat !!!
 .i $$isspeczf() d 
 ..//za vykon dle km
 ..s kc1=0
 ..s km=+$g(arrdoc("dta",60)) s kc1=kc1+(km*arrsa(1))				//km obsazene
 ..s km=+$g(arrdoc("dta",61)) s kc1=kc1+(km*arrsa(1.1))				//km neobsazene
 ..s km=+$g(arrdoc("dta",69)) s kc1=kc1+(km*arrsa(4))				//km prives
 ..s mm=($g(arrdoc("dta",71))+fcek15)\15 s kc1=kc1+(mm*arrsa(2)) 	//ce (bp nenacitam, je jiz napocteno v cekani)
 ..//za vykon dle casu
 ..s kc2=0
 ..s mm=$g(arrdoc("dta",70))+$g(arrdoc("dta",71))+fcek15\15 							//ji+ce (bp nenacitam, je jiz napocteno v cekani)
 ..s kc2=kc2+(mm*arrsa(3))
 ..s zf=1 i kc2>kc1 s zf=2
 //=======================================================================================================
 //==========================
 // fakturace za vykon dle km
 //==========================
 i zf=1 d
 .// km obsazene
 .s km=+$g(arrdoc("dta",60))
 .i km d
 ..s arrdoc("fak","itm",10,"dta",1)=(km*arrsa(1))
 ..s arrdoc("fak","itm",10,"dta",2)=arrsa(1)
 ..s arrdoc("fak","itm",10,"dta",3)=km
 .// km neobsazene
 .s km=+$g(arrdoc("dta",61))
 .i km d 
 ..s arrdoc("fak","itm",11,"dta",1)=(km*arrsa(1.1))
 ..s arrdoc("fak","itm",11,"dta",2)=arrsa(1.1)
 ..s arrdoc("fak","itm",11,"dta",3)=km
 .// km privesu
 .s km=+$g(arrdoc("dta",69))
 .i km d
 ..s arrdoc("fak","itm",20,"dta",1)=(km*arrsa(4))
 ..s arrdoc("fak","itm",20,"dta",2)=arrsa(4)
 ..s arrdoc("fak","itm",20,"dta",3)=km
 .// cekani (bp nenacitam, je jiz napocteno v cekani)
 .s mm=($g(arrdoc("dta",71))+fcek15)\15
 .i mm d 
 ..s arrdoc("fak","itm",30,"dta",1)=(mm*arrsa(2))
 ..s arrdoc("fak","itm",30,"dta",2)=arrsa(2)
 ..s arrdoc("fak","itm",30,"dta",3)=mm
 .// cykly
 .s pcy=+$g(arrdoc("dta",82))
 .i pcy d
 ..s arrdoc("fak","itm",60,"dta",1)=(pcy*arrsa(6))
 ..s arrdoc("fak","itm",60,"dta",2)=arrsa(6)
 ..s arrdoc("fak","itm",60,"dta",3)=pcy
 //===========================
 //fakturace za vykon dle casu
 //===========================
 i zf=2 d
 .//ji+ce (bp nenacitam, je jiz napocteno v cekani)
 .s mm=($g(arrdoc("dta",70))+$g(arrdoc("dta",71))+fcek15)\15 
 .i mm d
 ..s arrdoc("fak","itm",40,"dta",1)=(mm*arrsa(3))
 ..s arrdoc("fak","itm",40,"dta",2)=arrsa(3)
 ..s arrdoc("fak","itm",40,"dta",3)=mm
 .// cykly
 .s pcy=+$g(arrdoc("dta",82))
 .i pcy d
 ..s arr("fak","itm",60,"dta",1)=(pcy*arrsa(6))
 ..s arr("fak","itm",60,"dta",2)=arrsa(6)
 ..s arr("fak","itm",60,"dta",3)=pcy
 //=======================
 //fakturace smluvni cenou
 //=======================
 i zf=3 d
 .// smluvni cena s dani
 .i +$g(arrdoc("dta",35)) d
 ..s arrdoc("fak","itm",50,"dta",1)=($g(arrdoc("dta",35))-$$gDanVal^OBapiED($g(arrdoc("dta",35)),dan))
 ..s arrdoc("fak","itm",50,"dta",2)=""
 ..s arrdoc("fak","itm",50,"dta",3)=""
 .// smluvni cena bez dane
 .i +$g(arrdoc("dta",62)) d
 ..s arrdoc("fak","itm",50,"dta",1)=$g(arrdoc("dta",62))
 ..s arrdoc("fak","itm",50,"dta",2)=""
 ..s arrdoc("fak","itm",50,"dta",3)=""
 //=============
 //vypocet slevy
 //=============
 s slvval="" i ((zf=1)!(zf=2))&(slvprc) d
 .//celkova cena za dopravu
 .s val=""  s id="" f  s id=$o(arrdoc("fak","itm",id)) q:(id="")  s val=val+$g(arrdoc("fak","itm",id,"dta",1))
 .s c=.05,fl=0 s:val<0 c=-.05,fl=1,val=-val
 .s val=val+c\.1/10 s:fl val=-val
 .s slvval=slvprc/100*val,c=.5 s:slvval<0 c=-.5 s slvval=slvval+c\1
 //doplneni fakturacni vety
 s arrdoc("fak","dta",1)=-slvval	//sleva|prirazka v Kc sleva je minus, prirazka plus
 s ns=$g(arrdoc("dta",43)) s prs=$g(arrdoc("arr",1,"dta",4)) s:cnvfns ns=$$gPodilNS^OBapiED(idfa,nmsp,ns,prs,.out)
 s arrdoc("fak","dta",4)=ns			//ns pro fakturaci (bud ns auta a nebo transformovane dle prs)
 //========================
 //vypocet zahranicniho dph
 //========================
 // ==============
 // zahranicni DPH
 // ==============
 // out("arr",5,"dta",1)=vychozi misto popis
 // out("arr",5,"dta",2)=vychozi misto stat (idstat)
 // out("arr",5,"dta",3)=koncove misto popis
 // out("arr",5,"dta",4)=koncove misto stat (idstat)
 // out("arr",5,"dta",5)=celkovy pocet km (vypocet)
 // out("arr",5,"dta",6)=celkova cena za prepravu osob (netto cena celkem) (vypocet)
 // out("arr",5,"dta",7)=kurzEUR pro vypocet dph EUR
 // out("arr",5,"arr",1,idstat,"dta",1)=km statem
 // out("arr",5,"arr",1,idstat,"dta",2)=danova povinost 0 vlastni / 1 zakaznik / 2 odvedeme za zakaznika 
 // out("arr",5,"arr",1,idstat,"dta",3)=fakturovat 0 ne / 1 ano 
 // out("arr",5,"arr",1,idstat,"dta",4)=sazba DPH (výše %) (vypocet, prepis z ciselniku)
 // out("arr",5,"arr",1,idstat,"dta",5)=limit km pro výpočet (vypocet, prepis z ciselniku)
 // out("arr",5,"arr",1,idstat,"dta",6)=cena za prepravu osob v prislusnem state (vypocet)
 // out("arr",5,"arr",1,idstat,"dta",7)=dph (vypocet)
 // out("arr",5,"arr",1,idstat,"dta",8)=dph EUR (vypocet)
 // out("arr",5,"arr",1,idstat,"dta",9)=prujezd zemi (0 tranzit / 1 tam a zpet, limit km pro vypocet x 2)
 // ===============================
 // zpusob vypoctu zahranicniho DPH
 // ===============================
 // zvzdph=0/1
 // zvzdph=0 :
 //  cenastat=celkovacena*(kmstat/celkovekm)
 //  dph nezapoctene v cene=cenastat*(dansazba/100)
 //  dph zapoctene v cene=cenastat*$j(dansazba/(100+dansazba),0,4)
 // zvzdph=1 :
 //  cenakm=cenacelkem/(km1*sazba+km2*sazba2+...+kmN*sazbaN), kde sazba=(1+(dansazba/100)), km se nasobi sazbou v pripade, ze je dph zapoctene v cene 
 //  cenastat=cenakm*kmstat
 //  dphstat=cenakm*kmstat*sazbastat kde sazbastat=dansazba/100
 // ========================================================
 // datumova promenna pro zmeny
 s hrlch131001=1 i $g(arrdoc("dta",6)) i $g(arrdoc("dta",6))<$$dn^OBapiED("1.10.2013") s hrlch131001=0  //sj po 01.10.2013, zmena v zahranicnim DPH
 // vymazani udaju
 s idstat="" f  s idstat=$o(arrdoc("arr",5,"arr",1,idstat)) q:idstat=""  d
 .i '$g(arrdoc("arr",5,"arr",1,idstat,"dta",1)) k arrdoc("arr",5,"arr",1,idstat) q
 .f cnt=4:1:8 k arrdoc("arr",5,"arr",1,idstat,"dta",cnt)
 // vymazani poplatku se zahranicnim DPH
 k arrdoc("fak","arr",1,1300)
 // kontrola na dph z DZA (musi byt nulove, zahranicni zajezd)
 // vypocet dph pokud se fakturuje
 i zf'=4 d
 .i $o(arrdoc("arr",5,"arr",1,""))'="" d
 ..//ciselnik s dph pro jednotlive staty
 ..k arrcis12 s err=$$gCis^OBapiED(idfa,nmsp,12,"",.arrcis12) zt:+err "merr"
 ..// stanoveni kurzu EUR z pokladny
 ..s kurzEUR=""
 ..k arro s err=##class(ALVA.POKLADNA.MLAPI).ExchangeRateRead(idfa,nmsp,$g(arrdoc("dta",6)),"EUR",1,.arro)
 ..i 'err i $g(arro("Mena","EUR","Mnoz")) s kurzEUR=($g(arro("Mena","EUR","Kurz"))/$g(arro("Mena","EUR","Mnoz")))
 ..s arrdoc("arr",5,"dta",7)=kurzEUR
 ..// km pro vypocet zhr.DPH = obsazene+neobsazene+rezijni
 ..s kmc=0
 ..//(pokud jsou km fakturacni, dam jim prednost)
 ..//s kmc=kmc+$g(arrdoc("dta",60)) s:'$g(arrdoc("dta",60)) kmc=kmc+$g(arrdoc("dta",16)) //km obsazene
 ..//s kmc=kmc+$g(arrdoc("dta",61)) s:'$g(arrdoc("dta",61)) kmc=kmc+$g(arrdoc("dta",17)) //km neobsazene
 ..s kmc=kmc+$g(arrdoc("dta",16)) //km obsazene
 ..s kmc=kmc+$g(arrdoc("dta",17)) //km neobsazene
 ..s kmc=kmc+$g(arrdoc("dta",18)) //rezijni
 ..s arrdoc("arr",5,"dta",5)=kmc
 ..// trzba pro vypocet zhr.DPH
 ..s trz=0
 ..s idpol="" f  s idpol=$o(arrdoc("fak","itm",idpol)) q:idpol=""  d
 ...s trz=trz+$g(arrdoc("fak","itm",idpol,"dta",1))
 ..// + poplatky ktere souvisi s dopravou
 ..k arrcis11 s err=$$gCis^OBapiED(idfa,nmsp,11,"",.arrcis11) zt:+err "merr"
 ..s idppl="" f  s idppl=$o(arrdoc("fak","arr",1,idppl)) q:idppl=""  d
 ...s iddsb="" f  s iddsb=$o(arrdoc("fak","arr",1,idppl,iddsb)) q:iddsb=""  d
 ....// nezapocitavam myto CZ a SK 29.2.2012 LT, neni to poplatek pro vypocet zahr.DPH
 ....// od 01.10.2013 myto CZ a SK do zakladu zapocitavam
 ....// (dotaz PL do Chemnitzu - zapocitavaji se vsechny poplatky, ktere jsou soucasti dopravy) 
 ....// myto CZ, do zakladu nenapocitavam (stav do 1.10.2013)
 ....i 'hrlch131001 i idppl=1600 d  q
 .....// poplatek se nefakturuje (je soucasti ceny), odectu ho z trzby
 .....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ....// myto SK, do zakladu nenapocitavam (do 1.10.2013)
 ....i 'hrlch131001 i idppl=2000 d  q
 .....// poplatek se nefakturuje (je soucasti ceny), odectu ho z trzby
 .....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ....// poplatek nesouvisi s dopravou
 ....i '$p($g(arrcis11("arr",idppl)),"~",4) d  q
 .....// poplatek se nefakturuje se (je soucasti ceny), odectu ho z trzby
 .....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",6)) s trz=trz-$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ....// poplatek souvisi s dopravou
 ....i +$p($g(arrcis11("arr",idppl)),"~",4) d  q
 .....// poplatek se nefakturuje (je soucasti ceny), nenacitat, ! ma-li rozpis podle statu, odectu ho !
 .....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",6)) d  q
 ......// poplatek ma rozpis podle statu, odectu ho, nactu cast pri vypoctu zahr.dph
 ......i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",7)) s trz=trz-$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 .....// poplatek ma rozpis podle statu, nenacitat, nactu cast pri vypoctu zahr.dph
 .....i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",7)) q
 .....s trz=trz+$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ..//sleva
 ..s trz=trz+$g(arrdoc("fak","dta",1))
 ..s arrdoc("arr",5,"dta",6)=trz
 ..//================================================
 ..//aktualizace vyse DPH a limitu km pro vypocet dph
 ..//================================================
 ..s idstat="" f  s idstat=$o(arrdoc("arr",5,"arr",1,idstat)) q:idstat=""  d
 ...//danova sazba
 ...s arrdoc("arr",5,"arr",1,idstat,"dta",4)=+$p($g(arrcis12("arr",idstat)),"~",3)
 ...//limit km
 ...s arrdoc("arr",5,"arr",1,idstat,"dta",5)=+$p($g(arrcis12("arr",idstat)),"~",4)
 ...//je-li jizda tam a zpet, zvysuje se limit x 2
 ...i $g(arrdoc("arr",5,"arr",1,idstat,"dta",9))=1 s arrdoc("arr",5,"arr",1,idstat,"dta",5)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",5))*2
 ..//=========================================================
 ..//vypocet ceny za km pro druhy typ vypoctu zahranicniho dph
 ..//=========================================================
 ..s rzdkm=0 s cenakm=0 s smkoefstatdph=0
 ..s idstat="" f  s idstat=$o(arrdoc("arr",5,"arr",1,idstat)) q:idstat=""  d
 ...//koeficient dph pro stat = km
 ...s koefstatdph=$g(arrdoc("arr",5,"arr",1,idstat,"dta",1))
 ...//koeficient dph pro stat v pripade dph zahrnuteho v cene a vlastni dan povinnosti = kmstat*(1+dphstat/100)
 ...i ('$g(arrdoc("arr",5,"arr",1,idstat,"dta",3)))&($g(arrdoc("arr",5,"arr",1,idstat,"dta",2))'=1) d
 ....s koefstatdph=$g(arrdoc("arr",5,"arr",1,idstat,"dta",1))*(1+($g(arrdoc("arr",5,"arr",1,idstat,"dta",4))/100))
 ...//km<limit km ... koeficient =kmstat
 ...i $g(arrdoc("arr",5,"arr",1,idstat,"dta",5)) i $g(arrdoc("arr",5,"arr",1,idstat,"dta",1))'>$g(arrdoc("arr",5,"arr",1,idstat,"dta",5)) d
 ....s koefstatdph=$g(arrdoc("arr",5,"arr",1,idstat,"dta",1))
 ...s smkoefstatdph=smkoefstatdph+koefstatdph
 ...//suma zadanych km
 ...s rzdkm=rzdkm+$g(arrdoc("arr",5,"arr",1,idstat,"dta",1))
 ..//rozdil km ... bez sazby koeficient =kmstat
 ..s rzdkm=(kmc-rzdkm)
 ..s smkoefstatdph=smkoefstatdph+rzdkm
 ..s cenakm=0
 ..i smkoefstatdph s cenakm=trz/smkoefstatdph
 ..// =====================
 ..// vypocet dph pro staty
 ..// =====================
 ..s idstat="" f  s idstat=$o(arrdoc("arr",5,"arr",1,idstat)) q:idstat=""  d
 ...//km<limit km
 ...i $g(arrdoc("arr",5,"arr",1,idstat,"dta",5)) i $g(arrdoc("arr",5,"arr",1,idstat,"dta",1))'>$g(arrdoc("arr",5,"arr",1,idstat,"dta",5)) q
 ...//cena za prepravu osob v prislusnem state
 ...i 'zvzdph s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",1))/kmc*trz),2)
 ...i +zvzdph s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",1))*cenakm),2)
 ...//pro idstat=SK k cene za prepravu osob pripoctu mytne SK
 ...//od 01.10.2013 myto SK do zakladu zapocitavam vzdy, uz napocteno
 ...i 'hrlch131001 i idstat="SK" d
 ....s idppl=2000 s iddsb="" f  s iddsb=$o(arrdoc("fak","arr",1,idppl,iddsb)) q:iddsb=""  d
 .....s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",6))+$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",1))
 ...//projdu poplatky a pokud je rozepsan podle statu, prictu prislusnou cast
 ...//na sj od 01.10.2013 blokovano ve VB, promena neni naplnena
 ...s idppl="" f  s idppl=$o(arrdoc("fak","arr",1,idppl)) q:idppl=""  d
 ....i 'hrlch131001 q:idppl=1600
 ....i 'hrlch131001 q:idppl=2000
 ....s iddsb="" f  s iddsb=$o(arrdoc("fak","arr",1,idppl,iddsb)) q:iddsb=""  d
 .....// poplatek souvisi s dopravou
 .....i +$p($g(arrcis11("arr",idppl)),"~",4) d
 ......// poplatek ma rozpis podle statu, nactu cast pro stat
 ......i +$g(arrdoc("fak","arr",1,idppl,iddsb,"dta",7)) d
 .......s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",6))+$g(arrdoc("fak","arr",1,idppl,iddsb,"arr",1,idstat,"dta",1))
 ...//dph se fakturuje, neni zapocitane v cene za prepravu, cena za prepravu je zaklad
 ...//i +$g(arrdoc("arr",5,"arr",1,idstat,"dta",3)) d
 ...//.s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",6))*$g(arrdoc("arr",5,"arr",1,idstat,"dta",4))/100),2)
 ...//dph se nefakturuje, je zapocitane v cene za prepravu
 ...//i '$g(arrdoc("arr",5,"arr",1,idstat,"dta",3)) d
 ...//.s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$gDanVal^OBapiED($g(arrdoc("arr",5,"arr",1,idstat,"dta",6)),$g(arrdoc("arr",5,"arr",1,idstat,"dta",4)))
 ...//====================================================================================
 ...//nulova sazba 26.11.2014, presunuto sem, aby se pocital zaklad i pri nulove sazbe DPH 
 ...i '$g(arrdoc("arr",5,"arr",1,idstat,"dta",4)) q
 ...//====================================================================================
 ...//cena za prepravu je zaklad (dph se fakturuje, neni zapocitane v cene za prepravu ; nebo ma danovou povinnost zakaznik (12.4.2012 LT + VTCR LACINOVA)
 ...s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",6))*$g(arrdoc("arr",5,"arr",1,idstat,"dta",4))/100),2)
 ...//dph se nefakturuje a odvadime ho my, je zapocitane v cene za prepravu
 ...i ('$g(arrdoc("arr",5,"arr",1,idstat,"dta",3)))&($g(arrdoc("arr",5,"arr",1,idstat,"dta",2))'=1) d
 ....//prvni varianta vypoctu
 ....i 'zvzdph s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$gDanVal^OBapiED($g(arrdoc("arr",5,"arr",1,idstat,"dta",6)),$g(arrdoc("arr",5,"arr",1,idstat,"dta",4)))
 ....//druha varianta vypoctu
 ....i +zvzdph d
 .....s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",6))*$g(arrdoc("arr",5,"arr",1,idstat,"dta",4))/100),2)
 .....//do zakladu pripoctu dan, aby odpovídala struktura, stejne u obj.
 .....s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",6))+$g(arrdoc("arr",5,"arr",1,idstat,"dta",7))
 ...//// dph se nefakturuje a druha varianta vypoctu, pak k cene pro stat pripoctu dph, aby odpovidala struktura
 ...//i ('$g(arrdoc("arr",5,"arr",1,idstat,"dta",3)))&(+zvzdph) d
 ...//.s arrdoc("arr",5,"arr",1,idstat,"dta",6)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",6))+$g(arrdoc("arr",5,"arr",1,idstat,"dta",7)) //do zakladu pripoctu dan, aby odpovídala struktura, stejne u obj.
 ...//zaokrouhleni + prevod na EUR
 ...i $g(arrdoc("dta",67))="CZK" d
 ....s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$round^OBapiED($g(arrdoc("arr",5,"arr",1,idstat,"dta",7)),0)
 ....s arrdoc("arr",5,"arr",1,idstat,"dta",8)=""
 ....i kurzEUR d
 .....s arrdoc("arr",5,"arr",1,idstat,"dta",8)=$$round^OBapiED(($g(arrdoc("arr",5,"arr",1,idstat,"dta",7))/kurzEUR),2)
 ...i $g(arrdoc("dta",67))="EUR" d
 ....s arrdoc("arr",5,"arr",1,idstat,"dta",7)=$$round^OBapiED($g(arrdoc("arr",5,"arr",1,idstat,"dta",7)),2)
 ....s arrdoc("arr",5,"arr",1,idstat,"dta",8)=$g(arrdoc("arr",5,"arr",1,idstat,"dta",7))
 ...//poplatek se fakturuje, napoctu ho do 1300
 ...i $g(arrdoc("arr",5,"arr",1,idstat,"dta",3))=1 d
 ....s arrdoc("fak","arr",1,1300,1,"dta",1)=$g(arrdoc("fak","arr",1,1300,1,"dta",1))+$g(arrdoc("arr",5,"arr",1,idstat,"dta",7))
 ....s arrdoc("fak","arr",1,1300,1,"dta",2)=$g(arrdoc("fak","arr",1,1300,1,"dta",2))+$g(arrdoc("arr",5,"arr",1,idstat,"dta",7))
 ....s arrdoc("fak","arr",1,1300,1,"dta",3)=0
 ....s arrdoc("fak","arr",1,1300,1,"dta",4)=0
 ....s arrdoc("fak","arr",1,1300,1,"dta",5)=""
 ....s arrdoc("fak","arr",1,1300,1,"dta",6)=0
 .i $d(arrdoc("fak","arr",1,1300,1)) d
 ..k arr s err=$$gCisItm^OBapiED(idfa,nmsp,11,1300,"",.arr) zt:+err "merr" s err=""
 ..s arrdoc("fak","arr",1,1300,1,"dta",5)=$p($g(arr("arr",1300,1)),"~",1)
 ..k arr
 // km v zahranici suma
 s arrdoc("arr",1,"dta",14)=""
 s idstat="" f  s idstat=$o(arrdoc("arr",5,"arr",1,idstat)) q:idstat=""  d
 .i idstat="CZ" q
 .s arrdoc("arr",1,"dta",14)=$g(arrdoc("arr",1,"dta",14))+$g(arrdoc("arr",5,"arr",1,idstat,"dta",1))
 // 
 q 0
isspecfak()
 // zjisteni, zda je zakaznik ve specialnim rezimu fakturace !!!
 q 0
isspeczf()
 // zjisteni, zda ma zakaznik specialni vypocet fakturace
 q 0
gSjFakKurz(idfa,nmsp,arrdoc,in,out)
 // out("dta",1)=mena
 // out("dta",2)=kurs
 n (idfa,nmsp,arrdoc,in,out) k out s err=""
 s out("dta",1)="" s out("dta",2)=""
 //
 s fmena=$g(arrdoc("dta",67)) s:fmena="" fmena="CZK"
 // CZK
 i fmena="CZK" s out("dta",1)="CZK" s out("dta",2)=1 q 0
 // sj je v jine mene, je vyfakturovana ?
 // pokud ano a je fakturace MLINE, nactu kurs z faktury
 i arrdoc("dta",1)=2 d
 .//fakturace MLINE
 .//k arri,arro s arri("IdFa")=idfa
 .//s err=##class(ALVA.FAKTURACE.ApiKM).Init(.arri,.arro) s err=""
 .//i +$g(arro) d
 .i ##class(ALVA.FAKTURACEEX.MLAPI).isFakEdisonActiv(idfa) d
 ..k arri,arro
 ..s idfdo=$p(arrdoc("arr",2,"dta",1),"~",1,3) q:idfdo=""
 ..s arri("IdFa")=idfa
 ..s arri("Doklad")=idfdo
 ..s err=##class(ALVA.FAKTURACE.ApiKM).DokData(.arri,.arro) s err=""
 ..s out("dta",1)=$g(arro("Dok","Mena"))
 ..s out("dta",2)=$g(arro("Dok","Kurz"))
 // kurs je
 i $g(out("dta",1))'="" q 0
 // kurs neni, nactu kurs z pokladny
 s out("dta",1)=fmena
 k arro s err=##class(ALVA.POKLADNA.MLAPI).ExchangeRateRead(idfa,nmsp,$g(arrdoc("dta",6)),fmena,1,.arro)
 i 'err i $g(arro("Mena",fmena,"Mnoz")) s out("dta",2)=($g(arro("Mena",fmena,"Kurz"))/$g(arro("Mena",fmena,"Mnoz")))
 q 0
 //osetreni chyby
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","|")
]]></Routine>


<Routine name="OBapiEDSjCal1" type="INT" languagemode="0" timestamp="63919,50279"><![CDATA[
OBapiEDSjCal1 q
 // ========================================
 // SJ - EDISON popis v ^OBapiEDSjInfo
 // ========================================
calcTsj(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 // vypocet casove urcenych cinnosti ... docarr("arr",8,"arr",...) - data prubehu cinnosti z dokladu sj
 // vysledek ze zapise do pole ......... outarr("dta",...) - vysledek - casove a mzdove udaje
 // vstupni pole inarr:
 // ===================
 // inarr("par",1)=zp		...  zp
 // inarr("par",2)=hrl 		...  zacatek jizdy
 // inarr("par",3)=no kill vysledneho globalu s prubehem prace (^||wrk.ALVA.AD(wrkm), outarr=wrkm
 // pole s predavanymi parametry pararr:
 // ====================================
 // vystupni pole
 // =============
 // outarr=wrk do globalu s prubehem prace
 // outarr("dta",1)=km obsazene
 // outarr("dta",2)=km neobsazene
 // outarr("dta",3)=km rezijni
 // outarr("dta",4)=doba provozu (mm)
 // outarr("dta",5)=doba jizdy (mm)
 // outarr("dta",6)=doba ostatnich praci (mm)
 // outarr("dta",7)=doba dodk (mm)
 // outarr("dta",8)=doba bp (mm)
 // outarr("dta",9)=cekani (mm)
 // outarr("dta",10)=doba noc (mm)
 // outarr("dta",11)=doba sone (mm)
 // outarr("dta",12)=doba sv (mm)
 // outarr("dta",13)=zacatek (mm)
 // outarr("dta",14)=konec (mm)
 // outarr("dta",15)=doba neplacenych hodin (mm)
 // outarr("dta",16)=doba myti, cisteni (mm)
 // outarr("dta",17)=doba nakladani zavazadel (mm)
 // -----------------------------------------------
 // outarr("arr",1,idstat)=km
 n (idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 s $zt="err" s err="" k pararr
 // pracovni global global 
 s wrkm=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkm) s outarr=wrkm
 // promenne
 s zp=$g(inarr("par",1))				//zp
 s hrl=$g(inarr("par",2))				//horlog zacatku
 s idprv=zp#100							//id provozovny
 // nastaveni programu
 i '$d(arrset("arr")) k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 // mzdove nastaveni
 i '$d(arrmzd("arr")) k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr"
 //                           1     2    3   4  5  6    7    8
 // ^||wrk.ALVA.AD(wrkm,mm)=mmbeg~idcin~hrl~dd~sv~noc~vicsm~dsp
 // pokud nejsou cinnosti, pak se nic nepocita
 i $o(docarr("arr",8,"arr",""))="" q 0
 // =====================================================
 // od zacatku do konce zadanych cinnosti nastavim cekani
 // =====================================================
 s mmbeg=$o(docarr("arr",8,"arr",""))
 s mm=$o(docarr("arr",8,"arr",""),-1)
 s mmend=$g(docarr("arr",8,"arr",mm,"dta",1))
 s outarr("dta",13)=$j(mmbeg,0,0)
 s outarr("dta",14)=$j(mmend,0,0)
 f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=0
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 // ======================================================
 // prubeh sj, napocet km, casu a ostatnich parametru
 // ======================================================
 s mmbeg="" f  s mmbeg=$o(docarr("arr",8,"arr",mmbeg)) q:mmbeg=""  d
 .s acthrl=(hrl+(mmbeg\1440))
 .s mmend=$g(docarr("arr",8,"arr",mmbeg,"dta",1))
 .s idcin=$g(docarr("arr",8,"arr",mmbeg,"dta",2))
 .s idstat=$g(docarr("arr",8,"arr",mmbeg,"dta",5)) s:idstat="" idstat="CZ"
 .i (idcin=1)!(idcin=2)!(idcin=3) d
 ..s km=$g(docarr("arr",8,"arr",mmbeg,"dta",3))
 ..// napocet km =======================================
 ..i (idcin=1) d addTsj(.outarr,1,km) //obsazene
 ..i (idcin=2) d addTsj(.outarr,2,km) //obsazene
 ..i (idcin=3) d addTsj(.outarr,3,km) //obsazene
 ..s outarr("arr",1,idstat)=$g(outarr("arr",1,idstat))+km
 .// rozbaleni do casoveho pole =======================
 .f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=idcin
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 // ===========================
 // doplneni atributu dd,sv,noc
 // ===========================
 s begNight=$$begNight^OBapiED()
 s endNight=$$endNight^OBapiED()
 k arrhrl s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 .s hrl=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",3)
 .//nactu udaje z kalendare
 .i '$d(arrhrl(hrl)) d
 ..k tmparri,arr
 ..s tmparri("par",1)=+$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
 ..s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.tmparri,.arr) zt:+err "merr" s err=""
 ..s $p(arrhrl(hrl),"~",1)=+$g(arr("dta",1)) //den v tydnu
 ..s $p(arrhrl(hrl),"~",2)=+$g(arr("dta",2)) //svatek
 ..k tmparri
 .//den a svatek
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",4)=$p($g(arrhrl(hrl)),"~",1)
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",5)=$p($g(arrhrl(hrl)),"~",2)
 .//noc
 .s tmpmm=mm f  q:tmpmm'>1440  s tmpmm=tmpmm-1440
 .i (tmpmm'>endNight)!(tmpmm>begNight) s $p(^||wrk.ALVA.AD(wrkm,mm),"~",6)=1
 k arrhrl
 // ========================================
 // pole id polozek pro napocet hodin v noci
 // ========================================
 k arridnc s val=$g(arrmzd("arr",2,0,11))
 f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" arridnc(+$p(val,"~",cnt))=""
 // ==============================
 // nascitani hodin do pole outarr
 // ==============================
 s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 .s mmbeg=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",1)
 .s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)
 .s dd=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",4)
 .s sv=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",5)
 .s nc=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",6)
 .s sn=(dd>5)
 .// jizda
 .// ====
 .i (idcin=1)!(idcin=2)!(idcin=3) d
 ..d addTsj(.outarr,4,1) 											//doba provozu
 ..d addTsj(.outarr,5,1) 											//jizda
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +sv d addTsj(.outarr,12,1)										//svatek
 ..i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so+ne
 .// =========
 .// ost.prace
 .// =========
 .i (idcin=4) d
 ..d addTsj(.outarr,4,1) 								 			//doba provozu
 ..d addTsj(.outarr,6,1) 		 									//ostani prace
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +sv d addTsj(.outarr,12,1)										//svatek		
 ..i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so,ne 
 .// ====
 .// dodk
 .// ====
 .i (idcin=5) d
 ..d addTsj(.outarr,4,1) 										 	//doba provozu
 ..d addTsj(.outarr,7,1)											//dodk
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +sv d addTsj(.outarr,12,1)										//svatek
 ..i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so+ne
 .// ==========
 .// bezp.prest
 .// ==========
 .i (idcin=6) d
 ..d addTsj(.outarr,4,1) 										 	//doba provozu
 ..d addTsj(.outarr,8,1)  											//bp
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +$g(arrmzd("arr",2,0,7,"arr",1,"dta",4)) d						//zapocitat bp do hodin so,ne sv 						
 ...i +sv d addTsj(.outarr,12,1)									//svatek
 ...i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so,ne
 .// =========
 .// preruseni
 .// =========
 .i (idcin=7) q
 .// ================
 .// neplacene hodiny
 .// ================
 .i (idcin=8) d
 ..d addTsj(.outarr,4,1) 										 	//doba provozu
 ..d addTsj(.outarr,15,1)  											//neplacene hodiny
 .// =============
 .// myti, cisteni
 .// =============
 .i (idcin=9) d
 ..d addTsj(.outarr,4,1) 										 	//doba provozu
 ..d addTsj(.outarr,16,1)  											//myti, cisteni
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +sv d addTsj(.outarr,12,1)										//svatek
 ..i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so+ne
 .// ===================
 .// nakladani zavazadel
 .// ===================
 .i (idcin=10) d
 ..d addTsj(.outarr,4,1) 										 	//doba provozu
 ..d addTsj(.outarr,17,1)  											//nakladani zavazadel
 ..i (+nc)&($d(arridnc(idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 ..i +sv d addTsj(.outarr,12,1)										//svatek
 ..i +sn d addTsjSn(.outarr,.arrmzd,sv,1)							//so+ne
 .// ======
 .// cekani
 .// ======
 .i 'idcin d
 ..d addTsj(.outarr,4,1)						 				 	//doba provozu
 ..d addTsj(.outarr,9,1) 				 							//cekani celkem
 ..i (+nc)&($d(arridnc(+idcin))) d addTsjNc(.outarr,.arrmzd,1)		//noc
 //
 i '$g(inarr("par",3)) k ^||wrk.ALVA.AD(wrkm)						//kill globalu s prubehem prace
 q 0
 //
setTsj(arr,id,val) n (arr,id,val) s arr("dta",id)=val q
addTsj(arr,id,val) n (arr,id,val) s arr("dta",id)=$g(arr("dta",id))+val q
addTsjNc(arr,arrmzd,val) n (arr,arrmzd,val) q:'+$g(arrmzd("arr",2,0,2))  d addTsj(.arr,10,val) q
addTsjSn(arr,arrmzd,sv,val) n (arr,arrmzd,sv,val) q:(+sv)&(+$g(arrmzd("arr",2,0,4)))  d addTsj(.arr,11,val) q
 //
mkDieIntrvTsj(idfa,nmsp,zp,docarr,arrmzd,in,out)
 n (idfa,nmsp,zp,docarr,arrmzd,in,out)
 s $zt="err" s err="" k out
 // neni casovy prubeh
 i $o(docarr("arr",8,"arr",""))="" q 0
 // ==================
 s wrkm=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkm)
 s mmbeg=$o(docarr("arr",8,"arr",""))
 s mm=$o(docarr("arr",8,"arr",""),-1)
 s mmend=$g(docarr("arr",8,"arr",mm,"dta",1))
 // cely prubeh cinnosti SJ ========================================
 f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) s ^||wrk.ALVA.AD(wrkm,mm)=""
 // ================================================================
 // uprava prubehu cinnosti
 s mmbeg="" f  s mmbeg=$o(docarr("arr",8,"arr",mmbeg)) q:mmbeg=""  d
 .s mmend=$g(docarr("arr",8,"arr",mmbeg,"dta",1))
 .s idcin=$g(docarr("arr",8,"arr",mmbeg,"dta",2))
 .s idstat=$g(docarr("arr",8,"arr",mmbeg,"dta",5))
 .s:idstat="" idstat="CZ"
 .// preruseni prace
 .//// odstraneno, pro diety je potreba napocitavat i preruseni - zamestnavatel zamestnance vyslal vcetne preruseni 
 .////i idcin=7 d  q
 .////.f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) k ^||wrk.ALVA.AD(wrkm,mm)
 .// doplneni statu do prubehu prace od aktualni pozice do konce
 .s mm=mmbeg f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 ..s ^||wrk.ALVA.AD(wrkm,mm)=idstat 
 // projdu prubeh cinnosti, vymazu ty, ktere nejsou v CZ
 s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 .i $g(^||wrk.ALVA.AD(wrkm,mm))'="CZ" k ^||wrk.ALVA.AD(wrkm,mm) 
 // sestaveni intervalu pro vypocet diet, do indexu dam mmbeg-1,
 // funkce, ktera pocita diety zjistuje delku odectenim intervalu 
 s mmbeg="" f  s mmbeg=$o(^||wrk.ALVA.AD(wrkm,mmbeg)) q:mmbeg=""  d
 .f mm=mmbeg:1 q:'$d(^||wrk.ALVA.AD(wrkm,mm))  s out("arr",(mmbeg-1))=mm k ^||wrk.ALVA.AD(wrkm,mm)
 k ^||wrk.ALVA.AD(wrkm)
 q 0
 //
err s $zt="" k outarr k pararr q "1~"_$ze_"/"_$tr($g(err),"~","/")
err1 s $zt="" q ""
]]></Routine>


<Routine name="OBapiEDSjInfo" type="INT" languagemode="0" timestamp="65491,57068.585636"><![CDATA[
OBapiEDSjInfo q
 // =====================================
 // SJ, zakladni udaje out("dta",cnt)=...
 // =====================================
 // cnt - pocitadlo
 // 01 - Statut (0 predznaceno / 1 porizeno / 2 prevedeno FAK / 3 zruseno)
 // 02 - DatumPorizeni	(horlog)
 // 03 - DatumPrevoduDoFakt (horlog)
 // 04 - OBJ - cislo objednavky
 // 05 - ZI - zimni prirazka (%) (nepouziva-li se L/Z spotreba)
 // 06 - DAPR - datum pristaveni (horlog)
 // 07 - DAKO - datum ukonceni (horlog)
 // 08 - SPZ - spz auta
 // 09 - PRI - spz privesu
 // 10 - DZA - druh zajezdu z ciselniku (idCis=1)
 // 11 - TYPP - typ prepravce z ciselniku (idCis=2)
 // 12 - JI - doba jizdy (min)
 // 13 - CE - cekani (min)
 // 14 - PROVO - doba provozu (min)
 // 15 - OSOB - pocet osob
 // 16 - KMO - km obsazene
 // 17 - KMNE - km neobsazene
 // 18 - KMRE - km rezijni (KmCelkem=KMO+KMNE+KMRE)
 // 19 - KMPRI -km s privesem
 // 20 - TAK - tachometr konec
 // 21 - TAZ - tachometr zacatek
 // 22 - PHM - cerpane PHM
 // 23 - PRIR - prirazka PMH na SJ
 // 24 - ZF - zpusob fakturace (1=fakturovat za km, 2=casovkou, 3=smluvni cena, 4=nefakturovat, 5=jen opravna castka (v polozce POPV,POPZ i minusem))
 // 25 - PRE - zkratka/kod prepravce (jak si ho oznacili na provozovne) - NEPOUZIVA SE !
 // 26 - NAZ - nazev prepravce (druha cast je v "upres")
 // 27 - ULC - ulice a cislo
 // 28 - OBEC - obec
 // 29 - PSC - psc
 // 30 - BAN - kod banky (idCis=9)
 // 31 - UCE - ucet
 // 32 - ICO - ico,(popripade RC)
 // 33 - DIC1 - prvni cast DIC
 // 34 - DIC2 - druha cast DIC
 // 35 - SMLUV - smluvni cena (vcetne DPH!)
 // 36 - ZALO - zaloha
 // 37 - SLEP - sleva v (%)
 // 38 - DPH - sazba DPH (0,5,...) (%)
 // 39 - ZPPL - zpusob platby dle ciselniku (idCis=8)
 // 40 - POKDOK -cislo pokladniho dokladu při platbe v hotovosti - NEPOUZIVA SE !
 // 41 - POPV - ostatni poplatky vnitrostatni, danene - NEPOUZIVA SE !
 // 42 - POPZ - ostatni poplatky v zahranici, nedanene - NEPOUZIVA SE !
 // 43 - NASA - NS auta
 // 44 - KLOU - km ujete kloubakem (0=neni kloubak, >0=km kloubaku)
 // 45 - norma - normovane PHM
 // 46 - typa - technicky typ auta
 // 47 - wybr - vybrane jizdne (Chomutov) - NEPOUZIVA SE !
 // 48 - cizak - 0=vnitrostatni preprava, 1=cizi
 // 49 - upres - upresneni zakaznika
 // 50 - CizObj - cislo zakaznikovy objednavky
 // 51 - habp - u vybranych je tam BP (specium OSNADO - OD-$SJNUL, VS_CSAD) (min)
 // 52 - POBEC -postovni adr. obec
 // 53 - PULC - postovni adr. ulice
 // 54 - PPSC  -postovni adr. psc
 // 55 - ltPHb - cerpane alternativni palivo - AdBlue
 // 56 - kmPH - stav tachometru pri tankovani PHM
 // 57 - TMPR - čas přistavení (min)
 // 58 - TMKO - čas ukončení (min)
 // 59 - VSF - vystaveni faktury (S/samostatne, T/tydne, M/mesicne)
 // 60 - KMOF - km obsazene pro fakturaci
 // 61 - KMNEF - km neobsazene pro fakturaci
 // 62 - SMLUVBD - smluvni cena (bez DPH!)
 // 63 - SAZB1 -  sazba výkon km obs/neobs.
 // 64 - SAZB2 -  sazba 15 min. čekání
 // 65 - SAZB3 -  sazba 15 min. provozu
 // 66 - SAZB4 -  sazba km vlek
 // 67 - MFA   -  mena pro fakturaci (CZK/EUR)
 // 68 - VNIFANS - stredisko odberatele pro vnitrofakturu
 // 69 - KMPRIF - km privesu pro fakturaci
 // 70 - JIF - doba jizdy pro fakturaci (min)
 // 71 - CEF - doba cekani pro fakturaci (min)
 // 72 - ltPHa - cerpane alternativni palivo - nafta pro topeni
 // 73 - ltFAME		- spotreba PHM FAME
 // 74 - ltOLEJ		- olej
 // 75 - MPFA  - mena pro prepocet faktury (""/EUR)
 // 76 - tmTopeni   - doba topeni(min)
 // 77 - fakPrv - idprv pro fakturaci (kde se bude fakturovat), muze byt ""
 // 78 - ltB30 - spotreba PHM B30
 // 79 - sortfak - radici index pro fakturaci
 // 80 - typ pro vypocet mzdy (ciselnik 47)
 // 81 - SAZB6 - sazba za cyklus
 // 82 - PCYKL - počet cyklů
 // 83 - SUBRZ - priznak subdodaneho vozidla 0/1 
 // 84 - SUBRZIC - IC spolecnosti, ktera subdodala vozidlo
 // ==================================================================
 // SJ, vykonova a mzdova data pro ridice out("osc",osc,"dta",cnt)=...
 // ==================================================================
 // cnt - pocitadlo
 // 01 - OS - osobni cislo
 // 02 - M - pocitat mzdu (A ano / N ne / C cizi / F fiktivní / B bez mzdy za výkon (MB))
 // 03 - DIE - diety (Kc)
 // 04 - CEK - cast cekani, ktera jde do odpracovane doby (min)
 // 05 - HTA - hodiny placene tarifem, jdou do odpracovane doby (min)
 // 06 - HDO - hodiny DODK (min) // drive hodiny, co se neplati a zapocitavaji do odpr.doby / DODK (u nekterych zakazniku) ^OI("USTI"),^OI("TRUT"),^OI("CHOMUTOV"),^OI("TREBIC"),^OI("CSADUO")) (min)
 // 07 - NOC - hodiny v noci (min)
 // 08 - SON - hodiny SO,NE - prevadi se do mezd, tam KC (min)
 // 09 - SVA - hodiny svatek - prevadi se do mezd, tam KC (min)
 // 10 - PAU - pausalni mzda, pripocitava se ke mzde (kc)
 // 11 - PREF - mzdova preference podle typu prepravce (kc) (VYPOCET) 
 // 12 - CEI - cekani ridice, plati se jako cekani (min) (VYPOCET) 
 // 13 - JII - doba jizdy (min) (VYPOCET) 
 // 14 - KMOI - km obsazene (km) (VYPOCET) 
 // 15 - KMNEI - km neobsazene (km) (VYPOCET) 
 // 16 - KMREI - km rezijni (km) (VYPOCET) 
 // 17 - KMPRII - km prives (km) (VYPOCET) 
 // 18 - KMklo - km kloubak (km) (VYPOCET) 
 // 19 - mec - mzda casova (kc) (VYPOCET) 
 // 20 - mek - mzda vykonova (kc) (VYPOCET) 
 // 21 - hodc - hodiny celkem, zapocitavaji se do odp. doby (min) (VYPOCET) 
 // 22 - klo - kc za kloubak a prives do priplatku (kc) (VYPOCET) 
 // 23 - cek - kc za cekani do pohotovosti (kc) (VYPOCET) 
 // 24 - hotar - kc za hodiny tarifem (hod.tarifem, hod.dodk, hod myti, cisten, hod. nakladu zavazadel) (kc) (VYPOCET) 
 // 25 - honoc - kc za hodiny v noci (kc) (VYPOCET) (ve mzdach se to pocita znova)
 // 26 - KMprem - premie - (VYPOCET)!!! kontrola, zda to v NAVESTI VETAM muze byt
 // 27 - SPJ - hodiny pohovosti spolujizdy (min) (pokud jsou, odecitaji se od doby jizdy, nejdou do odp. doby)
 // 28 - kcSPJ - Kc za spolujizdu (kc) (VYPOCET) (prevadeji se do pohotovosti)
 // 29 - mznHd - mzda za hodiny (kc) (VYPOCET) (mzda za cacovy vykon + za hodiny tarifem)
 // 30 - FxKcDoc - fixni kc na doklad
 // 31 - FxKcDodk - fixni kc za dodk na doklad
 // 32 - BP - doba BP pro ridice (min), vyhodnocuje se z celkove zadane BP
 // 33 - HNE - hodiny neplacene (hodiny se neplati a zapocitavaji do odpr.doby) (min)
 // 34 - PDD - pocet dni s dokladem (VYPOCET)
 // 35 - MYTCIS - hodiny myti, cisteni
 // 36 - NAKZAV - hodiny nakladu zavazadel
 // 37 - JII1OS - doba jizdy (min) pri jizde v jednom ridici
 // 38 - JIIVOS - doba jizdy (min) pri jizde ve vice ridicich
 // 39 - HZTP - doba (min) pro příplatek za praci ve ztizenem prostredi (VYPOCET)
 // 40 - KCZTP - kc priplatek za praci ve ztizenem prostredi (VYPOCET)
 // vsechny cas.udaje v min
 // =======================
 // dalsi parametry pro ridice
 // =======================
 // out("osc",osc,"par",1)=poradi ridice pro zobrazeni (v pripade, že je zadáno vice ridicu)
 // out("osc",osc,"par",2)=ns ridice
 // out("osc",osc,"par",3)=narok na priplatek za ztizene prostredi (0/1), zadava se na formulari 
 // out("osc",osc,"par",4)=subdodany ridic 0/1
 // out("osc",osc,"par",5)=IC spolecnosti, ktera subdodala ridice
 // ====================================
 // pendl - out("osc",osc,"pnd",cnt)=...
 // ====================================
 // 01 - pendl - je pendl 0/1
 // 02 - Wji - jizda (min)
 // 03 - Wce -  cekani placene (min)
 // 04 - KmObs - km obsazene
 // 05 - KmNeo - km neobsazene
 // 06 - KmRez - km rezijni
 // 07 - KmPřív - km přívěs
 // 08 - koefDOD - koeficient dodk (NEPOUZIVA SE)
 // 09 - koefM -  koeficient mzdy
 // ========================================
 // dalsi data SJ pod ("arr",1,"dta",cnt)=""
 // ========================================
 // 01 - zacatek ph (mereno)
 // 02 - konec ph	(mereno)
 // 03 - lt ph		(tankovano)
 // 04 - prepravni system
 // 05 - id zakaznika (z modulu zakaznici)
 // 06 - pristaveni
 // 07 - koef.tachometru auta
 // 08 - km dle tachometru
 // 09 - koeficient phm
 // 10 - zakladni spotreba ph
 // 11 - osc zodpovedne osoby pro faktuaraci
 // 12 - splatnost faktury
 // 13 - cil,pres
 // 14 - km v zahranici(suma)
 // ===========================
 // odkaz na fakturu + historie
 // ===========================
 // out("arr",2,"dta",1)=id faktury z fakturace (rok~fakstr~cislo~idfa)
 // historie
 //	out("arr",2,"arr",cnt,"dta",1)=id faktury z fakturace (rok~fakstr~cislo~idfa)
 //	out("arr",2,"arr",cnt,"par",1)=horlog prevodu do fakturace
 //	out("arr",2,"arr",cnt,"par",2)=jmeno uzivatele, ktery prevedl fakturu
 // =============
 // kontrola auta
 // =============
 // out("arr",3,"stt",1)=kontrola stav 0 nezadano / 1 porizeno / 2 opraveno / 3 bez opravy
 // out("arr",3,"dta",1)=kontrola 0 nezadano / 1 ne / 2 ano, bez zavady / 3 ano, zavada
 // out("arr",3,"dsc",cnt)=popis
 // ====================
 // komentare na fakturu
 // ====================
 // out("arr",4,"arr",1,1)=poznamka na fakturu z objednavky 1.radek
 // out("arr",4,"arr",1,2)=poznamka na fakturu z objednavky 2.radek
 // out("arr",4,"arr",2,cnt)=dalsi komentar na fakturu
 // out("arr",4,"arr",3,1)=poznamka pro fakturaci (pro seznam v aplikaci fakturace)
 // ==================
 // veta pro fakturaci - nova, pocita se s ni ve fakturaci
 // ==================
 // out("fak","dta",1)=sleva|prirazka v Kc sleva je minus, prirazka plus
 // out("fak","dta",2)=kod statu, kam je objednavka ID
 // out("fak","dta",3)=kod statu, kam je objednavka POPIS
 // out("fak","dta",4)=ns pro fakturaci (bud ns auta a nebo transformovane dle prs)
 // ==================
 // fakturacni polozky
 // ==================
 // out("fak","itm",idpol,"dta",1)=kc celkem (zaklad)
 // out("fak","itm",idpol,"dta",2)=kc sazba
 // out("fak","itm",idpol,"dta",3)=mnozstvi
 // idpol ... ciselnik 28
 // ===================
 // fakturacni poplatky
 // ===================
 // out("fak","arr",1,idppl,iddsb,"dta",1)=zaklad kc
 // out("fak","arr",1,idppl,iddsb,"dta",2)=celkem kc
 // out("fak","arr",1,idppl,iddsb,"dta",3)=dan kc
 // out("fak","arr",1,idppl,iddsb,"dta",4)=porizeno (0 zaklad / 1 celkem)
 // out("fak","arr",1,idppl,iddsb,"dta",5)=vlastni popis pro idppl= ...
 // out("fak","arr",1,idppl,iddsb,"dta",6)=je soucast ceny, nefakturuje se (0 ne / 1 ano)
 // out("fak","arr",1,idppl,iddsb,"dta",7)=je rozpis po státech pro zahranicni dph (0 ne / 1 ano)
 // out("fak","arr",1,idppl,iddsb,"dta",8)=je soucasti ceny, nevypisovat na fakturu (0 vypisovat / 1 nevypisovat)
 // out("fak","arr",1,idppl,iddsb,"arr",1,idstat,"dta",1)= zaklad kc po statu 
 // idppl ... ciselnik 11
 // iddsb ... ciselnik 1=bez,2=snizena ,3=zakladni, 4=2.snizena 
 // ==============
 // zahranicni DPH
 // ==============
 // out("arr",5,"dta",1)=vychozi misto popis
 // out("arr",5,"dta",2)=vychozi misto stat (idstat)
 // out("arr",5,"dta",3)=koncove misto popis
 // out("arr",5,"dta",4)=koncove misto stat (idstat)
 // out("arr",5,"dta",5)=celkovy pocet km (vypocet)
 // out("arr",5,"dta",6)=celkova cena za prepravu osob (netto cena celkem) (vypocet)
 // out("arr",5,"dta",7)=kurzEUR pro vypocet dph EUR
 // out("arr",5,"arr",1,idstat,"dta",1)=km statem
 // out("arr",5,"arr",1,idstat,"dta",2)=danova povinost 0 vlastni / 1 zakaznik / 2 odvedeme za zakaznika 
 // out("arr",5,"arr",1,idstat,"dta",3)=fakturovat 0 ne / 1 ano 
 // out("arr",5,"arr",1,idstat,"dta",4)=sazba DPH (výše %) (vypocet, prepis z ciselniku)
 // out("arr",5,"arr",1,idstat,"dta",5)=limit km pro výpočet (vypocet, prepis z ciselniku)
 // out("arr",5,"arr",1,idstat,"dta",6)=cena za prepravu osob v prislusnem state (vypocet), nefakturuje-li se dan, je cena vcetne dane
 // out("arr",5,"arr",1,idstat,"dta",7)=dph (vypocet)
 // out("arr",5,"arr",1,idstat,"dta",8)=dph EUR (vypocet)
 // out("arr",5,"arr",1,idstat,"dta",9)=prujezd zemi (0 tranzit / 1 tam a zpet, limit km pro vypocet x 2)
 // =========================
 // odkaz na zalohove doklady
 // =========================
 // out("arr",6,"arr",cnt,"dta",1)=id dokladu z fakturace (rok~fakstr~cislo~firma)
 // out("arr",6,"arr",cnt,"dta",2)=id (upresneni) pokladniho dokladu z fakturace (vice udaju oddeleno ~)
 // out("arr",6,"arr",cnt,"dta",3)=NZA nedanova zaloha / DZA danova zaloha
 // out("arr",6,"arr",cnt,"dta",4)=0/1 cerpani
 // =========================
 // doklady s cerpanym PHM
 // =========================
 // out("arr",7,"arr",iddoc,"dta",1)=phm			... doklady s cerpanym phm (iddoc je id dokladu (faktury), phm je cerpane phm)
 // out("arr",7,"cop","dta",1)=hrl posledni zmeny	... doklady s cerpanym phm
 // out("arr",7,"cop","dta",2)=jmeno uzivatele		... doklady s cerpanym phm
 // =============================
 // popis pole s prubehem zajezdu
 // =============================
 // out("arr",8,"arr",tm_od(mm),"dta",cnt)=hodnota
 // cnt - pocitadlo
 // 01 = tm_to(mm)
 // 02 = id_cin		 	   (ciselnik 37)
 // 03 = km
 // 04 = doba(mm)
 // 05 = id_stat		   (ciselnik 12)
 // 06 = info
 // ===========================
 // zaznam o zmenach na doklade
 // ===========================
 // out("arr","cop","dta",1)=horlog posledni zmeny
 // out("arr","cop","dta",2)=jmeno uzivatele kdo provedl posledni zmenu
 // out("arr","cop","dta",3)=jmeno uzivatele kdo doklad zavedl
]]></Routine>


<Routine name="OBapiEDSp" type="INT" languagemode="0" timestamp="65575,38991.373888"><![CDATA[
OBapiEDSp q
lLi(idfa,nmsp,in,out)
 // err=$$lLi(idfa,nmsp,in,out) - seznam vsech linek v AD
 //  - in
 //  - out
 //    out(li)=""
 n (idfa,nmsp,in,out)
 s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
  // vyber spoju
 s li="" f {
	 s li=$o(^[nmsp]OBS(li)) i li="" q
	 s out(li)=""
 }
 q 0
 //
gSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$gSp(idfa,nmsp,li,sp,hrl,in,out) - vrati data spoje
 //  - in
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err" k out s err=""
 //kontroly vstupnich parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //
 s li=+li s sp=+sp
 //hrl casove varianty
 s hrl=$o(^[nmsp]OBS(li,sp,"T",(hrl+.01)),-1) s out("hrl")=hrl
 //zakladni veta spoje 
 i hrl="" s val=$g(^[nmsp]OBS(li,sp))
 i hrl'="" s val=$g(^[nmsp]OBS(li,sp,"T",hrl))
 // rozbaleni vety
 f cnt=1:1:$$gPcSP() s out("dta",cnt)=$p(val,":",cnt)
 // pole pod vetou bez cas varianty
 i hrl="" {
	 s out("arr","pcz")=$g(^[nmsp]OBS(li,sp,"Pzast"))
	 m out("arr","prs")=^[nmsp]OBS(li,sp,"T","PRS")
 	 m out("arr","j")=^[nmsp]OBS(li,sp,"T","J")
 	 m out("arr","omz")=^[nmsp]OBS(li,sp,"T","omz")
 	 m out("arr","trs")=^[nmsp]OBS(li,sp,"T","trs")
 	 s ind="" f  {
	 	 s ind=$o(^[nmsp]OBS(li,sp,ind)) i (ind="")!(ind?.a) q
 	     m out("arr","pau",ind)=^[nmsp]OBS(li,sp,ind)
 	 }
 }
 // pole pod vetou - cas varianta
 i hrl'="" {
	 s out("arr","pcz")=$g(^[nmsp]OBS(li,sp,"T",hrl,"Pzast")) 
	 m out("arr","prs")=^[nmsp]OBS(li,sp,"T",hrl,"PRS")
 	 m out("arr","j")=^[nmsp]OBS(li,sp,"T",hrl,"J")
 	 m out("arr","omz")=^[nmsp]OBS(li,sp,"T",hrl,"omz")
 	 m out("arr","trs")=^[nmsp]OBS(li,sp,"T",hrl,"trs")
 	 s ind="" f {
	 	 s ind=$o(^[nmsp]OBS(li,sp,"T",hrl,ind)) i (ind="")!(ind?.a) q
 	 	 m out("arr","pau",ind)=^[nmsp]OBS(li,sp,"T",hrl,ind)
 	 }
 }
 // pokud neni informace kolikadenni je spoj, dopocita se
 i out("dta",20)="" {
	 s out("dta",20)=1
 	 i $g(out("dta",2))<$g(out("dta",1)) {
	 	 s out("dta",20)=2
 	 }
 }
 //
 q 0
 //
gSpOne(idfa,nmsp,li,sp,hrl,id,in,out)
 // err=$$gSpOne(idfa,nmsp,li,sp,hrl,id,in,out) - vrati jeden udaj spoje (podle id) ze zakladni vety 
 //  - in
 n (idfa,nmsp,li,sp,hrl,id,in,out)
 s $zt="err" k out s err=""
 //kontroly vstupnich parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 i $g(id)="" q "1~id="
 //
 s li=+li s sp=+sp
 s hrl=$o(^[nmsp]OBS(li,sp,"T",(hrl+.01)),-1) s out("hrl")=hrl
 //
 s val=""
 i hrl'="" s val=$g(^[nmsp]OBS(li,sp,"T",hrl))
 // rozbaleni vety
 s out("dta",id)=$p(val,":",id)
 q 0
 //
sSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$sSp(idfa,nmsp,li,sp,hrl,in,out) - ulozi data spoje
 //  - in
 //     in("par",1))=1 - pak je sledovana historie spoju ^Ohist
 //     in("par",1,"dta",1)=horlog prevodu spoju
 //     in("par",1,"dta",2)=skupina jr, odkud byl spoj preveden
 //     in("par",1,"dta",3)=idos uzivatele, ktery dela prevod
 //     in("par",1,"dta",4)=poznamka k prevodu spoju
 //     in("par",1,"dta",5)=import presnych km
 //     
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err" k out s err=""
 //kontroly vstupnich parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //
 s li=+li s sp=+sp
 k ^[nmsp]OBS(li,sp,"T",hrl)
 s val=""
 f cnt=1:1:$$gPcSP() {
	 i $g(in("dta",cnt))'="" s $p(val,":",cnt)=$g(in("dta",cnt))
 }
 // veta
 s ^[nmsp]OBS(li,sp,"T",hrl)=val
 // pole
 s ^[nmsp]OBS(li,sp,"T",hrl,"Pzast")=$g(in("arr","pcz"))
 m ^[nmsp]OBS(li,sp,"T",hrl,"PRS")=in("arr","prs")
 m ^[nmsp]OBS(li,sp,"T",hrl,"J")=in("arr","j")
 m ^[nmsp]OBS(li,sp,"T",hrl,"omz")=in("arr","omz")
 m ^[nmsp]OBS(li,sp,"T",hrl)=in("arr","pau")
 m ^[nmsp]OBS(li,sp,"T",hrl,"trs")=in("arr","trs")
 // zapis pod ^[nmsp]OBS(li,sp), historicky, pro potrebu prepravni pokladny (posledni casova varianta)
 s lasthrl=$o(^[nmsp]OBS(li,sp,"T",""),-1)
 i lasthrl'="" {
	 s ^[nmsp]OBS(li,sp)=$g(^[nmsp]OBS(li,sp,"T",lasthrl))
 }
 // zapis do sledovani historie
 i +$g(in("par",1)) {
	 i $g(in("par",1,"dta",1))'="" {
		 k arr
 		 s arr("dta",1)=$g(in("par",1,"dta",3))
 		 s arr("dta",2)=$g(in("par",1,"dta",2))
 		 s arr("dta",3)=$g(in("par",1,"dta",4))
 		 s arr("dta",4)=$g(in("par",1,"dta",5))
 		 m arr("arr",li,sp,hrl)=^[nmsp]OBS(li,sp,"T",hrl)
 		 s err=$$sHstImpSp^OBapiED(idfa,nmsp,$g(in("par",1,"dta",1)),.arr,"")
	 }
 }
 q 0
 //
dSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$dSp(idfa,nmsp,li,sp,hrl,in,out) - delete vymaze data spoje
 //  - in
 //    in("fullname")=fullname
 //    in("par",1)=0/1  spoj 0 vymaze atributem / 1 vymaze primo kill
 //    (jb 30.4.2020 spoje budeme mazat naprimo, parametrem se uz nepouziva, ale zvenci se posila natvrdo 1)
 //  - out
 //    out("stt")=0/1  spoj 0 nebyl vymazán / 1 byl vymazán
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err" k out s err=""
 //kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //
 s out("stt")=0
 //
 s li=+li s sp=+sp
 k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.issp) zt:+err "merr" s err=""
 i issp {
	 //do kose
	 k arr s err=$$gSp(idfa,nmsp,li,sp,hrl,"",.arr) zt:+err "merr" s err=""
 	 s err=$$sKos^OBapiED(idfa,nmsp,3,(li_"|"_sp_"|"_hrl),$g(in("fullname")),(li_"/"_sp_"/"_$$nd^OBapiED(hrl,0)),"",.arr,"") zt:+err "merr" s err=""
	 //vymazani
	 i '$g(in("par",1)) s $p(^[nmsp]OBS(li,sp,"T",hrl),":",13)=1 s out("stt")=1
	 i +$g(in("par",1)) k ^[nmsp]OBS(li,sp,"T",hrl) s out("stt")=1
 }
 q 0
 //
isSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$isSp(idfa,nmsp,li,sp,hrl,in,out) - test na existenci spoje
 // li - linka
 // sp - spoj
 // hrl - horlog casove varianty spoje, neni-li, test pouze na linku a spoj
 // 
 // - in
 //
 // - out
 //   out=0 neexistuje / >0 existuje
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err" k out s err=""
 //kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 //
 i '+$g(hrl) s out=$d(^[nmsp]OBS(li,sp))
 i +$g(hrl) s out=$d(^[nmsp]OBS(li,sp,"T",hrl))
 q 0
 //
gTimeVariantSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$gTimeVariantSp(idfa,nmsp,li,sp,hrl,in,out) - vyhleda casovou variantu spoje k hrl dle parametru
 // in("par",1)=0 vyhleda casovou variantu platnou k hrl / 1 vyhleda predchozi casovou variantu k hrl / 2 vyhleda nasledujici vatiantu k hrl 
 // out=hrl casove varianty
 // out("stt")= 0 spoj neexistuje / >0 spoj existuje
 // out("dta",1)=hrl platnosti spoje do
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err1" k out s err=""
 //kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //
 s out="" s li=+li s sp=+sp
 k arr s err=$$isSp^OBapiED(idfa,nmsp,li,sp,"","",.arr) zt:+err "merr" s err=""
 s out("stt")=$g(arr)
 i out("stt") {
	 i +$g(in("par",1))=0 s out=$o(^[nmsp]OBS(li,sp,"T",(hrl+.01)),-1)
 	 i +$g(in("par",1))=1 s out=$o(^[nmsp]OBS(li,sp,"T",hrl),-1)
 	 i +$g(in("par",1))=2 s out=$o(^[nmsp]OBS(li,sp,"T",hrl))
 	 i out="" s out("stt")=0
 	 i out'="" {
	 	 k arr s err=$$gSpOne^OBapiED(idfa,nmsp,li,sp,out,21,"",.arr) zt:+err "merr" s err=""
 	 	 s out("dta",1)=$g(arr("dta",21))
 	 }
 }
 q 0
 //
gOrgNumSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$gOrgNumSp(idfa,nmsp,li,sp,hrl,in,out) - vrati originalni cislo spoje
 // out=sp
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err" k out s err=""
 //kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(hrl)="" q "1~hrl="
 //
 s out=sp 
 i $g(li)="" q 0
 i $g(sp)="" q 0
 //
 s li=+li s sp=+sp s out=sp
 s hrl=$o(^[nmsp]OBS(li,sp,"T",(hrl+.01)),-1)
 i hrl {
	 i $p($g(^[nmsp]OBS(li,sp,"T",hrl)),":",24)'="" {
		 s out=$p($g(^[nmsp]OBS(li,sp,"T",hrl)),":",24)
	 }
 }
 q 0
 //
usedSp(idfa,nmsp,in,out)
 // err=$$usedSp(idfa,nmsp,.in,.out) - kontrola, zda se spoje pouzivaji
 // in("arr",li,sp,hrl)=""
 // out("arr",li,sp,hrl,"del")=0/1  ... spoj nelze/lze vymazat
 // out("arr",li,sp,hrl,"msg")=  	... zprava
 s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 n (idfa,nmsp,in,out)
 // zjistim aktualni obdobi v AD
 s rrrrmm="" k arr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err="" s rrrrmm=$g(arr("act")) s rrmm=rrrrmm#10000
 //zjistim horlog prvniho a posledniho obdobi, na ktere se to bude kontrolovat
 //prvniho
 s fhrl=$$dn^OBapiED("1."_(rrrrmm#100)_"."_(rrrrmm\100))
 //posledniho
 f cnt=28,29,30,31 i ($$dn^OBapiED(cnt_"."_(rrrrmm#100)_"."_(rrrrmm\100)))>0 s lhrl=$$dn^OBapiED(cnt_"."_(rrrrmm#100)_"."_(rrrrmm\100))
 // ============================
 // seznam dokladu a spoju z uznanych dokladu
 k arrin,arrout s wrk=$$gWrkJB^OBapiED()
 s arrin("rrmm",rrmm)=""
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 i +$g(arrout) d
 .s zp="" f  s zp=$o(^CacheTempJB(arrout,zp)) q:zp=""  d
 ..s idrrmm="" f  s idrrmm=$o(^CacheTempJB(arrout,zp,idrrmm)) q:idrrmm=""  d
 ...s iddoc="" f  s iddoc=$o(^CacheTempJB(arrout,zp,idrrmm,iddoc)) q:iddoc=""  d
 ....k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,idrrmm,iddoc,"",.arrdoc) zt:+err "merr" s err=""
 ....s hrl=$g(arrdoc("dta",4))
 ....//casovy prubeh
 ....s tm="" f  s tm=$o(arrdoc("arr","tur",tm)) q:tm=""  d
 .....i $g(arrdoc("arr","tur",tm,"dta",2))=3 d
 ......s li=$g(arrdoc("arr","tur",tm,"dta",5))
 ......s sp=$g(arrdoc("arr","tur",tm,"dta",6))
 ......i (li="")!(sp="") q
 ......s ^CacheTempJB(wrk,li,sp,zp,idrrmm,iddoc)=""
 ......i (hrl+(tm\1440))>$g(^CacheTempJB(wrk,li,sp)) s ^CacheTempJB(wrk,li,sp)=(hrl+(tm\1440))
 ....//casti spoje
 ....s hrl="" f  s hrl=$o(arrdoc("arr","edv",hrl)) q:hrl=""  d 
 .....s id="" f  s id=$o(arrdoc("arr","edv",hrl,"arr",7,id)) q:id=""  d
 ......s li=$g(arrdoc("arr","edv",hrl,"arr",7,id,"dta",7))
 ......s sp=$g(arrdoc("arr","edv",hrl,"arr",7,id,"dta",8))
 ......i (li'="")&(sp'="") d
 .......s ^CacheTempJB(wrk,li,sp,zp,idrrmm,iddoc)=""
 .......i hrl>$g(^CacheTempJB(wrk,li,sp)) s ^CacheTempJB(wrk,li,sp)=hrl
 ......s idcnt="" f  s idcnt=$o(arrdoc("arr","edv",hrl,"arr",7,id,"rzp",idcnt)) q:idcnt=""  d
 .......s li=$g(arrdoc("arr","edv",hrl,"arr",7,id,"rzp",idcnt,"dta",5))
 .......s sp=$g(arrdoc("arr","edv",hrl,"arr",7,id,"rzp",idcnt,"dta",6))
 .......i (li'="")&(sp'="") d
 ........s ^CacheTempJB(wrk,li,sp,zp,idrrmm,iddoc)=""
 ........i hrl>$g(^CacheTempJB(wrk,li,sp)) s ^CacheTempJB(wrk,li,sp)=hrl
 ....k arrdoc
 .k ^CacheTempJB(arrout)
 // ===========================================
 // nacteni nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // =================
 s li="" f  s li=$o(in("arr",li)) q:li=""  d
 .s sp="" f  s sp=$o(in("arr",li,sp)) q:sp=""  d
 ..s hrl="" f  s hrl=$o(in("arr",li,sp,hrl)) q:hrl=""  d
 ...s out("arr",li,sp,hrl,"del")=0
 ...//je-li casova varianta z uzavreneho obdobi a je-li zakaz, nejde vymazat
 ...i hrl<fhrl i +$g(arrset("arr",4,3)) s out("arr",li,sp,hrl,"msg")="nelze měnit časové varianty spojů z uzavřených období" q
 ...//je-li casova varianta vetsi nez lhrl, lze vymazat
 ...i hrl>lhrl s out("arr",li,sp,hrl,"del")=1 q
 ...//kontrola, zda jsou pro spoje v aktualnim obdobi doklady, pokud ne, povolim ho vymazat
 ...i $o(^CacheTempJB(wrk,li,sp,""))="" s out("arr",li,sp,hrl,"del")=1 q
 ...//jsou-li doklady a casova varianta je datumove po poslednim uznanem dokladu, povolim ho vymazat
 ...i hrl>$g(^CacheTempJB(wrk,li,sp)) s out("arr",li,sp,hrl,"del")=1 q
 ...//jsou-li doklady, dohledam, zda ma spoj predchozi casovou variantu, pokud ano, povolim vymazat
 ...i $o(^[nmsp]OBS(li,sp,"T",hrl),-1)'="" s out("arr",li,sp,hrl,"del")=1 s out("arr",li,sp,hrl,"msg")="spoj je použit na dokladech, v případě jeho vymazání bude použita jeho předchozí časová varianta, je potřeba přepočítat doklady" q
 ...s out("arr",li,sp,hrl,"msg")="spoj je použit na dokladech a nemá předchozí čas.variantu, není možné jej vymazat" q
 k ^CacheTempJB(wrk)
 q 0
 //
udSp(idfa,nmsp,li,sp,hrl,in,out)
 // err=$$udSp(idfa,nmsp,li,sp,hrl,in,out) - undelete, obnovi data spoje
 //  - in
 //  - out
 //    out("stt")=0/1  spoj 0 nebyl obnoven / 1 byl obnoven
 n (idfa,nmsp,li,sp,hrl,in,out)
 s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //
 k out s out("stt")=0
 //
 s li=+li s sp=+sp
 k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.issp) zt:+err "merr" s err=""
 i issp s $p(^[nmsp]OBS(li,sp,"T",hrl),":",13)=0 s out("stt")=1
 q 0
 //
lSp(idfa,nmsp,in,out)
 // err=$$lSp(idfa,nmsp,in,out) - vrati seznam spoju
 //  - in
 //     in("li")=spoje jen z linek ... (cast cisla linky, pak vratim linky, jejichz nazev zacina na ...)
 //     in("li",li)=spoje jen z linek ... (cele cislo linky)
 //     in("sp",sp)=jen spoje         ... (cele cislo spoje)
 //     in("sta")=0/1  = spoje aktivni vse /zrusene  (pokud neni uzel tak vse !)
 //     in("sppl",1)=$h = je-li def, pak vratim cas.var.spoju platnou k datu (jeden)
 //     in("sppl",2)=$h = je-li def, pak vratim cas.var.spoju platne k datu a dalsi (muze jich byt vice)
 //     in("sppl",3)=$h = je-li def, pak vratim cas.var.spoju od data(vcetne) dale (muze jich byt vice)
 //     in("par",1)=0/1  = spoje nezamcene/zamcene proti prevodu z jr (drive in("lck"))
 //     in("par",2)=0/1 = spoje vse / pouze nepouzite (drive in("unused"))
 //     in("par",3)=0/1 = spoje vse / pouze posilove (drive in("psp"))
 //     in("prv",idprv)="" = pokud je nadefinovano, berou se spoje jen z uvedene provozovny
 //		in("glb")=0/1/glb = 0 nebo "" vysledek je v out /1 vysledek je v globalu ^CacheTempJB(out) / glb vysledek je v @glb
 //     
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // 
 n (idfa,nmsp,in,out) k out s $zt="err1"
 //
 s myout="out"
 i +$g(in("glb")) s out=$$gWrkJB^OBapiED() s myout="^CacheTempJB("_out_")"
 i '$g(in("glb"))&($l($g(in("glb")))>1) s myout=$g(in("glb"))
 k @myout
 //
 s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
 // nepouzite spoje, pripravim si spoje z turnusu do @myglb@("arr",1,li,sp,hrl,zp,tu)=""
 i +$g(in("par",2))=1 s err=$$gAllTurLiSp^OBapiED(idfa,nmsp,myglb,"","") zt:+err "merr" s err=""
 // nastaveni programu
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // vyber spoju
 s li="" f {
	 s li=$o(^[nmsp]OBS(li)) i li="" q
	 // filtr na cast cisla linky
	 i ($g(in("li"))'="")&($e(li,1,$l($g(in("li"))))'=$g(in("li"))) continue
	 // filtr na cislo linky
	 i ($o(in("li",""))'="")&('$d(in("li",li))) continue
	 s sp="" f {
		 s sp=$o(^[nmsp]OBS(li,sp)) i sp="" q
		 //filtr na cislo spoje
		 i ($o(in("sp",""))'="")&('$d(in("sp",sp))) continue
	 	 s hrl="" f {
		 	  s val="" s hrl=$o(^[nmsp]OBS(li,sp,"T",hrl),1,val) i hrl="" q
		 	  // posilove spoje
		 	  i +$g(in("par",3)) {
			 	  s isposila=0
		 		  i (sp'<$g(arrset("arr",1,5))) s isposila=1
		 		  i +$p($g(val),":",32) s isposila=1
		 		  i 'isposila continue
		 	  }
		 	  // platnost spoje do
		 	  s hrlspdo=$p(val,":",21)
		 	  // filtr na casovou variantu spoje
		 	  s isok=1
		 	  //platna k
		 	  i +$g(in("sppl",1)) {
			 	  s isok=0
			 	  i (+$o(^[nmsp]OBS(li,sp,"T",(in("sppl",1)+.01)),-1))=hrl s isok=1
			 	  i hrlspdo&(hrlspdo<in("sppl",1)) s isok=0
		 	  }
		 	  //platna k a dal
		 	  i +$g(in("sppl",2)) {
			 	  s isok=0
			 	  i (+$o(^[nmsp]OBS(li,sp,"T",(in("sppl",2)+.01)),-1)=hrl)!(hrl'<in("sppl",2)) s isok=1
			 	  i hrlspdo&(hrlspdo<in("sppl",2)) s isok=0
		 	  }
		 	  //platna od a dal
		 	  i +$g(in("sppl",3)) {
			 	  s isok=0
			 	  i (hrl'<in("sppl",3)) s isok=1
		 	  }
		 	  i 'isok continue
		 	  //provozovna
		 	  s idprv=$p(val,":",18)
		 	  i (idprv'="") i ($d(in("prv"))&('$d(in("prv",idprv)))) continue
		 	  //stav
		 	  i $d(in("sta")) i (+in("sta"))'=(+$p(val,":",13)) continue
		 	  //zamek
		 	  i $d(in("par",1)) i (+in("par",1))'=(+$p(val,":",10)) continue
		 	  //nepouzite spoje
		 	  i +$g(in("par",2))=1 {
			 	  s used=0
			 	  i $d(@myglb@("arr",1,li,sp)) {
				 	  s myhrl=$o(@myglb@("arr",1,li,sp,""))
				 	  i myhrl {
					 	  s myhrl=myhrl+.01
		 		  	      s myhrl=$o(^[nmsp]OBS(li,sp,"T",myhrl),-1)
		 		  	      i myhrl="" {
			 		  	      s used=1
		 		  	      }
		 		  	      else {
			 		  	      i hrl'<myhrl s used=1
		 		  	      }
				 	  }
			 	  }
			 	  i used continue
		 	  }
		 	  s @myout@(li,sp,hrl)=""
		 	  //i '+$g(in("glb")) s out(li,sp,hrl)=""
		 	  //i +$g(in("glb")) s ^CacheTempJB(out,li,sp,hrl)=""
	 	 }
	 }
 }
 k @myglb
 q 0
 //
txtOmzSp(idfa,nmsp,in,out)
 // err=$$txtOmzSp(idfa,nmsp,.in,.out) - vrati omz spoje v textove podobe pro vypisy a tisk
 // in:
 //  in pole spoje s indexem "arr","omz",id)=data
 // out:
 //  out("arr","omz",id)=txt
 //
 n (idfa,nmsp,in,out) k out s $zt="err1"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s id="" f {
	 s val="" s id=$o(in("arr","omz",id),1,val) i id="" q
	 i $p(val,"@",2)="" continue
	 i id=11 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//jede jen
	 i id=12 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//jede také
	 i id=13 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//jede
	 i id=14 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//jede jen v sudých týdnech
	 i id=15 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//jede jen v lichých týdnech
	 i id=22 s out("arr","omz",id)=$$txtDatOdDo^JRapi($p(val,"@",2))	//nejede
	 //poznamka
	 i id=41 s out("arr","omz",id)=$p(val,"@",2)
	 //navaznosti, spoj vycka
	 i id=31 {
		 s vzor="spoj~vyčká v zast.~příjezdu~vlaku:linky:lodní dopravy z~nejvýše~minut"
		 f ind=1:1 {
			 s tmp=$p(vzor,"~",ind) i tmp="" q
			 s vzor(ind)=tmp
		 }
 		 f ind=2:1 {
	 		 s tmp=$p(val,"@",ind) i tmp="" q
 			 s idzst=$p(tmp,"#")
 			 s mm=$p(tmp,"#",2)
 			 s txt=""
 			 f ind1=3:1 {
	 			 s tmp1=$p(tmp,"#",ind1) i tmp1="" q
 				 i $p(tmp1,":")="V" s txt=txt_$p($g(vzor(4)),":",1)_" "_$p(tmp1,":",2)_"," continue
 				 i $p(tmp1,":")="L" s txt=txt_$p($g(vzor(4)),":",3)_" "_$p(tmp1,":",5)_"," continue
 				 s txt=txt_$g(vzor(1))_"e "_$p(tmp1,":",3)_" "_$p($g(vzor(4)),":",2)_" "_$p(tmp1,":",2)_","
 			 }
 		 	 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
 		 	 s nazzst=$g(arrzst("dta",1))
 		 	 s txt=$g(vzor(1))_" "_$g(vzor(2))_" "_nazzst_" "_$g(vzor(3))_" "_$p(txt,",",1,$l(txt,",")-1)
 		 	 i mm>0 s txt=txt_" "_$g(vzor(5))_" "_mm_" "_$g(vzor(6))
 		 	 i $g(out("arr","omz",id))'="" s out("arr","omz",id)=$g(out("arr","omz",id))_", "
 		 	 s out("arr","omz",id)=$g(out("arr","omz",id))_txt
 		 	 s out("arr","omz",id,ind)=txt
 		 }	
	 }
	 //navaznosti, na spoj navazuje
	 i id=32 {
		 s vzor="na spoj~navazuje v zast.~spoj~linky~do~vlak~lodní doprava"
		 f ind=1:1 {
			 s tmp=$p(vzor,"~",ind)
			 i tmp="" q
			 s vzor(ind)=tmp
		 }
 		 f ind=2:1 {
	 		 s tmp=$p(val,"@",ind) i tmp="" q
	 		 s txt=""
	 		 s idzst=$p(tmp,"#")
 			 f ind1=2:1 {
	 			 s tmp1=$p(tmp,"#",ind1) i tmp1="" q
 				 // netisknutelna poznamka
 				 i $p(tmp1,":",4)=2 continue
 				 i $p(tmp1,":",6)="V" {
	 				 s txt=txt_" "_$g(vzor(6))_" "_$p(tmp1,":")
 				 }
 				 i $p(tmp1,":",6)="L" {
	 				 s txt=txt_" "_$g(vzor(7))
 				 }
 				 i ($p(tmp1,":",6)="A")!($p(tmp1,":",6)="") {
	 				 s txt=txt_" "_$g(vzor(3))_" "_$p(tmp1,":",2)_" "_$g(vzor(4))_" "_$p(tmp1,":")
 				 }
 				 i $p(tmp1,":",3)'="" {
	 				 s txt=txt_" "_$g(vzor(5))_" "_$p(tmp1,":",3)
 				 }
 				 s txt=txt_","
 			 }
 			 i (txt'="") {
	 			 s txt=$p(txt,",",1,$l(txt,",")-1)
 			 }
 			 i (txt'="") {
	 			 k arrzst s err=$$gZst^OBapiED(idfa,nmsp,idzst,"",.arrzst)
 				 s nazzst=$g(arrzst("dta",1))	
	 			 s txt=$g(vzor(1))_" "_$g(vzor(2))_" "_nazzst_" "_txt_" "
 			 }
 			 i (txt'="") {
	 			 i $g(out("arr","omz",id))'="" s out("arr","omz",id)=$g(out("arr","omz",id))_", "
 		 	 	 s out("arr","omz",id)=$g(out("arr","omz",id))_txt
 		 	 	 s out("arr","omz",id,ind)=txt
 			 }
	 	 }
	 }
	 //navaznosti, spoj pokracuje
	 i id=34 {
		 s vzor="spoj~pokračuje na lince číslo ~spojem číslo~do zastávky"
 		 f ind=1:1 {
	 		 s tmp=$p(vzor,"~",ind)
	 		 i tmp="" q
	 		 s vzor(ind)=tmp
 		 }
  		 s txt=$g(vzor(1))_" "_$g(vzor(2))_" "_$p(val,":",2)_" "_$g(vzor(3))_" "_$p(val,":",3)_" "_$g(vzor(4))_" "_$p(val,":",4)
  		 s out("arr","omz",id)=txt
  	 }
 }
 q 0
 //
fndNepSp(idfa,nmsp,in,out)
 // err=$$fndNepSp(idfa,nmsp,.in,.out) - vyhleda nepouzite spoje
 // in:
 //  in("glb")=0/1 = pokud je 1, vysledek se zapise do globalu ^CacheTempJB(wrk) a v out=wrk
 // out:
 //  out=wrk je-li in("glb")=0
 //
 n (idfa,nmsp,in,out) k out s $zt="err1"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s wrk=$$gWrkJB^OBapiED()
 k out i +$g(in("glb")) s out=$$gWrkJB^OBapiED()
 s mywrk=$$gWrkALVAAD^OBapiED() s myglb="^||wrk.ALVA.AD("_mywrk_")" k @myglb
 // nepouzite spoje, pripravim si spoje z turnusu do @myglb@("arr",1,li,sp,hrl,zp,tu)=""
 s err=$$gAllTurLiSp^OBapiED(idfa,nmsp,myglb,"","") zt:+err "merr" s err=""
 // vyhledam neobsazene spoje
 s li="" f {
	 s li=$o(^[nmsp]OBS(li)) i li="" q
 	 s sp="" f {
	 	 s sp=$o(^[nmsp]OBS(li,sp)) i sp="" q
	 	 i $d(@myglb@("arr",2,li,sp)) continue
 		 s hrl="" f {
	 		 s hrl=$o(^[nmsp]OBS(li,sp,"T",hrl)) i hrl="" q
 		 	 i '+$g(in("glb")) s out("arr",li,sp,hrl)=""
 		 	 i +$g(in("glb")) s ^CacheTempJB(out,"arr",li,sp,hrl)=""
 		 }
 	 }
 }
 k @myglb
 q 0
 //
chngSpLocZst(idfa,nmsp,fromczs,toczs,in,out)
 // err=$$chngLocZst(idfa,nmsp,fromczs,toczs,.in,.out) - přečíslování lokální zastávky
 //  - in  -
 //  - out -
 s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(fromczs)="" q "1~fromczs="
 i $g(toczs)="" q "1~toczs="
 //
 n li,sp,val,hrl,czs,cnt
 //
 s li="" f  s li=$o(^[nmsp]OBS(li)) q:li=""  d
 .s sp="" f  s sp=$o(^[nmsp]OBS(li,sp)) q:sp=""  d
 ..// bez casove varianty
 ..s val=$g(^[nmsp]OBS(li,sp))
 ..f cnt=6,7 d:$p(val,":",cnt)["/"
 ...q:+$p(val,":",cnt)'=+fromczs
 ...s $p(^[nmsp]OBS(li,sp),":",cnt)=toczs_"/L"
 ..// casova varianta
 ..s hrl="" f  s hrl=$o(^[nmsp]OBS(li,sp,"T",hrl)) q:hrl=""  d
 ...s val=$g(^[nmsp]OBS(li,sp,"T",hrl))
 ...f cnt=6,7 d:$p(val,":",cnt)["/"
 ....q:+$p(val,":",cnt)'=+fromczs
 ....s $p(^[nmsp]OBS(li,sp,"T",hrl),":",cnt)=toczs_"/L"
 q 0
 //
isSpLocZst(idfa,nmsp,czs,in,out)
 // err=isSpLocZst(idfa,nmsp,czs,in,out) - kontrola na výskyt lokální zastávky na spojích
 //  - in  -
 //  - out - počet výskytu
 //    out(li,sp)=""
 //    out(li,sp,hrl)=""
 s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(czs)="" q "1~czs="
 //
 n li,sp,val,hrl,cnt
 ;;
 s li="" f  s li=$o(^[nmsp]OBS(li)) q:li=""  d
 .s sp="" f  s sp=$o(^[nmsp]OBS(li,sp)) q:sp=""  d
 ..// bez casove varianty
 ..s val=$g(^[nmsp]OBS(li,sp))
 ..f cnt=6,7 d:$p(val,":",cnt)["/"
 ...q:+$p(val,":",cnt)'=+czs
 ...s out=$g(out)+1 s out(li,sp)=""
 ..// casova varianta
 ..s hrl="" f  s hrl=$o(^[nmsp]OBS(li,sp,"T",hrl)) q:hrl=""  d
 ...s val=$g(^[nmsp]OBS(li,sp,"T",hrl))
 ...f cnt=6,7 d:$p(val,":",cnt)["/"
 ....q:+$p(val,":",cnt)'=+czs
 ....s out=$g(out)+1 s out(li,sp,hrl)=""
 q 0
 //
lBlockSp(idfa,nmsp,in,out)
 // s err=$$lBlockSp(idfa,nmsp,.in,.out) - seznam blokovanych spoju proti prevodu z JR
 // out:
 // out("arr",li,sp)
 n (idfa,nmsp,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s li="" f  s li=$o(^[nmsp]OBSzam(li)) q:li=""  d
 .s sp="" f  s sp=$o(^[nmsp]OBSzam(li,sp)) q:sp=""  d 
 ..s out("arr",li,sp)=""
 q 0
 //
sBlockSp(idfa,nmsp,li,sp,in,out)
 // s err=$$sBlockSp(idfa,nmsp,li,sp,.in,.out) - zapis blokovaneho spoje proti prevodu z JR
 // in:
 // out:
 n (idfa,nmsp,li,sp,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i '$g(li)="" q "1~li="
 i '$g(sp)="" q "1~sp="
 s li=+li s sp=+sp
 s ^[nmsp]OBSzam(li,sp)=$h_":"_""
 q 0
dBlockSp(idfa,nmsp,in,out)
 // s err=$$dBlockSp(idfa,nmsp,.in,.out) - seznam blokovanych spoju proti prevodu z JR
 // in:
 // in("arr",li,sp)
 // out:
 n (idfa,nmsp,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s li="" f  s li=$o(in("arr",li)) q:li=""  d
 .s sp="" f  s sp=$o(in("arr",li,sp)) q:sp=""  d
 ..k ^[nmsp]OBSzam(li,sp)
 q 0
gMaSp(idfa,nmsp,zp,li,sp,hrl,in,out)
 //w $$gMaSp^OBapiED("ZN_PSOTA","AD_V",101,104,9,+$h,"",.out) w !,zw out
 // s err=$$gMaSp(idfa,nmsp,zp,li,sp,hrl,.in,.out) - vrati doporucene manipulace pro spoj 
 // out("dta",1)=doporucena manipulace pred
 // out("dta",2)=doporucena manipulace po
 // out("dta",3)=doporuceny pocet manipulaci
 n (idfa,nmsp,zp,li,sp,hrl,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 //data spoje
 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) s err=""
 //druh spoje
 s dsp=$g(arrsp("dta",4)) s:'dsp dsp=1
 s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,dsp,"",.out) zt:+err "merr" s err=""
 q 0
gMaDsp(idfa,nmsp,zp,dsp,in,out)
 n (idfa,nmsp,zp,dsp,in,out) s $zt="err" k out
 //w $$gMaDsp^OBapiED("ZN_PSOTA","AD_V",101,1,"",.out) w !,zw out
 // s err=$$gMaSp(idfa,nmsp,zp,dsp,.in,.out) - vrati doporucene manipulace pro druh spoje
 // out("dta",1)=doporucena manipulace pred
 // out("dta",2)=doporucena manipulace po
 // out("dta",3)=doporuceny pocet manipulaci
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(dsp)="" q "1~dsp="
 //nastaveni programu
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) s err=""
 //id provozovny
 s idprv=zp#100
 //data manipulaci 
 f cnt=1:1:3 d
 .//data pro firmu
 .s out("dta",cnt)=$p($g(arrset("arr",4,10,dsp)),"~",cnt)
 .//data pro provoz
 .i $p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",cnt)'="" d
 ..s out("dta",cnt)=$p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",cnt)
 q 0
gNInfoSp(idfa,nmsp,li,sp,hrl,in,out)
 //out("dta",1)=informace k neodjetemu spoji
 //out("dta",2)=hrl zapisu
 //out("idos")=mlp_"~"_loginname_"~"_fullname
 n (idfa,nmsp,li,sp,hrl,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 s val=$g(^[nmsp]OBSINF(idfa,li,sp,1,hrl))
 s out("dta",1)=$lg(val,1)
 s out("dta",2)=$lg(val,2)
 s out("idos")=$lg(val,3)
 q 0
sNInfoSp(idfa,nmsp,li,sp,hrl,in,out)
 //in("dta",1)=informace ke neodjetemu spoji
 //in("idos")=mlp_"~"_loginname_"~"_fullname
 n (idfa,nmsp,li,sp,hrl,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(li)="" q "1~li="
 i $g(sp)="" q "1~sp="
 i $g(hrl)="" q "1~hrl="
 k ^[nmsp]OBSINF(idfa,li,sp,1,hrl)
 s ^[nmsp]OBSINF(idfa,li,sp,1,hrl)=$lb($g(in("dta",1)),$h,$g(in("idos")))
 q 0
lCnvTabPrvSp(idfa,nmsp,in,out)
 // s err=$$lCnvTabPrvSp(idfa,nmsp,.in,.out) - konverzni tabulka pro provozovnu pri prevodu spoju z JR
 // out:
 // out("arr",faJR,prvJR,"dta",1)=prvAD
 n (idfa,nmsp,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s faJR="" f  s faJR=$o(^[nmsp]OI(idfa,"jb","spoje","set","cnvjrprv",faJR)) q:faJR=""  d
 .s prvJR="" f  s prvJR=$o(^[nmsp]OI(idfa,"jb","spoje","set","cnvjrprv",faJR,prvJR)) q:prvJR=""  d
 ..s val=$g(^[nmsp]OI(idfa,"jb","spoje","set","cnvjrprv",faJR,prvJR))
 ..s out("arr",faJR,prvJR,"dta",1)=$p(val,"~",1)
 q 0
 //
sCnvTabPrvSp(idfa,nmsp,faJR,prvJR,in,out)
 // s err=$$sCnvTabPrvSp(idfa,nmsp,faJR,prvJR,in,out) - zapis do konverzni tabulky pro provozovnu pri prevodu spoju z JR
 // in("dta",1)=prvAD
 // out:
 n (idfa,nmsp,faJR,prvJR,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(faJR)="" q "1~faJR="
 i $g(prvJR)="" q "1~prvJR="
 s $p(^[nmsp]OI(idfa,"jb","spoje","set","cnvjrprv",faJR,prvJR),"~",1)=$g(in("dta",1))
 q 0
dCnvTabPrvSp(idfa,nmsp,in,out)
 // s err=$$dCnvTabPrvSp(idfa,nmsp,.in,.out) - ruseni v konverzni tabulce pro provozovnu pri prevodu spoju z JR
 // in:
 // in("arr",faJR,prvJR)
 // out:
 n (idfa,nmsp,in,out) s $zt="err" k out
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s faJR="" f  s faJR=$o(in("arr",faJR)) q:faJR=""  d
 .s prvJR="" f  s prvJR=$o(in("arr",faJR,prvJR)) q:prvJR=""  d
 ..k ^[nmsp]OI(idfa,"jb","spoje","set","cnvjrprv",faJR,prvJR)
 q 0
 //
gPcSP() q 34		// pocet udaju v zakladni vete spoje
 //
err s $zt="" q "1~"_$ze
err1 s $zt="" k out q:$g(err)'="" "1~"_err  q "1~"_$ze

]]></Routine>


<Routine name="OBapiEDSp1" type="INT" languagemode="0" timestamp="65535,53128.447103"><![CDATA[
OBapiEDSp1 q
 // =============
 // linky a spoje
 // =============
impSp(idfa,nmsp,in,out)
 // s err=$$impSp(idfa,nmsp,.in,.out)
 // in:
 // in("id",sku|l|linka)=""
 // in("par",1)=mmPauza1~"mmPauza2~mmPauzaKm (limit maskovani cekani pro obyc. spoje)
 // in("par",2)=mmPauzaMHD                   (limit maskovani cekani pro MHD. spoje)
 // in("par",3)=iddop (iddop=fa)             (dopravce)
 // in("par",4)=idprv 			             (provozovna)
 // in("par",5)=pkm							 (import presnych km 0/1)
 // in("par",6)=platido						 (import plati do 0/1)
 // in("mlp",1)=mlp
 // in("mlp",2)=fullname
 // out:
 // out("dta",1)=             ... pocet nactenych spoju 
 // out("arr",1,li,sp,hrl)="" ... importované spoje
 // out("msg",cnt)=           ... zpravy
 n (idfa,nmsp,in,out) s $zt="err" k out
 s hrlimp=$h s out("dta",1)=0
 // nactu nastaveni pro prepravni systemy a poznacim zapnutou evidenci
 k tmparr
 s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.tmparr) zt:+err "merr" s err=""
 s isprs=+$g(tmparr("arr",1,1))
 k tmparr
 // nactu uzamcene spoje
 k arrblksp s err=$$lBlockSp^OBapiED(idfa,nmsp,"",.arrblksp) zt:+err "merr" s err=""
 // ====================
 s id="" f  s id=$o(in("id",id)) q:id=""  d
 .q:$p(id,"|",2)'="l"
 .s sku=$p(id,"|",1) s lin=$p(id,"|",3) s msgili=""
 .k arrlprp s err=$$gPrpLin^JRapi(idfa,nmsp,sku,lin,"",.arrlprp) zt:+err "merr" s err=""
 .// kontrola na typ JR
 .s typl=$g(arrlprp("dta",2))
 .i typl=7 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu souhrnný JŘ, spoje nelze převést" q // souhrnny JR
 .i typl=8 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu přehledový JŘ, spoje nelze převést" q // prehledovy JR
 .// ==================
 .// kontrola na plati od
 .s hrlod=$p($g(arrlprp("dta",2)),"~",1)
 .i hrlod="" s out("msg",$i(out("msg")))="linka "_(+lin)_" nemá v JŘ datum, odkdy platí-její, spoje nelze převést" q
 .s hrlod=$$dn^OBapiED(hrlod)
 .// ====================
 .s msgili=$p("tar.km~pře.km","~",($g(in("par",5))+1))_" "_+lin_"/"_$$nd^OBapiED(hrlod,0)_"/"
 .k arrltrs s err=$$gTrsLin^JRapi(idfa,nmsp,sku,lin,"",.arrltrs) zt:+err "merr" s err=""
 .k arrlprt s err=$$gSetLinPrt^JRapi(idfa,nmsp,sku,lin,"",.arrlprt) zt:+err "merr" s err=""
 .k arrlsp s err=$$lSpLin^JRapi(idfa,nmsp,sku,lin,"",.arrlsp) zt:+err "merr" s err=""
 .s sm="" f  s sm=$o(arrlsp("arr",sm)) q:sm=""  d
 ..s sp="" f  s sp=$o(arrlsp("arr",sm,sp)) q:sp=""  d
 ...// spoje >999 zatim nenacitam
 ...//i sp>999 s out("msg",$i(out("msg")))="číslo spoje "_(+lin)_"/"_sp_" je větší než 999, nelze jej převést" q
 ...// kontrola, zda neni spoj blokovany proti prevodu
 ...i +$d(arrblksp("arr",+lin,+sp)) s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_sp_" je blokován proti převodu, nelze jej převést" q
 ...// kontrola, zda casova varianta spoje existuje a zda te neni blokovana proti prevodu
 ...k isSpAD s err=$$isSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,"",.isSpAD) zt:+err "merr" s err=""
 ...i +$g(isSpAD) s isBlkTmVarSp=0 d  i isBlkTmVarSp q
 ....k tmparr s err=$$gSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,"",.tmparr) zt:+err "merr" s err=""
 ....i +$g(tmparr("dta",10)) s isBlkTmVarSp=1
 ....k tmparr
 ....i 'isBlkTmVarSp q
 ....s out("msg",$i(out("msg")))="časová varianta spoje "_(+lin)_"/"_sp_"/"_$$nd^OBapiED(hrlod,0)_"/"_" je blokována proti převodu, nelze jej převést"
 ...// data spoje z JR
 ...k arrsp s err=$$gSpLin^JRapi(idfa,nmsp,sku,lin,sm,sp,"",.arrsp) zt:+err "merr" s err=""
 ...// ===============
 ...// kontrola dopravce
 ...s dopsp=$g(arrsp("dta",22)) q:dopsp=""  q:$p(dopsp,"~",1)'=$g(in("par",3))
 ...// kontrola provozovny (nemusi byt zadana)
 ...i $g(in("par",4))'="" q:$p(dopsp,"~",2)'=$g(in("par",4))
 ...// =================
 ...// kontrola na typ spoje pro AD
 ...i $g(arrsp("dta",40))=7 s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_sp_" je typu souhrnný JŘ, spoj nelze převést" q // souhrnny JR
 ...i $g(arrsp("dta",40))=8 s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_sp_" je typu přehledový JŘ, spoj nelze převést" q // souhrnny JR
 ...// kontrola na evidenci PRS na importovanzch spojich
 ...i isprs i ($g(arrsp("dta",28))="")&($o(arrsp("prs",""))="") s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_sp_" nemá evidovaný přepravní systém !"
 ...// kontrola na stridani ridicu a rozdeleni spoje
 ...k arrpartsp s err=$$mkPartSp(idfa,nmsp,+sp,500,.arrsp,.arrpartsp) zt:+err "merr" s err=""
 ...s par=-1 i sp#2 s par=1
 ...s tcod="" f  s tcod=$o(arrpartsp("arr",1,tcod),par) q:(tcod="")  d
 ....s tcdo=$o(arrpartsp("arr",1,tcod),par) i tcdo="" q
 ....s mysp=$g(arrpartsp("arr",1,tcod))
 ....//	znova kontrola na blokovany spoj - muze se menit jeho cislo
 ....i +$d(arrblksp("arr",+lin,+mysp)) s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_mysp_" je blokován proti převodu, nelze jej převést" q
 ....// kontrola, zda casova varianta spoje existuje a zda te neni blokovana proti prevodu
 ....k isSpAD s err=$$isSp^OBapiED(idfa,nmsp,+lin,+mysp,hrlod,"",.isSpAD) zt:+err "merr" s err=""
 ....i +$g(isSpAD) s isBlkTmVarSp=0 d  i isBlkTmVarSp q
 .....k tmparr s err=$$gSp^OBapiED(idfa,nmsp,+lin,+mysp,hrlod,"",.tmparr) zt:+err "merr" s err=""
 .....i +$g(tmparr("dta",10)) s isBlkTmVarSp=1
 .....k tmparr
 .....i 'isBlkTmVarSp q
 .....s out("msg",$i(out("msg")))="časová varianta spoje "_(+lin)_"/"_mysp_"/"_$$nd^OBapiED(hrlod,0)_"/"_" je blokována proti převodu, nelze jej převést"
 ....// vytvorim ze spoje pole pro zapis do AD
 ....k i
 ....m i("par",1)=in("par",1)
 ....m i("par",2)=in("par",2)
 ....m i("par",3)=in("par",5)
 ....m i("par",4)=in("par",6)
 ....s i("dta",1)=tcod
 ....s i("dta",2)=tcdo
 ....s i("dta",4)=$p($g(arrlprt("dta",19)),"~",2)
 ....s i("dta",5)=sm
 ....k arr s err=$$mkDtaSpAD(idfa,nmsp,.i,.arrlprp,.arrltrs,.arrsp,.arr) zt:+err "merr" s err=""
 ....// ======================================
 ....// doplnim originalni cislo spoje
 ....i mysp'=sp s arr("dta",24)=sp
 ....// ==============================
 ....// nactu predchozi variantu spoje z AD
 ....k arrosp s err=$$gSp^OBapiED(idfa,nmsp,+lin,+mysp,(hrlod-.01),"",.arrosp) zt:+err "merr" s err=""
 ....// ===================================
 ....// uprava spoje podle predchozi varianty
 ....// phm
 ....s arr("dta",9)=$g(arrosp("dta",9))
 ....// poznamka
 ....i ($g(arr("arr","omz",41))="")&($g(arrosp("arr","omz",41))'="") s arr("arr","omz",41)=$g(arrosp("arr","omz",41))
 ....// vykonova sazba za spoj (SA)
 ....s arr("dta",31)=$g(arrosp("dta",31))
 ....// =====================================
 ....// zapis spoje do db
 ....// sledovani historie
 ....s arr("par",1)=1
 ....s arr("par",1,"dta",1)=hrlimp
 ....s arr("par",1,"dta",2)=sku
 ....s arr("par",1,"dta",3)=$g(in("mlp",2))
 ....s arr("par",1,"dta",4)="SPOJ"
 ....s arr("par",1,"dta",5)=$g(in("par",5))
 ....s err=$$sSp^OBapiED(idfa,nmsp,+lin,+mysp,hrlod,.arr,"") zt:+err "merr" s err=""
 ....s out("dta",1)=out("dta",1)+1
 ....s out("arr",1,+lin,+mysp,hrlod)=""
 ....s msgili=$g(msgili)_+mysp_","
 ....// =================
 .i $e(msgili,$l(msgili))="," s msgili=$e(msgili,1,$l(msgili)-1)
 .s out("msg",$i(out("msg")))=msgili
 s out("msg",$i(out("msg")))="bylo načteno "_+out("dta",1)_" spojů "
 q 0
mkPartSp(idfa,nmsp,sp,spcadd,arrsp,arrpartsp)
 //rozdeleni spoje na casti podle toho, zda je v nem zadano stridani
 //vytvori pole arrpartsp("arr",1,tc)=sp (tcod + cislo spoje), posledni zaznam je arrpartsp("arr",1,tcdo)=""
 n (idfa,nmsp,sp,spcadd,arrsp,arrpartsp) s $zt="err" k arrpartsp
 s tcod=$g(arrsp("dta",1))
 s tcdo=$g(arrsp("dta",2))
 s arrpartsp("arr",1,tcod)=sp
 s arrpartsp("arr",1,tcdo)=""
 s numpart=0
 s par=-1 i sp#2 s par=1
 f tc=tcod:par:tcdo {
	 //je stridani a cas v tc
	 i ($g(arrsp("trs",tc,6))="X")&(($g(arrsp("trs",tc,2))'="<")&($g(arrsp("trs",tc,2))'="|")) {
		 s nxtsp=(sp+spcadd+(numpart*100))
		 s numpart=numpart+1
		 s arrpartsp("arr",1,tc)=nxtsp
	 }
 }
 q 0
impSpPrs(idfa,nmsp,in,out)
 // s err=$$impSpPrs(idfa,nmsp,.in,.out)
 // in:
 // in("id",sku|l|linka)=""
 // in("par",1)=iddop (iddop=fa)             (dopravce)
 // in("par",2)=idprv 			             (provozovna)
 // in("mlp",1)=mlp
 // in("mlp",2)=fullname
 // out:
 // out("dta",1)=             ... pocet nactenych spoju 
 // out("arr",1,li,sp,hrl)="" ... importované prs ze spoju
 // out("msg",cnt)=           ... zpravy
 n (idfa,nmsp,in,out) s $zt="err" k out
 s hrlimp=$h s out("dta",1)=0
 // nactu uzamcene spoje
 k arrblksp s err=$$lBlockSp^OBapiED(idfa,nmsp,"",.arrblksp) zt:+err "merr" s err=""
 // ====================
 s id="" f  s id=$o(in("id",id)) q:id=""  d
 .q:$p(id,"|",2)'="l"
 .s sku=$p(id,"|",1) s lin=$p(id,"|",3) s msgili=""
 .k arrlprp s err=$$gPrpLin^JRapi(idfa,nmsp,sku,lin,"",.arrlprp) zt:+err "merr" s err=""
 .// kontrola na typ JR
 .s typl=$g(arrlprp("dta",2))
 .i typl=7 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu souhrnný JŘ, spoje nelze převést" q 	// souhrnny JR
 .i typl=8 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu přehledový JŘ, spoje nelze převést" q	// prehledovy JR
 .// ==================
 .// kontrola na plati od
 .s hrlod=$p($g(arrlprp("dta",2)),"~",1)
 .i hrlod="" s out("msg",$i(out("msg")))="linka "_(+lin)_" nemá v JŘ datum, odkdy platí-její, přepravní systémy nelze aktualizovat" q
 .s hrlod=$$dn^OBapiED(hrlod)
 .// ====================
 .s msgili=+lin_"/"_$$nd^OBapiED(hrlod,0)_"/"
 .k arrlsp s err=$$lSpLin^JRapi(idfa,nmsp,sku,lin,"",.arrlsp) zt:+err "merr" s err=""
 .s sm="" f  s sm=$o(arrlsp("arr",sm)) q:sm=""  d
 ..s sp="" f  s sp=$o(arrlsp("arr",sm,sp)) q:sp=""  d
 ...// kontrola, zda neni spoj blokovany proti prevodu
 ...i +$d(arrblksp("arr",+lin,+sp)) s out("msg",$i(out("msg")))="spoj "_(+lin)_"/"_sp_" je blokován proti převodu, přepravní systémy nelze aktualizovat" q
 ...// kontrola, zda casova varianta spoje existuje a zda te neni blokovana proti prevodu
 ...k isSpAD s err=$$isSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,"",.isSpAD) zt:+err "merr" s err=""
 ...i '$g(isSpAD) s out("msg",$i(out("msg")))="v db není časová varianta spoje "_(+lin)_"/"_sp_"/"_$$nd^OBapiED(hrlod,0)_"/"_" přepravní systémy nelze aktualizovat" q
 ...i +$g(isSpAD) s isBlkTmVarSp=0 d  i isBlkTmVarSp q
 ....k tmparr s err=$$gSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,"",.tmparr) zt:+err "merr" s err=""
 ....i +$g(tmparr("dta",10)) s isBlkTmVarSp=1
 ....k tmparr
 ....i 'isBlkTmVarSp q
 ....s out("msg",$i(out("msg")))="časová varianta spoje "_(+lin)_"/"_sp_"/"_$$nd^OBapiED(hrlod,0)_"/"_" je blokována proti převodu, přepravní systémy nelze aktualizovat"
 ...// data spoje z JR
 ...k arrsp s err=$$gSpLin^JRapi(idfa,nmsp,sku,lin,sm,sp,"",.arrsp) zt:+err "merr" s err=""
 ...// ===============
 ...// kontrola dopravce
 ...s dopsp=$g(arrsp("dta",22)) q:dopsp=""  q:$p(dopsp,"~",1)'=$g(in("par",1))
 ...// kontrola provozovny (nemusi byt zadana)
 ...i $g(in("par",2))'="" q:$p(dopsp,"~",2)'=$g(in("par",2))
 ...// =================
 ...// nactu data spoje z AD
 ...k arrspad s err=$$gSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,"",.arrspad) zt:+err "merr" s err=""
 ...// ===================================
 ...// aktualizace PRS
 ...// ===============
 ...s arrspad("dta",12)=""
 ...k arrspad("arr","prs")
 ...s arrspad("dta",12)=$g(arrsp("dta",28))
 ...i $o(arrsp("prs",""))'="" d
 ....s arrspad("dta",12)=""
 ....// rozdeleni km v pomeru prs
 ....k varr k sarr s varr=$g(arrspad("dta",5)) m sarr=arrsp("prs")
 ....s err=$$rzpArr^OBapiED(.varr,.sarr,1) zt:+err "merr" s err=""
 ....m arrspad("arr","prs")=varr
 ...// ===============
 ...// zapis spoje do db
 ...// sledovani historie
 ...s arrspad("par",1)=1
 ...s arrspad("par",1,"dta",1)=hrlimp
 ...s arrspad("par",1,"dta",2)=sku
 ...s arrspad("par",1,"dta",3)=$g(in("mlp",2))
 ...s arrspad("par",1,"dta",4)="PRS"
 ...s err=$$sSp^OBapiED(idfa,nmsp,+lin,+sp,hrlod,.arrspad,"") zt:+err "merr" s err=""
 ...s out("dta",1)=out("dta",1)+1
 ...s out("arr",1,+lin,+sp,hrlod)=""
 ...s msgili=$g(msgili)_+sp_","
 ...// =================
 .i $e(msgili,$l(msgili))="," s msgili=$e(msgili,1,$l(msgili)-1)
 .s out("msg",$i(out("msg")))=msgili
 s out("msg",$i(out("msg")))="přepravní systém byl aktualizován pro "_+out("dta",1)_" spojů "
 q 0
mkPosilSp(idfa,nmsp,sku,lin,sp,hrlod,psp,tco,tcd,mmpos,in,out)
 //// s err=$$mkPosilSp(idfa,nmsp,sku,lin,sp,hrl,psp,tco,tcd,mmpos,.in,.out)
 //// in:
 //// in("par",1)=mmPauza1~"mmPauza2~mmPauzaKm (limit maskovani cekani pro obyc. spoje)
 //// in("par",2)=mmPauzaMHD                   (limit maskovani cekani pro MHD. spoje)
 //// out:
 //// out("msg",cnt)=...
 n (idfa,nmsp,sku,lin,sp,hrlod,psp,tco,tcd,mmpos,in,out) s $zt="err" k out
 // nactu uzamcene spoje
 s lin=$$cnvCsLin^JRapi(lin)
 k arrlprp s err=$$gPrpLin^JRapi(idfa,nmsp,sku,lin,"",.arrlprp) zt:+err "merr" s err=""
 k arrlprt s err=$$gSetLinPrt^JRapi(idfa,nmsp,sku,lin,"",.arrlprt) zt:+err "merr" s err=""
 // kontrola na typ JR
 s typl=$g(arrlprp("dta",2))
 i typl=7 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu souhrnný JŘ, spoje nelze převést" q // souhrnny JR
 i typl=8 s out("msg",$i(out("msg")))="linka "_(+lin)_" je typu přehledový JŘ, spoje nelze převést" q // prehledovy JR
 k arrltrs s err=$$gTrsLin^JRapi(idfa,nmsp,sku,lin,"",.arrltrs) zt:+err "merr" s err=""
 s sm="Z" s:sp#2 sm="T"
 k arrsp s err=$$gSpLin^JRapi(idfa,nmsp,sku,lin,sm,sp,"",.arrsp) zt:+err "merr" s err=""
 // vytvorim ze spoje pole pro zapis do AD
 k i m i("par")=in("par") s i("dta",1)=tco s i("dta",2)=tcd s i("dta",3)=mmpos s i("dta",4)=$p($g(arrlprt("dta",19)),"~",2) s i("dta",5)=sm
 k arr s err=$$mkDtaSpAD(idfa,nmsp,.i,.arrlprp,.arrltrs,.arrsp,.arr) zt:+err "merr" s err=""
 // ======================================
 // nactu predchozi variantu spoje z AD
 k arrosp s err=$$gSp^OBapiED(idfa,nmsp,+lin,+psp,(hrlod-.01),"",.arrosp) zt:+err "merr" s err=""
 // ===================================
 // uprava spoje podle predchozi varianty
 // phm
 s arr("dta",9)=$g(arrosp("dta",9))
 // poznamka
 i ($g(arr("arr","omz",41))="")&($g(arrosp("arr","omz",41))'="") s arr("arr","omz",41)=$g(arrosp("arr","omz",41))
 // =====================================
 // posilovy spoj
 s arr("dta",32)=1
 // zapis spoje do db
 s err=$$sSp^OBapiED(idfa,nmsp,+lin,+psp,hrlod,.arr,"") zt:+err "merr" s err=""
 // =================
 s out("id")=(+lin)_"|"_(+psp)_"|"_hrlod
 q 0
mkDtaSpAD(idfa,nmsp,in,arrlprp,arrltrs,arrsp,out)
 // konverze spoje - struktura JR - AD
 // in("dta",1)=tco 	(je-li nastaveno, pak prepisuje tco od spoje - posilove nebo delene)
 // in("dta",2)=tcd 	(je-li nastaveno, pak prepisuje tcd od spoje - posilove nebo delene)
 // in("dta",3)=mm  	(je-li nastaveno, pak se spoj posune o mm min - posilove)
 // in("dta",4)=lIDS	(cislo linky v IDS)
 // in("dta",5)=smer 	(smer spoje T/Z)
 // in("par",1)=mmPauza1~"mmPauza2~mmPauzaKm (limit maskovani cekani pro obyc. spoje)
 // in("par",2)=mmPauzaMHD                   (limit maskovani cekani pro MHD. spoje)
 // in("par",3)=pkm							 (import presnych km 0/1)
 // in("par",4)=platido						 (import plati do 0/1)
 n (idfa,nmsp,in,arrlprp,arrltrs,arrsp,out) s $zt="err" k out
 // nactu seznam provozoven pro firmu pro prenos
 k arrprv s err=$$lPrv^MlJFapi(idfa,$$gFaNmsp^MlJFapi(),"",.arrprv) zt:+err "merr" s err=""
 // nactu konverzni tabulku pro provozovny
 k arrcnvpr s err=$$lCnvTabPrvSp^OBapiED(idfa,nmsp,"",.arrcnvpr) zt:+err "merr" s err=""
 // posun tco a tcd pro posilove spoje
 s tco=+$g(arrsp("dta",1)) s:+$g(in("dta",1)) tco=+$g(in("dta",1))
 s tcd=+$g(arrsp("dta",2)) s:+$g(in("dta",2)) tcd=+$g(in("dta",2))
 s mmpos=+$g(in("dta",3))
 // ==================================
 // limity pro pauzy
 s mmPauza1=+$p($g(in("par",1)),"~",1)
 s mmPauza2=+$p($g(in("par",1)),"~",2)
 s mmPauzaKm=+$p($g(in("par",1)),"~",3)
 s mmPauzaMHD=+$p($g(in("par",2)),"~",1)
 // import presnych km
 s pkm=+$g(in("par",3))
 // ==================
 // import plati do
 s pldo=+$g(in("par",4))
 //===================
 // odjezd(min)  = odjezd + cas + ceka + posun
 s out("dta",1)=(($g(arrsp("dta",4)))+($g(arrsp("trs",tco,2)))+($g(arrsp("trs",tco,3)))+mmpos)#1440
 // prijezd(min)
 s out("dta",2)=(($g(arrsp("dta",4))+$g(arrsp("trs",tcd,2)))+mmpos)#1440
 // jizda(min) prijezd-odjezd, pak odectu pauzy
 s out("dta",3)=$g(arrsp("trs",tcd,2))-($g(arrsp("trs",tco,2)))
 // druh km (konverze)
 // jr: 0 VNIT /1 DALK / 2 MEST / 3 MBVP / 4 MSVP / 5 PRIM/ 6 SMLV / 7 SOUH/ 8 PREH / 9 MESP / 10 VNIM
 // AD: 1 VNIT /2 DALK / 3 MEST / 4 PRIM / 5 MEZI / 6 SMLV
 // od linky
 s:+$g(arrlprp("dta",1))=0 out("dta",4)=1
 s:+$g(arrlprp("dta",1))=1 out("dta",4)=2
 s:+$g(arrlprp("dta",1))=2 out("dta",4)=3
 s:+$g(arrlprp("dta",1))=3 out("dta",4)=5
 s:+$g(arrlprp("dta",1))=4 out("dta",4)=5
 s:+$g(arrlprp("dta",1))=5 out("dta",4)=4
 s:+$g(arrlprp("dta",1))=6 out("dta",4)=6
 s:+$g(arrlprp("dta",1))=9 out("dta",4)=3
 s:+$g(arrlprp("dta",1))=10 out("dta",4)=1
 //od spoje, je-li nastaveno
 i $g(arrsp("dta",40))'="" d
 .s:+$g(arrsp("dta",40))=0 out("dta",4)=1
 .s:+$g(arrsp("dta",40))=1 out("dta",4)=2
 .s:+$g(arrsp("dta",40))=2 out("dta",4)=3
 .s:+$g(arrsp("dta",40))=3 out("dta",4)=5
 .s:+$g(arrsp("dta",40))=4 out("dta",4)=5
 .s:+$g(arrsp("dta",40))=5 out("dta",4)=4
 .s:+$g(arrsp("dta",40))=6 out("dta",4)=6
 .s:+$g(arrsp("dta",40))=9 out("dta",4)=3
 .s:+$g(arrsp("dta",40))=10 out("dta",4)=1
 //
 //kmSpoje ... pkm=0 nacitaji se tarifni, pkm=1 nacitaji se presne i tarifni
 s kmo=$g(arrsp("trs",tco,5)) s:'pkm kmo="" s:('kmo)&($g(arrsp("trs",tco,4))) kmo=$g(arrsp("trs",tco,4))
 s kmd=$g(arrsp("trs",tcd,5)) s:'pkm kmd="" s:('kmd)&($g(arrsp("trs",tcd,4))) kmd=$g(arrsp("trs",tcd,4))
 s out("dta",5)=(kmd-kmo)
 //zastavkaOd
 s out("dta",6)=$g(arrltrs("arr",tco,"dta",1))
 //zastavkaDo
 s out("dta",7)=$g(arrltrs("arr",tcd,"dta",1))
 //nastupisteOd
 s out("dta",29)=""
 i $g(in("dta",5))="T" s out("dta",29)=$g(arrltrs("arr",tco,"dta",4))
 i $g(in("dta",5))="Z" s out("dta",29)=$g(arrltrs("arr",tco,"dta",5))
 i $g(arrsp("trs",tco,8))'="" s out("dta",29)=$g(arrsp("trs",tco,8))
 //nastupisteDo
 s out("dta",30)=""
 i $g(in("dta",5))="T" s out("dta",30)=$g(arrltrs("arr",tcd,"dta",4))
 i $g(in("dta",5))="Z" s out("dta",30)=$g(arrltrs("arr",tcd,"dta",5))
 i $g(arrsp("trs",tcd,8))'="" s out("dta",30)=$g(arrsp("trs",tcd,8))
 //platnost
 s out("dta",8)=$$pldHex^OBapiED($g(arrsp("dta",8)))_$p($$pltHex^OBapiED($g(arrsp("dta",7)))_$$pldHex^OBapiED($g(arrsp("dta",8))),"~")
 //phm
 s out("dta",9)=""
 //neJR (zamek proti prevodu z jr)
 s out("dta",10)=0
 //hrlPrevodu
 s out("dta",11)=+$h
 //prs
 s out("dta",12)=$g(arrsp("dta",28))
 //statut
 s out("dta",13)=0
 //kmt
 s kmo=$g(arrsp("trs",tco,4)) s kmd=$g(arrsp("trs",tcd,4))
 s out("dta",14)=(kmd-kmo)
 //kmpresne
 s kmo=$g(arrsp("trs",tco,5)) s:'pkm kmo="" s:('kmo)&($g(arrsp("trs",tco,4))) kmo=$g(arrsp("trs",tco,4))
 s kmd=$g(arrsp("trs",tcd,5)) s:'pkm kmd="" s:('kmd)&($g(arrsp("trs",tcd,4))) kmd=$g(arrsp("trs",tcd,4))
 s out("dta",15)=(kmd-kmo)
 //pro pripad, ze km vyjdou zaporne (mix tarifnich a presnych km) 
 i out("dta",15)<0 s out("dta",15)=""
 // tydeni platnost
 s out("dta",16)=$g(arrsp("dta",7))
 //dlouhodoba platnost
 s out("dta",17)=$g(arrsp("dta",8))
 //provozovna
 s idfir=$p($g(arrsp("dta",22)),"~",1)
 s idprv=$p($g(arrsp("dta",22)),"~",2)
 //konverze provozovny
 i (idfir'="")&(idprv'="") d
 .i $g(arrcnvpr("arr",idfir,idprv,"dta",1))'="" s idprv=$g(arrcnvpr("arr",idfir,idprv,"dta",1))
 //kontrola, zda provoz existuje
 i idprv'="" i '$d(arrprv("arr",idprv)) s idprv=""
 s out("dta",18)=idprv
 //radiobus
 s out("dta",19)=$g(arrsp("dta",30))
 // kolikadenni je spoj
 s out("dta",20)=(((($g(arrsp("dta",4))+$g(arrsp("trs",tcd,2)))+mmpos)\1440)+1)
 // plati do
 i +pldo d
 .s datdo=$p($g(arrlprp("dta",2)),"~",2)
 .i +datdo s out("dta",21)=$$dn^OBapiED(datdo)
 // cislo linky ids
 s out("dta",22)=$g(in("dta",4))
 // objizdkovy spoj
 s out("dta",23)=($g(arrlprp("dta",3))=1)
 // jede jen podminecne
 s out("dta",25)=($g(arrsp("dta",34))=1)
 // nizkokapacitni autobus
 s out("dta",26)=($g(arrsp("dta",21))=1)
 // bezbarierove pristupne vozidlo
 s out("dta",27)=($g(arrsp("dta",16))=1)
 // castecne bezbarierove pristupne vozidlo
 s out("dta",28)=($g(arrsp("dta",33))=1)
 //posilovy spoj
 s out("dta",32)=$g(arrsp("dta",35))
 //preprava jizdnich kol
 s out("dta",33)=(+$g(arrsp("dta",20)))
 //negativni znacka
 s out("dta",34)=$g(arrsp("dta",29))
 // pole
 // dohledani trasy, pauz - cekani ve spoji + pocet zastavek
 s limitmmpau=mmPauza1 i mmPauzaKm i $g(out("dta",5))>mmPauzaKm s limitmmpau=mmPauza2
 i $g(out("dta",4))=3 s limitmmpau=mmPauzaMHD
 s par=1 s:tco>tcd par=-1
 s cnt=0
 f tc=tco:par:tcd d
 .s cnt=$i(cnt)
 .s $p(out("arr","trs",cnt),":",1)=tc 								//tc
 .s $p(out("arr","trs",cnt),":",2)=$g(arrltrs("arr",tc,"dta",1))	//idzast
 .s mmtc=$g(arrsp("trs",tc,2)) i +mmtc s mmtc=mmtc-$g(arrsp("trs",tco,2))
 .s $p(out("arr","trs",cnt),":",3)=mmtc					 			//mm < |
 .s $p(out("arr","trs",cnt),":",4)=$g(arrsp("trs",tc,3)) 			//mmcek
 .s kmtc=$g(arrsp("trs",tc,4)) i kmtc s kmtc=kmtc-$g(arrsp("trs",tco,4))
 .s $p(out("arr","trs",cnt),":",5)=kmtc 							//kmtar
 .s kmtc=$g(arrsp("trs",tc,5)) d
 ..i (kmtc&($g(arrsp("trs",tco,5))'="")) s kmtc=kmtc-$g(arrsp("trs",tco,5)) q	//jsou presne km
 ..i (kmtc) s kmtc=kmtc-$g(arrsp("trs",tco,4))									//nejsou presne km, pouziju tarifni 
 .s $p(out("arr","trs",cnt),":",6)=kmtc					 			//kmpre
 .s tmp=""
 .//atribut z trasy
 .f tmpattr="N","V","x" i ($g(arrltrs("arr",tc,"dta",2))[tmpattr)&(tmp'[tmpattr) s tmp=tmp_tmpattr
 .//atribut ze spoje
 .f tmpattr="N","V","x","r","i" i ($g(arrsp("trs",tc,6))[tmpattr)&(tmp'[tmpattr) s tmp=tmp_tmpattr
 .s $p(out("arr","trs",cnt),":",7)=tmp 								//attr (N,V,x)
 .q:arrsp("trs",tc,2)="<"
 .q:arrsp("trs",tc,2)="|"
 .// pocet zastavek
 .s out("arr","pcz")=$g(out("arr","pcz"))+1
 .// ==============
 .s mmcek=arrsp("trs",tc,3)
 .q:'mmcek
 .i mmcek<limitmmpau s $p(out("arr","trs",cnt),":",4)="" q
 .s out("arr","pau",(+arrsp("trs",tc,2)))=mmcek_":"_$g(arrltrs("arr",tc,"dta",1))_":"_tc
 // uprava poctu zastavek (-2)
 s out("arr","pcz")=$g(out("arr","pcz"))-2
 i $g(out("arr","pcz"))<0 s out("arr","pcz")=0
 // dohledani pauz - technicke pauzy
 s mmb="" f  s mmb=$o(arrsp("tch",mmb)) q:mmb=""  d
 .s mmcek=$g(arrsp("tch",mmb)) q:'mmcek  q:mmcek<limitmmpau
 .s out("arr","pau",mmb)=mmcek
 // odectu doby pauz od doby jizdy
 s mmb="" f  s mmb=$o(out("arr","pau",mmb)) q:mmb=""  s out("dta",3)=$g(out("dta",3))-$g(out("arr","pau",mmb))
 // ================================
 // prs
 i $o(arrsp("prs",""))'="" d
 .s out("dta",12)=""
 .// rozdeleni km v pomeru prs
 .k varr k sarr s varr=$g(out("dta",5)) m sarr=arrsp("prs")
 .s err=$$rzpArr^OBapiED(.varr,.sarr,1) zt:+err "merr" s err=""
 .m out("arr","prs")=varr
 // ===
 // omezeni, poznamka, platnost
 f ind=11,12,13,14,15,22,31,32,34,41 i $d(arrsp("omz",ind)) m out("arr","omz",ind)=arrsp("omz",ind)
 // uprava navaznosti, konverze tc za czst
 s val=$g(out("arr","omz",31)) d:val'=""
 .f poz=2:1 s tmp=$p(val,"@",poz) q:tmp=""  d
 ..s tc=$p(tmp,"#") s $p(tmp,"#")=$g(arrltrs("arr",tc,"dta",1)) s $p(val,"@",poz)=tmp
 .s out("arr","omz",31)=val
 s val=$g(out("arr","omz",32)) d:val'=""
 .f poz=2:1 s tmp=$p(val,"@",poz) q:tmp=""  d
 ..s tc=$p(tmp,"#") s $p(tmp,"#")=$g(arrltrs("arr",tc,"dta",1)) s $p(val,"@",poz)=tmp
 .s out("arr","omz",32)=val
 // ===========================
 // 
 q 0
lHstImpSp(idfa,nmsp,in,out)
 //// s err=$$lHstImpSp(idfa,nmsp,.in,.out) - seznam prevadenych spoju z JR
 //// in:
 //// in("glb")=glb, je-li definovano, pak vysledek v @glb@(... jinak v ^CacheTempJB(out)
 //// out:
 //// out=wrk, odkaz do globalu ^CacheTempJB(wrk,hrl)=val nebo @in("glb")@(hrl)=val
 ///  kde val=skupinaJR~pocetPrevedenychLinek~kdoPrevedl~poznamka~priznakPrevoduPresnychKm(""/0/1)
 n (idfa,nmsp,in,out) s $zt="err" k out
 i $g(in("glb"))'="" {
	 s myglb=$g(in("glb"))
	 k @myglb
 }
 else {
	 s out=$$gWrkJB^OBapiED()
	 s myglb="^CacheTempJB("_out_")"
	 k @myglb
 }
 s hrl="" f  {
	 s hrl=$o(^[nmsp]Ohist(idfa,"jrad",hrl)) i hrl="" q
 	 s kdo=$p($g(^[nmsp]Ohist(idfa,"jrad",hrl)),":",1)
 	 s sku=$p($g(^[nmsp]Ohist(idfa,"jrad",hrl)),":",2)
 	 s pzn=$p($g(^[nmsp]Ohist(idfa,"jrad",hrl)),":",3)
 	 s pkm=$p($g(^[nmsp]Ohist(idfa,"jrad",hrl)),":",4)
 	 s cntlin="" s lin="" f {
	 	 s lin=$o(^[nmsp]Ohist(idfa,"jrad",hrl,lin)) i lin="" q
	 	 s cntlin=cntlin+1
 	 }
 	 s $p(@myglb@(hrl),"~",1)=sku
 	 s $p(@myglb@(hrl),"~",2)=cntlin
 	 s $p(@myglb@(hrl),"~",3)=kdo
 	 s $p(@myglb@(hrl),"~",4)=pzn
 	 s $p(@myglb@(hrl),"~",5)=pkm
 }
 q 0
sHstImpSp(idfa,nmsp,hrl,in,out)
 //// s err=$$sHstImpSp(idfa,nmsp,hrl,.in,.out) - zapis do historie prevadenych spoju
 //// in:
 //// in("dta",1)=idos
 //// in("dta",2)=sku
 //// in("dta",3)=pzn
 //// in("dta",4)=pkm
 //// in("arr",li,sp,hrl)=...
 //// out:
 n (idfa,nmsp,hrl,in,out) s $zt="err" k out
 s $p(^[nmsp]Ohist(idfa,"jrad",hrl),":",1)=$tr($g(in("dta",1)),":","|")
 s $p(^[nmsp]Ohist(idfa,"jrad",hrl),":",2)=$g(in("dta",2))
 s $p(^[nmsp]Ohist(idfa,"jrad",hrl),":",3)=$tr($g(in("dta",3)),":"," ")
 s $p(^[nmsp]Ohist(idfa,"jrad",hrl),":",4)=$g(in("dta",4))
 m ^[nmsp]Ohist(idfa,"jrad",hrl)=in("arr")
 q 0
 //
err s $zt="" q:$g(err)'="" "1~"_$tr($g(err),"~","/") q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDSpInfo" type="INT" languagemode="0" timestamp="65185,57449.603869"><![CDATA[
 q
 // popis pole spoje
 // ----------------
 // out("hrl")=casova varianta spoje
 //
 // out("dta",cnt)=...
 // cnt - pocitadlo
 // 01 = odjezd(min)
 // 02 = prijezd(min)
 // 03 = jizda(min)
 // 04 = druhkm
 // 05 = kmSpoje
 // 06 = zastavkaOd
 // 07 = zastavkaDo
 // 08 = platnost
 // 09 = phm
 // 10 = neJR (zamek proti prevodu z jr)
 // 11 = hrlPrevodu (aktualizace)
 // 12 = prs
 // 13 = statut
 // 14 = kmt
 // 15 = kmpresne
 // 16 = tydenni platnost
 // 17 = dlouhodoba platnost
 // 18 = provozovna, kam spoj patri
 // 19 = jede jen na objednání (radiobus) 0/1 (0 nebo "" ne / 1 ano)
 // 20 = pocet dnu spoje (pro prejezdy pres pulnoc)
 // 21 = hrlCasvDo
 // 22 = cislo linky v IDS
 // 23 = objizdkovy spoj 0/1 (0 nebo "" ne / 1 ano)
 // 24 = orig.cislo spoje pro strojky (pro rozdelene spoje a export do strojku) 
 // 25 = jede jen podminecne 0/1 (0 nebo "" ne / 1 ano)
 // 26 = nízkokapacitni autobus 0/1 (0 nebo "" ne / 1 ano)
 // 27 = bezbarierove pristupne vozidlo 0/1 (0 nebo "" ne / 1 ano)
 // 28 = castecne bezbarierove pristupne vozidlo 0/1 (0 nebo "" ne / 1 ano)
 // 29 = nastupiste v zastavce od
 // 30 = nastupiste v zastavce do
 // 31 = vykonová sazba za spoj (SA) (kč)
 // 32 = posilový (0 nebo "" ne / 1 ano)
 // 33 = prepravuje jizdni kola (0 nebo "" ne / 1 ano)
 // 34 = cislo negativni značky (NZ) 
 //
 // out("arr","pau",cas)=min:zast:tc  (prerus.jizdy uvnitr spoje,cas je relativni (cas+odj))
 // out("arr","prs",prs)=km
 // out("arr","omz",11)=veta (jede jen)
 // out("arr","omz",12)=veta (jede take)
 // out("arr","omz",13)=veta (jede jede)
 // out("arr","omz",14)=veta (jede sude)
 // out("arr","omz",15)=veta (jede liche)
 // out("arr","omz",22)=veta (nejede)
 // out("arr","omz",31)=veta (spoj vycka veta=m@czast#minut#A/V:linka:spoj#A/V:linka:spoj...@czast#minut#A/V:linka:spoj...)
 // out("arr","omz",32)=veta (na spoj navazuje veta=m@czast#linka:spoj:dozastavky:typ#linka:spoj:dozastavky:typ#..@czast#linka:spoj:dozastavky:typ..)
 // out("arr","omz",41)=veta (poznamka veta=p@poznamka)
 // out("arr","j",kod)=veta omezeni z jr  tady je i L/Z(kod 13) L@OD:DO
 // out("arr","pcz")=pocetZastavek pro vypocet mzdy
 // out("arr","trs",cnt)=tc:idzast:mm:mmcek:kmtar:kmpre:attr
 //		tc ..... tarifní cislo
 //     idzast.. id zastavky
 //     mm ..... mm od pocatku spoje, presny cas= odjezd + mm, nebo | nebo <
 //		mmcek .. mm cekani v zastavce
 //     kmtar .. tarifni km
 //     kmpre .. presne km
 //     attr ... atribut N,V,x
]]></Routine>


<Routine name="OBapiEDTest" type="INT" languagemode="0" timestamp="64825,78210.264108"><![CDATA[
OBapiEDTest q
OBHstr
 //^OBHstr("PL_CSADSTRED","prvmzd_1005","61881,50577|1",6,48,4298.11)
 f mm=1:1:12 d
 .w !,"prvmzd_"_(1200+mm)
 .s id="" f  s id=$o(^["user"]OBHstr("PL_CSADSTRED","prvmzd_"_(1200+mm),id)) q:id=""  d
 ..w " převod "_id
 ..s os="" f  s os=$o(^["user"]OBHstr("PL_CSADSTRED","prvmzd_"_(1200+mm),id,6,os)) q:os=""  d
 ...s cntns=0 s val=""
 ...s nsk="" f  s nsk=$o(^["user"]OBHstr("PL_CSADSTRED","prvmzd_"_(1200+mm),id,6,os,nsk)) q:nsk=""  d
 ....s cntns=cntns+1 s val=val_nsk_";"
 ...w !,os," nsk=",val," cnt="_cntns
 ...i cntns>1 w "!!!" r a
 q
CRDZLS
 // spusteni sledovani ls z dzva a export do souboru
 k arri,arro
 s db="user"
 s idfa="CR_VTVC"
 f mm=1:1:12 s arri("rrmm",((12*100)+mm))=""
 f idprv=10:10:70 s arri("prv",idprv)=""
 // vyhledani dokladu, zapise je do ^CacheTempJB(wrk,zp,rrmm,doc)=""
 s wrk="" s err=$$lDz^OBapiED(idfa,db,.arri,.wrk) i +err w !,err q
 // global se sestavou
 s INDEX=##class(ALVA.TISK.Main).GetNewGlobalIndex()
 s glb="^CacheTempSS("_INDEX_","_"""OUT"""_","_"""mltab"""_")"
 // data pro sestavu
 k arro 
 s err=##class(ALVA.ADZPRACOVANI.DZVAPrint).tbMonitorDZVA(idfa,db,wrk,glb,"",.arro) zt:+err "merr" s err=""
 s INDEXTAB="mainDOC"
 //export do souboru
 s delimtxt=";" s preftxt=""""
 s file="d:\cacheins\ad\sledovani.csv"
 k I,O s I("File")=file s I("RW")=0 s I("Over")=1
 s err=$$File^MlJos(.I,.O)
 i err w !,"soubor se nepodařilo otevřít " q
 s dev=$g(O("Device"))
 i dev="" w !,"soubor se nepodařilo otevřít " q
 u dev
 // name
 s val=$g(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"Name"))
 w $tr(val,"ĂăĄąĆćČčĎďĐđĘęĚěĹĺĽľŁłŃńŇňŐőŔŕŘřŚśŞşŠšŢţŤťŮůŰűŹźŻżŽžˇ˘˙˛˝μ–—‘’‚“”„†‡‰‹›™∙⋯","Ãã¥¹ÆæÈèÏïÐðÊêÌìÅå¼¾£³ÑñÒòÕõÀàØøªºÞþÙùÛû¯¿¡¢ÿ²½µ")
 // popis sloupcu
 s rcnt=0 s val=""
 s col="" f  s col=$o(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"SL",col)) q:col=""  d
 .s cell=$g(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"SL",col))
 .s $p(val,delimtxt,$i(rcnt))=preftxt_cell_preftxt
 w $tr(val,"ĂăĄąĆćČčĎďĐđĘęĚěĹĺĽľŁłŃńŇňŐőŔŕŘřŚśŞşŠšŢţŤťŮůŰűŹźŻżŽžˇ˘˙˛˝μ–—‘’‚“”„†‡‰‹›™∙⋯","Ãã¥¹ÆæÈèÏïÐðÊêÌìÅå¼¾£³ÑñÒòÕõÀàØøªºÞþÙùÛû¯¿¡¢ÿ²½µ")
 // data 
 s row="" f  s row=$o(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"RD",row)) q:row=""  d
 .s val="" s rcnt=0
 .s col="" f  s col=$o(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"SL",col)) q:col=""  d
 ..s cell=$g(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"Dta",row,col))
 ..s typ=$g(^CacheTempSS(INDEX,"OUT","mltab",INDEXTAB,"SL",col,"Typ"))
 ..i typ["N" s cell=$tr(cell,".",",")
 ..i typ'["N" s cell=preftxt_cell_preftxt
 ..s $p(val,delimtxt,$i(rcnt))=cell
 .w !,$tr(val,"ĂăĄąĆćČčĎďĐđĘęĚěĹĺĽľŁłŃńŇňŐőŔŕŘřŚśŞşŠšŢţŤťŮůŰűŹźŻżŽžˇ˘˙˛˝μ–—‘’‚“”„†‡‰‹›™∙⋯","Ãã¥¹ÆæÈèÏïÐðÊêÌìÅå¼¾£³ÑñÒòÕõÀàØøªºÞþÙùÛû¯¿¡¢ÿ²½µ")
 c dev
 q
]]></Routine>


<Routine name="OBapiEDTur" type="INT" languagemode="0" timestamp="65772,50437.747465"><![CDATA[
OBapiEDTur q
 // ========================================
 // turnusy - EDISON popis v ^OBapiEDTurInfo
 // ========================================
isTur(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$isTur(idfa,nmsp,zp,tu,hrl,.in,.out) - test na existenci turnusu
 // zp - zp, tu - turnus, hrl - horlog casove varianty turnusu, neni-li, test pouze na turnus
 //
 // in
 // ==
 // out
 // ===
 // out=0 neexistuje / >0 existuje
 //
 n (idfa,nmsp,zp,tu,hrl,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 //
 s:'+$g(hrl) out=$d(^[nmsp]OBT(zp,tu))
 s:+$g(hrl) out=$d(^[nmsp]OBT(zp,tu,hrl))
 q 0
 //
gTur(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$gTur(idfa,nmsp,zp,tu,hrl,.in,.out) - vrati data turnusu
 //  - in
 //  - out("hrl")=casova varianta turnusu
 //  - out("dta",...),out("arr",...)=data turnusu, popis v rutine ^OBapiTurEDInfo
 n (idfa,nmsp,zp,tu,hrl,in,out)
 k out s $zt="err" S err=""
 // kontrola parametru
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(zp)="" s err="zp=" zt "merr"
 i $g(tu)="" s err="tu=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 // ===================
 i '$d(^[nmsp]OBT(zp,tu)) q "1~turnus "_zp_"/"_tu_" neni definovan"
 s hrl=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1) q:hrl="" "1~od turnusu "_zp_"/"_tu_" neni prislusna casova varianta"
 s out("hrl")=hrl
 // zakladni udaje turnusu
 s val=$g(^[nmsp]OBT(zp,tu,hrl))
 f cnt=1:1:$$gPcPZU s out("dta",cnt)=$p(val,":",cnt)
 // datove upravy - platnost
 s out("dta",7)=$p(out("dta",7),"/",1)_"~"_$p(out("dta",7),"/",3)
 // datove upravy - cas.var
 s out("dta",11)=hrl
 // ======================
 // vykonove a mzdove udaje turnusu
 s val=$g(^[nmsp]OBT(zp,tu,hrl,"T"))
 d qvTuV(val,.arr) m out("arr","tuv")=arr
 // ===============================
 // casovy prubeh turnusu
 s tm="" f  s tm=$o(^[nmsp]OBT(zp,tu,hrl,tm)) q:(tm="")!(tm?.a)  d
 .// ===============================
 .//tmTo~id~km~tm~li~sp~maBe~maAf~zFr~zTo~upr~inf~dsp~prs
 .// casovy prubeh ponovu EDISON
 .s val=$g(^[nmsp]OBT(zp,tu,hrl,tm))
 .s idcin=+$p(val,":",2)
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 .// spoj
 .i idcin=3 d
 ..s val=$p(val,"~",1)
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",3)=$p(val,":",3)				//km
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..i $p(val,":",5)["." d
 ...s out("arr","tur",tm,"dta",5)=($p(val,":",5)\1)			//li
 ...s out("arr","tur",tm,"dta",6)=($p(val,":",5)#1*1000)	//sp
 ..i $p(val,":",5)["^" d
 ...s out("arr","tur",tm,"dta",5)=$p($p(val,":",5),"^",1)	//li
 ...s out("arr","tur",tm,"dta",6)=$p($p(val,":",5),"^",2)	//sp
 ..s out("arr","tur",tm,"dta",7)=$p(val,":",6)				//maBe
 ..s out("arr","tur",tm,"dta",8)=$p(val,":",7)				//maAf
 ..s out("arr","tur",tm,"dta",20)=$p(val,":",8)				//kurs
 ..s out("arr","tur",tm,"dta",22)=$p(val,":",9)				//navazny spoj (ME)
 ..s out("arr","tur",tm,"dta",23)=$p(val,":",10)			//scitat ceny pro navazny spoj (ME)
 ..s out("arr","tur",tm,"dta",24)=$p(val,":",11)			//preferovany SZ pro navazny spoj (ME)
 ..s out("arr","tur",tm,"dta",25)=$p(val,":",12)			//preferovany SZ pro spoj, ze ktereho se prestupuje na navazny spoj (ME)
 .//pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s val=$p(val,"~",1)
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",3)=$p(val,":",3)				//km
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",9)=$p(val,":",5)				//zFr
 ..s out("arr","tur",tm,"dta",10)=$p(val,":",6)				//zTo
 ..s out("arr","tur",tm,"dta",21)=$p(val,":",7)				//hrazeny prejezd
 .//informace
 .i idcin=8 d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 .//cekani,bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 .i (idcin=0)!(idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 .//ost.pr
 .i idcin=10 d
 ..s idop=+$p(val,"#",2) s val=$p(val,"#",1)
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",11)=idop						//upresneni
 .//preruseni
 .i idcin=12 d
 ..s out("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s out("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s out("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s out("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 // omezeni
 m out("arr","omz")=^[nmsp]OBT(zp,tu,hrl,"omz")
 // prevod z vety turnusu do pole
 i '$d(out("arr","omz",13))&(+out("dta",9)) s out("arr","omz",13)="@"_(out("dta",9))_":"_(out("dta",10))_"#"
 // -------
 // textove poznamky k turnusu - zahlavi, zapati, na dzva
 m:$d(^[nmsp]OBT(zp,tu,hrl,"CH")) out("arr","txh")=^[nmsp]OBT(zp,tu,hrl,"CH")
 m:$d(^[nmsp]OBT(zp,tu,hrl,"CP")) out("arr","txp")=^[nmsp]OBT(zp,tu,hrl,"CP")
 m:$d(^[nmsp]OBT(zp,tu,hrl,"CD")) out("arr","txd")=^[nmsp]OBT(zp,tu,hrl,"CD")
 // --------------------------------------------
 // pocet ridicu a pohotovost pri spolujizde
 s out("arr","drv","dta",1)=+$g(^[nmsp]OBT(zp,tu,hrl,"pocrid")) s:'out("arr","drv","dta",1) out("arr","drv","dta",1)=1
 // data pro spolujizdu pro 2 ridice
 f cnt=1:1:2 d
 .s out("arr","drv","arr",cnt,"dta",1)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",1))
 .s out("arr","drv","arr",cnt,"dta",2)=+$p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",2)
 .s out("arr","drv","arr",cnt,"dta",3)=+$p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",3)
 .s out("arr","drv","arr",cnt,"dta",4)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",4))
 .s out("arr","drv","arr",cnt,"dta",5)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",5))
 .s out("arr","drv","arr",cnt,"dta",6)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",6))
 .s out("arr","drv","arr",cnt,"dta",7)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",7))
 .s out("arr","drv","arr",cnt,"dta",8)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",8))
 .s out("arr","drv","arr",cnt,"dta",9)=$$hm^OBapiED($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",9))
 .s out("arr","drv","arr",cnt,"dta",10)=$p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",10)
 .s out("arr","drv","arr",cnt,"dta",11)=$p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",11)
 .s out("arr","drv","arr",cnt,"dta",12)=$tr($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",12),"/","~")
 .s out("arr","drv","arr",cnt,"dta",13)=$tr($p($g(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt)),"~",13),"/","~")
 // policajt na zmenu
 s cnt=$o(^[nmsp]OBT(zp,tu,hrl,"fizl",""))
 s out("arr","cop","dta",1)=cnt
 s out("arr","cop","dta",2)="" s:cnt'="" out("arr","cop","dta",2)=$g(^[nmsp]OBT(zp,tu,hrl,"fizl",cnt))
 // konvertovane pauzy vypoctem
 m out("arr",1)=^[nmsp]OBT(zp,tu,hrl,"cnvpau")
 // --------------------------------------------
 // ostatni
 //^[nmsp]OBT(zp,tu,hrl,"igan") - igan je ve vete turnusu na 25 pozici generovat pri zapisu
 //^[nmsp]OBT(zp,tu,hrl,"VYRDO") - specialita Vsetina, uz se asi nepouziva
 //^[nmsp]OBT(zp,tu,hrl,"S",li.sp)=mapr:mapo - generovat pri zapisu turnusu
 //
 //^[nmsp]OBT(zp,tu,hrl,"DENR")
 q 0
 //
gTurOne(idfa,nmsp,zp,tu,hrl,id,in,out)
 // err=$$gTurOne(idfa,nmsp,zp,tu,hrl,.in,.out) - vrati jeden udaj ze zakladni vety turnusu
 //  - in
 //  - out("hrl")=casova varianta turnusu
 //  - out("dta",...)=data turnusu, popis v rutine ^OBapiTurEDInfo
 n (idfa,nmsp,zp,tu,hrl,id,in,out)
 k out s $zt="err" S err=""
 // kontrola parametru
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(zp)="" s err="zp=" zt "merr"
 i $g(tu)="" s err="tu=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 i $g(id)="" s err="id=" zt "merr"
 // ===================
 i '$d(^[nmsp]OBT(zp,tu)) q "1~turnus "_zp_"/"_tu_" neni definovan"
 s hrl=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1) q:hrl="" "1~od turnusu "_zp_"/"_tu_" neni prislusna casova varianta"
 s out("hrl")=hrl
 // zakladni udaje turnusu
 s val=$g(^[nmsp]OBT(zp,tu,hrl))
 s out("dta",id)=$p(val,":",id)
 // datove upravy - platnost
 i id=7 s out("dta",id)=$p(out("dta",id),"/",1)_"~"_$p(out("dta",id),"/",3)
 // datove upravy - cas.var
 i id=11 s out("dta",id)=hrl
 q 0
 //
sTur(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$sTur(idfa,nmsp,zp,tu,hrl,.in,.out) - ulozi data turnusu
 //  - in("arr",...)=data turnusu, popis v rutine ^OBapiTurEDInfo
 n (idfa,nmsp,zp,tu,hrl,in,out)
 k out s $zt="err" S err=""
 // kontrola parametru
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(zp)="" s err="zp=" zt "merr"
 i $g(tu)="" s err="tu=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 // ===================
 // datove upravy - zacatek a konec turnusu
 s myind=$j($o(in("arr","tur","")),0,0)
 s in("dta",5)=$j($$mh^OBapiED(myind#1440),0,2)
 s myval="" s myind=$o(in("arr","tur",""),-1) i myind'="" s myval=$j($g(in("arr","tur",myind,"dta",1)),0,0)
 s in("dta",6)=$j($$mh^OBapiED(myval#1440),0,2)
 // datove upravy - platnost
 s val=$g(in("dta",7)) s in("dta",7)=""
 s $p(in("dta",7),"/",1)=$p(val,"~",1)
 s $p(in("dta",7),"/",2)=$p($$pltHex^OBapiED($p(val,"~",1)),"~",1)_$$pldHex^OBapiED($p(val,"~",2)-1)
 s $p(in("dta",7),"/",3)=$p(val,"~",2)
 s in("dta",8)=$$cnvPlTxt^OBapiED($p(val,"~",1),$p(val,"~",2))
 s val=""
 // datove upravy - cas.var
 s in("dta",11)=$$nd^OBapiED(hrl,1)
 // datove upravy - omezeni jede
 s in("dta",9)=$p($p($p($g(out("arr","omz",13)),"@",2),"#",1),":",1)
 s in("dta",10)=$p($p($p($g(out("arr","omz",13)),"@",2),"#",1),":",2)
 // =======================
 // vymazu turnus
 k ^[nmsp]OBT(zp,tu,hrl)
 // =============
 // zakladni udaje turnusu
 s val="" f cnt=1:1:$$gPcPZU s $p(val,":",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OBT(zp,tu,hrl)=val
 // ======================
 // vykonove a mzdove udaje turnusu
 k arr m arr=in("arr","tuv") d svTuV(.val,.arr) s ^[nmsp]OBT(zp,tu,hrl,"T")=val
 // ===============================
 // casovy prubeh turnusu
 // tmTo~id~km~tm~li~sp~maBe~maAf~zFr~zTo~upr~inf
 s tm="" f  s tm=$o(in("arr","tur",tm)) q:tm=""  d
 .s val="" s idcin=$g(in("arr","tur",tm,"dta",2))
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))
 .// spoj
 .i idcin=3 d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1)) 												//tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2)) 												//id
 ..s $p(val,":",3)=$g(in("arr","tur",tm,"dta",3)) 												//km
 ..s $p(val,":",4)=$g(in("arr","tur",tm,"dta",4)) 												//tm
 ..s $p(val,":",5)=($g(in("arr","tur",tm,"dta",5))_"^"_($g(in("arr","tur",tm,"dta",6)))) 		//lisp
 ..s $p(val,":",6)=$g(in("arr","tur",tm,"dta",7)) 												//maBe
 ..s $p(val,":",7)=$g(in("arr","tur",tm,"dta",8)) 												//maAf
 ..s $p(val,":",8)=$g(in("arr","tur",tm,"dta",20))												//kurs
 ..s $p(val,":",9)=$g(in("arr","tur",tm,"dta",22))												//navazny spoj (ME)
 ..s $p(val,":",10)=$g(in("arr","tur",tm,"dta",23))												//scitat ceny pro navazny spoj (ME)
 ..s $p(val,":",11)=$g(in("arr","tur",tm,"dta",24))												//preferovany SZ pro navazny spoj (ME)
 ..s $p(val,":",12)=$g(in("arr","tur",tm,"dta",25))												//preferovany SZ pro spoj, ze ktereho se prestupuje na navazny spoj (ME)
 ..s $p(val,":",13)=""
 .// pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))	//tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))	//id
 ..s $p(val,":",3)=$g(in("arr","tur",tm,"dta",3))	//km
 ..s $p(val,":",4)=$g(in("arr","tur",tm,"dta",4))	//tm
 ..s $p(val,":",5)=$g(in("arr","tur",tm,"dta",9))	//zFr
 ..s $p(val,":",6)=$g(in("arr","tur",tm,"dta",10))	//zTo
 ..s $p(val,":",7)=$g(in("arr","tur",tm,"dta",21))	//hrazeny prejezd
 ..s $p(val,":",8)=""
 .// informace
 .i idcin=8 d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",5)=$tr($g(in("arr","tur",tm,"dta",12)),":",".") //info
 .// cekani,bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena,pracovni pohotovost
 .i (idcin=0)!(idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16)!(idcin=17) d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(in("arr","tur",tm,"dta",4))  //tm
 .//ost.pr
 .i idcin=10 d
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(in("arr","tur",tm,"dta",4))  //tm
 ..s $p(val,"#",2)=$g(in("arr","tur",tm,"dta",11)) //upresneni
 .//preruseni
 .i idcin=12 d
 ..s val=""
 ..s $p(val,":",1)=$g(in("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(in("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(in("arr","tur",tm,"dta",4))  //tm
 ..s $p(val,":",5)=$g(in("arr","tur",tm,"dta",12)) //info
 .// zapis
 .s ^[nmsp]OBT(zp,tu,hrl,tm)=val
 // omezeni
 f idomz=12,13,22 d
 .q:$g(in("arr","omz",idomz))=""
 .m ^[nmsp]OBT(zp,tu,hrl,"omz",idomz)=in("arr","omz",idomz)
 // textove poznamky k turnusu - zahlavi, zapati, dzva
 m:$d(in("arr","txh")) ^[nmsp]OBT(zp,tu,hrl,"CH")=in("arr","txh")
 m:$d(in("arr","txp")) ^[nmsp]OBT(zp,tu,hrl,"CP")=in("arr","txp")
 m:$d(in("arr","txd")) ^[nmsp]OBT(zp,tu,hrl,"CD")=in("arr","txd")
 // --------------------------------------------
 // pocet ridicu a pohotovost pri spolujizde
 s:'+$g(in("arr","drv","dta",1)) in("arr","drv","dta",1)=1
 s ^[nmsp]OBT(zp,tu,hrl,"pocrid")=+$g(in("arr","drv","dta",1))
 i +$g(in("arr","drv","dta",1))>1 d
 .f cnt=1:1:2 d
 ..i (+$g(in("arr","drv","arr",cnt,"dta",1)))!(+$g(in("arr","drv","arr",cnt,"dta",2)))!(+$g(in("arr","drv","arr",cnt,"dta",3))) d
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",1)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",1)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",2)=+$g(in("arr","drv","arr",cnt,"dta",2))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",3)=+$g(in("arr","drv","arr",cnt,"dta",3))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",4)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",4)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",5)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",5)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",6)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",6)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",7)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",7)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",8)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",8)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",9)=$$mh^OBapiED($g(in("arr","drv","arr",cnt,"dta",9)))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",10)=$g(in("arr","drv","arr",cnt,"dta",10))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",11)=$g(in("arr","drv","arr",cnt,"dta",11))
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",12)=$tr($g(in("arr","drv","arr",cnt,"dta",12)),"~","/")
 ...s $p(^[nmsp]OBT(zp,tu,hrl,"PhSpj",cnt),"~",13)=$tr($g(in("arr","drv","arr",cnt,"dta",13)),"~","/")
 // policajt na zmenu
 s cnt=$g(in("arr","cop","dta",1)) s:'cnt cnt=$h
 s ^[nmsp]OBT(zp,tu,hrl,"fizl",cnt)=$g(in("arr","cop","dta",2))
 // --------------------------------------------
 // konvertovane pauzy vypoctem
 m ^[nmsp]OBT(zp,tu,hrl,"cnvpau")=in("arr",1)
 // save pro zpetnou kompatibilitu
 // hodiny do vyrovnavaci doby
 i +$g(in("dta",25)) s ^[nmsp]OBT(zp,tu,hrl,"igan")=+$g(in("dta",25))
 // vicesmeny priplatek
 i +$g(in("dta",23)) d
 .s tm="" f  s tm=$o(^[nmsp]OBT(zp,tu,hrl,tm)) q:tm=""  d
 ..s val=$g(^[nmsp]OBT(zp,tu,hrl,tm))
 ..s id=$p(val,":",2)
 ..i (id>2)&(id<8) s $p(val,"~",5)=($g(in("dta",23))-1) s ^[nmsp]OBT(zp,tu,hrl,tm)=val
 // zapis manipulaci
 //
 // ==============================
 // historie
 s idcomp=$h
 s ^[nmsp]OBTcomp(zp,tu,hrl,idcomp)=$g(^[nmsp]OBT(zp,tu,hrl,"T"))_"@"_$g(in("arr","cop","dta",2))
 s ^[nmsp]OBTcomp(zp,tu,hrl,idcomp,"Z")=$g(^[nmsp]OBT(zp,tu,hrl))
 // ========
 q 0
 // 
gTurFakDta(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$gTurFakDta(idfa,nmsp,zp,tu,hrl,.in,.out) - vrati fakturacni data pro turnus
 //  - in
 //  - out("hrl")=casova varianta turnusu
 //  - out("dta",cnt)=fakturacni data turnusu
 n (idfa,nmsp,zp,tu,hrl,in,out)
 k out s $zt="err" S err=""
 // kontrola parametru
 i $g(idfa)="" s err="idfa=" zt "merr"
 i $g(nmsp)="" s err="nmsp=" zt "merr"
 i $g(zp)="" s err="zp=" zt "merr"
 i $g(tu)="" s err="tu=" zt "merr"
 i $g(hrl)="" s err="hrl=" zt "merr"
 // ===================
 i '$d(^[nmsp]OBT(zp,tu)) q "1~turnus "_zp_"/"_tu_" neni definovan"
 s hrl=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1) q:hrl="" "1~od turnusu "_zp_"/"_tu_" neni prislusna casova varianta"
 s out("hrl")=hrl
 // zakladni udaje turnusu
 s val=$g(^[nmsp]OBT(zp,tu,hrl))
 s out("dta",1)=$p(val,":",38)		//priznak fakturace (0,"" ne/ 1 ano
 s out("dta",2)=$p(val,":",39)		//id zakaznika pro kterého se bude fakturovat
 s out("dta",3)=$p(val,":",40)		//idCis=1
 s out("dta",4)=$p(val,":",41)		//1=fakturovat za km, 3=smluvni cena
 s out("dta",5)=$p(val,":",42)		//idprv pro fakturaci (kde se bude fakturovat), muze byt ""
 s out("dta",6)=$p(val,":",43)		//vystaveni faktury (S/samostatne, T/tydne, M/mesicne)
 s out("dta",7)=$p(val,":",44)		//mena pro fakturaci (CZK/EUR)
 s out("dta",8)=$p(val,":",45)		//mena pro prepocet faktury (""/EUR))
 s out("dta",9)=$p(val,":",46)		//sazba za km obsazeny
 s out("dta",10)=$p(val,":",47)		//sazba za km neobsazeny
 s out("dta",11)=$p(val,":",48)		//sazba za 15min cekani
 s out("dta",12)=$p(val,":",49)		//smluvni cena bez DPH
 s out("dta",13)=$p(val,":",50)		//smluvni cena s DPH
 s out("dta",14)=$p(val,":",51)		//ns odberatele pro vnitrofakturu
 s out("dta",15)=$p(val,":",55)		//id zakaznika na ktereho jde trzba (v pripade vnitrofaktury)
 s out("dta",16)=$p(val,":",56)		//do doby cekani zapocitat manipulace 
 s out("dta",17)=$p(val,":",57)		//do doby cekani zapocitat vyrovnavaci dobu
 s out("dta",18)=$p(val,":",58)		//zpusob zaokrouhleni cekani pro fakturaci (0 dle nastavení prg / 1 čtvrthodiny čekání dolu / 2 čtvrthodiny čekání nahoru) 
 s out("dta",19)=$p(val,":",62)		//zpusob vypoctu cekani pro fakturaci (0 veskere cekani na dokladu / 1 cekani pred a po spoji do vyse 15 min)				
 s out("dta",20)=$p(val,":",63)		//do doby cekani zapocitat vse mimo jizdy
 q 0
 //
lTur(idfa,nmsp,in,out)
 //
 // err=$$lTur(idfa,nmsp,in,out) - vrati seznam turnusu
 //  - in
 //     in("zp",zp)="" je-li def, pak vratim turnusy pro def zp
 //     in("prv",prv)="" je-li def, pak vratim turnusy pro def prv
 //     in("turpl",1)=$h = je-li def, pak vratim cas.var.turnusu platnou k datu (jeden)
 //     in("turpl",2)=$h = je-li def, pak vratim cas.var.turnusu platne k datu a dalsi (muze jich byt vice)
 //     in("turpl",3)=$h = je-li def, pak vratim cas.var.turnusu od data(vcetne) dale (muze jich byt vice)
 //     in("turpl",4)=1 = je-li def, pak vratim cas.var.turnusu s datem ukonceni
 //     in("ls",li,sp)="" je-li def, pak si to vsima jen turnusu kde se vyskytne linka a spoj
 //     in("par",1)=cast_nazvu_turnusu, pak vratim turnusy, jejichz nazev zacina na ...
 //     in("par",2)=PoUtStCtPaSoNe - maska platnosti podle jednotlivych dni v tydnu
 //                 1110000        - PoUtST
 //     in("par",3)=0/1/2 - vyber turnusu 0 vse / 1 se spoji do 50 km / 2 se spoji nad 50km
 //     in("glb")=glb = je-li definovano, pak je vysledek v @glb
 //     vysledek se zapise do globalu ^CacheTempJB(wrk,zp,tu,hrl) a v out=wrk a nebo v @glb
 //
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // kontrola
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // ========
 s dz=$$gFaDz^OBapiED(idfa)
 //
 s myglb=$g(in("glb")) s out=""
 i myglb="" s out=$$gWrkJB^OBapiED() s myglb="^CacheTempJB("_out_")"
 k @myglb
 //
 s zp="" f  s zp=$o(^[nmsp]OBT(zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .i $d(in("prv")) q:((zp\100)'=dz)  q:'$d(in("prv",(zp#100)))
 .s tu="" f  s tu=$o(^[nmsp]OBT(zp,tu)) q:tu=""  d
 ..s hrl="" f  s val="" s hrl=$o(^[nmsp]OBT(zp,tu,hrl),1,val) q:hrl=""  d
 ...s hrltudo=$p(val,":",33)
 ...// filtr na casovou variantu turnusu
 ...s isok=1
 ...i +$g(in("turpl",1)) d
 ....s isok=0 i (+$o(^[nmsp]OBT(zp,tu,(in("turpl",1)+.01)),-1))=hrl  s isok=1 i hrltudo&(hrltudo<in("turpl",1)) s isok=0
 ...i +$g(in("turpl",2)) d
 ....s isok=0 i (+$o(^[nmsp]OBT(zp,tu,(in("turpl",2)+.01)),-1)=hrl)!(hrl'<in("turpl",2)) s isok=1 i hrltudo&(hrltudo<in("turpl",2)) s isok=0
 ...i +$g(in("turpl",3)) d
 ....s isok=0 i (hrl'<in("turpl",3)) s isok=1
 ...i +$g(in("turpl",4)) d
 ....s isok=0 i $p($g(^[nmsp]OBT(zp,tu,hrl)),":",33) s isok=1 
 ...q:'isok
 ...// =================================
 ...// filtr na nazev turnusu (zadana je cast nazvu)
 ...i $g(in("par",1))'="" s:$e(tu,1,$l(in("par",1)))'=in("par",1) isok=0
 ...q:'isok
 ...// ============================================
 ...// filtr na platnost turnusu (tydenni)
 ...i $g(in("par",2))'="" d  q:'isok
 ....s tpl=$p($p(val,":",7),"/",1) s:tpl="" tpl="." 
 ....s tpl=$p($$pltHex^OBapiED(tpl),"~",2)
 ....s:+$e(tpl,8) $e(tpl,7)=1
 ....f cnt=1:1:7 i +$e(in("par",2),cnt) i '+$e(tpl,cnt) s isok=0
 ...// ============================================
 ...// filtr na linky a spoje
 ...i $d(in("ls")) s isok=0 d  q:'isok
 ....s time="" f  s val="" s time=$o(^[nmsp]OBT(zp,tu,hrl,time),1,val) q:(time="")!(time?.a)!(isok)  d
 .....q:$p(val,":",2)'=3
 .....s ls=$p(val,":",5)
 .....i ls["." s:$d(in("ls",(ls\1),((ls#1)*1000))) isok=1
 .....i ls["^" s:$d(in("ls",$p(ls,"^",1),$p(ls,"^",2))) isok=1
 ...// filtr na delku spoju do 50 a nad 50 km
 ...i +$g(in("par",3))'="" d  q:'isok
 ....s isok=1 i +$g(in("par",3))=2 s isok=0
 ....s time="" f  s val="" s time=$o(^[nmsp]OBT(zp,tu,hrl,time),1,val) q:(time="")!(time?.a)  d
 .....q:$p(val,":",2)'=3
 .....i $p(val,":",3)>50 s:$g(in("par",3))=1 isok=0 s:$g(in("par",3))=2 isok=1
 ...// proslo to
 ...s @myglb@(zp,tu,hrl)=""
 //
 q 0
 //
usedTur(idfa,nmsp,in,out)
 // err=$$usedTur(idfa,nmsp,.in,.out) - kontrola, zda se turnusy pouzivaji
 // in("arr",zp,tu,hrl)=""
 // out("arr",zp,tu,hrl,"del")=0/1  ... turnus nelze/lze vymazat
 s $zt="err" k out
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 //
 n (idfa,nmsp,in,out)
 // zjistim aktualni obdobi v AD
 s rrrrmm="" k arr s err=$$gObdobi^OBapiED(idfa,nmsp,"",.arr) zt:+err "merr" s err="" s rrrrmm=$g(arr("act")) s rrmm=rrrrmm#10000
 //zjistim horlog prvniho a posledniho obdobi, na ktere se to bude kontrolovat
 //prvniho
 s fhrl=$$dn^OBapiED("1."_(rrrrmm#100)_"."_(rrrrmm\100))
 //posledniho
 f cnt=28,29,30,31 i ($$dn^OBapiED(cnt_"."_(rrrrmm#100)_"."_(rrrrmm\100)))>0 s lhrl=$$dn^OBapiED(cnt_"."_(rrrrmm#100)_"."_(rrrrmm\100))
 // ============================
 // seznam dokladu a turnusu z uznanych dokladu
 k arrin,arrout s wrk=$$gWrkJB^OBapiED()
 s arrin("rrmm",rrmm)="" s zp="" f  s zp=$o(in("arr",zp)) q:zp=""  s arrin("zp",zp)="" 
 s err=$$lDz^OBapiED(idfa,nmsp,.arrin,.arrout) zt:+err "merr" s err=""
 i +$g(arrout) d
 .s zp="" f  s zp=$o(^CacheTempJB(arrout,zp)) q:zp=""  d
 ..s idrrmm="" f  s idrrmm=$o(^CacheTempJB(arrout,zp,idrrmm)) q:idrrmm=""  d
 ...s iddoc="" f  s iddoc=$o(^CacheTempJB(arrout,zp,idrrmm,iddoc)) q:iddoc=""  d
 ....k arrdoc s err=$$gDz^OBapiED(idfa,nmsp,zp,idrrmm,iddoc,"",.arrdoc) zt:+err "merr" s err=""
 ....s hrl="" f  s hrl=$o(arrdoc("arr","edv",hrl)) q:hrl=""  d 
 .....s idtu="" f  s idtu=$o(arrdoc("arr","edv",hrl,"arr",1,idtu)) q:idtu=""  d
 ......s tu=$p(idtu,"~",1) q:tu=""  s ^CacheTempJB(wrk,tu,zp,idrrmm,iddoc)="" i hrl>$g(^CacheTempJB(wrk,tu)) s ^CacheTempJB(wrk,tu)=hrl 
 ....k arrdoc
 .k ^CacheTempJB(arrout)
 // ===========================================
 // nacteni nastaveni
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // =================
 s zp="" f  s zp=$o(in("arr",zp)) q:zp=""  d
 .s tu="" f  s tu=$o(in("arr",zp,tu)) q:tu=""  d
 ..s hrl="" f  s hrl=$o(in("arr",zp,tu,hrl)) q:hrl=""  d
 ...s out("arr",zp,tu,hrl,"del")=0
 ...//je-li casova varianta z uzavreneho obdobi a je-li zakaz, nejde vymazat
 ...i hrl<fhrl i +$g(arrset("arr",4,1)) s out("arr",zp,tu,hrl,"msg")="nelze měnit časové varianty turnusu z uzavřených období" q
 ...//je-li casova varianta vetsi nez lhrl, lze vymazat
 ...i hrl>lhrl s out("arr",zp,tu,hrl,"del")=1 q
 ...//kontrola, zda jsou pro turnus v aktualnim obdobi doklady, pokud ne, povolim ho vymazat
 ...i $o(^CacheTempJB(wrk,tu,zp,rrmm,""))="" s out("arr",zp,tu,hrl,"del")=1 q
 ...//jsou-li doklady a casova varianta je datumove po poslednim uznanem dokladu, povolim ho vymazat
 ...i hrl>$g(^CacheTempJB(wrk,tu)) s out("arr",zp,tu,hrl,"del")=1 q
 ...//jsou-li doklady, dohledam, zda ma turnus predchozi casovou variantu, pokud ano, povolim vymazat
 ...i $o(^[nmsp]OBT(zp,tu,hrl),-1)'="" s out("arr",zp,tu,hrl,"del")=1 s out("arr",zp,tu,hrl,"msg")="turnus je použit na dokladech, v případě jeho vymazání bude použita jeho předchozí časová varianta, je potřeba přepočítat doklady" q
 ...//jsou-li doklady, dohledam casove varianty, ktere plati pro aktualni obdobi, ty nepovolim mazat
 ...//k arrhrl s tmphrl=lhrl s fnd=0 f  s tmphrl=$o(^[nmsp]OBT(zp,tu,tmphrl),-1) q:(tmphrl="")!(fnd)  s:tmphrl>fhrl arrhrl(tmphrl)="" s:tmphrl'>fhrl arrhrl(tmphrl)="",fnd=1 
 ...//i $d(arrhrl(hrl)) s out("arr",zp,tu,hrl,"msg")="turnus je použit na dokladech, není možné jej vymazat" q
 ...//s out("arr",zp,tu,hrl,"del")=1
 ...s out("arr",zp,tu,hrl,"msg")="turnus je použit na dokladech a nemá předchozí čas.variantu, není možné jej vymazat" q
 k ^CacheTempJB(wrk)
 q 0
 //
dTur(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$dTu(idfa,nmsp,zp,tu,hrl,in,out) - zruseni turnusu v db
 // in("fullname")=fullname
 s $zt="err"
 n (idfa,nmsp,zp,tu,hrl,in,out)
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 i $g(hrl)="" q "1~hrl="
 k out s out("stt","del")=0
 // test na existenci turnusu
 k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.istur) zt:+err "merr" s err="" q:'+$g(istur) 0
 // zapis do globalu s historii
 k err,arrin,arrout m arrin(zp,tu,hrl)=^[nmsp]OBT(zp,tu,hrl)
 s err=$$sHistory^OBapiED(idfa,nmsp,"OBT","",.arrin,.arro) zt:+err "merr" s err=""
 // zapis do kose
 s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) zt:+err "merr" s err=""
 k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arr) zt:+err "merr" s err=""
 s err=$$sKos^OBapiED(idfa,nmsp,4,(zp_"|"_tu_"|"_hrl),$g(in("fullname")),($g(idprv)_"/"_tu_"/"_$$nd^OBapiED(hrl,0)),"",.arr,"") zt:+err "merr" s err=""
 // vymazani turnusu
 k ^[nmsp]OBT(zp,tu,hrl) s out("stt","del")=1
 q 0
 //
gTimeVariantTur(idfa,nmsp,zp,tu,hrl,in,out)
 // err=$$gTimeVariantTur(idfa,nmsp,zp,tu,hrl,.in,.out) - vrati hrl casove varianty turnusu platne k hrl
 // out=hrl casove varianty
 // out= 0 turnus neexistuje / >0 turnus existuje
 s $zt="err" s err="" k out s out=0
 n (idfa,nmsp,zp,tu,hrl,in,out)
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 i $g(hrl)="" q "1~hrl="
 //
 s hrltv=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1) i hrltv="" q 0
 k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrltv,"",.arr) zt:+err "merr" s err=""
 s hrltv=$g(arr("hrl")) i hrltv="" q 0
 i $g(arr("dta",33)) i $g(arr("dta",33))<hrl q 0
 s out=hrltv 
 q 0
 //
gAllTimeVariantTur(idfa,nmsp,zp,tu,in,out)
 // err=$$gAllTimeVariantTur(idfa,nmsp,zp,tu,.in,.out) - vrati hrl vsech casovych variant turnusu tu
 // out("arr",1,hrl,"dta",1)=hrlend
 s $zt="err" s err="" k out
 n (idfa,nmsp,zp,tu,hrl,in,out)
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 //
 s hrl="" f  s hrl=$o(^[nmsp]OBT(zp,tu,hrl)) q:hrl=""  d
 .k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arr) zt:+err "merr" s err=""
 .s out("arr",1,hrl)=$g(arr("dta",33))
 q 0
 //
 //
renameTur(idfa,nmsp,zp,oldtu,newtu,hrl,in,out)
 // err=$$renameTur(idfa,nmsp,zp,oldtu,newtu,hrl,.in,.out) - prejmenovani turnusu
 // oldtu - stare oznaceni turnusu
 // newtu - nove oznaceni turnusu
 // hrl   - horlog casove varianty turnusu pro prejmenovani
 //         (neni-li def. hrl, prejmenuji se vsechny casove varianty)
 s $zt="err" s err=""
 n (idfa,nmsp,zp,oldtu,newtu,hrl,in,out)
 k out s out("stt","rename")=0
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(oldtu)="" q "1~oldtu="
 i $g(newtu)="" q "1~newtu="
 // vsechny casove varianty
 i '+$g(hrl) d
 .k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,oldtu,"","",.istur) zt:+err "merr" s err="" q:'+$g(istur)
 .s hrl="" f  s hrl=$o(^[nmsp]OBT(zp,oldtu,hrl)) q:(hrl="")!(hrl?.a)  d
 ..k ^[nmsp]OBT(zp,newtu,hrl) m ^[nmsp]OBT(zp,newtu,hrl)=^[nmsp]OBT(zp,oldtu,hrl)
 .k ^[nmsp]OBT(zp,oldtu) s out("stt","rename")=1
 // jedna casova varianta
 i +$g(hrl) d
 .k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,oldtu,hrl,"",.istur) zt:+err "merr" s err="" q:'+$g(istur)
 .k ^[nmsp]OBT(zp,newtu,hrl) m ^[nmsp]OBT(zp,newtu,hrl)=^[nmsp]OBT(zp,oldtu,hrl)
 .k ^[nmsp]OBT(zp,oldtu,hrl)
 .s out("stt","rename")=1
 q 0
 //
newTimeVariantTur(idfa,nmsp,zp,tu,hrl,newhrl,in,out)
 // err=$$newTimeVariantTur(idfa,nmsp,zp,tu,hrl,newhrl,.in,.out) - vytvoreni nove casove varianty turnusu
 s $zt="err" s err=""
 n (idfa,nmsp,zp,tu,hrl,newhrl,in,out)
 k out s out("stt","newtimevariant")=0
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 i $g(hrl)="" q "1~hrl="
 i $g(newhrl)="" q "1~newhrl="
 //
 k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.istur) zt:+err "merr" s err="" q:'+$g(istur) 0
 //
 k ^[nmsp]OBT(zp,tu,newhrl)
 m ^[nmsp]OBT(zp,tu,newhrl)=^[nmsp]OBT(zp,tu,hrl)
 i $d(^[nmsp]OBT(zp,tu,newhrl)) {
	 i +$p(^[nmsp]OBT(zp,tu,newhrl),":",33) {
		 i ((+$p(^[nmsp]OBT(zp,tu,newhrl),":",33))<newhrl) s $p(^[nmsp]OBT(zp,tu,newhrl),":",33)=""
	 }
 }
 s out("stt","newtimevariant")=1
 q 0
 //
copyTur(idfa,nmsp,zp,tu,hrl,newzp,newtu,newhrl,in,out)
 // s err=$$copyTur(idfa,nmsp,zp,tu,hrl,newzp,newtu,newhrl,.in,.out) - kopie turnusu 
 // pokud hrl="" & newhrl="" kopirujou se vsechny casove varianty turnusu
 s $zt="err" s err=""
 n (idfa,nmsp,zp,tu,hrl,newzp,newtu,newhrl,in,out)
 k out s out("stt","copy")=0
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 i $g(newzp)="" q "1~newzp="
 i $g(newtu)="" q "1~newtu="
 i (+$g(hrl))!(+$g(newhrl)) i $g(hrl)="" q "1~hrl="
 i (+$g(hrl))!(+$g(newhrl)) i $g(newhrl)="" q "1~newhrl="
 //
 i '(+$g(hrl)) d
 .k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,"","",.istur) zt:+err "merr" s err="" q:'+$g(istur)
 .k ^[nmsp]OBT(newzp,newtu) m ^[nmsp]OBT(newzp,newtu)=^[nmsp]OBT(zp,tu) s out("stt","copy")=1
 i (+$g(hrl)) d
 .k istur s err=$$isTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.istur) zt:+err "merr" s err="" q:'+$g(istur)
 .k ^[nmsp]OBT(newzp,newtu,newhrl) m ^[nmsp]OBT(newzp,newtu,newhrl)=^[nmsp]OBT(zp,tu,hrl) s out("stt","copy")=1
 q 0
 //
cnvDtaTur(idfa,nmsp,in,out)
 // err=$$cnvDtaTur(idfa,nmsp,.in,.out) - hromadne konverze dat v turnusech
 //  -in:
 //   in("zp",zp)="" je-li def, pak vybiram jen turnusy pro def zp
 //   in("prv",prv)="" je-li def, pak vybiram turnusy pro def prv (provoz)
 //   
 //   in("turpl",1)=$h = je-li def, pak prochazi cas.var.turnusu platne k datu (jedna var.)
 //   in("turpl",2)=$h = je-li def, pak prochazi cas.var.turnusu platne k datu a dalsi (muze jich byt vice)
 //   in("turpl",3)=$h = je-li def, pak prochazi cas.var.turnusu od data(vcetne) dale (muze jich byt vice)
 //
 //  =================================================
 //  konverzni tabulky pro precislovani in("arr",...
 //   in("arr",1,l)=l         - budou se precislovavat linky
 //   in("arr",2,l,s)=s       - budou se precislovavat linky,spoje
 //  =================================================                 
 //  -out:
 //    out("arr",zp,tu,hrl)="" turnusy, ktere to precislovalo
 //  
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i ('$d(in("turpl",1)))&('$d(in("turpl",2)))&('$d(in("turpl",3))) q "1~turpl="
 i '$d(in("arr")) q "1~in(""arr"")="
 // uprava pole pro konverzi
 k cnv
 // linka
 s li="" f  s li=$o(in("arr",1,li)) q:li=""  s cnv("l",+li)=+$g(in("arr",1,li))
 // linka a spoje
 s li="" f  s li=$o(in("arr",2,li)) q:li=""  d
 .s sp="" f  s sp=$o(in("arr",2,li,sp)) q:sp=""  d
 ..s cnv("ls",li,sp)=(li_"^"_$g(in("arr",2,li,sp)))
 // ========================
 // vyhledani turnusu k uprave
 k arrin,arrout m arrin=in s err=$$lTur^OBapiED(idfa,nmsp,.arrin,.arrout) g:+err err s err=""
 s wrk=$g(arrout) i wrk="" q 0
 // uprava turnusu
 s zp="" f  s zp=$o(^CacheTempJB(wrk,zp)) q:zp=""  d
 .s tu="" f  s tu=$o(^CacheTempJB(wrk,zp,tu)) q:tu=""  d
 ..s hrl=""  f  s hrl=$o(^CacheTempJB(wrk,zp,tu,hrl)) q:hrl=""  d
 ...s ischng=0
 ...k arrtur
 ...m arrtur=^[nmsp]OBT(zp,tu,hrl)
 ...// datove zmeny v turnuse
 ...s val=$g(arrtur) q:+val
 ...// konverze linek - kmenova linka
 ...i $d(cnv("l")) d
 ....// kmenova linka
 ....s li=$p(val,":",12) q:li=""  q:'$d(cnv("l",li))
 ....s $p(val,":",12)=cnv("l",li) s arrtur=val s ischng=1
 ...// ==============================
 ...s cnt="" f  s cnt=$o(arrtur(cnt)) q:(cnt="")!(cnt?.a)  d
 ....s val=$g(arrtur(cnt))
 ....i $p(val,":",2)=3 d
 .....s lisp=$p($p(val,"~",1),":",5)
 .....i lisp["." s li=(lisp\1) s sp=(lisp#1*1000)
 .....i lisp["^" s li=$p(lisp,"^",1) s sp=$p(lisp,"^",2)
 .....// konverze linek
 .....i $d(cnv("l",li)) d
 ......s nlisp=(cnv("l",li)_"^"_sp)
 ......s tmp=$p(val,"~",1) s $p(tmp,":",5)=nlisp s $p(val,"~",1)=tmp
 ......s arrtur(cnt)=val s ischng=1
 .....// konverze linek a spoju
 .....i $d(cnv("ls",li,sp)) d
 ......s nlisp=cnv("ls",li,sp)
 ......s tmp=$p(val,"~",1) s $p(tmp,":",5)=nlisp s $p(val,"~",1)=tmp
 ......s arrtur(cnt)=val s ischng=1
 ...//
 ...i $d(arrtur("S")) d
 ....k arrd s lisp="" f  s lisp=$o(arrtur("S",lisp)) q:lisp=""  d
 .....s val=$g(arrtur("S",lisp))
 .....i lisp["." s li=(lisp\1) s sp=lisp#1*1000
 .....i lisp["^" s li=$p(lisp,"^",1) s sp=$p(lisp,"^",2)
 .....s nlisp=li_"^"_sp
 .....i $d(cnv("l",li)) s nlisp=(cnv("l",li)_"^"_sp) s ischng=1
 .....i $d(cnv("ls",li,sp)) s nlisp=cnv("ls",li,sp) s ischng=1
 .....s arrd("S",nlisp)=val
 ....k arrtur("S") m arrtur("S")=arrd("S")
 ...// kontrola, zda nastala zmena
 ...q:'ischng
 ...k ^[nmsp]OBT(zp,tu,hrl) m ^[nmsp]OBT(zp,tu,hrl)=arrtur
 ...s out("arr",zp,tu,hrl)=""
 k ^CacheTempJB(wrk)
 q 0
isTurLocZst(idfa,nmsp,czs,in,out)
 // err=$$isTurLocZst(idfa,nmsp,czs,.in,.out) - kontrola na vyskyt lokalni zastavky
 // in -
 // out - počet výskytů
 // out(zp,tu,hrl,cas)=""
 // 
 n (idfa,nmsp,czs,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(czs)="" q "1~czs="
 s dz=$$gFaDz^OBapiED(idfa) q:dz="" "1~dz=" 
 s zp="" f  s zp=$o(^[nmsp]OBT(zp)) q:zp=""  d
 .i (zp\100)'=dz q
 .s tu="" f  s tu=$o(^[nmsp]OBT(zp,tu)) q:tu=""  d
 ..s hrl="" f  s hrl=$o(^[nmsp]OBT(zp,tu,hrl)) q:hrl=""  d
 ...s cas="" f  s cas=$o(^[nmsp]OBT(zp,tu,hrl,cas)) q:cas=""!(cas?.A)  d
 ....s val=$g(^[nmsp]OBT(zp,tu,hrl,cas))
 ....s typ=$p(val,":",2) q:'(typ>3&(typ<8))
 ....f ind=5,6 d:$p(val,":",ind)["/"
 .....q:+$p(val,":",ind)'=+czs
 .....s out=$g(out)+1 s out(zp,tu,hrl,cas)=""
 q 0
chngTurLocZst(idfa,nmsp,fromczs,toczs,in,out)
 // err=$$chngTuLocZst(idfa,nmsp,fromczs,toczs,.in,.out) - hromadna zmena lokalnich zastavek v turnusech
 // in -
 // out -
 n (idfa,nmsp,fromczs,toczs,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(fromczs)="" q "1~fromczs="
 i $g(toczs)="" q "1~toczs="
 //
 s dz=$$gFaDz^OBapiED(idfa) q:dz="" "1~dz=" 
 s zp="" f  s zp=$o(^[nmsp]OBT(zp)) q:zp=""  d
 .i (zp\100)'=dz q
 .s tu="" f  s tu=$o(^[nmsp]OBT(zp,tu)) q:tu=""  d
 ..s hrl="" f  s hrl=$o(^[nmsp]OBT(zp,tu,hrl)) q:hrl=""  d
 ...s cas="" f  s cas=$o(^[nmsp]OBT(zp,tu,hrl,cas)) q:cas=""!(cas?.A)  d
 ....s val=$g(^[nmsp]OBT(zp,tu,hrl,cas))
 ....s typ=$p(val,":",2) q:'(typ>3&(typ<8))
 ....f ind=5,6 d:$p(val,":",ind)["/"
 .....q:+$p(val,":",ind)'=+fromczs
 .....s $p(^[nmsp]OBT(zp,tu,hrl,cas),":",ind)=toczs_"/L"
 q 0
gTurMmProv(idfa,nmsp,zp,tu,hrl,in,out)
 n (idfa,nmsp,zp,tu,hrl,in,out)
 // out("dta",1)=mm doba provozu
 //
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 i $g(hrl)="" q "1~hrl="
 //
 i '$d(^[nmsp]OBT(zp,tu)) q "1~turnus "_zp_"/"_tu_" neni definovan"
 s hrl=$o(^[nmsp]OBT(zp,tu,(hrl+.01)),-1) q:hrl="" "1~od turnusu "_zp_"/"_tu_" neni prislusna casova varianta"
 s out("dta",1)=$p($g(^[nmsp]OBT(zp,tu,hrl,"T")),":",17)
 q 0
 //
gAllTurLiSp(idfa,nmsp,glb,in,out)
 // err=$$gAllTurLiSp(idfa,nmsp,glb,.in,.out) - vrati vsechny linky a spoje na turnusech v glb
 // @glb@("arr",1,li,sp,hrl,zp,tu)=""
 s $zt="err" s err="" k out
 n (idfa,nmsp,glb,in,out)
 //kontrola parametru
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(glb)="" q "1~glb="
 //
 k @glb@("arr",1)
 s zp="" f {
	 s zp=$o(^[nmsp]OBT(zp)) i zp="" q
	 s tu="" f {
		 s tu=$o(^[nmsp]OBT(zp,tu)) i tu="" q
		 s hrl="" f {
			 s hrl=$o(^[nmsp]OBT(zp,tu,hrl)) i hrl="" q
			 s tm="" f  {
				 s val="" s tm=$o(^[nmsp]OBT(zp,tu,hrl,tm),1,val) i (tm="")!(tm?.a) q
				 i +$p(val,":",2)=3 {
					 s val=$p(val,"~",1)
					 i $p(val,":",5)["." {
						 s li=($p(val,":",5)\1)
						 s sp=($p(val,":",5)#1*1000)
						 s @glb@("arr",1,li,sp,hrl,zp,tu)=""
					 }
 					 i $p(val,":",5)["^" {
	 					 s li=$p($p(val,":",5),"^",1)
 						 s sp=$p($p(val,":",5),"^",2)
 						 i (li'="")&(sp'="") {
	 						 s @glb@("arr",1,li,sp,hrl,zp,tu)=""
 						 }
 					 }
				 }	 
			 }
		 }
	 }
 }
 q 0
qvTuV(val,arr)
 // rozbali vypoctovou vetu turnusu (dzva) do pole
 n cnt k arr
 f cnt=1:1:$$gPcPDU s arr(cnt)=$p(val,":",cnt)
 f cnt=1:1:$$gPcPMU s arr(19,cnt)=$p(arr(19),",",cnt)
 s arr(19)=""
 q
svTuV(val,arr)
 // zabali vypoctovou vetu turnusu (dzva) do vety
 n cnt,mzd s val="" s mzd=""
 f cnt=1:1:$$gPcPMU s $p(mzd,",",cnt)=$g(arr(19,cnt))
 f cnt=1:1:$$gPcPDU s $p(val,":",cnt)=$g(arr(cnt))
 s $p(val,":",19)=mzd
 q
gPcPZU()
 // pocet udaju v zakladni vete turnusu/dzva
 q 71
gPcPDU()
 // pocet udaju v datove vete turnusu/dzva
 q 113
gPcPMU()
 // pocet mzdovych udaju v datove vete (19 udaj v dat, vete)
 q 52
 //
gTurZUDsc(arr)
 // vrati popis zakladnich polozek turnusu
 // arr("dsc","zu",cnt)=typ~popis
 // typ 1 cislo / 2 text 
 // =========================================
 // zakladni udaje turnusu
 k arr("dsc","zu")
 s arr("dsc","zu",1)="~"
 s arr("dsc","zu",2)="2~datum zápisu"
 s arr("dsc","zu",3)="1~posilový turnus"
 s arr("dsc","zu",4)="1~počet dní"
 s arr("dsc","zu",5)="1~čas začátku turnusu"
 s arr("dsc","zu",6)="1~čas ukončení turnusu"
 s arr("dsc","zu",7)="2~platnost turnusu"
 s arr("dsc","zu",8)="2~platnost turnusu"
 s arr("dsc","zu",9)="2~jede od"
 s arr("dsc","zu",10)="2~jede do"
 s arr("dsc","zu",11)="1~časová varianta od"
 s arr("dsc","zu",12)="2~kmenová linka"
 s arr("dsc","zu",13)="2~dopravní typ vozidla"
 s arr("dsc","zu",14)="1~přirážka PH"
 s arr("dsc","zu",15)="1~dodk"
 s arr("dsc","zu",16)="1~koeficient mzdy"
 s arr("dsc","zu",17)="2~OSA"   
 s arr("dsc","zu",18)="2~PPOS"
 s arr("dsc","zu",19)="2~PAUT"
 s arr("dsc","zu",20)="1~dodk noc"
 s arr("dsc","zu",21)="1~výše diet"
 s arr("dsc","zu",22)="1~fixní příplatek ke mzdě"
 s arr("dsc","zu",23)="1~vícesměnný příplatek"
 s arr("dsc","zu",24)="1~% čekání do odpracované doby"
 s arr("dsc","zu",25)="1~vyrovnávací doba"
 s arr("dsc","zu",26)="1~příplatek nocovné"
 s arr("dsc","zu",27)="2~kmenová RZ"
 s arr("dsc","zu",28)="2~dislokace"
 s arr("dsc","zu",29)="1~fiktivní turnus"
 s arr("dsc","zu",30)="2~číslo objednávky"
 s arr("dsc","zu",31)="1~označení turnusu pro převod do odbav.zař"
 s arr("dsc","zu",32)="2~popis kmenové linky"
 s arr("dsc","zu",33)="1~časová varianta do"
 s arr("dsc","zu",34)="1~fixní příplatek k čekání"
 s arr("dsc","zu",35)="1~způsob proplácení diet"
 s arr("dsc","zu",36)="1~objížďkový turnus"
 s arr("dsc","zu",37)="1~nízkopodlažní vozidlo" 
 s arr("dsc","zu",38)="1~příznak fakturace"
 s arr("dsc","zu",39)="2~id zákazníka"
 s arr("dsc","zu",40)="1~druh zájezdu"
 s arr("dsc","zu",41)="1~způsob fakturace"
 s arr("dsc","zu",42)="1~id provozovny pro fakturaci"
 s arr("dsc","zu",43)="2~způsob vystavení faktury"
 s arr("dsc","zu",44)="2~fakturační měna"
 s arr("dsc","zu",45)="2~měna pro výpočet faktury"
 s arr("dsc","zu",46)="1~sazba za km obsazený"
 s arr("dsc","zu",47)="1~sazba za km neobsazený"
 s arr("dsc","zu",49)="1~sazba za 15 min čekání"
 s arr("dsc","zu",49)="1~smluvní cena bez DPH"
 s arr("dsc","zu",50)="1~smluvní cena s DPH"
 s arr("dsc","zu",51)="1~středisko odběratele pro vnitrofakturu"
 s arr("dsc","zu",52)="2~limit km pro turnus"
 s arr("dsc","zu",53)="1~dělený turnus"
 s arr("dsc","zu",54)="1~sazba pro paušální mzdy"
 s arr("dsc","zu",55)="2~id zákazníka pro tržbu vnitrofaktury"
 s arr("dsc","zu",56)="1~zahrnout do doby čekání pro fakturaci manipulace"
 s arr("dsc","zu",57)="1~zahrnout do doby čekání pro fakturaci vyrovnávací dobu"
 s arr("dsc","zu",58)="1~způsob zaokrouhlení čekání pro fakturaci"
 s arr("dsc","zu",59)="2~požadovaná kvalita vozidla"
 s arr("dsc","zu",60)="1~neproplácet čekání"
 s arr("dsc","zu",61)="1~nevyhodnocovat vyrovnávací dobu"
 s arr("dsc","zu",62)="1~způsob výpočtu čekání pro fakturaci"
 s arr("dsc","zu",63)="1~zahrnout do doby čekání pro fakturaci všechny činnosti mimo jizdy"
 s arr("dsc","zu",64)="1~nezapočítávat turnus v plánu do neobsazených turnusů" 
 s arr("dsc","zu",65)="1~id pro výpočet zahraničních diet"
 s arr("dsc","zu",66)="1~id pro výpočet příplatku za odpracované hodiny"
 s arr("dsc","zu",67)="1~hlavní varianta"
 s arr("dsc","zu",68)="1~maximální obsazenost"
 s arr("dsc","zu",69)="2~maximální obsazenost k (info)" 
 s arr("dsc","zu",70)="2~kurs (informace o kursu MPVNET, pro strojky TELMAX)"
 s arr("dsc","zu",71)="1~alternativní varianta"
 //zakladni udaje pro ridice
 k arr("dsc","os")
 s arr("dsc","os",1)="1~pohotovost pri spolujízdě"
 s arr("dsc","os",2)="1~příplatek nocovné"
 s arr("dsc","os",3)="1~pendl"
 s arr("dsc","os",4)="1~jízda"
 s arr("dsc","os",5)="1~manipulace"
 s arr("dsc","os",6)="1~ostatní práce"
 s arr("dsc","os",7)="1~DODK"
 s arr("dsc","os",8)="1~čekání"
 s arr("dsc","os",9)="1~hodiny v noci"
 s arr("dsc","os",10)="1~diety"
 s arr("dsc","os",11)="1~km celkem"
 s arr("dsc","os",12)="2~hodiny SoNe"
 s arr("dsc","os",13)="2~hodiny Sv"
 q
gTurDsc(arr)
 // d ^gTuVDsc(.arr)
 // vrati popis položek vypoctove vety turnusu
 // arr("dsc","tuv",cnt)=zkratka~jednotka~popis
 //     jednotka 1=min 2=ks 3=Kč 4=Km
 k arr("dsc","tuv")
 s arr("dsc","tuv",1)="HodJíz~1~hodiny jízdy"
 s arr("dsc","tuv",2)="HodMan~1~hodiny manipulací (55+56+57+58+59+60+61)"
 s arr("dsc","tuv",3)="HodČekZap~1~hodiny čekání započtené do odpracované doby"
 s arr("dsc","tuv",4)="HodJid~1~hodiny přestávky na jídlo"
 s arr("dsc","tuv",5)="HodBP~1~hodiny bezpečnostní přestávky"
 s arr("dsc","tuv",6)="HodOst~1~hodiny ostatní práce (63+64+65+66+67+68+69+70+71+86+106+108)"
 s arr("dsc","tuv",7)="HodPau~1~hodiny ostatní paušální práce"
 s arr("dsc","tuv",8)="HodVyr~1~hodiny vyrovnavaci doby (72+73+74+75+76+77+78)"
 s arr("dsc","tuv",9)="HodDODK~1~hodiny DODK"
 s arr("dsc","tuv",10)="HodZapNepl~1~hodiny započtené do odpracované doby, neplacené"
 s arr("dsc","tuv",11)="HodOdprCel~1~hodiny odpracovane celkem (1+2+3+5+6+7+8+9+10+12+33+36+54+98,+dle nast.4,96)"
 s arr("dsc","tuv",12)="HodPracZal~1~hodiny pracovní zalohy"
 s arr("dsc","tuv",13)="HodČekCel~1~hodiny čekání celkem (3+14+95)"
 s arr("dsc","tuv",14)="HodČekNeZap~1~hodiny čekání nezapočtené do odpracované doby, placené (14+43=79+80+81+82+83+84+85)"
 s arr("dsc","tuv",15)="HodNoc~1~hodiny v noci"
 s arr("dsc","tuv",16)="HodNcv~1~hodiny nocování"
 s arr("dsc","tuv",17)="HodProv~1~hodiny doby provozu (88+89+90+91+92+93+94)"
 s arr("dsc","tuv",18)="KčDiety~3~kč za diety(19/39+19/40)"
 s arr("dsc","tuv",19)=""
 s arr("dsc","tuv",20)="HodSv~1~hodiny ve svátek"
 s arr("dsc","tuv",21)="HodSoNe~1~hodiny v SO-NE (111+112)"
 s arr("dsc","tuv",22)="KmCel~4~km celkové"
 s arr("dsc","tuv",23)="KmVni~4~km vnitro"
 s arr("dsc","tuv",24)="KmDál~4~km dálkové"
 s arr("dsc","tuv",25)="KmMěs~4~km město"
 s arr("dsc","tuv",26)="KmPří~4~km příměsto"
 s arr("dsc","tuv",27)="KmMez~4~km mezinárodní"
 s arr("dsc","tuv",28)="KmSml~4~km smluvní"
 s arr("dsc","tuv",29)="KmRež~4~km režijní"
 s arr("dsc","tuv",30)="KmKlo~4~km kloubovým autobusem"
 s arr("dsc","tuv",31)="HodZaš~1~hodiny zaškolování"
 s arr("dsc","tuv",32)="KčRozKoef~3~kč rozdíl koeficientu turnusu"
 s arr("dsc","tuv",33)="HodSnížSazb~1~hodiny sníženou sazbou (specialita UL)"
 s arr("dsc","tuv",34)="KčPremLin~3~kč prémie za linky a režijní km (za km, dobu)"
 s arr("dsc","tuv",35)="KčPau~3~kč paušální"
 s arr("dsc","tuv",36)="HodJinPr~1~hodiny jiné práce"
 s arr("dsc","tuv",37)="HodSpj~1~hodiny spolujízdy"
 s arr("dsc","tuv",38)="HodČekNeZapPrac~1~hodiny čekání nezapočtené v pracovní dny"
 s arr("dsc","tuv",39)="HodČekNeZapSONESV~1~hodiny čekání nezapočtené v SO,NE,SV"
 s arr("dsc","tuv",40)="HodČekNeZapPL~1~hodiny čekání nezapočtené pod limit (specialita)"
 s arr("dsc","tuv",41)="HodČekNeZapNL~1~hodiny čekání nezapočtené nad limit (specialita)"
 s arr("dsc","tuv",42)="HodOdpč~1~hodiny odpočinek"
 s arr("dsc","tuv",43)="HodČekNeZapMHD~1~hodiny čekání nezapočtené pro MHD, placeno sazbou"
 s arr("dsc","tuv",44)="HodJízVni~1~hodiny jízdy vnitro"
 s arr("dsc","tuv",45)="HodJízDál~1~hodiny jízdy dálková"
 s arr("dsc","tuv",46)="HodJízMěs~1~hodiny jízdy město"
 s arr("dsc","tuv",47)="HodJízPří~1~hodiny jízdy příměsto"
 s arr("dsc","tuv",48)="HodJízMez~1~hodiny jízdy mezinárodní"
 s arr("dsc","tuv",49)="HodJízSml~1~hodiny jízdy smluvní"
 s arr("dsc","tuv",50)="HodJízRež~1~hodiny jízdy režijní"
 s arr("dsc","tuv",51)="HodRozdělSměna~1~hodiny rozdělená směna"
 s arr("dsc","tuv",52)="PočRozdělSměn~2~počet rozdělených směn"
 s arr("dsc","tuv",53)="HodManRoz~1~rozdíl max.man.-dosaz.man při dopočtu max.man"
 s arr("dsc","tuv",54)="HodFix~1~fixní hodiny na doklad"
 s arr("dsc","tuv",55)="HodManVni~1~hodiny manipulací vnitro"
 s arr("dsc","tuv",56)="HodManDál~1~hodiny manipulací dálková"
 s arr("dsc","tuv",57)="HodManMěs~1~hodiny manipulací město"
 s arr("dsc","tuv",58)="HodManPří~1~hodiny manipulací příměsto"
 s arr("dsc","tuv",59)="HodManMez~1~hodiny manipulací mezinárodní"
 s arr("dsc","tuv",60)="HodManSml~1~hodiny manipulací smluvní"
 s arr("dsc","tuv",61)="HodManRež~1~hodiny manipulací režijní"
 s arr("dsc","tuv",62)="PočDoklDen~2~počet dní s dokladem"
 s arr("dsc","tuv",63)="HodOstOsPr~1~hodiny ostatní práce - ostatní práce"
 s arr("dsc","tuv",64)="HodOstMyti~1~hodiny ostatní práce - mytí, čištění"
 s arr("dsc","tuv",65)="HodOstOPen~1~hodiny ostatní práce - odvod peněz"
 s arr("dsc","tuv",66)="HodOstTank~1~hodiny ostatní práce - tankovani"
 s arr("dsc","tuv",67)="HodOstRezP~1~hodiny ostatní práce - režijní"
 s arr("dsc","tuv",68)="HodOstPost~1~hodiny ostatní práce - rozvoz pošty"
 s arr("dsc","tuv",69)="HodOstCykl~1~hodiny ostatní práce - připojení cyklopřívěsu"
 s arr("dsc","tuv",70)="HodOstOprCst~1~hodiny ostatní práce - opravy na cestě"
 s arr("dsc","tuv",71)="HodOstNalZav~1~hodiny ostatní práce - naložení zavazadel"
 s arr("dsc","tuv",72)="HodVyrVni~1~hodiny vyrovnavaci doby vnitro"
 s arr("dsc","tuv",73)="HodVyrDál~1~hodiny vyrovnavaci doby dálková"
 s arr("dsc","tuv",74)="HodVyrMěs~1~hodiny vyrovnavaci doby město"
 s arr("dsc","tuv",75)="HodVyrPří~1~hodiny vyrovnavaci doby příměsto"
 s arr("dsc","tuv",76)="HodVyrMez~1~hodiny vyrovnavaci doby mezinárodní"
 s arr("dsc","tuv",77)="HodVyrSml~1~hodiny vyrovnavaci doby smluvní"
 s arr("dsc","tuv",78)="HodVyrRež~1~hodiny vyrovnavaci doby režijní"
 s arr("dsc","tuv",79)="HodČekNeZapVni~1~hodiny čekání nezapočtené do odpracované doby vnitro"
 s arr("dsc","tuv",80)="HodČekNeZapDál~1~hodiny čekání nezapočtené do odpracované doby dálková"
 s arr("dsc","tuv",81)="HodČekNeZapMěs~1~hodiny čekání nezapočtené do odpracované doby město"
 s arr("dsc","tuv",82)="HodČekNeZapPří~1~hodiny čekání nezapočtené do odpracované doby příměsto"
 s arr("dsc","tuv",83)="HodČekNeZapMez~1~hodiny čekání nezapočtené do odpracované doby mezinárodní"
 s arr("dsc","tuv",84)="HodČekNeZapSml~1~hodiny čekání nezapočtené do odpracované doby smluvní"
 s arr("dsc","tuv",85)="HodČekNeZapRež~1~hodiny čekání nezapočtené do odpracované doby režijní"
 s arr("dsc","tuv",86)="HodOstDopSme~1~hodiny ostatní práce - doplatek do směny"
 s arr("dsc","tuv",87)="HodPriLiSp~1~hodiny pro příplatek za linky a spoje"
 s arr("dsc","tuv",88)="HodProvVni~1~hodiny doby provozu vnitro"
 s arr("dsc","tuv",89)="HodProvDál~1~hodiny doby provozu dálková"
 s arr("dsc","tuv",90)="HodProvMěs~1~hodiny doby provozu město"
 s arr("dsc","tuv",91)="HodProvPří~1~hodiny doby provozu příměsto"
 s arr("dsc","tuv",92)="HodProvMez~1~hodiny doby provozu mezinárodní"
 s arr("dsc","tuv",93)="HodProvSml~1~hodiny doby provozu smluvní"
 s arr("dsc","tuv",94)="HodProvRež~1~hodiny doby provozu režijní"
 s arr("dsc","tuv",95)="HodČekNeZapNePl~1~hodiny čekání nezapočtené do odpracované doby, neplacené"
 s arr("dsc","tuv",96)="HodZpoždění~1~hodiny zpoždění"
 s arr("dsc","tuv",97)="KmRežHrazené~4~km režijní, hrazené, část z pol.29"
 s arr("dsc","tuv",98)="HodPřerPrZap~1~hodiny přerušení práce započtené"
 s arr("dsc","tuv",99)="HodPřerPrNeZap~1~hodiny přerušení práce nezapočtené"
 s arr("dsc","tuv",100)="HodPřerPrNeZapMHD~1~hodiny přerušení práce nezapočtené pro MHD, placeno sazbou"
 s arr("dsc","tuv",101)="HodPracPohot~1~hodiny pracovní pohotovosti"
 s arr("dsc","tuv",102)="HodPříOdpSa1~1~hodiny pro příplatek za odpracované hodiny sazbou 1"
 s arr("dsc","tuv",103)="HodPříOdpSa2~1~hodiny pro příplatek za odpracované hodiny sazbou 2"
 s arr("dsc","tuv",104)="HodZtíPro~1~hodiny doby ve ztíženém prostředí"
 s arr("dsc","tuv",105)="HodOdpZtíPro~1~hodiny odpracované pro příplatek ve ztíženém prostředí"
 s arr("dsc","tuv",106)="HodOstNatVoz~1~hodiny ostatní práce - natáčení vozidla"
 s arr("dsc","tuv",107)="HodVloVýk~1~hodiny vloženého výkonu"
 s arr("dsc","tuv",108)="HodOstCyklO~1~hodiny ostatní práce - odpojení cyklopřívěsu"
 s arr("dsc","tuv",109)="KmTrolej~4~km trolejbusem"
 s arr("dsc","tuv",110)="HodZpoždNadLim~1~hodiny zpoždění nad limit"
 s arr("dsc","tuv",111)="HodSo~1~hodiny v SO"
 s arr("dsc","tuv",112)="HodNe~1~hodiny v NE"
 s arr("dsc","tuv",113)="HodSmeZVol~1~hodiny směny z volna"
 //mzdy
 s arr("dsc","tuv",19,1)="KčMzdCel~3~kč mzda celkem (19/(49+5+6+14+16+17+18+19+21+23+29+31))"
 s arr("dsc","tuv",19,2)="KčČek~3~kč čekání (19/(2+30+32+35))"
 s arr("dsc","tuv",19,3)="KčNocv~3~kč nocovné paušálně"
 s arr("dsc","tuv",19,4)="KčPřípl~3~kč příplatek (19/(7+8+9+10+11+13+22+24+33+39+45+46+47+51+52))"
 s arr("dsc","tuv",19,5)="KčHodTar~3~kč za hodiny tarifem"
 s arr("dsc","tuv",19,6)="KčHodSnSazb~3~kč za hodiny sníženou sazbou"
 s arr("dsc","tuv",19,7)="KčPříplKlo~3~kč příplatek za kloubový autobus"
 s arr("dsc","tuv",19,8)="KčPříplInkaso~3~kč příplatek za odbavení (inkaso)"
 s arr("dsc","tuv",19,9)="KčPříplMHD~3~kč příplatek za MHD"
 s arr("dsc","tuv",19,10)="KčPříplZásil~3~kč za zásilky"
 s arr("dsc","tuv",19,11)="KčPříplLin~3~kč příplatek za linky a režijní km (za km, dobu) (obsahuje 19/50)"
 s arr("dsc","tuv",19,12)="KčHodNoc~3~kč za hodiny v noci"
 s arr("dsc","tuv",19,13)="KčPřípl78~3~kč příplatek kódem 78+79+82"
 s arr("dsc","tuv",19,14)="KčPauš~3~kč paušální ke mzdě (19/(43+44))"
 s arr("dsc","tuv",19,15)="KčOběd~3~kč za oběd"
 s arr("dsc","tuv",19,16)="KčVícesmPrv~3~kč za vícesměnný provoz"
 s arr("dsc","tuv",19,17)="KčZast~3~kč za zastávky"
 s arr("dsc","tuv",19,18)="KčOdjSpoj~3~kč za odjete spoje"
 s arr("dsc","tuv",19,19)="KčDodkCDS~3~kč za DODK (CDS specialita)"
 s arr("dsc","tuv",19,20)="PočZast~2~počet zastávek pro výpočet příplatků"
 s arr("dsc","tuv",19,21)="KčPracZál~3~kč za pracovní zálohu (TRADOBUS specialita)"
 s arr("dsc","tuv",19,22)="KčPříplInvalPl~3~kč příplatek za invalidní plošinu"
 s arr("dsc","tuv",19,23)="KčNormČin~3~kč z normovaných činností"
 s arr("dsc","tuv",19,24)="KčPříplPlyn~3~kč příplatek plynový autobus"
 s arr("dsc","tuv",19,25)="KčPříplVícesmPrv~3~kč příplatek za vícesměnný provoz"
 s arr("dsc","tuv",19,26)="KčSpj~3~kč za spolujízdu"
 s arr("dsc","tuv",19,27)="KčMzdHod~3~kč mzda za hodiny (výkon,tarif,zaškolování)"
 s arr("dsc","tuv",19,28)="KčOdp~3~kč za odpočinek"
 s arr("dsc","tuv",19,29)="KčFixDODK~3~kč fixní za DODK"
 s arr("dsc","tuv",19,30)="KčČekMHD~3~kč za čekání v MHD"
 s arr("dsc","tuv",19,31)="KčMzdProvoz~3~kč přirážka do mzdy podle druhu provozu, už je napočtena v mzd, tady pro kontrolu"
 s arr("dsc","tuv",19,32)="KčČekMzd~3~kč přirážka do čekání podle poměru čekání x provoz a tabulky, už je napočteno v cek, tady pro kontrolu"
 s arr("dsc","tuv",19,33)="KčPříplPřívěs~3~kč příplatek za km s přívěsem, je napočten v příplatcích"
 s arr("dsc","tuv",19,34)="KčDělSměna~3~kč za dělenou směnu"
 s arr("dsc","tuv",19,35)="KčPaušČek~3~kč paušální k čekání, fixní příplatek k čekání z turnusu"
 s arr("dsc","tuv",19,36)="KčFixDoc~3~kč fixní na doklad"
 s arr("dsc","tuv",19,37)="KčPříplZajMimořád~3~kč příplatek za zajištění mimořádnosti"
 s arr("dsc","tuv",19,38)="KčNocvh~3~kč nocovné hodinovou sazbou"
 s arr("dsc","tuv",19,39)="KčPříplJiTypRZ~3~kč příplatek za jízdu podle typu vozidla"
 s arr("dsc","tuv",19,40)="KčPřerPrNeZap~3~kč za přerušení práce nezapočtené"
 s arr("dsc","tuv",19,41)="KčPřerPrNeZapMHD~3~kč za přerušení práce nezapočtené v MHD"
 s arr("dsc","tuv",19,42)="KčMzdDopl~3~kč doplatek do mzdy"
 s arr("dsc","tuv",19,43)="KčPauš80~3~kč paušální ke mzdě kód 80"
 s arr("dsc","tuv",19,44)="KčPaušFixTur~3~kč paušální ke mzdě, fixní příplatek ke mzdě z turnusu"
 s arr("dsc","tuv",19,45)="KčPříplOdpSa1~3~kč příplatek za odpracované hodiny sazbou 1"
 s arr("dsc","tuv",19,46)="KčPříplOdpSa2~3~kč příplatek za odpracované hodiny sazbou 2"
 s arr("dsc","tuv",19,47)="KčPříplZtíPro~3~kč příplatek za hodiny ve ztíženém prostředí"
 s arr("dsc","tuv",19,48)="KčVloVýk~3~kč za vložený výkon"
 s arr("dsc","tuv",19,49)="KčMzdVýk~3~kč mzda za výkon"
 s arr("dsc","tuv",19,50)="KčPriLiSp~3~kč příplatek za dobu linek a spojů (doba.v 87)"
 s arr("dsc","tuv",19,51)="KčPříplTrolej~3~kč příplatek za km trolejbusem"
 s arr("dsc","tuv",19,52)="KčPříplKmTypRZ~3~kč příplatek za km podle typu vozidla"
 q
 //
err s $zt="" k out q:$g(err)'="" "1~"_$tr(err,"~","/")  q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDTur1" type="INT" languagemode="0" timestamp="65615,42311.434509"><![CDATA[
OBapiEDTur1
fndDiffTurLS(idfa,nmsp,hrl,in,out)
 s $zt="err" k out
 //
 // err=$$fndDiffTurLS(idfa,nmsp,hrl,in,out) - vyhleda v turnuse linky a spoje, ktere jsou
 //     rozdilne oproti db, spoju a vrati jejich seznam
 //  - hrl - casova varianta turnusu
 //  - in  - pole s casovym prubehem turnusu in("arr","tur",cas,"dta",cnt)=data
 //  - out
 //     vysledek se zapise do out:
 //     ------------------------------
 //     protokol"
 //     out("msg",id)=txt
 //     spoje k aktualizaci:
 //     out("arr",1,l,s,"dta",cnt)=valtu~valsp
 //                           cnt=1 rozdíl v odjezdu
 //                           cnt=2 rozdíl v době jízdy
 //                           cnt=3 rozdíl v km
 //                           cnt=4 rozdíl v příjezdu
 //                           cnt=5 spoj je ukoncen (valsp je horlog ukonceni spoje)
 //     ------------------------------
 n (idfa,nmsp,hrl,in,out)
 s odj="" f  s odj=$o(in("arr","tur",odj)) q:(odj="")  d
 .q:$g(in("arr","tur",odj,"dta",2))'=3
 .// linka spoj kontrola
 .s li=$g(in("arr","tur",odj,"dta",5))
 .s sp=$g(in("arr","tur",odj,"dta",6))
 .s pri=$g(in("arr","tur",odj,"dta",1))
 .s kmtu=$g(in("arr","tur",odj,"dta",3))
 .s jitu=$g(in("arr","tur",odj,"dta",4))
 .s mapr=$g(in("arr","tur",odj,"dta",7))
 .s mapo=$g(in("arr","tur",odj,"dta",8))
 .s odjtu=odj s:mapr'["*" odjtu=odj+mapr f  q:odjtu<1440  s odjtu=odjtu-1440  // prevod casu do prvniho dne
 .s pritu=pri s:mapo'["*" pritu=pri-mapo f  q:pritu<1440  s pritu=pritu-1440  // prevod casu do prvniho dne
 .s:pritu<odjtu pritu=pritu+1440
 .k arr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arr)
 .s odjsp=$g(arr("dta",1))
 .s prisp=$g(arr("dta",2))+(($g(arr("dta",20))-1)*1440)						  // posun casu do dalsiho dne, pokud je spoj vicedenni
 .s jisp=$g(arr("dta",3))
 .s kmsp=$g(arr("dta",5))
 .// kontrola na ukonceny spoj
 .// (ma datum ukonceni a datum ukonceni < datum casove varianty turnusu)
 .i ($g(arr("dta",21))) i ($g(arr("dta",21))<hrl) s out("arr",1,li,sp,"dta",5)="~"_$g(arr("dta",21)) q
 .// kontrola na zmenu
 .q:(kmtu=kmsp)&(jitu=jisp)&(odjtu=odjsp)&(pritu=prisp)
 .s:(odjtu'=odjsp) out("arr",1,li,sp,"dta",1)=odjtu_"~"_odjsp
 .s:(jitu'=jisp) out("arr",1,li,sp,"dta",2)=jitu_"~"_jisp
 .s:(kmtu'=kmsp) out("arr",1,li,sp,"dta",3)=kmtu_"~"_kmsp
 .s:(pritu'=prisp) out("arr",1,li,sp,"dta",4)=pritu_"~"_prisp
 q 0
 //
actDiffTurLS(idfa,nmsp,hrl,arrls,in,out)
 s $zt="err" k out
 //
 // err=$$actDiffTurLS(idfa,nmsp,hrl,arrls,in,out) - aktualizace rozdilnych spoju v turnusech
 //  - hrl - casova varianta turnusu
 //  - arrls - pole se spoji, ktere se budou aktualizovat arrls("arr",1,li,sp)=""
 //  - in - pole s casovym prubehem turnusu in("arr","tur",cas,"dta",1)=data
 //  - out
 //     vysledek se zapise do out:
 //     ------------------------------
 //     out("arr","tur",cas,"dta",...)           ... zaktualizovany turnus
 //     out("msg",id)=txt                        ... protokol
 //     arrls("arr",2,odj,"dta",1)=li            ... linka k aktualizaci
 //     arrls("arr",2,odj,"dta",2)=sp            ... spoj k aktualizaci
 //     arrls("arr",2,odj,"dta",3)=0/1           ... priznak aktualizace
 //     ------------------------------
 n (idfa,nmsp,hrl,arrls,in,out)
 f  s ischng=0 d  q:'ischng
 .s odj="" f  s odj=$o(in("arr","tur",odj)) q:(odj="")  d
 ..q:$g(in("arr","tur",odj,"dta",2))'=3
 ..s li=+$g(in("arr","tur",odj,"dta",5))
 ..s sp=+$g(in("arr","tur",odj,"dta",6))
 ..//=====================
 ..//spoj se neaktualizuje
 ..//=====================
 ..q:'$d(arrls("arr",1,li,sp))
 ..//===============
 ..// spoj je zruseny
 ..//(nebudu aktualizovat ale upozornim_
 ..//===============
 ..i $d(arrls("arr",1,li,sp,"dta",5)) d  q
 ...s arrls("arr",2,odj,"dta",1)=li
 ...s arrls("arr",2,odj,"dta",2)=sp
 ..//===============
 ..s pri=$g(in("arr","tur",odj,"dta",1))
 ..s kmtu=$g(in("arr","tur",odj,"dta",3))
 ..s jitu=$g(in("arr","tur",odj,"dta",4))
 ..s mapr=$g(in("arr","tur",odj,"dta",7))
 ..s mapo=$g(in("arr","tur",odj,"dta",8))
 ..//zaloha rucne zadanych dat 
 ..k arrzaldta f cnt=20,22,23,24,25 s arrzaldta(cnt)=$g(in("arr","tur",odj,"dta",cnt))
 ..//=========================
 ..s odjtu=odj s:mapr'["*" odjtu=odj+mapr f  q:odjtu<1440  s odjtu=odjtu-1440  // prevod casu do prvniho dne
 ..s pritu=pri s:mapo'["*" pritu=pri-mapo f  q:pritu<1440  s pritu=pritu-1440  // prevod casu do prvniho dne
 ..s:pritu<odjtu pritu=pritu+1440
 ..k arr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arr)
 ..s odjsp=$g(arr("dta",1))
 ..s prisp=$g(arr("dta",2))+(($g(arr("dta",20))-1)*1440)
 ..s jisp=$g(arr("dta",3))
 ..s kmsp=$g(arr("dta",5))
 ..// kontrola na zmenu
 ..q:(kmtu=kmsp)&(jitu=jisp)&(odjtu=odjsp)&(pritu=prisp)
 ..s arrls("arr",2,odj,"dta",1)=li
 ..s arrls("arr",2,odj,"dta",2)=sp
 ..// =================
 ..// zmena km & odjezd a doba jizdy stejna, aktualizace km
 ..i (kmtu'=kmsp)&(jitu=jisp)&(odjtu=odjsp)&(pritu=prisp) d  q
 ...s in("arr","tur",odj,"dta",3)=kmsp s ischng=1 s arrls("arr",2,odj,"dta",3)=odj
 ..// zmena odjezdu nebo doby jizdy
 ..i (jitu'=jisp)!(odjtu'=odjsp)!(pritu'=prisp) d
 ...s:mapr["*" mapr="" s:mapo["*" mapo=""
 ...// posun odjezdu a prijezdu spoje do turnusu (posun dne + manipulace)
 ...s odjsp=odjsp+(odj\1440*1440) s odjspm=odjsp-mapr
 ...s prisp=prisp+(odj\1440*1440) s prispm=prisp+mapo
 ...// konec predchozi cinnosti
 ...s end=0 s tmp=odj f  s tmp=$o(in("arr","tur",tmp),-1) d  q:end
 ....s end=1 q:tmp=""  s:$g(in("arr","tur",tmp,"dta",2))=8 end=0
 ...//i tmp="" q
 ...//s endptu=$g(in("arr","tur",tmp,"dta",1))
 ...//je predchozi cinnost 
 ...i tmp'="" s endptu=$g(in("arr","tur",tmp,"dta",1))
 ...//neni predchozi cinnost - nasimuluju si ji
 ...i tmp="" s endptu=odjspm
 ...// zacatek nasledujici cinnosti
 ...s end=0 s tmp=odj f  s tmp=$o(in("arr","tur",tmp)) d  q:end
 ....s end=1 q:tmp=""
 ....//poznamka ne
 ....i $g(in("arr","tur",tmp,"dta",2))=8 s end=0 q
 ....//je vlozena cinnost ?
 ....i (tmp<pri)&($g(in("arr","tur",tmp,"dta",1))>odj) d  q
 .....//vejde se cinnost do pauzy spoje
 .....s mmrelbegpau="" f  s mmrelbegpau=$o(arr("arr","pau",mmrelbegpau)) q:mmrelbegpau=""  d
 ......s mmpau=+$g(arr("arr","pau",mmrelbegpau))
 ......//zacatek a konec pauzy usazene do turnusu
 ......s mmbegpau=odjsp+mmrelbegpau
 ......s mmendpau=odjsp+mmrelbegpau+mmpau
 ......i (tmp'<mmbegpau)&($g(in("arr","tur",tmp,"dta",1))'>mmendpau) s end=0
 ...//i tmp="" q
 ...//s begntu=tmp
 ...//je nasledujici cinnost 
 ...i tmp'="" s begntu=tmp
 ...//neni nasledujici cinnost - nasimuluju si ji
 ...i tmp="" s begntu=prispm
 ...// kontrola na to, zda se spoj vejde
 ...i (odjspm'<endptu)&((prispm'>begntu)) d
 ....// vejde se aktualizace
 ....// zrusim puvodni fous (nemusi se to zapsat pod stejny index)
 ....k in("arr","tur",odj)
 ....// ==========================================================
 ....s in("arr","tur",odjspm,"dta",1)=prispm
 ....s in("arr","tur",odjspm,"dta",2)=3
 ....s in("arr","tur",odjspm,"dta",3)=kmsp
 ....s in("arr","tur",odjspm,"dta",4)=jisp
 ....s in("arr","tur",odjspm,"dta",5)=li
 ....s in("arr","tur",odjspm,"dta",6)=sp
 ....s in("arr","tur",odjspm,"dta",7)="*"
 ....s:(odjsp-odjspm) in("arr","tur",odjspm,"dta",7)=(odjsp-odjspm)
 ....s in("arr","tur",odjspm,"dta",8)="*"
 ....s:(prispm-prisp) in("arr","tur",odjspm,"dta",8)=(prispm-prisp)
 ....//obnova rucne zadanych dat
 ....s cnt="" f  s cnt=$o(arrzaldta(cnt)) q:cnt=""  d
 .....s in("arr","tur",odjspm,"dta",cnt)=$g(arrzaldta(cnt))
 ....k arrzaldta
 ....//=========================
 ....s arrls("arr",2,odj,"dta",3)=odjspm s ischng=1
 ....// ====================
 k out("arr","tur") m out("arr","tur")=in("arr","tur")
 q 0
fndObjiTurLS(idfa,nmsp,hrl,in,out)
 s $zt="err" k out
 //
 // err=$$fndDiffTurLS(idfa,nmsp,hrl,in,out) - vyhleda v turnuse objizdkove linky a spoje
 //  - hrl - casova varianta turnusu
 //  - in  - pole s casovym prubehem turnusu in("arr","tur",cas,"dta",cnt)=data
 //  - out
 //     vysledek se zapise do out:
 //     ------------------------------
 //     protokol
 //     out("msg",id)=txt
 //     spoje k aktualizaci:
 //     out("arr",1,l,s)=""
 //     ------------------------------
 n (idfa,nmsp,hrl,in,out)
 s odj="" f  {
	s odj=$o(in("arr","tur",odj)) i (odj="") q
 	i $g(in("arr","tur",odj,"dta",2))'=3 continue
 	// linka spoj kontrola
 	s li=$g(in("arr","tur",odj,"dta",5))
 	s sp=$g(in("arr","tur",odj,"dta",6))
 	k arr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arr)
 	i $g(arr("dta",23)) s out("arr",1,li,sp)=""
 }
 q 0
 //
err s $zt="" k out q:$g(err)'="" "1~"_err  q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDTur2" type="INT" languagemode="0" timestamp="65553,54152.455279"><![CDATA[
OBapiEDTur2 q
actBPTur(idfa,nmsp,hrl,arrtu,in,out)
 s $zt="err" k out
 //
 // err=$$actBPTur(idfa,nmsp,hrl,in,out) - aktualizace bezpecnostnich prestavek v turnuse
 //  - arrtu - pole s casovym prubehem turnusu arrtu("arr","tur",cas,"dta",1)=data ...
 //  - hrl - casova varianta turnusu
 //  - in - pole se vstupnimi parametry
 //  - out
 //     out("par","dta",1)=km50  		... rozliseni, zda se jedna o turnus se spoji do/nad 50 km
 //     out("arr",1,tm)=mm       		... kde doslo k prekroceni doby jizdy a mm= kolik to je
 //     out("arr",2,tm)=mmdo:mmdoba  	... kde je potreba pridelit bp, vejdou se, mm=doba
 //     out("arr",3,tm)=val      		... kde je potreba pridelit bp, a nevejdou se
 //                    (val=1 nepodarila se vlozit bp/ 2 je vlozena a sp>50 a prvni'=30mm(chybne poradi)  / 3 je vlozena a sp<50 a je cast<10mm (chybne useky)/ 4 zacykleni vypoctu)
 //     ------------------------------
 n (idfa,nmsp,hrl,arrtu,in,out)
 ;n hrl,sav,km50,mvy,mbp,mbpa,mpv,arr,t1,t2,doba,typ,nji,memt1,val,nextt1,nextt1d,arrbp,tbp,pdoba
 ;n tmp,addbp,cnt,end,next,cntcyc,addmm
 //nastaveni pro vypocet BP
 k set k arrset
 s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err="" 
 s set("mnp")=$p($g(arrset("arr",4,2)),"~",1)	//0 man je cekani / 1 jizda
 s set("ost")=$p($g(arrset("arr",4,2)),"~",2)	//0 ost.prace jsou cekani / 1 jizda
 s set("popa")=$p($g(arrset("arr",4,2)),"~",3)	//delka jednorazove pauzy, ktera prerusuje vykon 
 s set("pspa")=$p($g(arrset("arr",4,2)),"~",4)	//0 suma pauz neprerusuje rizeni / 1 prerusuje
 s set("mp0")=$p($g(arrset("arr",4,2)),"~",5)	//tur.do 50, pokud je pauza < mp0, je to jizda
 s set("mp1")=$p($g(arrset("arr",4,2)),"~",6)	//tur.nad 50, pokud je pauza < mp1, je to jizda
 s set("nndr")=$p($g(arrset("arr",4,2)),"~",7)	//po prideleni BP 0 doba rizeni se napocitava od prekroceni doby rizeni / 1 doba rizeni se napocitava od posledni BP
 s set("bpma")=$p($g(arrset("arr",4,2)),"~",8)	//0 bp se prideluje nejprve na ukor pauz, pokud se to nepovede pak se prideluje na ukor manipulaci / 1 bp se prideluje ihned na ukor manipulaci
 s set("mnj")=$p($g(arrset("arr",4,2)),"~",9)	//0 man tesne za jizdou se nepripocitava k jizde / 1 man tesne za jizdou se pripocitava k jizde (funguje to jen v pripade, ze man je jizda)
 s set("kbp")=$p($g(arrset("arr",4,2)),"~",10)	//0 bp do pauzy centrovat / 1 bp do pauzy na zacatek
 k arrset
 //========================
 s D=":"
 s sav=1 										// 1 - zapisuje bp do globalu
 s mvy(0)=240 s mvy(1)=270  					// nepretrzity vykon
 s mbp(0)=30 s mbp(1)=45    					// delka bp
 d mkinbp(.mbpa)            					// intervaly pro pridelovani BP
 // zjistim, zda je turnus <50 km50=0 nebo >50 km50=1
 s km50=$$tu50km(idfa,nmsp,hrl,.arrtu)
 s mpv=set("mp"_km50)                           // hranice pro rozliseni pauzy
 s out("par","dta",1)=km50
 //
 s cntcyc=0
 // turnus do pole
 d mkturarr(idfa,nmsp,hrl,mpv,.set,.arrtur,.arr)
 // konverze manipulaci na cekani
 d:'set("mnp") cnvma(.arr,mpv)
 //pospojovani cekani
 d spcek(.arr,mpv,set("mnp"))
 // projdu pole kontrola na bp + dodelani
 // hodnoty pro bp podle delky turnusu
 s mbpa=$o(mbpa(km50,"")) // nejkratsi usek pro bp
 //
 k arrbp s nji=0 s memt1="" s t1="" f  s t1=$o(arr(t1)) q:(t1="")!(cntcyc>10000)  d
 .// pocitadlo proti zacykleni
 .s cntcyc=cntcyc+1 i cntcyc>10000 s out("arr",3,t1)=4 q
 .s val=$g(arr(t1)) s t2=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 .// je li zadana moznost preruseni napoctu doby rizeni pauzou > xx min, kontrola
 .// pokud ano vynuluju dobu jizdy, zrusim pole prestavek pro bp a napocitam to znova
 .i ((typ=3)!(typ=4))&(set("popa")>0) i doba>set("popa") s memt1="" s nji=0 k arrbp q
 .// pokud je zadan odpocinek, vynuluju dobu jizdy zrusim pole prestavek pro bp a napocitam to znova
 .i (typ=7) s memt1="" s nji=0 k arrbp q
 .// preruseni > mpv pokud jde pouzit na bp - do arrbp
 .i (typ=3)&(memt1'="") d
 ..// kontrola na nejkratsi delku bp
 ..//i (doba'<mbpa)&($d(arr(t1,"o"))) m arrbp=arr(t1,"o")
 ..//i (doba'<mbpa)&('$d(arr(t1,"o"))) s arrbp(t1)=val
 ..//pauzu si zapisu do pole arrbp
 ..i ($d(arr(t1,"o"))) m arrbp=arr(t1,"o")
 ..i ('$d(arr(t1,"o"))) s arrbp(t1)=val
 .// preruseni '> mpv pokud napocitavam dobu rizeni, pak pripocist
 .// pokud by sla pouzit na bp - do arrbp
 .i (typ=4)&(memt1'="") s nji=nji+doba d
 ..// kontrola na nejkratsi delku bp
 ..//i (doba'<mbpa)&($d(arr(t1,"o"))) m arrbp=arr(t1,"o")
 ..//i (doba'<mbpa)&('$d(arr(t1,"o"))) s arrbp(t1)=val
 ..//pauzu si zapisu do pole arrbp
 ..i ($d(arr(t1,"o"))) m arrbp=arr(t1,"o")
 ..i ('$d(arr(t1,"o"))) s arrbp(t1)=val
 .//byla li pauza a je nastaveno, ze rizeni prerusuje suma pauz
 .//pak kontrola, pripadne preruseni
 .i ((typ=3)!(typ=4))&(+set("pspa")) i $$pspa(km50,.mbp,.arrbp) s memt1="" s nji=0 k arrbp q
 .//
 .// bp zadanou napocitavam jako jizdu, dam ji do pole arrbp pak ji budu zpetne kontrolovat
 .//i (typ=5)&(memt1'="") s nji=nji+doba d
 .//.i (doba'<mbpa)&($d(arr(t1,"o"))) m arrbp=arr(t1,"o") 
 .//.i (doba'<mbpa)&('$d(arr(t1,"o"))) s arrbp(t1)=val
 .//
 .// jizda a manipulace
 .i (typ=1)!(typ=2) d
 ..s:memt1="" memt1=t1 s nji=nji+doba s arrbp(t1)=val
 ..// pokud je manipulace tesne za jizdou pripocte se k jizde (je-li nastaveno)
 ..i +$g(set("mnj")) d
 ...q:typ'=1
 ...s tmpt1=$o(arr(t1)) q:tmpt1=""
 ...// je-li manipulace hned za jizdou
 ...i (tmpt1=t2)&(($p($g(arr(tmpt1)),D,3))=2) d
 ....s nji=nji+$p($g(arr(tmpt1)),D,2) s arrbp(tmpt1)=$g(arr(tmpt1)) s t1=tmpt1
 .// kontrola doby nepretrziteho vykonu
 .i nji<mvy(km50) q
 .// pokud nji=mvy, podivam se, zda nasleduje jizda, pokud ne je to ok
 .i (nji=mvy(km50))&('$$isdji(.arr,t1)) s memt1="" s nji=0 k arrbp q
 .// prejel jsem dobu nepretrziteho vykonu, poznacim si ji
 .s out("arr",1,t1)=nji
 .// projedu 2x pole arrbp a zkusim dosadit bp
 .// kdyz se to poprve nepovede, provedu konverzi manipulaci na cekani a znova
 .s cnt=0 s end=0 i set("bpma") s cnt=1 // bp na ukor manipulaci, jen jedno kolo 
 .f  d  q:(cnt=2)!(end)
 ..d mkinbp(.mbpa) // nastaveni intervalu pro prideleni bp
 ..i km50 k mbpa(km50,15)    // u turnusu nad 50 km nemuzu priradit prvni pauzu 15 min
 ..s cnt=cnt+1
 ..// druhe kolo vypoctu, prevedu manipulace na cekani a znovu vypocet
 ..i cnt=2 d cnvma(.arrbp,mpv) d spcek(.arrbp,mpv,0)
 ..k addbp
 ..s mbp=$g(mbp(km50)) // delka bp co musim pouzit
 ..// pokud nji=mvy(km50) kouknu co nasleduje, pokud je pauza, dam to do arrbp (BP muze byt i za)
 ..s nextt1="" s nextt1d=""
 ..i nji=mvy(km50) s nextt1=$o(arr(t1)) s:nextt1'="" nextt1d=$o(arr(nextt1,"o",""))
 ..s val="" i (cnt=1)&(nextt1d'="") s val=$g(arr(nextt1,"o",nextt1d)),next=nextt1d e  s:nextt1'="" val=$g(arr(nextt1)),next=nextt1
 ..i val'="" d
 ...s t2=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 ...i ((typ=3)!(typ=4)!(typ=5))&(doba'<$g(mbpa)) s arrbp(next)=val
 ..// jedu po poli arrbp pozpatku a snazim se dosazovat bp a odecitam to z mbp
 ..// do pole addbp dam vlozene bp pro kontrolu poradi
 ..s tbp="" f  s tbp=$o(arrbp(tbp),-1) q:(tbp="")!(mbp<1)  d
 ...s val=$g(arrbp(tbp)) s doba=$p(val,D,2) s typ=$p(val,D,3)
 ...i (typ=1)!(typ=2) q
 ...// zjistim jakou pdobu muzu pouzit (od konce)
 ...s pdoba=0 s tmp="" f  s tmp=$o(mbpa(km50,tmp),-1) q:(tmp="")!(pdoba)  s:tmp'>doba pdoba=tmp
 ...// muzu neco pouzit, upravim pdobu na to, co potrebuju
 ...i pdoba d
 ....s:pdoba>mbp pdoba=mbp
 ....// je-li pauza vetsi nez pridelena bp, vycentruju ji
 ....s addmm=(doba-pdoba)\2/1 s:addmm<0 addmm=0
 ....// je zakazano centrovani
 ....i $g(set("kbp"))=1 s addmm=0
 ....// ======================
 ....s addbp(tbp+addmm)=(tbp+pdoba+addmm)_D_pdoba_D_6
 ....s mbp=mbp-pdoba
 ....// pokud je to do 50km, koriguju znovu intervaly, co muzu pouzit
 ....// pokud je to 20 min, tak 10,20 pokud je to pod 20 tak jen jeden interval
 ....i 'km50 k mbpa(km50) s:mbp=20 mbpa(km50,10)="",mbpa(km50,20)="" s:mbp'=20 mbpa(km50,+mbp)=""
 ....// pokud je to nad 50km, koriguju znovu intervaly, co muzu pouzit
 ....// poprve lze pouzit 45,30 podruhe jen zbytek
 ....i km50 k mbpa(km50) s:mbp mbpa(km50,mbp)=""
 ..// nepodarilo se to dosadit chyba, vyhodim manipulace a znova
 ..k out("arr",3,t1) s end=1 i mbp>0 s out("arr",3,t1)=1 s end=0
 .// je-li turnus nad 50 km provedu kontrolu zda se povedlo pridelit nejprve mbpa(1,15)="" s pak  mbpa(1,30)=""
 .// pouze v pripade, ze se naplnila cela bp
 .i (km50)&(mbp'>0) d
 ..s addbp=0 s tbp="" f  s tbp=$o(addbp(tbp)) q:tbp=""  s addbp=addbp+1
 ..i addbp>1 i $p(addbp($o(addbp(""),-1)),D,2)<30 s out("arr",3,t1)=2
 .// je-li turnus pod 50, provedu kontrolu na to, zda nejsou casti bp < mbpa(0,prvni), zatim natvrdo 10
 .// pouze v pripade, ze se naplnila cela bp
 .i ('km50)&(mbp'>0) d
 ..s tbp="" f  s tbp=$o(addbp(tbp)) q:tbp=""  d
 ...i $p(addbp(tbp),D,2)<10 s out("arr",3,t1)=3
 .// vynuluju pocitadla a jedu dal
 .s memt1="" s nji=0 k arrbp
 .// vystup do prom o
 .// doporuceni, kde to doplnit
 .s tbp="" f  s tbp=$o(addbp(tbp)) q:tbp=""  d
 ..s val=$g(addbp(tbp))
 ..s out("arr",2,tbp)=val
 .// je nastaveno ze se zacina znovu napocitavat od posledni pridelene bp - posun t1
 .i set("nndr")=1 d
 ..s tbp=$o(addbp(""),-1) q:tbp=""
 ..s t1=+addbp(tbp)-.01
 // aktualizace BP v turnusu
 s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:tm=""  d
 .i $g(arrtu("arr","tur",tm,"dta",2))=9 k arrtu("arr","tur",tm) 
 s tm="" f  s tm=$o(out("arr",2,tm)) q:tm=""  d
 .s arrtu("arr","tur",tm,"dta",1)=$p($g(out("arr",2,tm)),":",1)
 .s arrtu("arr","tur",tm,"dta",2)=9
 .s arrtu("arr","tur",tm,"dta",4)=$p($g(out("arr",2,tm)),":",2)
 q 0
mkinbp(mbpa)
 // vytvoreni intervalu pro pridelovani bp
 n tmp k mbpa
 f tmp=10:1:20 s mbpa(0,tmp)="" s mbpa(0,30)=""           // casti bp do 50 km
 s mbpa(1,15)="" s mbpa(1,30)="" s mbpa(1,45)=""          // casti bp nad 50 km
 q
tu50km(idfa,nmsp,hrl,arrtu)
 // vrati 0 spoje do 50 km
 // vrati 1 spoje nad 50 km
 n (idfa,nmsp,hrl,arrtu)
 s km50=0
 s cas="" f  s cas=$o(arrtu("arr","tur",cas)) q:(cas="")!(cas?.a)!(km50)  d
 .q:$g(arrtu("arr","tur",cas,"dta",2))'=3
 .s li=$g(arrtu("arr","tur",cas,"dta",5))
 .s sp=$g(arrtu("arr","tur",cas,"dta",6))
 .k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp)
 .s:$g(arrsp("dta",5))'<50 km50=1
 q km50
mkturarr(idfa,nmsp,hrl,mpv,set,arrtur,arr)
 //
 //slozeni arr(od)=do:doba:co
 //
 //    co=1 jizda
 //    co=2 manipulace
 //    co=3 cekani(nebo preruseni), ktere je > mpv
 //    co=4 vyrovnavaci cekani(do mpv)
 //    co=5 BP zadane dopredu !!! zatim jako cekani - vychazim z toho, ze to budu zkouset s cistym turnusem
 //    co=6 domyslene BP
 //    co=7 odpocinek, nuluje se napocet jizdy pro vypocet bp
 //    
 // turnus do pole
 // dle p.Homoly jsou manipulace >14 min taky preruseni vykonu, manipulace prevadim na cekani,
 // pak se podivam co nasleduje a sloucim to s cekanim
 // 
 n limbp,l1,l2,l3,ti,fl,fora,zwp,osti,jibp,a,co,pred,po,cas,t1,map,li
 n t2,i,y,x,limit,subp,maxim,sumr,nbp,beg,pot1,for,ffor,g,li,sp
 //
 k arr
 //
 s fl=0 s fora=0
 s ti="" f  s ti=$o(arrtu("arr","tur",ti)) q:ti=""!(ti?.a)  d
 .s co=$g(arrtu("arr","tur",ti,"dta",2)) d
 ..i co=1!(co=2)!(co=8) q
 ..s t1=ti
 ..s t2=$g(arrtu("arr","tur",ti,"dta",1))
 ..s cas=$g(arrtu("arr","tur",ti,"dta",4))
 ..d:co=3
 ...;rozbetlovani spoju a manipulaci
 ...s pred=$g(arrtu("arr","tur",ti,"dta",7)),po=$g(arrtu("arr","tur",ti,"dta",8))
 ...s li=$g(arrtu("arr","tur",ti,"dta",5))
 ...s sp=$g(arrtu("arr","tur",ti,"dta",6))
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 ...i +pred,pred'["*" d  s t1=t1+pred
 ....s pot1=t1+pred
 ....s arr(t1)=pot1_D_pred_D_2 d
 .....s for=$o(arrsp("arr","pau",""))
 .....i for=""!(for?.a) s arr(pot1)=pot1+cas_D_cas_D_1 q
 .....s arr(pot1)=pot1+for_D_for_D_1
 .....s for="" f  s for=$o(arrsp("arr","pau",for)) q:for=""!(for?.a)  d
 ......s w=+$g(arrsp("arr","pau",for))
 ......s arr(pot1+for)=pot1+for+w_D_w_D_$s(w>mpv:3,1:4)
 ......s ffor=$o(arrsp("arr","pau",for)) i (ffor'="")&(ffor'?.a) d  q   // kontrola na '?.a
 .......s arr(pot1+for+w)=pot1+ffor_D_(ffor-(for+w))_D_1
 ......s arr(pot1+for+w)=t2_D_(t2-(pot1+for+w))_D_1
 ...i pred?1"*".n d
 ....s map=+$P(pred,"*",2) s:map arr(t1-map)=t1_D_map_D_2 d
 .....s for=$o(arrsp("arr","pau",""))
 .....i for=""!(for?.a) s arr(t1)=t1+cas_D_cas_D_1 q
 .....s arr(t1)=t1+for_D_for_D_1
 .....s for="" f  s for=$o(arrsp("arr","pau",for)) q:for=""!(for?.a)  d
 ......s w=+$g(arrsp("arr","pau",for))
 ......s arr(t1+for)=t1+for+w_D_w_D_$s(w>mpv:3,1:4)
 ......s ffor=$o(arrsp("arr","pau",for)) i (ffor'="")&(ffor'?.a) d  q   // kontrola na '?.a
 .......s arr(t1+for+w)=t1+ffor_D_(ffor-(for+w))_D_1
 ......s arr(t1+for+w)=t2_D_(t2-(t1+for+w))_D_1
 ...i +po,po'["*" s arr(t2-po)=t2_D_po_D_2
 ...i po?1"*".n s map=+$p(po,"*",2) s:map arr(t2)=t2+map_D_map_D_2
 ..// jizda
 ..i co>3,co<8 s arr(t1)=t2_D_cas_D_1
 ..// bp zadane - jako cekani
 ..i co=9 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4) //s arr(t1)=t2_D_cas_D_5
 ..// ostatni prace zatim jako cekani
 ..i co=10 s:set("ost")=0 arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4) s:+set("ost") arr(t1)=t2_D_cas_D_1
 ..// nocovani je jako cekani
 ..i co=11 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4)
 ..// preruseni je jako cekani
 ..i co=12 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4)
 ..// jidlo jako cekani
 ..i co=13 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4)
 ..// dodk - stejne jako ostatni prace - stejne nastaveni
 ..i co=14 s:set("ost")=0 arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4) s:+set("ost") arr(t1)=t2_D_cas_D_1
 ..// odpocinek - nuluje se napocet pro bp
 ..i co=15 s arr(t1)=t2_D_cas_D_7
 ..// delena smena zatim jako cekani
 ..i co=16 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4)
 ..// pracovni pohotovost zatim jako cekani
 ..i co=17 s arr(t1)=t2_D_cas_D_$s(cas>mpv:3,1:4)
 // arr je ted o.k. a dodelame cekani + evt. t.zv.vyrovnavaci cekani
 s i="" f  s i=$o(arr(i)) q:i=""  d
 .s a=+$g(arr(i)),x=$o(arr(i)) q:i=""  s y=x-a s:y<0 y=0
 .s:y arr(+a)=x_D_y_D_$s(y>mpv:3,1:4),i=x-.1
 // projdu znova pole a pospojuju cekani do velkych bloku
 d spcek(.arr,mpv,set("mnp"))
 q
cnvma(arr,mpv)
 // konverze manipulaci na cekani
 n od,do,doba,typ
 s od="" f  s od=$o(arr(od)) q:od=""  d
 .s val=$g(arr(od)) s do=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 .q:typ'=2
 .s arr(od,"o",od)=val
 .s $p(val,D,3)=$s(doba>mpv:3,1:4)
 .s arr(od)=val
 q
spcek(arr,mpv,mnp)
 // program projde pole a pospojuje cekani do velkych bloku
 n od,do,doba,typ,val,nod,end
 s od="" f  s od=$o(arr(od)) q:od=""  d
 .s val=$g(arr(od)) s do=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 .// je to jizda
 .q:(typ=1)
 .// je to manipulace a je jako rizeni
 .q:(typ=2)&(mnp)
 .// je to odpocinek
 .q:(typ=7)
 .// je to cekani
 .s end=0 s nod=od f  s nod=$o(arr(nod)) q:(nod="")!(end)  d
 ..s val=$g(arr(nod)) s do=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 ..s end=1 d
 ...q:(typ=1)
 ...q:((typ=2)&(mnp))
 ...q:(typ=7)
 ...// nasleduje cekani, sloucime to
 ...s end=0
 ...s arr(od,"o",nod)=val
 ...k arr(nod)
 ...i '$d(arr(od,"o",od)) s arr(od,"o",od)=$g(arr(od))
 ...s val=$g(arr(od)) s $p(val,D,1)=do s $p(val,D,2)=(do-od) s $p(val,D,3)=$s((do-od)>mpv:3,1:4) s arr(od)=val
 q
pspa(km50,mbp,arrbp)
 // projde pole arrbp, pokud je suma pouzitelnych pauz vetsi nebo rovno bp vrati 1 jinak 0
 n val,t1,t2,doba,typ,is30,suma
 s is30="" s suma=0 s t1="" f  s t1=$o(arrbp(t1),-1) q:t1=""  d
 .s val=$g(arrbp(t1)) s t2=$p(val,D,1) s doba=$p(val,D,2) s typ=$p(val,D,3)
 .// je to cekani
 .i (typ=3)!(typ=4) d
 ..// nad 50 a je vetsi nebo rovno 30
 ..s:(km50)&(doba'<30) is30=1
 ..s:('km50)!(km50&is30) suma=suma+doba
 q:suma<mbp(km50) 0
 q 1
isdji(arr,t1)
 // kontrola, zda nasleduje za t1 jizda nebo manipulace pokud ano, vraci to 1, pokud ne, vraci to 0
 n isji,val,typ
 s isji=0 f  s t1=$o(arr(t1)) q:(t1="")!(isji)  d
 .s val=$g(arr(t1)) s typ=$p(val,D,3) s:typ=1 isji=1
 q isji
 //
 // 589/2006 par. 19 - do 50 km
 // Zaměstnavatel je povinen zajistit, aby doba řízení zaměstnance městské hromadné
 // dopravy byla nejdéle po 4 hodinách řízení přerušena bezpečnostní přestávkou v trvání
 // nejméně 30 minut, nenásleduje-li nepřetržitý odpočinek mezi dvěma směnami nebo
 // nepřetržitý odpočinek v týdnu. Tato přestávka může být rozdělena do několika přestávek
 // v trvání nejméně 10 minut.
 // 
 // bezpecnostni prestavky
 // turnusy do 50 km
 // po více než 4hod včetně, pokud nekončí výkon, má řidič nárok na bezp.přest. dlouhou 30min,
 // kterou je možné rozdělit na úseky min 10min dlouhé
 // 
 // turnusy nad 50km
 // po více než 4:30hod včetně, pokud nekončí výkon, má řidič nárok na bezp.přest. dlouhou 45min,
 // kterou je možné rozdělit na úsek 15min a 30min (prohození těchto časů je drahá pokuta)
 // nebo v celku. jiný způsob nelze.
 // 
 // manipulace > 14 minut lze použít jako přerušení výkonu, manipulace > nekratsi usek bp lze take
 // použít jako bp
 // 
 // a) PŘERUŠENÍ VÝKONU UŽ JE 15MIN A VÍCE, LZE POUŽÍT I MANIPULACE - CSAD CB
 // b) pokud je soucet pauz 30 min, doba jizdy se vynuluje          - OSNADO
 // 
 // do turnusu je možné zadat odpocinek (15), pokud je zadany, nuluje napocet na bp
 //
 /*
tst
 s idfa="MB_TCBUS" s zp=101 s nmsp="AD_V" s tu=18 s hrl=$$dn^OBapiED("13.12.09")
 k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu)
 k arro s err=$$actBPTur(idfa,nmsp,hrl,.arrtu,"",.arro)
 w !,err,!
 zw arro
 q 
 */
err s $zt="" k out q "1~"_$g(err)_"/"_$ze
]]></Routine>


<Routine name="OBapiEDTur3" type="INT" languagemode="0" timestamp="65729,39142.316408"><![CDATA[
OBapiEDTur3 q
 // api 
actDspTur(idfa,nmsp,hrl,inpar,arr)
 // s err=$$actDspTur(idfa,nmsp,hrl,inpar,.arr) - aktualizace druhu spoje v prubehu turnusu a dokladu
 // hrl - den, ke kteremu se to pocita
 // inpar 	0 - dsp se jen doplnuje kde neni, respektuji se zadane hodnoty  (pro prepocet dokladu)
 // 		1 - aktualizace se provadi pro vsechny spoje, prepisuji se stavajici udaje (pro aktualizace po uznani dokladu)
 // vstup/vystup arr("arr","tur",...) (pole s prubehem turnusu / dokladu)
 n (idfa,nmsp,hrl,inpar,arr) s $zt="err"
 s tm="" f  s tm=$o(arr("arr","tur",tm)) q:tm=""  d
 .q:$g(arr("arr","tur",tm,"dta",2))'=3
 .s li=$g(arr("arr","tur",tm,"dta",5))
 .s sp=$g(arr("arr","tur",tm,"dta",6))
 .s dsp=$g(arr("arr","tur",tm,"dta",14)) s:inpar=1 dsp="" q:dsp'=""
 .k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 .s dsp=$g(arrsp("dta",4)) s:'dsp dsp=1
 .s arr("arr","tur",tm,"dta",14)=dsp
 q 0
actTkmTur(idfa,nmsp,hrl,inpar,arr)
 // s err=$$actTkmTur(idfa,nmsp,hrl,inpar,.arr) - aktualizace tarifnich km v prubehu turnusu a dokladu
 // hrl - den, ke kteremu se to pocita
 // inpar	0 - tkm se jen doplnuji kde neni, respektuji se zadane hodnoty  (pro prepocet dokladu)
 // 		1 - aktualizace se provadi pro vsechny spoje, prepisuji se stavajici udaje (pro aktualizaci po uznani dokladu)
 // vstup/vystup arr("arr","tur",...) (pole s prubehem turnusu / dokladu)
 // tkm jsou v DZVA na 9 pozici podle : , pokud nejsou, vemou se presne zaokrouhlene celociselne nahoru
 // cast spoje v DZVA na 10 pozici podle :, pokud je vemou se presne zaokrouhlene celociselne nahoru
 // pro druh spoje 7=rezijni se tarifni km nepocitaji 5.12.2014 LT
 n (idfa,nmsp,hrl,inpar,arr) s $zt="err"
 s tm="" f  s tm=$o(arr("arr","tur",tm)) q:tm=""  d
 .q:$g(arr("arr","tur",tm,"dta",2))'=3
 .s li=$g(arr("arr","tur",tm,"dta",5))
 .s sp=$g(arr("arr","tur",tm,"dta",6))
 .s dsp=$g(arr("arr","tur",tm,"dta",14))
 .s tkm=$g(arr("arr","tur",tm,"dta",13)) s:inpar=1 tkm="" q:tkm'=""
 .k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 .s km=$g(arrsp("dta",5)) s tkm=$g(arrsp("dta",14))
 .//cast spoje, pak km co je zadano a tkm vypoctu =================================
 .i +$g(arr("arr","tur",tm,"dta",18)) s km=$g(arr("arr","tur",tm,"dta",3)) s tkm=""
 .//===============================================================================
 .s:('tkm)&(km) tkm=(km+.9999)\1  // nejsou-li tarifni, pak se tar vypocitaji z km na cele nahoru
 .i dsp=7 s tkm=0
 .s arr("arr","tur",tm,"dta",13)=tkm
 q 0
tstprs
 k arr s err=$$gTur^OBapiED("VS_CSAD","USER",1320,350,$$dn^OBapiED("7.3.2010"),"",.arr)
 s err=$$actDspTur("VS_CSAD","USER",$$dn^OBapiED("7.3.2010"),"",.arr)
 s err=$$actTkmTur("VS_CSAD","USER",$$dn^OBapiED("7.3.2010"),"",.arr)
 s err=$$actPrsTur("VS_CSAD","USER",$$dn^OBapiED("7.3.2010"),"",.arr)
 zw arr("arr","tur") r a
 q
actPrsTur(idfa,nmsp,hrl,inpar,arr)
 // s err=$$actPrsTur(idfa,nmsp,hrl,.inpar,.arr) - aktualizace prepravnich systemu v probehu turnusu a dokladu
 // idfa - identifikator firmy
 // inpar("par",1)=provoz,kam doklad patri (prv)
 // inpar("par",2)=ns na doklade (odvozene od auta) (nsspz)
 // hrl - den, ke kteremu se to pocita
 // vstup/vystup arr("arr","tur",...) (pole s prubehem turnusu / dokladu)
 // program projde uvedene prom a podle nastaveni doplni prepravni system
 //  pak je treba spustit actPrsTurSum - ten provede soucet
 //
 n (idfa,nmsp,hrl,inpar,arr) s $zt="err"
 //
 s prv=$g(inpar("par",1)) s nsspz=$g(inpar("par",2))
 // prepravni systemy, nastaveni
 k arrset s err=$$gPrsSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 // default prs
 s defPSp=$$gDlftValPrs(0,prv,nsspz,"","",.arrset)
 // ==========
 s tm="" f  s tm=$o(arr("arr","tur",tm)) q:tm=""  d
 .q:$g(arr("arr","tur",tm,"dta",2))'=3
 .s li=$g(arr("arr","tur",tm,"dta",5))
 .s sp=$g(arr("arr","tur",tm,"dta",6))
 .s km=$g(arr("arr","tur",tm,"dta",3))
 .s tkm=$g(arr("arr","tur",tm,"dta",13))
 .k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 .d
 ..// vymazu puvodni prepravni system
 ..// prepravni systemy - ve vete jsou kmpresne~kmtarifni
 ..s arr("arr","tur",tm,"dta",15)=""
 ..k arr("arr","tur",tm,"prs")
 ..// vice prs
 ..i $o(arrsp("arr","prs",""))'="" d  q
 ...// <konverze prs pro UL - specialita, docasna>
 ...i ((idfa="LIPA_CSAD")!(idfa="USTI_DPUK"))&((nsspz=451)!(nsspz=651))&'$d(^[nmsp]OI("trPSULLin",+li)) d trULPSarr(.wx)
 ...i ((idfa="LIPA_CSAD")!(idfa="USTI_DPUK"))&((nsspz'=451)&(nsspz'=651))&$d(^[nmsp]OI("trPSULLin",+li)) d trULPSarr(.wx)
 ...// ===========================================
 ...// presne
 ...k arrvz,arrdt m arrvz=arrsp("arr","prs") s arrdt=km s err=$$rzpArr^OBapiED(.arrdt,.arrvz,2) zt:+err "merr" s err=""
 ...s prs="" f  s prs=$o(arrdt(prs)) q:prs=""  s arr("arr","tur",tm,"prs",prs,"dta",1)=arrdt(prs)
 ...// tarifni km (za ~ za presnyma km)
 ...k arrvz,arrdt m arrvz=arrsp("arr","prs") s arrdt=tkm s err=$$rzpArr^OBapiED(.arrdt,.arrvz,+$g(arrset("arr",2,9))) zt:+err "merr" s err=""
 ...s prs="" f  s prs=$o(arrdt(prs)) q:prs=""  s arr("arr","tur",tm,"prs",prs,"dta",2)=arrdt(prs)
 ..// jeden prs
 ..s prs=$g(arrsp("dta",12))
 ..// <konverze prs pro UL - specialita, docasna>
 ..i ((idfa="LIPA_CSAD")!(idfa="USTI_DPUK"))&((nsspz=451)!(nsspz=651))&'$d(^[nmsp]OI("trPSULLin",+li)) d trULPSval(.prs)
 ..i ((idfa="LIPA_CSAD")!(idfa="USTI_DPUK"))&((nsspz'=451)&(nsspz'=651))&$d(^[nmsp]OI("trPSULLin",+li)) d trULPSval(.prs)
 ..// ===========================================
 ..i prs s arr("arr","tur",tm,"dta",15)=prs q
 ..// neni nic, dosadim dlft
 ..s arr("arr","tur",tm,"dta",15)=$g(defPSp)
 // ===========================================================
 // spoje, pristavne 4,odstavne 5,prejezdy 6,rezijni 7
 // ===========================================================
 // pokud neni default, zjistim co predchazi a nasleduje, pak to doplnim
 // je-li nastaveno zpresneni, pak k prs pripoctu nastavenou desetinu
 // pokud neni prs v ciselniku, zavedu ho tam (odvodim)
 //
 s tm="" f  s tm=$o(arr("arr","tur",tm)) q:tm=""  d
 .s typ=$g(arr("arr","tur",tm,"dta",2))
 .q:(typ<4)!(typ>7)
 .// vymazu puvodni prepravni system
 .s arr("arr","tur",tm,"dta",15)=""
 .k arr("arr","tur",tm,"prs")
 .// ===============================
 .// ===========================================================
 .// prs pro rezijni se nerozpocitavaji - vychozi, podle tabulky
 .// ===========================================================
 .i +$g(arrset("arr",2,2)) d  q
 ..s prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset)
 ..// zpresneni prepravniho systemu
 ..s:$$gdtlrkmprs(nmsp,idfa,typ,.arrset) prs=(prs\1)+$$gdtlrkmprs(nmsp,idfa,typ,.arrset)
 ..// zapis do db
 ..s arr("arr","tur",tm,"dta",15)=prs
 ..// kontrola na ciselnik
 ..d mkdtlPRS(nmsp,idfa,prs,$$gdscrez(typ))
 .// ========================================================================
 .// prs se rozpocitava podle toho kam to jede dal, odstavne odkud to prijelo
 .// ========================================================================
 .// muze byt nastavena tabulka podle ktere lze nastavit prs:
 .//  - vazba spoj, ktery predchazi, nasleduje
 .// zjistim co predchazi a nasleduje (spoj)
 .k pnprs f fs=1,-1 d
 ..s prs=""
 ..s cnt=tm f  s cnt=$o(arr("arr","tur",cnt),fs) q:(cnt="")!($d(pnprs(fs)))  d
 ...q:$g(arr("arr","tur",cnt,"dta",2))'=3
 ...s dsp=$g(arr("arr","tur",cnt,"dta",14)) s:'dsp dsp=1
 ...// vice prs
 ...i $o(arr("arr","tur",cnt,"prs",""))'="" d
 ....s prs="" f  s prs=$o(arr("arr","tur",cnt,"prs",prs)) q:prs=""  d
 .....s pnprs(fs,(dsp_"~"_prs))=+$g(arr("arr","tur",cnt,"prs",prs,"dta",1))
 ...// jeden prs
 ...i $o(arr("arr","tur",cnt,"prs",""))="" d
 ....s prs=$g(arr("arr","tur",cnt,"dta",15))
 ....s:'prs prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset)
 ....s pnprs(fs,(dsp_"~"_prs))=$g(arr("arr","tur",tm,"dta",3))
 ...// jako ps pouziju ten, co prvni najdu
 ...s pnprs(fs)=$$gps1(fs,.pnprs)
 ...// jako ps pouziju ten s nejvetsim poctem km
 ...i +$g(arrset("arr",2,3))=1 s pnprs(fs)=$$gpskm(fs,.pnprs)
 ...// rozpocitani ps v pomeru km
 ...i +$g(arrset("arr",2,3))=2 s pnprs(fs)=""
 .// ==========
 .// urceni prs
 .// ==========
 .k prs s prs="" d
 ..// pristavne,odstavne existuje-li konverzni tabulka, pokusim se najit prepravni system podle ni (prednost)
 ..i (typ=4)!(typ=5) s:$o(arrset("arr",2,4,""))'="" prs=$$gctblpo(.pnprs,typ,.arrset) q:prs'=""
 ..// =======================================================================================================
 ..// prejezdy, rezijni, neexistuje-li nasledujici/predchozi prs pouziju predchozi/nasledujici
 ..// (chybne zadan prejezd na konci nebo na zacatku turnusu)
 ..i (typ=6)!(typ=7) i ('$d(pnprs(1)))&($d(pnprs(-1))) m pnprs(1)=pnprs(-1)
 ..i (typ=6)!(typ=7) i ('$d(pnprs(-1)))&($d(pnprs(1))) m pnprs(-1)=pnprs(1)
 ..// ========================================================================================
 ..// prejezdy, rezijni existuje-li konverzni tabulka, pokusim se najit prepravni system podle ni
 ..i (typ=6)!(typ=7) s:$o(arrset("arr",2,5,""))'="" prs=$$gctblpr(.pnprs,.arrset) q:prs'=""
 ..// urceni prs podle spoje pak podle spoje
 ..s fs=1 s:typ=5 fs=-1
 ..// prejezdy, rezijni, neexistuje-li nasledujici prs pouziju predchozi
 ..//i (typ=6)!(typ=7) i ('$d(pnprs(fs)))&($d(pnprs(-fs))) m pnprs(fs)=pnprs(-fs)
 ..// ==================================================================
 ..// prvni co najdu
 ..i +$g(arrset("arr",2,3))=0 d
 ...s prs=$g(pnprs(fs)) s:'prs prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset)
 ..// nejvetsi co najdu
 ..i +$g(arrset("arr",2,3))=1 d
 ...s prs=$g(pnprs(fs)) s:'prs prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset)
 ..// rozpocitani v pomeru
 ..i +$g(arrset("arr",2,3))=2 d
 ...// neni tabulka prs - vychozi
 ...i $o(pnprs(fs,""))="" s prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset) q
 ...// ==========================
 ...k resarr k srcarr s resarr=$g(arr("arr","tur",tm,"dta",3))
 ...s id="" f  s id=$o(pnprs(fs,id)) q:id=""  s srcarr($p(id,"~",2))=$g(srcarr($p(id,"~",2)))+$g(pnprs(fs,id))
 ...s err=$$rzpArr^OBapiED(.resarr,.srcarr,2)
 ...// pocet prs
 ...s sps=0 s id="" f  s id=$o(resarr(id)) q:id=""  s sps=sps+1
 ...// jen jeden prs
 ...i sps=1 s prs=$o(resarr("")) q
 ...// vic prs
 ...s id="" f  s id=$o(resarr(id)) q:id=""  s prs(id)=+$g(resarr(id))
 .// program neodvodil prs - vychozi hodnota
 .i ($g(prs)="")&($o(prs(""))="") s prs=$$gDlftValPrs(0,prv,nsspz,typ,"",.arrset)
 .// =======================================
 .// =====================================
 .// prs je urcen prs=val nebo prs(prs)=km
 .// =====================================
 .// zpresneni
 .i $$gdtlrkmprs(nmsp,idfa,typ,.arrset) d
 ..// jeden prs
 ..i $g(prs)'="" d
 ...s prs=(prs\1)+$$gdtlrkmprs(nmsp,idfa,typ,.arrset)
 ...// kontrola na ciselnik
 ...d mkdtlPRS(nmsp,idfa,prs,$$gdscrez(typ))
 ..// vice prs
 ..i $o(prs(""))'="" d
 ...k resarr s id="" f  s id=$o(prs(id)) q:id=""  d
 ....s resarr((id\1)+$$gdtlrkmprs(nmsp,idfa,typ,.arrset))=$g(resarr((id\1)+$$gdtlrkmprs(nmsp,idfa,typ,.arrset)))+prs(id)
 ....// kontrola na ciselnik
 ....d mkdtlPRS(nmsp,idfa,((id\1)+$$gdtlrkmprs(nmsp,idfa,typ,.arrset)),$$gdscrez(typ))
 ....k prs(id)
 ...s id="" f  s id=$o(resarr(id)) q:id=""  s prs(id)=resarr(id)
 .// zapis - jeden
 .s arr("arr","tur",tm,"dta",15)=$g(prs)
 .// zapis - vice
 .i $o(prs(""))'="" d
 ..s arr("arr","tur",tm,"dta",15)=""
 ..s id="" f  s id=$o(prs(id)) q:id=""  d
 ...s arr("arr","tur",tm,"prs",id,"dta",1)=$g(prs(id))
 q 0
trULPSarr(arr)
 // specialni transformace prs pro UL - 6x1
 n arrps,prs,km,nprs
 s prs="" f  s prs=$o(arr("arr","prs",prs)) q:prs=""  d
 .s nprs="6x1" s $e(nprs,2)=$e(prs,2) i nprs=661 s nprs=611
 .s arrps("arr","prs",nprs)=$g(arrps("arr","prs",nprs))+$g(arr("arr","prs",prs))
 k arr("arr","prs") m arr("arr","prs")=arrps("arr","prs")
 q
trULPSval(val)
 // specialni transformace prs pro UL - 6x1
 n tmp
 s tmp="6x1" s $e(tmp,2)=$e(val,2) s val=tmp i val=661 s val=611 // smluvka 550956 ps 860
 ;s val=nsspz_val
 q
 /*
garrprs(arr,src)
 // prepocet pole prs na aktualni delku spoje
 n val,ind,sum,cst,max,maxind
 s val=+$g(arr) k arr
 s sum=0 s ind="" f  s ind=$o(src(ind)) q:ind=""  s sum=sum+$g(src(ind))
 // totozne, prepis
 i val=sum d  q
 .s ind="" f  s ind=$o(src(ind)) q:ind=""  s arr(ind)=$g(src(ind))
 // rozpocet
 s ind="" f  s ind=$o(src(ind)) q:ind=""  s cst=+$g(src(ind)) s arr(ind)=0 s:sum arr(ind)=$j((val/sum)*cst,0,1)
 // rozdil
 s max=0 s maxind="" s ind="" f  s ind=$o(arr(ind)) q:ind=""  s val=val-$g(arr(ind)) s:+$g(arr(ind))>max max=+$g(arr(ind)),maxind=ind
 i val&(maxind'="") s arr(maxind)=$g(arr(maxind))+val
 q
 */
gps1(fs,pnprs)
 // najde prvni prs
 n arr,ind
 s ind="" f  s ind=$o(pnprs(fs,ind)) q:ind=""  d
 .q:$p(ind,"~",2)=""  s arr($p(ind,"~",2))=""
 q $o(arr(""))
gpskm(fs,pnprs)
 // najde prs s nejvetsim poctem km
 n arr,ind,km,maxkm,prs
 s ind="" f  s ind=$o(pnprs(fs,ind)) q:ind=""  d
 .q:$p(ind,"~",2)=""  s arr($p(ind,"~",2))=$g(arr($p(ind,"~",2)))+$g(pnprs(fs,ind))
 s maxkm=0 s prs=""
 s ind="" f  s ind=$o(arr(ind)) q:ind=""  d
 .q:maxkm>$g(arr(ind))
 .s maxkm=$g(arr(ind))
 .s prs=ind
 q prs
gctblpo(arr,typ,arrprsset)
 // nastaveni prs podle tabulky - pristavne, odstavne
 // arr(-1,dsp~prs) co predchazi
 // arr(1,dsp~prs) co nasleduje
 // arrprsset("arr",2,4,iddsp,prssp)=prs
 // typ = 4 pristavne, 5 odstavne
 n fs,prs,ind1,dsps,prss,dspstb,prsstb
 s fs=1 s:typ=5 fs=-1 s prs=""
 s ind1="" f  s ind1=$o(arr(fs,ind1)) q:(ind1="")!(prs'="")  d
 .s dsps=$p(ind1,"~",1) s prss=$p(ind1,"~",2)
 .s dspstb=" " s prsstb=" " d
 ..//arrprsset("arr",2,4,iddsp,prssp)
 ..i $d(arrprsset("arr",2,4,dsps,prss)) s dspstb=dsps s prsstb=prss q
 ..i $d(arrprsset("arr",2,4,"*",prss)) s dspstb="*" s prsstb=prss q
 ..i $d(arrprsset("arr",2,4,dsps,"*")) s dspstb=dsps s prsstb="*" q
 ..i $d(arrprsset("arr",2,4,"*","*")) s dspstb="*" s prsstb="*" q
 .i (dspstb'=" ")&(prsstb'=" ") s prs=$g(arrprsset("arr",2,4,dspstb,prsstb))
 q prs
 //
gctblpr(arr,arrprsset)
 // nastaveni prs podle tabulky, prejezdy
 // arr(-1,dsp~prs) co predchazi
 // arr(1,dsp~prs) co nasleduje
 // arrprsset("arr",2,5,iddspf,prsspf,iddspt,prsspt)=prs
 n prs,ind1,ind2,ind3,ind4,dsps,prss,arrpsd,cnt,maxcnt
 //
 s prs="" k arrpsd
 s ind1="" f  s ind1=$o(arr(-1,ind1)) q:(ind1="")  d
 .s dsps=$p(ind1,"~",1) s prss=$p(ind1,"~",2)
 .i $d(arrprsset("arr",2,5,dsps,prss)) d gctblpr1(ind1,.arr,.arrpsd,.arrprsset)
 .i $d(arrprsset("arr",2,5,"*",prss)) d gctblpr1("*~"_prss,.arr,.arrpsd,.arrprsset)
 .i $d(arrprsset("arr",2,5,dsps,"*")) d gctblpr1(dsps_"~*",.arr,.arrpsd,.arrprsset)
 .i $d(arrprsset("arr",2,5,"*","*")) d gctblpr1("*~*",.arr,.arrpsd,.arrprsset)
 // vyhodnoceni prs s nej.poctem stejnych indexu
 s maxcnt=-1
 s ind1="" f  s ind1=$o(arrpsd(ind1)) q:ind1=""  d
 .s ind2="" f  s ind2=$o(arrpsd(ind1,ind2)) q:ind2=""  d
 ..s ind3="" f  s ind3=$o(arrpsd(ind1,ind2,ind3)) q:ind3=""  d
 ...s ind4="" f  s ind4=$o(arrpsd(ind1,ind2,ind3,ind4)) q:ind4=""  d
 ....s cnt=0 s:ind1'="*" cnt=cnt+1 s:ind2'="*" cnt=cnt+1 s:ind3'="*" cnt=cnt+1 s:ind4'="*" cnt=cnt+1
 ....i cnt>maxcnt s maxcnt=cnt s prs=arrpsd(ind1,ind2,ind3,ind4)
 q prs
 //
gctblpr1(ind1tb,arr,arrpsd,arrprsset)
 n ind2,dsps,prss
 s ind2="" f  s ind2=$o(arr(1,ind2)) q:(ind2="")  d
 .s dsps=$p(ind2,"~",1) s prss=$p(ind2,"~",2)
 .i $d(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,prss)) s arrpsd($p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,prss)=$g(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,prss))
 .i $d(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),"*",prss)) s arrpsd($p(ind1tb,"~",1),$p(ind1tb,"~",2),"*",prss)=$g(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),"*",prss))
 .i $d(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,"*")) s arrpsd($p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,"*")=$g(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),dsps,"*"))
 .i $d(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),"*","*")) s arrpsd($p(ind1tb,"~",1),$p(ind1tb,"~",2),"*","*")=$g(arrprsset("arr",2,5,$p(ind1tb,"~",1),$p(ind1tb,"~",2),"*","*"))
 q
 //
gDlftValPrs(pn,idprv,idns,idrkm,iddsp,arrprsset)
 n (pn,idprv,idns,idrkm,iddsp,arrprsset)
 // fce vrati default prepravni system
 // 
 // pn=0 pravidelna / 1 nepravidelna
 // idprv=id provozovny
 // idns=id strediska(auta)
 // idrkm=typ rezijnich km
 // iddsp=druh spoje
 // arrprsset pole s nastavenim prepravnich systemu
 s prs=""
 // ============
 // nepravidelna
 ;; ============
 i (+pn) d  q prs
 .s:(idprv'="") prs=$g(arrprsset("arr",3,1,"prv",+idprv))
 .s:(prs="") prs=$g(arrprsset("arr",3,1))
 .s:(prs="") prs=0
 ;; ==========
 ;; pravidelna
 ;; ==========
 i ('pn) d  q prs
 .;; rezijni
 .i (idrkm'="")&(idrkm<8) d
 ..s:(idns'="") prs=$g(arrprsset("arr",2,6,idrkm,1,"ns",idns))
 ..s:(prs="")&(idprv'="") prs=$g(arrprsset("arr",2,6,idrkm,1,"prv",idprv))
 ..s:(prs="") prs=$g(arrprsset("arr",2,6,idrkm,1))
 .i (idrkm'="")&(idrkm>7) d
 ..s:(idns'="") prs=$g(arrprsset("arr",2,7,idrkm,1,"ns",idns))
 ..s:(prs="")&(idprv'="") prs=$g(arrprsset("arr",2,7,idrkm,1,"prv",idprv))
 ..s:(prs="") prs=$g(arrprsset("arr",2,7,idrkm,1))
 .;; druh spoje
 .i (iddsp'="") d
 ..s:(idns'="") prs=$g(arrprsset("arr",2,8,iddsp,1,"ns",idns))
 ..s:(prs="")&(idprv'="") prs=$g(arrprsset("arr",2,8,iddsp,1,"prv",+idprv))
 ..s:(prs="") prs=$g(arrprsset("arr",2,8,iddsp,1))
 .;; dflt
 .s:(prs="")&(idns'="") prs=$g(arrprsset("arr",2,1,"ns",+idns))
 .s:(prs="")&(idprv'="") prs=$g(arrprsset("arr",2,1,"prv",+idprv))
 .s:(prs="") prs=$g(arrprsset("arr",2,1))
 .s:(prs="") prs=0
 q prs
 // vrati des.cislo pro detailni sledovani prs
gdtlrkmprs(nmsp,idfa,rkm,arrprsset) q +$g(arrprsset("arr",2,6,rkm,2))
 // ==========================================
 // vrati 0/1/2 0-rucne/1-prepravni system se priradi k nejvetsimu na doklade/2-prepravni system se rozpocita v pomeru prs na doklade
gatmrkmprs(nmsp,idfa,rkm,arrprsset) q +$g(arrprsset("arr",2,7,rkm,3))
 // ===============================================================
 // vrati 0/1/2 0-rucne/1-prepravni system se priradi k nejvetsimu na doklade/2-prepravni system se rozpocita v pomeru prs na doklade
gatmdspprs(nmsp,idfa,dsp,arrprsset) q +$g(arrprsset("arr",2,8,dsp,3))
 // ===============================================================
gdscrez(ind)
 q:ind="" ""
 q:ind=4 "Přístavné"
 q:ind=5 "Odstavné"
 q:ind=6 "Přejezd"
 q:ind=7 "Režijní"
 q $p($g(^[nmsp]OI("RKM",ind)),":",1)
 //
mkdtlPRS(nmsp,idfa,prs,info)
 n (nmsp,idfa,prs,info)
 // detailni sledovani prepravnich systemu - aktualizace ciselniku PRS
 // 1 kontrola zda je prs des.cislo
 // 2 pokud ano, kontrola, zda se v ciselniku vyskytuje
 // 3 pokud ne, zavede se podle "nadrazeneho" - prs\1
 // 
 // pokud neobsahuje des.cislo neaktualizuje se
 q:'(prs#1)
 // je v ciselniku ? pokud ano, neaktualizuje se 
 k arr s err=$$isCisItm^OBapiED(idfa,nmsp,5,prs,"",.arr) s err="" i $g(arr) q
 // je v ciselniku prs bez detailu ? pokud ne, neaktualizuje se
 k arr s err=$$isCisItm^OBapiED(idfa,nmsp,5,(prs\1),"",.arr) s err="" i '$g(arr) q
 // zapis do ciselniku
 k arr s err=$$gCisItm^OBapiED(idfa,nmsp,5,(prs\1),"",.arr) s err=""
 s val=$g(arr("arr",(prs\1))) i info'="" s $p(val,"~",1)=$p(val,"~",1)_" "_info
 s err=$$sCisItm^OBapiED(idfa,nmsp,5,prs,val,"","") s err=""
 q
actPrsTurSum(idfa,nmsp,hrl,arr,out)
 // s err=$$actPrsTurSum(idfa,nmsp,hrl,.arr,.out) - suma km za prepravni systemy z turnusu
 // pred spustenim je provedena aktualizace dsp,tkm,prs
 // vstup  ... arr("arr","tur",...) (pole s prubehem dokladu, turnusu)
 // vystup ... out("arr",1,prs,dsp)=km					... presne km
 //        ... out("arr",1,prs,dsp,typ)=km (pro dsp=7)  ... presne km
 //        ... out("arr",2,prs,dsp)=km                  ... tarifni km
 //        ... out("arr",3,prs,dsp)=ji                  ... doba jizdy v minutach
 n (idfa,nmsp,hrl,arr,out) s $zt="err" k out
 s cod="" f  s cod=$o(arr("arr","tur",cod)) q:cod=""  d
 .s typ=$g(arr("arr","tur",cod,"dta",2))
 .q:(typ<3)!(typ>7)
 .s km=$g(arr("arr","tur",cod,"dta",3))
 .s ji=$g(arr("arr","tur",cod,"dta",4))
 .s tkm=$g(arr("arr","tur",cod,"dta",13))
 .s prs=$g(arr("arr","tur",cod,"dta",15))	
 .s dsp=7
 .i typ=3 d  q
 ..s dsp=$g(arr("arr","tur",cod,"dta",14))
 ..i '$d(arr("arr","tur",cod,"prs")) d																		//jeden prepravni system
 ...s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+km														//presne km
 ...s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+ji														//doba jizdy
 ...i dsp=7 s out("arr",1,prs,dsp,7)=$g(out("arr",1,prs,dsp,7))+km											//presne km, rozpis pro rezijni
 ...i dsp'=7 s out("arr",2,prs,dsp)=$g(out("arr",2,prs,dsp))+tkm											//tarifni km (ne pro rezijni spoje)
 ..i $d(arr("arr","tur",cod,"prs")) d
 ...k mysrcarr
 ...s prs="" f  s prs=$o(arr("arr","tur",cod,"prs",prs)) q:prs=""  d
 ....s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))				//presne km
 ....s mysrcarr($lb(prs,dsp))=$g(mysrcarr($lb(prs,dsp)))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))			//presne km pro rozpocet dalsich ukazatelu
 ....i dsp=7 s out("arr",1,prs,dsp,7)=$g(out("arr",1,prs,dsp,7))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))	//presne km, rozpis pro rezijni
 ....i dsp'=7 s out("arr",2,prs,dsp)=$g(out("arr",2,prs,dsp))+$g(arr("arr","tur",cod,"prs",prs,"dta",2))	//tarifni km (ne pro rezijni spoje)
 ...i ji d
 ....k myarr s myarr=ji
 ....s err=$$rzpArr^OBapiED(.myarr,.mysrcarr,0)
 ....s myidx="" f  s myidx=$o(myarr(myidx)) q:myidx=""  d
 .....s prs=$lg(myidx,1) s dsp=$lg(myidx,2)
 .....s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+$g(myarr(myidx))														//doba jizdy
 ....k myarr
 .i typ'=3 d  q
 ..// prist,odst,prejezdy (i podle druhu)
 ..i '$d(arr("arr","tur",cod,"prs")) d
 ...s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+km														//presne km
 ...s out("arr",1,prs,dsp,typ)=$g(out("arr",1,prs,dsp,typ))+km												//presne km, rozpis pro rezijni 
 ...s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+ji														//doba jizdy
 ..i $d(arr("arr","tur",cod,"prs")) d
 ...k mysrcarr
 ...s prs="" f  s prs=$o(arr("arr","tur",cod,"prs",prs)) q:prs=""  d
 ....s out("arr",1,prs,dsp)=$g(out("arr",1,prs,dsp))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))				//presne km
 ....s mysrcarr($lb(prs,dsp))=$g(mysrcarr($lb(prs,dsp)))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))			//presne km pro rozpocet dalsich ukazatelu
 ....s out("arr",1,prs,dsp,typ)=$g(out("arr",1,prs,dsp,typ))+$g(arr("arr","tur",cod,"prs",prs,"dta",1))		//presne km, rozpis pro rezijni
 ...i ji d
 ....k myarr s myarr=ji
 ....s err=$$rzpArr^OBapiED(.myarr,.mysrcarr,0)
 ....s myidx="" f  s myidx=$o(myarr(myidx)) q:myidx=""  d
 .....s prs=$lg(myidx,1) s dsp=$lg(myidx,2)
 .....s out("arr",3,prs,dsp)=$g(out("arr",3,prs,dsp))+$g(myarr(myidx))														//doba jizdy
 ....k myarr
 q 0
 //
cnvArrurToArrmin(idfa,nmsp,hrl,arrtur,glb,out)
 //AUDO
 //konverze turnusu do minutoveho pole a zapis do globalu @glb@(tmmin)=idtmmin~idCinnost
 n (idfa,nmsp,hrl,arrtur,glb,out)
 s $zt="err" k out k @glb
 //
 s minod="" f {
	 s minod=$o(arrtur("arr","tur",minod)) i minod="" q
	 s mindo=$g(arrtur("arr","tur",minod,"dta",1))
	 s idCinnost=$g(arrtur("arr","tur",minod,"dta",2))
	 //
	 i (idCinnost<3)!(idCinnost=8) continue
 	 //rozbaleni cinnosti
 	 f min=($j(minod,0,0)+1):1:$j(mindo,0,0) {
	 	 s @glb@(min)=minod_"~"_idCinnost
 	 }
	 //pauza ve spoji, vyrobim okno
	 i idCinnost=3 {
		 s acthrl=(hrl+(minod\1440))
		 s li=$g(arrtur("arr","tur",minod,"dta",5))
		 s sp=$g(arrtur("arr","tur",minod,"dta",6))
		 s mapr=$g(arrtur("arr","tur",minod,"dta",7))
		 k issp s err=$$isSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.issp) i +err zt
		 i issp {
			 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) i +err zt
		 	 s relminpod="" f  {
			 	 s relminpod=$o(arrsp("arr","pau",relminpod)) i relminpod="" q
			 	 s minp=+$g(arrsp("arr","pau",relminpod))
			 	 // aktualni zacatek a konec pauzy
			 	 s minpod=minod+mapr+relminpod
			 	 s minpdo=minpod+minp
			 	 // vytvoreni okna pro pauzu
			 	 f min=($j(minpod,0,0)+1):1:$j(minpdo,0,0) {
	 				k @glb@(min)
				 }
		 	 }
		 }
 	 }
 } 
 q 0
 //
chckArrminOverlap(idfa,nmsp,hrl,minod,mindo,glb,in,out)
 //AUDO
 //kontrola prekryti intervalu minod - mindo na cinnosti v @glb@(...
 //idfa=identifikator firmy
 //minod=zacatek intervalu (udaj respektuje prechod do noveho dne)
 //mindo=konec intervalu (udaj respektuje prechod do noveho dne)
 //glb=global s polem cinnosti po min @glb@(min)=iidtm~idcin
 //in:
 //in("arr",1,minpod)=minpdo ... vnitrni pauzy v cinnosti
 //out:
 //out("stt",1)=0 ... cinnosti se neprekryvaji / 1 cinnosti se prekryvaji
 //out("arr",1,idmin)=idcin ... cinosti, kde to koliduje
 n (idfa,nmsp,hrl,minod,mindo,glb,in,out)
 s $zt="err" s err="" k out
 //pole vnitrnich pauz
 k arrp
 s minpod="" f {
	 s minpod=$o(in("arr",1,minpod)) i minpod="" q
	 s minpdo=$g(in("arr",1,minpod))
	 f min=($j(minpod,0,0)+1):1:($j(minpdo,0,0)) {
		 s arrp(min)=""
	 }
 }
 //kontrola
 f min=($j(minod,0,0)+1):1:($j(mindo,0,0)) {
	//je vnitrni pauza
	i $d(arrp(min)) continue
 	//kontrola
	i $d(@glb@(min)) {
		s out("stt",1)=1
		s iidtm=$p($g(@glb@(min)),"~",1)
		s idcin=$p($g(@glb@(min)),"~",2)
		s out("arr",1,iidtm)=idcin
	}
 }
 q 0
 //
err s $zt="" k out q "1~"_$ze_"/"_$tr($g(err),"~","/")
 
]]></Routine>


<Routine name="OBapiEDTur4" type="INT" languagemode="0" timestamp="64461,53712.318993"><![CDATA[
OBapiEDTur4 q
 // api
actDsmTur(idfa,nmsp,zp,hrl,inpar,arrtur)
 n (idfa,nmsp,zp,hrl,inpar,arrtur) s $zt="err" s err=""
 //aktualizace delenych smen v poli arrtur("arr","tur",...
 //nactu nastaveni programu, pokud je nastavena automaticka aktualizace del.sm.provede se
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr" s err=""
 s setdsm=$g(arrset("arr",4,12))
 //=============================
 //je nastaveni pro provozovnu ?
 //=============================
 s idprv=(zp#100)
 i +$g(arrset("arr",4,12,"prv",idprv)) d
 .s setdsm=$g(arrset("arr",4,12,"prv",idprv))
 .s $p(setdsm,"~",1)=($p(setdsm,"~",1)-1)
 k arrset
 //=======================================================================================================================
 //je nastaven automaticky vypocet delene smeny s parametry (suma cekani o delce nejmene limmm1 min je alespon limmm2 min)
 //(1.algoritmus)
 //=======================================================================================================================
 i $p(setdsm,"~",1)=1 d
 .s limmm1=$p(setdsm,"~",2) //delka pauz pro vypocet
 .s limmm2=$p(setdsm,"~",3) //suma doby pro vypocet
 .//vymazani delenych smen
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:atm=""  d
 ..s typ=arrtur("arr","tur",atm,"dta",2) i typ=16 k arrtur("arr","tur",atm)
 .//pole vlozenych cinnosti
 .k arrIns
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 ..s aetm=$g(arrtur("arr","tur",atm,"dta",1))
 ..s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:(atyp=1)!(atyp=2)!(atyp=8)
 ..s btm=atm f  s btm=$o(arrtur("arr","tur",btm),-1) q:(btm="")  d
 ...s betm=$g(arrtur("arr","tur",btm,"dta",1))
 ...s btyp=$g(arrtur("arr","tur",btm,"dta",2)) q:(btyp=1)!(btyp=2)!(btyp=8)
 ...i (atm>btm)&(aetm<betm) s arrIns(atm)=aetm
 .//vypocet delenych smen
 .k arrCek
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 ..//ne vlozena cinnost
 ..q:$d(arrIns(atm))
 ..//==================
 ..s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:atyp=2  q:atyp=8
 ..// je li spoj, podivam se, zda ve spoji neni pauza
 ..i atyp=3 d
 ...s li=$g(arrtur("arr","tur",atm,"dta",5))
 ...s sp=$g(arrtur("arr","tur",atm,"dta",6))
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 ...s tmptm="" f  s tmptm=$o(arrsp("arr","pau",tmptm)) q:(tmptm="")  d
 ....s pau=+$g(arrsp("arr","pau",tmptm))
 ....// pauza je mensi nez limit
 ....i pau<limmm1 q
 ....// kontrola, zda v pauze neco neni
 ....s iscin=0 s itm="" f  s itm=$o(arrIns(itm)) q:itm=""  d
 .....i (itm'<(atm+tmptm))&(+$g(arrIns(itm))'>(atm+tmptm+pau)) s iscin=1
 ....q:iscin
 ....s arrCek(atm+tmptm)=+pau
 ..// dohledam nasledujici cinnost
 ..s ntm="" s nval="" 
 ..s tmptm=atm f  s tmptm=$o(arrtur("arr","tur",tmptm)) q:(tmptm="")!(ntm'="")  d 
 ...//ne vlozena cinnost
 ...q:$d(arrIns(tmptm))
 ...//==================
 ...q:$g(arrtur("arr","tur",tmptm,"dta",2))=8
 ...s ntm=tmptm
 ..// =======================
 ..i ntm'="" d
 ...s aetm=$g(arrtur("arr","tur",atm,"dta",1))
 ...// uprava aktualniho casu - manipulace spoje
 ...i ($g(arrtur("arr","tur",atm,"dta",2))=3)&($g(arrtur("arr","tur",atm,"dta",8))["*") s aetm=(aetm+$tr($g(arrtur("arr","tur",atm,"dta",8)),"*",""))
 ...// =========================================
 ...// uprava nasledujiciho casu - manipulace spoje
 ...i ($g(arrtur("arr","tur",ntm,"dta",2))=3)&($g(arrtur("arr","tur",ntm,"dta",7))["*") s ntm=(ntm-$tr($g(arrtur("arr","tur",ntm,"dta",7)),"*",""))
 ...// =========================================
 ...s pau=$j((ntm-aetm),0,0) s:pau<0 pau=0
 ...i pau<limmm1 q
 ...s arrCek(aetm)=+pau
 .// kontrola, zda jde o delenou smenu
 .s pau=0 s tm="" f  s tm=$o(arrCek(tm)) q:tm=""  s pau=pau+$g(arrCek(tm))
 .i pau>limmm2 d
 ..s tm="" f  s tm=$o(arrCek(tm)) q:tm=""  d
 ...s pau=+$g(arrCek(tm))
 ...s itm=$j(tm,0,0) f  q:'$d(arrtur("arr","tur",itm))  s itm=itm+.01
 ...s arrtur("arr","tur",itm,"dta",1)=$j((tm+pau),0,0)
 ...s arrtur("arr","tur",itm,"dta",2)=16
 ...s arrtur("arr","tur",itm,"dta",4)=pau
 //=======================================================================================================================================
 //je nastaven automaticky vypocet delene smeny - vsechny pauzy mezi spoji mhd, v pripade, ze jsou v prubehu jen spoje mhd, pak vsech pauz 
 //(2.algoritmus)
 //=======================================================================================================================================
 i $p(setdsm,"~",1)=2 d
 .s limmm=$p(setdsm,"~",4)	//delka pauz pro vypocet	
 .//vymazani delenych smen + casove pole spoju a dsp
 .k arrtmDsp s jenMHD=1
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:atm=""  d
 ..s typ=$g(arrtur("arr","tur",atm,"dta",2))
 ..i typ=16 k arrtur("arr","tur",atm)
 ..i typ=3 d
 ...s li=$g(arrtur("arr","tur",atm,"dta",5))
 ...s sp=$g(arrtur("arr","tur",atm,"dta",6))
 ...s dsp=$g(arrtur("arr","tur",atm,"dta",14))
 ...s arrtmDsp(atm)=dsp_"~"_li_"~"_sp
 ...i dsp'=3 s jenMHD=0
 .//neni spoj
 .i $o(arrtmDsp(""))="" s jenMHD=0
 .//pole vlozenych cinnosti
 .k arrIns
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 ..s aetm=$g(arrtur("arr","tur",atm,"dta",1))
 ..s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:(atyp=1)!(atyp=2)!(atyp=8)
 ..s btm=atm f  s btm=$o(arrtur("arr","tur",btm),-1) q:(btm="")  d
 ...s betm=$g(arrtur("arr","tur",btm,"dta",1))
 ...s btyp=$g(arrtur("arr","tur",btm,"dta",2)) q:(btyp=1)!(btyp=2)!(btyp=8)
 ...i (atm>btm)&(aetm<betm) s arrIns(atm)=aetm
 .//vypocet delenych smen
 .k arrCek
 .s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 ..//ne vlozena cinnost
 ..q:$d(arrIns(atm))
 ..//==================
 ..s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:atyp=2  q:atyp=8
 ..// je li spoj, podivam se, zda ve spoji neni pauza
 ..i atyp=3 d
 ...s li=$g(arrtur("arr","tur",atm,"dta",5))
 ...s sp=$g(arrtur("arr","tur",atm,"dta",6))
 ...s dsp=+$g(arrtur("arr","tur",atm,"dta",14))
 ...//jen pro mestske
 ...i +dsp'=3 q
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) zt:+err "merr" s err=""
 ...s tmptm="" f  s tmptm=$o(arrsp("arr","pau",tmptm)) q:(tmptm="")  d
 ....s pau=+$g(arrsp("arr","pau",tmptm))
 ....i pau<limmm q
 ....// kontrola, zda v pauze neco neni
 ....s iscin=0 s itm="" f  s itm=$o(arrIns(itm)) q:itm=""  d
 .....i (itm'<(atm+tmptm))&(+$g(arrIns(itm))'>(atm+tmptm+pau)) s iscin=1
 ....q:iscin
 ....s arrCek(atm+tmptm)=+pau
 ..// dohledam nasledujici cinnost
 ..s ntm="" s nval="" 
 ..s tmptm=atm f  s tmptm=$o(arrtur("arr","tur",tmptm)) q:(tmptm="")!(ntm'="")  d 
 ...//ne vlozena cinnost
 ...q:$d(arrIns(tmptm))
 ...//==================
 ...q:$g(arrtur("arr","tur",tmptm,"dta",2))=8
 ...s ntm=tmptm
 ..// =======================
 ..i ntm'="" d
 ...s aetm=$g(arrtur("arr","tur",atm,"dta",1))
 ...// uprava aktualniho casu - manipulace spoje
 ...i ($g(arrtur("arr","tur",atm,"dta",2))=3)&($g(arrtur("arr","tur",atm,"dta",8))["*") s aetm=(aetm+$tr($g(arrtur("arr","tur",atm,"dta",8)),"*",""))
 ...// =========================================
 ...// uprava nasledujiciho casu - manipulace spoje
 ...i ($g(arrtur("arr","tur",ntm,"dta",2))=3)&($g(arrtur("arr","tur",ntm,"dta",7))["*") s ntm=(ntm-$tr($g(arrtur("arr","tur",ntm,"dta",7)),"*",""))
 ...// =========================================
 ...s pau=$j((ntm-aetm),0,0) s:pau<0 pau=0
 ...i pau>0 d
 ....//jsou-li v prubehu jen spoje MHD, pak kazde cekani
 ....i +$g(jenMHD) d  q
 .....i pau<limmm q
 .....s arrCek(aetm)=+pau
 ....//kontrola, zda je predchozi spoj MHD
 ....s mytm=$o(arrtmDsp(aetm+.01),-1)
 ....//neni predchozi spoj
 ....i mytm="" q
 ....//predchozi spoj neni mhd
 ....i +$g(arrtmDsp(mytm))'=3 q
 ....//kontrola, zda je nasledujici spoj MHD
 ....s mytm=$o(arrtmDsp(aetm-.01),+1)
 ....//neni nasledujici spoj
 ....i mytm="" q
 ....//nasledujici spoj neni mhd
 ....i +$g(arrtmDsp(mytm))'=3 q
 ....i pau<limmm q
 ....s arrCek(aetm)=+pau
 .// prevod pauz na delene smeny
 .s tm="" f  s tm=$o(arrCek(tm)) q:tm=""  d
 ..s pau=+$g(arrCek(tm))
 ..s itm=$j(tm,0,0) f  q:'$d(arrtur("arr","tur",itm))  s itm=itm+.01
 ..s arrtur("arr","tur",itm,"dta",1)=$j((tm+pau),0,0)
 ..s arrtur("arr","tur",itm,"dta",2)=16
 ..s arrtur("arr","tur",itm,"dta",4)=pau
 q 0
actManTur(idfa,nmsp,zp,hrl,inpar,arrtur)
 n (idfa,nmsp,zp,hrl,inpar,arrtur) s $zt="err" s err=""
 // aktualizace manipulaci v poli arrtur("arr","tur",...
 // nactu nastaveni programu pro vypocet manipulaci
 k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:err
 //obecne nastaveni zpusobu vypoctu
 s calman=+$p($g(arrset("arr",4,9)),"~",1)
 //nastaveni zpusobu vypoctu pro provozovnu
 //id provozovny
 s idprv=(zp#100)
 i +$p($g(arrset("arr",4,9,"prv",idprv)),"~",1) s calman=($p($g(arrset("arr",4,9,"prv",idprv)),"~",1)-1)
 k arrset
 //pole vlozenych cinnosti
 k arrIns
 s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 .s aetm=$g(arrtur("arr","tur",atm,"dta",1))
 .s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:(atyp=1)!(atyp=2)!(atyp=8)
 .s btm=atm f  s btm=$o(arrtur("arr","tur",btm),-1) q:(btm="")  d
 ..s betm=$g(arrtur("arr","tur",btm,"dta",1))
 ..s btyp=$g(arrtur("arr","tur",btm,"dta",2)) q:(btyp=1)!(btyp=2)!(btyp=8)
 ..i (atm>btm)&(aetm<betm) s arrIns(atm)=aetm
 //aktualizace manipulaci u spoju
 s atm="" f  s atm=$o(arrtur("arr","tur",atm)) q:(atm="")  d
 .s atyp=$g(arrtur("arr","tur",atm,"dta",2)) q:atyp'=3
 .s dsp=$g(arrtur("arr","tur",atm,"dta",14))
 .s mapr=$g(arrtur("arr","tur",atm,"dta",7)) s:mapr="" mapr="*"
 .s mapo=$g(arrtur("arr","tur",atm,"dta",8)) s:mapo="" mapo="*"
 .i (mapr'["*")&(mapo'["*") q
 .//nastavene manipulace
 .k arrma s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,dsp,"",.arrma) zt:+err "merr" s err="" 
 .//manipulace pred
 .i mapr["*" d
 ..s limman=+$g(arrma("dta",1))
 ..s mapr="*" s arrtur("arr","tur",atm,"dta",7)=mapr
 ..s betm="" s itm=atm f  s itm=$o(arrtur("arr","tur",itm),-1) q:(itm="")!(betm'="")  d
 ...//vlozena cinnost 
 ...q:$d(arrIns(itm))
 ...;;===============
 ...q:$g(arrtur("arr","tur",itm,"dta",2))=8
 ...s betm=itm
 ..q:betm=""
 ..s beetm=$g(arrtur("arr","tur",betm,"dta",1))
 ..i ($g(arrtur("arr","tur",betm,"dta",2))=3)&($g(arrtur("arr","tur",betm,"dta",8))["*") s beetm=beetm+$tr($g(arrtur("arr","tur",betm,"dta",8)),"*","")
 ..s freetm=$j((atm-beetm),0,0) s:freetm<0 freetm=0
 ..i freetm'<limman s mapr="*"_limman s arrtur("arr","tur",atm,"dta",7)=mapr q
 ..s mapr="*"_freetm s arrtur("arr","tur",atm,"dta",7)=mapr
 .i mapo["*" d
 ..s limman=+$g(arrma("dta",2)) s:calman limman=($g(arrma("dta",1))-$tr(mapr,"*","")) s:limman<0 limman=0
 ..s mapo="*" s arrtur("arr","tur",atm,"dta",8)=mapo
 ..s nxttm="" s itm=atm f  s itm=$o(arrtur("arr","tur",itm)) q:(itm="")!(nxttm'="")  d
 ...//vlozena cinnost 
 ...q:$d(arrIns(itm))
 ...//===============
 ...q:$g(arrtur("arr","tur",itm,"dta",2))=8
 ...s nxttm=itm
 ..q:nxttm=""
 ..s freetm=$j((nxttm-$g(arrtur("arr","tur",atm,"dta",1))),0,0) s:freetm<0 freetm=0
 ..i freetm'<limman s mapo="*"_limman s arrtur("arr","tur",atm,"dta",8)=mapo q
 ..s mapo="*"_freetm s arrtur("arr","tur",atm,"dta",8)=mapo
 q 0
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDTur5" type="INT" languagemode="0" timestamp="65609,41316.581005"><![CDATA[
OBapiEDTur5 q
 //aktualizace turnusu
actPRJTur(idfa,nmsp,hrl,arrtu,in,out)
 //aktualizace prejezdu (km) v turnusech
 n (idfa,nmsp,hrl,arrtu,in,out)
 s $zt="err" k out
 //
 // err=$$actPRJTur(idfa,nmsp,hrl,in,out) - aktualizace prejezdu v turnuse
 //  - arrtu - pole s casovym prubehem turnusu arrtu("arr","tur",cas,"dta",1)=data ...
 //  - hrl - casova varianta turnusu
 //  - in - pole se vstupnimi parametry
 //  - out
 //     out("arr",1,tm)=idcin~czstod~czstdo~kmtur~kmcis - protokol u oprave km 
 //     ------------------------------ 
 s tm="" f  {
	 s tm=$o(arrtu("arr","tur",tm)) i tm="" q
	 s idcin=$g(arrtu("arr","tur",tm,"dta",2))
	 i (idcin=4)!(idcin=5)!(idcin=6) {
	 	 s kmtur=$g(arrtu("arr","tur",tm,"dta",3))
		 s czstod=$g(arrtu("arr","tur",tm,"dta",9))
		 s czstdo=$g(arrtu("arr","tur",tm,"dta",10))
		 s fndcis=0 s kmcis=""
		 f id=(czstod_"~"_czstdo),(czstdo_"~"_czstod) {
		 	 i fndcis continue
			 k arro s err=$$isCisItm^OBapiED(idfa,nmsp,36,id,"",.arro) zt:+err "merr" s err=""
			 i +$g(arro) {
			 	 s fndcis=1
				 k arro s err=$$gCisItm^OBapiED(idfa,nmsp,36,id,"",.arro) zt:+err "merr" s err=""
				 s kmcis=$p($g(arro("arr",id)),"~",1)
			 }
		 }
		 i fndcis {
			 i (+kmtur'=+kmcis) {
				 s arrtu("arr","tur",tm,"dta",3)=+kmcis
				 s out("arr",1,tm)=idcin_"~"_czstod_"~"_czstdo_"~"_kmtur_"~"_kmcis
			 }
		 }
	 }
 }
 q 0
 //
addDODKTur(idfa,nmsp,zp,hrl,arrtu,in,out)
 //pridani DODK do turnusu
 n (idfa,nmsp,zp,hrl,arrtu,in,out)
 s $zt="err" k out
 //
 // err=$$addDODKTur(idfa,nmsp,hrl,in,out) - pridani dodk do turnusu
 //  - arrtu - pole s casovym prubehem turnusu arrtu("arr","tur",cas,"dta",1)=data ...
 //  - hrl - casova varianta turnusu
 //  - in:
 //  - in("dta",1)=min DODK na zacatek
 //  - in("dta",2)=min DODK na konec
 //  - out:
 //     out("arr",1,minod)=mindelka - protokol o pridani dodk 
 // ------------------------------ 
 //nacteni polozky
 s mindodkbeg=$g(in("dta",1))
 s mindodkend=$g(in("dta",2))
 //vymazani zacatku a konce
 s min=$o(arrtu("arr","tur",""))
 i min'="" {
	 i $g(arrtu("arr","tur",min,"dta",2))=1 {
		 k arrtu("arr","tur",min)
	 }
 }
 s min=$o(arrtu("arr","tur",""),-1)
 i min'="" {
	 i $g(arrtu("arr","tur",min,"dta",2))=2 {
		 k arrtu("arr","tur",min)
	 }
 }
 // vymazani dodk na zacatku a na konci
 s min=$o(arrtu("arr","tur",""))
 i min'="" {
	 i $g(arrtu("arr","tur",min,"dta",2))=14 {
		 k arrtu("arr","tur",min)
	 }
 }
 s min=$o(arrtu("arr","tur",""),-1)
 i min'="" {
	 i $g(arrtu("arr","tur",min,"dta",2))=14 {
		 k arrtu("arr","tur",min)
	 }
 }
 // doplneni dodk na zacatek
 i mindodkbeg {
	 // zjistim prvni cinnost, je-li to spoj, posun dodk o pripadne manipulace
	 s min="" s tmpmin ="" f {
		 s tmpmin=$o(arrtu("arr","tur",tmpmin)) i (tmpmin="")!(min'="") q
		 //ne poznamka
		 i $g(arrtu("arr","tur",tmpmin,"dta",2))=8 continue
		 s min=tmpmin
	 }
	 i min'="" {
		 i $g(arrtu("arr","tur",min,"dta",2))=3 {
			 i $g(arrtu("arr","tur",min,"dta",7))["*" {
				 s li=$g(arrtu("arr","tur",min,"dta",5))
				 s sp=$g(arrtu("arr","tur",min,"dta",6))
				 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 s iddsp=$g(arrsp("dta",4)) i 'iddsp s iddsp=1
				 k arrma s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,iddsp,"",.arrma) i +err zt
				 s ma=$g(arrma("dta",1)) k arrma
				 s min=min-ma
			 }
		 }
		 s minfr=min-mindodkbeg
		 s minto=min
		 s arrtu("arr","tur",minfr,"dta",1)=minto
		 s arrtu("arr","tur",minfr,"dta",2)=14
		 s arrtu("arr","tur",minfr,"dta",4)=(minto-minfr)
		 s out("arr",1,minfr)=(minto-minfr)
	 }
 }
 // doplneni dodk na konec
 i mindodkend {
	 // zjistim posledni cinnost, je-li to spoj, posun dodk o pripadne manipulace
	 s min="" s tmpmin ="" f {
		 s tmpmin=$o(arrtu("arr","tur",tmpmin),-1) i (tmpmin="")!(min'="") q
		 //ne poznamka
		 i $g(arrtu("arr","tur",tmpmin,"dta",2))=8 continue
		 s min=tmpmin
	 }
	 i min'="" {
 		 s minfr=$g(arrtu("arr","tur",min,"dta",1))
		 i $g(arrtu("arr","tur",min,"dta",2))=3 {
			 i $g(arrtu("arr","tur",min,"dta",8))["*" {
				 s li=$g(arrtu("arr","tur",min,"dta",5))
				 s sp=$g(arrtu("arr","tur",min,"dta",6))
				 k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) i +err zt
				 s iddsp=$g(arrsp("dta",4)) i 'iddsp s iddsp=1
				 k arrma s err=$$gMaDsp^OBapiED(idfa,nmsp,zp,iddsp,"",.arrma) i +err zt
				 s ma=$g(arrma("dta",2)) k arrma
				 s minfr=minfr+ma
			 }
		 }
		 s minto=minfr+mindodkend
		 s arrtu("arr","tur",minfr,"dta",1)=minto
		 s arrtu("arr","tur",minfr,"dta",2)=14
		 s arrtu("arr","tur",minfr,"dta",4)=(minto-minfr)
		 s out("arr",1,minfr)=(minto-minfr)
	 }	
 }
 q 0
 //
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/") 
]]></Routine>


<Routine name="OBapiEDTurCal" type="INT" languagemode="0" timestamp="64321,49966.325958"><![CDATA[
OBapiEDTurCal q
 // ========================================
 // turnusy - EDISON popis v ^OBapiTurEDInfo
 // ========================================
calTur(idfa,nmsp,zp,tu,hrl,arrtu,in,out)
 // err=$$calTur(idfa,nmsp,zp,tu,hrl,.in,.out) - vypocet turnusu (aktualizace pole "arr","tuv")
 //
 // arrtu - pole s daty turnusu (popis v OBapiTurEDInfo), program udaje v poli aktualizuje a vraci
 //
 // in
 // ==
 //
 // out
 // ===
 //
 n (idfa,nmsp,zp,tu,hrl,arrtu,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 // vypocet turnusu ponovu - je-li aktivovane nove zpracovani
 i +$g(^[nmsp]OI(idfa,"jb","zpracovani","EDISON")) s err=$$calTurED(idfa,nmsp,zp,tu,hrl,.arrtu,"",.out) zt:+err "merr" s err="" q 0
 // =================================================
 // vypocet turnusu postaru - zpracovani jede ponovu
 // vstupni pole s turnusem do pomocne prom. docasne, po zavedeni noveho zpracovani vyhodit !@
 k arrBackUp m arrBackUp=arrtu
 // ==============================
 // definice starych prom pro OBTUV ...
 s DZ=$$gFaDz^OBapiED(idfa) s D=":" s CN="~" s idfi=idfa s dzpr=zp s DZPR=zp
 s work=$p($zu(86),"*") s work=$p(work,"\",1,$l(work,"\")-1)
 s work="^^"_$zu(12,work_"\mgr\cachetemp",3)
 s kdeJR=nmsp
 // ===================================
 // kill pomocnych globalu
 k ^[work]owD($j) k ^[work]owT($j)
 //=======================
 //
 //    1  2  3   4   5  6   7    8     9    10    11   12    13   14  15   16   17  18   19    20    21  22    23     24     25    26
 s v="ss:da:POS:dnu:ZT:KT:PLTT:plttz:sz(1):sz(2):DAOD:KMELI:TYPA:PHM:DODK:KOEF:osa:PPOS:PAUT:dodnoc:die:fixp:uherak:proccek:igan:nocovne"
 // konverze dat turnusu
 f cnt=1:1 s prom=$p(v,":",cnt) q:prom=""  s @(prom)=$g(arrtu("dta",cnt))
 s pauskccek=$g(arrtu("dta",34))
 // konverze prom
 // platnost
 s val=PLTT s PLTT=""
 s $p(PLTT,"/",1)=$p(val,"~",1)
 s $p(PLTT,"/",2)=$p($$pltHex^OBapiED($p(val,"~",1)),"~",1)_$$pldHex^OBapiED($p(val,"~",2)-1)
 s $p(PLTT,"/",3)=$p(val,"~",2)
 s plttz=$$cnvPlTxt^OBapiED($p(val,"~",1),$p(val,"~",2))
 // ========
 // datove upravy - cas.var
 s DAOD=$$nd^OBapiED(hrl,1)
 // =======================
 // datove upravy - omezeni jede
 s sz(1)=$p($p($p($g(arrtu("arr","omz",13)),"@",2),"#",1),":",1)
 s sz(2)=$p($p($p($g(arrtu("arr","omz",13)),"@",2),"#",1),":",2)
 //;s denr=$g(^OI("DENR")) i denr="" s denr="10:10:10:15" s ^OI("DENR")=denr
 //;k alim f i=1:1:4 s alim(i)=$p(denr,D,i)
 //;s pc=0
 // kontrola na zacatek a konec, doplneni
 s tm=$o(arrtu("arr","tur","")) i tm'=""  d
 .s idcin=$g(arrtu("arr","tur",tm,"dta",2))
 .i idcin'=1 d
 ..s arrtu("arr","tur",tm-.01,"dta",1)=tm
 ..s arrtu("arr","tur",tm-.01,"dta",2)=1
 s tm=$o(arrtu("arr","tur",""),-1) i tm'=""  d
 .s idcin=$g(arrtu("arr","tur",tm,"dta",2))
 .i idcin'=2 d
 ..s endtm=$g(arrtu("arr","tur",tm,"dta",1))
 ..s arrtu("arr","tur",endtm,"dta",1)=endtm
 ..s arrtu("arr","tur",endtm,"dta",2)=2
 // sestaveni casoveho prubehu turnusu
 // tmTo~id~km~tm~li~sp~maBe~maAf~zFr~zTo~upr~inf
 s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:tm=""  d
 .s val="" s idcin=$g(arrtu("arr","tur",tm,"dta",2))
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))
 .// spoj
 .i idcin=3 d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1)) //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2)) //id
 ..s $p(val,":",3)=$g(arrtu("arr","tur",tm,"dta",3)) //km
 ..s $p(val,":",4)=$g(arrtu("arr","tur",tm,"dta",4)) //tm
 ..s $p(val,":",5)=$g(arrtu("arr","tur",tm,"dta",5))+($g(arrtu("arr","tur",tm,"dta",6))/1000) //lisp
 ..s $p(val,":",6)=$g(arrtu("arr","tur",tm,"dta",7)) //maBe
 ..s $p(val,":",7)=$g(arrtu("arr","tur",tm,"dta",8)) //maAf
 ..s $p(val,":",8)=""
 .// pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",3)=$g(arrtu("arr","tur",tm,"dta",3))  //km
 ..s $p(val,":",4)=$g(arrtu("arr","tur",tm,"dta",4))  //tm
 ..s $p(val,":",5)=$g(arrtu("arr","tur",tm,"dta",9))  //zFr
 ..s $p(val,":",6)=$g(arrtu("arr","tur",tm,"dta",10)) //zTo
 .// informace
 .i idcin=8 d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",5)=$g(arrtu("arr","tur",tm,"dta",12)) //info
 .// bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena
 .i (idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16) d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(arrtu("arr","tur",tm,"dta",4))  //tm
 .//ost.pr
 .i idcin=10 d
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(arrtu("arr","tur",tm,"dta",4))  //tm
 ..s $p(val,"#",2)=$g(arrtu("arr","tur",tm,"dta",11)) //upresneni
 .//preruseni
 .i idcin=12 d
 ..s val=""
 ..s $p(val,":",1)=$g(arrtu("arr","tur",tm,"dta",1))  //tmTo
 ..s $p(val,":",2)=$g(arrtu("arr","tur",tm,"dta",2))  //id
 ..s $p(val,":",4)=$g(arrtu("arr","tur",tm,"dta",4))  //tm
 ..s $p(val,":",5)=$g(arrtu("arr","tur",tm,"dta",12)) //info
 .// zapis
 .s ^[work]owT($j,tm)=val
 k polepar 
 s polepar("zp")=DZPR
 s polepar("nocovne")=$g(nocovne)
 s polepar("fixpcek")=$g(pauskccek)
 s anmsp=$znspace zn nmsp
 s res=$$TUV^OBTUV("^[work]owT($j,",0,KOEF,1,tu,"","",die,DODK,"",dodnoc,0,fixp,"",proccek,igan,"","","",hrl,"",.polepar)
 zn anmsp
 s res1=$p(res,"|",2)
 // prepis vysledku
 k arrBackUp("arr","tuv") k arr d qvTuV^OBapiTu(res1,.arr) m arrBackUp("arr","tuv")=arr
 s arrBackUp("dta",2)=+$h
 // aktualizace prubehu turnusu po vypoctu
 //tmTo~id~km~tm~li~sp~maBe~maAf~zFr~zTo~upr~inf
 k arrBackUp("arr","tur")
 s tm="" f  s tm=$o(^[work]owT($j,tm)) q:tm=""  d
 .s val=$g(^[work]owT($j,tm))
 .s idcin=+$p(val,":",2)
 .// zacatek a konec
 .i (idcin=1)!(idcin=2) d
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 .// spoj
 .i idcin=3 d
 ..s val=$p(val,"~",1)
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",3)=$p(val,":",3)				//km
 ..s arrBackUp("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s arrBackUp("arr","tur",tm,"dta",5)=($p(val,":",5)\1)			//li
 ..s arrBackUp("arr","tur",tm,"dta",6)=($p(val,":",5)#1*1000)		//sp
 ..s arrBackUp("arr","tur",tm,"dta",7)=$p(val,":",6)				//maBe
 ..s arrBackUp("arr","tur",tm,"dta",8)=$p(val,":",7)				//maAf
 .//pristaveni,odstaveni,prejezd,rezijni
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s val=$p(val,"~",1)
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",3)=$p(val,":",3)				//km
 ..s arrBackUp("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s arrBackUp("arr","tur",tm,"dta",9)=$p(val,":",5)				//zFr
 ..s arrBackUp("arr","tur",tm,"dta",10)=$p(val,":",6)				//zTo
 .//informace
 .i idcin=8 d
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 .//bp,nocovani,preruseni,pre.jidlo,dodk,odpocinek,delena smena
 .i (idcin=9)!(idcin=11)!(idcin=13)!(idcin=14)!(idcin=15)!(idcin=16) d
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 .//ost.pr
 .i idcin=10 d
 ..s idop=+$p(val,"#",2) s val=$p(val,"#",1)
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s arrBackUp("arr","tur",tm,"dta",11)=idop						//upresneni
 .//preruseni
 .i idcin=12 d
 ..s arrBackUp("arr","tur",tm,"dta",1)=$p(val,":",1)				//tmTo
 ..s arrBackUp("arr","tur",tm,"dta",2)=$p(val,":",2)				//id
 ..s arrBackUp("arr","tur",tm,"dta",4)=$p(val,":",4)				//tm
 ..s arrBackUp("arr","tur",tm,"dta",12)=$p(val,":",5)				//info
 // ===========================
 k arrtu m arrtu=arrBackUp
 //
 q 0
 //
calTurED(idfa,nmsp,zp,tu,hrl,arrtu,in,out)
 // err=$$calTurED(idfa,nmsp,zp,tu,hrl,.in,.out) - vypocet turnusu (aktualizace pole "arr","tuv")
 //
 // arrtu - pole s daty turnusu (popis v OBapiTurEDInfo), program udaje v poli aktualizuje a vraci
 //
 // in
 // ==
 //
 // out
 // ===
 //
 n (idfa,nmsp,zp,tu,hrl,arrtu,in,out)
 s $zt="err1" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(tu)="" q "1~tu="
 // vypocet turnusu
 // do prubehu turnusu doplnim turnus
 s tm="" f {
	 s tm=$o(arrtu("arr","tur",tm)) i tm="" q
	 s arrtu("arr","tur",tm,"dta",19)=tu
 }
 //==================================
 s glbTU="^||wDataTU" k @glbTU m @glbTU=arrtu
 // aktualizace spoju (druh spoje, tarifni km) v prubehu
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updSpTur(idfa,nmsp,glbTU,hrl,"","") zt:+err "merr" s err=""
 // kontrola a uprava zacatku a konce k cinnostem
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updBegEndTur(idfa,nmsp,zp,glbTU,"","") zt:+err "merr" s err=""
 // aktualizace manipulaci
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updManTur(idfa,nmsp,zp,glbTU,hrl,"","") zt:+err "merr" s err=""
 // aktualizace delenych smen
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updDSmTur(idfa,nmsp,zp,glbTU,hrl,"","") zt:+err "merr" s err=""
 // aktualizace/vyhodnoceni prs
 k arri s arri("par",1)=(zp#100)						//idprv
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updPrsTur(idfa,nmsp,glbTU,hrl,.arri,"") zt:+err "merr" s err=""
 s err=##class(ALVA.ADZPRACOVANI.DZVAData).updPrsSum(idfa,nmsp, glbTU, hrl,"","") zt:+err "merr" s err=""
 // mzdove parametry z turnusu
 k docarr,pararr,inarr,outarr
 s inarr("dta",1)=$g(arrtu("dta",16)) 					//mzdovy koeficient(%)
 s inarr("dta",2)=$$hm^OBapiED($g(arrtu("dta",15)))		//dodk (min)
 s inarr("dta",3)=$g(arrtu("dta",26))					//nocovne (kc)
 s inarr("dta",4)=$g(arrtu("dta",21))					//diety (kc)
 s inarr("dta",5)=$g(arrtu("dta",20))					//%vysledneho dodk v noci (%)  ... neplni se, nepouziva se
 s inarr("dta",6)=$g(arrtu("dta",24))					//zapoctene cekani(%)
 s inarr("dta",7)=$g(arrtu("dta",25))					//dopocet do uvazku pres vyrovnavaci dobu (min)
 s inarr("dta",8)=$g(arrtu("dta",22))					//fixni priplatek ke mzde	(kc)
 s inarr("dta",9)=$g(arrtu("dta",34))					//fixni priplatek k cekani (kc)	
 s inarr("dta",10)=0									//km privesu
 s inarr("dta",11)=$g(arrtu("dta",35))					//priznak pro nevyplaceni diet (0/1)
 s inarr("dta",12)=$g(arrtu("dta",54))					//zpusob vypoctu mzdy pri pausalnim tarifu
 s inarr("dta",13)=$g(arrtu("dta",60))					//priznak neproplacet cekani (0/1)
 s inarr("dta",14)=$g(arrtu("dta",61))					//priznak nevyhodnocovat vyr.dobu (0/1)
 s inarr("dta",15)=""									//id pro zahranicni diety
 s inarr("dta",16)=""
 i $g(arrtu("dta",66))=1 s inarr("dta",16)=tu			//idtu pro priplatek za odp.hod.sa1
 s inarr("dta",17)=""
 i $g(arrtu("dta",66))=2 s inarr("dta",17)=tu			//idtu pro priplatek za odp.hod.sa1
 s inarr("dta",18)=""									//zpusob dopoctu diet 
 s inarr("par",1)=zp									//zp
 s inarr("par",2)=hrl									//zacatek (hrl)
 s inarr("par",3)=""									//rrmm
 s inarr("par",4)=""									//id dzva
 s inarr("par",5)=""									//rz
 s inarr("par",6)=""									//osc
 s inarr("par",7)=""									//pruvodci 0/1
 s inarr("par",8)=""									//zaskoleni 0/1
 s inarr("par",9)=""									//pocet ridicu
 s inarr("par",10)=""									//poradi ridicu
 s inarr("par",11)=0									//mod vypoctu (0 pro turnus)
 m docarr("arr","tur")=@glbTU@("arr","tur")
 m docarr("arr","edv")=@glbTU@("arr","edv")
 // doplneni atributu pro vicesmenny priplatek
 s isvicsmpripl=($g(arrtu("dta",23))=1)
 s tm="" f  s tm=$o(docarr("arr","tur",tm)) q:tm=""  d
 .i ($g(docarr("arr","tur",tm,"dta",2))>2)&($g(docarr("arr","tur",tm,"dta",2))<8) d
 ..s docarr("arr","tur",tm,"dta",17)=isvicsmpripl
 // ==========================================
 // vypocet casoveho prubehu a mzdove vety
 s err=$$calcTur^OBapiED(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,"","") zt:+err "merr" s err=""
 s err=$$calcTurMzd^OBapiED(idfa,nmsp,.docarr,.pararr,.inarr,.outarr,"","") zt:+err "merr" s err=""
 k arrtu("arr","tur") m arrtu("arr","tur")=@glbTU@("arr","tur")
 k arrtu("arr","tuv") m arrtu("arr","tuv")=docarr("arr","tuv")
 k arrtu("arr",1) m arrtu("arr",1)=pararr("arr",5)
 k arrtu("arr",2) m arrtu("arr",2)=pararr("arr",7)
 k @glbTU
 q 0
err s $zt="" zn:$g(anmsp)'="" anmsp k out q "1~"_$ze_"/"_$tr($g(err),"~","/")
err1 s $zt="" k out q "1~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDTurCal1" type="INT" languagemode="0" timestamp="65772,49495.913438"><![CDATA[
OBapiEDTurCal1 q
 // ========================================
 // turnusy - EDISON popis v ^OBapiTurEDInfo
 // ========================================
calcTur(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 // vypocet casove urcenych cinnosti ... docarr("arr","tur",...) - data prubehu cinnosti z dokladu nebo turnusu
 // vypocet casove urcenych cinnosti ... docarr("arr","tuv",...) - data rucnich vstupu
 // vysledek ze zapise do pole ......... docarr("arr","tuv",...) - vysledek - casove a mzdove udaje
 // vstupni pole inarr:
 // ===================
 // inarr("dta",1)=vysledny mzdovy koeficient na dokladu 	(%)
 // inarr("dta",2)=vysledne dodk (rucne zadane nad turnusem)(min)
 // inarr("dta",3)=vysledne nocovne 						(kc)
 // inarr("dta",4)=diety									(kc)
 // inarr("dta",5)=%dodk v noci z dodk inarr("dta",2)		(%)
 // inarr("dta",6)=zapoctene cekani z turnusu				(%)
 // inarr("dta",7)=dopocet do uvazku pres vyrovnavaci dobu  (min)
 // inarr("dta",8)=vysledny fixni priplatek ke mzde			(kc)
 // inarr("dta",9)=vysledny fixni priplatek k cekani		(kc)
 // inarr("dta",10)=km privesu								(km)
 // inarr("dta",11)=priznak pro vyplaceni diet              (0 dle nastaveni / 1 nevyplacet / 2 vzdy turnusove /3 podle tabulky tuz.diet)
 // inarr("dta",12)=zpusob vypoctu dokladu pro UH mzdy 		(1 jednomuzne / 2 dvoumuzne / 3 dvoumuzne obden / 4 pohotovost / 100 tarif)
 // inarr("dta",13)=priznak neproplacet cekani              (0 proplacet / 1 neproplacet)
 // inarr("dta",14)=priznak nevyhodnocovat vyr.dobu         (0 vyhodnocovat / 1 nevyhodnocovat)
 // inarr("dta",15)=id pro zahranicni diety
 // inarr("dta",16)=idtu pro priplatek za odp.hod.sa1		(id turnusu ... id1~id2~...)
 // inarr("dta",17)=idtu pro priplatek za odp.hod.sa2		(id turnusu ... id1~id2~...)
 // inarr("dta",18)=mod pro dopocet diet 					(0 ne / 1 od pulnoci / 2 do pulnoci / 3 od pulnoci a do pulnoci)
 // inarr("par",1)=zp
 // inarr("par",2)=hrl 		...  jizdy nebo platnost turnusu
 // inarr("par",3)=rrmm		...	 obdobi ve kterem je ulozen doklad dzva
 // inarr("par",4)=iddoc	...  cislo dokladu dzva
 // inarr("par",5)=rz		...  rz na dzva
 // inarr("par",6)=osc		...  osobni cislo ridice nebo pruvodciho
 // inarr("par",7)=priznak pruvodciho 0/1
 // inarr("par",8)=priznak ucitele 0/1
 // inarr("par",9)=pocet ridicu pro automaticky vypocet spolujizdy
 // inarr("par",10)=poradi ridice, ve kterem byl zadan
 // inarr("par",11)=mod vypoctu dokladu 0 pro ridice (nebo turnus) / 1 pro rz
 // inarr("par",12)=no kill vysledneho globalu s prubehem prace (^||wrk.ALVA.AD(wrkm), outarr=wrkm
 // inarr("par",13)=doba provozu pohotovostniho turnusu pro mzdy UH
 // inarr("par",14)=priznak smeny z volna 0/1
 // inarr("arr",1,"dta",cnt)=udaje o spolujizde/pendlu pro osc
 //  1 - pohotovost pri spolujizde ridice (min), cnt ridice je poradove cislo ridice
 //  2 - priplatek za nocovne (0 ano / 1 ne)
 //  3 - pendl (0 ne / 1 ano) ano = ridic nejede cely turnus, budou mu zadány vlastni mzd.udaje 
 //  4 - hodiny jízdy (min)
 //  5 - hodiny manipulaci (min)
 //  6 - hodiny ostatnich praci (min)
 //  7 - hodiny DODK (min)
 //  8 - hodiny cekani (min)
 //  9 - hodiny v noci (min)
 // 10 - diety (kč)
 // 11 - km celkem (km)
 // 12 - zpusob vypoctu mzdy
 // 13 - hodiny SoNe (min)
 // 14 - hodiny Sv (min)
 // pole s predavanymi parametry pararr:
 // ====================================
 // pararr("dta",1)=pocet spoju (ks)
 // pararr("dta",2)=hodiny vicesmenneho provozu (mm)
 // pararr("dta",3)=pocet manipulaci (ks)
 // pararr("dta",4)=pocet zasilek (ks)
 // pararr("dta",5)=vlozeny vykon(mm),zadany bez casove pozice, asi se nepouziva
 // pararr("dta",6)=km objizdek (km)
 // pararr("dta",7)=vyskytl se svatek 0/1
 // pararr("dta",8)=vyskytla se so,ne 0/1
 // pararr("dta",9)=maximalni delka manipulaci (mm)
 // pararr("dta",10)=turnus obsahuje spoje nad 50 km 0/1
 // pararr("dta",11)=pocet spoju +/- pro navyseni / kraceni mzdy (UH)
 // pararr("dta",12)=den 6 so / 7 ne pokud se vyskytla so,ne = 1 (pro rozpocet hodin v OBapiEDTurCal2 
 // pararr("arr",1,l,s)=km - km dle linek a spoju pro vypocet priplatku
 // pararr("arr",1,l,s,hrl)=km  - km dle linek a spoju po dnech
 // pararr("arr",2,dsp)=km - rezijni km dle druhu spoju
 // pararr("arr",3,l,s)=hodiny jizdy pro priplatek, muze byt zapoctena doba man., vd, bp  (mm)
 // pararr("arr",4,dsp)=pocet spoju s totoznym druhem (ks)
 // pararr("arr",5,id,mmod)=mmdo //dopoctene cinnosti vd(id=-1),ppz(-2),ppn(-3)
 // pararr("arr",6,id,mena)=dieta~kurz~mnozstvi~hrlkurzu //protokol pro zahranicni diety
 // pararr("arr",7,mmod)=mmdo // cekani ve ztizenem prostredi
 // pararr("arr",8,idtu)=mmprv doba provozu turnusu na dokladu pro stanoveni sazby v pripade vice turnusu na dokladu pro mzdy UH
 //
 n (idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 s $zt="err" s err="" k pararr k docarr("arr","tuv")
 // pracovni global s prubehem prace
 s wrkm=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkm) s outarr=wrkm
 //                           1     2    3   4  5  6    7    8  9  10  11   12   13
 // ^||wrk.ALVA.AD(wrkm,mm)=mmbeg~idcin~hrl~dd~sv~noc~vicsm~dsp~li~sp~inpau~idtu~ztpau
 // inpau ... 0/1 priznak vnitrni pauzy spoje
 // idtu .... id turnusu, ze ktereho cinnost vznikla
 // ztpau ... priznak ztizeneho cekani (0/1)
 // pracovni global obecny
 //
 s wrko=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrko)
 //
 // ^||wrk.ALVA.AD(wrko,1,tm)=idzst 			... zastavky z prubehu cinnosti pro vyhodnoceni ztizeneho prac. prostredi
 // ^||wrk.ALVA.AD(wrko,2,tmbeg)=tmend~li~sp	... zacatky spoju pro vyhodnoceni doby priplatku za linky a spoje, podle nastaveni se tam nacita  i man,vd,bp
 //
 // promenne
 s zp=$g(inarr("par",1))				//zp
 s hrl=$g(inarr("par",2))				//horlog zacatku
 s idprv=zp#100							//id provozovny
 // nastaveni programu
 i '$d(arrset("arr")) k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 // mzdove nastaveni
 i '$d(arrmzd("arr")) k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr"
 // pokud nejsou cinnosti, pak se nic nepocita
 i $o(docarr("arr","tur",""))="" q 0
 // =====================================================
 // od zacatku do konce zadanych cinnosti nastavim cekani
 // =====================================================
 s mmbeg=$o(docarr("arr","tur",""))
 s mm=$o(docarr("arr","tur",""),-1)
 s mmend=$g(docarr("arr","tur",mm,"dta",1))
 s memend=""
 f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=0
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 // ======================================================
 // prubeh turnusu, napocet km, casu a ostatnich parametru
 // ======================================================
 s issp=0
 s mmbeg="" f  s mmbeg=$o(docarr("arr","tur",mmbeg)) q:mmbeg=""  d
 .s acthrl=(hrl+(mmbeg\1440))
 .s mmend=$g(docarr("arr","tur",mmbeg,"dta",1))
 .s idcin=$g(docarr("arr","tur",mmbeg,"dta",2))
 .s idtu=$g(docarr("arr","tur",mmbeg,"dta",19))
 .s nxtmmbeg=$o(docarr("arr","tur",mmbeg))
 .s nxtidtu="" i nxtmmbeg'="" s nxtidtu=$g(docarr("arr","tur",nxtmmbeg,"dta",19))
 .s li="" s sp="" s dsp="" s vicsm=""  k arrsp
 .i (idcin=3)!(idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s km=$g(docarr("arr","tur",mmbeg,"dta",3))
 ..s vicsm=$g(docarr("arr","tur",mmbeg,"dta",17))
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..s dsp=7
 ..//zastavka od
 ..i $g(docarr("arr","tur",mmbeg,"dta",9))'="" s ^||wrk.ALVA.AD(wrko,1,mmbeg)=$g(docarr("arr","tur",mmbeg,"dta",9))
 ..//zastavka do
 ..i $g(docarr("arr","tur",mmbeg,"dta",10))'="" i mmend'="" s ^||wrk.ALVA.AD(wrko,1,mmend)=$g(docarr("arr","tur",mmbeg,"dta",10))
 .i (idcin=3) d
 ..s issp=1
 ..s dsp=$g(docarr("arr","tur",mmbeg,"dta",14)) s:'dsp dsp=1
 ..s li=$g(docarr("arr","tur",mmbeg,"dta",5))
 ..s sp=$g(docarr("arr","tur",mmbeg,"dta",6))
 ..//pole zacatku a koncu linek a spoju (pro vyhodnoceni priplatku za dobu linek a spoju, muze byt zapocteno man, vd, bp)
 ..s ^||wrk.ALVA.AD(wrko,2,mmbeg)=$g(docarr("arr","tur",mmbeg,"dta",1))_"~"_li_"~"_sp
 ..s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) zt:+err "merr" s err=""
 ..//zastavka od
 ..i $g(arrsp("dta",6))'="" s ^||wrk.ALVA.AD(wrko,1,mmbeg)=$g(arrsp("dta",6))
 ..//zastavka do
 ..i $g(arrsp("dta",7))'="" i mmend'="" s ^||wrk.ALVA.AD(wrko,1,mmend)=$g(arrsp("dta",7))
 .//pocet odjetych spoju ==============================
 .i idcin=3 s pararr("dta",1)=$g(pararr("dta",1))+1
 .//pocet zastavek ====================================
 .i idcin=3 s docarr("arr","tuv",19,20)=$g(docarr("arr","tuv",19,20))+$g(arrsp("arr","pcz"))
 .//pocet manipulaci ==================================
 .i idcin=3 s pararr("dta",3)=$g(pararr("dta",3))+$$gNumMan(.arrset,dsp,idprv)
 .//maximalni delka manipulaci ========================
 .i idcin=3 s pararr("dta",9)=$g(pararr("dta",9))+$$gMmMan(.arrset,dsp,idprv)
 .//km podle linek s spoju a dnu ======================
 .i idcin=3 d
 ..s pararr("arr",1,li,sp)=$g(pararr("arr",1,li,sp))+km
 ..s pararr("arr",1,li,sp,acthrl)=$g(pararr("arr",1,li,sp,acthrl))+km
 .//pocet spoju podle dsp
 .i idcin=3 s pararr("arr",4,dsp)=$g(pararr("arr",4,dsp))+1 
 .// turnus obsahuje spoje nad 50 km ==================
 .i idcin=3 i km>50 s pararr("dta",10)=1
 .// napocet km =======================================
 .i (idcin=3)!(idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..d addTuv(.docarr,22,km)			//celkove km
 ..i dsp=1 d addTuv(.docarr,23,km)	//vnitro km
 ..i dsp=2 d addTuv(.docarr,24,km)	//dalkove km
 ..i dsp=3 d addTuv(.docarr,25,km)	//mesto km
 ..i dsp=4 d addTuv(.docarr,26,km)	//primesto km
 ..i dsp=5 d addTuv(.docarr,27,km)	//mezinarodni km
 ..i dsp=6 d addTuv(.docarr,28,km)	//smluvni km
 ..i dsp=7 d addTuv(.docarr,29,km)	//rezijni km
 ..//==========================================
 ..//rezijni km podle dsp pro vypocet priplatku
 ..//==========================================
 ..i dsp=7 d
 ...//druh spoje podle nasledujiciho spoje, neni-li, pak podle predchoziho spoje
 ...s rezdsp=$$gDspTur(.docarr,mmbeg,1) s:'rezdsp rezdsp=$$gDspTur(.docarr,mmbeg,-1)
 ...s:'rezdsp rezdsp=1				//nenasel se druh podle spoje, pak vnitro
 ...s pararr("arr",2,rezdsp)=$g(pararr("arr",2,rezdsp))+km
 .// napocet hrazenych rezijnich km =======================================
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..i $g(docarr("arr","tur",mmbeg,"dta",21)) d addTuv(.docarr,97,km)	//rezijni hrazene km
 .// ==================================================
 .// =========== rozbaleni do casoveho pole ===========
 .// ==================================================
 .// memend ... zapamatuju si konec
 .i idcin=2 s memend=mmbeg
 .// preruseni vyvolane novym zacatkem
 .i (idcin=1)&(memend'="") d
 ..f mm=($j(memend,0,0)+1):1:$j(mmbeg,0,0) d
 ...s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=""
 ...s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=12
 ...s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ..s memend=""
 .// rozbaleni cinnosti do minutoveho pole
 .f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) d
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=idcin
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",7)=vicsm
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ..s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 ..// do casoveho pole si doplnim linku a spoj 
 ..i idcin=3 d
 ...s $p(^||wrk.ALVA.AD(wrkm,mm),"~",9)=li
 ...s $p(^||wrk.ALVA.AD(wrkm,mm),"~",10)=sp
 .//pro spoj manipulace a vnitrni pauzy
 .i idcin=3 d
 ..s mapr=$g(docarr("arr","tur",mmbeg,"dta",7))
 ..s mapo=$g(docarr("arr","tur",mmbeg,"dta",8))
 ..//manipulace
 ..i mapr["*" d
 ...f tmpmm=(+$tr(mapr,"*","")):-1:1 d
 ....s mm=($j(mmbeg,0,0)-tmpmm+1)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=(idcin+.01)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",7)=vicsm
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ....//do manipulaci si doplnim linku a spoj (k cemu patri) 
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",9)=li
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",10)=sp
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 ..i mapo["*" d
 ...f tmpmm=1:1:(+$tr(mapo,"*","")) d
 ....s mm=($j(mmend,0,0)+tmpmm)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=(idcin+.01)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",7)=vicsm
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ....//do manipulaci si doplnim linku a spoj (k cemu patri) 
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",9)=li
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",10)=sp
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 ..//manipulace tvrda
 ..i +mapr d
 ...f tmpmm=1:1:(mapr) d
 ....s mm=($j(mmbeg,0,0)+tmpmm)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=(idcin+.01)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",7)=vicsm
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ....//do manipulaci si doplnim linku a spoj (k cemu patri) 
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",9)=li
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",10)=sp
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 ..i +mapo d
 ...f tmpmm=(+mapo):-1:1 d
 ....s mm=($j(mmend,0,0)-tmpmm+1)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",1)=mmbeg
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=(idcin+.01)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",7)=vicsm
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ....//do manipulaci si doplnim linku a spoj (k cemu patri) 
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",9)=li
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",10)=sp
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 ..//pauza
 ..s relmmpbeg="" f  s relmmpbeg=$o(arrsp("arr","pau",relmmpbeg)) q:relmmpbeg=""  d
 ...s mmp=+$g(arrsp("arr","pau",relmmpbeg))
 ...// aktualni zacatek a konec pauzy
 ...s mmpbeg=mmbeg+mapr+relmmpbeg	//pauzu beru od zacatku spoje (+pevne manipulace) v prubehu, muze byt posunut
 ...s mmpend=mmpbeg+mmp				//konec pauzy 
 ...// vytvoreni okna pro pauzu
 ...f mm=($j(mmpbeg,0,0)+1):1:$j(mmpend,0,0) d
 ....k ^||wrk.ALVA.AD(wrkm,mm)
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=0
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",11)=1	//priznak vnitrni pauzy ve spoji pro VD
 ....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 .//je li dalsi cinnost ze stejneho turnusu, doplnim oznaceni turnusu do pripadne pauzy mezi cinostmi (z pauzy muze byt VD nebo PPZ,...)
 .i (idtu=nxtidtu)&(idtu'="")&($j(nxtmmbeg,0,0)'<($j(mmend,0,0)+1)) d
 ..f mm=($j(mmend,0,0)+1):1:$j(nxtmmbeg,0,0) s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440)) s $p(^||wrk.ALVA.AD(wrkm,mm),"~",12)=idtu
 // =========================================================================================
 // projedu casti spoju, zjistim jejich delku a upravim parametr pararr("dta",10) pro <50,>50
 // =========================================================================================
 s hrledv="" f  s hrledv=$o(docarr("arr","edv",hrledv)) q:hrledv=""  d
 .s idevd="" f  s idevd=$o(docarr("arr","edv",hrledv,"arr",idevd)) q:idevd=""  d
 ..//casti spoju
 ..i idevd=7 d
 ...s id="" f  s id=$o(docarr("arr","edv",hrledv,"arr",idevd,id)) q:id=""  d
 ....s issp=1
 ....i '$d(docarr("arr","edv",hrledv,"arr",idevd,id,"rzp")) d
 .....s km=$g(docarr("arr","edv",hrledv,"arr",idevd,id,"dta",4))
 .....i km>50 s pararr("dta",10)=1
 ....i +$d(docarr("arr","edv",hrledv,"arr",idevd,id,"rzp")) d
 .....s idcnt="" f  s idcnt=$o(docarr("arr","edv",hrledv,"arr",idevd,id,"rzp",idcnt)) q:idcnt=""  d
 ......s km=$g(docarr("arr","edv",hrledv,"arr",idevd,id,"rzp",idcnt,"dta",4))
 ......i km>50 s pararr("dta",10)=1
 //
 // ==================================================
 // pokud v turnuse neni spoj, chova se to jako nad 50
 // ==================================================
 i 'issp s pararr("dta",10)=1
 // ======================================
 // doplneni vyrovnavaci doby - cinnost -1
 // ======================================
 //zpusob vypoctu vd - hlavni
 s tpcvd=+$g(arrset("arr",4,14))
 //zpusob vypoctu vd - pro provozovnu, je-li nastaveno															
 i +$g(arrset("arr",4,14,"prv",idprv)) s tpcvd=(+$g(arrset("arr",4,14,"prv",idprv))-1)
 // =============================================================================================
 // VD prvni algoritmus, hledam mezery mezi spoji a pokud jsou do limitu je cekani uvnitr nich vd
 // =============================================================================================
 i 'tpcvd d
 .//nevyhodnocovat VD
 .i +$g(inarr("dta",14)) q
 .s mmbeg="" f  s mmbeg=$o(docarr("arr","tur",mmbeg)) q:mmbeg=""  d
 ..s acthrl=(hrl+(mmbeg\1440))
 ..s mmend=$g(docarr("arr","tur",mmbeg,"dta",1))
 ..s idcin=$g(docarr("arr","tur",mmbeg,"dta",2))
 ..//je to spoj
 ..i idcin=3 d
 ...s dsp=$g(docarr("arr","tur",mmbeg,"dta",14)) s:'dsp dsp=1
 ...s li=$g(docarr("arr","tur",mmbeg,"dta",5))
 ...s sp=$g(docarr("arr","tur",mmbeg,"dta",6))
 ...s mapr=$g(docarr("arr","tur",mmbeg,"dta",7))
 ...//doplneni vyrovnavaci doby do pauzy spoje
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) zt:+err "merr" s err=""
 ...s relmmpbeg="" f  s relmmpbeg=$o(arrsp("arr","pau",relmmpbeg)) q:relmmpbeg=""  d
 ....s mmp=+$g(arrsp("arr","pau",relmmpbeg))
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmbeg+mapr+relmmpbeg	//pauzu beru od zacatku spoje v prubehu, muze byt posunut
 ....s mmpend=mmpbeg+mmp			//konec pauzy
 ....//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 ....s mmvd=+$$gMmVd(.arrset,dsp,2,idprv)
 ....i mmvd i (mmpend-mmpbeg)'>(mmvd) d
 .....//pauza je vyrovnavaci doba, prevod pauzy na vd
 .....f mm=($j(mmpbeg,0,0)+1):1:$j(mmpend,0,0) d
 ......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ...//dohledam nasledujici spoj, pokud je, kontrola na vyrovnavaci dobu
 ...s nxtmmbeg="" s mm=mmend-.01 f  s mm=$o(docarr("arr","tur",mm)) q:(mm="")!(nxtmmbeg)  d
 ....s idcin=$g(docarr("arr","tur",mm,"dta",2))
 ....i idcin=3 s nxtmmbeg=mm
 ...//je nasledujici spoj
 ...i nxtmmbeg d
 ....s dsp=$g(docarr("arr","tur",nxtmmbeg,"dta",14)) s:'dsp dsp=1
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmend-$g(docarr("arr","tur",mmbeg,"dta",8))			//posun o manipulace
 ....s mmpend=nxtmmbeg+$g(docarr("arr","tur",nxtmmbeg,"dta",7))		//posun o manipulace
 ....//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 ....s mmvd=+$$gMmVd(.arrset,dsp,1,idprv)
 ....i mmvd i (mmpend-mmpbeg)'>(mmvd) d
 .....//pauza je vyrovnavaci doba, prevod pauzy na vd
 .....f mm=($j(mmpbeg,0,0)+1):1:$j(mmpend,0,0) d
 ......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 // =========================================================================================
 // VD druhy algoritmus, hledam intervaly cekani mezi spoji a pokud je cekani do limitu je vd
 // =========================================================================================
 i +tpcvd=1 d
 .//nevyhodnocovat VD
 .i +$g(inarr("dta",14)) q
 .s mmbeg="" f  s mmbeg=$o(docarr("arr","tur",mmbeg)) q:mmbeg=""  d
 ..s acthrl=(hrl+(mmbeg\1440))
 ..s mmend=$g(docarr("arr","tur",mmbeg,"dta",1))
 ..s idcin=$g(docarr("arr","tur",mmbeg,"dta",2))
 ..//je to spoj
 ..i idcin=3 d
 ...s dsp=$g(docarr("arr","tur",mmbeg,"dta",14)) s:'dsp dsp=1
 ...s li=$g(docarr("arr","tur",mmbeg,"dta",5))
 ...s sp=$g(docarr("arr","tur",mmbeg,"dta",6))
 ...s mapr=$g(docarr("arr","tur",mmbeg,"dta",7))
 ...//doplneni vyrovnavaci doby do pauzy spoje
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) zt:+err "merr" s err=""
 ...s relmmpbeg="" f  s relmmpbeg=$o(arrsp("arr","pau",relmmpbeg)) q:relmmpbeg=""  d
 ....s mmp=+$g(arrsp("arr","pau",relmmpbeg))
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmbeg+mapr+relmmpbeg	//pauzu beru od zacatku spoje v prubehu, muze byt posunut
 ....s mmpend=mmpbeg+mmp			//konec pauzy
 ....//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ....k arrmm
 ....f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ....s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 .....s mmpend=$g(arrmm(mmpbeg))
 .....//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 .....s mmvd=+$$gMmVd(.arrset,dsp,2,idprv)
 .....i mmvd i (mmpend-mmpbeg+1)'>(mmvd) d
 ......//pauza je vyrovnavaci doba, prevod pauzy na vd
 ......f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 .......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ....k arrmm
 ...//dohledam nasledujici spoj, pokud je, kontrola na vyrovnavaci dobu
 ...s nxtmmbeg="" s mm=mmend-.01 f  s mm=$o(docarr("arr","tur",mm)) q:(mm="")!(nxtmmbeg)  d
 ....s idcin=$g(docarr("arr","tur",mm,"dta",2))
 ....i idcin=3 s nxtmmbeg=mm
 ...//je nasledujici spoj
 ...i nxtmmbeg d
 ....s dsp=$g(docarr("arr","tur",nxtmmbeg,"dta",14)) s:'dsp dsp=1
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmend-$g(docarr("arr","tur",mmbeg,"dta",8))			//posun o manipulace
 ....s mmpend=nxtmmbeg+$g(docarr("arr","tur",nxtmmbeg,"dta",7))		//posun o manipulace
 ....//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ....k arrmm
 ....f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ....s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 .....s mmpend=$g(arrmm(mmpbeg))
 .....//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 .....s mmvd=+$$gMmVd(.arrset,dsp,1,idprv)
 .....i mmvd i (mmpend-mmpbeg+1)'>(mmvd) d
 ......//pauza je vyrovnavaci doba, prevod pauzy na vd
 ......f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 .......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ....k arrmm
 // =============================================
 // VD treti algoritmus, vyhodnocuju kazdou pauzu
 // =============================================
 i +tpcvd=2 d
 .//nevyhodnocovat VD
 .i +$g(inarr("dta",14)) q
 .//vychozi druh spoje podle posledniho spoje
 .s dsp="" 
 .s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm),-1) q:(mm="")!(+dsp)  d
 ..s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)	//id cinosti
 ..i (idcin=3) s dsp=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",8)
 .//neni-li dsp, pak dsp=1
 .i dsp="" s dsp=1
 .//projdu cely prubeh a dohledam souvisle cekani + dsp (prochazim odzadu kvuli dsp)
 .k arrmm
 .s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm),-1) q:mm=""  d
 ..s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)	//id cinosti
 ..s inpau=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",11)	//priznak vnitrni pauzy spoje
 ..i (idcin=3) s dsp=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",8)
 ..i (idcin=0) d
 ...//nova pauza
 ...i $g(arrmm)="" s arrmm=mm s arrmm(arrmm,"par",1)=inpau s arrmm(arrmm,"par",2)=dsp
 ...//prodlouzeni pauzy  
 ...s arrmm(arrmm)=mm
 ...//kontrola na vnitrni pauzu spoje
 ...i 'inpau s arrmm(arrmm,"par",1)=inpau
 ..i (idcin'=0) s arrmm=""
 .//vyhodnoceni cekani
 .s mmpend="" f  s mmpend=$o(arrmm(mmpend)) q:mmpend=""  d
 ..s mmpbeg=$g(arrmm(mmpend))
 ..s inpau=$g(arrmm(mmpend,"par",1))
 ..s dsp=$g(arrmm(mmpend,"par",2))
 ..//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 ..s mmvd=+$$gMmVd(.arrset,dsp,1,idprv)
 ..i inpau s mmvd=+$$gMmVd(.arrset,dsp,2,idprv)
 ..i mmvd i (mmpend-mmpbeg+1)'>(mmvd) d
 ...//pauza je vyrovnavaci doba, prevod pauzy na vd
 ...f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 ....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 .k arrmm
 // ========================================================
 // VD - ctvrty algoritmus, vyhodnocuju sumu pauz mezi spoji
 // ========================================================
 i +tpcvd=3 d
 .//nevyhodnocovat VD
 .i +$g(inarr("dta",14)) q
 .s dsp=1
 .//prvni cinnost
 .s mmbeg=$o(docarr("arr","tur",""))
 .//dohledam nasledujici spoj
 .s mmnxt=mmbeg f  s mmnxt=$o(docarr("arr","tur",mmnxt)) q:mmnxt=""  d
 ..s acthrl=(hrl+(mmbeg\1440))
 ..s idcin=$g(docarr("arr","tur",mmnxt,"dta",2))
 ..//je to spoj
 ..i idcin=3 d
 ...s dsp=$g(docarr("arr","tur",mmnxt,"dta",14)) s:'dsp dsp=1
 ...s li=$g(docarr("arr","tur",mmnxt,"dta",5))
 ...s sp=$g(docarr("arr","tur",mmnxt,"dta",6))
 ...s mapr=$g(docarr("arr","tur",mmnxt,"dta",7))
 ...//doplneni vyrovnavaci doby do pauzy spoje
 ...k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,acthrl,"",.arrsp) zt:+err "merr" s err=""
 ...s relmmpbeg="" f  s relmmpbeg=$o(arrsp("arr","pau",relmmpbeg)) q:relmmpbeg=""  d
 ....s mmp=+$g(arrsp("arr","pau",relmmpbeg))
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmnxt+mapr+relmmpbeg	//pauzu beru od zacatku spoje v prubehu, muze byt posunut
 ....s mmpend=mmpbeg+mmp			//konec pauzy
 ....//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ....k arrmm
 ....f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ....s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 .....s mmpend=$g(arrmm(mmpbeg))
 .....//kontrola na to, zda se pauza vejde do limitu pro vyrovnavaci dobu
 .....s mmvd=+$$gMmVd(.arrset,dsp,2,idprv)
 .....i mmvd i (mmpend-mmpbeg+1)'>(mmvd) d
 ......//pauza je vyrovnavaci doba, prevod pauzy na vd
 ......f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 .......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ........s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ....k arrmm
 ...//vyhledam pauzy od mmbeg do mmnxt a pokud je jejich suma do limitu, pak vyrovnavaci doba
 ...//aktualni zacatek a konec pauzy
 ...s mmpbeg=mmbeg
 ...s mmpend=mmnxt+$g(docarr("arr","tur",mmnxt,"dta",7))		//posun o manipulace
 ...//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ...k arrmm
 ...f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 ....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 ....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ...//suma cekani
 ...s summm=0
 ...s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 ....s mmpend=$g(arrmm(mmpbeg))
 ....s summm=summm+(mmpend-mmpbeg+1)
 ...//kontrola na to, zda se suma pauz vejde do limitu pro vyrovnavaci dobu
 ...s mmvd=+$$gMmVd(.arrset,dsp,1,idprv)
 ...i mmvd i (summm'>mmvd) d
 ....s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 .....s mmpend=$g(arrmm(mmpbeg))
 .....//pauza je vyrovnavaci doba, prevod pauzy na vd
 .....f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 ......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ...k arrmm
 ...//posun mmbeg
 ...s mmbeg=$g(docarr("arr","tur",mmnxt,"dta",1))
 .//prohledani pauz po poslednim spoji
 .i mmbeg d
 ..//neni zadny spoj 
 ..s mmpbeg=mmbeg
 ..s mmpend=$o(docarr("arr","tur",""),-1)
 ..s mmpend=$g(docarr("arr","tur",mmpend,"dta",1))
 ..i mmpend<mmpbeg q
 ..//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ..k arrmm
 ..f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 ...i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 ...i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ..//suma cekani
 ..s summm=0
 ..s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 ...s mmpend=$g(arrmm(mmpbeg))
 ...s summm=summm+(mmpend-mmpbeg+1)
 ..//kontrola na to, zda se suma pauz vejde do limitu pro vyrovnavaci dobu
 ..s mmvd=+$$gMmVd(.arrset,dsp,1,idprv)
 ..i mmvd i (summm'>mmvd) d
 ...s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 ....s mmpend=$g(arrmm(mmpbeg))
 ....//pauza je vyrovnavaci doba, prevod pauzy na vd
 ....f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 ......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-1
 ......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 ......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ..k arrmm
 // =======================================================
 // preruseni prace - cinnost -2 zapoctene / -3 nezapoctene
 // =======================================================
 i +$p($g(arrset("arr",4,21)),"~",1) d
 .//turnus obsahuje spoje do 50 km, projdu pauzy a
 .//- pokud jsou do limitu je to preruseni zapoctene
 .//- pokud jsou nad limit je to preruseni nezapoctene
 .i '$g(pararr("dta",10)) d
 ..//projdu cely prubeh a dohledam souvisle cekani + dsp (prochazim odzadu)
 ..k arrmm s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm),-1) q:mm=""  d
 ...s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)	//id cinosti
 ...i (idcin=0) d
 ....//nova pauza
 ....i $g(arrmm)="" s arrmm=mm
 ....//prodlouzeni pauzy  
 ....s arrmm(arrmm)=mm
 ...i (idcin'=0) s arrmm=""
 ..//vyhodnoceni cekani
 ..s mmpend="" f  s mmpend=$o(arrmm(mmpend)) q:mmpend=""  d
 ...s mmpbeg=$g(arrmm(mmpend))
 ...//kontrola na to, zda se pauza vejde do limitu pro preruseni zapoctene
 ...s myid=3 i (mmpend-mmpbeg+1)<+$p($g(arrset("arr",4,21)),"~",3) s myid=2
 ...//pauza je preruseni prace, prevod pauzy na preruseni prace
 ...f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 ....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-myid
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .....s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ..k arrmm
 .//turnus obsahuje spoje nad 50 km
 .i +$g(pararr("dta",10)) d
 ..//vypocet podle turnusu, vse je cekani
 ..i '$p($g(arrset("arr",4,21)),"~",2) q
 ..//vypocet podle spoju, pauza mezi spoji (spoje musi jit po sobe)
 ..//pokud je prvni do 50 km, hledam za nim preruseni
 ..s mmbeg="" f  s mmbeg=$o(docarr("arr","tur",mmbeg)) q:mmbeg=""  d
 ...s acthrl=(hrl+(mmbeg\1440))
 ...s mmend=$g(docarr("arr","tur",mmbeg,"dta",1))
 ...s idcin=$g(docarr("arr","tur",mmbeg,"dta",2))
 ...//je to spoj
 ...i idcin=3 d
 ....//podivam se, zda je spoj do 50 km
 ....i $g(docarr("arr","tur",mmbeg,"dta",3))>50 q
 ....//podivam se, zda po spoji ihned nasleduje spoj
 ....s nxtmmbeg=$o(docarr("arr","tur",mmbeg))
 ....//posledni spoj
 ....i nxtmmbeg="" q
 ....//nenasleduje spoj
 ....i $g(docarr("arr","tur",nxtmmbeg,"dta",2))'=3 q 
 ....// nasleduje spoj
 ....// aktualni zacatek a konec pauzy
 ....s mmpbeg=mmend-$g(docarr("arr","tur",mmbeg,"dta",8))			//posun o manipulace
 ....s mmpend=nxtmmbeg+$g(docarr("arr","tur",nxtmmbeg,"dta",7))		//posun o manipulace
 .....//projdu cekani mezi mmpbeg a mmpend a vyhledam souvisle cekani
 ....k arrmm
 ....f mm=$j(mmpbeg,0,0):1:$j(mmpend,0,0) d
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 s:$g(arrmm)="" arrmm=mm s arrmm(arrmm)=mm
 .....i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)'=0 s arrmm=""
 ....s mmpbeg="" f  s mmpbeg=$o(arrmm(mmpbeg)) q:mmpbeg=""  d
 .....s mmpend=$g(arrmm(mmpbeg))
 .....//kontrola na to, zda se pauza vejde do limitu pro preruseni zapoctene
 .....s myid=3 i (mmpend-mmpbeg+1)<+$p($g(arrset("arr",4,21)),"~",3) s myid=2
 .....//prevod pauzy na prerueni
 .....f mm=($j(mmpbeg,0,0)):1:$j(mmpend,0,0) d
 ......i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)=0 d
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",2)=-myid
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",3)=(hrl+(mm\1440))
 .......s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=""
 ....k arrmm
 // ===========================
 // doplneni atributu dd,sv,noc
 // ===========================
 s begNight=$$begNight^OBapiED()
 s endNight=$$endNight^OBapiED()
 k arrhrl s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 .s hrl=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",3)
 .//nactu udaje z kalendare
 .i '$d(arrhrl(hrl)) d
 ..k tmparri,arr
 ..s tmparri("par",1)=+$$gMainDCal^OBapiED(idfa,nmsp,zp,"")
 ..s err=$$gDCalDay^OBapiED(idfa,nmsp,hrl,.tmparri,.arr) zt:+err "merr" s err=""
 ..s $p(arrhrl(hrl),"~",1)=+$g(arr("dta",1)) //den v tydnu
 ..s $p(arrhrl(hrl),"~",2)=+$g(arr("dta",2)) //svatek
 ..k tmparri
 .//den a svatek
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",4)=$p($g(arrhrl(hrl)),"~",1)
 .s $p(^||wrk.ALVA.AD(wrkm,mm),"~",5)=$p($g(arrhrl(hrl)),"~",2)
 .//
 .i $p($g(arrhrl(hrl)),"~",2) s pararr("dta",7)=1							//svatek pro vypocet mzdy
 .i $p($g(arrhrl(hrl)),"~",1)>5 d
 ..s pararr("dta",8)=1														//so,ne 0/1 pro vypocet mzdy
 ..s pararr("dta",12)=$p($g(arrhrl(hrl)),"~",1)								//dd pro rozpis hodin
 .//noc
 .s tmpmm=mm f  q:tmpmm'>1440  s tmpmm=tmpmm-1440
 .i (tmpmm'>endNight)!(tmpmm>begNight) s $p(^||wrk.ALVA.AD(wrkm,mm),"~",6)=1
 k arrhrl
 // ========================================
 // pole id polozek pro napocet hodin v noci
 // ========================================
 k arridnc s val=$g(arrmzd("arr",1,0,19))
 f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" arridnc(+$p(val,"~",cnt))=""
 // =======================================================================
 // pole id turnusu a sazeb pro vyhodnoceni priplatku za odpracované hodiny
 // =======================================================================
 k arridtupsa
 s val=$g(inarr("dta",16))	//turnusy pro priplatek za odpracovanou dobu sazbou 1
 f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" arridtupsa(1,$p(val,"~",cnt))=""
 s val=$g(inarr("dta",17))  //turnusy pro priplatek za odpracovanou dobu sazbou 2
 f cnt=1:1:$l(val,"~") s:$p(val,"~",cnt)'="" arridtupsa(2,$p(val,"~",cnt))=""
 // ================================================================================================================
 // doplneni atributu dsp do pristaveni, odstaveni, prejezdu a neprepravnich cinnosti (pauza, vyrovnavaci doba, ...)
 // ================================================================================================================
 // vyhledam dsp pro posledni spoj pokud neni spoj, pak 7
 s dsp=$$gDspTur(.docarr,"",-1) s:dsp="" dsp=7
 // =====================================================
 s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm),-1) q:mm=""  d
 .s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)
 .i (idcin=3) s dsp=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",8) q
 .//nastaveni dsp pro pristaveni, odstaveni, prejezd (4,5,6) podle nasledujiciho (predchoziho spoje) (nyni je 7 rezijni)
 .i ((idcin=4)!(idcin=5)!(idcin=6)) s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp q
 .//nastaveni druhu spoje tam, kde neni (neprepravni vykony)
 .i $p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",8)="" s $p(^||wrk.ALVA.AD(wrkm,mm),"~",8)=dsp
 //=================================================
 //vyhledani a oznaceni cekani ve ztizenem prostredi
 //podle zastavek s obvyklym socialnim zarizenim
 //=================================================
 k isztzp s err=$$isZtzPracSet^OBapiED(idfa,nmsp,"",.isztzp) zt:+err "merr"
 i isztzp d
 .//id cinnosti pro vyhodnoceni - cekani + na nastaveni delena smena
 .k arrztzidcin
 .i +$g(isztzp("dta",4))=0 s arrztzidcin(0)=""							//pouze cekani
 .i +$g(isztzp("dta",4))=1 s arrztzidcin(0)="" s arrztzidcin(16)=""		//cekani+delena smena
 .i +$g(isztzp("dta",4))=2 s arrztzidcin(16)=""							//pouze delena smena
 .//zastavky s obv.soc.zazemim
 .k arrzst s err=$$gZtzPracZst^OBapiED(idfa,nmsp,$g(inarr("par",6)),"",.arrzst) zt:+err "merr"
 .s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 ..//neni nastavena cinnost - cekani + na nastaveni delena smena
 ..i ('$d(arrztzidcin(+$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)))) q
 ..s mme=mm f mmc=mm:1 q:('$d(^||wrk.ALVA.AD(wrkm,mmc)))!('$d(arrztzidcin(+$p($g(^||wrk.ALVA.AD(wrkm,mmc)),"~",2))))  s mme=mmc
 ..//pauza je v mm - mme
 ..s iszst=0 d
 ...s mmz=$o(^||wrk.ALVA.AD(wrko,1,(mm+.0001)),-1)
 ...i (mmz'="") s idzst=$g(^||wrk.ALVA.AD(wrko,1,mmz)) i idzst'="" i $d(arrzst("arr",1,idzst)) s iszst=1 q
 ...s mmz=$o(^||wrk.ALVA.AD(wrko,1,(mme-.0001)),1)
 ...i (mmz'="") s idzst=$g(^||wrk.ALVA.AD(wrko,1,mmz)) i idzst'="" i $d(arrzst("arr",1,idzst)) s iszst=1
 ..f mmc=mm:1:mme s $p(^||wrk.ALVA.AD(wrkm,mmc),"~",13)=(iszst=0)
 ..//cekani ve ztizenem prostredi pro vypisy  
 ..i iszst=0 s pararr("arr",7,mm)=mme
 ..s mm=mme
 .k arrztzidcin
 //
 // ===========================
 // nascitani hodin do pole tuv
 // ===========================
 s mm="" f  s mm=$o(^||wrk.ALVA.AD(wrkm,mm)) q:mm=""  d
 .s mmbeg=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",1)
 .s idcin=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",2)
 .//
 .i (idcin'=-1) s pararr("arr",5,-1)=""
 .i (idcin'=-2) s pararr("arr",5,-2)=""
 .i (idcin'=-3) s pararr("arr",5,-3)=""
 .//
 .s dd=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",4)
 .s sv=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",5)
 .s nc=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",6)
 .s sn=(dd>5)
 .s vicsm=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",7)
 .s dsp=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",8)
 .s li=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",9)
 .s sp=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",10)
 .s idtu=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",12)
 .s ztpau=$p($g(^||wrk.ALVA.AD(wrkm,mm)),"~",13)
 .s isprodsa1="" s isprodsa2=""
 .i (idtu'="") d
 ..i $d(arridtupsa(1,idtu)) s isprodsa1=1							//priznak priplatku za odpracovanou dobu sazbou 1 
 ..i $d(arridtupsa(2,idtu)) s isprodsa2=1							//priznak priplatku za odpracovanou dobu sazbou 2 
 .//=====================
 .//preruseni nezapoctene
 .//=====================
 .i (idcin=-3) d
 ..d addTuv(.docarr,99,1) 											//preruseni nezapoctene 
 ..d addTuv(.docarr,17,1)											//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=3 d addTuv(.docarr,100,1)									//preruseni nezapoctene mesto (pro vypocet sazbou, neni-li sazba, maze se)
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..//dopoctene intervaly cinnosti
 ..i $g(pararr("arr",5,idcin))="" s pararr("arr",5,idcin)=mm
 ..s pararr("arr",5,idcin,$g(pararr("arr",5,idcin)))=mm
 .//===================
 .//preruseni zapoctene
 .//===================
 .i (idcin=-2) d
 ..d addTuv(.docarr,98,1) 											//preruseni zapoctene 
 ..d addTuv(.docarr,17,1) 											//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..//dopoctene intervaly cinnosti
 ..i $g(pararr("arr",5,idcin))="" s pararr("arr",5,idcin)=mm
 ..s pararr("arr",5,idcin,$g(pararr("arr",5,idcin)))=mm
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .//================
 .//vyrovnavaci doba
 .//================
 .i (idcin=-1) d
 ..d addTuv(.docarr,8,1) 											//vyrovnavaci doba
 ..d addTuv(.docarr,17,1) 											//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..//vyrovnavaci doba podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,72,1) 									//vyrovnavaci doba vnitro
 ..i dsp=2 d addTuv(.docarr,73,1) 									//vyrovnavaci doba dalkova
 ..i dsp=3 d addTuv(.docarr,74,1)									//vyrovnavaci doba mesto
 ..i dsp=4 d addTuv(.docarr,75,1)									//vyrovnavaci doba primesto
 ..i dsp=5 d addTuv(.docarr,76,1)									//vyrovnavaci doba mezinarodni
 ..i dsp=6 d addTuv(.docarr,77,1)									//vyrovnavaci doba smluvni
 ..i dsp=7 d addTuv(.docarr,78,1)									//vyrovnavaci doba rezijni
 ..//dopoctene intervaly cinnosti
 ..i $g(pararr("arr",5,idcin))="" s pararr("arr",5,idcin)=mm
 ..s pararr("arr",5,idcin,$g(pararr("arr",5,idcin)))=mm
 ..// podle nastaveni do doby pro hodinovy priplatek na linku/spoj zahrnout i vyrovnavaci dobu pred, ve a po spoji (0 ne / 1 ano)
 ..i $g(arrmzd("arr",1,0,14,"dta",3)) d
 ...//predchozi spoj (ve nebo po spoji)
 ...s myind=$o(^||wrk.ALVA.AD(wrko,2,(mm+.01)),-1)
 ...//nasledujici spoj (pred spojem)
 ...i myind="" s myind=$o(^||wrk.ALVA.AD(wrko,2,(mm-.01)),+1)
 ...i myind'="" d
 ....//predchozi nebo nasledujici linka a spoj
 ....s myval=$g(^||wrk.ALVA.AD(wrko,2,myind)) s myli=$p(myval,"~",2) s mysp=$p(myval,"~",3)
 ....i myli&mysp s pararr("arr",3,myli,mysp)=$g(pararr("arr",3,myli,mysp))+1 //doba vd podle linky a spoje (pro priplatek za linku a spoj)
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =======
 .// zacatek
 .// =======
 .i (idcin=1) q
 .// =====
 .// konec
 .// =====
 .i (idcin=2) q
 .// ====
 .// spoj
 .// ====
 .i (idcin=3) d
 ..d addTuv(.docarr,1,1) 											//jizda
 ..d addTuv(.docarr,17,1) 											//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1 				//doba pro vicesmeny priplatek
 ..//jizda podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,44,1) 									//jizda vnitro
 ..i dsp=2 d addTuv(.docarr,45,1) 									//jizda dalkova
 ..i dsp=3 d addTuv(.docarr,46,1)									//jizda mesto
 ..i dsp=4 d addTuv(.docarr,47,1)									//jizda primesto
 ..i dsp=5 d addTuv(.docarr,48,1)									//jizda mezinarodni
 ..i dsp=6 d addTuv(.docarr,49,1)									//jizda smluvni
 ..i dsp=7 d addTuv(.docarr,50,1)									//jizda rezijni
 ..//jizda podle linky a spoje
 ..i li&sp s pararr("arr",3,li,sp)=$g(pararr("arr",3,li,sp))+1
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// manipulace
 .i (idcin=3.01) d
 ..d addTuv(.docarr,2,1)											//manipulace
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(3))) d addTuvNc(.docarr,.arrmzd,1)			//noc (nastaveni - id jako spoj)
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1 //doba pro vicesmeny priplatek
 ..//manipulace podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,55,1) 								//manipulace vnitro
 ..i dsp=2 d addTuv(.docarr,56,1) 								//manipulace dalkova
 ..i dsp=3 d addTuv(.docarr,57,1)								//manipulace mesto
 ..i dsp=4 d addTuv(.docarr,58,1)								//manipulace primesto
 ..i dsp=5 d addTuv(.docarr,59,1)								//manipulace mezinarodni
 ..i dsp=6 d addTuv(.docarr,60,1)								//manipulace smluvni
 ..i dsp=7 d addTuv(.docarr,61,1)								//manipulace rezijni
 ..i isprodsa1 d addTuv(.docarr,102,1)							//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)							//doba pro priplatek za odprac. dobu sazbou 2
 ..// podle nastaveni do doby pro hodinovy priplatek na linku/spoj zahrnout i dobu manipulace pred a po spoji (0 ne / 1 ano)
 ..i $g(arrmzd("arr",1,0,14,"dta",2)) d
 ...i li&sp s pararr("arr",3,li,sp)=$g(pararr("arr",3,li,sp))+1 //doba manipulace podle linky a spoje(pro priplatek za linku a spoj)
 .// ==========
 .// pristaveni
 .// =========
 .i (idcin=4) d
 ..d addTuv(.docarr,1,1) 									 		//jizda
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..// jizda podle druhu spoje, zavisi na nastaveni 
 ..i '$g(arrset("arr",4,19)) d addTuv(.docarr,50,1)					//vse rezijni
 ..i +$g(arrset("arr",4,19)) d										//rozepisovat podle druhu nasledujiciho/predchoziho spoje
 ...i dsp=1 d addTuv(.docarr,44,1) 									//jizda vnitro
 ...i dsp=2 d addTuv(.docarr,45,1) 									//jizda dalkova
 ...i dsp=3 d addTuv(.docarr,46,1)									//jizda mesto
 ...i dsp=4 d addTuv(.docarr,47,1)									//jizda primesto
 ...i dsp=5 d addTuv(.docarr,48,1)									//jizda mezinarodni
 ...i dsp=6 d addTuv(.docarr,49,1)									//jizda smluvni
 ...i dsp=7 d addTuv(.docarr,50,1)									//jizda rezijni
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1 				//doba pro vicesmeny priplatek
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =========
 .// odstaveni
 .// =========
 .i (idcin=5) d
 ..d addTuv(.docarr,1,1) 				 							//jizda
 ..d addTuv(.docarr,17,1)		 		 							//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)		  								//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..//jizda podle druhu spoje, zavisi na nastaveni
 ..i '$g(arrset("arr",4,19)) d addTuv(.docarr,50,1)					//vse rezijni
 ..i +$g(arrset("arr",4,19)) d										//rozepisovat podle druhu nasledujiciho/predchoziho spoje
 ...i dsp=1 d addTuv(.docarr,44,1) 									//jizda vnitro
 ...i dsp=2 d addTuv(.docarr,45,1) 									//jizda dalkova
 ...i dsp=3 d addTuv(.docarr,46,1)									//jizda mesto
 ...i dsp=4 d addTuv(.docarr,47,1)									//jizda primesto
 ...i dsp=5 d addTuv(.docarr,48,1)									//jizda mezinarodni
 ...i dsp=6 d addTuv(.docarr,49,1)									//jizda smluvni
 ...i dsp=7 d addTuv(.docarr,50,1)									//jizda rezijni
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1					//doba pro vicesmeny priplatek
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =======
 .// prejezd
 .// =======
 .i (idcin=6) d
 ..d addTuv(.docarr,1,1) 				 							//jizda
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)		  								//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..//jizda podle druhu spoje, zavisi na nastaveni
 ..i '$g(arrset("arr",4,19)) d addTuv(.docarr,50,1)					//vse rezijni
 ..i +$g(arrset("arr",4,19)) d										//rozepisovat podle druhu nasledujiciho/predchoziho spoje
 ...i dsp=1 d addTuv(.docarr,44,1) 									//jizda vnitro
 ...i dsp=2 d addTuv(.docarr,45,1) 									//jizda dalkova
 ...i dsp=3 d addTuv(.docarr,46,1)									//jizda mesto
 ...i dsp=4 d addTuv(.docarr,47,1)									//jizda primesto
 ...i dsp=5 d addTuv(.docarr,48,1)									//jizda mezinarodni
 ...i dsp=6 d addTuv(.docarr,49,1)									//jizda smluvni
 ...i dsp=7 d addTuv(.docarr,50,1)									//jizda rezijni
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1 				//doba pro vicesmeny priplatek
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =======
 .// rezijni
 .// =======
 .i (idcin=7) d
 ..d addTuv(.docarr,1,1) 		 									//jizda
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..d addTuv(.docarr,94,1)											//doba provozu rezijni
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..d addTuv(.docarr,50,1)											//jizda rezijni
 ..i +vicsm s pararr("dta",2)=$g(pararr("dta",2))+1 				//doba pro vicesmeny priplatek
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// ==========
 .// bezp.prest
 .// ==========
 .i (idcin=9) d
 ..d addTuv(.docarr,5,1)  											//bp
 ..d addTuv(.docarr,17,1) 				 							//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..i +sv d addTuv(.docarr,20,1)										//svatek
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so,ne
 ..// podle nastaveni do doby pro hodinovy priplatek na linku/spoj zahrnout i dobu bezpecnostni prestavky po spoji (0 ne / 1 ano)
 ..i $g(arrmzd("arr",1,0,14,"dta",4)) d
 ...//predchozi spoj
 ...s myind=$o(^||wrk.ALVA.AD(wrko,2,(mm+.01)),-1)
 ...i myind'="" d
 ....//predchozi linka a spoj
 ....s myval=$g(^||wrk.ALVA.AD(wrko,2,myind)) s myli=$p(myval,"~",2) s mysp=$p(myval,"~",3)
 ....i myli&mysp s pararr("arr",3,myli,mysp)=$g(pararr("arr",3,myli,mysp))+1 //doba bp podle linky a spoje(pro priplatek za linku a spoj)
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =========
 .// ost.prace
 .// =========
 .i (idcin=10) d
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=4 d addTuv(.docarr,12,1) 	//pracovni zaloha
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))'=4 d addTuv(.docarr,6,1)	//ostatni prace
 ..// rozdeleni pro vyhodnoceni
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=0 d addTuv(.docarr,63,1)	//ostatni prace - ostatni prace
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=1 d addTuv(.docarr,64,1)	//ostatni prace - myti, cisteni
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=2 d addTuv(.docarr,65,1)	//ostatni prace - odvod penez
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=3 d addTuv(.docarr,66,1)	//ostatni prace - tankovani
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=5 d addTuv(.docarr,67,1)	//ostatni prace - rezijni prace
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=6 d addTuv(.docarr,68,1)	//ostatni prace - rozvoz posty
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=7 d addTuv(.docarr,69,1)	//ostatni prace - pripojeni cykloprivesu
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=8 d addTuv(.docarr,70,1)	//ostatni prace - oprava na ceste
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=9 d addTuv(.docarr,71,1)	//ostatni prace - nalozeni zavazadel
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=10 d addTuv(.docarr,86,1)	//ostatni prace - doplatek do smeny
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=11 d addTuv(.docarr,106,1)	//ostatni prace - nataceni vozidla
 ..i $g(docarr("arr","tur",mmbeg,"dta",11))=12 d addTuv(.docarr,108,1)	//ostatni prace - odpojeni cykloprivesu
 ..// =========================
 ..d addTuv(.docarr,17,1) 									 			//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1		//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 										//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 										//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)										//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)										//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)										//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)										//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)										//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)			//noc
 ..i +sv d addTuv(.docarr,20,1)											//svatek		
 ..i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)							//so,ne
 ..i isprodsa1 d addTuv(.docarr,102,1)									//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)									//doba pro priplatek za odprac. dobu sazbou 2
 .// ========
 .// nocovani
 .// ========
 .i (idcin=11) d
 ..d addTuv(.docarr,16,1)												//nocovani
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)			//noc
 .// =========
 .// preruseni
 .// =========
 .i (idcin=12) q
 .// ==============
 .// prest.na jidlo
 .// ==============
 .i (idcin=13) d
 ..d addTuv(.docarr,4,1)												//obed
 ..d addTuv(.docarr,17,1) 		 										//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1		//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 										//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 										//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)										//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)										//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)										//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)										//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)										//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)			//noc
 ..// =================================================================================
 ..// napocitava se do odpravovane doby, pak sv,sn a priplatek za odprac.hodiny turnusu
 ..// =================================================================================
 ..// nastaveno na program nebo na provoz
 ..i (+$g(arrmzd("arr",1,0,27))=1)!(+$g(arrmzd("arr",1,0,27,"prv",idprv))=2) d
 ...//vypnuto na provoz
 ...q:+$g(arrmzd("arr",1,0,27,"prv",idprv))=1
 ...//ne pro vypocet koeficientem
 ...q:+$g(arrmzd("arr",1,0,20,"dta",1))
 ...i +sv d addTuv(.docarr,20,1)										//svatek
 ...i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)							//so+ne
 ...i isprodsa1 d addTuv(.docarr,102,1)									//doba pro priplatek za odprac. dobu sazbou 1
 ...i isprodsa2 d addTuv(.docarr,103,1)									//doba pro priplatek za odprac. dobu sazbou 2
 .// ====
 .// dodk
 .// ====
 .i (idcin=14) d
 ..d addTuv(.docarr,9,1)											//dodk
 ..d addTuv(.docarr,17,1) 				 							//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..// =========================================================================================
 ..// neni fixni dodk, pak napoctu do hodin sv,so,ne, jinak az u fixniho DODK v ^OBapiEDTurCal2
 ..// =========================================================================================
 ..i ($g(arrmzd("arr",0,3,"dta",1))'=1)&($g(arrmzd("arr",0,3,"dta",1))'=3) d
 ...i +sv d addTuv(.docarr,20,1)									//svatek
 ...i +sn d addTuvSn(.docarr,.arrmzd,sv,1,dd)						//so+ne
 ..i isprodsa1 d addTuv(.docarr,102,1)								//doba pro priplatek za odprac. dobu sazbou 1
 ..i isprodsa2 d addTuv(.docarr,103,1)								//doba pro priplatek za odprac. dobu sazbou 2
 .// =========
 .// odpocinek
 .// =========
 .i (idcin=15) d
 ..d addTuv(.docarr,42,1)											//odpocinek
 ..d addTuv(.docarr,17,1) 				 							//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 .// =========
 .// del.smena
 .// =========
 .i (idcin=16) d
 ..d addTuv(.docarr,51,1)											//del.smena
 ..d setTuv(.docarr,52,1)											//del.smena (pocet, 1x za turnus, doklad)
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..//doba ve ztizenem prostredi
 ..i ztpau d addTuv(.docarr,104,1) 									//delena smena ve ztizenem prostredi 
 .// ===================
 .// pracovni pohotovost
 .// ===================
 .i (idcin=17) d
 ..d addTuv(.docarr,101,1)											//pracovni pohotovost
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 .// =============
 .// vlozeny vykon
 .// =============
 .i (idcin=18) d
 ..d addTuv(.docarr,107,1)											//doba vlozeneho vykonu 
 ..d addTuv(.docarr,17,1) 		 									//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..d addTuv(.docarr,93,1)											//doba provozu smluvni
 ..//==============================
 ..i (+nc)&($d(arridnc(idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 .// ======
 .// cekani
 .// ======
 .i 'idcin d
 ..d addTuv(.docarr,13,1)						 				 	//cekani celkem
 ..d addTuv(.docarr,17,1) 				 							//doba provozu
 ..i (idtu'="") s pararr("arr",8,idtu)=$g(pararr("arr",8,idtu))+1	//doba provozu podle turnusu
 ..//doba provozu podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,88,1) 									//doba provozu vnitro
 ..i dsp=2 d addTuv(.docarr,89,1) 									//doba provozu dalkova
 ..i dsp=3 d addTuv(.docarr,90,1)									//doba provozu mesto
 ..i dsp=4 d addTuv(.docarr,91,1)									//doba provozu primesto
 ..i dsp=5 d addTuv(.docarr,92,1)									//doba provozu mezinarodni
 ..i dsp=6 d addTuv(.docarr,93,1)									//doba provozu smluvni
 ..i dsp=7 d addTuv(.docarr,94,1)									//doba provozu rezijni
 ..//==============================
 ..i (sn!sv) d addTuv(.docarr,39,1)									//cekani v so,ne,sv
 ..i (+nc)&($d(arridnc(+idcin))) d addTuvNc(.docarr,.arrmzd,1)		//noc
 ..//cekani podle druhu spoje
 ..i dsp=1 d addTuv(.docarr,79,1)									//cekani vnitro
 ..i dsp=2 d addTuv(.docarr,80,1)									//cekani dalkove
 ..i dsp=3 d addTuv(.docarr,43,1)									//cekani mestske (pro vypocet sazbou, neni-li sazba, maze se)
 ..i dsp=3 d addTuv(.docarr,81,1)									//cekani mestske
 ..i dsp=4 d addTuv(.docarr,82,1)									//cekani primesto
 ..i dsp=5 d addTuv(.docarr,83,1)									//cekani mezinarodni
 ..i dsp=6 d addTuv(.docarr,84,1)									//cekani smluvni
 ..i dsp=7 d addTuv(.docarr,85,1) 									//cekani rezijni
 ..//doba ve ztizenem prostredi
 ..i ztpau d addTuv(.docarr,104,1) 									//cekani ve ztizenem prostredi 
 //uprava pole dopoctenych cinnosti
 s id="" f  s id=$o(pararr("arr",5,id)) q:id=""  d
 .i $o(pararr("arr",5,id,""))="" k pararr("arr",5,id)
 //kill vysledneho globalu
 i '$g(inarr("par",12)) k ^||wrk.ALVA.AD(wrkm)
 k ^||wrk.ALVA.AD(wrko)
 //
 q 0
 //
setTuv(arr,id,val) n (arr,id,val) s arr("arr","tuv",id)=val q
addTuv(arr,id,val) n (arr,id,val) s arr("arr","tuv",id)=$g(arr("arr","tuv",id))+val q
addTuvNc(arr,arrmzd,val) n (arr,arrmzd,val) q:'+$g(arrmzd("arr",1,0,7))  d addTuv(.arr,15,val) q
 //                                                                                         SoNe                  So                          Ne                                                                
addTuvSn(arr,arrmzd,sv,val,dd) n (arr,arrmzd,sv,val,dd) q:(+sv)&(+$g(arrmzd("arr",1,0,9)))  d addTuv(.arr,21,val) d:dd=6 addTuv(.arr,111,val) d:dd=7 addTuv(.arr,112,val)
 //
gDspTur(docarr,mm,par)
 n (docarr,mm,par)
 s $zt="err1"
 s dkm="" s fndsp=0
 f  s mm=$o(docarr("arr","tur",mm),par) q:(mm="")!(fndsp)  d
 .s idcin=$g(docarr("arr","tur",mm,"dta",2))
 .i idcin=3 d
 ..s fndsp=1
 ..s dkm=$g(docarr("arr","tur",mm,"dta",14))
 q dkm
gNumMan(arrset,dsp,idprv)
 n (arrset,dsp,idprv)
 s numman=$p($g(arrset("arr",4,10,dsp)),"~",3)
 i idprv'="" i $p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",3) s numman=$p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",3)
 q numman
gMmMan(arrset,dsp,idprv)
 n (arrset,dsp,idprv)
 s mmma=0
 s ma=$p($g(arrset("arr",4,10,dsp)),"~",1)
 i idprv'="" i $p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",1) s ma=$p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",1)
 s mmma=mmma+ma
 s ma=$p($g(arrset("arr",4,10,dsp)),"~",2)
 i idprv'="" i $p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",2) s ma=$p($g(arrset("arr",4,10,dsp,"prv",idprv)),"~",2)
 s mmma=mmma+ma
 q mmma
gMmVd(arrset,dsp,par,idprv)
 n (arrset,dsp,par,idprv)
 s val=""
 s val=$p($g(arrset("arr",4,11,dsp)),"~",par)
 i idprv'="" i $p($g(arrset("arr",4,11,dsp,"prv",idprv)),"~",par)'="" s val=$p($g(arrset("arr",4,11,dsp,"prv",idprv)),"~",par)
 q val
 //
err s $zt="" k docarr k pararr q "1~"_$ze_"/"_$tr($g(err),"~","/")
err1 s $zt="" q ""
]]></Routine>


<Routine name="OBapiEDTurCal2" type="INT" languagemode="0" timestamp="65772,50116.560755"><![CDATA[
OBapiEDTurCal2 q
calcTurMzd(idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 //vypocet mzdy pro ridice
 // inarr:
 //x inarr("dta",1)=vysledny mzdovy koeficient na dokladu 		(%)
 //x inarr("dta",2)=vysledne dodk						 		(min)
 //x inarr("dta",3)=vysledne nocovne 							(kc)
 //x inarr("dta",4)=diety										(kc)
 //x inarr("dta",5)=%dodk v noci z dodk inarr("dta",2)			(%)
 //x inarr("dta",6)=zapoctene cekani z turnusu					(%)
 //x inarr("dta",7)=dopocet do uvazku pres vyrovnavaci dobu(min)
 //x inarr("dta",8)=vysledny fixni priplatek ke mzde 			(kc)
 //x inarr("dta",9)=vysledny fixni priplatek k cekani 			(kc)
 //x inarr("dta",10)=km privesu									(km)
 //x inarr("dta",11)=priznak pro vyplaceni diet            	 	(0 dle nastaveni / 1 nevyplacet / 2 vzdy turnusove /3 podle tabulky)
 //x inarr("dta",12)=zpusob vypoctu dokladu pro mzdy UH		 	(1 jednomuzne / 2 dvoumuzne / 3 dvoumuzne obden / 4 pohotovost)
 //x inarr("dta",13)=priznak neproplacet cekani              	(0 proplacet / 1 neproplacet)
 //x inarr("dta",14)=priznak nevyhodnocovat vyr.dobu         	(0 vyhodnocovat / 1 nevyhodnocovat)
 //  inarr("dta",15)=id											(id pro zahranicni diety)
 //  inarr("dta",16)=idtu pro priplatek za odp.hod.sa1			(id turnusu ... id1~id2~...)
 //  inarr("dta",17)=idtu pro priplatek za odp.hod.sa2			(id turnusu ... id1~id2~...)
 //  inarr("dta",18)=mod pro dopocet diet 						(0 ne / 1 od pulnoci / 2 do pulnoci / 3 od pulnoci a do pulnoci)
 //x inarr("glb")=global pro seznam aut a lidi
 //pokud je osc, pocita se pro ridice a dzva; pokud neni osc, pocita se auto nebo turnus
 n (idfa,nmsp,docarr,pararr,inarr,outarr,arrset,arrmzd)
 s $zt="err" s err=""
 // =======
 // promene
 // =======
 s zp=$g(inarr("par",1))									//zp
 s hrl=$g(inarr("par",2))									//horlog zacatku
 s idprv=zp#100												//id provozovny
 s cntday=($o(docarr("arr","tur",""),-1)\1440)				//pocet dni
 s:($o(docarr("arr","tur",""),-1)#1440) cntday=cntday+1
 s:cntday<1 cntday=1										//pokud neni pocet dni, pak 1 (pouze data bez casove pozice)
 s rrmmdoc=$g(inarr("par",3))								//rrmm dokladu dzva
 s iddoc=$g(inarr("par",4))									//id dokladu dzva
 s rz=$g(inarr("par",5))									//rz
 s osc=$g(inarr("par",6))									//osc
 s sv=+$g(pararr("dta",7))									//svatek
 s sn=+$g(pararr("dta",8))									//sone
 s dd=+$g(pararr("dta",12))									//den (6,7) pro sone=1
 s glb=$g(inarr("glb"))										//global pro auta a lidi
 s klbbus=""												//kloubovy autobus
 s plybus=""												//plynovy autobus
 s invbus=""												//autobus s invalidni plosinou
 s typbus=""												//typ autobusu
 s trobus=""												//trolejbus
 i rz'="" d
 .k arrrz
 .//nacteni auta
 .i glb="" d
 ..s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,rz,"",.arrrz)
 .i glb'="" d
 ..i '$d(@glb@(1,rz)) s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,hrl,rz,"",.arrrz) m @glb@(1,rz)=arrrz q
 ..m arrrz=@glb@(1,rz)
 .s klbbus=+$g(arrrz("dta",8))
 .s plybus=($g(arrrz("dta",12))=2)
 .s invbus=+$g(arrrz("dta",8))
 .s typbus=$g(arrrz("dta",5))
 .s trobus=+$g(arrrz("dta",9))
 .k arrrz
 s pruvod=+$g(inarr("par",7))    							//priznak pro pruvodciho
 s ucitel=+$g(inarr("par",8))								//priznak pro ucitele
 s numos=+$g(inarr("par",9))								//pocet ridicu
 s posos=+$g(inarr("par",10))								//poradi ridice
 s mcalc=+$g(inarr("par",11))								//mod vypoctu dokladu 0 pro ridice (nebo turnus) / 1 pro rz
 s smzvo=+$g(inarr("par",14))								//smena z volna
 // ==================
 // nastaveni programu
 // ==================
 i '$d(arrset("arr")) k arrset s err=$$gMainSet^OBapiED(idfa,nmsp,"",.arrset) zt:+err "merr"
 // ================
 // mzdove nastaveni
 // ================
 i '$d(arrmzd("arr")) k arrmzd s err=$$gMzdSet^OBapiED(idfa,nmsp,"",.arrmzd) zt:+err "merr"
 // =======================
 // mzdove nastaveni pro UH
 // =======================
 k arrmzdset4 i $g(arrmzd("arr",1,0,1))=3 s err=$$gMzdSet4^OBapiED(idfa,nmsp,"",.arrmzdset4) zt:+err "merr"
 // ================
 // doplatek do mzdy
 // ================
 // arrmzd("arr",1,0,31,"dta",1)=pocitat doplatek do mzdy 0/1 
 // arrmzd("arr",1,0,31,"dta",2)=procento z castky (al=0)
 // arrmzd("arr",1,0,31,"dta",3)=algoritmus 0 KRODOS / 1 DP TEPLICE
 // arrmzd("arr",1,0,31,"dta",4)=limit(mm) (al=1)
 // arrmzd("arr",1,0,31,"dta",5)=castka(kc)(al=1)
 // algoritmus KRODOS procento z výkonové mzdy (za km) + přerušení práce nezapočtené + čekání + kč za hodiny tarifem + kč za zastávky + kč za noc, maji vykonove mzdy
 // algoritmus DP TEPLICE - nezapisuje se na doklad, pocita se v okamziku prevodu dat do mezd (fce gOsTPDoplMz^OBapiEDOsExportF1)
 // vynulovani doplatku
 d setTuv(.docarr,19,42,0)
 // ===================
 // =========================
 // nastaveni pro zaskolovani
 // =========================
 k arrzsk i ucitel s err=$$gZskSet^OBapiED(idfa,nmsp,"",.arrzsk) zt:+err "merr"
 // ============
 // osobni tarif
 // ============
 s oscszb="" i $g(arrmzd("arr",0,1)) i osc k arr s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.arr) s oscszb=$g(arr("dta",6)) k arr
 //===============================================================================
 //id pro zapis/kraceni cekani sumarna, mozno 13(cekani)/99(preruseni nezapoctene)
 //===============================================================================
 s idwait=$$gIdForWait^OBapiEDDzCal(.pararr,.arrset)
 // ============
 // vypocet diet
 // ============
 // obecne nastaveni 
 s diecalmode=$g(arrmzd("arr",1,0,15))
 //0 zadano u turnusu
 //1 sazba die na hod provozu
 //2 dle tabulky pro tuzemske die na hod provozu
 //3 nevyplacet
 // nastaveni pro provoz
 i +$g(arrmzd("arr",1,0,15,"prv",idprv)) s diecalmode=($g(arrmzd("arr",1,0,15,"prv",idprv))-1)
 // ====================================
 // nastaveni vypoctu diet podle turnusu
 // ====================================
 i +$g(inarr("dta",11)) d
 .i +$g(inarr("dta",11))=1 s diecalmode=3	//neproplacet
 .i +$g(inarr("dta",11))=2 s diecalmode=0	//proplacet turnusove d.
 .i +$g(inarr("dta",11))=3 s diecalmode=2	//proplacet d. podle ciselniku t.d.
 // ================
 // diety od turnusu czk a nebo zahranicni
 // ================
 i diecalmode=0 d
 .//==========
 .//od turnusu
 .//==========
 .d addTuv(.docarr,18,"",+$g(inarr("dta",4)))
 .// ================
 .// zahranicni diety
 .// ================
 .i $g(inarr("dta",15))'="" d
 ..//existuje-li polozka v ciselniku
 ..k arrdie
 ..s err=$$isCisItm^OBapiED(idfa,nmsp,52,inarr("dta",15),"",.arrdie)
 ..i arrdie>0 d
 ...d setTuv(.docarr,18,"",0)
 ...k arrdie
 ...s err=$$gCisItm^OBapiED(idfa,nmsp,52,inarr("dta",15),"",.arrdie)
 ...s valdie=$g(arrdie("arr",inarr("dta",15)))
 ...s czk=$p(valdie,"~",2)
 ...s eur=$p(valdie,"~",3)
 ...s chf=$p(valdie,"~",4)
 ...s gbp=$p(valdie,"~",5) 
 ...//prevedu na czk k 1. v mesici, kdy je jizda
 ...s hrldie=$$nd^OBapiED(hrl,0) s $p(hrldie,".",1)=1 s hrldie=$$dn^OBapiED(hrldie)
 ...//nactu kurz. listek 
 ...s err=##class(ALVA.POKLADNA.MLAPI).ExchangeRateRead(idfa,nmsp,hrldie,"",1,.arrokurs)
 ...i czk d addTuv(.docarr,18,"",czk)
 ...i eur d addTuv(.docarr,18,"",(eur*($g(arrokurs("Mena","EUR","Kurz"))/$g(arrokurs("Mena","EUR","Mnoz")))))
 ...i chf d addTuv(.docarr,18,"",(chf*($g(arrokurs("Mena","CHF","Kurz"))/$g(arrokurs("Mena","CHF","Mnoz")))))
 ...i gbp d addTuv(.docarr,18,"",(gbp*($g(arrokurs("Mena","GBP","Kurz"))/$g(arrokurs("Mena","GBP","Mnoz")))))
 ...//protokol
 ...s hrldie="" i $g(arrokurs("Datum"))'="" s hrldie=$$dn^OBapiED($g(arrokurs("Datum"))) 
 ...i czk s pararr("arr",6,inarr("dta",15),"CZK")=czk
 ...i eur s pararr("arr",6,inarr("dta",15),"EUR")=eur_"~"_$g(arrokurs("Mena","EUR","Kurz"))_"~"_$g(arrokurs("Mena","EUR","Mnoz"))_"~"_hrldie
 ...i chf s pararr("arr",6,inarr("dta",15),"CHF")=chf_"~"_$g(arrokurs("Mena","CHF","Kurz"))_"~"_$g(arrokurs("Mena","CHF","Mnoz"))_"~"_hrldie
 ...i gbp s pararr("arr",6,inarr("dta",15),"GBP")=gbp_"~"_$g(arrokurs("Mena","GBP","Kurz"))_"~"_$g(arrokurs("Mena","GBP","Mnoz"))_"~"_hrldie
 // =====================================
 // diety koeficientem podle doby provozu
 // =====================================
 i diecalmode=1 d
 .s szb=$g(arrmzd("arr",1,0,16))
 .s mmprvdie=$g(docarr("arr","tuv",17))		// doba provozu pro diety (neni zapocitano nocovani)
 .//OS_VTMO 15.12.2014 - p.Mlynarova (mail+tel. overeni) - diety chteji pocitat i z nocovneho, nocovne ale do doby provozu nepocitat
 .i idfa="OS_VTMO" s mmprvdie=mmprvdie+$g(docarr("arr","tuv",16))
 .//================================================================================================================================
 .d addTuv(.docarr,18,"",$$round^OBapiED((szb)*($$mc^OBapiED(mmprvdie)),2))
 // ===================================
 // diety podle tabulky tuzemských diet
 // ===================================
 i diecalmode=2 d
 .s hrldiefrom=(+$o(docarr("arr","edv","")))
 .//vypocet moznych intervalu pro diety
 .k arrdieintrv s err=$$mkDieIntrvTur(idfa,nmsp,zp,.docarr,.arrmzd,"",.arrdieintrv) zt:+err "merr" s err=""
 .//dopocet diet od a do pulnoci - rozsireni intervalu
 .i +$g(arrmzd("arr",1,0,33)) d
 ..//od pulnoci
 ..i ($g(inarr("dta",18))=1)!($g(inarr("dta",18))=3) d
 ...s tmdiefrom=$o(arrdieintrv("arr","")) i tmdiefrom'="" d
 ....s tmdieto=$g(arrdieintrv("arr",tmdiefrom))
 ....k arrdieintrv("arr",tmdiefrom)
 ....s tmdiefrom=(tmdiefrom\1440*1440)
 ....s arrdieintrv("arr",tmdiefrom)=tmdieto
 ..//do pulnoci
 ..i ($g(inarr("dta",18))=2)!($g(inarr("dta",18))=3) d
 ...s tmdiefrom=$o(arrdieintrv("arr",""),-1) i tmdiefrom'="" d
 ....s tmdieto=$g(arrdieintrv("arr",tmdiefrom))
 ....s tmdieto=((((tmdieto\1440)+1)*1440))
 ....s arrdieintrv("arr",tmdiefrom)=tmdieto
 .//==================================================  
 .s tmdiefrom="" f  s tmdiefrom=$o(arrdieintrv("arr",tmdiefrom)) q:tmdiefrom=""  d
 ..s tmdieto=$g(arrdieintrv("arr",tmdiefrom))
 ..k arrdie k arri s arri("dta",1)=idprv
 ..s err=$$calTuzDie^OBapiED(idfa,nmsp,(hrldiefrom+(tmdiefrom\1440)),(tmdiefrom#1440),(hrldiefrom+(tmdieto\1440)),(tmdieto#1440),.arri,.arrdie) zt:+err "merr" s err=""
 ..d addTuv(.docarr,18,"",$g(arrdie("dta",1)))
 ..k arrdie k arri
 // ================
 // diety nevyplacet
 // ================
 i (diecalmode=3) d
 .d setTuv(.docarr,18,"",0)
 // =======
 // nocovne
 // =======
 d addTuv(.docarr,19,3,+$g(inarr("dta",3)))	 				//pridam nocovne z turnusu (muze byt zadano rucne)
 i +$g(inarr("arr",1,"dta",2)) d setTuv(.docarr,19,3,0)     //neni narok na nocovne, vymazu ho
 // ==============================================================
 // dopocet uvazku pres vyrovnavaci dobu + vyrovnavaci doba vnitro
 // ==============================================================
 d addTuv(.docarr,8,"",+$g(inarr("dta",7)))										//vyrovnavaci doba
 d addTuv(.docarr,72,"",+$g(inarr("dta",7)))									//vyrovnavaci doba vnitro
 i $g(arrmzd("arr",1,0,26))=1 d
 .i +sv d addTuv(.docarr,20,"",+$g(inarr("dta",7)))								//svatek
 .i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,+$g(inarr("dta",7)),dd)	//so+ne
 d addTuv(.docarr,idwait,"",-$g(inarr("dta",7))) 								//cekani //d addTuv(.docarr,13,"",-$g(inarr("dta",7)))
 i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)
 i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)
 // ==========================
 // fixni kc ke mzde z turnusu
 // ==========================
 // je narok na fixni kc do mzdy
 i '$g(inarr("arr",1,"dta",15)) {
	 d addTuv(.docarr,19,14,+$g(inarr("dta",8))) d addTuv(.docarr,19,44,+$g(inarr("dta",8)))
 }
 // =================
 // fixni kc k cekani
 // =================
 d addTuv(.docarr,19,35,+$g(inarr("dta",9)))
 // ===================================================================================
 // dodk zadane nad turnusem + sv,so,ne a odecet z cekani v pripade, ze neni fixni dodk
 // ===================================================================================
 d addTuv(.docarr,9,"",+$g(inarr("dta",2)))
 i ($g(arrmzd("arr",0,3,"dta",1))'=1)&($g(arrmzd("arr",0,3,"dta",1))'=3) d
 .i +sv d addTuv(.docarr,20,"",+$g(inarr("dta",2)))								//svatek
 .i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,+$g(inarr("dta",2)),dd)	//so+ne
 .i +$g(arrmzd("arr",1,0,21)) d
 ..d addTuv(.docarr,idwait,"",(-$g(inarr("dta",2))))							// d addTuv(.docarr,13,"",(-$g(inarr("dta",2)))) 
 ..i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)
 ..i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)
 // ================================
 // %dodk v noci z dodk nad turnusem
 // ================================
 d addTuv(.docarr,15,"",$$round^OBapiED(($g(inarr("dta",2))*$g(inarr("dta",5))/100),0))
 //========================================
 //automaticke kraceni jizdy pri spolujizde
 //========================================
 i +$g(arrmzd("arr",1,0,18,"dta",1))=1 d
 .// je-li pendl ne
 .i +$g(inarr("arr",1,"dta",3)) q
 .// vymazu udaj spolujizdy
 .s inarr("arr",1,"dta",1)=""
 .//automaticky vypocet spolujizdy
 .i numos>1 d
 ..s inarr("arr",1,"dta",1)=($g(docarr("arr","tuv",1))-$$round^OBapiED(($g(docarr("arr","tuv",1))/100*$g(arrmzd("arr",1,0,18,"dta",2))),0))
 //=====================================
 //uprava doby jizdy - spolujizda, pendl
 //=====================================
 i $g(inarr("arr",1,"dta",1)) d
 .d setTuv(.docarr,37,"",$g(inarr("arr",1,"dta",1)))										//SPJ do vety tuv
 .//procento kraceni spj/ji
 .s prc=1 i $g(docarr("arr","tuv",1)) s prc=$g(inarr("arr",1,"dta",1))/$g(docarr("arr","tuv",1))
 .//procento pevne nastavene (nastaveno automaticke kraceni doby jizdy) 
 .i +$g(arrmzd("arr",1,0,18,"dta",1))=1 s prc=(+$g(arrmzd("arr",1,0,18,"dta",2))/100)
 .//pokratim jizdu
 .d addTuv(.docarr,1,"",(-$g(inarr("arr",1,"dta",1))))					 					//JI=JI-SPJ
 .//pokratim svatek - procentem
 .//d addTuv(.docarr,20,"",(-$g(inarr("arr",1,"dta",1))))									//SV=SV-SPJ
 .d setTuv(.docarr,20,"",$$round^OBapiED(($g(docarr("arr","tuv",20))*prc),0))				//SV=SV x %
 .i docarr("arr","tuv",20)<0 d setTuv(.docarr,20,"",0)
 .//pokratim so+ne - procentem
 .//d addTuv(.docarr,21,"",(-$g(inarr("arr",1,"dta",1))))									//SN=SN-SPJ
 .d setTuv(.docarr,21,"",$$round^OBapiED(($g(docarr("arr","tuv",21))*prc),0))				//SN=SN x %
 .i docarr("arr","tuv",21)<0 d setTuv(.docarr,21,"",0)
 .//jizdu podle provozu pokratim pomerem JI/SPJ
 .d setTuv(.docarr,44,"",$$round^OBapiED(($g(docarr("arr","tuv",44))*prc),0))				//vni
 .d setTuv(.docarr,45,"",$$round^OBapiED(($g(docarr("arr","tuv",45))*prc),0))				//dal
 .d setTuv(.docarr,46,"",$$round^OBapiED(($g(docarr("arr","tuv",46))*prc),0))				//mes
 .d setTuv(.docarr,47,"",$$round^OBapiED(($g(docarr("arr","tuv",47))*prc),0))				//pri
 .d setTuv(.docarr,48,"",$$round^OBapiED(($g(docarr("arr","tuv",48))*prc),0))				//mez
 .d setTuv(.docarr,49,"",$$round^OBapiED(($g(docarr("arr","tuv",49))*prc),0))				//sml
 .d setTuv(.docarr,50,"",$$round^OBapiED(($g(docarr("arr","tuv",50))*prc),0))				//rez
 //==============================
 //dopocet maximalnich manipulaci
 //==============================
 //obecne nastaveni
 s mandopmode=$p($g(arrset("arr",4,9)),"~",2)
 s mandopsonesv=$p($g(arrset("arr",4,9)),"~",3) 				//priznak dopoctu hodin v so,ne,sv 
 //nastaveni pro provoz
 i +$p($g(arrset("arr",4,9,"prv",idprv)),"~",2) s mandopmode=(($p($g(arrset("arr",4,9,"prv",idprv)),"~",2))-1)
 i mandopmode>0 d
 .//je rozdil v manipulacich ?
 .i $g(docarr("arr","tuv",2))<$g(pararr("dta",9)) d
 ..//vyse dopocitanych manipulaci
 ..s mandopmin=($g(pararr("dta",9))-$g(docarr("arr","tuv",2)))
 ..//navyseni manipulaci na ukor cekani
 ..i mandopmode=1 d
 ...d setTuv(.docarr,53,"",	mandopmin)							//poznaceni rozdilu, o kolik se navysuje
 ...d addTuv(.docarr,idwait,"",(-mandopmin)) 					//odecet z cekani / PPN
 ...i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)	//korekce zaporneho cekani
 ...i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)	//korekce zaporneho PPN
 ...d setTuv(.docarr,2,"",$g(pararr("dta",9)))					//nastaveni maximalnich manipulaci
 ...//hodiny so,ne,sv
 ...i mandopsonesv d
 ....i +sv d addTuv(.docarr,20,"",mandopmin)							//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,mandopmin,dd)	//so+ne
 ..//pouze sledovani, poznaceni rozdilu, o kolik se navysuje
 ..i mandopmode=2 d
 ...d setTuv(.docarr,53,"",mandopmin)							//poznaceni rozdilu, o kolik se navysuje
 ..//navyseni manipulaci na ukor cekani ale jen do vyse cekani
 ..i mandopmode=3 d
 ...i (mandopmin>$$getTuv(.docarr,idwait,"","")) d				//korekce dopoctenych manipulaci na vysi cekani/PPN
 ....s mandopmin=$$getTuv(.docarr,idwait,"","")
 ...i mandopmin<1 q												//nebude se navysovat			
 ...d setTuv(.docarr,53,"",mandopmin)							//poznaceni rozdilu, o kolik se navysuje
 ...d addTuv(.docarr,idwait,"",(-mandopmin)) 					//odecet z cekani / PPN
 ...i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)	//korekce zaporneho cekani
 ...i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)	//korekce zaporneho PPN
 ...d addTuv(.docarr,2,"",mandopmin)							//navyseni manpulace
 ...//hodiny so,ne,sv
 ...i mandopsonesv d
 ....i +sv d addTuv(.docarr,20,"",mandopmin)							//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,mandopmin,dd)	//so+ne
 /*
 i mandopmode>0 d
 .//je rozdil v manipulacich ?
 .i $g(docarr("arr","tuv",2))<$g(pararr("dta",9)) d
 ..//poznaceni rozdilu, o kolik se navysuje
 ..d setTuv(.docarr,53,"",($g(pararr("dta",9))-$g(docarr("arr","tuv",2))))
 ..//navyseni manipulaci na ukor cekani
 ..i mandopmode=1 d
 ...d addTuv(.docarr,idwait,"",(-($g(pararr("dta",9))-$g(docarr("arr","tuv",2))))) 			//d addTuv(.docarr,13,"",(-($g(pararr("dta",9))-$g(docarr("arr","tuv",2))))) 
 ...i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)
 ...i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)
 ...d setTuv(.docarr,2,"",$g(pararr("dta",9)))
 */
 // ======================================
 // automaticky vypocet prestavky na jidlo
 // ======================================
 s pauobmode=$g(arrmzd("arr",1,0,20,"dta",1))
 //vypocet podle vykonu (ji+manipulace)
 i pauobmode>0 d
 .s valmm=0
 .i pauobmode=1 s valmm=$g(docarr("arr","tuv",1))+$g(docarr("arr","tuv",2))		//ji+ma
 .i pauobmode=2 s valmm=$g(docarr("arr","tuv",17))								//doba provozu
 .s valobmm=0
 .i $g(arrmzd("arr",1,0,20,"dta",2))'="" i valmm>$g(arrmzd("arr",1,0,20,"dta",2)) s valobmm=$g(arrmzd("arr",1,0,20,"dta",3))
 .i $g(arrmzd("arr",1,0,20,"dta",4))'="" i valmm>$g(arrmzd("arr",1,0,20,"dta",4)) s valobmm=$g(arrmzd("arr",1,0,20,"dta",5))
 .s diffmm=(valobmm-$g(docarr("arr","tuv",4)))				  //rozdil oproti zadane hodnote 
 .d setTuv(.docarr,4,"",valobmm)
 .d addTuv(.docarr,idwait,"",-diffmm) 						  //odecet z cekani //d addTuv(.docarr,13,"",-diffmm)
 .i $g(docarr("arr","tuv",13))<0 d setTuv(.docarr,13,"",0)
 .i $g(docarr("arr","tuv",99))<0 d setTuv(.docarr,99,"",0)
 //=============================================
 //fixni dodk pridelene pevne minuty nebo hodiny
 //=============================================
 // out("arr",0,3,"dta",1)=fixni dodk pridelit 0 ne / 1 na dzva / 2 na sj / 3 na dzva+sj
 // out("arr",0,3,"dta",2)=fixni dodk jednotky 0 hodiny / 1 kc / 2 % z hodin / 3 nic
 // out("arr",0,3,"dta",3)=fixni dodk spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // out("arr",0,3,"dta",4)=fixni dodk kontrola 0 ne / 1 ano 1x denne na osc a auto / 2 ano 1x denne na os
 // out("arr",0,3,"dta",5)=fixni dodk bezny bus (min)
 // out("arr",0,3,"dta",6)=fixni dodk kloubovy bus (min)
 // out("arr",0,3,"dta",7)=fixni dodk bezny bus (kc)
 // out("arr",0,3,"dta",8)=fixni dodk kloubovy bus (kc)
 // out("arr",0,3,"dta",9)=fixni dodk pro dzva - hodiny - doplnovat do hodin sv,so,ne 0 ne / 1 ano
 // out("arr",0,3,"dta",10)=fixni dodk bezny bus (%)
 // out("arr",0,3,"dta",11)=fixni dodk kloubovy bus (%)
 // out("arr",0,3,"dta",12)=idpol~idpol~ ... hodinove polozky pro vypocet dodk % pro pravidelnou dopravu
 // out("arr",0,3,"dta",13)=idpol~idpol~ ... hodinove polozky pro vypocet dodk % pro nepravidelnou dopravu
 // out("arr",0,3,"arr",1,idprv,"dta",2)=fixni dodk jednotky 0 nezadano /1 hodiny / 2 kc / 3 % z hodin / 4 nic
 // out("arr",0,3,"arr",1,idprv,"dta",5)=fixni dodk bezny bus (min) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",6)=fixni dodk kloubovy bus (min) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",7)=fixni dodk bezny bus (kc) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",8)=fixni dodk kloubovy bus (kc) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",10)=fixni dodk bezny bus (%) pro provoz
 // out("arr",0,3,"arr",1,idprv,"dta",11)=fixni dodk kloubovy bus (%) pro provoz
 // pridelim na doklad nebo turnus
 i ($g(arrmzd("arr",0,3,"dta",1))=1)!($g(arrmzd("arr",0,3,"dta",1))=3) d
 .//vymazu puvodni hodnoty hodiny
 .d setTuv(.docarr,9,"","")
 .//vymazu puvodni hodnoty kc
 .d setTuv(.docarr,19,29,"")
 .//ne pro ucitele a pruvodciho
 .i ucitel q
 .i pruvod q
 .//ne pro ridice, kteremu se nepocita mzda
 .i $g(inarr("arr",1,"dta",12))="F" q
 .//ne pro vypocet RZ
 .i mcalc q
 .//pouze prvnimu ridici
 .i ($g(arrmzd("arr",0,3,"dta",3))=1)&(numos>1)&(posos'=1) q
 .//zpusob prideleni dodk + hodnota pro firmu
 .//=========================================
 .s valfxmm="" s valfxkc="" s valfxpr="" s jdndodk=""
 .i +$g(arrmzd("arr",0,3,"dta",2))=0 d
 ..s jdndodk=0
 ..s valfxmm=$g(arrmzd("arr",0,3,"dta",5))						//DODK bezny bus
 ..s:klbbus valfxmm=$g(arrmzd("arr",0,3,"dta",6))				//DODK kloubovy bus (min)
 .i +$g(arrmzd("arr",0,3,"dta",2))=1 d
 ..s jdndodk=1
 ..s valfxkc=$g(arrmzd("arr",0,3,"dta",7))						//DODK bus (kc)
 ..s:klbbus valfxkc=$g(arrmzd("arr",0,3,"dta",8))				//DODK kloubovy bus (kc)
 .i +$g(arrmzd("arr",0,3,"dta",2))=2 d
 ..s jdndodk=2
 ..s valfxpr=$g(arrmzd("arr",0,3,"dta",10))						//DODK bus (%)
 ..s:klbbus valfxpr=$g(arrmzd("arr",0,3,"dta",11))				//DODK kloubovy bus (%)
 .i +$g(arrmzd("arr",0,3,"dta",2))=3 d
 ..s jdndodk=3													//nic
 .//==========================================
 .//zpusob prideleni dodk + hodnota pro provoz
 .//==========================================
 .i +$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",2)) s valfxmm="" s valfxkc="" s valfxpr="" s jdndodk=""
 .i +$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",2))=1 d
 ..s jdndodk=0
 ..s valfxmm=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",5))			//DODK bezny bus
 ..s:klbbus valfxmm=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",6))		//DODK kloubovy bus (min)
 .i +$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",2))=2 d
 ..s jdndodk=1
 ..s valfxkc=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",7))			//DODK bezny bus (kc)
 ..s:klbbus valfxkc=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",8))		//DODK kloubovy bus (kc)
 .i +$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",2))=3 d
 ..s jdndodk=2
 ..s valfxpr=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",10))			//DODK bezny bus (%)
 ..s:klbbus valfxpr=$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",11))	//DODK kloubovy bus (%)
 .i +$g(arrmzd("arr",0,3,"arr",1,idprv,"dta",2))=4 d
 ..s jdndodk=3														//nic
 .//=========================
 .//ridici se nepridelilo nic
 .//=========================
 .i jdndodk=3 q
 .//================================
 .//dodk v hodinach, zapis na doklad
 .//================================
 .i jdndodk=0 d
 ..d setTuv(.docarr,9,"",valfxmm)									//DODK bus (min)
 ..i $g(arrmzd("arr",0,3,"dta",9))=1 d								//DODK doplnovat do SV,SO,NE
 ...i +sv d addTuv(.docarr,20,"",valfxmm)							//svatek
 ...i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,valfxmm,dd)	//so+ne
 .//==========================
 .//dodk v kc, zapis na doklad
 .//==========================
 .i jdndodk=1 d
 ..d setTuv(.docarr,19,29,valfxkc)								//DODK bus (kc)
 .//===================================
 .//dodk v %, vypocet a zapis na doklad
 .//===================================
 .i jdndodk=2 d
 ..s valfxmm=0
 ..s valcaspol=$g(arrmzd("arr",0,3,"dta",12))					//polozky, ze kterych se to pocita
 ..f cnt=1:1:$l(valcaspol) d
 ...s idcaspol=$p(valcaspol,"~",cnt)
 ...i idcaspol s valfxmm=valfxmm+$g(docarr("arr","tuv",idcaspol))
 ..s valfxmm=valfxmm*valfxpr/100									//vypocet %
 ..s valfxmm=$$round^OBapiED(valfxmm,0)								//zaokrouhleni
 ..d setTuv(.docarr,9,"",valfxmm)									//DODK bus (min)
 ..i $g(arrmzd("arr",0,3,"dta",9))=1 d								//DODK doplnovat do SV,SO,NE
 ...i +sv d addTuv(.docarr,20,"",valfxmm)							//svatek
 ...i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,valfxmm,dd)	//so+ne
 .//kontrola prideleni
 .i iddoc&osc&(rz'="") d
 ..// doklad, kontrola 1x denne na osc a auto
 ..i $g(arrmzd("arr",0,3,"dta",4))=1 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz)) s ^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz)=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,rz))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,9,"","")
 ...i $g(arrmzd("arr",0,3,"dta",9))=1 d							  		//DODK doplnovat do SV,SO,NE, je treba ho odecist
 ....i +sv d addTuv(.docarr,20,"",-valfxmm)						  		//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,-valfxmm,dd) 	//so+ne
 ...d setTuv(.docarr,19,29,"")
 ..// doklad, kontrola 1x denne na osc
 ..i $g(arrmzd("arr",0,3,"dta",4))=2 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixDodkDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,9,"","")
 ...i $g(arrmzd("arr",0,3,"dta",9))=1 d							  		//DODK doplnovat do SV,SO,NE, je treba ho odecist
 ....i +sv d addTuv(.docarr,20,"",-valfxmm)						  		//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,-valfxmm,dd) 	//so+ne
 ...d setTuv(.docarr,19,29,"")
 // ========
 // fixni kc
 // ========
 // arrmzd("arr",0,4,"dta",1)=fixni kc na doklad  pridelit 0 ne / 1 na dzva / 2 na sj / 3 na dzva+sj
 // arrmzd("arr",0,4,"dta",2)=fixni kc na doklad spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // arrmzd("arr",0,4,"dta",3)=fixni kc na doklad kontrola 0 ne / 1 ano 1x denne na osc a auto/ 2 ano 1x denne na os
 // arrmzd("arr",0,4,"dta",4)=fixni kc na doklad bezny bus (kc)
 // arrmzd("arr",0,4,"dta",5)=fixni kc na doklad kloubovy bus (kc)
 // arrmzd("arr",0,4,"arr",1,idprv,"dta",4)=fixni kc na doklad bezny bus (kc)
 // arrmzd("arr",0,4,"arr",1,idprv,"dta",5)=fixni kc na doklad kloubovy bus (kc)
 i ($g(arrmzd("arr",0,4,"dta",1))=1)!($g(arrmzd("arr",0,4,"dta",1))=3) d
 .//vymazu puvodni hodnoty
 .d setTuv(.docarr,19,36,"")
 .//ne pro ucitele a pruvodciho
 .i ucitel q
 .i pruvod q
 .//ne pro ridice, kteremu se nepocita mzda
 .i $g(inarr("arr",1,"dta",12))="F" q
 .//ne pro vypocet RZ
 .i mcalc q
 .//pouze prvnimu ridici
 .i ($g(arrmzd("arr",0,4,"dta",2))=1)&(numos>1)&(posos'=1) q
 .//hodnota kc
 .s valfxkc=$g(arrmzd("arr",0,4,"dta",4)) 							//fixni kc pro normalni bus
 .i $g(arrmzd("arr",0,4,"arr",1,idprv,"dta",4))'="" s valfxkc=$g(arrmzd("arr",0,4,"arr",1,idprv,"dta",4)) //fixni kc pro normalni bus a provoz
 .i klbbus d														
 ..s valfxkc=$g(arrmzd("arr",0,4,"dta",5))							//fixni kc pro kloubak
 ..i $g(arrmzd("arr",0,4,"arr",1,idprv,"dta",5))'="" s valfxkc=$g(arrmzd("arr",0,4,"arr",1,idprv,"dta",5)) //fixni kc pro kloubak a provoz
 .//===============================================================================================
 .//nejsou-li fixni kc konec, aby se nepoznacil doklad, kde doslo k prideleni (kc lze zadat nulove) 
 .//===============================================================================================
 .i 'valfxkc q
 .// zapis na doklad
 .d setTuv(.docarr,19,36,valfxkc)				
 .// kontrola prideleni
 .i iddoc&osc&(rz'="") d
 ..// doklad, kontrola 1x denne na osc a auto
 ..i $g(arrmzd("arr",0,4,"dta",3))=1 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz)) s ^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz)=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,rz))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,19,36,"")
 ..// doklad, kontrola 1x denne na osc
 ..i $g(arrmzd("arr",0,4,"dta",3))=2 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixKcDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,19,36,"")
 // ============
 // fixni hodiny
 // ============
 // arrmzd("arr",0,5,"dta",1)=fixni hodiny na doklad  pridelit 0 ne / 1 na dzva
 // arrmzd("arr",0,5,"dta",2)=fixni hodiny na doklad spolujizda kontrola 0 dostanou vsichni / 1 dostane prvni ridic
 // arrmzd("arr",0,5,"dta",3)=fixni hodiny na doklad kontrola 0 ne / 1 ano 1x denne na osc a auto/ 2 ano 1x denne na os
 // arrmzd("arr",0,5,"dta",4)=fixni hodiny na doklad bezny bus (min)
 // arrmzd("arr",0,5,"dta",5)=fixni hodiny na doklad kloubovy bus (min)
 // arrmzd("arr",0,5,"dta",6)=fixni hodiny pro dzva - doplnovat do hodin sv,so,ne 0 ne / 1 ano
 // arrmzd("arr",0,5,"arr",1,idprv,"dta",4)=fixni hodiny na doklad bezny bus (min) pro provoz
 // arrmzd("arr",0,5,"arr",1,idprv,"dta",5)=fixni hodiny na doklad kloubovy bus (min) pro provoz
 // pridelim na doklad nebo turnus
 i $g(arrmzd("arr",0,5,"dta",1))=1 d
 .//vymazu puvodni hodnoty
 .s valfxmm=""
 .d setTuv(.docarr,54,"","")
 .//ne pro ucitele a pruvodciho
 .i ucitel q
 .i pruvod q
 .//ne pro ridice, kteremu se nepocita mzda
 .i $g(inarr("arr",1,"dta",12))="F" q
 .//ne pro vypocet RZ
 .i mcalc q
 .//pouze prvnimu ridici
 .i ($g(arrmzd("arr",0,5,"dta",2))=1)&(numos>1)&(posos'=1) q
 .s valfxmm=$g(arrmzd("arr",0,5,"dta",4))																	//hodiny pro normalni bus
 .i $g(arrmzd("arr",0,5,"arr",1,idprv,"dta",4))'="" s valfxmm=$g(arrmzd("arr",0,5,"arr",1,idprv,"dta",4))	//fixni hodiny na doklad bezny bus (min) pro provoz
 .i klbbus d
 ..s valfxmm=$g(arrmzd("arr",0,5,"dta",5))																	//hodiny pro kloubak
 ..i $g(arrmzd("arr",0,5,"arr",1,idprv,"dta",5))'="" s valfxmm=$g(arrmzd("arr",0,5,"arr",1,idprv,"dta",5))	//fixni hodiny na doklad kloubovy bus (min) pro provoz
 .//====================================================================================================
 .//nejsou-li fixni hodiny konec, aby se nepoznacil doklad, kde doslo k prideleni (min lze zadat nulove) 
 .//====================================================================================================
 .i 'valfxmm q
 .//zapis na doklad 
 .d setTuv(.docarr,54,"",valfxmm)
 .//prideleni do hodin sv,so,ne
 .i ($g(arrmzd("arr",0,5,"dta",6))=1) d									//fixni hodiny doplnovat do hodin sv,so,ne
 ..i +sv d addTuv(.docarr,20,"",valfxmm)								//svatek
 ..i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,valfxmm,dd)		//so+ne
 .// kontrola prideleni
 .i iddoc&osc&(rz'="") d
 ..// doklad, kontrola 1x denne na osc a auto
 ..i $g(arrmzd("arr",0,5,"dta",3))=1 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,rz)) s ^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,rz)=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,rz))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,54,"","")
 ...i ($g(arrmzd("arr",0,5,"dta",6))=1) d		 				  		//fixni hodiny doplnovat do SV,SO,NE, je treba ho odecist
 ....i +sv d addTuv(.docarr,20,"",-valfxmm)						  		//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,-valfxmm,dd) 	//so+ne
 ..// doklad, kontrola 1x denne na osc
 ..i $g(arrmzd("arr",0,5,"dta",3))=2 d
 ...i '$d(^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,"*")) s ^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...i $g(^[nmsp]OBwatch(idfa,"FixHodDoc",hrl,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) q
 ...d setTuv(.docarr,54,"","")
 ...i ($g(arrmzd("arr",0,5,"dta",6))=1) d		 				  		//fixni hodiny doplnovat do SV,SO,NE, je treba ho odecist
 ....i +sv d addTuv(.docarr,20,"",-valfxmm)						  		//svatek
 ....i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,-valfxmm,dd) 	//so+ne
 // ========================================
 // automaticky napocet poctu dnu s dokladem
 // ========================================
 i ($g(arrmzd("arr",0,7,"dta",1))=1) d
 .//vymazani hodnoty
 .d setTuv(.docarr,62,"","")
 .//ne pro ucitele a pruvodciho
 .i ucitel q
 .i pruvod q
 .//ne pro ridice, kteremu se nepocita mzda
 .i $g(inarr("arr",1,"dta",12))="F" q
 .//ne pro vypocet RZ
 .i mcalc q
 .//jen pro doklad
 .i ('iddoc)!('osc) q
 .//pouze prvni ridic
 .i ($g(arrmzd("arr",0,7,"dta",2))=1)&(numos>1)&(posos'=1) q
 .//prideleni hodnoty
 .f cnt=1:1:cntday s hrlday=(hrl+cntday-1) d
 ..s allocate=0 d
 ...//pridelit denne na osc
 ...i '$d(^[nmsp]OBwatch(idfa,"DenDoc",hrlday,osc,"*")) s ^[nmsp]OBwatch(idfa,"DenDoc",hrlday,osc,"*")=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ...i $g(^[nmsp]OBwatch(idfa,"DenDoc",hrlday,osc,"*"))=(zp_"|"_rrmmdoc_"|"_iddoc) s allocate=1 q
 ..i allocate d addTuv(.docarr,62,"",1)
 //=============================================
 //kontrola na maximalni dobu cekani (nastaveni)
 //=============================================
 i $g(arrmzd("arr",1,0,5)) d
 .i $g(docarr("arr","tuv",13))>($g(arrmzd("arr",1,0,5))*cntday) d setTuv(.docarr,13,"",($g(arrmzd("arr",1,0,5))*cntday))
 //===================
 //zaokrouhleni cekani
 //===================
 i $g(arrmzd("arr",1,0,6))=1 d setTuv(.docarr,13,"",(($g(docarr("arr","tuv",13))\60)*60)) //na cele hodiny dolu
 //=====================================================
 //pendl, prednastaveni rucne zadanych hodnot pro ridice
 //=====================================================
 i osc i $g(inarr("arr",1,"dta",3))=1 d
 .k tmp1903 m tmp1903=docarr("arr","tuv",19,3)										//kc nocovne
 .k tmp96 m tmp96=docarr("arr","tuv",96)											//zpozdeni
 .k tmp18 m tmp18=docarr("arr","tuv",18)											//diety
 .k docarr("arr","tuv")
 .m docarr("arr","tuv",19,3)=tmp1903 k tmp1903
 .m docarr("arr","tuv",96)=tmp96 k tmp96 
 .d setTuv(.docarr,1,"",$g(inarr("arr",1,"dta",4)))									//JI
 .d setTuv(.docarr,2,"",$g(inarr("arr",1,"dta",5)))									//MA
 .d setTuv(.docarr,6,"",$g(inarr("arr",1,"dta",6)))									//OS
 .d setTuv(.docarr,9,"",$g(inarr("arr",1,"dta",7)))									//DO
 .d setTuv(.docarr,13,"",$g(inarr("arr",1,"dta",8)))								//CC
 .d setTuv(.docarr,15,"",$g(inarr("arr",1,"dta",9)))								//NC
 .d:'$g(arrmzd("arr",1,0,34)) setTuv(.docarr,18,"",$g(inarr("arr",1,"dta",10)))		//DI
 .d:+$g(arrmzd("arr",1,0,34)) setTuv(.docarr,18,"",$g(tmp18))						//DI
 .d setTuv(.docarr,22,"",$g(inarr("arr",1,"dta",11)))								//KC
 .d setTuv(.docarr,23,"",$g(inarr("arr",1,"dta",11)))								//KC
 .d setTuv(.docarr,37,"",$g(inarr("arr",1,"dta",1)))								//SPJ
 .k tmp18
 .//==================================
 .//sobota, nedele a svatek algoritmem
 .//==================================
 .i '$g(arrmzd("arr",1,0,32)) d
 ..i sv f cnt=1,2,6,9 d addTuv(.docarr,20,"",$g(docarr("arr","tuv",cnt)))							//JI+MA+OS+DO
 ..i sn f cnt=1,2,6,9 d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,$g(docarr("arr","tuv",cnt)),dd)	//JI+MA+OS+DO
 .//===============================================
 .//hodiny ve svatek a v so,ne jsou rucne nastavene
 .//===============================================
 .i +$g(arrmzd("arr",1,0,32)) d
 ..d setTuv(.docarr,20,"",$g(inarr("arr",1,"dta",14)))			//sv
 ..d setTuv(.docarr,21,"",$g(inarr("arr",1,"dta",13)))			//so,ne
 ..d:dd=6 setTuv(.docarr,111,"",$g(inarr("arr",1,"dta",13)))	//so
 ..d:dd=7 setTuv(.docarr,112,"",$g(inarr("arr",1,"dta",13)))	//ne
 //==================================================
 //============
 //km kloubakem
 //============
 i klbbus d setTuv(.docarr,30,"",$g(docarr("arr","tuv",22)))
 //=============
 //km trolejusem
 //=============
 i trobus d setTuv(.docarr,109,"",$g(docarr("arr","tuv",22)))
 //============================================================================================================
 //prevod preruseni prace nezapocteneho do zapocteneho podle nastaveneho % od cekani z turnusu - inarr("dta",6)
 //============================================================================================================
 s tmp98=$$round^OBapiED(($g(inarr("dta",6))/100*$g(docarr("arr","tuv",99))),0)
 i +tmp98 d
 .d addTuv(.docarr,98,"",tmp98)
 .i $g(arrmzd("arr",1,0,25))=1 d
 ..i +sv d addTuv(.docarr,20,"",tmp98)								//svatek
 ..i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,tmp98,dd)		//so+ne
 .d addTuv(.docarr,99,"",(-tmp98))
 k tmp98
 //================
 //cekani zapoctene
 //================
 //parametr = inarr("dta",6) cast cekani, ktera se zapocitava do odpr. doby 
 d setTuv(.docarr,3,"",$$round^OBapiED(($g(inarr("dta",6))/100*$g(docarr("arr","tuv",13))),0))
 i $g(arrmzd("arr",1,0,25))=1 d
 .i +sv d addTuv(.docarr,20,"",$g(docarr("arr","tuv",3)))							//svatek
 .i +sn d addTuvSn^OBapiEDTurCal1(.docarr,.arrmzd,sv,$g(docarr("arr","tuv",3)),dd)	//so+ne
 //==================
 //cekani nezapoctene
 //==================
 d setTuv(.docarr,14,"",$g(docarr("arr","tuv",13))-$g(docarr("arr","tuv",3)))
 //====================================================================================================================
 //korekce cekani ve ztizenem prostredi, je-li vetsi nez cekani nezapoctene (+delena smena), pokratim ho na jeho uroven
 //====================================================================================================================
 k isztzp s err=$$isZtzPracSet^OBapiED(idfa,nmsp,"",.isztzp) zt:+err "merr"
 s cormmval=""
 i +$g(isztzp("dta",4))=0 s cormmval=$g(docarr("arr","tuv",14))								//cekani
 i +$g(isztzp("dta",4))=1 s cormmval=$g(docarr("arr","tuv",14))+$g(docarr("arr","tuv",51))	//cekani + delena smena
 i +$g(isztzp("dta",4))=2 s cormmval=$g(docarr("arr","tuv",51))								//delena smena
 k isztzp
 i $g(docarr("arr","tuv",104))>cormmval d setTuv(.docarr,104,"",cormmval)
 k cormmval
 //==========================================================================================================
 //=============================
 //cekani nezapoctene, neplacene
 //=============================
 i $g(inarr("dta",13))=1 d
 .d setTuv(.docarr,95,"",$g(docarr("arr","tuv",14)))	//cekani nezapoctene do nezapocteneho neplaceneho
 .d setTuv(.docarr,14,"",0)								//cekani nezapoctene vynuluju
 .d setTuv(.docarr,38,"",0)								//cekani v prac.dny vynuluju
 .d setTuv(.docarr,39,"",0)								//cekani v so,ne,sv vynuluju
 //=================================
 //rozpocet cekani podle druhu spoje
 //=================================
 //nulove cekani
 i $g(docarr("arr","tuv",14))=0 f cnt=43,79:1:85 s docarr("arr","tuv",cnt)=""
 //rozpocet
 i $g(docarr("arr","tuv",14))>0 d
 .k rzparr,srcarr
 .s rzparr=$g(docarr("arr","tuv",14))
 .f cnt=79:1:85 s srcarr(cnt)=$g(docarr("arr","tuv",cnt))
 .s err=$$rzpArr^OBapiED(.rzparr,.srcarr,0)
 .f cnt=79:1:85 d setTuv(.docarr,cnt,"",$g(rzparr(cnt)))
 .//mhd cekani pro vypocet sazbou
 .d setTuv(.docarr,43,"",$g(docarr("arr","tuv",81)))
 //==================
 // funkcnost, ktera nebyla dodelana, pokud se vyskytne DODELAT !!!
 //**%cekani zapoctene do odpracovane doby, evidovano v ^OI("MZP","CEK","PRO"), od turnusu je
 //**vypocet hodin na obed dle zadani, pokud jsou mensi nez OB dorovnani na ukor CC + SN,SV
 //**vypocet dodk koeficientem
 //**ucitel, zak, vymazani hodin a kc - specialita pro VSETIN
 //**neni zapoctena rucne zadana vyrovnavaci doba z turnusu
 //**neni dodelano placeni obeda kc za obed - 19,15
 //=============================================
 //cekani prac.dny nezapoctene - cekani so,ne,sv
 //=============================================
 d setTuv(.docarr,38,"",($g(docarr("arr","tuv",14))-$g(docarr("arr","tuv",39))))
 i docarr("arr","tuv",38)<0 d setTuv(.docarr,38,"","") d setTuv(.docarr,39,"",$g(docarr("arr","tuv",14)))
 //==========
 //cekani MHD = srovnani uz je udelano u rozpoctu cekani = zakomnetovano
 //==========
 //i $g(docarr("arr","tuv",43))>$g(docarr("arr","tuv",14)) d setTuv(.docarr,43,"",$g(docarr("arr","tuv",14)))
 //========================================================================================================================
 //preruseni prace nezapoctene MHD = srovnani na preruseni prace nezapoctene, je mozne ho kratit, prevadet do odpr.doby,...
 //========================================================================================================================
 i $g(docarr("arr","tuv",99))<$g(docarr("arr","tuv",100)) d setTuv(.docarr,100,"",$g(docarr("arr","tuv",99)))
 // ================================================
 // vynulovani noci, je-li nastaveno, ze se nepocita
 // ================================================
 i '$g(arrmzd("arr",1,0,7)) d setTuv(.docarr,15,"","")
 // ===================================================
 // limit pro praci v noci, pocita se pokud je NC>limit
 // ===================================================
 i +$g(arrmzd("arr",1,0,8)) i $g(docarr("arr","tuv",15))<$g(arrmzd("arr",1,0,8)) d setTuv(.docarr,15,"","")
 // =====================================================
 // limit pro zpozdeni, pocita se pokud je zpozdeni>limit
 // =====================================================
 i +$g(arrmzd("arr",1,0,29)) i $g(docarr("arr","tuv",96))<$g(arrmzd("arr",1,0,29)) d setTuv(.docarr,96,"","")
 // ======================================
 // sledovat samostatne zpozdeni nad limit
 // ======================================
 d setTuv(.docarr,110,"","")
 i +$g(arrmzd("arr",1,0,36)) {
	 s mylimzpozdeni=$g(docarr("arr","tuv",96))-$g(arrmzd("arr",1,0,36))
	 i mylimzpozdeni<0 s mylimzpozdeni=0
	 d setTuv(.docarr,110,"",mylimzpozdeni)
 }
 // ===========================================================================================
 // napocet hodin celkem !!! skladbe hodin odpovida i hodiny pro priplatek za odpracovanou dobu
 // ===========================================================================================
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",1)))  //JI
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",2)))  //MA
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",3)))  //CZ
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",5)))  //BP
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",6)))  //OS
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",7)))  //OP
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",8)))  //VY
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",9)))  //DO
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",10))) //HN
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",12))) //PZ
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",33))) //UL
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",36))) //JP
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",54))) //FXODV
 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",98))) //PPZ
 // ====================================
 // + podle nastaveni prestavka na jidlo
 // ====================================
 // nastaveno na program nebo na provoz
 i ($g(arrmzd("arr",1,0,27))=1)!($g(arrmzd("arr",1,0,27,"prv",idprv))=2) d
 .//vypnuto na provoz
 .q:$g(arrmzd("arr",1,0,27,"prv",idprv))=1
 .d addTuv(.docarr,11,"",$g(docarr("arr","tuv",4))) //OB
 // ==========================
 // + podle nastaveni zpozdeni
 // ==========================
 // je nastaveno
 i ($g(arrmzd("arr",1,0,28))=1)&($g(arrmzd("arr",1,0,37))=1) {
	 d addTuv(.docarr,11,"",$g(docarr("arr","tuv",96))) //ZPZ
 }
 // ==================
 // hodiny zaskolovani
 // ==================
 i ucitel d addTuv(.docarr,31,"",$g(docarr("arr","tuv",11)))
 // ====================
 // hodiny smeny z volna
 // ====================
 i smzvo d addTuv(.docarr,113,"",$g(docarr("arr","tuv",11)))
 // ===============
 // | =========== |
 // | casova mzda |
 // | =========== |
 // ===============
 i $g(arrmzd("arr",1,0,1))=1 d
 .//hodiny vykonovou sazbou
 .s szb=$g(arrmzd("arr",1,1,2)) i $g(arrmzd("arr",1,1,2,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,2,"prv",idprv))
 .i pruvod s szb=$g(arrmzd("arr",1,1,26)) i $g(arrmzd("arr",1,1,26,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,26,"prv",idprv))
 .i $g(arrmzd("arr",0,1)) i osc s szb=oscszb
 .s mm=0 s id="" f  s id=$o(arrmzd("arr",1,1,2,"arr",1,id)) q:id=""  s mm=mm+$g(docarr("arr","tuv",id))
 .d
 ..//i (idfa="VS_CSAD")&ucitel q
 ..//i (idfa="VS_HOUSA")&ucitel q
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($$mc^OBapiED(mm)*szb),2))
 .//mzdovy koeficient %
 .i $g(inarr("dta",1))>0 i ($g(inarr("dta",1))'=100) d
 ..//i (idfa="VS_CSAD")&ucitel q
 ..//i (idfa="VS_HOUSA")&ucitel q
 ..s tmp=$$round^OBapiED($g(inarr("dta",1))/100*$g(docarr("arr","tuv",19,1)),2)
 ..d setTuv(.docarr,32,"",$$round^OBapiED(tmp-$g(docarr("arr","tuv",19,1)),2))
 ..d setTuv(.docarr,19,1,tmp)
 .//prirazka ke mzde dle hodin provozu (procenta) - ridic
 .i 'pruvod d
 ..//i (idfa="VS_CSAD")&ucitel q
 ..//i (idfa="VS_HOUSA")&ucitel q 
 ..s prc=$g(arrmzd("arr",1,1,3)) i $g(arrmzd("arr",1,1,3,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,3,"prv",idprv))	//vnit
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",44)))*(szb)*(prc/100)))									//vnit
 ..s prc=$g(arrmzd("arr",1,1,4)) i $g(arrmzd("arr",1,1,4,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,4,"prv",idprv))	//dalk   
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",45)))*(szb)*(prc/100))) 									//dalk
 ..s prc=$g(arrmzd("arr",1,1,5)) i $g(arrmzd("arr",1,1,5,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,5,"prv",idprv)) 	//mest
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",46)))*(szb)*(prc/100))) 									//mest
 ..s prc=$g(arrmzd("arr",1,1,6)) i $g(arrmzd("arr",1,1,6,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,6,"prv",idprv)) 	//prim
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",47)))*(szb)*(prc/100))) 									//prim
 ..s prc=$g(arrmzd("arr",1,1,7)) i $g(arrmzd("arr",1,1,7,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,7,"prv",idprv)) 	//mezi
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",48)))*(szb)*(prc/100))) 									//mezi
 ..s prc=$g(arrmzd("arr",1,1,8)) i $g(arrmzd("arr",1,1,8,"prv",idprv))'="" s prc=$g(arrmzd("arr",1,1,8,"prv",idprv))   	//smlv
 ..d addTuv(.docarr,19,31,($$mc^OBapiED($g(docarr("arr","tuv",49)))*(szb)*(prc/100))) 									//smlv
 ..d setTuv(.docarr,19,31,($$round^OBapiED($g(docarr("arr","tuv",19,31)),2)))
 .//hodiny tarifem
 .s szb=$g(arrmzd("arr",1,1,1)) i $g(arrmzd("arr",1,1,1,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,1,"prv",idprv))
 .i pruvod s szb=$g(arrmzd("arr",1,1,25)) i $g(arrmzd("arr",1,1,25,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,25,"prv",idprv))
 .i $g(arrmzd("arr",0,1)) i '$g(arrmzd("arr",0,2)) i osc s szb=oscszb
 .s mm=0 s id="" f  s id=$o(arrmzd("arr",1,1,1,"arr",1,id)) q:id=""  s mm=mm+$g(docarr("arr","tuv",id))
 .d
 ..//i (idfa="VS_CSAD")&ucitel q
 ..//i (idfa="VS_HOUSA")&ucitel q
 ..d addTuv(.docarr,19,5,$$round^OBapiED(($$mc^OBapiED(mm)*szb),2))
 .//======
 .//cekani
 .//======
 .i 'pruvod d
 ..//cekani za mhd
 ..s szb=$g(arrmzd("arr",1,1,12)) i $g(arrmzd("arr",1,1,12,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,12,"prv",idprv))
 ..i 'szb s docarr("arr","tuv",43)=""
 ..d addTuv(.docarr,19,30,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",43)))*szb),2))
 ..d addTuv(.docarr,14,"",(-$g(docarr("arr","tuv",43))))
 ..//==================
 ..//cekani nezapoctene
 ..//==================
 ..//parametry pro vypocet - obecne
 ..s mod=+$g(arrmzd("arr",1,1,32))
 ..s szb=$g(arrmzd("arr",1,1,9))
 ..s mmhrn=$g(arrmzd("arr",1,1,10))
 ..s szb1=$g(arrmzd("arr",1,1,11))
 ..//parametry pro vypocet - pro provoz, je-li nastaven, pak musi mit i vlastni sazby
 ..i +$g(arrmzd("arr",1,1,32,"prv",idprv)) d
 ...s mod=+$g(arrmzd("arr",1,1,32,"prv",idprv))
 ...s szb=$g(arrmzd("arr",1,1,9,"prv",idprv))
 ...s mmhrn=$g(arrmzd("arr",1,1,10,"prv",idprv))
 ...s szb1=$g(arrmzd("arr",1,1,11,"prv",idprv))
 ..//===========
 ..//jedna sazba
 ..//===========
 ..i mod=1 d
 ...d setTuv(.docarr,40,"","") d setTuv(.docarr,41,"","")
 ...d setTuv(.docarr,40,"",$g(docarr("arr","tuv",14)))
 ...d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",40)))*szb),2))
 ..//===============================================================================================
 ..//dve sazby podle delky cekani, jedna sazba pro cekani do limmm, druha sazba pro cekani nad limmm
 ..//===============================================================================================
 ..i mod=2 d
 ...d setTuv(.docarr,40,"","") d setTuv(.docarr,41,"","")
 ...i ('mmhrn)!($g(docarr("arr","tuv",14))'>mmhrn) d setTuv(.docarr,40,"",$g(docarr("arr","tuv",14)))
 ...i (mmhrn)&($g(docarr("arr","tuv",14))>mmhrn) d setTuv(.docarr,40,"",mmhrn) d setTuv(.docarr,41,"",($g(docarr("arr","tuv",14))-mmhrn))
 ...d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",40)))*szb),2))
 ...d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",41)))*szb1),2))
 ..//==========================================================================================================================
 ..//dve sazby podle delky spoju v turnusu, jedna sazba pro turnusy se spoji do 50km, druha sazba pro turnusy se spoji nad 50km
 ..//==========================================================================================================================
 ..i mod=3 d
 ...d setTuv(.docarr,40,"","") d setTuv(.docarr,41,"","")
 ...i '$g(pararr("dta",10)) d setTuv(.docarr,40,"",$g(docarr("arr","tuv",14)))
 ...i +$g(pararr("dta",10)) d setTuv(.docarr,41,"",$g(docarr("arr","tuv",14)))
 ...d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",40)))*szb),2))
 ...d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",41)))*szb1),2))
 .i pruvod d
 ..d setTuv(.docarr,43,"","") //cekani MHD ne
 ..s szb=$g(arrmzd("arr",1,1,27)) i $g(arrmzd("arr",1,1,27,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,27,"prv",idprv))
 ..d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",14)))*szb),2))
 .//spolujizda
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,22)) i $g(arrmzd("arr",1,1,22,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,22,"prv",idprv))
 ..d addTuv(.docarr,19,26,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",37))*szb),2))
 .i 'pruvod d
 ..//odpocinek
 ..s szb=$g(arrmzd("arr",1,1,23)) i $g(arrmzd("arr",1,1,23,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,23,"prv",idprv))
 ..d addTuv(.docarr,19,28,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",42))*szb),2))
 .//delena smena
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,24)) i $g(arrmzd("arr",1,1,24,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,24,"prv",idprv))
 ..d addTuv(.docarr,19,34,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",51))*szb),2))
 .//prestavka na jidlo
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,34)) i $g(arrmzd("arr",1,1,34,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,34,"prv",idprv))
 ..d addTuv(.docarr,19,15,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",4))*szb),2))
 .//nocovani hodinovou sazbou
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,35)) i $g(arrmzd("arr",1,1,35,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,35,"prv",idprv))
 ..d addTuv(.docarr,19,38,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",16))*szb),2))
 .//preruseni prace nezapoctene MHD, uprava vyse na 99, hodnotu je mozne kratit !!!
 .i 'pruvod d
 ..//preruseni prace nezapoctene za mhd
 ..s szb=$g(arrmzd("arr",1,1,37)) i $g(arrmzd("arr",1,1,37,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,37,"prv",idprv))
 ..i 'szb s docarr("arr","tuv",100)=""
 ..d addTuv(.docarr,19,41,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",100)))*szb),2))
 ..d addTuv(.docarr,99,"",(-$g(docarr("arr","tuv",100))))
 .//preruseni prace nezapoctene
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,36)) i $g(arrmzd("arr",1,1,36,"prv",idprv)) s szb=$g(arrmzd("arr",1,1,36,"prv",idprv))
 ..d addTuv(.docarr,19,40,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",99))*szb),2))
 .//vlozeny vykon
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,41))
 ..d addTuv(.docarr,19,48,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",107))*szb),2))
 .//priplatky
 .//prace v noci
 .s szb=$g(arrmzd("arr",1,1,15)) i $g(arrmzd("arr",1,1,15,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,15,"prv",idprv))
 .i pruvod s szb=$g(arrmzd("arr",1,1,29)) i $g(arrmzd("arr",1,1,29,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,29,"prv",idprv))
 .d addTuv(.docarr,19,12,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",15))*szb),2))
 .//km mesto (do mzdy)
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,16))
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($g(docarr("arr","tuv",25))*szb),2))
 .//km kloubovy autobus
 .i klbbus d
 ..s szb=$g(arrmzd("arr",1,1,13)) i $g(arrmzd("arr",1,1,13,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,13,"prv",idprv))
 ..i pruvod s szb=$g(arrmzd("arr",1,1,28)) i $g(arrmzd("arr",1,1,28,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,28,"prv",idprv))
 ..d addTuv(.docarr,19,7,$$round^OBapiED(($g(docarr("arr","tuv",30))*szb),2))
 .//km trolejbus
 .i trobus d
 ..s szb=$g(arrmzd("arr",1,1,42)) i $g(arrmzd("arr",1,1,42,"prv",idprv))'="" s szb=$g(arrmzd("arr",1,1,42,"prv",idprv))
 ..i pruvod s szb=0
 ..d addTuv(.docarr,19,51,$$round^OBapiED(($g(docarr("arr","tuv",109))*szb),2))
 .//km prives
 .i 'pruvod d
 ..s szb=$g(arrmzd("arr",1,1,14))
 ..d addTuv(.docarr,19,33,$$round^OBapiED(($g(inarr("dta",10))*szb),2))
 .//invalidni plosina
 .i 'pruvod d
 ..i ($g(docarr("arr","tuv",23))+$g(docarr("arr","tuv",24))+$g(docarr("arr","tuv",25))+$g(docarr("arr","tuv",26))+$g(docarr("arr","tuv",27)))<1 q
 ..s szb=$g(arrmzd("arr",1,1,21))
 ..d addTuv(.docarr,19,22,$$round^OBapiED((cntday*szb),2))
 .//inkaso (brasna)
 .//s szb=$g(arrmzd("arr",1,1,17)) i pruvod s szb=$g(arrmzd("arr",1,1,30))
 .//i klbbus s szb=$g(arrmzd("arr",1,1,18)) i pruvod s szb=$g(arrmzd("arr",1,1,31))
 .//d addTuv(.docarr,19,8,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",1))+$g(docarr("arr","tuv",2)))*szb),2))
 .//inkaso mesto (brasna)
 .//i 'pruvod d
 .//.s szb=$g(arrmzd("arr",1,1,19)) s:klbbus szb=$g(arrmzd("arr",1,1,20))
 .//.i '$g(docarr("arr","tuv",22)) q	//nejsou km celkove
 .//.i ($g(docarr("arr","tuv",25))/$g(docarr("arr","tuv",22)))'>.5 q	//km mestskych neni vic nez polovina
 .//.d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",1))+$g(docarr("arr","tuv",2)))*szb),2))
 .// ==============================================================
 .// inkaso (brasna), priplatek za odbaveni ponovu (sazba * (ji+ma)
 .// ==============================================================
 .i 'pruvod d
 ..//vnitro
 ..s szb=$g(arrmzd("arr",1,1,33,1)) s:$g(arrmzd("arr",1,1,33,1,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,1,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",44))+$g(docarr("arr","tuv",55)))*szb),2))
 ..//dalkova
 ..s szb=$g(arrmzd("arr",1,1,33,2)) s:$g(arrmzd("arr",1,1,33,2,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,2,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",45))+$g(docarr("arr","tuv",56)))*szb),2))
 ..//mesto
 ..s szb=$g(arrmzd("arr",1,1,33,3)) s:$g(arrmzd("arr",1,1,33,3,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,3,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",46))+$g(docarr("arr","tuv",57)))*szb),2))
 ..//primesto
 ..s szb=$g(arrmzd("arr",1,1,33,4)) s:$g(arrmzd("arr",1,1,33,4,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,4,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",47))+$g(docarr("arr","tuv",58)))*szb),2))
 ..//mezinarodni
 ..s szb=$g(arrmzd("arr",1,1,33,5)) s:$g(arrmzd("arr",1,1,33,5,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,5,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",48))+$g(docarr("arr","tuv",59)))*szb),2))
 ..//smluvni
 ..s szb=$g(arrmzd("arr",1,1,33,6)) s:$g(arrmzd("arr",1,1,33,6,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,6,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",49))+$g(docarr("arr","tuv",60)))*szb),2))
 ..//rezijni
 ..s szb=$g(arrmzd("arr",1,1,33,7)) s:$g(arrmzd("arr",1,1,33,7,"prv",idprv))'="" szb=$g(arrmzd("arr",1,1,33,7,"prv",idprv))
 ..d addTuv(.docarr,19,8,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",50))+$g(docarr("arr","tuv",61)))*szb),2))
 .// =========================================
 .// priplatek za odpracovane hodiny z turnusu
 .// =========================================
 .i 'pruvod d
 ..//sazba 1
 ..s szb=$g(arrmzd("arr",1,1,38))
 ..d addTuv(.docarr,19,45,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",102)))*szb),2))
 ..//sazba 2
 ..s szb=$g(arrmzd("arr",1,1,39))
 ..d addTuv(.docarr,19,46,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",103)))*szb),2))
 .//doplatek do mzdy KRODOS
 .i +$g(arrmzd("arr",1,0,31,"dta",1))&(+$g(arrmzd("arr",1,0,31,"dta",3))=0) d
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,1)))		//kc za vykon
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,5)))		//kc za tarif
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,2)))		//kc za cekani
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,12)))	//kc za noc
 // =============================================================================
 // priplatek za ztizene prostredi pro casovy vypocet a casovy UH
 // pozor, vypocet je jeste v ##class(ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl
 // =============================================================================
 i ($g(arrmzd("arr",1,0,1))=1)!($g(arrmzd("arr",1,0,1))=3) d
 .k isztzp s err=$$isZtzPracSet^OBapiED(idfa,nmsp,"",.isztzp) zt:+err "merr"
 .i isztzp d
 ..s ispriplztzp=0
 ..//prvni algoritmus
 ..//je cekani ve ztizenem prostredi a cekani nezapoctene (+ del.smena) neni mensi nez nastaveny limit, pak narok na priplatek
 ..i +$g(isztzp("dta",4))=0 s mmcekall=($$getTuv(.docarr,14,"","")+$$getTuv(.docarr,95,"",""))								//pouze cekani
 ..i +$g(isztzp("dta",4))=1 s mmcekall=($$getTuv(.docarr,14,"","")+$$getTuv(.docarr,95,"",""))+$$getTuv(.docarr,51,"","")	//cekani + delena smena
 ..i +$g(isztzp("dta",4))=2 s mmcekall=($$getTuv(.docarr,51,"",""))															//delena smena
 ..i '$g(isztzp("dta",3)) i ($$getTuv(.docarr,104,"","")>0)&(mmcekall'<$g(isztzp("dta",2))) s ispriplztzp=1
 ..//druhy algoritmus
 ..//je cekani ve ztizenem prostredi a cekani ve ztizenem prostredi neni mensi nez nastaveny limit, pak narok na priplatek
 ..i +$g(isztzp("dta",3)) i ($$getTuv(.docarr,104,"","")'<$g(isztzp("dta",2))) s ispriplztzp=1
 ..//je narok na priplatek
 ..i ispriplztzp d
 ...//do hodin pro priplatek dam odpracovane hodiny
 ...d setTuv(.docarr,105,"",$$getTuv(.docarr,11,"",""))
 ...//casova sazba
 ...s szb=$g(arrmzd("arr",1,1,40))
 ...//jina sazba pro UH
 ...i $g(arrmzd("arr",1,0,1))=3 d
 ....s szb=0
 ....i $g(inarr("dta",12))=1 s szb=$g(arrmzdset4("arr",1,3)) //jednomuzny
 ....i $g(inarr("dta",12))=2 s szb=$g(arrmzdset4("arr",1,6)) //dvoumuzny
 ....i $g(inarr("dta",12))=3 s szb=$g(arrmzdset4("arr",1,6)) //dvoumuzny obden
 ...d addTuv(.docarr,19,47,+$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",105)))*szb),2))
 k isztzp
 // =================
 // | ============= |
 // | vykonova mzda |
 // | ============= |
 // =================
 i $g(arrmzd("arr",1,0,1))=2 d
 .//koeficient kraceni km pri vice ridicich
 .s coefkm=1 i (numos>1)&(+$g(arrmzd("arr",1,2,22))) s coefkm=(1/numos)
 .//km vykonem
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",23))*coefkm*$g(arrmzd("arr",1,2,14)))) //vnit
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",24))*coefkm*$g(arrmzd("arr",1,2,15)))) //dakl
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",25))*coefkm*$g(arrmzd("arr",1,2,16)))) //mest
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",26))*coefkm*$g(arrmzd("arr",1,2,17)))) //prim
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",27))*coefkm*$g(arrmzd("arr",1,2,18)))) //mezi
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",28))*coefkm*$g(arrmzd("arr",1,2,19)))) //smlv
 .d addTuv(.docarr,19,1,($g(docarr("arr","tuv",29))*coefkm*$g(arrmzd("arr",1,2,20)))) //rezj
 .//vykonova mzda - sazby za odjete spoje
 .s li="" f  s li=$o(pararr("arr",1,li)) q:li=""  d
 ..s sp="" f  s sp=$o(pararr("arr",1,li,sp)) q:sp=""  d
 ...s lshrl="" f  s lshrl=$o(pararr("arr",1,li,sp,lshrl)) q:lshrl=""  d
 ....k arrspar s err=$$gSpOne^OBapiED(idfa,nmsp,li,sp,lshrl,31,"",.arrspar)
 ....d addTuv(.docarr,19,1,$g(arrspar("dta",31))) 		    	    		   //mzda sazbou za spoj
 .//mzdovy koeficient %
 .i $g(inarr("dta",1))>0 i ($g(inarr("dta",1))'=100) d
 ..s tmp=$$round^OBapiED($g(inarr("dta",1))/100*$g(docarr("arr","tuv",19,1)),2)
 ..d setTuv(.docarr,32,"",$$round^OBapiED(tmp-$g(docarr("arr","tuv",19,1)),2))
 ..d setTuv(.docarr,19,1,tmp)
 .//priplatek za km objizdek
 .d addTuv(.docarr,19,1,($g(pararr("dta",6))*coefkm*$g(arrmzd("arr",1,2,21)))) //rezj
 .d setTuv(.docarr,19,1,$$round^OBapiED($g(docarr("arr","tuv",19,1)),2))
 .//manipulace
 .s szb=$g(arrmzd("arr",1,2,2)) s:klbbus szb=$g(arrmzd("arr",1,2,3))
 .d addTuv(.docarr,19,1,$$round^OBapiED(szb*$g(pararr("dta",3)),2))
 .//hodiny tarifem
 .s szb=$g(arrmzd("arr",1,2,1)) i $g(arrmzd("arr",1,2,1,"prv",idprv)) s szb=$g(arrmzd("arr",1,2,1,"prv",idprv))
 .i $g(arrmzd("arr",0,1)) i '$g(arrmzd("arr",0,2)) i osc s szb=oscszb
 .s mm=0 s id="" f  s id=$o(arrmzd("arr",1,2,1,"arr",1,id)) q:id=""  s mm=mm+$g(docarr("arr","tuv",id))
 .d addTuv(.docarr,19,5,$$round^OBapiED(($$mc^OBapiED(mm)*szb),2))
 .//pripocitavat do mzdy v pripade jizdy vice ridicu = celk doba jizdy (jizda+spolujízda) /pocet ridicu x zakladni tarif
 .i (numos>1)&(+$g(arrmzd("arr",1,2,23))) d
 ..s mm=($g(docarr("arr","tuv",1))+$g(docarr("arr","tuv",37)))/numos	//(ji+spj)/pocet ridicu
 ..s szb=$g(arrmzd("arr",1,2,1)) i $g(arrmzd("arr",1,2,1,"prv",idprv)) s szb=$g(arrmzd("arr",1,2,1,"prv",idprv))
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($$mc^OBapiED(mm)*szb),2))
 .//cekani
 .d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",14)))*$g(arrmzd("arr",1,2,4))),2))
 .//spolujizda
 .d addTuv(.docarr,19,26,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",37)))*$g(arrmzd("arr",1,2,11))),2))
 .//odpocinek
 .d addTuv(.docarr,19,28,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",42)))*$g(arrmzd("arr",1,2,12))),2))
 .//delena smena
 .d addTuv(.docarr,19,34,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",51)))*$g(arrmzd("arr",1,2,13))),2))
 .//preruseni prace nezapoctene
 .d addTuv(.docarr,19,40,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",99)))*$g(arrmzd("arr",1,2,24))),2))
 .//priplatky
 .//noc
 .s szb=$g(arrmzd("arr",1,2,7))
 .d addTuv(.docarr,19,12,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",15))*szb),2))
 .//km kloubovy autobus
 .i klbbus d
 ..s szb=$g(arrmzd("arr",1,2,5))
 ..d addTuv(.docarr,19,7,$$round^OBapiED(($g(docarr("arr","tuv",30))*coefkm*szb),2))
 .//km prives
 .s szb=$g(arrmzd("arr",1,2,6))
 .d addTuv(.docarr,19,33,$$round^OBapiED(($g(inarr("dta",10))*coefkm*szb),2))
 .//invalidni plosina
 .i ($g(docarr("arr","tuv",23))+$g(docarr("arr","tuv",24))+$g(docarr("arr","tuv",25))+$g(docarr("arr","tuv",26))+$g(docarr("arr","tuv",27)))>0 d
 .s szb=$g(arrmzd("arr",1,2,10))
 .d addTuv(.docarr,19,22,$$round^OBapiED((cntday*szb),2))
 .//inkaso (brasna)
 .s szb=$g(arrmzd("arr",1,2,8)) i klbbus s szb=$g(arrmzd("arr",1,2,9))
 .d addTuv(.docarr,19,8,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",1))+$g(docarr("arr","tuv",2)))*szb),2))
 .//doplatek do mzdy KRODOS
 .i +$g(arrmzd("arr",1,0,31,"dta",1))&(+$g(arrmzd("arr",1,0,31,"dta",3))=0) d
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,1)))		//kc za vykon
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,5)))		//kc za tarif
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,2)))		//kc za cekani
 ..d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,12)))	//kc za noc
 //// ===============
 //// pasmova mzda UH
 //// ===============
 //i $g(arrmzd("arr",1,0,1))=3 d
 //.//mzdove nastaveni programu
 //.k arrmzdset3 s err=$$gMzdSet3^OBapiED(idfa,nmsp,"",.arrmzdset3) zt:+err "merr"
 //.//vypocet mzdy
 //.d setTuv(.docarr,19,1,0)				//celkova mzda
 //.d setTuv(.docarr,19,27,0)				//mzda za hodiny
 //.s myind=$g(docarr("arr","tuv",17)) 	//doba provozu z dokladu
 //.i $g(inarr("dta",12))=4 i $g(inarr("par",13))>myind s myind=$g(inarr("par",13)) //korekce doby provozu pro pohotovost na originalni turnus 
 //.s myind=$o(arrmzdset3("arr",1,1,(myind+.01)),-1)
 //.//jednomuzny tarif
 //.i $g(inarr("dta",12))=1 i myind'="" d setTuv(.docarr,19,1,$$round^OBapiED($p($g(arrmzdset3("arr",1,1,myind)),"~",1),2)) //jednomuzny
 //.//dvoumuzny tarif
 //.i $g(inarr("dta",12))=2 i myind'="" d setTuv(.docarr,19,1,$$round^OBapiED($p($g(arrmzdset3("arr",1,1,myind)),"~",2),2)) //dvoumuzny
 //.//dvoumuzny tarif obden
 //.i $g(inarr("dta",12))=3 i myind'="" d setTuv(.docarr,19,1,$$round^OBapiED($p($g(arrmzdset3("arr",1,1,myind)),"~",3),2)) //dvoumuzny obden
 //.//pohotovost (placena jednomuznym tarifem)
 //.i $g(inarr("dta",12))=4 d
 //..i myind'="" d setTuv(.docarr,19,1,$$round^OBapiED($p($g(arrmzdset3("arr",1,1,myind)),"~",1),2)) //jednomuzny
 //.//nastaven vypocet tarif x hodiny celkem (kazda zapocata hodina)
 //.i $g(inarr("dta",12))=100 d
 //..s hds=$$mc^OBapiED($g(docarr("arr","tuv",11)))
 //..//zaokrouhleni hodin na cele cislo nahoru (zapocata)
 //..s hds=$j($s(hds<0:hds-.49,hds>0:hds+.49,1:0),0,0)
 //..d setTuv(.docarr,19,1,$$round^OBapiED((hds*$g(arrmzdset3("arr",1,2))),2)) 
 //.//zapis mzdy za hodiny do 19,27 (pro slucovani dokladu)
 //.d setTuv(.docarr,19,27,$g(docarr("arr","tuv",19,1)))
 //.//=============================
 //.//priplatek za spoje + / -
 //.d addTuv(.docarr,19,18,$$round^OBapiED($g(pararr("dta",11))*$g(arrmzdset3("arr",2,1)),2))
 //.//priplatek za MHD, je-li pocet spoju MHD nad 50%
 //.i $g(pararr("dta",1)) d
 //..i $g(pararr("arr",4,3))/$g(pararr("dta",1))*100'<($p($g(arrmzdset3("arr",2,3,3)),"~",1)) d
 //...d addTuv(.docarr,19,9,$p($g(arrmzdset3("arr",2,3,3)),"~",2))
 //.//priplatek za spoje podle delky
 //.s li="" f  s li=$o(pararr("arr",1,li)) q:li=""  d
 //..s sp="" f  s sp=$o(pararr("arr",1,li,sp)) q:sp=""  d
 //...s lispkm=$g(pararr("arr",1,li,sp))
 //...s myind=lispkm+.0001
 //...s myind=$o(arrmzdset3("arr",2,2,myind),-1)
 //...i myind'="" d addTuv(.docarr,19,11,$g(arrmzdset3("arr",2,2,myind)))
 //
 // ==================
 // | ============== |
 // | casova mzda UH |
 // | ============== |
 // ==================
 i $g(arrmzd("arr",1,0,1))=3 d
 .//vypocet mzdy
 .d setTuv(.docarr,19,1,0)				//kc celkova mzda
 .d setTuv(.docarr,19,2,0)				//kc cekani
 .d setTuv(.docarr,19,27,0)				//mzda za hodiny
 .//jednomuzny tarif
 .i $g(inarr("dta",12))=1 d
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",11)))*$g(arrmzdset4("arr",1,1))),2)) //mzda
 ..d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED(($g(docarr("arr","tuv",14))+$g(docarr("arr","tuv",107))))*$g(arrmzdset4("arr",1,2))),2)) //cekani + vlozeny vykon
 .//dvoumuzny tarif nebo dvoumuzny obden
 .i (($g(inarr("dta",12))=2)!($g(inarr("dta",12))=3)) d
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",11)))*$g(arrmzdset4("arr",1,4))),2)) //mzda
 ..d addTuv(.docarr,19,2,$$round^OBapiED(($$mc^OBapiED(($g(docarr("arr","tuv",14))+$g(docarr("arr","tuv",107))))*$g(arrmzdset4("arr",1,5))),2)) //cekani + vlozeny vykon
 .//pohotovost
 .i $g(inarr("dta",12))=4 d
 ..d addTuv(.docarr,19,1,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",17)))*$g(arrmzdset4("arr",1,7))),2)) //mzda
 .//priplatek za ztizene prostredi,ne pro pohotovostni turnus
 .i $g(inarr("dta",12))=4 d setTuv(.docarr,105,"","") d setTuv(.docarr,19,47,"")	
 .//priplatek za ztizene prostredi,ne pro doklad bez turnusu
 .i ($g(inarr("par",4))'="") d
 ..s istur=0 s myhrl="" f  s myhrl=$o(docarr("arr","edv",myhrl)) q:(myhrl="")!(istur)  s:$d(docarr("arr","edv",myhrl,"arr",1)) istur=1
 ..i 'istur d setTuv(.docarr,105,"","") d setTuv(.docarr,19,47,"")	
 //================
 //
 // ==================
 // spolecne priplatky
 // ==================
 //za zastavky
 d addTuv(.docarr,19,17,$$round^OBapiED($g(docarr("arr","tuv",19,20))*$g(arrmzd("arr",1,0,2)),2))
 //doplatek do mzdy KRODOS
 i +$g(arrmzd("arr",1,0,31,"dta",1))&(+$g(arrmzd("arr",1,0,31,"dta",3))=0) d
 .d addTuv(.docarr,19,42,$g(docarr("arr","tuv",19,17)))		//kc za zastavky
 //za spoje
 d addTuv(.docarr,19,18,$$round^OBapiED($g(pararr("dta",1))*$g(arrmzd("arr",1,0,3)),2))
 //plyn bus
 i plybus d addTuv(.docarr,19,24,$$round^OBapiED($g(docarr("arr","tuv",22))*$g(arrmzd("arr",1,0,4)),2))
 //za zasilky
 d addTuv(.docarr,19,10,$$round^OBapiED($g(pararr("dta",4))*$g(arrmzd("arr",1,0,11)),2))
 //zaskolovani (napocitava se primo do mzdy)
 d addTuv(.docarr,19,1,$$round^OBapiED($$mc^OBapiED($g(docarr("arr","tuv",31)))*$g(arrmzd("arr",1,0,10)),2))
 //vicesmenny provoz
 d addTuv(.docarr,19,16,$$round^OBapiED($$mc^OBapiED($g(pararr("dta",2)))*$g(arrmzd("arr",1,0,13)),2))
 //za km linky a spoje jmenovite
 s li="" f  s li=$o(pararr("arr",1,li)) q:li=""  d
 .s sp="" f  s sp=$o(pararr("arr",1,li,sp)) q:sp=""  d
 ..s szb=$g(arrmzd("arr",1,0,14,"arr",1,li,"dta",1))
 ..s:$g(arrmzd("arr",1,0,14,"arr",1,li,"arr",sp,"dta",1)) szb=$g(arrmzd("arr",1,0,14,"arr",1,li,"arr",sp,"dta",1))
 ..//napocet do premii
 ..i arrmzd("arr",1,0,14,"dta",1)=0 d
 ...d addTuv(.docarr,34,"",$$round^OBapiED(($g(pararr("arr",1,li,sp))*szb),2))
 ..//napocet do priplatku
 ..i arrmzd("arr",1,0,14,"dta",1)=1 d
 ...d addTuv(.docarr,19,11,$$round^OBapiED(($g(pararr("arr",1,li,sp))*szb),2))
 //za hod linky a spoje jmenovite
 s li="" f  s li=$o(pararr("arr",3,li)) q:li=""  d
 .s sp="" f  s sp=$o(pararr("arr",3,li,sp)) q:sp=""  d
 ..s szb=$g(arrmzd("arr",1,0,14,"arr",1,li,"dta",2))
 ..s:$g(arrmzd("arr",1,0,14,"arr",1,li,"arr",sp,"dta",2)) szb=$g(arrmzd("arr",1,0,14,"arr",1,li,"arr",sp,"dta",2))
 ..//napocet do premii
 ..i arrmzd("arr",1,0,14,"dta",1)=0 d
 ...d addTuv(.docarr,34,"",$$round^OBapiED(($$mc^OBapiED($g(pararr("arr",3,li,sp)))*szb),2))
 ...d addTuv(.docarr,19,50,$$round^OBapiED(($$mc^OBapiED($g(pararr("arr",3,li,sp)))*szb),2))
 ...i szb d addTuv(.docarr,87,"",$g(pararr("arr",3,li,sp)))
 ..//napocet do priplatku
 ..i arrmzd("arr",1,0,14,"dta",1)=1 d
 ...d addTuv(.docarr,19,11,$$round^OBapiED(($$mc^OBapiED($g(pararr("arr",3,li,sp)))*szb),2))
 ...d addTuv(.docarr,19,50,$$round^OBapiED(($$mc^OBapiED($g(pararr("arr",3,li,sp)))*szb),2))
 ...i szb d addTuv(.docarr,87,"",$g(pararr("arr",3,li,sp)))
 //za rezijni km obecne
 s szb=$g(arrmzd("arr",1,0,14,"arr",2,"dta",1))
 //napocet do premii
 i arrmzd("arr",1,0,14,"dta",1)=0 d
 .d addTuv(.docarr,34,"",$$round^OBapiED(($g(docarr("arr","tuv",29))*szb),2))
 //napocet do priplatku
 i arrmzd("arr",1,0,14,"dta",1)=1 d
 .d addTuv(.docarr,19,11,$$round^OBapiED(($g(docarr("arr","tuv",29))*szb),2))
 //za rezijni podle druhu
 s dsp="" f  s dsp=$o(pararr("arr",2,dsp)) q:dsp=""  d
 .s szb=$g(arrmzd("arr",1,0,14,"arr",2,"arr",dsp,"dta",1))
 .//napocet do premii
 .i arrmzd("arr",1,0,14,"dta",1)=0 d
 ..d addTuv(.docarr,34,"",$$round^OBapiED(($g(pararr("arr",2,dsp))*szb),2))
 .//napocet do priplatku
 .i arrmzd("arr",1,0,14,"dta",1)=1 d
 ..d addTuv(.docarr,19,11,$$round^OBapiED(($g(pararr("arr",2,dsp))*szb),2))
 //za dobu jizdy podle typu vozidla, je-li typ vozu a je-li nastavena sazba a typ
 //9.11.2018 dodelano nastaveni typu hodin pro vypocet
 i (typbus'="")&($o(arrmzd("arr",1,0,30,""))'="") d
 .s szb="" s typhod=0
 .s myid="" f  s myid=$o(arrmzd("arr",1,0,30,myid)) q:(myid="")!(szb)  d
 ..s val=$g(arrmzd("arr",1,0,30,myid))
 ..f cnt=1:1:$l(val,"~") i typbus=$p(val,"~",cnt) s szb=myid s typhod=$g(arrmzd("arr",1,0,30,myid,"dta",1))
 .i 'typhod d setTuv(.docarr,19,39,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",1)))*szb),2))	//hodiny jizdy
 .i +typhod d setTuv(.docarr,19,39,$$round^OBapiED(($$mc^OBapiED($g(docarr("arr","tuv",11)))*szb),2))	//hodiny odpracovane celkem
 //za km podle typu vozidla, je-li typ vozu a je-li nastavena sazba a typ
 i (typbus'="")&($o(arrmzd("arr",1,0,35,""))'="") d
 .s szb=""
 .s myid="" f  s myid=$o(arrmzd("arr",1,0,35,myid)) q:(myid="")!(szb)  d
 ..s val=$g(arrmzd("arr",1,0,35,myid))
 ..f cnt=1:1:$l(val,"~") i typbus=$p(val,"~",cnt) s szb=myid
 .d setTuv(.docarr,19,52,$$round^OBapiED(($g(docarr("arr","tuv",22))*szb),2))	//km
 // ============
 // napocet mzdy (dalsich polozek do celkove mzdy) 
 // ============
 // stavajici obsah 19,1 schovam do polozky 19,49 mzda za vykon
 d setTuv(.docarr,19,49,$g(docarr("arr","tuv",19,1)))
 // ===========================================================
 f cnt=5,6,14,16,17,18,19,21,23,29,31 d
 .// 5 kc za hodiny tarifem
 .// 6 kc za hodiny snizenou sazbou
 .//14 kc pausalni ke mzde
 .//16 kc za vicesmenny provoz
 .//17 kc za zastavky
 .//18 kc za odjete spoje
 .//19 kc za DODK pro CDS, nepouziva se to ...
 .//21 kc za pracovni zalohu - tradobus, nepouziva se to
 .//23 kc z normovanych cinnosti
 .//29 kc za fixni dodk
 .//31 kc za prirazku % dle doby provozu
 .d addTuv(.docarr,19,1,$g(docarr("arr","tuv",19,cnt)))
 // =================
 // napocet priplatku
 // =================
 // pozor, napocet priplatku 47 je jeste v ##class(ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl !
 f cnt=7,8,9,10,11,13,22,24,33,39,45,46,47,51,52  d
 .// 7 priplatek za kloubak
 .// 8 inkaso
 .// 9 priplatek za mhd
 .//10 priplatek za zasilky
 .//11 priplatek za linky
 .//13 priplatek kodem 78 + 79 + 82
 .//22 priplatek za invalidni plosinu
 .//24 priplatek za plynovy autobus
 .//33 priplatek za prives
 .//39 kc za jizdu podle typu vozidla
 .//45 priplatek za odpracovane hodiny na turnusu sazbou 1
 .//46 priplatek za odpracovane hodiny na turnusu sazbou 2 
 .//47 priplatek za ztizene pracovni prostredi
 .//51 priplatek za trolejbus
 .//52 kc za km podle typu vozidla
 .d addTuv(.docarr,19,4,$g(docarr("arr","tuv",19,cnt)))
 // ==============
 // napocet cekani
 // ==============
 f cnt=30,32,35  d
 .//30 cekani za MHD
 .//32 prirazka do cekani podle pomeru cekani (uz se nepocita)
 .//35 fixni kc k cekani
 .d addTuv(.docarr,19,2,$g(docarr("arr","tuv",19,cnt)))
 // =====================================
 // napocet mzdy za hodiny (pro kontrolu), proverit !!!
 // =====================================
 i $g(arrmzd("arr",1,0,1))=1 d
 .f cnt=1,31 d
 ..// 1 casova mzda
 ..//31 prirazka k casove mzde
 ..d addTuv(.docarr,19,27,$g(docarr("arr","tuv",19,cnt)))
 i $g(arrmzd("arr",1,0,1))=2 d
 .f cnt=5 d
 ..// 5 mzda za hodiny tarifem
 ..d addTuv(.docarr,19,27,$g(docarr("arr","tuv",19,cnt)))
 // ===================================
 // % korekce doplatku do mzdy - KRODOS
 // ===================================
 i +$g(arrmzd("arr",1,0,31,"dta",1))&(+$g(arrmzd("arr",1,0,31,"dta",3))=0) d
 .d setTuv(.docarr,19,42,($$round^OBapiED($g(arrmzd("arr",1,0,31,"dta",2))/100*$g(docarr("arr","tuv",19,42)),2)))
 //=========================================================================
 //doplatek do mzdy DP TEPLICE, nepocita se tady, ale az pri prevodu do mezd
 //=========================================================================
 //i +$g(arrmzd("arr",1,0,31,"dta",1))&(+$g(arrmzd("arr",1,0,31,"dta",3))=1)&$g(osc) d
 //.//doba provozu je pod limit, ne !
 //.i ($g(docarr("arr","tuv",17))<(+$g(arrmzd("arr",1,0,31,"dta",4)))) q
 //.//je HPP
 //.k tmparros s err=##class(ALVA.ADMAIN.ApiOS).get(idfa,nmsp,hrl,osc,"",.tmparros) zt:+err "merr"
 //.//jen pro hlavni pp
 //.i '$g(tmparros("dta",25)) d setTuv(.docarr,19,42,+$g(arrmzd("arr",1,0,31,"dta",5)))
 //.k tmparros 
 // ===============================================================================================================================================
 // ridic ma nastaveno nevyplacet mzdu a neevidovat vykon (ne Kc ne vyk), promazu vse, pozor , jeste v (ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl
 // ===============================================================================================================================================
 i $g(inarr("arr",1,"dta",12))="F" d
 .f cnt=1:1:$$gPcPDU^OBapiEDTur() d
 ..d setTuv(.docarr,cnt,"","")
 .f cnt=1:1:$$gPcPMU^OBapiEDTur() d setTuv(.docarr,19,cnt,"")
 // ===================================================================================================================================
 // ridic ma nastaveno nevyplacet mzdu (ne Kc), promazu korunove polozky , pozor , jeste v (ALVA.ADZPRACOVANI.DZVAData).mkCalcDocsOsHrl
 // ===================================================================================================================================
 i $g(inarr("arr",1,"dta",12))="N" d
 .d setTuv(.docarr,18,"","")
 .f cnt=1:1:$$gPcPMU^OBapiEDTur() d setTuv(.docarr,19,cnt,"")
 // ====================================================
 // zaskolovani, promazani udaju pokud je nastaven vyber
 // ====================================================
 i (ucitel&($g(arrzsk("dta",1))=1)) d
 .f cnt=1:1:$$gPcPDU^OBapiEDTur() d
 ..i '$d(arrzsk("arr",1,cnt)) d setTuv(.docarr,cnt,"","")
 .f cnt=1:1:$$gPcPMU^OBapiEDTur() d
 ..i '$d(arrzsk("arr",1,19,cnt)) d setTuv(.docarr,19,cnt,"")
 q 0
getTuv(arr,id1,id2,val)
 i +id1&+id2 q $g(arr("arr","tuv",id1,id2))
 i +id1&'id2 q $g(arr("arr","tuv",id1))
 q ""
setTuv(arr,id1,id2,val)
 i +id1&+id2 s arr("arr","tuv",id1,id2)=val
 i +id1&'id2 s arr("arr","tuv",id1)=val
 q
addTuv(arr,id1,id2,val)
 i +id1&+id2 s arr("arr","tuv",id1,id2)=$g(arr("arr","tuv",id1,id2))+val
 i +id1&'id2 s arr("arr","tuv",id1)=$g(arr("arr","tuv",id1))+val
 q
mkDieIntrvTur(idfa,nmsp,zp,docarr,arrmzd,in,out)
 n (idfa,nmsp,zp,docarr,arrmzd,in,out)
 s $zt="err" s err="" k out
 // neni casovy prubeh
 i $o(docarr("arr","tur",""))="" q 0
 // ==================
 // pole cinnosti, ze kterych se pocitaji diety
 k arridcin
 f cnt=1:1:$l($g(arrmzd("arr",1,0,24)),"~") d
 .s id=$p($g(arrmzd("arr",1,0,24)),"~",cnt)
 .i id'="" s arridcin(id)=""
 // ===========================================
 s wrkm=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(wrkm)
 s mmbeg=$o(docarr("arr","tur",""))
 s mm=$o(docarr("arr","tur",""),-1)
 s mmend=$g(docarr("arr","tur",mm,"dta",1))
 // cely prubeh turnusu ============================================
 f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) s ^||wrk.ALVA.AD(wrkm,mm)=""
 // ================================================================
 s memend=""  //mem posleniho konce (mm)
 s memzst=""  //mem posledni rozdelovaci zastavky
 // uprava prubehu turnusu
 s mmbeg="" f  s mmbeg=$o(docarr("arr","tur",mmbeg)) q:mmbeg=""  d
 .s mmend=$g(docarr("arr","tur",mmbeg,"dta",1))
 .s idcin=$g(docarr("arr","tur",mmbeg,"dta",2))
 .i idcin=2 s memend=mmbeg
 .// cinnost se nepocita (nastaveni)
 .i (idcin>2)&(idcin'=8) d
 ..i '$d(arridcin(idcin)) f mm=($j(mmbeg,0,0)+1):1:$j(mmend,0,0) k ^||wrk.ALVA.AD(wrkm,mm)
 .// preruseni vyvolane novym zacatkem v turnusu
 .i (idcin=1)&(memend'="") d
 ..f mm=($j(memend,0,0)+1):1:$j(mmbeg,0,0) k ^||wrk.ALVA.AD(wrkm,mm)
 ..s memend=""
 .//prijezd a odjezd do zastavky, kde se rusi vypocet diet
 .i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) d
 ..//zastavka do
 ..s idzst=$g(docarr("arr","tur",mmbeg,"dta",10)) 
 ..i idzst'="" i $d(arrmzd("arr",1,0,17,"prv",(zp#100),"arr",idzst)) i memzst="" s memzst=mmend
 ..//zastavka od
 ..s idzst=$g(docarr("arr","tur",mmbeg,"dta",9))
 ..i idzst'="" i $d(arrmzd("arr",1,0,17,"prv",(zp#100),"arr",idzst)) i memzst'="" d
 ...f mm=($j(memzst,0,0)+1):1:$j(mmbeg,0,0) k ^||wrk.ALVA.AD(wrkm,mm)
 ...s memzst=""
 // sestaveni intervalu pro vypocet diet, do indexu dam mmbeg-1,
 // funkce, ktera pocita diety zjistuje delku odectenim intervalu 
 s mmbeg="" f  s mmbeg=$o(^||wrk.ALVA.AD(wrkm,mmbeg)) q:mmbeg=""  d
 .f mm=mmbeg:1 q:'$d(^||wrk.ALVA.AD(wrkm,mm))  s out("arr",(mmbeg-1))=mm k ^||wrk.ALVA.AD(wrkm,mm)
 k ^||wrk.ALVA.AD(wrkm)
 q 0
err s $zt="" q 1_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDTurExport" type="INT" languagemode="0" timestamp="65622,56431.479502"><![CDATA[
OBapiEDTurExport q
 // export turnusu
exportTurEdisonNew(idfa,nmsp,in,out)
 // export turnusu format EDISON - novy format, vse do jednoho souboru
 // in
 //*in("dta",1)=delimiter ";"
 //*in("dta",2)=znak "," náhradní znak v textu za oddělovač
 //*in("dta",3)=delimiterItemArr "|" oddelovac vice hodnot
 // in("arr",1,zp,tu,hrl)=""  ... turnusy pro export
 // in("glb")=glb             ... global pro data
 // out
 // data v
 // @glb@("arr",fidx,"dta",cnt)=veta
 // fidx je file index
 //  1 = zakladni udaje turnusu
 //  2 = casovy prubeh turnusu
 //  3 = ridici, zakladni udaje
 //  4 = ridici, mzdove udaje 
 //  5 = omezeni
 //  6 = poznamky zahlavi
 //  7 = poznamky zapati
 //  8 = poznamky na DZVA
 //  1000 = ciselnik zastavek
 //  1001 = ciselnik cinnosti
 //  1002 = ciselnik kvality vozidla
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 //pracovni global
 s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" k @myglb
 //global pro prenos dat
 s glb=$g(in("glb")) i glb="" s err="glb=" zt
 //parametry
 s del=$g(in("dta",1)) s delsub=$g(in("dta",2)) s delarr=$g(in("dta",3))
 //ciselniky
 k arrcis16 s err=$$gCis^OBapiED(idfa,nmsp,16,"",.arrcis16)
 k arrcis50 s err=$$gCis^OBapiED(idfa,nmsp,50,"",.arrcis50)
 //prevod turnusu
 s zp="" f {
	 s zp=$o(in("arr",1,zp)) i zp="" q
	 s err=$$mkPRV^OBapiED(idfa,zp,"",.idprv) zt:+err  s err=""
	 s tu="" f {
 		 s tu=$o(in("arr",1,zp,tu)) i tu="" q
 		 s hrl="" f {
	 		 s hrl=$o(in("arr",1,zp,tu,hrl)) i hrl="" q
	 		 k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu) zt:+err  s err=""
	 		 //==============
	 		 //zakladni udaje
	 		 //==============
	 		 s fidx=1
	 		 s val=""
	 		 s $p(val,del,1)=idprv
	 		 s $p(val,del,2)=tu
	 		 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 		 s myind="" f {
		  		 s myind=$o(arrtu("dta",myind)) i myind="" q
		 		 s myval=$g(arrtu("dta",myind))
		 		 //konverze hrl -> dd.mm.rrrr
		 		 i (myind=2)!(myind=11) {
			 		 i myval s myval=$$nd^OBapiED(myval,0)
		 		 }
		 		 //konverze h.m -> h:m (zacatek a konec)
		 		 i (myind=5)!(myind=6) {
			 		 s myval=$tr($j(myval,0,2),".",":")
		 		 }
		 		 //konverze h.m na min (dodk je v h.m)
		 		 i (myind=15) {
			 		 s myval=((myval\1*60)+((myval#1)*100)\1)
		 		 }
		 		 //konverze vice hodnot (pole hodnot v polozce) "~" -> delarr
		 		 i (myind=7) {
			 		 s myval=$tr(myval,"~",delarr)
		 		 }
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
		 		 //konverze cisla 
		 		 i (myval?0.1"-".N1"."1.N) s myval=$tr(myval,".",",")
		 		 //zapis udaje do vety
		 		 s $p(val,del,(myind+3))=myval
	 		 }
	 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 //==================================
	 		 //casovy prubeh + nachytani zastavek
	 		 //==================================
	 		 s fidx=2
	 		 s tm="" f {
		 		 s tm=$o(arrtu("arr","tur",tm)) i tm="" q
		 		 s val=""
		 		 s $p(val,del,1)=idprv
	 			 s $p(val,del,2)=tu
	 			 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
		 		 s myind="" f {
		 			 s myind=$o(arrtu("arr","tur",tm,"dta",myind)) i myind="" q
		 			 s myval=tm
		 			 i (myval?0.1"-".N1"."1.N) s myval=$tr(myval,".",",")
		 			 s $p(val,del,4)=myval
		 			 s myval=$g(arrtu("arr","tur",tm,"dta",myind))
		 			 //konverze oddelovace 
		 			 s myval=$tr(myval,del,delsub)
		 			 //konverze cisla 
		 			 i (myval?0.1"-".N1"."1.N) s myval=$tr(myval,".",",")
		 			 //zapis udaje do vety
		 			 s $p(val,del,(myind+4))=myval
		 		 }
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
		 		 //zastavky
		 		 s zst=$g(arrtu("arr","tur",tm,"dta",9)) i zst'="" s @myglb@(1,zst)=""
		 		 s zst=$g(arrtu("arr","tur",tm,"dta",10)) i zst'="" s @myglb@(1,zst)=""
	 		 }
	 		 //ridici, zakladni udaje
	 		 s fidx=3
	 		 s val=""
	 		 s $p(val,del,1)=idprv
	 		 s $p(val,del,2)=tu
	 		 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 		 s myind="" f {
		  		 s myind=$o(arrtu("arr","drv","dta",myind)) i myind="" q
		 		 s myval=$g(arrtu("arr","drv","dta",myind))
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
		 		 //konverze cisla 
		 		 i (myval?0.1"-".N1"."1.N) s myval=$tr(myval,".",",")
		 		 //zapis udaje do vety
		 		 s $p(val,del,(myind+3))=myval
	 		 }
	 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 //ridici, mzdove udaje
	 		 s fidx=4
	 		 s cnt="" f {
		  		 s cnt=$o(arrtu("arr","drv","arr",cnt)) i cnt="" q
		 		 s val=""
		 		 s $p(val,del,1)=idprv
	 			 s $p(val,del,2)=tu
	 			 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 			 s $p(val,del,4)=cnt
	 			 s myind="" f {
		 			 s myind=$o(arrtu("arr","drv","arr",cnt,"dta",myind)) i myind="" q
		 			 s myval=$g(arrtu("arr","drv","arr",cnt,"dta",myind))
		 			 //konverze vice hodnot (pole hodnot v polozce) "~" -> delarr
		 			 i (myind=12)!(myind=13) {
			 			 s myval=$tr(myval,"~",delarr)
		 			 }
		 			 //konverze oddelovace 
		 			 s myval=$tr(myval,del,delsub)
		 			 //konverze cisla 
		 			 i (myval?0.1"-".N1"."1.N) s myval=$tr(myval,",",".")
		 			 //zapis udaje do vety
		 			 s $p(val,del,(myind+4))=myval
	 			 }
	 			 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }	
	 		 //dalsi platnosti (omezeni)
	 		 s fidx=5
			 s idomz="" f {
		 		 s idomz=$o(arrtu("arr","omz",idomz)) i idomz="" q
				 s myval=$p($g(arrtu("arr","omz",idomz)),"@",2)
				 f cnt=1:1:$l(myval,"#") {
 			 		 s ddmmod=$p($p(myval,"#",cnt),":",1)
 					 s ddmmdo=$p($p(myval,"#",cnt),":",2)
 					 i ddmmdo="" s ddmmdo=ddmmod
 					 i ($l(ddmmod,".")=2)&($e(ddmmod,$l(ddmmod))'=".") s ddmmod=ddmmod_"."
 					 i ($l(ddmmdo,".")=2)&($e(ddmmdo,$l(ddmmdo))'=".") s ddmmdo=ddmmdo_"."
 					 s val=""
		 			 s $p(val,del,1)=idprv
	 				 s $p(val,del,2)=tu
	 				 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 				 s $p(val,del,4)=idomz
	 				 s $p(val,del,5)=cnt
	 				 s $p(val,del,6)=ddmmod
	 				 s $p(val,del,7)=ddmmdo
	 				 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
				 }
			 }
	 		 //poznamky zahlavi
	 		 s fidx=6
	 		 s cnt="" f {
		 		 s cnt=$o(arrtu("arr","txh",cnt)) i cnt="" q
		 		 s myval=$g(arrtu("arr","txh",cnt))
		 		 s val=""
		 		 s $p(val,del,1)=idprv
	 			 s $p(val,del,2)=tu
	 			 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 			 s $p(val,del,4)=cnt
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
		 		 //zapis udaje do vety
		 	     s $p(val,del,5)=myval
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
	 		 //poznamky zapati
	 		 s fidx=7
	 		 s cnt="" f {
		  		 s cnt=$o(arrtu("arr","txp",cnt)) i cnt="" q
		 		 s myval=$g(arrtu("arr","txp",cnt))
		 		 s val=""
		 		 s $p(val,del,1)=idprv
	 			 s $p(val,del,2)=tu
	 			 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 			 s $p(val,del,4)=cnt
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
		 		 //zapis udaje do vety
		 	     s $p(val,del,5)=myval
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
	 		 //poznamky na dzva
	 		 s fidx=8
	 		 s cnt="" f {
		 		 s cnt=$o(arrtu("arr","txd",cnt)) i cnt="" q
		 		  s myval=$g(arrtu("arr","txd",cnt))
		 		 s val=""
		 		 s $p(val,del,1)=idprv
	 			 s $p(val,del,2)=tu
	 			 s $p(val,del,3)=$$nd^OBapiED(hrl,0)
	 			 s $p(val,del,4)=cnt
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
		 		 //zapis udaje do vety
		 	     s $p(val,del,5)=myval
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
	 		 //zastavky
	 		 s fidx=1000
	 		 s zst="" f {
		  		 s zst=$o(@myglb@(1,zst)) i zst="" q
		 		 k myarr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.myarr)
		 		 s val=""
		 		 s $p(val,del,1)=zst
		 		 //nazev
		 		 s myval=$g(myarr("dta",1))
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
	 			 s $p(val,del,2)=myval
	 			 //okres
		 		 s myval=$g(myarr("dta",2))
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
	 			 s $p(val,del,3)=myval
	 			 //cislo dle crz
	 			 s myval=$g(myarr("dta",3))
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
	 			 s $p(val,del,4)=myval
	 			 k myarr
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
	 		 //=========
	 		 //ciselniky
	 		 //=========
	 		 //cinnosti
	 		 s fidx=1001
	 		 s id="" f {
		  		 s id=$o(arrcis16("arr",id)) i id="" q
		 		 s myval=$p($g(arrcis16("arr",id)),"~",1)
		 		 s val=""
		 		 s $p(val,del,1)=id
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
	 			 s $p(val,del,2)=myval
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
	 		 //kvalita vozidla
	 		 s fidx=1002
	 		 s id="" f {
		 		 s id=$o(arrcis50("arr",id)) i id="" q
		 		 s myval=$p($g(arrcis50("arr",id)),"~",1)
		 		 s val=""
		 		 s $p(val,del,1)=id
		 		 //konverze oddelovace 
		 		 s myval=$tr(myval,del,delsub)
	 			 s $p(val,del,2)=myval
		 		 s @glb@("arr",fidx,"dta",$i(@glb@("arr",fidx,"dta")))=val
	 		 }
 		 }
	 }
 }
 q 0
 //
exportTurEdison(idfa,nmsp,in,out)
 // export turnusu format EDISON - stary format, pro UNIS a OPTIM
 // in
 // in("arr",1,zp,tu,hrl)=""  ... turnusy pro export
 // out
 // out=wrk ... odkaz do globalu ^CacheTempJB(wrk, ...
 //    ^CacheTempJB(wrk,1,prv,tu,hrl)=val          ... soubor tur1.txt     
 //    ^CacheTempJB(wrk,2,prv,tu,hrl,cnt)=val	   ... soubor tur2.txt     
 //    ^CacheTempJB(wrk,3,zstId)=zstPopis (lokalni)... soubor tur3.txt     
 //    ^CacheTempJB(wrk,4,zstId)=zstPopis (dle JR) ... soubor tur4.txt
 //    ^CacheTempJB(wrk,5,prv,tu,hrl,id,cnt)=val   ... soubor tur5.txt         
 //    ^CacheTempJB(wrk,6,prv,tu,hrl,cnt)=val      ... soubor tur6.txt         
 //            
 n (idfa,nmsp,wrk,in,out)
 s $zt="err" k out s err=""
 s out=$$gWrkJB^OBapiED() s odd=";"
 s zp="" f  s zp=$o(in("arr",1,zp)) q:zp=""  d
 .s tu="" f  s tu=$o(in("arr",1,zp,tu)) q:tu=""  d
 ..s hrl="" f  s hrl=$o(in("arr",1,zp,tu,hrl)) q:hrl=""  d
 ...k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu)
 ...// hlavicka
 ...s val=""
 ...s $p(val,odd,1)=zp#100
 ...s $p(val,odd,2)=$p(tu,".",1)
 ...s $p(val,odd,3)=$p(tu,".",2)
 ...s $p(val,odd,4)=$$nd^OBapiED(hrl,0)
 ...s $p(val,odd,5)=+$g(arrtu("dta",3))
 ...s $p(val,odd,6)=$$hm^OBapiED(+$g(arrtu("dta",5)))
 ...s $p(val,odd,7)=$$hm^OBapiED(+$g(arrtu("dta",6)))+(($g(arrtu("dta",4))-1)*1440)
 ...s $p(val,odd,8)=$tr($p($g(arrtu("dta",7)),"~",1),".","")
 ...s $p(val,odd,9)=$p($g(arrtu("dta",7)),"~",2)
 ...s $p(val,odd,10)=$g(arrtu("dta",9))
 ...s $p(val,odd,11)=$g(arrtu("dta",10))
 ...s $p(val,odd,12)=$p($p($p($g(arrtu("arr",1,22)),"@",2),"#",1),":",1)
 ...s $p(val,odd,13)=$p($p($p($g(arrtu("arr",1,22)),"@",2),"#",1),":",2)
 ...s $p(val,odd,14)=+$g(arrtu("dta",12))
 ...s $p(val,odd,15)=$g(arrtu("dta",27))
 ...s $p(val,odd,16)=+$g(arrtu("dta",21))
 ...s $p(val,odd,17)=+$g(arrtu("dta",14))
 ...s $p(val,odd,18)=+$$hm^OBapiED($g(arrtu("dta",15)))
 ...s $p(val,odd,19)=+$g(arrtu("dta",20))
 ...s $p(val,odd,20)=+$g(arrtu("dta",16))
 ...s $p(val,odd,21)=+$g(arrtu("dta",22))
 ...s $p(val,odd,22)=+$g(arrtu("dta",26))
 ...s $p(val,odd,23)=+$g(arrtu("dta",23))
 ...s $p(val,odd,24)=$p($$pltHex^OBapiED($tr($p($g(arrtu("dta",7)),"~",1),".","")),"~",2)
 ...s $p(val,odd,25)=$g(arrtu("dta",31))																//odbav.zarizeni
 ...s $p(val,odd,26)="" i $g(arrtu("dta",33)) s $p(val,odd,26)=$$nd^OBapiED($g(arrtu("dta",33)),0)		//datum platnosti do
 ...s $p(val,odd,27)=$g(arrtu("dta",34))																//fixni priplatek k cekani
 ...s $p(val,odd,28)=+$g(arrtu("dta",36))																//objizdkovy
 ...s $p(val,odd,29)=+$g(arrtu("dta",37))																//nizkopodlazni
 ...s $p(val,odd,30)=+$g(arrtu("dta",35))																//zpusob proplaceni diet
 ...s $p(val,odd,31)=+$g(arrtu("dta",53))																//deleny
 ...s $p(val,odd,32)=+$g(arrtu("dta",60))																//neproplacet cekani
 ...s $p(val,odd,33)=+$g(arrtu("dta",61))																//nevyhodnocovat VD
 ...s $p(val,odd,34)=+$g(arrtu("dta",64))																//neobsazovat plan 
 ...s $p(val,odd,35)=$g(arrtu("dta",70))																//kurs
 ...s $p(val,odd,36)=$g(arrtu("dta",13))																//dopravni typ autobusu
 ...s ^CacheTempJB(out,1,(zp#100),tu,hrl)=val
 ...// telo
 ...s tmo="" f  s tmo=$o(arrtu("arr","tur",tmo)) q:tmo=""  d
 ....s val="" s idcin=+$g(arrtu("arr","tur",tmo,"dta",2))
 ....s myidcin="" i idcin<18 s myidcin=idcin
 ....i (idcin=10)&($g(arrtu("arr","tur",tmo,"dta",11))=4) s myidcin=18	//zaloha
 ....i myidcin="" q
 ....s $p(val,odd,1)=zp#100
 ....s $p(val,odd,2)=$p(tu,".",1)
 ....s $p(val,odd,3)=$p(tu,".",2)
 ....s $p(val,odd,4)=$$nd^OBapiED(hrl,0)
 ....s $p(val,odd,5)=tmo
 ....s $p(val,odd,6)=$g(arrtu("arr","tur",tmo,"dta",1))
 ....s $p(val,odd,7)=+myidcin
 ....s $p(val,odd,8)="" d   // km
 .....s:(idcin>2)&(idcin<8) $p(val,odd,8)=+$g(arrtu("arr","tur",tmo,"dta",3))
 ....s $p(val,odd,9)="" d   // doba
 .....s:(idcin>2)&(idcin<8) $p(val,odd,9)=+$g(arrtu("arr","tur",tmo,"dta",4))
 .....s:(idcin>8)&(idcin<16) $p(val,odd,9)=+$g(arrtu("arr","tur",tmo,"dta",4))
 ....s $p(val,odd,10)="" d  // linka
 .....s:(idcin=3) $p(val,odd,10)=$g(arrtu("arr","tur",tmo,"dta",5))
 ....s $p(val,odd,11)="" d  // spoj
 .....s:(idcin=3) $p(val,odd,11)=$g(arrtu("arr","tur",tmo,"dta",6))
 ....s $p(val,odd,12)="" d  // manipulace pred
 .....i (idcin=3) d
 ......s man=$g(arrtu("arr","tur",tmo,"dta",7))
 ......// tvrda manipulace posun casu
 ......i +man s $p(val,odd,5)=$p(val,odd,5)+man
 ......s man=$tr(man,"*","")
 ......s $p(val,odd,12)=man
 ....s $p(val,odd,13)="" d  // manipulace po
 .....i (idcin=3) d
 ......s man=$g(arrtu("arr","tur",tmo,"dta",8))
 ......// tvrda manipulace posun casu
 ......i +man s $p(val,odd,6)=$p(val,odd,6)-man
 ......s man=$tr(man,"*","")
 ......s $p(val,odd,13)=man
 ....s $p(val,odd,14)="" d  // zastavka lokalni od
 .....i (idcin>3)&(idcin<8) d
 ......s zst=$g(arrtu("arr","tur",tmo,"dta",9)) q:zst'["/L"
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,14)=+zst
 ......s ^CacheTempJB(out,3,+zst)=+zst_odd_$g(arr("dta",1))
 ....s $p(val,odd,15)="" d  // zastavka lokalni do
 .....i (idcin>3)&(idcin<8) d
 ......s zst=$g(arrtu("arr","tur",tmo,"dta",10)) q:zst'["/L"
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,15)=+zst
 ......s ^CacheTempJB(out,3,+zst)=+zst_odd_$g(arr("dta",1))
 ....s $p(val,odd,16)="" d  // poznamka
 .....s:(idcin=8) $p(val,odd,16)=$tr($g(arrtu("arr","tur",tmo,"dta",12)),odd_$c(10)," ")
 ....s $p(val,odd,17)="" d  // zastavka dleJR od
 .....i (idcin=3) d
 ......s li=$g(arrtu("arr","tur",tmo,"dta",5)) s sp=$g(arrtu("arr","tur",tmo,"dta",6))
 ......k arr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arr)
 ......// zastavka od
 ......s zst=$g(arr("dta",6)) q:zst=""
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,17)=+zst
 ......//vyhozeni odradkovani 
 ......s arr("dta",1)=$tr($g(arr("dta",1)),$c(13,10),"") s arr("dta",2)=$tr($g(arr("dta",2)),$c(13,10),"")
 ......s ^CacheTempJB(out,4,+zst)=+zst_odd_$p($g(arr("dta",1)),",",1)_odd_$p($g(arr("dta",1)),",",2)_odd_$p($g(arr("dta",1)),",",3)_odd_$g(arr("dta",2))_odd_$g(arr("dta",3))
 .....i (idcin>3)&(idcin<8) d
 ......s zst=$g(arrtu("arr","tur",tmo,"dta",9)) q:zst["/L"
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,17)=+zst
 ......//vyhozeni odradkovani 
 ......s arr("dta",1)=$tr($g(arr("dta",1)),$c(13,10),"") s arr("dta",2)=$tr($g(arr("dta",2)),$c(13,10),"")
 ......s ^CacheTempJB(out,4,+zst)=+zst_odd_$p($g(arr("dta",1)),",",1)_odd_$p($g(arr("dta",1)),",",2)_odd_$p($g(arr("dta",1)),",",3)_odd_$g(arr("dta",2))_odd_$g(arr("dta",3))
 ....s $p(val,odd,18)="" d  // zastavka dleJR do
 .....i (idcin=3) d
 ......s li=$g(arrtu("arr","tur",tmo,"dta",5)) s sp=$g(arrtu("arr","tur",tmo,"dta",6))
 ......k arr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arr)
 ......// zastavka do
 ......s zst=$g(arr("dta",7)) q:zst=""
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,18)=+zst
 ......//vyhozeni odradkovani 
 ......s arr("dta",1)=$tr($g(arr("dta",1)),$c(13,10),"") s arr("dta",2)=$tr($g(arr("dta",2)),$c(13,10),"")
 ......s ^CacheTempJB(out,4,+zst)=+zst_odd_$p($g(arr("dta",1)),",",1)_odd_$p($g(arr("dta",1)),",",2)_odd_$p($g(arr("dta",1)),",",3)_odd_$g(arr("dta",2))_odd_$g(arr("dta",3))
 .....i (idcin>3)&(idcin<8) d
 ......s zst=$g(arrtu("arr","tur",tmo,"dta",10)) q:zst["/L"
 ......k arr s err=$$gZst^OBapiED(idfa,nmsp,zst,"",.arr)
 ......s $p(val,odd,18)=+zst
 ......s $p(val,odd,19)="" i (idcin=4)!(idcin=5)!(idcin=6) s $p(val,odd,19)=+$g(arrtu("arr","tur",tmo,"dta",21))
 ......//vyhozeni odradkovani 
 ......s arr("dta",1)=$tr($g(arr("dta",1)),$c(13,10),"") s arr("dta",2)=$tr($g(arr("dta",2)),$c(13,10),"")
 ......s ^CacheTempJB(out,4,+zst)=+zst_odd_$p($g(arr("dta",1)),",",1)_odd_$p($g(arr("dta",1)),",",2)_odd_$p($g(arr("dta",1)),",",3)_odd_$g(arr("dta",2))_odd_$g(arr("dta",3))
 .....//tvrda manipulace pred
 .....s $p(val,odd,20)=0 i ((idcin=3)&($g(arrtu("arr","tur",tmo,"dta",7))'="")&($g(arrtu("arr","tur",tmo,"dta",7))'["*")) s $p(val,odd,20)=1
 .....//tvrda manipulace po
 .....s $p(val,odd,21)=0 i ((idcin=3)&($g(arrtu("arr","tur",tmo,"dta",8))'="")&($g(arrtu("arr","tur",tmo,"dta",8))'["*")) s $p(val,odd,21)=1
 ....s ^CacheTempJB(out,2,(zp#100),tu,hrl,$i(^CacheTempJB(out,2,(zp#100),tu,hrl)))=val
 ...//poznamky
 ...f idpzn="txh","txp" d
 ....i idpzn="txh" s myidpzn=1
 ....i idpzn="txp" s myidpzn=2
 ....s cntrow=0 s mycnt="" f  s mycnt=$o(arrtu("arr",idpzn,mycnt)) q:mycnt=""  d
 .....s myval=$tr($g(arrtu("arr",idpzn,mycnt)),";"_$c(10),",")
 .....s val=""
 .....s $p(val,odd,1)=zp#100
 .....s $p(val,odd,2)=$p(tu,".",1)
 .....s $p(val,odd,3)=$p(tu,".",2)
 .....s $p(val,odd,4)=$$nd^OBapiED(hrl,0)
 .....s $p(val,odd,5)=myidpzn
 .....s $p(val,odd,6)=$i(cntrow)
 .....s $p(val,odd,7)=myval
 .....s ^CacheTempJB(out,5,(zp#100),tu,hrl,myidpzn,$i(^CacheTempJB(out,5,(zp#100),tu,hrl,myidpzn)))=val
 ...//dalsi platnosti
 ...k arrom f idomz=12,13,22 d
 ....s myrrrr=$p($$nd^OBapiED(hrl,0),".",3)
 ....s myidomz=""
 ....i idomz=12 s myidomz=1
 ....i idomz=13 s myidomz=2
 ....i idomz=22 s myidomz=3
 ....i $d(arrtu("arr","omz",idomz)) d
 .....s myval=$p($g(arrtu("arr","omz",idomz)),"@",2)
 .....f mycnt=1:1:$l(myval,"#") d
 ......s dod=$p($p(myval,"#",mycnt),":",1) i dod="" q
 ......s ddo=$p($p(myval,"#",mycnt),":",2) i ddo="" s ddo=dod
 ......s dod=dod_"."_myrrrr
 ......s ddo=ddo_"."_myrrrr
 ......i $$dn^OBapiED(dod)>$$dn^OBapiED(ddo) s myrrrr=(myrrrr+1) s $p(ddo,".",3)=myrrrr
 ......s val=""
 ......s $p(val,odd,1)=zp#100
 ......s $p(val,odd,2)=$p(tu,".",1)
 ......s $p(val,odd,3)=$p(tu,".",2)
 ......s $p(val,odd,4)=$$nd^OBapiED(hrl,0)
 ......s $p(val,odd,5)=myidomz
 ......s $p(val,odd,6)=dod
 ......s $p(val,odd,7)=ddo
 ......s ^CacheTempJB(out,6,(zp#100),tu,hrl,$i(^CacheTempJB(out,6,(zp#100),tu,hrl)))=val
 q 0
 //
exportTurUSVC(idfa,nmsp,in,out)
 // s i("arr",1,1310,1,61605)=""
 // s i("arr",1,1310,10,61344)=""
 // s i("par",1)="99~9"
 // s i("par",2)="c:\"
 // s err=$$exportTurUSVC^OBapiED("VS_CSAD","USER",.i,.o) w ! zw o zw ^CacheTempJB(o)
 // export turnusu pro strojky Mikroelektronika USVC
 // in
 // in("arr",1,zp,tu,hrl)=""  ... turnusy pro export
 // in("par",1)=li~sp 		  ... linka a spoj pro prevod rezijnich km
 // in("par",2)=pathli 		  ... cesta k souboru s linkou .lik
 // out
 // out("msg",cnt)=txt (zprava)
 // out=wrk ... odkaz do globalu ^CacheTempJB(wrk,cnt)=val
 //            
 n (idfa,nmsp,wrk,in,out)
 s $zt="err" k out s err=""
 s out=$$gWrkJB^OBapiED() s odd=";"
 // kontrola cesty
 i $g(in("par",2))'="" s:$e($g(in("par",2)),$l($g(in("par",2))))'="\" in("par",2)=$g(in("par",2))_"\"
 s zp="" f  s zp=$o(in("arr",1,zp)) q:zp=""  d
 .s tu="" f  s tu=$o(in("arr",1,zp,tu)) q:tu=""  d
 ..s hrl="" f  s hrl=$o(in("arr",1,zp,tu,hrl)) q:hrl=""  d
 ...//kontrola na vice casovych variant
 ...i $o(in("arr",1,zp,tu,hrl))'="" d  q
 ....k in("arr",1,zp,tu,hrl)
 ....s out("msg",$i(out("msg")))="turnus = "_zp_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" čas.var.vyřazena !"
 ...k arrtu s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arrtu)
 ...//oznaceni turnusu
 ...s otu=$g(arrtu("dta",31)) s:otu="" otu=tu*100
 ...s pkva=$g(arrtu("dta",59))
 ...s cnt=0
 ...s out("msg",$i(out("msg")))="turnus = "_zp_"/"_tu_"/"_$$nd^OBapiED(hrl,0)_" > "_otu
 ...s tm="" f  s tm=$o(arrtu("arr","tur",tm)) q:tm=""  d
 ....s idcin=$g(arrtu("arr","tur",tm,"dta",2))
 ....i idcin=3 d
 .....s cnt=$i(cnt)
 .....s li=$g(arrtu("arr","tur",tm,"dta",5))
 .....s sp=$g(arrtu("arr","tur",tm,"dta",6))
 .....k arrsp s err=$$gSp^OBapiED(idfa,nmsp,li,sp,hrl,"",.arrsp) s err=""
 .....//cislo spoje, muze byt jine pro strojky
 .....s exsp=sp i $g(arrsp("dta",24))'="" s exsp=$g(arrsp("dta",24))
 .....k arrsp
 .....s path="" s:$g(in("par",2))'="" path=$g(in("par",2))_li_".lik"
 .....s val=""
 .....s $p(val,";",1)=otu
 .....s $p(val,";",2)=cnt
 .....s $p(val,";",3)=path
 .....s $p(val,";",4)=li
 .....s $p(val,";",5)=exsp
 .....s $p(val,";",9)=pkva
 .....s $p(val,";",10)=""
 .....s ^CacheTempJB(out,$i(^CacheTempJB(out)))=val
 ....i $g(in("par",1))'="" d
 .....i (idcin=4)!(idcin=5)!(idcin=6) d
 ......s path="" s:$g(in("par",2))'="" path=$g(in("par",2))_$p($g(in("par",1)),"~",1)_".lik"
 ......s cnt=$i(cnt)
 ......s val=""
 ......s $p(val,";",1)=otu
 ......s $p(val,";",2)=cnt
 ......s $p(val,";",3)=path
 ......s $p(val,";",4)=$p($g(in("par",1)),"~",1)
 ......s $p(val,";",5)=$p($g(in("par",1)),"~",2)
 ......s $p(val,";",9)=pkva
 ......s $p(val,";",10)=""
 ......s ^CacheTempJB(out,$i(^CacheTempJB(out)))=val
 s ^CacheTempJB(out,$i(^CacheTempJB(out)))="-----END-----"
 q 0
 //
err s $zt="" k out q:$g(err)'="" "1~"_$tr(err,"~","/")  q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDTurGr" type="INT" languagemode="0" timestamp="64796,48312.164757"><![CDATA[
OBapiEDTurGr q
 //graficky tisk turnusu
mkTurGraf(idfa,nmsp,glb,in,out)
 // s err=$$mkTurGraf(idfa,nmsp,in,out)
 // in("arr",1,zp,idtur,tmvar)=""
 // in("dta",1)=horlog dne, pro ktery se dela vypis
 // in("dta",2)= 0/1 0 nevypisuje casy / 1 vypisuje casy
 // in("dta",3)= 0/1 0 nevypisuje zastavky / 1 vypisuje zastavky (radek nad a pod)
 // in("dta",4)= cislo zastavky pro vypis
 // glb ... odkaz na global, do ktereho program udela vystupni sestavu
 //
 n (idfa,nmsp,glb,in,out) s err="" k out s $zt="err"
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(glb)="" q "1~glb="
 //
 I $G(in("dta",1))="" S in("dta",1)=+$H
 //
 S COLOR("RED")="&#FF6666"
 S COLOR("GREEN")="&#66FF99"
 S COLOR("BLUE")="&#6666FF"
 S COLOR("YELLOW")="&#FFFF66"
 S COLOR("LGRAY")="&#CCCCCC"
 S COLOR("LRED")="&#FF9393"
 S COLOR("LBLUE")="&#D4D4DC"
 S COLOR("LGREEN")="&#6CD900"
 //
 // CASOD, CASDO ze vsech turnusu
 //
 S CASOD=24*60
 S CASDO=0
 S DZPR="" F  S DZPR=$O(in("arr",1,DZPR)) Q:DZPR=""  D
 .S TUR="" F  S TUR=$O(in("arr",1,DZPR,TUR)) Q:TUR=""  D
 ..S HORL="" F  S HORL=$O(in("arr",1,DZPR,TUR,HORL)) Q:HORL=""  D
 ...k arr s err=$$gTur^OBapiED(idfa,nmsp,DZPR,TUR,HORL,"",.arr) zt:+err "merr" s err=""
 ...s IND="" f  s IND=$o(arr("arr","tur",IND)) q:IND=""  d
 ....s TYP=$g(arr("arr","tur",IND,"dta",2))
 ....I '((TYP=3)!(TYP=6)) Q
 ....s tmod=IND i TYP=3 s tmod=tmod+$g(arr("arr","tur",IND,"dta",7))
 ....I tmod<+$G(CASOD) S CASOD=tmod
 ....s tmdo=$g(arr("arr","tur",IND,"dta",1)) i TYP=3 s tmdo=tmdo-$g(arr("arr","tur",IND,"dta",8))
 ....I $g(tmdo)>$G(CASDO) S CASDO=tmdo
 //
 // CAS
 //
 S CASOD=$G(CASOD)\60
 S CASDO=$G(CASDO)\60
 // pocet poli - krok (5 minut nebo 10 minut)
 S KRMI=5 S HSLP=(((CASDO-CASOD)+1)*60)/KRMI
 I (HSLP+3)>256 S KRMI=10 S HSLP=(((CASDO-CASOD)+1)*60)/KRMI
 //
 K @glb
 //
 // formatovani
 // 
 S POS="" F I=1:1:HSLP+8 S $P(POS,":",I)="C"
 S @glb@(1)="<table pos='"_POS_"'>"
 // hlavicka
 S VETA="<sp='R4'>"_"<cl='"_COLOR("LBLUE")_"'>"_"<bd='TBLR'>"_"turnus;<sp='R4'>kmen.lin.;<sp='R4'>kmen.rz(sez./obs.);<sp='R4'>platnost;<sp='R4'>výkon;<sp='R4'>směna;<sp='R4'>odpoč.24h.;<sp='R4'>max.obsaz.;<sp='C"_HSLP_"'>grafické turnusy</cl>"
 S @glb@(1,"tr",1)=VETA
 S VETA="<sp='C"_HSLP_"'>"_"<cl='"_COLOR("LBLUE")_"'>"_"Čas"_"</cl>"
 S @glb@(1,"tr",2)=VETA
 // hodiny
 S VETA="",IND=0 F I=CASOD:1:CASDO D
 .S IND=IND+1 S COLOR=COLOR("LRED") I IND>1 S COLOR=COLOR("LGRAY"),IND=0
 .S VETA=VETA_"<sp='C"_(60/KRMI)_"'>"_"<cl='"_COLOR_"'>"_(I#24)_":00"_"</cl>"_";"
 I '(VETA="") S VETA=$E(VETA,1,$L(VETA)-1)
 S @glb@(1,"tr",3)=VETA
 // minuty
 S VETA="",IND=0
 F I=CASOD:1:CASDO D
 .F MIN=KRMI:KRMI:60 D
 ..S IND=IND+1
 ..S COLOR=COLOR("LRED") I IND>1 S COLOR=COLOR("LGRAY"),IND=0
 ..S VETA=VETA_"<cl='"_COLOR_"'>"_$E("00",1,2-$L(MIN))_MIN_"</cl>"_";"
 I '(VETA="") S VETA=$E(VETA,1,$L(VETA)-1)
 S @glb@(1,"tr",4)=VETA
 //
 // turnus do tabulky
 // 
 S DZPR="" F  S DZPR=$O(in("arr",1,DZPR)) Q:DZPR=""  D
 .S TUR="" F  S TUR=$O(in("arr",1,DZPR,TUR)) Q:TUR=""  D
 ..S HORL="" F  S HORL=$O(in("arr",1,DZPR,TUR,HORL)) Q:HORL=""  D
 ...k arr s err=$$gTur^OBapiED(idfa,nmsp,DZPR,TUR,HORL,"",.arr) zt:+err "merr" s err=""
 ...S TBL="" K FITUR,FILI
 ...S PLATN=$g(arr("dta",8))
 ...s ODPRHOD=$tr($j($$mh^OBapiED($g(arr("arr","tuv",11))),0,2),".",":")
 ...s PROVHOD=$tr($j($$mh^OBapiED($g(arr("arr","tuv",17))),0,2),".",":")
 ...s ODPOHOD=$tr($j($$mh^OBapiED((1440-$g(arr("arr","tuv",17))+$g(arr("arr","tuv",42)))),0,2),".",":")
 ...s KMENRZ=$g(arr("dta",27))
 ...s MAXOBS=$g(arr("dta",68))
 ...i KMENRZ'="" d
 ....k rzarr s err=##class(ALVA.ADMAIN.ApiRZ).get(idfa,nmsp,+$h,KMENRZ,"",.rzarr) s err=""
 ....s KMENRZ=KMENRZ_" ("_+$g(rzarr("dta",19))_"/"_+$g(rzarr("dta",18))_")"
 ...s IND="" f  s IND=$o(arr("arr","tur",IND)) q:IND=""  d
 ....S TYP=$g(arr("arr","tur",IND,"dta",2))
 ....S TOD=IND S:TYP=3 TOD=TOD+$g(arr("arr","tur",IND,"dta",7))
 ....D
 .....I TOD#10<KRMI S TOD=(TOD\10)*10 Q
 .....I TOD#10>KRMI S TOD=((TOD\10)*10)+1
 ....S TDO=$g(arr("arr","tur",IND,"dta",1)) S:TYP=3 TDO=TDO-$g(arr("arr","tur",IND,"dta",8))
 ....D
 .....I TDO#10<KRMI S TDO=(TDO\10)*10 Q
 .....I TDO#10>KRMI S TDO=((TDO\10)*10)+1
 ....S TDO=(TDO-TOD)/KRMI I TDO#1 S TDO=(TDO\1)+1
 ....S TOD=((TOD-(CASOD*60))/KRMI)+1 I TOD#1 S TOD=(TOD\1)+1
 ....I TDO<1 S TDO=1
 ....I TYP=3 D
 .....S LI=$g(arr("arr","tur",IND,"dta",5)) S SP=$g(arr("arr","tur",IND,"dta",6))
 .....S LISP=LI_"/"_SP
 .....S FILI(+$P(LISP,"/",1))=$G(FILI(+$P(LISP,"/",1)))+1
 .....I $G(in("dta",4)) D
 ......k arrsp s err=$$gSp^OBapiED(idfa,nmsp,(+LI),(+SP),HORL,"",.arrsp) zt:+err "merr" s err=""
 ......s ZAST=$g(arrsp("dta",6))_"~"_$g(arrsp("dta",7))
 ......I $G(in("dta",4))=$P(ZAST,"~",1) S LISP="< "_LISP
 ......I $G(in("dta",4))=$P(ZAST,"~",2) S LISP=LISP_" >"
 .....s tmod=(IND+$g(arr("arr","tur",IND,"dta",7)))
 .....s tmdo=($g(arr("arr","tur",IND,"dta",1))-$g(arr("arr","tur",IND,"dta",8)))
 .....I $G(in("dta",2)) S LISP="("_$tr($j($$mh^OBapiED((tmod#1440)),0,2),".",":")_") "_LISP_" ("_$tr($j($$mh^OBapiED((tmdo#1440)),0,2),".",":")_")"
 .....S FITUR(TOD)=TDO_"~"_LISP_"~"_TYP
 .....I +$G(in("dta",3)) d
 ......k arrsp s err=$$gSp^OBapiED(idfa,nmsp,(+LI),(+SP),HORL,"",.arrsp) zt:+err "merr" s err=""
 ......s ZSOD=$g(arrsp("dta",6)) s ZSDO=$g(arrsp("dta",7))
 ......i ZSOD'="" k arrzst s err=$$gZst^OBapiED(idfa,nmsp,ZSOD,"",.arrzst) zt:+err "merr" s err="" s ZSOD=$g(arrzst("dta",1)) 
 ......i ZSDO'="" k arrzst s err=$$gZst^OBapiED(idfa,nmsp,ZSDO,"",.arrzst) zt:+err "merr" s err="" s ZSDO=$g(arrzst("dta",1))
 ......s:ZSOD="" ZSOD="neznámá" s:ZSOD[",," ZSOD=$p(ZSOD,",,")_","_$p(ZSOD,",,",2)
 ......s:$e(ZSOD,$l(ZSOD))="," ZSOD=$e(ZSOD,1,($l(ZSOD)-1)) s ZSOD=ZSOD_" ->"
 ......//
 ......s:ZSDO="" ZSDO="neznámá" s:ZSDO[",," ZSDO=$P(ZSDO,",,")_","_$P(ZSDO,",,",2)
 ......s:$e(ZSDO,$l(ZSDO))="," ZSDO=$e(ZSDO,1,($l(ZSDO)-1)) s ZSDO="-> "_ZSDO
 ......//
 ......S FITUR(TOD,"ZS")=ZSOD_"~"_ZSDO
 ....I (TYP=6) D
 .....S TMPTX="přej." 
 .....S FITUR(TOD)=TDO_"~"_TMPTX_"~"_TYP
 ...// projedu pole turnusu pro zobrazeni, upravim to tam, kde je to tesne a nenavazuje to
 ...S TOD="" F  S TOD=$O(FITUR(TOD)) Q:TOD=""  D
 ....S NTOD=$O(FITUR(TOD)) Q:NTOD=""
 ....S VAL=$G(FITUR(TOD)) I (TOD+$P(VAL,"~",1))'<NTOD S $P(VAL,"~",1)=(NTOD-TOD) S FITUR(TOD)=VAL
 ...// kmenova linka
 ...S KLI="",FILI="",POC=0 F  S FILI=$O(FILI(FILI)) Q:FILI=""  I +$G(FILI(FILI))>POC S POC=FILI(FILI),KLI=FILI
 ...// turnus
 ...K TBL
 ...S TBL(1)="<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;<bd='TLR'>;"
 ...S bdram="<bd='LR'>" S:'$G(in("dta",3)) bdram="<bd='BLR'>" 
 ...S TBL(2)=bdram_TUR_";"_bdram_KLI_";"_bdram_KMENRZ_";"_bdram_PLATN_";"_bdram_ODPRHOD_";"_bdram_PROVHOD_";"_bdram_ODPOHOD_";"_bdram_MAXOBS_";"
 ...S TBL(3)="<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;<bd='BLR'>;"
 ...S I=0 F  Q:'(I<HSLP)  D
 ....S I=I+1
 ....I $D(FITUR(I)) D  Q
 .....S TYP=$P(FITUR(I),"~",3) S COLOR=COLOR("YELLOW") S:(TYP=6) COLOR=COLOR("GREEN")
 .....// zastavka
 .....S:+$G(in("dta",3)) TBL(1)=TBL(1)_"<sp='C"_$P(FITUR(I),"~",1)_"'><pos='L'>"_"<cl='"_COLOR_"'>"_"<bd='TLR'>"_$p($g(FITUR(I,"ZS")),"~",1)_"</cl>"_";"
 .....// turnus
 .....S TBL(2)=TBL(2)_"<sp='C"_$P(FITUR(I),"~",1)_"'>"_"<cl='"_COLOR_"'>"_bdram_$P(FITUR(I),"~",2)_"</cl>"_";"
 .....// zastavka
 .....S:+$G(in("dta",3)) TBL(3)=TBL(3)_"<sp='C"_$P(FITUR(I),"~",1)_"'><pos='R'>"_"<cl='"_COLOR_"'>"_"<bd='BLR'>"_$p($g(FITUR(I,"ZS")),"~",2)_"</cl>"_";"
 .....//
 .....S I=I+$P(FITUR(I),"~",1)-1
 ....S TBL(1)=TBL(1)_";" S TBL(2)=TBL(2)_";" S TBL(3)=TBL(3)_";"
 ...S:+$G(in("dta",3)) @glb@(1,"tr",$O(@glb@(1,"tr",""),-1)+1)=TBL(1)
 ...S @glb@(1,"tr",$O(@glb@(1,"tr",""),-1)+1)=TBL(2)
 ...S:+$G(in("dta",3)) @glb@(1,"tr",$O(@glb@(1,"tr",""),-1)+1)=TBL(3)
 q 0
 //
err s $zt="" k out q:$g(err)'="" "1~"_err  q "1~"_$ze 
]]></Routine>


<Routine name="OBapiEDTurImport" type="INT" languagemode="0" timestamp="65622,56870.988915"><![CDATA[
OBapiEDTurImport q
 // import turnusu
importTurEdisonNew(idfa,nmsp,in,out)
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err=""
 // import turnusu format EDISON - novy format, vse do jednoho souboru
 // in:
 //*in("dta",1)=delimiter ";"
 //*in("dta",2)=znak "," náhradní znak v textu za oddělovač
 //*in("dta",3)=delimiterItemArr "|" oddelovac vice hodnot
 //*in("dta",4)=idprv ... provoz, kam turnusy nacist
 // in("glb")=glb             ... global pro data
 // in("idos")=mlp_"~"_loginname_"~"_fullname
 // in("arr",1,idtur)="" id turnusu pro import (idprv|turnus|datum_cas_var)
 // data v
 // @glb@("arr",didx,"dta",cnt)=veta
 // didx je data index
 //  1 = zakladni udaje turnusu
 //  2 = casovy prubeh turnusu
 //  3 = ridici, zakladni udaje
 //  4 = ridici, mzdove udaje
 //  5 = omezeni
 //  6 = poznamky zahlavi
 //  7 = poznamky zapati
 //  8 = poznamky na DZVA
 //  1000 = ciselnik zastavek
 //  1001 = ciselnik cinnosti
 //  1002 = ciselnik kvality vozidla
 // out:
 // out("msg",cnt)=msg
 //pracovni global
 s mywrkglb=$$gWrkALVAADGlb^OBapiED($$gWrkALVAAD^OBapiEDFce()) k @mywrkglb
 s mywrkglbzsti=$$gWrkALVAADGlb^OBapiED($$gWrkALVAAD^OBapiEDFce()) k @mywrkglbzsti
 s mywrkglbzsto=$$gWrkALVAADGlb^OBapiED($$gWrkALVAAD^OBapiEDFce()) k @mywrkglbzsto
 //global pro prenos dat
 s glb=$g(in("glb")) i glb="" s err="glb=" zt
 //parametry
 s del=$g(in("dta",1)) s delsub=$g(in("dta",2)) s delarr=$g(in("dta",3)) s idprv=$g(in("dta",4))
 s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) i +err zt
 s idos=$g(in("idos")) s usr=$tr(idos,"~","|")
 //projdu glb a do pracovniho glb si vytvorim data turnusu
 s didx="" f {
	 s didx=$o(@glb@("arr",didx)) i didx="" q
	 s mycnt="" f {
		 s mycnt=$o(@glb@("arr",didx,"dta",mycnt)) i mycnt="" q
		 s val=$g(@glb@("arr",didx,"dta",mycnt))
		 //zakladni udaje
		 i didx=1 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 f polcnt=4:1:$l(val,del) {
				 s myind=(polcnt-3)
				 s myval=$p(val,del,polcnt)
				 //konverze cisla 
		 		 i (myval?0.1"-".N1","1.N) s myval=$tr(myval,",",".")
				 //konverze oddelovace
				 s myval=$tr(myval,delsub,del)
				 //konverze vice hodnot
				 s myval=$tr(myval,delarr,"~")
				 //datove upravy
				 //konverze dd.mm.rrrr -> hrl
		 		 i (myind=2)!(myind=11) {
			 		 i myval {
				 		 s myval=$$dn^OBapiED(myval)
			 		 }
			 		 else {
				 		 s myval=""
			 		 }
		 		 }
		 		 //konverze h:m -> h.m (zacatek a konec)
		 		 i (myind=5)!(myind=6) {
			 		 s myval=+$tr(myval,":",".")
		 		 }
		 		 //konverze h.m na min (dodk je v h.m)
		 		 i (myind=15) {
			 		 i myval {
				 		 s myval=(myval\60)+((myval#60)/100)
			 		 }
			 		 else {
				 		 s myval=""
			 		 }
		 		 }
		 		 s @mywrkglb@(1,idprv,tu,hrl,"dta",myind)=myval
		 	 }
		 }
		 //casovy prubeh udaje
		 i didx=2 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s tm=$p(val,del,4) i (tm?0.1"-".N1","1.N) s tm=$tr(tm,",",".")
			 f polcnt=5:1:$l(val,del) {
				 s myind=(polcnt-4)
				 s myval=$p(val,del,polcnt)
				 //konverze cisla 
		 		 i (myval?0.1"-".N1","1.N) s myval=$tr(myval,",",".")
				 //konverze oddelovace
				 s myval=$tr(myval,delsub,del)
				 s @mywrkglb@(1,idprv,tu,hrl,"arr","tur",tm,"dta",myind)=myval
				 //nachytani zastavek, co potrebuji
				 s idcin=$g(@mywrkglb@(1,idprv,tu,hrl,"arr","tur",tm,"dta",2))
				 i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) {
					 f inx=9,10 {
						 s zst=$g(@mywrkglb@(1,idprv,tu,hrl,"arr","tur",tm,"dta",inx))
					 	 i zst'="" s @mywrkglb@(-1000,zst)=""
					 }
				 }
		     }
		 }
		 //ridici, zakladni udaje
		 i didx=3 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 f polcnt=4:1:$l(val,del) {
				 s myind=(polcnt-3)
				 s myval=$p(val,del,polcnt)
				 //konverze cisla 
		 		 i (myval?0.1"-".N1","1.N) s myval=$tr(myval,",",".")
				 //konverze oddelovace
				 s myval=$tr(myval,delsub,del)
				 //konverze vice hodnot
				 s myval=$tr(myval,delarr,"~")
				 s @mywrkglb@(1,idprv,tu,hrl,"arr","drv","dta",myind)=myval
			 }
				 
		 }
		 //ridici, mzdove udaje
		 i didx=4 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s cnt=$p(val,del,4)
			 f polcnt=5:1:$l(val,del) {
				 s myind=(polcnt-4)
				 s myval=$p(val,del,polcnt)
				 //konverze cisla 
		 		 i (myval?0.1"-".N1","1.N) s myval=$tr(myval,",",".")
				 //konverze oddelovace
				 s myval=$tr(myval,delsub,del)
				 //konverze vice hodnot (pole hodnot v polozce) "~" -> delarr
		 		 i (myind=12)!(myind=13) {
			 		 s myval=$tr(myval,delarr,"~")
		 	     }
				 s @mywrkglb@(1,idprv,tu,hrl,"arr","drv","arr",cnt,"dta",myind)=myval
		     }
		 }
		 //dalsi platnosti
		 i didx=5 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s idomz=$p(val,del,4)
			 s cnt=$p(val,del,5)
			 s ddmmod=$p(val,del,6)
			 s ddmmdo=$p(val,del,7)
			 //i ddmmdo=ddmmod s ddmmdo=""
	 		 i $e(ddmmod,$l(ddmmod))="." s ddmmod=$e(ddmmod,1,$l(ddmmod)-1)
			 i $e(ddmmdo,$l(ddmmdo))="." s ddmmdo=$e(ddmmdo,1,$l(ddmmdo)-1)
			 s @mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz,cnt)=ddmmod_":"_ddmmdo 
		 }
		 //poznamky zahlavi
		 i didx=6 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s cnt=$p(val,del,4)
			 s myval=$p(val,del,5)
			 //konverze oddelovace
			 s myval=$tr(myval,delsub,del)
			 s @mywrkglb@(1,idprv,tu,hrl,"arr","txh",cnt)=myval
		 }
		 //poznamky zapati
		 i didx=7 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s cnt=$p(val,del,4)
			 s myval=$p(val,del,5)
			 //konverze oddelovace
			 s myval=$tr(myval,delsub,del)
			 s @mywrkglb@(1,idprv,tu,hrl,"arr","txp",cnt)=myval
		 }
		 //poznamky na dzva
		 i didx=8 {
			 s idprv=$p(val,del,1) s tu=$p(val,del,2) s dat=$p(val,del,3) s hrl=$$dn^OBapiED(dat)
			 //kontrola, zda turnus nahravam
			 s idtur=idprv_"|"_tu_"|"_dat i '$d(in("arr",1,idtur)) continue
			 s cnt=$p(val,del,4)
			 s myval=$p(val,del,5)
			 //konverze oddelovace
			 s myval=$tr(myval,delsub,del)
			 s @mywrkglb@(1,idprv,tu,hrl,"arr","txd",cnt)=myval
		 }
		 //zastavky
		 i didx=1000 {
			 s zst=$p(val,del,1) 
			 s naz=$p(val,del,2) s naz=$tr(naz,delsub,del)
			 s blo=$p(val,del,3) s blo=$tr(blo,delsub,del)
			 s crz=$p(val,del,4) s crz=$tr(crz,delsub,del)
			 s @mywrkglb@(1000,zst,"dta",1)=naz
			 s @mywrkglb@(1000,zst,"dta",2)=blo
			 s @mywrkglb@(1000,zst,"dta",3)=crz
		 }
	 }
 }
 //zabaleni omezeni do vety
 s idprv="" f {
	 s idprv=$o(@mywrkglb@(1,idprv)) i idprv="" q
	 s tu="" f {
		 s tu=$o(@mywrkglb@(1,idprv,tu)) i tu="" q
		 s hrl="" f {
			 s hrl=$o(@mywrkglb@(1,idprv,tu,hrl)) i hrl="" q
			 s idomz="" f {
				 s idomz=$o(@mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz)) i idomz="" q
				 s myval=""
				 s cnt="" f {
					 s cnt=$o(@mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz,cnt)) i cnt="" q
					 s val=$g(@mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz,cnt))
					 i myval'="" s myval=myval_"#"
					 s myval=myval_val
				 }
				 k @mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz)
				 s @mywrkglb@(1,idprv,tu,hrl,"arr","omz",idomz)="@"_myval
			 }
		 }
	 }
 }
 //zavedeni novych zastavek do databaze + konverzni tabulka 
 s zst="" f {
	 s zst=$o(@mywrkglb@(-1000,zst)) i zst="" q
	 i '$d(@mywrkglb@(-1000,zst)) continue
	 s naz=$g(@mywrkglb@(1000,zst,"dta",1))
	 s blo=$g(@mywrkglb@(1000,zst,"dta",2))
	 s crz=$g(@mywrkglb@(1000,zst,"dta",3))		 
	 //lokalni zastavka
	 i zst["L" {
		 s newzst=""
 	     k arrloczst s err=$$gCis^OBapiED(idfa,nmsp,3,"",.arrloczst) i +err zt
 		 s loczst="" f {
	 		  s loczst=$o(arrloczst("arr",loczst)) i (loczst="")!(newzst) q
 			  i naz=$p($g(arrloczst("arr",loczst)),"~",2) {
	 			  s newzst=loczst
 			  }
 		 }
 	 	 i newzst="" {
	 	 	 s newzst=($o(arrloczst("arr",""),-1))+1
 	 	 	 s err=$$sCisItm^OBapiED(idfa,nmsp,3,newzst,$$cnvBezDia^OBapiED(naz)_"~"_naz,"","") i +err zt
 	 	 }
 	 	 s @mywrkglb@(-1000,zst)=newzst_"/L"
	 }
	 else {
		 s @mywrkglbzsti@(zst)=$p(naz,",",1)_"~"_$p(naz,",",2)_"~"_$p(naz,",",3)_"~"_blo	 
	 }
 }
 i $d(@mywrkglbzsti) {
	 k arri s arri("zapsat")=1
 	 s err=##class(ALVA.JRMAIN.MLAPI).impZst(idfa,nmsp,usr,mywrkglbzsti,mywrkglbzsto,.arri,"") i +err zt
 	 s zst="" f {
	 	 s zst=$o(@mywrkglbzsto@(zst)) i zst="" q
 		 s newzst=$g(@mywrkglbzsto@(zst))
 		 s @mywrkglb@(-1000,zst)=newzst
 	 }
 }
 //zapis turnusu do databaze
 s idprv="" f {
	 s idprv=$o(@mywrkglb@(1,idprv)) i idprv="" q
	 s tu="" f {
		 s tu=$o(@mywrkglb@(1,idprv,tu)) i tu="" q
		 s hrl="" f {
			 s hrl=$o(@mywrkglb@(1,idprv,tu,hrl)) i hrl="" q
			 k myarrtu m myarrtu=@mywrkglb@(1,idprv,tu,hrl)
			 //konverze zastavek
			 s tm="" f {
				 s tm=$o(myarrtu("arr","tur",tm)) i tm="" q
				 s idcin=$g(myarrtu("arr","tur",tm,"dta",2))
				 i (idcin=4)!(idcin=5)!(idcin=6)!(idcin=7) {
					 f inx=9,10 {
						 s zst=$g(myarrtu("arr","tur",tm,"dta",inx))
					 	 i zst'="" {
						 	 s myarrtu("arr","tur",tm,"dta",inx)=$g(@mywrkglb@(-1000,zst))
					 	 }
					 }
				 }	 
			 }
			 //prepocet turnusu
		     s err=$$calTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarrtu,"","") i +err zt
			 //jeste tam poslat idos
			 s myarrtu("arr","cop","dta",1)=$h
			 s myarrtu("arr","cop","dta",2)=$p(idos,"~",3)
			 s err=$$sTur^OBapiED(idfa,nmsp,zp,tu,hrl,.myarrtu,"") i +err zt
		 }
	 }
 }
 k @mywrkglb
 k @mywrkglbzsti
 k @mywrkglbzsto
 q 0
importTurEdison(idfa,nmsp,wrk,in,out)
 // import turnusu format EDISON
 // in
 // in("idos")=mlp_"~"_loginname_"~"_fullname
 // data jsou v ^CacheTempJB(wrk,...) stejny format jako v $$exportTurEdison
 // out
 // out("msg",prv,tu,hrl,cnt)=zprava
 // out("arr",1,prv,tu,hrl)="" ... nactene turnusy
 s $zt="err" k out s err=""
 n (idfa,nmsp,wrk,in,out)
 s D=":"
 // zavedu lokalni zastavky do db a udelam si konverzni tabulku
 s zstId="" f  s zstId=$o(^CacheTempJB(wrk,3,zstId)) q:zstId=""  d
 .s zstPopis=$p($g(^CacheTempJB(wrk,3,zstId)),";",2)
 .s newZstId=""
 .k arrloczst s err=$$gCis^OBapiED(idfa,nmsp,3,"",.arrloczst) zt:+err "merr" s err=""
 .s locZstId="" f  s locZstId=$o(arrloczst("arr",locZstId)) q:(locZstId="")!(newZstId)  d
 ..i zstPopis=$p($g(arrloczst("arr",locZstId)),"~",2) s newZstId=locZstId
 .i newZstId="" d
 ..s newZstId=($o(arrloczst("arr",""),-1))+1
 ..s err=$$sCisItm^OBapiED(idfa,nmsp,3,newZstId,$$cnvBezDia^OBapiED(zstPopis)_"~"_zstPopis,"","") zt:+err "merr" s err=""
 .s ^CacheTempJB(wrk,3,zstId,newZstId)=""
 // zavedu zastavky dle JR do databaze a udelam konverzni tabulku
 s mywrk=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(mywrk)
 i $o(^CacheTempJB(wrk,4,""))'="" d
 .s zstId="" f  s zstId=$o(^CacheTempJB(wrk,4,zstId)) q:zstId=""  d
 ..s zstPopis=$g(^CacheTempJB(wrk,4,zstId))
 ..s ^||wrk.ALVA.AD(mywrk,"I",zstId)=$p(zstPopis,";",2)_"~"_$p(zstPopis,";",3)_"~"_$p(zstPopis,";",4)_"~"_$p(zstPopis,";",5)
 .k arri s arri("zapsat")=1
 .s err=##class(ALVA.JRMAIN.MLAPI).impZst(idfa,nmsp,$tr($g(in("idos")),"~","|"),"^||wrk.ALVA.AD("_mywrk_",""I"")","^||wrk.ALVA.AD("_mywrk_",""O"")",.arri,"") zt:+err "merr" s err=""
 .s zstId="" f  s zstId=$o(^||wrk.ALVA.AD(mywrk,"O",zstId)) q:zstId=""  d
 ..s newZstId=$g(^||wrk.ALVA.AD(mywrk,"O",zstId)) i newZstId=""
 ..s ^CacheTempJB(wrk,4,zstId,newZstId)=""
 k ^||wrk.ALVA.AD(mywrk)
 //  ==========================================================
 s prv="" f  s prv=$o(^CacheTempJB(wrk,1,prv)) q:prv=""  d
 .s err=$$mkZP^OBapiED(idfa,prv,"","",.zp) zt:+err "merr" s err=""
 .s turId="" f  s turId=$o(^CacheTempJB(wrk,1,prv,turId)) q:turId=""  d
 ..s platiOd="" f  s platiOd=$o(^CacheTempJB(wrk,1,prv,turId,platiOd)) q:platiOd=""  d
 ...k arr
 ...s val=$g(^CacheTempJB(wrk,1,prv,turId,platiOd))
 ...// hlavicka turnusu
 ...s arr("dta",1)=""
 ...s arr("dta",2)=+$h
 ...s arr("dta",3)=0 s:+$p(val,";",5) arr("dta",3)=1                  					//posila
 ...s arr("dta",4)=$$md^OBapiED($p(val,";",7))                        					//pocet dnu
 ...s arr("dta",5)=$$mh^OBapiED($p(val,";",6)) 						  					//zacatek
 ...s arr("dta",6)=$$mh^OBapiED($$mmUpr($p(val,";",7)))				  					//konec hh.mm	! vyresit vicedenni
 ...s pl="" s plall=".gbXdYa+PUTAVSMN1234567"
 ...f cnt=1:1:$l(plall) s:$p(val,";",8)[$e(plall,cnt) pl=pl_$e(plall,cnt)
 ...s:pl="" pl="."
 ...s dpl=$p(val,";",9) s:dpl="" dpl=2					              					//dlouh.platnost
 ...s arr("dta",7)=pl_"~"_dpl
 ...s arr("dta",8)=""
 ...s arr("dta",9)=$p(val,";",10)									  					//sezona od
 ...s arr("dta",10)=$p(val,";",11)									  					//sezona do
 ...s arr("dta",11)=$$nd^OBapiED(platiOd,1)                             				//plati od
 ...s arr("dta",12)=$p(val,";",14)									  					//kmenova linka
 ...s arr("dta",13)=""           									  					//typ auta
 ...s arr("dta",14)=$p(val,";",17)									  					//prirazka phm
 ...s arr("dta",15)=$$mh^OBapiED($p(val,";",18))						  				//dodk
 ...s arr("dta",16)=$p(val,";",20) 									  					//koef mzdy
 ...s:+(arr("dta",16))=0 arr("dta",16)=100							  					//koef mzdy
 ...s arr("dta",17)="" 																	// osa
 ...s arr("dta",18)="" 																	// PPOS
 ...s arr("dta",19)="" 																	// PAUT
 ...s arr("dta",20)=$p(val,";",19)									  					//dodknoc
 ...s arr("dta",21)=$p(val,";",16)									  					//diety
 ...s arr("dta",22)=+$p(val,";",21)									  					//fix.pripl.
 ...s arr("dta",23)=$p(val,";",23)                                    					//uherak
 ...s arr("dta",24)=""                                                					//procentocek
 ...s arr("dta",25)=""
 ...s arr("dta",26)=$p(val,";",22)									  					//nocovne pr.
 ...s arr("dta",27)=$p(val,";",15)									  					//kmen rz
 ...s arr("dta",28)=""                                                					//dislokace
 ...s arr("dta",29)=""                                                					//fiktivni
 ...s arr("dta",30)=""                                                					//cislo objednavky
 ...s arr("dta",31)=$p(val,";",25)                                    					//oznaceni pro strojky
 ...s arr("dta",32)=""                                                					//popis kmen.linky
 ...s arr("dta",33)="" i $p(val,";",26) s arr("dta",33)=$$dn^OBapiED($p(val,";",26))	//hrl plati do
 ...s arr("dta",34)=$p(val,";",27)														//fixni priplatek k cekani
 ...s arr("dta",35)=+$p(val,";",30)														//zpusob proplaceni diet
 ...s arr("dta",36)=+$p(val,";",28)														//objizdkovy
 ...s arr("dta",37)=+$p(val,";",29)														//nizkopodlazni
 ...s arr("dta",53)=+$p(val,";",31)														//deleny
 ...s arr("dta",60)=+$p(val,";",32)														//neproplacet cekani
 ...s arr("dta",61)=+$p(val,";",33)														//nevyhodnocovat VD
 ...s arr("dta",64)=+$p(val,";",34)														//neobsazovat plan 
 ...s arr("dta",70)=$p(val,";",35)														//kurs
 ...i $p(val,";",36)'="" d																//dopravni typ v pripade, ze je zaveden v ciselniku
 ....k isincis s err=$$isCisItm^OBapiED(idfa,nmsp,6,$p(val,";",36),"",.isincis)
 ....i +$g(isincis) s arr("dta",13)=$p(val,";",36)
 ....k isincis
 ...// nejede od - do
 ...i ($p(val,";",12)'="")!($p(val,";",13)'="") s arr("arr",1,22)="@"_$p(val,";",12)_":"_$p(val,";",13)_"#"
 ...// prubeh turnusu
 ...// ==============
 ...// projdu turnus, pokud je nasledujici cas <predchozi, zacnu pripocitavat 1440 - dalsi den
 ...s oldmmod=""
 ...s cnt="" f  s cnt=$o(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)) q:cnt=""  d
 ....s mmod=$p($g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)),";",5)
 ....s mmdo=$p($g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)),";",6)
 ....// prejezd pres pulnoc v ramci spoje
 ....i mmdo<mmod f  q:mmdo'<mmod  s mmdo=mmdo+1440 s $p(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt),";",6)=mmdo
 ....// =================================
 ....i oldmmod="" s oldmmod=mmod q
 ....i mmod<oldmmod d
 .....s pripmm=0 f  s pripmm=pripmm+1440 q:((mmod+pripmm)'<oldmmod)
 .....s $p(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt),";",5)=$p($g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)),";",5)+pripmm
 .....s $p(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt),";",6)=$p($g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)),";",6)+pripmm
 ....s oldmmod=$p($g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)),";",5)
 ...f cnttu=1:1:2 d
 ....// turnus projdu ve dvou krocich, v prvnim vyridim vykonove veci, ve druhem poznamky, zac, konec,...
 ....s cnt="" f  s cnt=$o(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt)) q:cnt=""  d
 .....s val=$g(^CacheTempJB(wrk,2,prv,turId,platiOd,cnt))
 .....s mmod=$p(val,";",5) s mmdo=$p(val,";",6) s mycin=$p(val,";",7) s cinupr=0
 .....s cin=""
 .....i mycin<18 s cin=mycin
 .....i mycin=18 s cin=10 s cinupr=4
 .....i cin="" q
 .....//u informace, kde je cas ve stejnou dobu jako cinnost dam do do=od, pred tim se to mohlo posunout o jeden den
 .....i mycin=8 s mmdo=mmod
 .....//============================================================================================================
 .....s km=+$p(val,";",8)
 .....s mm=$p(val,";",9) s:'mm mm=mmdo-mmod
 .....s li=$p(val,";",10)
 .....s sp=$p(val,";",11)
 .....s mapr=$p(val,";",12) s mapo=$p(val,";",13) s ispemapr=$p(val,";",20) s ispemapo=$p(val,";",21)
 .....// zastavka od-do + transformace lokalnich
 .....s zstod=$p(val,";",14) i zstod'="" d
 ......i $d(^CacheTempJB(wrk,3,zstod)) s zstod=$o(^CacheTempJB(wrk,3,zstod,""))_"/L"
 .....s zstdo=$p(val,";",15) i zstdo'="" d
 ......i $d(^CacheTempJB(wrk,3,zstdo)) s zstdo=$o(^CacheTempJB(wrk,3,zstdo,""))_"/L"
 .....// zastavka od-do + transformace dle JR
 .....i zstod="" s zstod=$p(val,";",17) i zstod'="" d
 ......i $d(^CacheTempJB(wrk,4,zstod)) s zstod=$o(^CacheTempJB(wrk,4,zstod,""))
 .....i zstdo="" s zstdo=$p(val,";",18) i zstdo'="" d
 ......i $d(^CacheTempJB(wrk,4,zstdo)) s zstdo=$o(^CacheTempJB(wrk,4,zstdo,""))
 .....s txt=$p(val,";",16)
 .....//
 .....i cnttu=1 q:(cin=1)!(cin=2)!(cin=8)
 .....i cnttu=2 q:'((cin=1)!(cin=2)!(cin=8))
 .....//
 .....s val=""
 .....// zacatek
 .....i cin=1 d  q
 ......s immod=mmod s:$d(arr("arr","tur",mmod)) immod=mmod-.01
 ......s arr("arr","tur",immod,"dta",1)=mmdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 .....// konec 
 .....i cin=2 d  q
 ......s immod=mmod s:$d(arr("arr","tur",mmod)) immod=mmod+.01
 ......s arr("arr","tur",immod,"dta",1)=mmdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 .....// spoj
 .....i cin=3 d  q
 ......s immod=mmod
 ......s immdo=mmdo
 ......//posun o pevne manipulace
 ......i ispemapr s immod=immod-mapr
 ......i ispemapo s immdo=immdo+mapo
 ......//doplneni * do plovoucich manipulaci
 ......i 'ispemapr s mapr="*"_mapr
 ......i 'ispemapo s mapo="*"_mapo
 ......s arr("arr","tur",immod,"dta",1)=immdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 ......s arr("arr","tur",immod,"dta",3)=km
 ......s arr("arr","tur",immod,"dta",4)=mm
 ......s arr("arr","tur",immod,"dta",5)=li
 ......s arr("arr","tur",immod,"dta",6)=sp
 ......s arr("arr","tur",immod,"dta",7)=mapr
 ......s arr("arr","tur",immod,"dta",8)=mapo
 .....// pristaveni,odstaveni,prejezd,rezijni
 .....i (cin=4)!(cin=5)!(cin=6)!(cin=7) d  q
 ......s immod=mmod
 ......s arr("arr","tur",immod,"dta",1)=mmdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 ......s arr("arr","tur",immod,"dta",3)=km
 ......s arr("arr","tur",immod,"dta",4)=mm
 ......s arr("arr","tur",immod,"dta",9)=zstod
 ......s arr("arr","tur",immod,"dta",10)=zstdo
 .....// informace
 .....i cin=8 d  q
 ......s immod=mmod s:$d(arr("arr","tur",mmod)) immod=mmod+.01
 ......s arr("arr","tur",immod,"dta",1)=mmdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 ......s arr("arr","tur",immod,"dta",12)=txt
 .....// bp,ostPr,nocov,prerusPr,jidlo,dodk,odp
 .....i (cin=9)!(cin=10)!(cin=11)!(cin=12)!(cin=13)!(cin=14)!(cin=15) d  q
 ......s immod=mmod
 ......s arr("arr","tur",immod,"dta",1)=mmdo
 ......s arr("arr","tur",immod,"dta",2)=cin
 ......s arr("arr","tur",immod,"dta",4)=mm
 ......i cin=10 s arr("arr","tur",immod,"dta",11)=cinupr
 ...// ==========================================================================
 ...// kontrola na zacatek a konec turnusu + doplneni zacatku do vety (pokud neni)
 ...// ==========================================================================
 ...// od
 ...s mmod=$o(arr("arr","tur","")) i mmod d
 ....i $g(arr("arr","tur",mmod,"dta",2))'=1 d
 .....s immod=mmod-.01
 .....s arr("arr","tur",immod,"dta",1)=mmod
 .....s arr("arr","tur",immod,"dta",2)=1
 .....s out("msg",prv,turId,platiOd,$i(out("msg",prv,turId,platiOd)))="doplněn začátek v "_$j($$mh^OBapiED(mmod),0,2)
 ....i '+$g(arr("dta",5)) s arr("dta",5)=$$mh^OBapiED(mmod)	
 ...// do
 ...s mmod=$o(arr("arr","tur",""),-1) i mmod d
 ....i $g(arr("arr","tur",mmod,"dta",2))'=2 d
 .....s mmod=$g(arr("arr","tur",mmod,"dta",1))
 .....s immod=mmod
 .....s arr("arr","tur",immod,"dta",1)=mmod
 .....s arr("arr","tur",immod,"dta",2)=2
 .....s out("msg",prv,turId,platiOd,$i(out("msg",prv,turId,platiOd)))="doplněn konec v "_$j($$mh^OBapiED(mmod),0,2)
 ....i '+$g(arr("dta",6)) d
 .....s arr("dta",6)=$$mh^OBapiED($$mmUpr((mmod)))
 .....// uprava poctu dnu
 .....s arr("dta",4)=$$md^OBapiED((mmod))
 ...// ========================================================================================
 ...// kotrola na prazdne cinnosti, od=do, neni jizda, nejsou km  - zrusit a zapis do protokolu
 ...// ========================================================================================
 ...s mmod="" f  s mmod=$o(arr("arr","tur",mmod),1) q:mmod=""  d
 ....s cin=$g(arr("arr","tur",mmod,"dta",2))
 ....// prejezdy, rezijni km
 ....i (cin=4)!(cin=5)!(cin=6)!(cin=7) d
 .....s km=$g(arr("arr","tur",mmod,"dta",3)) s mm=$g(arr("arr","tur",mmod,"dta",4))
 .....i ('mm)!('km) d
 ......k arr("arr","tur",mmod)
 ......s out("msg",prv,turId,platiOd,$i(out("msg",prv,turId,platiOd)))="zrušen přejezd/režijní jízda v "_$j($$mh^OBapiED(mmod),0,2)_" nulová doba jízdy nebo nulové km"
 ....// prace bez km 
 ....i (cin>8)&(cin<16) d
 .....s mm=$g(arr("arr","tur",mmod,"dta",4))
 .....i ('mm) d
 ......k arr("arr","tur",mmod)
 ......s out("msg",prv,turId,platiOd,$i(out("msg",prv,turId,platiOd)))="zrušena a činnost v "_$j($$mh^OBapiED(mmod),0,2)_" nulová doba"
 ...// ==========================================================================
 ...// kontrola na zastavky u prejezdu, pokud nejsou, pokusim se je odvodit
 ...// ==========================================================================
 ...// zastavka od
 ...s mmod="" f  s mmod=$o(arr("arr","tur",mmod),1) q:mmod=""  d
 ....s cin=$g(arr("arr","tur",mmod,"dta",2))
 ....i (cin=4)!(cin=5)!(cin=6)!(cin=7) d
 .....s zst=$g(arr("arr","tur",mmod,"dta",9)) q:zst'=""
 .....s tmpmm=mmod s quit=0 f  s tmpmm=$o(arr("arr","tur",tmpmm),-1) q:(tmpmm="")!(quit)  d
 ......s tmpcin=$g(arr("arr","tur",tmpmm,"dta",2))
 ......i (tmpcin=3)!(tmpcin=4)!(tmpcin=5)!(tmpcin=6)!(tmpcin=7) d
 .......s quit=1
 .......i (tmpcin=4)!(tmpcin=5)!(tmpcin=6)!(tmpcin=7) d  q
 ........s zst=$g(arr("arr","tur",tmpmm,"dta",10))
 .......i (tmpcin=3) d  q
 ........s li=$g(arr("arr","tur",tmpmm,"dta",5)) s sp=$g(arr("arr","tur",tmpmm,"dta",6))
 ........k sparr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,platiOd,"",.sparr)
 ........s zst=$g(sparr("dta",7))
 .....i zst'="" s arr("arr","tur",mmod,"dta",9)=zst
 ...// zastavka do - posledni prejezd bez zastavky - dosadim prvni zastavku prvniho spoje
 ...s cnt=0 s mmod="" f  s mmod=$o(arr("arr","tur",mmod),-1) q:(mmod="")!(cnt)  d
 ....s cin=$g(arr("arr","tur",mmod,"dta",2))
 ....i (cin=3)!(cin=4)!(cin=5)!(cin=6)!(cin=7) d
 .....s cnt=1
 .....i (cin=6) d
 ......s zst=$g(arr("arr","tur",mmod,"dta",10)) q:zst'=""
 ......// vyhledam prvni spoj
 ......s tmpmm="" s quit=0 f  s tmpmm=$o(arr("arr","tur",tmpmm),1) q:(tmpmm="")!(quit)  d
 .......s tmpcin=$g(arr("arr","tur",tmpmm,"dta",2))
 .......i (tmpcin=3) d
 ........s quit=1
 ........s li=$g(arr("arr","tur",tmpmm,"dta",5)) s sp=$g(arr("arr","tur",tmpmm,"dta",6))
 ........k sparr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,platiOd,"",.sparr)
 ........s zst=$g(sparr("dta",6))
 ......i zst'="" s arr("arr","tur",mmod,"dta",10)=val
 ...// ============================================================================
 ...// zastavka do - ostatni
 ...s mmod="" f  s mmod=$o(arr("arr","tur",mmod),-1) q:mmod=""  d
 ....s cin=$g(arr("arr","tur",mmod,"dta",2))
 ....i (cin=4)!(cin=5)!(cin=6)!(cin=7) d
 .....s zst=$g(arr("arr","tur",mmod,"dta",10)) q:zst'=""
 .....s tmpmm=mmod s quit=0 f  s tmpmm=$o(arr("arr","tur",tmpmm),1) q:(tmpmm="")!(quit)  d
 ......s tmpcin=$g(arr("arr","tur",tmpmm,"dta",2))
 ......i (tmpcin=3)!(tmpcin=4)!(tmpcin=5)!(tmpcin=6)!(tmpcin=7) d
 .......s quit=1
 .......i (tmpcin=4)!(tmpcin=5)!(tmpcin=6)!(tmpcin=7) d  q
 ........s zst=$g(arr("arr","tur",tmpmm,"dta",9))
 .......i (tmpcin=3) d  q
 ........s li=$g(arr("arr","tur",tmpmm,"dta",5)) s sp=$g(arr("arr","tur",tmpmm,"dta",6))
 ........k sparr s err=$$gSp^OBapiED(idfa,nmsp,li,sp,platiOd,"",.sparr)
 ........s zst=$g(sparr("dta",6))
 .....i zst'="" s arr("arr","tur",mmod,"dta",10)=zst
 ...// =========================
 ...// poznamky nad a pod turnus
 ...// =========================
 ...// typId,cntId
 ...s typId="" f  s typId=$o(^CacheTempJB(wrk,5,prv,turId,platiOd,typId)) q:typId=""  d
 ....s cntId="" f  s cntId=$o(^CacheTempJB(wrk,5,prv,turId,platiOd,typId,cntId)) q:cntId=""  d
 .....s val=$p($g(^CacheTempJB(wrk,5,prv,turId,platiOd,typId,cntId)),";",7) q:val=""
 .....i typId=1 d
 ......d formatTxt(.val,50)
 ......s cnt="" f  s cnt=$o(val(cnt)) q:cnt=""  d
 .......s val=$g(val(cnt)) q:val=""
 .......s arr("arr","txh",($o(arr("arr","txh",""),-1)+1))=val
 .....i typId=2 d
 ......d formatTxt(.val,76)
 ......s cnt="" f  s cnt=$o(val(cnt)) q:cnt=""  d
 .......s val=$g(val(cnt)) q:val=""
 .......s arr("arr","txp",($o(arr("arr","txp",""),-1)+1))=val
 ...// ========================
 ...// datumova omezeni turnusu
 ...// ========================
 ...k arrom
 ...s cnt="" f  s cnt=$o(^CacheTempJB(wrk,6,prv,turId,platiOd,cnt)) q:cnt=""  d
 ....s val=$g(^CacheTempJB(wrk,6,prv,turId,platiOd,cnt))
 ....s myidomz=$p(val,";",5)
 ....s idomz=""
 ....i myidomz=1 s idomz=12
 ....i myidomz=2 s idomz=13
 ....i myidomz=3 s idomz=22
 ....i idomz="" q
 ....s dod=$p(val,";",6)
 ....s ddo=$p(val,";",7) i ddo="" s ddo=dod
 ....i dod="" q
 ....s myhrlod=$$dn^OBapiED(dod) i 'myhrlod q
 ....s myhrldo=$$dn^OBapiED(ddo) i 'myhrldo q
 ....s arrom(idomz,myhrlod,myhrldo)=""
 ...s idomz="" f  s idomz=$o(arrom(idomz)) q:idomz=""  d
 ....s omhrlod="" f  s omhrlod=$o(arrom(idomz,omhrlod)) q:omhrlod=""  d
 .....s omhrldo="" f  s omhrldo=$o(arrom(idomz,omhrlod,omhrldo)) q:omhrldo=""  d
 ......//i $g(arrom(idomz))'="" s arrom(idomz)=$g(arrom(idomz))_"#"
 ......s arrom(idomz)=$g(arrom(idomz))_$p($$nd^OBapiED(omhrlod,0),".",1,2)_":"_$p($$nd^OBapiED(omhrldo,0),".",1,2)_"#"
 ....s arr("arr","omz",idomz)="@"_arrom(idomz)
 ...// ==========================================================================
 ...// dodelat kontrolu na to, zda do sebe cinnosti nezasahuji + protokol
 ...// ==========================================================================
 ...// prepocet turnusu
 ...s err=$$calTur^OBapiED(idfa,nmsp,zp,turId,platiOd,.arr,"","")
 ...//zapis turnusu
 ...s err=$$sTur^OBapiED(idfa,nmsp,zp,turId,platiOd,.arr,"") zt:+err "merr" s err=""
 ...s out("arr",1,prv,turId,platiOd)=""
 k ^CacheTempJB(wrk)
 q 0
mmUpr(mm)
 f  q:mm'>1440  s mm=mm-1440
 q mm
formatTxt(val,lng)
 n (val,lng)
 k arr
 i $l(val)<lng s arr($i(arr))=val s val=""
 f  q:val=""  d
 .s cnt=0 i val'="" f  s cnt=cnt+1 q:$l($p(val," ",1,cnt))>(lng-1)
 .i cnt d
 ..s:cnt>1 cnt=cnt-1
 ..s arr($i(arr))=$p(val," ",1,cnt)
 ..s val=$p(val," ",(cnt+1),$l(val," "))
 ..s:val'="" val=" "_val
 ..i $l(val)<lng s arr($i(arr))=val s val=""
 k val m val=arr
 q
 // import turnusu - mikroelektronika
importTurME(idfa,nmsp,wrk,in,out)
 // import turnusu format mikroelektronika
 // in
 // in("fullname")=fullname
 // data jsou v ^CacheTempJB(wrk,...)
 // ^CacheTempJB(wrk,prv,tur,hrl,cnt)= linka|spoj 
 // out
 // out("msg",prv,tu,hrl,cnt)=zprava
 s $zt="err" k out s err=""
 n (idfa,nmsp,wrk,in,out)
 // sestaveni turnusu, zapis
 s idprv="" f  s idprv=$o(^CacheTempJB(wrk,idprv)) q:idprv=""  d
 .s err=$$mkZP^OBapiED(idfa,idprv,"","",.zp) zt:+err "merr" s err=""
 .s idtur="" f  s idtur=$o(^CacheTempJB(wrk,idprv,idtur)) q:idtur=""  d
 ..s hrl="" f  s hrl=$o(^CacheTempJB(wrk,idprv,idtur,hrl)) q:hrl=""  d
 ...k msg s msg=""
 ...k arrtur
 ...s arrtur("dta",2)=$h
 ...s arrtur("dta",3)=0					//POSILA	(posilový 0 ne / 1 ano)
 ...s arrtur("dta",4)=1					//POCDNU	(pocet dnu)
 ...s arrtur("dta",5)=""				//ZACTUH  	(začátek hodin hh.mm)
 ...s arrtur("dta",6)=""				//KONTUH	(konec hodin hh.mm)
 ...s arrtur("dta",7)=".~2"				//PLTTDD	(platnost tydenni~dlouhodoba)
 ...s arrtur("dta",8)=""				//PLTTDX    (platnost  textove)
 ...s arrtur("dta",9)=""				//JEDEOD	(jede od dd.mm) EDISON NE
 ...s arrtur("dta",10)=""				//JEDEDO  	(jede do dd.mm) EDISON NE
 ...s arrtur("dta",11)=hrl 				//HRLCAV    (horlog casove varianty)
 ...s arrtur("dta",12)="" 				//KMENLI	(kmenova linka)
 ...s arrtur("dta",13)="" 				//TYPBUS	(typ auta - dopravni)
 ...s arrtur("dta",14)=0 				//PRIPHM	(prirazka PHM %)
 ...s arrtur("dta",15)="" 				//DODK  	(DODK h.m)
 ...s arrtur("dta",16)=100 				//KOEFMZ	(koeficient mzdy)
 ...s arrtur("dta",17)="" 				//OSA   
 ...s arrtur("dta",18)="" 				//PPOS
 ...s arrtur("dta",19)=1 				//PAUT
 ...s arrtur("dta",20)="" 				//DODKNC 	(DODK v noci %)
 ...s arrtur("dta",21)="" 				//DIE 		(diety Kc)
 ...s arrtur("dta",22)="" 				//FIXKC 	(fixni priplatek ke mzde Kc)
 ...s arrtur("dta",23)="" 				//VSMPR	    (vicesmenny priplatek 0 ne / 1 ano)
 ...s arrtur("dta",24)="" 				//PRCCEK 	(cekani do odp.doby %)
 ...s arrtur("dta",25)="" 				//DOPVD     (kolik minut se bude doplnovat do vyrovnavaci doby v pripade, ze ma malo hodin (min))
 ...s arrtur("dta",26)="" 				//PRNOC 	(priplatek nocovne Kc)
 ...s arrtur("dta",27)="" 				//KMENRZ 	(kmenova RZ)
 ...s arrtur("dta",28)="" 				//DISLOK 	(dislokace)
 ...s arrtur("dta",29)=0 				//FIKTUR  	(fiktivni tutnus 0 ne / 1 ano)  (jen pro planovani dopravy s vazbou na objednavku)
 ...s arrtur("dta",30)="" 				//COBJ    	(cislo objednavky pro fiktivni turnus)
 ...s arrtur("dta",31)=(idtur\1)		//TUSTR		(oznaceni turnusu pro prevod do strojku)
 ...s arrtur("dta",32)="" 				//KMELID    (popis kmenove linky (KMELI))
 ...s arrtur("dta",33)="" 				//HRLCAVDO  (horlog casova varianta do, ukonceni platnosti turnusu)
 ...s arrtur("dta",34)="" 				//FIXKCCEK	(fixni priplatek ke čekání Kč)
 ...s arrtur("dta",70)=(idtur\10#100)	//kurs podle cisla turnusu pr. 208041 -> 208 kmen.linka, 04 kurs, 1 provozni den (zaslal p. Jindra, Telmax) 
 ...s mtm=""
 ...s cnt="" f  s cnt=$o(^CacheTempJB(wrk,idprv,idtur,hrl,cnt)) q:cnt=""  d
 ....s idli=$p($g(^CacheTempJB(wrk,idprv,idtur,hrl,cnt)),"|",1)
 ....s idsp=$p($g(^CacheTempJB(wrk,idprv,idtur,hrl,cnt)),"|",2)
 ....k arr s err=$$gTimeVariantSp^OBapiED(idfa,nmsp,idli,idsp,hrl,"",.arr) zt:+err "merr" s err=""
 ....//spoj neexistuje
 ....i '$g(arr("stt")) s msg("nls",idli,idsp)="" q
 ....k arrsp s err=$$gSp^OBapiED(idfa,nmsp,idli,idsp,$g(arr),"",.arrsp) zt:+err "merr" s err=""
 ....s tm=+$g(arrsp("dta",1)) s tmt=+$g(arrsp("dta",2)) i tmt<tm s tmt=tmt+1440
 ....i tm<mtm s tm=tm+1440 s tmt=tmt+1440
 ....s mtm=tmt
 ....s arrtur("arr","tur",tm,"dta",1)=tmt
 ....s arrtur("arr","tur",tm,"dta",2)=3
 ....s arrtur("arr","tur",tm,"dta",3)=$g(arrsp("dta",5))
 ....s arrtur("arr","tur",tm,"dta",4)=$g(arrsp("dta",3))
 ....s arrtur("arr","tur",tm,"dta",5)=idli
 ....s arrtur("arr","tur",tm,"dta",6)=idsp
 ....s arrtur("arr","tur",tm,"dta",7)="*"
 ....s arrtur("arr","tur",tm,"dta",8)="*"
 ....s arrtur("arr","tur",tm,"dta",9)=$g(arrsp("dta",6))
 ....s arrtur("arr","tur",tm,"dta",10)=$g(arrsp("dta",7))
 ....s arrtur("arr","tur",tm,"dta",13)=$g(arrsp("dta",14))
 ....s arrtur("arr","tur",tm,"dta",14)=$g(arrsp("dta",4))
 ....s arrtur("arr","tur",tm,"dta",20)=(idtur\10#100) //cnt //kurs podle cisla turnusu pr. 208041 -> 208 kmen.linka, 04 kurs, 1 provozni den
 ...//dodelani zacatku a konce
 ...s tm=$o(arrtur("arr","tur",""))
 ...i tm'="" d
 ....s arrtur("arr","tur",(tm-.01),"dta",1)=tm
 ....s arrtur("arr","tur",(tm-.01),"dta",2)=1
 ....s arrtur("dta",5)=$$mh^OBapiED(tm)
 ...s tm=$o(arrtur("arr","tur",""),-1)
 ...i tm'="" d
 ....s tm=$g(arrtur("arr","tur",tm,"dta",1))
 ....s arrtur("arr","tur",tm,"dta",1)=tm
 ....s arrtur("arr","tur",tm,"dta",2)=2
 ....s arrtur("dta",6)=$$mh^OBapiED(tm#1440)
 ....s arrtur("dta",4)=((tm\1440)+1)
 ...k arr s err=$$isTur^OBapiED(idfa,nmsp,zp,idtur,hrl,"",.arr) zt:+err "merr" s err=""
 ...i +$g(arr) d
 ....s msg="vymazána časová varianta"
 ....k arri s arri("fullname")=$g(in("fullname"))
 ....s err=$$dTur^OBapiED(idfa,nmsp,zp,idtur,hrl,.arri,"") zt:+err "merr" s err=""
 ...s err=$$sTur^OBapiED(idfa,nmsp,zp,idtur,hrl,.arrtur,"") zt:+err "merr" s err=""
 ...s:msg'="" msg=msg_"; "
 ...s msg=msg_"vytvořen nový turnus"
 ...i $o(arrtur("arr","tur",""))="" s msg=msg_" - BEZ časového půběhu !!!"
 ...s out("msg",idprv,idtur,hrl,$i(out("msg",idprv,idtur,hrl)))=msg
 ...s msg=""
 ...i $o(msg("nls",""))'="" d
 ....s idli="" f  s idli=$o(msg("nls",idli)) q:idli=""  d
 .....s idsp="" f  s idsp=$o(msg("nls",idli,idsp)) q:idsp=""  d
 ......s msg="odstraněn spoj: "_idli_"/"_idsp
 ......s out("msg",idprv,idtur,hrl,$i(out("msg",idprv,idtur,hrl)))=msg
 ...k msg
 q 0
err s $zt="" k out  q "1~"_$ze_"/"_$tr(err,"~","/")
]]></Routine>


<Routine name="OBapiEDTurImport1" type="INT" languagemode="0" timestamp="62550,51513"><![CDATA[
OBapiEDTurImport1 q
 //import turnusu pro VTVC - ISIT - export dat pro EMTEST
goitur
 n  w #
 d ^%IGMS d O^%IGW("CLR")
 //
 s fileFrom="d:\CacheIns\AD\_data\veolia\311\vzory.txt"
 s idfa="CR_VTVC" s nmsp="AD_V" s zp=231 s hrl=62436
 //
 k I,O
 s I("File")=fileFrom s I("RW")=1
 s ERR=$$File^MlJos(.I,.O)
 i ERR w !,"soubor se nepodařilo otevřít " q
 s DEV=$g(O("Device"))
 i DEV="" w !,"soubor se nepodařilo otevřít " q
 k ^||wfile
 k I,O s I=DEV
 f  s Err=$$ReadL^MlJos(.I,.O) d  q:'(Err=0)
 .i $g(O)="" q
 .s idtur=$p(O,"|",2)
 .s idli=$p(O,"|",9)
 .s idsp=$p(O,"|",10)
 .s ^||wfile(idtur,$i(^||wfile(idtur)))=idli_"~"_idsp
 c DEV
 d C^%IGW
 k ^OBT(zp)
 ;; sestaveni turnusu, zapis
 s idtur="" f  s idtur=$o(^||wfile(idtur)) q:idtur=""  d
 .k arrtur
 .s arrtur("dta",2)=$h
 .s arrtur("dta",3)=0		//POSILA	(posilový 0 ne / 1 ano)
 .s arrtur("dta",4)=1		//POCDNU	(pocet dnu)
 .s arrtur("dta",5)=""		//ZACTUH  	(začátek hodin hh.mm)
 .s arrtur("dta",6)=""		//KONTUH	(konec hodin hh.mm)
 .s arrtur("dta",7)=".~1"	//PLTTDD	(platnost tydenni~dlouhodoba) 
 .s arrtur("dta",8)=""		//PLTTDX    (platnost  textove)
 .s arrtur("dta",9)=""		//JEDEOD	(jede od dd.mm) EDISON NE
 .s arrtur("dta",10)=""		//JEDEDO  	(jede do dd.mm) EDISON NE
 .s arrtur("dta",11)=hrl 	//HRLCAV    (horlog casove varianty)
 .s arrtur("dta",12)="" 	//KMENLI	(kmenova linka)
 .s arrtur("dta",13)="" 	//TYPBUS	(typ auta - dopravni)
 .s arrtur("dta",14)=0 		//PRIPHM	(prirazka PHM %)
 .s arrtur("dta",15)="" 	//DODK  	(DODK h.m)
 .s arrtur("dta",16)=100 	//KOEFMZ	(koeficient mzdy)
 .s arrtur("dta",17)="" 	//OSA   
 .s arrtur("dta",18)="" 	//PPOS
 .s arrtur("dta",19)=1 		//PAUT
 .s arrtur("dta",20)="" 	//DODKNC 	(DODK v noci %)
 .s arrtur("dta",21)="" 	//DIE 		(diety Kc)
 .s arrtur("dta",22)="" 	//FIXKC 	(fixni priplatek ke mzde Kc)
 .s arrtur("dta",23)="" 	//VSMPR	    (vicesmenny priplatek 0 ne / 1 ano)
 .s arrtur("dta",24)="" 	//PRCCEK 	(cekani do odp.doby %)
 .s arrtur("dta",25)="" 	//DOPVD     (kolik minut se bude doplnovat do vyrovnavaci doby v pripade, ze ma malo hodin (min))
 .s arrtur("dta",26)="" 	//PRNOC 	(priplatek nocovne Kc)
 .s arrtur("dta",27)="" 	//KMENRZ 	(kmenova RZ)
 .s arrtur("dta",28)="" 	//DISLOK 	(dislokace)
 .s arrtur("dta",29)=0 		//FIKTUR  	(fiktivni tutnus 0 ne / 1 ano)  (jen pro planovani dopravy s vazbou na objednavku)
 .s arrtur("dta",30)="" 	//COBJ    	(cislo objednavky pro fiktivni turnus)
 .s arrtur("dta",31)="" 	//TUSTR		(oznaceni turnusu pro prevod do strojku)
 .s arrtur("dta",32)="" 	//KMELID    (popis kmenove linky (KMELI))
 .s arrtur("dta",33)="" 	//HRLCAVDO  (horlog casova varianta do, ukonceni platnosti turnusu)
 .s arrtur("dta",34)="" 	//FIXKCCEK	(fixni priplatek ke čekání Kč)
 .s mtm=""
 .s cnt="" f  s cnt=$o(^||wfile(idtur,cnt)) q:cnt=""  d
 ..s idli=$p($g(^||wfile(idtur,cnt)),"~",1)
 ..s idsp=$p($g(^||wfile(idtur,cnt)),"~",2)
 ..k arr s err=$$gTimeVariantSp^OBapiED(idfa,nmsp,idli,idsp,hrl,"",.arr) i err q
 ..//spoj neexistuje
 ..i '$g(arr("stt")) w !,"spoj "_idli_"/"_idsp_" neexistuje" q
 ..k arrsp s err=$$gSp^OBapiED(idfa,nmsp,idli,idsp,$g(arr),"",.arrsp)
 ..s tm=+$g(arrsp("dta",1)) s tmt=+$g(arrsp("dta",2)) i tmt<tm s tmt=tmt+1440
 ..i tm<mtm s tm=tm+1440 s tmt=tmt+1440
 ..s mtm=tmt
 ..s arrtur("arr","tur",tm,"dta",1)=tmt
 ..s arrtur("arr","tur",tm,"dta",2)=3
 ..s arrtur("arr","tur",tm,"dta",3)=$g(arrsp("dta",5))
 ..s arrtur("arr","tur",tm,"dta",4)=$g(arrsp("dta",3))
 ..s arrtur("arr","tur",tm,"dta",5)=idli
 ..s arrtur("arr","tur",tm,"dta",6)=idsp
 ..s arrtur("arr","tur",tm,"dta",7)="*"
 ..s arrtur("arr","tur",tm,"dta",8)="*"
 ..s arrtur("arr","tur",tm,"dta",9)=$g(arrsp("dta",6))
 ..s arrtur("arr","tur",tm,"dta",10)=$g(arrsp("dta",7))
 ..s arrtur("arr","tur",tm,"dta",13)=$g(arrsp("dta",14))
 ..s arrtur("arr","tur",tm,"dta",14)=$g(arrsp("dta",4))
 .//dodelani zacatku a konce
 .s tm=$o(arrtur("arr","tur",""))
 .i tm'="" d
 ..s arrtur("arr","tur",(tm-.01),"dta",1)=tm
 ..s arrtur("arr","tur",(tm-.01),"dta",2)=1
 ..s arrtur("dta",5)=$$mh^OBapiED(tm)
 .s tm=$o(arrtur("arr","tur",""),-1)
 .i tm'="" d
 ..s tm=$g(arrtur("arr","tur",tm,"dta",1))
 ..s arrtur("arr","tur",tm,"dta",1)=tm
 ..s arrtur("arr","tur",tm,"dta",2)=2
 ..s arrtur("dta",6)=$$mh^OBapiED(tm#1440)
 ..s arrtur("dta",4)=((tm\1440)+1)
 .i $o(arrtur("arr","tur",""))="" q
 .s err=$$dTur^OBapiED(idfa,nmsp,zp,idtur,hrl,"","")
 .s err=$$sTur^OBapiED(idfa,nmsp,zp,idtur,hrl,.arrtur,"")
 q
]]></Routine>


<Routine name="OBapiEDTurInfo" type="INT" languagemode="0" timestamp="65772,49304.153334"><![CDATA[
OBapiEDTurInfo q
 // ----------------------------------------------------
 // popis pole turnusu
 // ----------------------------------------------------
 // out("hrl")=casova varianta turnusu
 //
 // popis pole s daty turnusu out("dta",cnt)=hodnota
 // ----------------------------------------------------
 // cnt - pocitadlo
 // 01 =
 // 02 =HRLZAP		(horlog zapisu)
 // 03 =POSILA		(posilový 0 ne / 1 ano)
 // 04 =POCDNU		(pocet dnu)
 // 05 =ZACTUH  	(začátek hodin hh.mm)
 // 06 =KONTUH		(konec hodin hh.mm)
 // 07 =PLTTDD		(platnost tydenni~dlouhodoba) 
 // 08 =PLTTDX  	(platnost  textove)
 // 09 =JEDEOD		(jede od dd.mm) EDISON NE
 // 10 =JEDEDO  	(jede do dd.mm) EDISON NE
 // 11 =HRLCAV  	(horlog casove varianty)
 // 12 =KMENLI		(kmenova linka)
 // 13 =TYPBUS		(typ auta - dopravni)
 // 14 =PRIPHM		(prirazka PHM %)
 // 15 =DODK  		(DODK h.m)
 // 16 =KOEFMZ		(koeficient mzdy)
 // 17 =OSA   
 // 18 =PPOS
 // 19 =PAUT
 // 20 =DODKNC 		(DODK v noci %)
 // 21 =DIE 		(diety Kc)
 // 22 =FIXKC 		(fixni priplatek ke mzde Kc)
 // 23 =VSMPR		(vicesmenny priplatek 0 ne / 1 ano)
 // 24 =PRCCEK 		(cekani + prer.pr.nez do odp.doby %)
 // 25 =DOPVD   	(kolik minut se bude doplnovat do vyrovnavaci doby v pripade, ze ma malo hodin (min))
 // 26 =PRNOC 		(priplatek nocovne Kc)
 // 27 =KMENRZ 		(kmenova RZ)
 // 28 =DISLOK 		(dislokace)
 // 29 =FIKTUR  	(fiktivni tutnus 0 ne / 1 ano)  (jen pro planovani dopravy s vazbou na objednavku)
 // 30 =COBJ    	(cislo objednavky pro fiktivni turnus)
 // 31 =TUSTR		(oznaceni turnusu pro prevod do strojku)
 // 32 =KMELID    	(popis kmenove linky (KMELI))
 // 33 =HRLCAVDO  	(horlog casova varianta do, ukonceni platnosti turnusu)
 // 34 =FIXKCCEK	(fixni priplatek ke čekání Kč)
 // 35 =PRPL_DIE  	(proplaceni diet 0 dle nastaveni programu / 1 neproplacet / 2 proplacet vzdy turnusove / 3 podle ciselniku tuz.diet)
 // 36 =OBJIZD		(objizdkovy turnus 0 ne / 1 ano)
 // 37 =NIZKOPODLAZNI_BUS (nizkopodlazni bus 0 ne / 1 ano)
 // 
 // 38 =PRIZNAK_FAKTURACE	(0,"" ne/ 1 ano)
 // 39 =ID_ZAKAZNIKA		(id zakaznika pro kterého se bude fakturovat)
 // 40 =DRUH_ZAJEZDU 		(idCis=1)
 // 41 =ZPUSOB_FAKTURACE 	(1=fakturovat za km, 3=smluvni cena)
 // 42 =IDPRV				(idprv pro fakturaci (kde se bude fakturovat), muze byt "")
 // 43 =VYSTFAK				(vystaveni faktury (S/samostatne, T/tydne, M/mesicne))
 // 44 =FAKMENA				(mena pro fakturaci (CZK/EUR))
 // 45 =FAKMENAPREP			(mena pro prepocet faktury (""/EUR))
 // 46 =SAZBA_KM_OBS		(sazba za km obsazeny)
 // 47 =SAZBA_KM_NEOBS		(sazba za km neobsazeny)
 // 48 =SAZBA_CEK_15min		(sazba za 15min cekani)
 // 49 =SMLUV_CENA_B_DPH	(smluvni cena bez DPH)
 // 50 =SMLUV_CENA_S_DPH	(smluvni cena s DPH)
 // 51 =NS odberatele vni.	(stredisko pro vnitrofakturu)
 // 
 // 52 =LIMIT_KM			(limit km pro turnus)
 // 53 =DELENY				(deleny turnus 0 ne / 1 ano)
 // 54 =SAZBA_PAU_MZD		(ciselnik 46)
 //
 // 55 =ID_ZAKAZNIKA2 		(id zakaznika na ktereho jde trzba v pripade vnitrofaktury (ID_ZAKAZNIKA je vlastni firma))
 // 56 =FAK_CEK_MAN			(0/1 zahrnout do doby cekani pro fakturaci manipulace)
 // 57 =FAK_CEK_VD			(0/1 zahrnout do doby cekani pro fakturaci vyrovnavaci dobu)
 // 58 =FAK_CEK_ZAOK	    (jak zaokrouhlit čekání pro fakturaci 0 dle nastavení prg / 1 čtvrthodiny čekání dolu / 2 čtvrthodiny čekání nahoru)
 // 
 // 59 =RZ_PKVA				(požadovaná kvalita vozidla - nezadáno nebo číselník 50)
 // 60 =NEPCEK				(neproplacet cekani 0/1)
 // 61 =NEVVD				(nevyhodnocovat vyrovnavaci dobu 0/1)
 //
 // 62 =FAK_CEK_TYP			(zpusob vypoctu cekani pro fakturaci 0 veskere cekani na dokladu / 1 cekani pred a po spoji do vyse 15 min)				
 // 63 =FAK_CEK_ALL			(0/1 zahrnout do doby cekani pro fakturaci vsechny cinnosti mimo jizdy)
 // 
 // 64 =NEOBSAZOVAT_PLAN    (0/1 turnus neobsazovat v planu - nezapocitava se v planu do neobsazenych turnusu) 
 // 65 =IDZDIE 				(ID pro vypocet zahranicnich diet)
 // 66 =IDSZBPRIPLHOD		(ID pro vypocet priplatku za odpracovane hodiny 0 ne / 1 ano, sazba 1 / 2 ano, sazba 2)
 //
 // 67 =HLAVNI_VARIANTA     (0/1 hlavni varinata turnusu, zatim pro export do GISTu pro BUSLINE) 
 // 68 =MAX.OBSAZENOST		(vypocitana maximalni obsazenost turnusu pro sestavy BUSEM) 
 // 69 =MAX.OBSAZENOST K	(informace k vypocitane max obsazenosti)
 //
 // 70 =KURS                (informace o kursu MPVNET, pro strojky TELMAX)
 // 71 =ALTVAR				(alternativní varianta (nebude se brát v úvahu při kontrole turnusů na JŘ 0/1)
 // ---------------------------------------------
 // popis pole s prubehem turnusu out("arr","tur",CAS_OD(mm),"dta",cnt)=hodnota
 // ---------------------------------------------
 //
 // cnt - pocitadlo
 // 01 = CAS_DO(mm)
 // 02 = ID_CINNOSTI 	   	(ciselnik 16)
 // 03 = KM
 // 04 = DOBA(MM)
 // 05 = LINKA
 // 06 = SPOJ
 // 07 = MANIPULACE_PRED  	(* nebo *mm nebo mm)
 // 08 = MANIPULACE_PO    	(* nebo *mm nebo mm)
 // 09 = ZASTAVKA_OD	  	(id nebo id/L)
 // 10 = ZASTAVKA_DO      	(id nebo id/L)
 // 11 = UPRESNENI 	    	(pro ID_CINNOSTI=10 ciselnik 17)
 // 12 = INFORMACE 	    	(textovy udaj, na DZVA muze byt i u spoje )
 // 13 = KMT              	(tarifni km, dopocitavana polozka)
 // 14 = DRUH_SPOJE       	(kod, ciselnik id=4, dopocitavana polozka)
 // 15 = PREPRAVNI_SYSTEM 	(kod, pokud je jeden, ciselnik id=5, dopocitavana polozka)
 // 16 = PRIRAZKA_PHM     	(prirazka phm, dopocitava se ke spoji pri uznani dzva)
 // 17 = VICESM.PRIPLATEK 	(vicesmenny priplatek 0 ne / 1 ano)
 // 18 = UPRAVA_KM_SPOJE  	(priznak pro upravu km na spoji (objizdka, cast spoje) v DZVA 0 ne / 1 ano)
 // 19 = ID_TUR				(id turnusu, ze ktere je cinnost, pri uznani dzva)
 // 20 = KURS				(kurs pro linku a spoj, udaj pro strojky)
 // 21 = HRAZENY_PREJEZD    (priznak hrazeneho pristaveni, odstaveni, prejezdu 0 ne / 1 ano)
 // 22 = NAVAZNY_SPOJ 		(priznak navazneho spoje pro odbv.zarizeni 0 ne / 1 ano)
 // 23 = SCITAT_PAR_NSP 	(scitat parametry pro navazny spoj 0 ne / 1 ano)
 // 24 = PREF_SZ_NSP_A		(preferovany SZ pro navazny spoj 0 PREF_SZ bez prestupu (povolena standardni) / 1 PREF_SZ s prestupem (povolena prestupni) / 2 PREF_SZ se nepouzije (vypnuta))
 // 25 = PREF_SZ_NSP_Z      (preferovany SZ pro spoj, ze ktereho se prestupuje 0 PREF_SZ bez prestupu (povolena standardni) / 1 PREF_SZ s prestupem (povolena prestupní) / 2 PREF_SZ se nepouzije (vypnuta))
 //
 // -----------------------
 // mozne kombinace polozek
 // -----------------------
 //
 // ID_CINNOSTI = cnt
 // 01=1,2,19											(ZACATEK)
 // 02=1,2,19											(KONEC)
 // 03=1,2,3,4,5,6,7,8,12,13,14,15,18,19,20,22,23,24,25	(SPOJ)(info na DZVA pri uprave spoje nebo spoji +)
 // 04=1,2,3,4,9,10,15,19,21							(PRISTAVENI)	
 // 05=1,2,3,4,9,10,15,19,21							(ODSTAVENI)
 // 06=1,2,3,4,9,10,15,19,21							(PREJEZD)
 // 07=1,2,3,4,9,10,15,19,21							(REZIJNI JIZDA)
 // 08=1,2,12,19										(INFORMACE)
 // 09=1,2,4,19											(BEZPECNOSTNI PRESTAVKA)
 // 10=1,2,4,11,19										(OST.PRACE)
 // 11=1,2,4,19											(NOCOVANI)
 // 12=1,2,4,12,19										(PRERUSENI PRACE)
 // 13=1,2,4,19											(JIDLO)
 // 14=1,2,4,19											(DODK)
 // 15=1,2,4,19											(ODPOCINEK)
 // 16=1,2,4,19											(DELENA SMENA)
 // 17=1,2,4,19											(PRACOVNI POHOTOVOST)
 // 18=1,2,3,4,19										(VLOZENY VYKON)
 // -----------------------------------------------------------------------------------------------
 // prepravni systemy, pokud je jich pro cinnost vice out("arr","tur",CAS_OD(mm),"prs",idprs,"dta",1)=presne km
 //                                                   out("arr","tur",CAS_OD(mm),"prs",idprs,"dta",2)=tarifni km
 // (dopocitavana polozka)
 // pouze pro ID_CINNOSTI = 4,5,6,7
 // -----------------------------------------------------------------------------------------------
 // 04 = OB = prestavka na obed v minutach
 // 05 = BP = bezpecnostni prestavka v minutach
 // 06 = OS = ostatni prace v minutach
 // ------------------------------------
 // popis pole s vysledky turnusu (dzva) out("arr","tuv",cnt)=
 // ------------------------------------
 // cnt - pocitadlo
 // 01 = JI = jizda v minutach
 // 02 = MA = manipulace v minutach
 // 03 = CZ = cekani zapoctene do odpracovane doby v minutach
 // 04 = JID = hodiny prestavky na jidlo
 // 05 = BP = hodiny bezpecnostni prestavky"
 // 06 = OS = hodiny ostatni práce
 // 07 = OP = ostatni pausalni prace v minutach
 // 08 = VY = vyrovnavaci doba v minutach
 // 09 = DO = DODK v minutach (pretah ze zad.turn)
 // 10 = HN = hodiny zapoctene do odprac.doby ale neplacene v minutach
 // 11 = HC = hodiny odpracovane celkem v minutach (vc.DODK a PZ!!)
 // 12 = PZ = pracovni zaloha v minutach
 // 13 = CC = cekani celkem v minutach
 // 14 = CN = cekani nezapoctene do odpr.doby (CC-CZ) v minutach
 // 15 = NC = hodiny v noci v minutach
 // 16 = NO = nocovani
 // 17 = PV = doba provozu v minutach
 // 18 = DI = diety (celkove diety pro ridice)
 // 19 = MZ = mzda,cekani,nocov,klou+ink,tarifem (v Kc pro vypisy) 
 // 20 = SV = hodiny ve svatek v minutach
 // 21 = SN = hodiny v SO-NE v minutach
 // 22 = KC = km celkove
 // 23 = K(1) = vnitro
 // 24 = K(2) = dalkove
 // 25 = K(3) = mesto
 // 26 = K(4) = primesto
 // 27 = K(5) = mezinarodni
 // 28 = K(6) = smluvni
 // 29 = K(7) = rezijni
 // 30 = KLOU = km kloubovym busem
 // 31 = ZS = zaskolovani
 // 32 = mizer = rozdil vyvolany koeficientem turnusu v Kc (abs+-rozd.pri coe'=100)
 // 33 = UL = specialni hodiny UL (hodiny snizenou sazbou)
 // 34 = premi = premie za linky a rezijni km (za km, dobu) (pokud fix, pak az v napoctu do ^OM) !
 // 35 = pau = pausalni Kc (z Kc k turnusu)
 // 36 = jinpr - hodiny jiné práce
 // 37 = SPJ = spolujizda
 // 38 = CNP = cekani nezapoctene pracovni dny
 // 39 = CNS = cekani nezapoctene so,ne,sv
 // 40 = CL1 = cekani nezapoctene pod limitni hodnotou (u AKV je to podlimit v prac.dny (pocitano z CNP))
 // 41 = CL2 = cekani nezapoctene nad limitni hodnotou (u AKV je to nad limit zaokrouhleno na cele hodiny dolu (pocitano z CNP) + cekani v SO,NE,SV) 
 // 42 = ODP = odpocinek (je to stejne jako cekani, ale chteji to vykazovat zvlast)
 // 43 = CN(3) = cekani nezapoctene do odpr.doby mesto placeno sazbou (vycisleno, pokud je nastavena sazba a odecteno z cekani nezapocteneho)
 // 44 = JI(1) = jizda v minutach vnitro
 // 45 = JI(2) = jizda v minutach dalkove
 // 46 = JI(3) = jizda v minutach mesto
 // 47 = JI(4) = jizda v minutach primesto
 // 48 = JI(5) = jizda v minutach mezinarodni
 // 49 = JI(6) = jizda v minutach smluvni
 // 50 = JI(7) = jizda v minutach rezijni
 // 51 = DSM = rozdelena smena
 // 52 = PDSM = pocet rozdelenych smen
 // 53 = RMA = rozdíl max.man.-dosaz.man v minutach při dopočtu max.man.
 // 54 = FXODV = fixni hodiny na doklad v minutach
 // 55 = MA(1) = manipulace v minutach vnitro
 // 56 = MA(2) = manipulace v minutach dalkove
 // 57 = MA(3) = manipulace v minutach mesto
 // 58 = MA(4) = manipulace v minutach primesto
 // 59 = MA(5) = manipulace v minutach mezinarodni
 // 60 = MA(6) = manipulace v minutach smluvni
 // 61 = MA(7) = manipulace v minutach rezijni
 // 62 = PDD = pocet dni s dokladem
 // 63 = OS(OSPR) = ostatni prace s typem ostatni prace
 // 64 = OS(MYTI) = ostatni prace s typem myti, cisteni
 // 65 = OS(OPEN) = ostatni prace s typem odvod penez
 // 66 = OS(TANK) = ostatni prace s typem tankovani
 // 67 = OS(REZP) = ostatni prace s typem rezijni prace
 // 68 = OS(POST) = ostatni prace s typem rozvoz posty
 // 69 = OS(CYKP) = ostatni prace s pripojeni cykloprivesu
 // 70 = OS(OPRC) = ostatni prace s typem opravy na ceste
 // 71 = OS(NZAV) = ostatni prace s typem nalozeni zavazadel
 // 72 = VY(1) = vyrovnavaci doba vnitro
 // 73 = VY(2) = vyrovnavaci doba dalkove
 // 74 = VY(3) = vyrovnavaci doba mesto
 // 75 = VY(4) = vyrovnavaci doba primesto
 // 76 = VY(5) = vyrovnavaci doba mezinarodni
 // 77 = VY(6) = vyrovnavaci doba smluvni
 // 78 = VY(7) = vyrovnavaci doba rezijni
 // 79 = CN(1) = cekani nezapoctene do odpr.doby vnitro
 // 80 = CN(2) = cekani nezapoctene do odpr.doby dalkove
 // 81 = CN(3) = cekani nezapoctene do odpr.doby mesto
 // 82 = CN(4) = cekani nezapoctene do odpr.doby primesto
 // 83 = CN(5) = cekani nezapoctene do odpr.doby mezinarodni
 // 84 = CN(6) = cekani nezapoctene do odpr.doby smluvni
 // 85 = CN(7) = cekani nezapoctene do odpr.doby rezijni
 // 86 = OS(DPSM) = ostatni prace s typem doplatek do smeny
 // 87 = LSHPRIPL = doba pro hodinovy priplatek za linky a spoje
 // 88 = PV(1) = doba provozu v minutach vnitro
 // 89 = PV(2) = doba provozu v minutach dalkove
 // 90 = PV(3) = doba provozu v minutach mesto
 // 91 = PV(4) = doba provozu v minutach primesto
 // 92 = PV(5) = doba provozu v minutach mezinarodni
 // 93 = PV(6) = doba provozu v minutach smluvni
 // 94 = PV(7) = doba provozu v minutach rezijni
 // 95 = CNN = cekani nezapoctene do odpr.doby, neplacene v minutach
 // 96 = ZPZ = doba zpozdeni
 // 97 = K(7)H = rezijni km hrazene, cast z polozky 29 = K(7) = rezijni
 // 98 = PPZ = hodiny preruseni prace zapoctene
 // 99 = PPN = hodiny preruseni prace nezapoctene
 //100 = PPNMHD = hodiny preruseni prace nezapoctene pro MHD
 //101 = PPOH = doba pracovni pohotovosti
 //102 = PRIPLODPHODSA1 = doba pro priplatek za odpracovane hodiny turnusu sazbou 1
 //103 = PRIPLODPHODSA2 = doba pro priplatek za odpracovane hodiny turnusu sazbou 2
 //104 = CZTP = cekani ve ztizenem prostredi v minutach
 //105 = HZTP = hodiny pro příplatek za praci ve ztizenem prostredi v minutach
 //106 = OS(NTVZ) = ostatni prace s typem nataceni vozidla
 //107 = VLOVYK = doba vlozeneho vykonu v minutach
 //108 = OS(CYKO) = ostatni prace s odpojenim cykloprivesu
 //109 = TROLEJ = km trolejbusem
 //110 = ZPZNADMINLIMIT = doba zpozdeni nad xx minut (limit) - limit - mzdove nastaveni - 1,0,36 
 //111 = SO = hodiny v sobotu
 //112 = NE = hodiny v nedeli
 //113 = SMENAZVOLNA = vyse odpracovanych hodin na dokladech s atributem "smena z volna" 
 // --------------------------------------------------
 // popis 19 MZ polozky (mzda) out("arr","tuv",19,cnt)
 // --------------------------------------------------
 // cnt - pocitadlo
 // 01 = mzd = mzda (casovkou+tarifem+kul+zaobed+uherk+pau+dinos)
 // 02 = cek = cekani
 // 03 = mezi = kc za mezilehly den - nocovne pausalne
 // 04 = pripl = kloub+inka+zas+mhd+lin+kchot+vlek+trolej
 // 05 = tarifem = kc za hodiny placene tarifem
 // 06 = kul = kc za hodiny snizenou sazbou (UL)
 // 07 = kloub = priplatek za kloubak
 // 08 = inka = inkaso, brasna, priplatek za odbaveni
 // 09 = mhd = priplatek za mhd
 // 10 = zas = kc za zasilky
 // 11 = lin = priplatek za linky a rezijni km (za km, dobu) 
 // 12 = kcnoc = kc za hodiny v noci
 // 13 = kchot = priplatek kodem 78 + 79 + 82 v kc
 // 14 = kcpau = pausalni kc ke mzde (napr.k turnusum)
 // 15 = zaobed = kc za obed placeny nejakou sazbou
 // 16 = uherk = kc za vicesmenny provoz, zadavane ke spojum v turnusech (UH)
 // 17 = dinos = kc za zastavky (vykopavka z Jihlavy-musi se jit do JR)
 // 18 = zaspoje = kc za odjete spoje
 // 19 = kcCDS = kc za dodk - specialita pro CDS (nepouziva se to)
 // 20 = idiot = pocet projetych zastavek
 // 21 = tradopl = kc za pracovni zalohu - tradobus
 // 22 = inval = kc priplatek za invalidni plosinu
 // 23 = kackys = kc z normovanych cinnosti
 // 24 = plyn = kc priplatek za plynovy autobus
 // 25 = dusmlib = kc priplatek za vicesm.provoz
 // 26 = kcSPJ = mzda za spolujizdu
 // 27 = mzpHd = mzda za hodiny (mzda za vykon + za hodiny tarifem + zaskolovani), pro kontrolu
 // 28 = kcODP = kc za odpocinek
 // 29 = FxDodkKc = fixni kc za dodk (je uz napocteno ve mzde, pro kontrolu)
 // 30 = kcCekMhd = kc za cekani v MHD, ! je uz napocteno v cek, tady pro kontrolu
 // 31 = mzdprv = kc prirazka do mzdy podle druhu provozu, uz je napoctena v mzd, tady pro kontrolu
 // 32 = cekPM = kc prirazka do cekani podle pomeru cekani x provoz a tabulky, uz je napocteno v cek, tady pro kontrolu
 // 33 = kcPRI = priplatek za km privesu, uz je napocteno v priplatkach, tady pro kontrolu
 // 34 = kcDSM = kc za delenou smenu
 // 35 = kcpauCek = pausalni kc ke mzde (uz zapocteno v cekani)
 // 36 = FxKcDoc = fixni kc na doklad
 // 37 = PriplMimoradnost = priplatek za reseni mimoradnosti
 // 38 = kc nocovne hodinovou sazbou
 // 39 = kcPrJiTypRZ = priplatek za dobu jizdy podle typu vozidla
 // 40 = kcPPN = kc za hodiny preruseni prace nezapoctene
 // 41 = kcPPNMHD = kc za hodiny preruseni prace nezapoctene v MHD
 // 42 = kcDOPLMZ = kc doplatek do mzdy
 // 43 = kcPAU80 = kc pausalni ke mzde kod 80"
 // 44 = kcPAUFIXTU = kc pausalni ke mzde, fixni priplatek ke mzde z turnusu"
 // 45 = kcPRIPLODPHODSA1 = priplatek za odpracovane hodiny turnusu sazbou 1
 // 46 = kcPRIPLODPHODSA1 = priplatek za odpracovane hodiny turnusu sazbou 2
 // 47 = kcPRIPLZTP = priplatek za praci ve ztizenem prostredi 
 // 48 = kcVLOVYK = kc za hodiny vlozeneho vykonu
 // 49 = mzdvyk = mzda za vykon
 // 50 = kcpriplls = kc priplatek za dobu linek a spoju (doba v 87)
 // 51 = trolej = priplatek za trolejbus
 // ---------------------------------------------------------
 // popis pole s dalsim omezenim out("arr","omz",idomz)=hodnota
 // ---------------------------------------------------------
 // idomz=11 jede jen,     hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
 // idomz=12 jede take,    hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
 // idomz=13 jede od do,   hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
 // idomz=22 nejede od do, hodnota=@dd.mm:dd.mm#dd.mm:dd.mm#...
 // ---------------------------------------------------------
 // popis pole s poznamkami k turnusu out("arr",id,cnt)=hodnota
 // -----------------------------------------------------------------------
 // id="txh" zahlavi, id="txp" zapati, id="txd" na dzva cnt=pocitadlo radku
 // -----------------------------------------------------------------------
 // id="txh" zahlavi ... out("arr","txh",cnt)=hodnota 
 // id="txp" zapati  ... out("arr","txp",cnt)=hodnota
 // id="txd" na dzva ... out("arr","txd",cnt)=hodnota 
 // 
 // popis udaju pro ridice out("arr","drv",...)
 // out("arr","drv","dta",1)=pocet ridicu
 // popis udaji pro jednotlive ridice pri spolujizde
 // out("arr","drv","arr",cntridice,"dta",cnt)=data
 // ------------------------------------------------
 // cntridice 1,2
 // cnt = pocitadlo
 // ---------------
 //  1=pohotovost pri spolujizde ridice (min), cnt ridice je poradove cislo ridice
 //  2=priplatek za nocovne (0 ano / 1 ne)
 //  3=pendl (0 ne / 1 ano) ano = ridic nejede cely turnus, budou mu zadány vlastni mzd.udaje 
 //  4=hodiny jízdy (min)
 //  5=hodiny manipulaci (min)
 //  6=hodiny ostatnich praci (min)
 //  7=hodiny DODK (min)
 //  8=hodiny cekani (min)
 //  9=hodiny v noci (min)
 // 10=diety (kč)
 // 11=km celkem (kč)
 // 12=hodiny SoNe (min~min~min~min) - pro kazdy den vicedenniho turnusu
 // 13=hodiny Sv   (min~min~min~min) - pro kazdy den vicedenniho turnusu
 // ---------------
 // popis zaznamu pole s udaji o zmenach na turnuse
 // out("arr","cop","dta",1)=horlog posledni zmeny
 // out("arr","cop","dta",2)=jmeno uzivatele
 // konvertovane pauzy vypoctem
 // out("arr",1,id,mmod)=mmdo
 //================
 // cnt=pocitadlo
 // 02 = PhSpj
 // 03 = VYRDO
 // 04 = pocrid
 // 05 = igan
 // 06 = S
 // 09 = DENR
 // 10 = fizl
 //================
]]></Routine>


<Routine name="OBapiEDTurStat" type="INT" languagemode="0" timestamp="65630,50612.389088"><![CDATA[
OBapiEDTurStat q
 // =============================
 // turnusy - EDISON - statistika
 // =============================
mkStaTur(idfa,nmsp,zp,wrk,in,out)
 // s err=$$mkStaTur(idfa,nmsp,zp,wrk,.in,.out)
 // vstupni data
 // bud je definovano wrk, pak v ^CacheTempJB(wrk,...
 // nebo je definovano in("glb"), pak v tomto globalu
 // ===================================
 // @glb@("dta",1)=hrlOd (od kdy vytvorit statistiku)
 // @glb@("dta",2)=hrlDo (do kdy vytvorit statistiku)
 // @glb@("dta",3)=idBlo (id blizke obce pro kalendar)
 // definice turnusu bez casove varianty, program si je automaticky odvodi
 // @glb@("arr",1,tu)="" turnus pro vypocet statistiky
 // ====================================
 // definice turnusu s casovou variantou (musi byt casova varianta a od - do)
 // @glb@("arr",1,tu,hrl,"dta",1)=hrlOd
 // @glb@("arr",1,tu,hrl,"dta",2)=hrlDo
 // =========================================================================
 // vystupni data
 // =============
 // out("glb") ... v jakem globalu jsou data
 // @glb@("arr",1,tu,hrl,"dta",1)=hrlOd (od kdy se pocita prislusna casova varianta turnusu)
 // @glb@("arr",1,tu,hrl,"dta",2)=hrlDo (do kdy se pocita prislusna casova varianta turnusu)
 // @glb@("arr",1,tu,hrl,"dta",3)=jedePocet (kolikrat prislusna casova varianta jede)
 // @glb@("arr",1,tu,hrl,"arr",1,rrrr,mm)=jede 0/1 v ramci mesice
 // @glb@("arr",1,tu,hrl,"arr",2,hrl)="" horlog, kdy jede
 // @glb@("arr",1,tu,hrl,"arr",3,typdne,hrl)="" horlog, kdy jede podle typu dne, kde kde typdne=1Po,2Ut,3St,4Ct,5Pa,6So,7Ne,Xpracovní,SVsvatek
 // @glb@("arr",2,tu,"dta",1)=hrlOd (od kdy se vytvari statistika)
 // @glb@("arr",2,tu,"dta",2)=hrlDo (do kdy se vytvari statistika)
 // @glb@("arr",2,tu,"dta",3)=jedePocet (kolikrat turnus jede)
 // @glb@("arr",2,tu,"arr",1,rrrr,mm)=jede 0/1 v ramci mesice
 // @glb@("arr",2,tu,"arr",2,hrl)="" horlog, kdy jede
 //
 n (idfa,nmsp,zp,wrk,in,out)
 s $zt="err" s err=""
 // global s daty ==========================================================================
 s myglb=$g(in("glb")) s out("glb")=myglb
 i myglb="" s myglb="^||wrk.ALVA.AD("_$$gWrkALVAAD^OBapiED()_")" s out("glb")=myglb k @myglb
 i wrk k @myglb m @myglb=^CacheTempJB(wrk)
 // ========================================================================================
 //projdu global @myglb@("arr",1,tu a doplnim pripadne cas.varianty + od - do pro vypocet
 s blo=$g(@myglb@("dta",3))
 s tu="" f {
	 s tu=$o(@myglb@("arr",1,tu)) i tu="" q
 	 s hrlf=+$g(@myglb@("dta",1))
 	 s hrlt=+$g(@myglb@("dta",2))
 	 s @myglb@("arr",2,tu,"dta",1)=hrlf
 	 s @myglb@("arr",2,tu,"dta",2)=hrlt
     i $o(@myglb@("arr",1,tu,""))'="" continue
 	 // vyhledani casovych variant turnusu
 	 k arrtmvar s err=$$gAllTimeVariantTur^OBapiED(idfa,nmsp,zp,tu,"",.arrtmvar) i +err zt
 	 s fndall=0
 	 s hrl=hrlt+.01 f {
	 	 s hrl=$o(arrtmvar("arr",1,hrl),-1) i (hrl="")!(fndall) q
	 	 k arr s err=$$gTurOne^OBapiED(idfa,nmsp,zp,tu,hrl,1,"",.arr)  i +err zt
 	 	 // zruseny turnus
 	 	 i +$g(arr("dta",1)) continue
 	 	 s @myglb@("arr",1,tu,hrl)=""
 	 	 i hrl'>hrlf s fndall=1
 	 }
 	 // doplneni od - do k casovym variantam turnusu pro vypocet
 	 s hrl="" f {
	 	 s hrl=$o(@myglb@("arr",1,tu,hrl),-1) i hrl="" q
 	 	 //od
 	 	 s @myglb@("arr",1,tu,hrl,"dta",1)=hrl i hrl<hrlf s @myglb@("arr",1,tu,hrl,"dta",1)=hrlf
 	 	 // do
 	 	 s @myglb@("arr",1,tu,hrl,"dta",2)=hrlt s hrlt=(hrl-1) i hrlt<hrlf s hrlt=hrlf
 	 }
 }
 // statistika turnusu
 s tu="" f {
	 s tu=$o(@myglb@("arr",1,tu)) i tu="" q
 	 s hrl="" f {
	 	 s hrl=$o(@myglb@("arr",1,tu,hrl)) i hrl="" q
 	 	 k arr s err=$$gTur^OBapiED(idfa,nmsp,zp,tu,hrl,"",.arr) i +err zt
 	 	 s hrlf=$g(@myglb@("arr",1,tu,hrl,"dta",1))
 	 	 s hrlt=$g(@myglb@("arr",1,tu,hrl,"dta",2))
 	 	 // zadano ukonceni turnusu, posun do
 	 	 i arr("dta",33) i arr("dta",33)<hrlt s hrlt=$g(arr("dta",33))
 	 	 // tydeni a dlouhodoba platnost
 	 	 s tpl=$p(arr("dta",7),"~",1)
 	 	 s dpl=$p(arr("dta",7),"~",2)
 	 	 s pltxt=arr("dta",8)
 	 	 //=====================================
 	 	 //vypocet statistiky prehozen na funkci
 	  	 //=====================================
 	 	 k arri,arro
 	 	 s arri("dta",1)=blo					// okres pro prazdniny
 	 	 s arri("dta",2)=tpl    				// tydenni platnost
 	 	 s arri("dta",3)=dpl    				// dlouhodoba platnost
 	 	 s arri("dta",4)=pltxt  				// platnost textove (pro vypocet pres pismena)
 	 	 s arri("dta",5)=zp						// provoz pro kalendar
 	 	 m arri("arr",1)=arr("arr","omz") 		// omezeni jede, nejede, jede take
 	 	 s err=$$mkJedePltTur(idfa,nmsp,hrl,hrlf,hrlt,.arri,.arro) i +err zt
 	 	 //out("arr",1,hrl)=1 
 	 	 s ahrl="" f {
	 	 	 s ahrl=$o(arro("arr",1,ahrl)) i ahrl="" q
 	 	 	 i +$g(arro("arr",1,ahrl)) {
	 	 	 	 s mydat=$$nd^OBapiED(ahrl,0)
	 	 	 	 s @myglb@("arr",1,tu,hrl,"dta",3)=$g(@myglb@("arr",1,tu,hrl,"dta",3))+1
 	 	 		 s $e(@myglb@("arr",1,tu,hrl,"arr",1,+$p(mydat,".",3),+$p(mydat,".",2)),+$p(mydat,".",1))=1
 	 	 		 s @myglb@("arr",1,tu,hrl,"arr",2,ahrl)=""
 	 	 		 s $e(@myglb@("arr",2,tu,"arr",1,1,+$p(mydat,".",3),+$p(mydat,".",2)),+$p(mydat,".",1))=1
 	 	 		 s @myglb@("arr",2,tu,"arr",2,ahrl)=""
 	 	 		 s @myglb@("arr",2,tu,"dta",3)=$g(@myglb@("arr",2,tu,"dta",3))+1
 	 	 	 }
 	 	 }
 	 	 //out("arr",2,typdne,hrl)=1
 	 	 s typdne="" f {
	 	 	 s typdne=$o(arro("arr",2,typdne)) i typdne="" q
	 	 	 s ahrl="" f {
		 	 	 s ahrl=$o(arro("arr",2,typdne,ahrl)) i ahrl="" q
		 	 	 i +$g(arro("arr",2,typdne,ahrl)) {
			 	 	 s @myglb@("arr",1,tu,hrl,"arr",3,typdne,ahrl)=""
		 	 	 }
	 	 	 }
 	 	 }
 	 }
 }
 i wrk k ^CacheTempJB(wrk) m ^CacheTempJB(wrk)=@myglb
 q 0
 //
mkJedePltTur(idfa,nmsp,hrl,hrlf,hrlt,in,out)
 n (idfa,nmsp,hrl,hrlf,hrlt,in,out)
 s $zt="err" s err=""
 //hrl                - hrl casove varianty turnusu
 //hrlf				  - obdobi od (horlog) pro vypocet statistiky 
 //hrlt               - obdobi do (horlog) pro vypocet statistiky
 //in:
 //in("dta",1)=blo    - okres pro prazdniny
 //in("dta",2)=tpl    - tydenni platnost
 //in("dta",3)=dpl    - dlouhodoba platnost
 //in("dta",4)=pltxt  - platnost textove
 //in("dta",5)=zp     - zavod provoz pro vypocet, odvozeni kalendare 
 //in("arr",1,om)=omd - omezeni jede, nejede, jede take, jede jen
 //out:
 //out("arr",1,hrl)=1 - turnus jede
 //out("arr",2,typdne,hrl)=1 - turnus jede podle typu dne, kde typdne=1Po,2Ut,3St,4Ct,5Pa,6So,7Ne,Xpracovní,SVsvatek
 // ===============
 // vstupni promene
 // ===============
 s blo=$g(in("dta",1))
 s tpl=$g(in("dta",2))
 s dpl=$g(in("dta",3))
 s pltxt=$g(in("dta",4))
 s zp=$g(in("dta",5))
 // ==============
 // druh kalendare
 // ==============
 s ical="CAL" i +$$gMainDCal^OBapiED(idfa,nmsp,zp,"") s ical="CAL_V"
 // =================================
 // konverze jede take, jede a nejede
 // =================================
 k arrom f arrom=11,12,13,22 m:$d(in("arr",1,arrom)) arrom(arrom)=in("arr",1,arrom)
 s err=$$mkArrOm(idfa,nmsp,hrl,hrlf,hrlt,.arrom) i +err zt
 f cnt=1:1:7 s v(cnt)=$e(pltxt,cnt-1*2+1,cnt*2)'["." 
 //uprava s N, chybne to fungovalo jb 12.4.2013
 s v(8)=0 f cnt=1:1:$l(tpl) s:"+ag.N"[$e(tpl,cnt) v(8)=1 k:"N"[$e(tpl,cnt) v(7)
 s cnt="" f  s cnt=$o(v(cnt)) q:cnt=""  k:'v(cnt) v(cnt)
 i dpl=3 f cnt=6:1:8 k v(cnt)
 k ma d
 .i dpl=1 s ma(6)=0 q					//w
 .i dpl=2 q
 .i dpl=3 s ma(8)=0 q 			 		//+c
 .i dpl=4 s ma(8)=1 q 			 		//-c
 .i dpl=5 s ma(4)=1 q 			 		//su
 .i dpl=6 s ma(4)=0 q  			 		//li
 .i dpl=7 s ma(4)=1,ma(8)=0 q  	 		//su+c
 .i dpl=8 s ma(4)=1,ma(8)=1 q  	 		//su-c
 .i dpl=9 s ma(4)=0,ma(8)=0 q  	 	 	//li+c
 .i dpl=10 s ma(4)=0,ma(8)=1 q  	 	//li-c
 .i dpl=11 s ma(5)=1 q  			 	//+P
 .i dpl=12 s ma(5)=0 q  			 	//-P
 .i dpl=13 s ma(4)=1,ma(5)=1 q  	 	//su+P
 .i dpl=14 s ma(4)=1,ma(5)=0 q  	 	//su-P
 .i dpl=15 s ma(4)=0,ma(5)=1 q  	 	//li+P
 .i dpl=16 s ma(4)=0,ma(5)=0 q  	 	//li-P
 // ============
 // vypocet jede
 // ============
 f ahrl=hrlf:1:hrlt d
 .s rrrr=$p($$nd^OBapiED(ahrl,0),".",3)
 .s ddrrrr=ahrl-$$dn^OBapiED("01.01."_rrrr)+1
 .s jd=1 d
 ..// ==================================
 ..// neni nadefinovan dopravni kalendar
 ..// ==================================
 ..i '$d(^[nmsp]OI(ical,rrrr)) s jd=0 q
 ..// jede jen
 ..i (($d(arrom(11)))&($d(arrom(11,ahrl)))) s jd=1 q
 ..i (($d(arrom(11)))&('$d(arrom(11,ahrl)))) s jd=0 q
 ..// jede take
 ..i $d(arrom(12)) i $d(arrom(12,ahrl)) s jd=1 q
 ..// tydenni platnost
 ..d  i jd=0 q
 ...// nejprve kontrola na kalendarni dny v tydenni platnosti, pak kontroluji 1,2,3,4,5,6,7,X,+
 ...i (tpl[1)!(tpl[2)!(tpl[3)!(tpl[4)!(tpl[5)!(tpl[6)!(tpl[7) d  q
 ....s jd=0
 ....i (tpl[1)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=1) s jd=1 q
 ....i (tpl[2)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=2) s jd=1 q
 ....i (tpl[3)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=3) s jd=1 q 
 ....i (tpl[4)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=4) s jd=1 q 
 ....i (tpl[5)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=5) s jd=1 q 
 ....i (tpl[6)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=6) s jd=1 q 
 ....i (tpl[7)&($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=7) s jd=1 q
 ....i (tpl["X") i ($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)<6)&('+$e($g(^[nmsp]OI(ical,rrrr,3)),ddrrrr)) s jd=1
 ....i (tpl["+") i ($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)=7)!(+$e($g(^[nmsp]OI(ical,rrrr,3)),ddrrrr)) s jd=1
 ...// kontrola postaru
 ...s val=$e($g(^[nmsp]OI(ical,rrrr,2)),ddrrrr) i '$d(v(val)) s jd=0
 ..// dlouhodoba platnost
 ..s cnt="" f  s cnt=$o(ma(cnt)) q:(cnt="")!('jd)  d
 ...s val=+$e($g(^[nmsp]OI(ical,rrrr,cnt)),ddrrrr)
 ...i cnt=8 d
 ....//prazdniny vcetne jarnich
 ....s val=+$e($g(^[nmsp]OI(ical,rrrr,blo,cnt)),ddrrrr)
 ....//prazdniny bez jarnich
 ....i '$d(^[nmsp]OI(ical,rrrr,blo,cnt)) d
 .....s val=+$e($g(^[nmsp]OI(ical,rrrr,6)),ddrrrr)
 ...i ma(cnt)'=val s jd=0
 ..// jede
 ..i $d(arrom(13)) i '$d(arrom(13,ahrl)) s jd=0
 ..// nejede
 ..i $d(arrom(22)) i $d(arrom(22,ahrl)) s jd=0
 .i jd d
 ..s out("arr",1,ahrl)=1
 ..//rozpis dnu 1 Po - 7 Ne 
 ..s out("arr",2,(+$e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)),ahrl)=1
 ..//pracovni dny
 ..i ($e($g(^[nmsp]OI(ical,rrrr,1)),ddrrrr)<6)&('+$e($g(^[nmsp]OI(ical,rrrr,3)),ddrrrr)) s out("arr",2,"X",ahrl)=1
 ..//svatky
 ..i +$e($g(^[nmsp]OI(ical,rrrr,3)),ddrrrr) s out("arr",2,"SV",ahrl)=1
 ..//rozpis dnu 1 Po - 7 Ne
 q 0
 //
mkArrOm(idfa,nmsp,hrltufrom,hrlfrom,hrlto,arr)
 // s err=$$mkArrOm(idfa,nmsp,hrltufrom,hrlfrom,hrlto,arr)
 // rozbali omezeni do pole
 // hrltufrom ... hrl casove varianty turnusu od
 // hrlfrom   ... statistika od
 // hrlto     ... statistika do
 // arr(11)=znak@dat jede jen
 // arr(12)=znak@dat jede take
 // arr(13)=znak@dat jede
 // arr(14)=znak@dat jede jen v sudych tydnech od do
 // arr(15)=znak@dat jede jen v lichych tydnech od do
 // arr(22)=znak@dat nejede
 // 
 n (idfa,nmsp,hrltufrom,hrlfrom,hrlto,arr)
 s $zt="err2" s err=""
 s mydat=$$nd^OBapiED(hrltufrom,0)
 //dd.mm platnosti turnusu od
 s dtufrom=$p(mydat,".",1,2)
 //rrrr od
 s rrrrfrom=$p(mydat,".",3)
 //rrrr do
 s rrrrto=$p($$nd^OBapiED(hrlto,0),".",3)
 f id=11,12,13,14,15,22 {
	 s val=$p($g(arr(id)),"@",2)
	 i val="" k arr(id) continue
 	 //platnosti sestavuju pro rrrrfrom-1 abych postihnul omezeni prechazejici rok
 	 f rrrr=(rrrrfrom-1):1:rrrrto {
	 	s arrrr=rrrr
 		f cnt=1:1 {
	 		s tmp=$p(val,"#",cnt) i tmp="" q
 			s dfrom=$p(tmp,":",1) s dto=$p(tmp,":",2) i dto="" s dto=dfrom
 			i dfrom="" continue
 			//muze se stat, ze maji zadano 29.2. a to nektery rok neprojde 
 			s ahrlfrom=$$dn^OBapiED(dfrom_"."_arrrr) i ahrlfrom="" continue
 			//posun roku v platnosti
 			i $$dn^OBapiED(dto_"."_arrrr)<ahrlfrom s arrrr=arrrr+1
 			//muze se stat, ze maji zadano 29.2. a to nektery rok neprojde
 			s ahrlto=$$dn^OBapiED(dto_"."_arrrr) i ahrlto="" continue
 			//naplneni hrl do pole
 			f hrl=ahrlfrom:1:ahrlto s arr(id,hrl)=""
 		}
 		i $o(arr(id,""))="" k arr(id)
 	 }
 }
 q 0
 //
 /*
test
 s wrk=$$gWrkJB^OBapiED() s idfa="VS_CSAD" s zp=1340 s nmsp="user"
 s glb="^||w"
 ;; okres
 s blo=$p($g(^[nmsp]OI("OKRES")),"$")
 s:$g(^[nmsp]OI("OKRES",zp#100))'="" blo=$g(^[nmsp]OI("OKRES",zp#100))
 ;; =====
 s ^CacheTempJB(wrk,"dta",1)=$$dn^OBapiED("2.1.2019")
 s ^CacheTempJB(wrk,"dta",2)=$$dn^OBapiED("31.12.2019")
 s ^CacheTempJB(wrk,"dta",3)=blo
 s ^CacheTempJB(wrk,"arr",1,17)=""
 s err=$$mkStaTur(idfa,nmsp,zp,wrk,"","")
 w !,err,!
 zw ^CacheTempJB(wrk,"arr")
 //k @glb m @glb=^CacheTempJB(wrk) k ^CacheTempJB(wrk) 
 //k arri s arri("glb")=glb s err=$$mkStaTur(idfa,nmsp,zp,"",.arri,"")
 //w !,err,!
 //zw @glb
 q 
 */
 //
err s $zt="" k out q:$g(err)'="" "1~"_err  q "1~"_$ze
err2 s $zt="" k arr q "1~"_$ze
]]></Routine>


<Routine name="OBapiEDUsrDocRz" type="INT" languagemode="0" timestamp="64503,51418.648469"><![CDATA[
OBapiEDUsrDocRz q
lUsrDocRz(idfa,nmsp,in,out)
 // vstup:
 //    in("rrmm",rrmm)=""        - hleda jen v obdobi rrmm
 //    in("rrrrmm",rrrrmm)=""    - hleda jen v obdobi rrrrmm
 //    in("zp",zp)=""            - hleda jen v zp
 //    in("prv",prv)=""          - hleda jen v provozovne
 //    in("spz",rz)=""     	     - hleda jen rz
 // vystup:
 //    ^CacheTempJB(out,zp,rrrrmm,rz)=""
 n (idfa,nmsp,in,out)
 s $zt="err" k out s err="" s out=$$gWrkJB^OBapiED()
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 // uprava filtru
 s dz=$$gFaDz^OBapiED(idfa)
 s rrmm="" f  s rrmm=$o(in("rrmm",rrmm)) q:rrmm=""  s in("rrrrmm",$$rrrrmm^OBapiED(rrmm))=""
 s idprv="" f  s idprv=$o(in("prv",idprv)) q:idprv=""  s in("zp",((dz*100)+idprv))=""
 // vyhledani
 s zp="" f  s zp=$o(^[nmsp]OBjbD(idfa,zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .s rrrrmm="" f  s rrrrmm=$o(^[nmsp]OBjbD(idfa,zp,"usrdspz",rrrrmm)) q:rrrrmm=""  d
 ..i $d(in("rrrrmm")) q:'$d(in("rrrrmm",rrrrmm))
 ..s rz="" f  s rz=$o(^[nmsp]OBjbD(idfa,zp,"usrdspz",rrrrmm,rz)) q:rz=""  d
 ...i $d(in("spz")) q:'$d(in("spz",rz))
 ...s ^CacheTempJB(out,zp,rrrrmm,rz)=""
 //
 q 0
gUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out)
 //rrmm je obdobi ve tvaru rrmm nebo rrrrmm
 //out("dta",1)=ns
 //out("dta",2)=km
 //out("dta",3)=phm
 n (idfa,nmsp,zp,rrmm,rz,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(rz)="" q "1~rz="
 //
 s val=$g(^[nmsp]OBjbD(idfa,zp,"usrdspz",$$rrrrmm^OBapiED(rrmm),rz))
 f cnt=1:1:3 s out("dta",cnt)=$p(val,"~",cnt)
 //
 q 0
sUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out)
 //rrmm je obdobi ve tvaru rrmm nebo rrrrmm
 //in("dta",1)=ns
 //in("dta",2)=km
 //in("dta",3)=phm
 //in("idos")=mlp~loginname~fullname
 n (idfa,nmsp,zp,rrmm,rz,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(rz)="" q "1~rz="
 // vymazani puvodniho zaznamu
 k arr s arr("idos")=$g(in("idos"))
 s err=$$dUsrDocRz^OBapiED(idfa,nmsp,zp,rrmm,rz,.arr,"") zt:+err "merr" s err=""
 //
 s dz=$$gFaDz^OBapiED(idfa)
 s rrrrmm=$$rrrrmm^OBapiED(rrmm)
 // zapis zaznamu
 s val="" f cnt=1:1:3 s $p(val,"~",cnt)=$g(in("dta",cnt))
 s ^[nmsp]OBjbD(idfa,zp,"usrdspz",rrrrmm,rz)=val
 // zapis do evidence km pro udrzbu
 i $$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) d      //kontrola, zda je pro firmu, provoz a obdobi zapis povolen  
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(dz,"A",zp,rrrrmm,($$gmaxhrlrrmm^OBapiED(rrrrmm)_"~USR~"_rz))
 .i rrrrmm>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,rrrrmm,($$gmaxhrlrrmm^OBapiED(rrrrmm)_"~USR~"_rz))
 .k arr s arr("Spz",rz)=""
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),"||"_($p($g(in("idos")),"~",3)),iddok,.arr) zt:+err "merr" s err=""
 .k arr s arr("Spz",rz)="" s arr("Spz",rz,$$gmaxhrlrrmm^OBapiED(rrrrmm))=$g(in("dta",2))
 .s os="||"_($p($g(in("idos")),"~",3))
 .s err=$$KmWrite^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),"||"_($p($g(in("idos")),"~",3)),iddok,.arr) zt:+err "merr" s err=""
 //
 q 0
dUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out)
 //rrmm je obdobi ve tvaru rrmm nebo rrrrmm
 //in("idos")=mlp~loginname~fullname
 n (idfa,nmsp,zp,rrmm,rz,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(rz)="" q "1~rz="
 //
 s dz=$$gFaDz^OBapiED(idfa)
 s rrrrmm=$$rrrrmm^OBapiED(rrmm)
 k ^[nmsp]OBjbD(idfa,zp,"usrdspz",rrrrmm,rz)
 i $$canSaveKmToVehicle^OBapiED(idfa,nmsp,zp,rrmm) d  //kontrola, zda je pro firmu, provoz a obdobi zapis povolen
 .// zruseni v evidenci km pro udrzbu 
 .s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(dz,"A",zp,rrrrmm,($$gmaxhrlrrmm^OBapiED(rrrrmm)_"~USR~"_rz))
 .i rrrrmm>201708 s iddok=$$GetKmIdDok^ALVAVOZIDLAapiC(idfa,"A",zp,rrrrmm,($$gmaxhrlrrmm^OBapiED(rrrrmm)_"~USR~"_rz))
 .k arr s arr("Spz",rz)=""
 .s os="||"_($p($g(in("idos")),"~",3))
 .// KmDelete(idfa,nmsp,usr,iddok,in)
 .s err=$$KmDelete^ALVAVOZIDLAapiC(idfa,$$GetSystemDB^ALVAVOZIDLAapiC(),"||"_($p($g(in("idos")),"~",3)),iddok,.arr) zt:+err "merr" s err=""
 s out("stt")=1
 //
 q 0
isUsrDocRz(idfa,nmsp,zp,rrmm,rz,in,out)
 //rrmm je obdobi ve tvaru rrmm nebo rrrrmm
 n (idfa,nmsp,zp,rrmm,rz,in,out)
 s $zt="err" k out s err=""
 //
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(rrmm)="" q "1~rrmm="
 i $g(rz)="" q "1~rz="
 //
 s rrrrmm=$$rrrrmm^OBapiED(rrmm)
 s out=$d(^[nmsp]OBjbD(idfa,zp,"usrdspz",rrrrmm,rz))
 //
 q 0
 //
lTemperHrl(idfa,nmsp,hrlfrom,hrlto,in,out)
 n (idfa,nmsp,hrlfrom,hrlto,in,out)
 //in("zp",zp)=""	... hleda jen v zp
 //vrati ^||wrk.ALVA.AD(out,zp,hrl)=temper1~temper1
 k out s err="" s $zt="err"
 s out=$$gWrkALVAAD^OBapiED() k ^||wrk.ALVA.AD(out)
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 s zp="" f  s zp=$o(^[nmsp]OBjbD(idfa,zp)) q:zp=""  d
 .i $d(in("zp")) q:'$d(in("zp",zp))
 .s hrl="" s:$g(hrlfrom) hrl=hrlfrom-.01
 .f  s val="" s hrl=$o(^[nmsp]OBjbD(idfa,zp,"temper",hrl),1,val) q:(hrl="")!((+$g(hrlto))&(hrl>hrlto))  d
 ..s ^||wrk.ALVA.AD(out,zp,hrl)=val
 q 0
gTemperHrl(idfa,nmsp,zp,hrl,in,out)
 //out("dta",1)=prvni mereni
 //out("dta",2)=druhe mereni
 n (idfa,nmsp,zp,hrl,in,out)
 k out s err="" s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 s val=$g(^[nmsp]OBjbD(idfa,zp,"temper",hrl))
 f cnt=1:1:2 s out("dta",cnt)=$p(val,"~",cnt)
 q 0
sTemperHrl(idfa,nmsp,zp,hrl,in,out)
 n (idfa,nmsp,zp,hrl,in,out)
 //in("dta",1)=prvni mereni
 //in("dta",2)=druhe mereni
 k out s err="" s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 s val="" f cnt=1:1:2 s $p(val,"~",cnt)=$g(in("dta",cnt)) 
 s ^[nmsp]OBjbD(idfa,zp,"temper",hrl)=val
 q 0
dTemperHrl(idfa,nmsp,zp,hrl,in,out)
 n (idfa,nmsp,zp,hrl,in,out)
 k out s err="" s $zt="err"
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(zp)="" q "1~zp="
 i $g(hrl)="" q "1~hrl="
 k ^[nmsp]OBjbD(idfa,zp,"temper",hrl)
 q 0
err s $zt="" k out q "1"_"~"_$ze_"/"_$tr($g(err),"~","/")
]]></Routine>


<Routine name="OBapiEDZst" type="INT" languagemode="0" timestamp="65541,40987.283453"><![CDATA[
OBapiEDZst q
 // api funkce, zastavky
gZst(idfa,nmsp,czst,in,out)
 // err=$$gZst(idfa,nmsp,czst,in,out) - vrati data zastavky
 //  - in
 //  - out
 // vraci data zastavky v out("dta",cnt...
 //  out("dta",1)=nazev (dle CRZ)
 //  out("dta",2)=okres                      		(pouze u zastavek z JR)
 //  out("dta",3)=cisloCRZ                   		(pouze u zastavek z JR)
 //  out("dta",4)=upraveny nazev pro MHD     		(pouze u zastavek z JR)
 //  out("dta",5)=nazev pro strojky 20 znk   		(pouze u zastavek z JR)
 //  out("dta",6)=nazev pro strojky 32 znk   		(pouze u zastavek z JR)
 //  out("dta",7)=nazev pro strojky 28 znk   		(pouze u zastavek z JR)
 //  out("dta",8)=GPSN severni sirka /latitude  	(pouze u zastavek z JR)
 //  out("dta",9)=GPSE vychodni delka / longitude   (pouze u zastavek z JR)
 n (idfa,nmsp,czst,in,out)
 s $zt="err" k out s err=""
 i $g(idfa)="" q "1~idfa="
 i $g(nmsp)="" q "1~nmsp="
 i $g(czst)="" q "1~czst="
 // zastavka z JR
 i czst'["/" d
 .k arr s err=$$gZst^JRapi(idfa,nmsp,czst,"",.arr) zt:+err "merr" s err=""
 .s out("dta",1)=$g(arr("dta",1))_","_$g(arr("dta",2))_","_$g(arr("dta",3))
 .s out("dta",2)=$g(arr("dta",4))
 .s out("dta",3)=$g(arr("dta",14))
 .s out("dta",4)=$g(arr("dta",13))
 .s out("dta",5)=$g(arr("dta",11))
 .s out("dta",6)=$g(arr("dta",10))
 .s out("dta",7)=$g(arr("dta",18))
 .s out("dta",8)=$g(arr("dta",19))
 .s out("dta",9)=$g(arr("dta",20))
 // lokalni zastavka
 i czst["/" d
 .k arr s err=$$gCisItm^OBapiED(idfa,nmsp,3,(+czst),"",.arr) zt:+err "merr" s err=""
 .s val=$g(arr("arr",(+czst)))
 .s out("dta",1)=$p(val,"~",2)
 .s out("dta",2)=""
 .s out("dta",3)=""
 .s out("dta",4)=""
 .s out("dta",5)=""
 .s out("dta",6)=""
 .s out("dta",7)=""
 .s out("dta",8)=""
 .s out("dta",9)=""
 q 0
 //
rnZst(idfa,nmsp,glb,in,out)
 // err=$$rnZst(idfa,nmsp,glb,.in,.out) - precislovani zastavek, volano z JR
 //  - glb - global, ve kterem je tabulka na precislovani
 //  - in  -
 //  - out -
 n (idfa,nmsp,glb,in,out)
 s $zt="err" k out s err=""
 i $g(nmsp)="" q "1~nmsp="
 //
 s D=":"
 // =======                           
 // turnusy
 // =======
 s zp="" f  s zp=$o(^[nmsp]OBT(zp)) q:zp=""  d
 .s tu="" f  s tu=$o(^[nmsp]OBT(zp,tu)) q:tu=""  d
 ..s ho="" f  s ho=$o(^[nmsp]OBT(zp,tu,ho)) q:ho=""  d
 ...s ca="" f  s ca=$o(^[nmsp]OBT(zp,tu,ho,ca)) q:ca=""  d
 ....s (ax,a)=$g(^[nmsp]OBT(zp,tu,ho,ca)),co=$p(a,D,2)
 ....q:co<4!(co>7)
 ....f i=5,6 d
 .....s zz=$p(a,D,i) q:zz["/"  s zz=+zz
 .....s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 .....s xb=b i zz["~" s $p(zz,"~")=b,xb=zz 
 .....s $p(a,D,i)=xb
 ....s:ax'=a ^[nmsp]OBT(zp,tu,ho,ca)=a
 // =====
 // spoje
 // =====
 s l="" f  s l=$o(^[nmsp]OBS(l)) q:l=""  d
 .s s="" f  s s=$o(^[nmsp]OBS(l,s)) q:s=""  d
 ..s (ax,a)=$g(^[nmsp]OBS(l,s)) f i=6,7 d
 ...s zz=$p(a,D,i) q:zz["/"  s zz=+zz
 ...s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 ...s $p(a,D,i)=b
 ..s:ax'=a ^[nmsp]OBS(l,s)=a
 ..//trasa spoje
 ..s cnt="" f  s cnt=$o(^[nmsp]OBS(l,s,"T","trs",cnt)) q:cnt=""  d
 ...s (ax,a)=$g(^[nmsp]OBS(l,s,"T","trs",cnt))
 ...s zz=$p(a,D,2) q:zz["/"  s zz=+zz
 ...s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 ...s $p(a,D,2)=b
 ...s:ax'=a ^[nmsp]OBS(l,s,"T","trs",cnt)=a
 ..//casova varianta
 ..s ho="" f  s ho=$o(^[nmsp]OBS(l,s,"T",ho)) q:ho=""  d
 ...s (ax,a)=$g(^[nmsp]OBS(l,s,"T",ho)) f i=6,7 d
 ....s zz=$p(a,D,i) q:zz["/"  s zz=+zz
 ....s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 ....s $p(a,D,i)=b
 ...s:ax'=a ^[nmsp]OBS(l,s,"T",ho)=a
 ...//trasa spoje
 ...s cnt="" f  s cnt=$o(^[nmsp]OBS(l,s,"T",ho,"trs",cnt)) q:cnt=""  d
 ....s (ax,a)=$g(^[nmsp]OBS(l,s,"T",ho,"trs",cnt))
 ....s zz=$p(a,D,2) q:zz["/"  s zz=+zz
 ....s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 ....s $p(a,D,2)=b
 ....s:ax'=a ^[nmsp]OBS(l,s,"T",ho,"trs",cnt)=a
 // =================
 // ciselnik prejezdu
 // =================
 s wrkJB=$$gWrkJB^OBapiED()
 k ^CacheTempJB(wrkJB)
 m ^CacheTempJB(wrkJB)=^[nmsp]OI(idfa,"jb","turnusy","prejezd")
 k ^[nmsp]OI(idfa,"jb","turnusy","prejezd")
 s id="" f  s id=$o(^CacheTempJB(wrkJB,id)) q:id=""  d
 .s newid=id
 .f cnt=1,2 d
 ..s zz=$p(newid,"~",cnt) d
 ...q:zz["/"
 ...s zz=+zz
 ...s bb="s b=$g("_glb_zz_"))" x bb q:b=""
 ...s $p(newid,"~",cnt)=b
 .m ^[nmsp]OI(idfa,"jb","turnusy","prejezd",newid)=^CacheTempJB(wrkJB,id)
 k ^CacheTempJB(wrkJB)
 // ============================================
 // zastavky pro priplatek ve ztizenem prostredi
 // ============================================
 k ^CacheTempJB(wrkJB)
 m ^CacheTempJB(wrkJB)=^[nmsp]OI(idfa,"jb","stzprac",1)
 k ^[nmsp]OI(idfa,"jb","stzprac",1)
 s id="" f {
	 s id=$o(^CacheTempJB(wrkJB,id)) i id="" q
	 s zz=id s b=""
	 i zz'["/" {
		 s zz=+zz
		 s bb="s b=$g("_glb_zz_"))"
		 x bb
	 }
	 i b="" s b=zz
	 s ^[nmsp]OI(idfa,"jb","stzprac",1,b)=""
 }
 s os="" f {
	 s os=$o(^[nmsp]OI(idfa,"jb","stzprac",2,os)) i os="" q
	 s val=$g(^[nmsp]OI(idfa,"jb","stzprac",2,os))
	 f cnt=1:1:$l(val,"~") {
		 s zz=$p(val,"~",cnt)
		 i zz["/" continue
		 i zz'="" {
			s b=""
	 		s zz=+zz
	 		s bb="s b=$g("_glb_zz_"))"
	 		x bb
	 		i b'="" s $p(val,"~",cnt)=b
		 }
	 }
	 s ^[nmsp]OI(idfa,"jb","stzprac",2,os)=val
 }
 k ^CacheTempJB(wrkJB)
 q 0
 //
impLokZstUni(idfa,nmsp,glb,in,out)
 n (idfa,nmsp,glb,in,out)
 s $zt="err" k out s err=""
 // univerzalni import zastavek
 // VSTUP
 // idfa
 // nmsp
 // glb  = nazev globalu se zastavkami pro import
 // vstup:
 //                                1   
 // @glb@("arr",1,idx,"dta",1)=$lb(nazev)
 // in("par",1)=0/1 ... zapisovat nove zastavky do databaze  0 ne / 1 ano
 // 
 // vystup:
 // @glb@("arr",101,idx)=$lb(czs,typ_sparovani), kde typ_dohledani 0 sparovano / 1 zavedno do db
 // 
 i $g(idfa)="" s err="idfa=" ztrap
 i $g(nmsp)="" s err="nmsp=" ztrap
 k arrcis s err=$$gCis^OBapiED(idfa,nmsp,3,"",.arrcis) i err ztrap
 	  s mywrk=$$gWrkALVAJR^JRapi() s glbwrk="^||wrk.ALVA.JR("_mywrk_")" k @glbwrk
	  // ===============	  
	  // indexovy soubor
	  // ===============
	  s err=$$gCis^OBapiED(idfa,nmsp,3,"",.arrcis) i err
	  s czs="" f {
		  s czs=$o(arrcis("arr",czs)) i czs="" q
		  s val=$g(arrcis("arr",czs))
		  s naz=$p(val,"~",2)
		  s @glbwrk@(1,naz)=czs
	  }
	  // =============
	  // porovnani dat
	  // =============
	  s idx="" f {
		  s idx=$o(@glb@("arr",1,idx)) i idx="" q
		  s myczs="" s typsparovani=0
		  s val=$g(@glb@("arr",1,idx,"dta",1))
		  s naz=$lg(val,1)
		  i naz'="" s myczs=$g(@glbwrk@(1,naz))
		  // cislo jsem nenasel a je nastaveno zavedeni do databaze
		  i (myczs="")&(+$g(in("par",1))) {
			  k arro s err=$$gNewIdCisItm^OBapiED(idfa,nmsp,3,"",.arro) i +err ztrap
			  s myczs=$g(arro("id"))
			  s val=""
			  s $p(val,"~",1)=$$cnvBezDia^OBapiED(naz)
			  s $p(val,"~",2)=naz
			  s $p(val,"~",3)=0
			  s $p(val,"~",4)=""
			  s $p(val,"~",5)=""
			  s err=$$sCisItm^OBapiED(idfa,nmsp,3,myczs,val,"","")
			  s typsparovani=1
			  //zapis do indexoveho globalu
			  s @glbwrk@(1,naz)=myczs
		  }
		  i (myczs'="") s @glb@("arr",101,idx)=$lb(myczs,typsparovani)
	  }
 q 0
 //
err
 s $zt="" k out
 q "1~"_$ze_"/"_$tr($g(err),"~","/")
 
]]></Routine>
</Export>
